  int iVar4;
  int *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  undefined in_XMM15 [16];
  string in_stack_ffffffffffffff90;
  string in_stack_ffffffffffffffa0;
  int in_stack_ffffffffffffffb0;
  runtime_itab *prVar5;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar3 = *(int **)(in_RDX + 8);
  h = *(runtime_hmap **)(in_RDX + 0x10);
  net_textproto_CanonicalMIMEHeaderKey(in_stack_ffffffffffffff90,in_stack_ffffffffffffffa0);
  piVar1 = extraout_RAX;
  prVar5 = extraout_RBX;
  if (extraout_RBX == (runtime_itab *)0x7) {
    if ((*(sdword *)extraout_RAX != 0x69617254) ||
       ((*(short *)((int)extraout_RAX + 4) != 0x656c || (*(char *)((int)extraout_RAX + 6) != 'r'))))
    goto LAB_006da0e9;
  }
  else if (extraout_RBX == (runtime_itab *)0xe) {
    if ((*extraout_RAX != 0x2d746e65746e6f43) ||
       ((*(sdword *)(extraout_RAX + 1) != 0x676e654c ||
        (*(short *)((int)extraout_RAX + 0xc) != 0x6874)))) goto LAB_006da0e9;
  }
  else if ((extraout_RBX != (runtime_itab *)0x11) || (runtime_memequal(), extraout_AL == '\0'))
  goto LAB_006da0e9;
  if (*piVar3 == 0) {
    runtime_convTstring(in_stack_ffffffffffffff90,
                        "bad trailer key47683715820312515:04:05.000000/debug/requestsHanifi_RohingyaPsalter_Pahlaviinvalid pointerjstmpllitinterptarinsecurepathzipinsecurepathinvalid kind %vX-Forwarded-For#multipartfilesAccept-Language/etc/mime.types()<>@,;:\\\"/[]?=html/template: contenteditableContainingOneofRequiredNumbersExtensionRanges is unavailable0601021504Z0700invalid booleannon-minimal tagunknown Go typeBelowExactAboveunclosed actionno dot in fieldtemplate clauseDiacriticalDot;DoubleRightTee;DownLeftVector;GreaterGreater;HorizontalLine;InvisibleComma;InvisibleTimes;LeftDownVector;LeftRightArrow;Leftrightarrow;LessSlantEqual;LongRightArrow;Longrightarrow;LowerLeftArrow;NestedLessLess;NotGreaterLess;NotLessGreater;NotSubsetEqual;NotVerticalBar;OpenCurlyQuote;ReverseElement;RightTeeVector;RightVectorBar;ShortDownArrow;ShortLeftArrow;SquareSuperset;TildeFullEqual;UpperLeftArrow;ZeroWidthSpace;curvearrowleft;doublebarwedge;downdownarrows;hookrightarrow;leftleftarrows;leftrightarrow;leftthreetimes;longrightarrow;looparrowright;nshortparallel;ntriangleright;rightarrowtail;rightharpoonup;trianglelefteq;upharpoonright; not a functionavx512vpopcntdqFailed to listencontext canceled.WithValue(type 0123456789abcdef0123456789ABCDEFapplication/grpctime: bad [0-9]*expected integerexpected newlineinvalid address hostLookupOrder=/etc/resolv.confnon-IPv4 addressnon-IPv6 addressunknown network no colon on line: value of type integer overflowgcshrinkstackofftracefpunwindoffGC scavenge waitGC worker (idle)SIGNONE: no trap out of bounds [/gc/gogc:percent, not a functiongc: unswept span KiB work (bg),  mheap.sweepgen=runtime: nelems=workbuf is emptymSpanList.removemSpanList.insertbad special kindbad summary dataruntime: addr = runtime: base = runtime: head =  already; errno=\nruntime stack:\ninvalid g statuscastogscanstatusbad g transitionschedule: in cgoGOTRACEBACK=nonereflect mismatch untyped locals missing stackmapbad symbol tablenon-Go function\n not in ranges:\nsigaction failedinvalid argumentinvalid exchangeobject is remotemessage too longno route to ..." /* TRUNCATED STRING LITERAL */
                       );
    runtime_convTstring(in_stack_ffffffffffffff90,piVar1);
    a.cap = in_stack_ffffffffffffffb0;
    a.array = (interface___ *)in_stack_ffffffffffffffa0.str;
    a.len = in_stack_ffffffffffffffa0.len;
    ~r0.data = piVar1;
    ~r0.tab = prVar5;
    fmt_Errorf(in_stack_ffffffffffffff90,a,~r0);
    *piVar3 = extraout_RAX_00;
    iVar4 = extraout_RBX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RBX_01;
      extraout_R11[1] = extraout_RCX[1];
      piVar3 = extraout_RCX;
      iVar4 = extraout_RBX_01;
    }
    piVar3[1] = iVar4;
    return;
  }
LAB_006da0e9:
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_008909e0,h,in_stack_ffffffffffffff90,piVar1);
  *(undefined (*) [16])(extraout_RAX_01 + 1) = in_XMM15;
  puVar2 = extraout_RAX_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = extraout_RCX_00;
    puVar2 = extraout_RAX_02;
  }
  *puVar2 = 0;
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack
// DWARF original prototype: void net/http.(*body).Read(net/http.body * b, []uint8 p, int n, int n,
// error err)

void net_http___body__Read(net_http_body *b,__uint8 p,int n,int n_1,error err)

{
  error err_00;
  int unaff_R14;
  bool bVar1;
  __uint8 in_stack_ffffffffffffff90;
  undefined in_stack_ffffffffffffffa8 [15];
  error err_local;
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  LOCK();
  bVar1 = (b->mu).state == 0;
  if (bVar1) {
    (b->mu).state = 1;
  }
  UNLOCK();
  if (!bVar1) {
    sync___Mutex__lockSlow(&b->mu);
  }
  local_20._8_8_ = &b->mu;
  local_20._0_8_ = net_http___body__Read_func1;
  local_10 = (code **)local_20;
  if (b->closed == false) {
    err_00.data._7_1_ = 1;
    err_00._0_15_ = in_stack_ffffffffffffffa8;
    net_http___body__readLocked(b,in_stack_ffffffffffffff90,n,err_00);
    (**local_10)();
    return;
  }
  net_http___body__Read_func1();
  return;
}



// WARNING: Unknown calling convention

void net_http___body__Read_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  sync___Mutex__Unlock(*(sync_Mutex **)(in_RDX + 8));
  return;
}



void net_http___body__readLocked(net_http_body *b,__uint8 p,int n,error err)

{
  char extraout_AL;
  int extraout_RAX;
  runtime_itab *extraout_RAX_00;
  runtime_itab *extraout_RAX_01;
  runtime_itab *prVar1;
  void *x;
  runtime_itab *tab;
  net_http_body *extraout_RSI;
  net_http_body *pnVar2;
  io_LimitedReader *lr_1;
  bool ~r0;
  io_LimitedReader *lr;
  undefined8 extraout_RDI;
  undefined8 *extraout_R11;
  int unaff_R14;
  error in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (b->sawEOF == false) {
    (*(code *)((b->src).tab)->fun[0])((b->src).data);
    prVar1 = tab;
    if ((io_EOF.tab == tab) &&
       (runtime_ifaceeq(tab,x,io_EOF.data,~r0), prVar1 = tab, extraout_AL != '\0')) {
      b->sawEOF = true;
      prVar1 = tab;
      if ((b->hdr)._type == (internal_abi_Type *)0x0) {
        if (((b->src).tab == (runtime_itab *)go_itab__io_LimitedReader_io_Reader) &&
           (0 < *(int *)((int)(b->src).data + 0x10))) {
          prVar1 = io_ErrUnexpectedEOF.tab;
        }
      }
      else {
        net_http___body__readTrailer(b,in_stack_ffffffffffffffb8);
        if (extraout_RAX_00 != (runtime_itab *)0x0) {
          b->sawEOF = false;
          b->closed = true;
          prVar1 = extraout_RAX_00;
        }
        (b->hdr)._type = (internal_abi_Type *)0x0;
        pnVar2 = b;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11 = extraout_RDI;
          prVar1 = extraout_RAX_01;
          pnVar2 = extraout_RSI;
        }
        (pnVar2->hdr).data = (void *)0x0;
      }
    }
    if ((((prVar1 == (runtime_itab *)0x0) && (0 < extraout_RAX)) &&
        ((b->src).tab == (runtime_itab *)go_itab__io_LimitedReader_io_Reader)) &&
       (*(int *)((int)(b->src).data + 0x10) == 0)) {
      b->sawEOF = true;
    }
    if ((b->sawEOF != false) && (b->onHitEOF != (func__ **)0x0)) {
      (**b->onHitEOF)();
    }
    return;
  }
  return;
}



// WARNING: Variable defined which should be unmapped: peekSize

void net_http_seeUpcomingDoubleCRLF(bufio_Reader *r,bool ~r0)

{
  error ~r1;
  char cVar1;
  char extraout_AL;
  runtime_itab *n;
  uint extraout_RBX;
  void *extraout_RDI;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffffc8;
  int peekSize;
  void *local_18;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  n = (runtime_itab *)0x4;
  do {
    ~r1.data = local_18;
    ~r1.tab = n;
    bufio___Reader__Peek(r,(int)n,in_stack_ffffffffffffffc8,~r1);
    if (net_http_doubleCRLF.len <= (int)extraout_RBX) {
      if (extraout_RBX < extraout_RBX - net_http_doubleCRLF.len) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      if (net_http_doubleCRLF.len == extraout_RBX - (extraout_RBX - net_http_doubleCRLF.len)) {
        runtime_memequal();
        cVar1 = extraout_AL;
        local_18 = extraout_RDI;
      }
      else {
        cVar1 = '\0';
      }
      if (cVar1 != '\0') {
        return;
      }
    }
    if (extraout_RDI != (void *)0x0) {
      return;
    }
    n = (runtime_itab *)((int)&n->inter + 1);
  } while( true );
}



void net_http___body__readTrailer(net_http_body *b,error ~r0)

{
  internal_abi_Type *piVar1;
  undefined8 uVar2;
  undefined8 uVar3;
  __uint8 ~r0_00;
  error ~r1;
  char extraout_AL;
  char extraout_AL_01;
  char extraout_AL_00;
  undefined8 extraout_RAX;
  net_textproto_MIMEHeader hdr;
  runtime_hmap *prVar4;
  undefined8 extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 uVar5;
  undefined8 *extraout_RAX_02;
  undefined8 *puVar6;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  void *x;
  void *pvVar7;
  int extraout_RBX;
  void *~r0_01;
  runtime_itab *tab;
  bool ~r0_02;
  int extraout_RDI;
  net_textproto_MIMEHeader ~r0_03;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  undefined8 *extraout_R11_02;
  int unaff_R14;
  undefined in_XMM15 [16];
  string in_stack_ffffffffffffff00;
  int in_stack_ffffffffffffff10;
  runtime_itab *in_stack_ffffffffffffff18;
  void *in_stack_ffffffffffffff20;
  net_textproto_Reader local_90;
  runtime_hiter local_68;
  
  while (&local_90.buf <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.cap = in_stack_ffffffffffffff10;
  ~r0_00.array = in_stack_ffffffffffffff00.str;
  ~r0_00.len = in_stack_ffffffffffffff00.len;
  ~r1.data = in_stack_ffffffffffffff20;
  ~r1.tab = in_stack_ffffffffffffff18;
  bufio___Reader__Peek(b->r,2,~r0_00,~r1);
  if ((net_http_singleCRLF.len == extraout_RBX) && (runtime_memequal(), extraout_AL != '\0')) {
    bufio___Reader__Discard(b->r,2,(int)b,(error)in_stack_ffffffffffffff00);
    return;
  }
  if (extraout_RBX < 2) {
    return;
  }
  if (extraout_RDI == 0) {
    net_http_seeUpcomingDoubleCRLF(b->r,SUB81(extraout_RBX,0));
    if (extraout_AL_00 == '\0') {
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_01);
      extraout_RAX_02[1] = 0x32;
      *extraout_RAX_02 = &DAT_008c8c73;
      return;
    }
    local_90.R = b->r;
    local_90.dot = in_XMM15._0_8_;
    local_90.buf.array = in_XMM15._8_8_;
    net_textproto_readMIMEHeader
              (&local_90,0x7fffffffffffffff,0x7fffffffffffffff,~r0_03,
               (error)in_stack_ffffffffffffff00);
    if (tab != (runtime_itab *)0x0) {
      if ((io_EOF.tab == tab) && (runtime_ifaceeq(tab,x,io_EOF.data,~r0_02), extraout_AL_01 != '\0')
         ) {
        return;
      }
      return;
    }
    piVar1 = (b->hdr)._type;
    if (piVar1 != (internal_abi_Type *)0x0) {
      pvVar7 = (b->hdr).data;
      if (piVar1->Hash == 0xa28aa5f0) {
        if (piVar1 == (internal_abi_Type *)&DAT_008a03c0) {
          if (*(int *)((int)pvVar7 + 0xa8) == 0) {
            uVar5 = extraout_RAX;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier2();
              *extraout_R11 = extraout_RAX_00;
              extraout_R11[1] = *(undefined8 *)((int)pvVar7 + 0xa8);
              uVar5 = extraout_RAX_00;
            }
            *(undefined8 *)((int)pvVar7 + 0xa8) = uVar5;
          }
          else {
            prVar4 = (runtime_hmap *)FUN_0046cdab();
            runtime_mapiterinit((internal_abi_MapType *)&DAT_008909e0,prVar4,&local_68);
            while ((void **)local_68.key != (void **)0x0) {
                    // WARNING: Load size is inaccurate
              uVar5 = *(undefined8 *)((int)local_68.elem + 8);
              uVar2 = *(undefined8 *)((int)local_68.elem + 0x10);
                    // WARNING: Load size is inaccurate
              uVar3 = *local_68.elem;
              runtime_mapassign_faststr
                        ((internal_abi_MapType *)&DAT_008909e0,
                         *(runtime_hmap **)((int)pvVar7 + 0xa8),in_stack_ffffffffffffff00,
                         *local_68.key);
              extraout_RAX_05[1] = uVar5;
              extraout_RAX_05[2] = uVar2;
              puVar6 = extraout_RAX_05;
              if (runtime_writeBarrier._0_4_ != 0) {
                runtime_gcWriteBarrier2();
                *extraout_R11_02 = uVar3;
                extraout_R11_02[1] = *extraout_RAX_06;
                puVar6 = extraout_RAX_06;
              }
              *puVar6 = uVar3;
              runtime_mapiternext(&local_68);
            }
          }
        }
      }
      else if ((piVar1->Hash == 0xebf45122) && (piVar1 == (internal_abi_Type *)&DAT_008727a0)) {
        if (*(int *)((int)pvVar7 + 0x78) == 0) {
          uVar5 = extraout_RAX;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_00 = extraout_RAX_01;
            extraout_R11_00[1] = *(undefined8 *)((int)pvVar7 + 0x78);
            uVar5 = extraout_RAX_01;
          }
          *(undefined8 *)((int)pvVar7 + 0x78) = uVar5;
        }
        else {
          prVar4 = (runtime_hmap *)FUN_0046cdab();
          runtime_mapiterinit((internal_abi_MapType *)&DAT_008909e0,prVar4,&local_68);
          while ((void **)local_68.key != (void **)0x0) {
                    // WARNING: Load size is inaccurate
            uVar5 = *(undefined8 *)((int)local_68.elem + 8);
            uVar2 = *(undefined8 *)((int)local_68.elem + 0x10);
                    // WARNING: Load size is inaccurate
            uVar3 = *local_68.elem;
            runtime_mapassign_faststr
                      ((internal_abi_MapType *)&DAT_008909e0,*(runtime_hmap **)((int)pvVar7 + 0x78),
                       in_stack_ffffffffffffff00,*local_68.key);
            extraout_RAX_03[1] = uVar5;
            extraout_RAX_03[2] = uVar2;
            puVar6 = extraout_RAX_03;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier2();
              *extraout_R11_01 = uVar3;
              extraout_R11_01[1] = *extraout_RAX_04;
              puVar6 = extraout_RAX_04;
            }
            *puVar6 = uVar3;
            runtime_mapiternext(&local_68);
          }
        }
      }
    }
    return;
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack
// DWARF original prototype: void net/http.(*body).Close(net/http.body * b, error ~r0, error ~r0)

void net_http___body__Close(net_http_body *b,error ~r0,error ~r0_1)

{
  __uint8 buf;
  error err;
  int extraout_RAX;
  int64 n;
  int iVar1;
  void *x;
  runtime_itab *tab;
  bool ~r0_00;
  io_LimitedReader *lr;
  int unaff_R14;
  bool bVar2;
  io_Writer in_stack_ffffffffffffff70;
  io_Reader in_stack_ffffffffffffff80;
  error in_stack_ffffffffffffff90;
  int in_stack_ffffffffffffffa0;
  undefined7 in_stack_ffffffffffffffa8;
  void *in_stack_ffffffffffffffb0;
  undefined local_20 [16];
  code **local_10;
  
  while (&local_10 <= *(code ****)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  LOCK();
  bVar2 = (b->mu).state == 0;
  if (bVar2) {
    (b->mu).state = 1;
  }
  UNLOCK();
  if (!bVar2) {
    sync___Mutex__lockSlow(&b->mu);
  }
  local_20._8_8_ = &b->mu;
  local_20._0_8_ = net_http___body__Close_func1;
  local_10 = (code **)local_20;
  if (b->closed == false) {
    if ((b->sawEOF == false) &&
       (((b->hdr)._type != (internal_abi_Type *)0x0 || (b->closing == false)))) {
      if (b->doEarlyClose == false) {
        buf.cap = in_stack_ffffffffffffffa0;
        buf.array = (uint8 *)in_stack_ffffffffffffff90.tab;
        buf.len = (int)in_stack_ffffffffffffff90.data;
        err.tab._7_1_ = 1;
        err.tab._0_7_ = in_stack_ffffffffffffffa8;
        err.data = in_stack_ffffffffffffffb0;
        io_copyBuffer(in_stack_ffffffffffffff70,in_stack_ffffffffffffff80,buf,(int64)io_Discard.tab,
                      err);
      }
      else if (((b->src).tab == (runtime_itab *)go_itab__io_LimitedReader_io_Reader) &&
              (0x40000 < *(int *)((int)(b->src).data + 0x10))) {
        b->earlyClose = true;
      }
      else {
        io_CopyN(in_stack_ffffffffffffff70,in_stack_ffffffffffffff80,(int64)io_Discard.tab,
                 (int64)io_Discard.data,in_stack_ffffffffffffff90);
        iVar1 = extraout_RAX;
        if (io_EOF.tab == tab) {
          runtime_ifaceeq(tab,x,io_EOF.data,~r0_00);
        }
        if (iVar1 == 0x40000) {
          b->earlyClose = true;
        }
      }
    }
    b->closed = true;
    (**local_10)();
    return;
  }
  net_http___body__Close_func1();
  return;
}



// WARNING: Unknown calling convention

void net_http___body__Close_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  sync___Mutex__Unlock(*(sync_Mutex **)(in_RDX + 8));
  return;
}



void net_http_bodyLocked_Read(net_http_bodyLocked bl,__uint8 p,int n,error err)

{
  error err_00;
  void *unaff_RBP;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((bl.b)->closed != false) {
    return;
  }
  err_00.data = unaff_RBP;
  err_00.tab = in_stack_fffffffffffffff0;
  net_http___body__readLocked(bl.b,in_stack_ffffffffffffffd8,n,err_00);
  return;
}



void net_http_parseContentLength(string cl,int64 ~r0,error ~r1)

{
  char cVar1;
  __interface___ a;
  error ~r0_00;
  uint64 n;
  runtime_itab *in_RBX;
  int extraout_RBX;
  int unaff_R14;
  string in_stack_ffffffffffffffa0;
  error in_stack_ffffffffffffffb0;
  int in_stack_ffffffffffffffc0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  for (; (in_RBX != (runtime_itab *)0x0 &&
         ((((cVar1 = *(char *)~r0, cVar1 == ' ' || (cVar1 == '\t')) || (cVar1 == '\n')) ||
          (cVar1 == '\r')))); ~r0 = ~r0 + (uint)((dword)(-(int)in_RBX >> 0x3f) & 1)) {
    in_RBX = (runtime_itab *)((int)in_RBX[-1].fun + 7);
  }
  while( true ) {
    if (in_RBX == (runtime_itab *)0x0) {
      return;
    }
    cVar1 = ((undefined *)((int)in_RBX[-1].fun + 7))[~r0];
    if (((cVar1 != ' ') && (cVar1 != '\t')) && ((cVar1 != '\n' && (cVar1 != '\r')))) break;
    in_RBX = (runtime_itab *)((int)in_RBX[-1].fun + 7);
  }
  if (in_RBX == (runtime_itab *)0x0) {
    return;
  }
  strconv_ParseUint(in_stack_ffffffffffffffa0,~r0,(int)in_RBX,10,in_stack_ffffffffffffffb0);
  if (extraout_RBX != 0) {
    runtime_convTstring(in_stack_ffffffffffffffa0,&DAT_008b7d45);
    runtime_convTstring(in_stack_ffffffffffffffa0,(void *)~r0);
    a.cap = in_stack_ffffffffffffffc0;
    a.array = (interface___ *)in_stack_ffffffffffffffb0.tab;
    a.len = (int)in_stack_ffffffffffffffb0.data;
    ~r0_00.data = (void *)~r0;
    ~r0_00.tab = in_RBX;
    fmt_Errorf(in_stack_ffffffffffffffa0,a,~r0_00);
    return;
  }
  return;
}



void net_http_finishAsyncByteRead_Read(net_http_finishAsyncByteRead fr,__uint8 p,int n,error err)

{
  int in_RCX;
  int unaff_R14;
  int local_28 [3];
  undefined local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RCX != 0) {
    local_28[0] = 0;
    local_10 = 0;
    runtime_chanrecv1((runtime_hchan *)(fr.tw)->ByteReadCh,local_28);
    if (local_28[0] == 1) {
      *(undefined *)n = local_10;
    }
    return;
  }
  return;
}



void net_http_unwrapNopCloser(io_Reader r,io_Reader underlyingReader,bool isNopCloser)

{
  interface___ ~r0;
  reflect_Value ~r0_00;
  char extraout_AL;
  char extraout_AL_00;
  bool safe;
  undefined7 in_register_00000001;
  int iVar1;
  internal_abi_Type *t_00;
  undefined1 *tab;
  void *x;
  internal_abi_Type *t;
  reflect_flag f;
  undefined ~r0_01;
  undefined extraout_DIL;
  undefined8 in_RDI;
  undefined8 extraout_RDI;
  int unaff_R14;
  reflect_Value in_stack_ffffffffffffff98;
  internal_abi_Type *in_stack_ffffffffffffffb0;
  runtime_itab *in_stack_ffffffffffffffb8;
  void *in_stack_ffffffffffffffc0;
  
  iVar1 = CONCAT71(in_register_00000001,isNopCloser);
  while (~r0_01 = (undefined)in_RDI, &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  if (iVar1 == 0) {
    x = (void *)0x0;
  }
  else {
    x = *(void **)(iVar1 + 8);
  }
  if (x == (void *)0x0) {
    tab = (undefined1 *)0x0;
    x = (void *)0x0;
  }
  else {
    tab = go_itab__reflect_rtype_reflect_Type;
  }
  if (((net_http_nopCloserType.tab != (runtime_itab *)tab) ||
      (runtime_ifaceeq((runtime_itab *)tab,x,net_http_nopCloserType.data,(bool)~r0_01),
      ~r0_01 = extraout_DIL, in_stack_ffffffffffffffb8 = (runtime_itab *)tab,
      in_stack_ffffffffffffffc0 = x, extraout_AL == '\0')) &&
     ((net_http_nopCloserWriterToType.tab != (runtime_itab *)tab ||
      (runtime_ifaceeq((runtime_itab *)tab,x,net_http_nopCloserWriterToType.data,(bool)~r0_01),
      extraout_AL_00 == '\0')))) {
    return;
  }
  if (iVar1 == 0) {
    iVar1 = 0;
  }
  else {
    iVar1 = *(int *)(iVar1 + 8);
  }
  if (iVar1 == 0) {
    iVar1 = 0;
  }
  else if (iVar1 == 0) {
    iVar1 = 0;
  }
  ~r0_00.ptr = in_stack_ffffffffffffffb8;
  ~r0_00.typ_ = in_stack_ffffffffffffffb0;
  ~r0_00.flag = (reflect_flag)in_stack_ffffffffffffffc0;
  reflect_Value_Field(in_stack_ffffffffffffff98,iVar1,~r0_00);
  ~r0.data = in_stack_ffffffffffffffb8;
  ~r0._type = in_stack_ffffffffffffffb0;
  reflect_valueInterface(in_stack_ffffffffffffff98,safe,~r0);
  runtime_assertE2I((internal_abi_InterfaceType *)&DAT_00834b40,t_00,(runtime_itab *)t_00);
  return;
}



void net_http_isKnownInMemoryReader(io_Reader r,bool ~r0)

{
  io_Reader underlyingReader;
  bool ~r0_00;
  bool ~r0_01;
  undefined7 in_register_00000001;
  undefined1 *puVar1;
  char extraout_CL;
  bool ok;
  runtime_itab **in_RBX;
  int unaff_R14;
  io_Reader in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_ffffffffffffffe8;
  
  puVar1 = (undefined1 *)CONCAT71(in_register_00000001,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((puVar1 != (undefined1 *)0x0) &&
     (((puVar1 == go_itab__bytes_Reader_io_Reader || (puVar1 == go_itab__bytes_Buffer_io_Reader)) ||
      (puVar1 == go_itab__strings_Reader_io_Reader)))) {
    return;
  }
  underlyingReader.data = puVar1;
  underlyingReader.tab = in_stack_ffffffffffffffe8;
  net_http_unwrapNopCloser(in_stack_ffffffffffffffd8,underlyingReader,~r0);
  if (extraout_CL != '\0') {
    net_http_isKnownInMemoryReader(in_stack_ffffffffffffffd8,~r0_00);
    return;
  }
  if (puVar1 == go_itab__net_http_readTrackingBody_io_Reader) {
    runtime_convI2I((internal_abi_InterfaceType *)&DAT_00834b40,*in_RBX,in_RBX[1]);
    net_http_isKnownInMemoryReader(in_stack_ffffffffffffffd8,~r0_01);
    return;
  }
  return;
}



void net_http_bufioFlushWriter_Write(net_http_bufioFlushWriter fw,__uint8 p,int n,error err)

{
  undefined8 in_RCX;
  undefined8 in_RSI;
  undefined8 in_RDI;
  bufio_Writer *bw;
  int unaff_R14;
  undefined auVar1 [16];
  error in_stack_ffffffffffffffb0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  auVar1 = (**(code **)(n + 0x18))(bw,in_RCX,in_RDI,in_RSI);
  if ((undefined1 *)n != go_itab__bufio_Writer_io_Writer) {
    bw = (bufio_Writer *)0x0;
  }
  if ((0 < auVar1._0_8_) && ((undefined1 *)n == go_itab__bufio_Writer_io_Writer)) {
    bufio___Writer__Flush(bw,in_stack_ffffffffffffffb0);
  }
  return;
}



void net_http_ProxyFromEnvironment(net_http_Request *req,net_url_URL *~r0,error ~r1)

{
  code **extraout_RAX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  net_http_envProxyFunc((func__net_url_URL____net_url_URL__error_ **)req);
  (**extraout_RAX)(req->URL,extraout_RAX);
  return;
}



void net_http_envProxyFunc(func__net_url_URL____net_url_URL__error_ **~r0)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (net_http_envProxyOnce.done == 0) {
    sync___Once__doSlow(&net_http_envProxyOnce,(func__ **)&PTR_net_http_envProxyFunc_func1_008eba88)
    ;
  }
  return;
}



// WARNING: Unknown calling convention

void net_http_envProxyFunc_func1(void)

{
  undefined4 uVar1;
  undefined4 uVar2;
  undefined4 uVar3;
  vendor_golang_org_x_net_http_httpproxy_Config *in_RAX;
  undefined8 *src;
  undefined8 *ctx;
  vendor_golang_org_x_net_http_httpproxy_config *cfg1;
  func__net_url_URL____net_url_URL__error_ **extraout_RAX;
  func__net_url_URL____net_url_URL__error_ **extraout_RAX_00;
  func__net_url_URL____net_url_URL__error_ **ppfVar4;
  vendor_golang_org_x_net_http_httpproxy_Config *extraout_RAX_01;
  void *~r0;
  void *~r0_00;
  undefined8 *extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RAX = extraout_RAX_01;
  }
  vendor_golang_org_x_net_http_httpproxy_FromEnvironment(in_RAX);
  runtime_newobject((internal_abi_Type *)&DAT_00881a80,~r0);
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_wbMove((internal_abi_Type *)&DAT_00878620,ctx,src);
  }
  *ctx = *src;
  uVar1 = *(undefined4 *)((int)src + 0xc);
  uVar2 = *(undefined4 *)(src + 2);
  uVar3 = *(undefined4 *)((int)src + 0x14);
  *(undefined4 *)(ctx + 1) = *(undefined4 *)(src + 1);
  *(undefined4 *)((int)ctx + 0xc) = uVar1;
  *(undefined4 *)(ctx + 2) = uVar2;
  *(undefined4 *)((int)ctx + 0x14) = uVar3;
  uVar1 = *(undefined4 *)((int)src + 0x1c);
  uVar2 = *(undefined4 *)(src + 4);
  uVar3 = *(undefined4 *)((int)src + 0x24);
  *(undefined4 *)(ctx + 3) = *(undefined4 *)(src + 3);
  *(undefined4 *)((int)ctx + 0x1c) = uVar1;
  *(undefined4 *)(ctx + 4) = uVar2;
  *(undefined4 *)((int)ctx + 0x24) = uVar3;
  uVar1 = *(undefined4 *)((int)src + 0x2c);
  uVar2 = *(undefined4 *)(src + 6);
  uVar3 = *(undefined4 *)((int)src + 0x34);
  *(undefined4 *)(ctx + 5) = *(undefined4 *)(src + 5);
  *(undefined4 *)((int)ctx + 0x2c) = uVar1;
  *(undefined4 *)(ctx + 6) = uVar2;
  *(undefined4 *)((int)ctx + 0x34) = uVar3;
  vendor_golang_org_x_net_http_httpproxy___config__init((EVP_PKEY_CTX *)ctx);
  runtime_newobject((internal_abi_Type *)&DAT_00849060,~r0_00);
  *extraout_RAX = vendor_golang_org_x_net_http_httpproxy___config__proxyForURL_fm;
  ppfVar4 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier3();
    *extraout_R11 = ctx;
    extraout_R11[1] = extraout_RAX_00;
    extraout_R11[2] = net_http_envProxyFuncValue;
    ppfVar4 = extraout_RAX_00;
  }
  ppfVar4[1] = (func__net_url_URL____net_url_URL__error_ *)ctx;
  net_http_envProxyFuncValue = ppfVar4;
  return;
}



int net_http_init(EVP_PKEY_CTX *ctx)

{
  runtime_slice ~r0;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  string ~r0_02;
  runtime_iface r;
  runtime_iface r_00;
  string *dstPtr;
  strings_Replacer *extraout_RAX;
  strings_Replacer *extraout_RAX_00;
  time_Location *extraout_RAX_01;
  uint8 *extraout_RAX_02;
  uint8 *extraout_RAX_03;
  uint8 *puVar1;
  char *extraout_RAX_04;
  runtime_hmap *prVar2;
  map_net_http_http2SettingID_string h;
  undefined8 *extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  undefined8 *extraout_RAX_07;
  undefined8 *extraout_RAX_08;
  undefined8 *extraout_RAX_09;
  undefined8 *extraout_RAX_10;
  undefined8 *extraout_RAX_11;
  undefined8 *extraout_RAX_12;
  char **extraout_RAX_13;
  char **extraout_RAX_14;
  char **ppcVar3;
  undefined8 *extraout_RAX_15;
  undefined8 *extraout_RAX_16;
  net_http_http2serverMessage *extraout_RAX_17;
  net_http_http2serverMessage *extraout_RAX_18;
  net_http_http2serverMessage *extraout_RAX_19;
  net_http_http2serverMessage *extraout_RAX_20;
  net_http_http2serverMessage *extraout_RAX_21;
  net_http_http2serverMessage *extraout_RAX_22;
  net_http_http2serverMessage *extraout_RAX_23;
  net_http_http2serverMessage *extraout_RAX_24;
  net_http_http2serverMessage *extraout_RAX_25;
  net_http_http2serverMessage *extraout_RAX_26;
  net_http_http2serverMessage *pnVar4;
  string *dstPtr_00;
  strings_Replacer *extraout_RAX_27;
  strings_Replacer *extraout_RAX_28;
  time_Location *extraout_RAX_29;
  map_string_bool h_00;
  undefined *extraout_RAX_30;
  undefined *extraout_RAX_31;
  undefined *extraout_RAX_32;
  undefined *extraout_RAX_33;
  undefined *extraout_RAX_34;
  runtime_hmap *extraout_RAX_35;
  runtime_hmap *extraout_RAX_36;
  runtime_hmap *extraout_RAX_37;
  runtime_hmap *extraout_RAX_38;
  map_string_bool h_01;
  undefined *extraout_RAX_39;
  undefined *extraout_RAX_40;
  undefined *extraout_RAX_41;
  string *dstPtr_01;
  strings_Replacer *extraout_RAX_42;
  strings_Replacer *extraout_RAX_43;
  strings_Replacer *psVar5;
  map_net_http_ConnState_string h_02;
  undefined8 *extraout_RAX_44;
  undefined8 *extraout_RAX_45;
  undefined8 *extraout_RAX_46;
  undefined8 *extraout_RAX_47;
  undefined8 *extraout_RAX_48;
  undefined8 *extraout_RAX_49;
  undefined8 *extraout_RAX_50;
  undefined8 *extraout_RAX_51;
  runtime_hmap *extraout_RAX_52;
  runtime_hmap *extraout_RAX_53;
  map_string_int extraout_RAX_54;
  map_string_int extraout_RAX_55;
  map_string_int phVar6;
  time_Location *extraout_RAX_56;
  time_Location *ptVar7;
  map_string_bool h_03;
  undefined *extraout_RAX_57;
  undefined *extraout_RAX_58;
  int extraout_RAX_59;
  undefined1 *puVar8;
  int extraout_RAX_60;
  undefined8 *extraout_RAX_61;
  code **extraout_RAX_62;
  code **extraout_RAX_63;
  code **ppcVar9;
  map_string_string h_04;
  undefined8 *extraout_RAX_64;
  undefined8 *extraout_RAX_65;
  undefined8 *extraout_RAX_66;
  undefined8 *extraout_RAX_67;
  undefined8 *extraout_RAX_68;
  undefined8 *extraout_RAX_69;
  undefined8 *puVar10;
  int extraout_RCX;
  undefined8 extraout_RCX_00;
  int extraout_RCX_01;
  int extraout_RCX_02;
  undefined8 extraout_RCX_03;
  void *extraout_RCX_04;
  undefined1 *puVar11;
  undefined1 *extraout_RCX_05;
  void *extraout_RCX_06;
  void *pvVar12;
  undefined8 extraout_RCX_07;
  undefined8 uVar13;
  char *pcVar14;
  void *~r0_03;
  int extraout_RBX;
  void *extraout_RBX_00;
  void *extraout_RBX_01;
  void *extraout_RBX_02;
  void *extraout_RBX_03;
  void *extraout_RBX_04;
  void *extraout_RBX_05;
  void *extraout_RBX_06;
  void *extraout_RBX_07;
  void *extraout_RBX_08;
  void *extraout_RBX_09;
  void *~r0_04;
  void *~r0_05;
  void *extraout_RBX_10;
  void *extraout_RBX_11;
