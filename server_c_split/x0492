          ~r0_00.cap = in_stack_ffffffffffffff58;
          math_big_nat_expWW(z,0,0,~r0_00);
          (local_18->bbb).len = extraout_RBX;
          (local_18->bbb).cap = extraout_RCX;
          pmVar3 = extraout_RAX_00;
          pmVar2 = local_18;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11 = extraout_RAX_01;
            extraout_R11[1] = (pmVar2->bbb).array;
            pmVar3 = extraout_RAX_01;
          }
          (pmVar2->bbb).array = pmVar3;
          pmVar2->ndigits = math_big_leafSize * ndigits;
        }
        else {
          z_00.len = in_stack_ffffffffffffff38;
          z_00.array = in_stack_ffffffffffffff30;
          z_00.cap = in_stack_ffffffffffffff40;
          x.len = in_stack_ffffffffffffff50;
          x.array = in_stack_ffffffffffffff48;
          x.cap = in_stack_ffffffffffffff58;
          ~r0_01.len = in_stack_ffffffffffffff68;
          ~r0_01.array = (math_big_Word *)in_stack_ffffffffffffff60;
          ~r0_01.cap = in_stack_ffffffffffffff70;
          math_big_nat_sqr(z_00,x,~r0_01);
          (&(local_18->bbb).len)[local_38] = extraout_RBX_00;
          (&(local_18->bbb).cap)[local_38] = extraout_RCX_00;
          pmVar3 = extraout_RAX_02;
          iVar5 = local_38;
          pmVar2 = local_18;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_00 = extraout_RAX_03;
            extraout_R11_00[1] = (&(extraout_R9->bbb).array)[iVar5];
            pmVar3 = extraout_RAX_03;
            pmVar2 = extraout_R9;
          }
          (&(pmVar2->bbb).array)[iVar5] = pmVar3;
          (&pmVar2->ndigits)[iVar5] = *(int *)((int)pmVar2 + (iVar5 + -1) * 8) << 1;
        }
        iVar5 = (&(pmVar2->bbb).len)[local_38];
        pmVar3 = (&(pmVar2->bbb).array)[local_38];
        if (iVar5 < 1) {
          local_10 = (math_big_Word *)0x0;
          iVar6 = 0;
          len = 0;
        }
        else {
          local_20 = pmVar3;
          if (iVar5 == 1) {
            runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,(void *)ndigits);
            iVar6 = 1;
            len = 1;
            pmVar3 = local_20;
            local_10 = extraout_RAX_04;
          }
          else {
            iVar6 = iVar5 + 4;
            runtime_makeslice((internal_abi_Type *)&DAT_00808860,iVar5,iVar6,(void *)ndigits);
            len = iVar5;
            pmVar3 = local_20;
            local_10 = extraout_RAX_05;
          }
        }
        iVar4 = len;
        if (iVar5 < len) {
          iVar4 = iVar5;
        }
        in_stack_ffffffffffffff30 = local_10;
        in_stack_ffffffffffffff38 = len;
        local_50 = iVar6;
        if (local_10 != pmVar3) {
          runtime_memmove(local_10,pmVar3,iVar4 << 3);
          in_stack_ffffffffffffff30 = local_10;
        }
        while( true ) {
          in_stack_ffffffffffffff68 = 0;
          in_stack_ffffffffffffff40 = local_50;
          in_stack_ffffffffffffff48 = in_stack_ffffffffffffff30;
          in_stack_ffffffffffffff50 = in_stack_ffffffffffffff38;
          in_stack_ffffffffffffff58 = local_50;
          in_stack_ffffffffffffff60 = b;
          math_big_mulAddVWW();
          if (in_stack_ffffffffffffff70 != 0) break;
          ~r0_02 = (undefined *)(&(local_18->bbb).cap)[local_38];
          pmVar3 = (&(local_18->bbb).array)[local_38];
          iVar5 = len;
          if ((int)~r0_02 < len) {
            if (len == 1) {
              runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,~r0_02);
              iVar5 = 1;
              ~r0_02 = &DAT_00000001;
              pmVar3 = extraout_RAX_06;
            }
            else {
              runtime_makeslice((internal_abi_Type *)&DAT_00808860,len,(int)(undefined *)(len + 4),
                                ~r0_02);
              ~r0_02 = (undefined *)(len + 4);
              pmVar3 = extraout_RAX_07;
            }
          }
          iVar6 = iVar5;
          if (len < iVar5) {
            iVar6 = len;
          }
          if (pmVar3 != local_10) {
            local_28 = pmVar3;
            runtime_memmove(pmVar3,local_10,iVar6 << 3);
            pmVar3 = local_28;
          }
          (&(local_18->bbb).len)[local_38] = iVar5;
          (&(local_18->bbb).cap)[local_38] = (int)~r0_02;
          in_stack_ffffffffffffff38 = len;
          iVar5 = local_38;
          in_stack_ffffffffffffff30 = local_10;
          pmVar2 = local_18;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_01 = extraout_R8;
            extraout_R11_01[1] = (&(extraout_RSI->bbb).array)[iVar5];
            in_stack_ffffffffffffff38 = extraout_RAX_08;
            in_stack_ffffffffffffff30 = extraout_RBX_01;
            pmVar2 = extraout_RSI;
            pmVar3 = extraout_R8;
          }
          (&(pmVar2->bbb).array)[iVar5] = pmVar3;
          (&pmVar2->ndigits)[iVar5] = (&pmVar2->ndigits)[iVar5] + 1;
        }
        iVar6 = (&(local_18->bbb).len)[local_38];
        iVar5 = iVar6 + -1;
        if (iVar5 < 0) {
          iVar5 = 0;
        }
        else {
          uVar7 = (&(local_18->bbb).array)[local_38][iVar6 + -1];
          uVar7 = uVar7 | uVar7 >> 1;
          uVar7 = uVar7 >> 2 | uVar7;
          uVar7 = uVar7 >> 4 | uVar7;
          uVar7 = uVar7 >> 8 | uVar7;
          uVar7 = uVar7 >> 0x10 | uVar7;
          uVar7 = uVar7 >> 0x20 | uVar7;
          iVar6 = 0x3f;
          if (uVar7 != 0) {
            for (; uVar7 >> iVar6 == 0; iVar6 = iVar6 + -1) {
            }
          }
          if (uVar7 == 0) {
            iVar6 = -1;
          }
          iVar5 = iVar6 + iVar5 * 0x40 + 1;
        }
        (&local_18->nbits)[local_38] = iVar5;
        pmVar2 = local_18;
        uVar7 = local_48;
        i = local_40;
      }
    }
  }
  if (b == 10) {
    LOCK();
    sVar1 = math_big_cacheBase10.Mutex.state + -1;
    UNLOCK();
    new_00 = math_big_cacheBase10.Mutex.state + -1;
    math_big_cacheBase10.Mutex.state = sVar1;
    if (new_00 != 0) {
      sync___Mutex__unlockSlow(&math_big_cacheBase10.Mutex,new_00);
    }
  }
  return;
}



void math_big_nat_rem(math_big_nat z,math_big_nat u,math_big_nat v,math_big_nat r)

{
  interface___ x;
  int in_RAX;
  int *extraout_RAX;
  math_big_nat *qp;
  int iVar1;
  int extraout_RAX_00;
  int in_RCX;
  int extraout_RCX;
  int *piVar2;
  math_big_nat *in_RBX;
  int in_RDI;
  int in_R8;
  internal_abi_Type *in_R9;
  void *in_R10;
  int *extraout_R11;
  int unaff_R14;
  div_t dVar3;
  undefined local_10 [8];
  
  while (local_10 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((in_RCX != 0) && (in_R8 != 0)) && (in_RDI + in_R8 * 8 + -8 == in_RAX + in_RCX * 8 + -8)) {
    in_RBX = (math_big_nat *)0x0;
  }
  math_big_getNat(0,in_RBX);
  dVar3 = math_big_nat_div(*extraout_RAX,extraout_RAX[1]);
  iVar1 = dVar3.quot;
  extraout_RAX[1] = dVar3.rem;
  extraout_RAX[2] = extraout_RCX;
  piVar2 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_00;
    extraout_R11[1] = *piVar2;
    iVar1 = extraout_RAX_00;
  }
  *piVar2 = iVar1;
  x.data = in_R10;
  x._type = in_R9;
  sync___Pool__Put(&math_big_natPool,x);
  return;
}



div_t math_big_nat_div(int __numer,int __denom)

{
  interface___ e;
  math_big_nat z;
  math_big_nat z_00;
  math_big_nat q;
  math_big_nat r;
  int iVar1;
  void **extraout_RAX;
  void **extraout_RAX_00;
  int extraout_RAX_01;
  void **extraout_RAX_02;
  int extraout_RAX_03;
  undefined *puVar2;
  int extraout_RBX;
  int extraout_RBX_00;
  void **in_RDI;
  void *~r0;
  void *~r0_00;
  math_big_Word r2;
  void *pvVar3;
  int in_R8;
  void **in_R9;
  undefined *in_R10;
  int unaff_R14;
  div_t dVar4;
  div_t dVar5;
  div_t dVar6;
  undefined8 in_stack_00000008;
  int in_stack_00000010;
  int in_stack_00000018;
  uint uStack0000000000000020;
  void **ppvStack0000000000000038;
  void **ppvStack0000000000000050;
  internal_abi_Type *in_stack_ffffffffffffff48;
  void *in_stack_ffffffffffffff50;
  int in_stack_ffffffffffffff58;
  math_big_nat in_stack_ffffffffffffff60;
  math_big_nat in_stack_ffffffffffffff78;
  math_big_nat in_stack_ffffffffffffff90;
  undefined8 in_stack_ffffffffffffffa8;
  undefined8 in_stack_ffffffffffffffb0;
  int in_stack_ffffffffffffffb8;
  undefined8 in_stack_ffffffffffffffc0;
  undefined8 in_stack_ffffffffffffffc8;
  int in_stack_ffffffffffffffd0;
  
  while (uStack0000000000000020 = __numer,
        &stack0xffffffffffffffc8 <= *(undefined **)(unaff_R14 + 0x10)) {
    ppvStack0000000000000038 = in_RDI;
    ppvStack0000000000000050 = in_R9;
    runtime_morestack_noctxt();
    __numer = uStack0000000000000020;
    in_RDI = ppvStack0000000000000038;
    in_R9 = ppvStack0000000000000050;
  }
  if (in_stack_00000010 == 0) {
    e.data = in_stack_ffffffffffffff50;
    e._type = in_stack_ffffffffffffff48;
                    // WARNING: Subroutine does not return
    runtime_gopanic(e);
  }
  iVar1 = math_big_nat_cmp(in_R9,in_R10);
  if (iVar1 < 0) {
    puVar2 = in_R10;
    if (in_R8 < (int)in_R10) {
      if (in_R10 == &DAT_00000001) {
        runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,~r0);
        puVar2 = &DAT_00000001;
        in_RDI = extraout_RAX;
      }
      else {
        runtime_makeslice((internal_abi_Type *)&DAT_00808860,(int)in_R10,(int)(in_R10 + 4),~r0);
        in_RDI = extraout_RAX_00;
      }
    }
    if ((int)in_R10 < (int)puVar2) {
      puVar2 = in_R10;
    }
    if (in_R9 != in_RDI) {
      runtime_memmove(in_RDI,in_R9,(int)puVar2 << 3);
    }
    dVar4.rem = 0;
    dVar4.quot = __numer;
    return dVar4;
  }
  if (in_stack_00000010 != 1) {
    z_00.len = in_stack_00000010;
    z_00.array = (math_big_Word *)in_stack_00000008;
    z_00.cap = in_stack_00000018;
    q.len = in_stack_ffffffffffffffb0;
    q.array = (math_big_Word *)in_stack_ffffffffffffffa8;
    q.cap = in_stack_ffffffffffffffb8;
    r.len = in_stack_ffffffffffffffc8;
    r.array = (math_big_Word *)in_stack_ffffffffffffffc0;
    r.cap = in_stack_ffffffffffffffd0;
    math_big_nat_divLarge
              (z_00,in_stack_ffffffffffffff60,in_stack_ffffffffffffff78,in_stack_ffffffffffffff90,q,
               r);
    dVar6.rem = extraout_RBX_00;
    dVar6.quot = extraout_RAX_03;
    return dVar6;
  }
  z.len = (int)in_stack_ffffffffffffff50;
  z.array = &in_stack_ffffffffffffff48->Size_;
  z.cap = in_stack_ffffffffffffff58;
  math_big_nat_divW(z,in_stack_ffffffffffffff60,__numer,in_stack_ffffffffffffff78,__denom);
  iVar1 = extraout_RBX;
  if (~r0_00 != (void *)0x0) {
    pvVar3 = ~r0_00;
    if (in_R8 == 0) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,~r0_00);
      in_RDI = extraout_RAX_02;
    }
    *in_RDI = pvVar3;
  }
  dVar5.rem = iVar1;
  dVar5.quot = extraout_RAX_01;
  return dVar5;
}



void math_big_nat_divW(math_big_nat z,math_big_nat x,math_big_Word y,math_big_nat q,math_big_Word r)

{
  __math_big_Word z_00;
  math_big_Word extraout_RAX;
  math_big_Word extraout_RAX_00;
  void *extraout_RAX_01;
  void *extraout_RAX_02;
  math_big_Word in_RCX;
  int m;
  int i;
  int iVar1;
  void *in_RDI;
  int in_R9;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff78;
  int in_stack_ffffffffffffff88;
  __math_big_Word in_stack_ffffffffffffff90;
  
  while (&stack0xfffffffffffffff8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_R9 == 0) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff78);
  }
  if (in_R9 == 1) {
    iVar1 = i;
    if ((int)in_RCX < i) {
      if (i == 1) {
        runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
        y = (math_big_Word)extraout_RAX_01;
        iVar1 = 1;
      }
      else {
        runtime_makeslice((internal_abi_Type *)&DAT_00808860,i,i + 4,in_RDI);
        y = (math_big_Word)extraout_RAX_02;
      }
    }
    if (i < iVar1) {
      iVar1 = i;
    }
    if (in_RDI != (void *)y) {
      runtime_memmove((void *)y,in_RDI,iVar1 << 3);
    }
    return;
  }
  if (i == 0) {
    return;
  }
  if ((int)in_RCX < i) {
    if (i == 1) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
      in_RCX = 1;
      i = 1;
      y = extraout_RAX;
    }
    else {
      in_RCX = i + 4;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,i,in_RCX,in_RDI);
      y = extraout_RAX_00;
    }
  }
  z_00.cap = in_stack_ffffffffffffff88;
  z_00.array = &(in_stack_ffffffffffffff78._type)->Size_;
  z_00.len = (int)in_stack_ffffffffffffff78.data;
  math_big_divWVW(z_00,y,in_stack_ffffffffffffff90,i,in_RCX);
  for (; (0 < i && (*(int *)((y - 8) + i * 8) == 0)); i = i - 1) {
  }
  if (in_RCX < (uint)i) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  return;
}



void math_big_nat_modW(math_big_nat x,math_big_Word d,math_big_Word r)

{
  undefined8 *extraout_RAX;
  math_big_Word r_00;
  void *in_RDI;
  undefined8 *xn;
  int unaff_R14;
  __math_big_Word in_stack_ffffffffffffffa0;
  __math_big_Word in_stack_ffffffffffffffb8;
  undefined8 local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((int)r < 1) {
    r_00 = 0;
    r = 0;
    xn = (undefined8 *)0x0;
  }
  else if (r == 1) {
    local_10 = 0;
    r_00 = 1;
    r = 1;
    xn = &local_10;
  }
  else {
    r_00 = r + 4;
    runtime_makeslice((internal_abi_Type *)&DAT_00808860,r,r_00,in_RDI);
    xn = extraout_RAX;
  }
  math_big_divWVW(in_stack_ffffffffffffffa0,(math_big_Word)xn,in_stack_ffffffffffffffb8,r,r_00);
  return;
}



void math_big_divWVW(__math_big_Word z,math_big_Word xn,__math_big_Word x,math_big_Word y,
                    math_big_Word r)

{
  undefined auVar1 [16];
  undefined auVar2 [16];
  undefined auVar3 [16];
  undefined auVar4 [16];
  uint qq;
  undefined8 extraout_RAX;
  int iVar5;
  uint uVar6;
  uint u;
  uint rr;
  math_big_Word extraout_RBX;
  undefined8 *in_RSI;
  math_big_Word in_RDI;
  math_big_Word in_R8;
  uint x1;
  int i;
  uint in_R10;
  int unaff_R14;
  uint rec_1;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_R8 != 1) {
    iVar5 = 0x3f;
    if (in_R10 != 0) {
      for (; in_R10 >> iVar5 == 0; iVar5 = iVar5 + -1) {
      }
    }
    if (in_R10 == 0) {
      iVar5 = -1;
    }
    uVar6 = in_R10 << (-((char)iVar5 + '\x01') & 0x3fU) & -(uint)((uint)-(iVar5 + -0x3f) < 0x40);
    if (uVar6 != 0) {
      if (uVar6 <= ~uVar6) {
                    // WARNING: Subroutine does not return
        runtime_panicoverflow();
      }
      auVar1._8_8_ = 0;
      auVar1._0_8_ = uVar6;
      auVar3._8_8_ = 0;
      auVar3._0_8_ = ~uVar6;
      while( true ) {
        y = y - 1;
        if ((int)y < 0) {
          return;
        }
        if (in_R8 <= y) break;
        math_big_divWW(in_RDI,in_RSI[y],in_R10,
                       SUB168((auVar3 << 0x40 | ZEXT816(0xffffffffffffffff)) / auVar1,0),
                       (math_big_Word)in_RSI,in_R8);
        *(undefined8 *)(xn + y * 8) = extraout_RAX;
        in_RDI = extraout_RBX;
      }
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
                    // WARNING: Subroutine does not return
    runtime_panicdivide();
  }
  if (in_R10 == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicdivide();
  }
  if (in_RDI < in_R10) {
    auVar2._8_8_ = 0;
    auVar2._0_8_ = in_R10;
    auVar4._8_8_ = in_RDI;
    auVar4._0_8_ = *in_RSI;
    if (y != 0) {
      *(int *)xn = SUB168(auVar4 / auVar2,0);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
                    // WARNING: Subroutine does not return
  runtime_panicoverflow();
}



void math_big_nat_divLarge
               (math_big_nat z,math_big_nat u,math_big_nat uIn,math_big_nat vIn,math_big_nat q,
               math_big_nat r)

{
  interface___ x;
  math_big_nat q_00;
  math_big_nat z_00;
  math_big_nat u_00;
  math_big_nat u_01;
  math_big_nat v;
  math_big_nat v_00;
  int in_RAX;
  undefined8 *extraout_RAX;
  math_big_nat *vp;
  internal_abi_Type *extraout_RAX_00;
  internal_abi_Type *extraout_RAX_01;
  int extraout_RAX_02;
  int extraout_RAX_03;
  uint in_RCX;
  int i_1;
  uint uVar1;
  internal_abi_Type *in_RDI;
  int iVar2;
  uint shift;
  void *~r0;
  math_big_nat *in_R8;
  undefined8 in_R9;
  math_big_nat *in_R10;
  int m;
  int in_R11;
  int unaff_R14;
  int i;
  math_big_nat *pmVar3;
  math_big_nat *pmVar4;
  math_big_nat *pmVar5;
  uintptr in_stack_ffffffffffffff68;
  int in_stack_ffffffffffffff70;
  uint local_50;
  math_big_nat *local_48;
  int local_40;
  int iStack_38;
  math_big_nat *local_30;
  int iStack_28;
  internal_abi_Type *piStack_20;
  undefined8 local_10;
  
  while (&local_50 <= *(uint **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_40 = (int)in_R10 - z.len;
  if ((uint)z.len <= z.len - 1U) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  uVar1 = z.array[z.len + -1];
  local_48 = (math_big_nat *)((int)&in_R10->array + 1);
  local_30 = in_R10;
  math_big_getNat(z.len,local_48);
  local_10 = *extraout_RAX;
  iVar2 = 0x3f;
  if (uVar1 != 0) {
    for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {
    }
  }
  if (uVar1 == 0) {
    iVar2 = -1;
  }
  iVar2 = -(iVar2 + -0x3f);
  math_big_shlVU();
  if ((int)in_R8 < (int)local_48) {
    if (local_30 == (math_big_nat *)0x0) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,~r0);
      in_R8 = (math_big_nat *)&DAT_00000001;
      in_RDI = extraout_RAX_00;
      i_1 = (int)&DAT_00000001;
    }
    else {
      in_R8 = (math_big_nat *)((int)&local_30->array + 5);
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,(int)local_48,(int)in_R8,~r0);
      in_RDI = extraout_RAX_01;
      i_1 = (int)local_48;
    }
  }
  else {
    i_1 = (int)local_48;
    if (in_R8 < local_48) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
  }
  if (in_R8 < local_30) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  pmVar3 = local_30;
  pmVar4 = in_R8;
  pmVar5 = local_30;
  piStack_20 = in_RDI;
  math_big_shlVU();
  if ((uint)i_1 <= local_30) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  (&piStack_20->Size_)[(int)local_30] = in_stack_ffffffffffffff68;
  if ((in_RCX != 0) && ((int)piStack_20 + (int)in_R8 * 8 + -8 == in_RAX + in_RCX * 8 + -8)) {
    in_RCX = 0;
    in_RAX = 0;
  }
  i = local_40 + 1;
  if ((int)in_RCX < i) {
    if (local_40 == 0) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,piStack_20);
      in_RCX = 1;
      in_RAX = extraout_RAX_02;
      i = 1;
    }
    else {
      in_RCX = local_40 + 5;
      local_50 = i;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,i,in_RCX,piStack_20);
      in_RAX = extraout_RAX_03;
      i = local_50;
    }
  }
  else if (in_RCX < (uint)i) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  iStack_28 = in_RAX;
  if (z.len < 100) {
    q_00.len = (int)pmVar3;
    q_00.array = &in_RDI->Size_;
    q_00.cap = (int)pmVar4;
    u_00.len = (int)pmVar5;
    u_00.array = (math_big_Word *)in_R9;
    u_00.cap = in_R11;
    v.len = in_stack_ffffffffffffff68;
    v.array = (math_big_Word *)iVar2;
    v.cap = in_stack_ffffffffffffff70;
    math_big_nat_divBasic(q_00,u_00,v);
  }
  else {
    z_00.len = (int)pmVar3;
    z_00.array = &in_RDI->Size_;
    z_00.cap = (int)pmVar4;
    u_01.len = (int)pmVar5;
    u_01.array = (math_big_Word *)in_R9;
    u_01.cap = in_R11;
    v_00.len = in_stack_ffffffffffffff68;
    v_00.array = (math_big_Word *)iVar2;
    v_00.cap = in_stack_ffffffffffffff70;
    math_big_nat_divRecursive(z_00,u_01,v_00);
  }
  x.data = pmVar3;
  x._type = in_RDI;
  sync___Pool__Put(&math_big_natPool,x);
  for (uVar1 = i; (0 < (int)uVar1 && (*(int *)(iStack_28 + -8 + uVar1 * 8) == 0)); uVar1 = uVar1 - 1
      ) {
  }
  if (in_RCX < uVar1) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  i = uVar1;
  math_big_shrVU();
  while ((0 < i_1 && (*(int *)((int)piStack_20 + i_1 * 8 + -8) == 0))) {
    i_1 = i_1 + -1;
  }
  if (in_R8 < (uint)i_1) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  return;
}



// WARNING: Removing unreachable block (ram,0x0064d54d)

void math_big_nat_divBasic(math_big_nat q,math_big_nat u,math_big_nat v)

{
  int *piVar1;
  uint y;
  void *pvVar2;
  void *pvVar3;
  uint uVar4;
  undefined auVar5 [16];
  undefined auVar6 [16];
  undefined auVar7 [16];
  undefined auVar8 [16];
  undefined auVar9 [16];
  undefined auVar10 [16];
  undefined auVar11 [16];
  interface___ x;
  int in_RAX;
  int *extraout_RAX;
  math_big_nat *qhatvp;
  math_big_Word m_00;
  uint extraout_RAX_00;
  math_big_Word x2;
  math_big_Word vn1;
  math_big_Word x1;
  math_big_nat *in_RBX;
  math_big_nat *pmVar12;
  int m;
  math_big_Word extraout_RBX;
  math_big_Word rhat;
  int qhl;
  void *pvVar13;
  math_big_Word prevRhat;
  math_big_nat *in_RSI;
  int in_RDI;
  math_big_Word vn2;
  math_big_nat *in_R8;
  math_big_Word c;
  math_big_Word in_R9;
  int iVar14;
  void *in_R10;
  math_big_Word ujn;
  math_big_Word ujn2;
  math_big_Word mVar15;
  void *in_R11;
  uint uVar16;
  uint u_1;
  uint x1_1;
  int unaff_R14;
  internal_abi_Type *in_stack_ffffffffffffff28;
  void *in_stack_ffffffffffffff30;
  void *pvStack_98;
  int iStack_90;
  math_big_Word mStack_80;
  uint rec_1;
  math_big_Word qhat;
  math_big_nat *pmStack_50;
  math_big_nat *pmStack_48;
  math_big_Word mStack_40;
  int iStack_38;
  int iStack_30;
  math_big_nat *pmStack_28;
  int iStack_18;
  internal_abi_Type *piStack_10;
  
  while (&qhat <= *(math_big_Word **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  math_big_getNat((int)in_R10 + 1,in_RBX);
  pmVar12 = (math_big_nat *)((int)in_RSI - (int)in_R10);
  if (in_R10 <= (void *)((int)in_R10 - 1U)) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  y = *(uint *)((in_R9 - 8) + (int)in_R10 * 8);
  iVar14 = 0x3f;
  if (y != 0) {
    for (; y >> iVar14 == 0; iVar14 = iVar14 + -1) {
    }
  }
  if (y == 0) {
    iVar14 = -1;
  }
  uVar16 = y << (-((char)iVar14 + '\x01') & 0x3fU) & -(uint)((uint)-(iVar14 + -0x3f) < 0x40);
  if (uVar16 == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicdivide();
  }
  if (uVar16 <= ~uVar16) {
                    // WARNING: Subroutine does not return
    runtime_panicoverflow();
  }
  auVar5._8_8_ = 0;
  auVar5._0_8_ = uVar16;
  auVar6._8_8_ = 0;
  auVar6._0_8_ = ~uVar16;
  m_00 = SUB168((auVar6 << 0x40 | ZEXT816(0xffffffffffffffff)) / auVar5,0);
  pvVar2 = (void *)extraout_RAX[1];
  pvVar3 = (void *)extraout_RAX[2];
  iStack_18 = *extraout_RAX;
  pmStack_50 = pmVar12;
  do {
    if ((int)pmVar12 < 0) {
      x.data = in_stack_ffffffffffffff30;
      x._type = in_stack_ffffffffffffff28;
      sync___Pool__Put(&math_big_natPool,x);
      return;
    }
    pmStack_28 = (math_big_nat *)((int)in_R10 + (int)pmVar12);
    if ((int)pmStack_28 < (int)in_RSI) {
      if (in_RSI <= pmStack_28) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      mStack_80 = *(math_big_Word *)(in_RDI + (int)pmStack_28 * 8);
    }
    else {
      mStack_80 = 0;
      mStack_40 = m_00;
    }
    pmStack_48 = pmVar12;
    if (mStack_80 == y) {
      uVar16 = 0xffffffffffffffff;
    }
    else {
      pmVar12 = (math_big_nat *)((int)in_R10 + (int)&pmVar12->array + -1);
      if (in_RSI <= pmVar12) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      math_big_divWW(mStack_80,*(math_big_Word *)(in_RDI + (int)pmVar12 * 8),y,m_00,
                     (math_big_Word)in_RSI,in_R9);
      if (in_R10 <= (void *)((int)in_R10 - 2U)) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      uVar4 = *(uint *)((in_R9 - 0x10) + (int)in_R10 * 8);
      auVar7._8_8_ = 0;
      auVar7._0_8_ = uVar4;
      auVar9._8_8_ = 0;
      auVar9._0_8_ = extraout_RAX_00;
      auVar7 = auVar7 * auVar9;
      pmVar12 = (math_big_nat *)((int)in_R10 + (int)&pmStack_48->array + -2);
      if (in_RSI <= pmVar12) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      prevRhat = extraout_RBX;
      uVar16 = extraout_RAX_00;
      while (auVar11._8_8_ = prevRhat, auVar11._0_8_ = *(undefined8 *)(in_RDI + (int)pmVar12 * 8),
            auVar11 < auVar7) {
        uVar16 = uVar16 - 1;
        if (prevRhat + y < prevRhat) break;
        auVar8._8_8_ = 0;
        auVar8._0_8_ = uVar16;
        auVar10._8_8_ = 0;
        auVar10._0_8_ = uVar4;
        prevRhat = prevRhat + y;
        auVar7 = auVar8 * auVar10;
      }
    }
    if (pvVar3 < in_R10) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    qhat = uVar16;
    math_big_mulAddVWW();
    if (pvVar2 <= in_R10) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(void **)(iStack_18 + (int)in_R10 * 8) = pvStack_98;
    pvVar13 = pvVar2;
    if (((int)in_RSI < (int)pvVar2 + (int)pmStack_48) && (pvStack_98 == (void *)0x0)) {
      pvVar13 = (void *)((int)pvVar2 - 1);
    }
    if (in_R8 < (math_big_nat *)((int)pvVar13 + (int)pmStack_48)) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    if ((math_big_nat *)((int)pvVar13 + (int)pmStack_48) < pmStack_48) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    in_stack_ffffffffffffff28 =
         (internal_abi_Type *)
         ((-((int)in_R8 - (int)pmStack_48) >> 0x3f & (int)pmStack_48 << 3) + in_RDI);
    if (in_RSI < pmStack_48) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    iStack_38 = (int)in_RSI - (int)pmStack_48;
    in_stack_ffffffffffffff30 = pvVar13;
    iStack_30 = (int)in_R8 - (int)pmStack_48;
    piStack_10 = in_stack_ffffffffffffff28;
    math_big_subVV();
    mVar15 = qhat;
    pvStack_98 = pvVar3;
    if (iStack_90 != 0) {
      if (in_R8 < pmStack_28) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
      if (pmStack_28 < pmStack_48) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      in_stack_ffffffffffffff28 = piStack_10;
      in_stack_ffffffffffffff30 = in_R10;
      math_big_addVV();
      if ((int)in_R10 < (int)pvVar13) {
        if (in_RSI <= pmStack_28) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        piVar1 = (int *)(in_RDI + (int)pmStack_28 * 8);
        *piVar1 = *piVar1 + iStack_90;
      }
      mVar15 = qhat - 1;
      pvStack_98 = in_R11;
    }
    if (((pmStack_48 != pmStack_50) || (in_RBX != pmStack_50)) || (mVar15 != 0)) {
      if (in_RBX <= pmStack_48) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      *(math_big_Word *)(in_RAX + (int)pmStack_48 * 8) = mVar15;
    }
    pmVar12 = (math_big_nat *)((int)&pmStack_48[-1].cap + 7);
  } while( true );
}



void math_big_nat_divRecursive(math_big_nat z,math_big_nat u,math_big_nat v)

{
  interface___ x;
  interface___ x_00;
  math_big_nat u_00;
  undefined auVar1 [24];
  int in_RAX;
  void *extraout_RAX;
  math_big_nat *tmp;
  int extraout_RAX_00;
  int iVar2;
  math_big_nat *n;
  math_big_nat *in_RBX;
  int iVar3;
  void *~r0;
  uint in_R10;
  int iVar4;
  int unaff_R14;
  internal_abi_Type *piVar5;
  int in_stack_ffffffffffffff88;
  math_big_nat in_stack_ffffffffffffff90;
  ___math_big_nat in_stack_ffffffffffffffa8;
  void *local_20;
  int iStack_18;
  int local_10;
  
  while (&local_20 <= *(void ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_10 = in_RAX;
  math_big_getNat(in_R10 * 3,in_RBX);
  iVar3 = 0x3f;
  if (in_R10 != 0) {
    for (; in_R10 >> iVar3 == 0; iVar3 = iVar3 + -1) {
    }
  }
  if (in_R10 == 0) {
    iVar3 = -1;
