        if (prStack0000000000000008->height != (map__regexp_syntax_Regexp_int)0x0) {
          runtime_mapdelete_fast64
                    ((internal_abi_MapType *)&DAT_00830520,
                     (runtime_hmap *)prStack0000000000000008->height,(uint64)re1);
        }
        prVar7 = prStack0000000000000008->free;
        prVar3 = prStack0000000000000008;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier4();
          *extraout_R11_00 = extraout_RSI_00;
          extraout_R11_00[1] = extraout_RBX->Sub0[0];
          extraout_R11_00[2] = extraout_RBX;
          extraout_R11_00[3] = extraout_RCX->free;
          prVar3 = extraout_RCX;
          re1 = extraout_RBX;
          prVar7 = extraout_RSI_00;
        }
        re1->Sub0[0] = prVar7;
        prVar3->free = re1;
        if ((uint)(prVar3->stack).cap < iVar6 - 1U) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAcap();
        }
        (prVar3->stack).len = iVar6 - 1U;
        return;
      }
    }
  }
  if (1 < iVar6) {
    prVar7 = pprVar4[iVar6 + -2];
    prVar8 = pprVar4[iVar6 + -1];
    if (prVar7->Op == 0x81) {
      if (2 < iVar6) {
        regexp_syntax_cleanAlt(pprVar4[iVar6 + -3]);
      }
      if (iVar6 - 2U < (uint)(prStack0000000000000008->stack).len) {
        pprVar4 = (prStack0000000000000008->stack).array;
        prVar3 = prStack0000000000000008;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_01 = extraout_RDI_00;
          extraout_R11_01[1] = extraout_RSI_01[iVar6 + -2];
          prVar3 = extraout_RAX;
          prVar7 = extraout_RBX_00;
          pprVar4 = extraout_RSI_01;
          prVar8 = extraout_RDI_00;
        }
        pprVar4[iVar6 + -2] = prVar8;
        if ((uint)(prVar3->stack).len <= iVar6 - 1U) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        pprVar4 = (prVar3->stack).array;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_02 = extraout_RBX_01;
          extraout_R11_02[1] = extraout_RCX_00[iVar6 + -1];
          pprVar4 = extraout_RCX_00;
          prVar7 = extraout_RBX_01;
        }
        pprVar4[iVar6 + -1] = prVar7;
        return;
      }
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
  }
  return;
}



void regexp_syntax___parser__parseRightParen(regexp_syntax_parser *p,error ~r0)

{
  int iVar1;
  char extraout_AL;
  regexp_syntax_parser *extraout_RAX;
  regexp_syntax_parser *extraout_RAX_00;
  char **extraout_RAX_01;
  char **extraout_RAX_02;
  char **ppcVar2;
  char **extraout_RAX_03;
  char **extraout_RAX_04;
  uint uVar3;
  int n;
  regexp_syntax_Regexp *re1;
  regexp_syntax_Regexp *extraout_RCX;
  regexp_syntax_Regexp *extraout_RCX_00;
  regexp_syntax_Regexp *re;
  uint8 *extraout_RCX_01;
  uint8 *puVar4;
  uint8 *extraout_RCX_02;
  regexp_syntax_Regexp **pprVar5;
  bool ~r0_00;
  regexp_syntax_Regexp *in_RBX;
  regexp_syntax_Regexp *~r0_01;
  void *~r0_02;
  regexp_syntax_Regexp *re2;
  regexp_syntax_Regexp *extraout_RBX;
  regexp_syntax_Regexp *extraout_RBX_00;
  regexp_syntax_Regexp *re_00;
  regexp_syntax_Regexp *extraout_RBX_01;
  int *extraout_R11;
  regexp_syntax_Regexp **extraout_R11_00;
  uint8 **extraout_R11_01;
  uint8 **extraout_R11_02;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX_01;
  }
  regexp_syntax___parser__concat(p,in_RBX);
  regexp_syntax___parser__swapVerticalBar(p,~r0_00);
  if (extraout_AL != '\0') {
    uVar3 = (p->stack).len - 1;
    if ((uint)(p->stack).cap < uVar3) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    (p->stack).len = uVar3;
  }
  regexp_syntax___parser__alternate(p,~r0_01);
  iVar1 = (p->stack).len;
  if (iVar1 < 2) {
    runtime_newobject((internal_abi_Type *)&DAT_00855c40,~r0_02);
    extraout_RAX_03[1] = (char *)0xc;
    *extraout_RAX_03 =
         "unexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen , not pointer != sweepgen  MB globals,  work.nproc=  work.nwait=  nStackRoots= flushedWork double unlock s.spanclass= MB) workers=min too large-byte block (runtime: val=runtime: seq= failed with timer_settimefatal error:  idlethreads= syscalltick=load64 failedxadd64 failedxchg64 failedmp.g0 stack [nil stackbase}\n\tsched={pc:, gp->status= pluginpath= : unknown pc  called from level 3 resetexchange fulltimer expiredsrmount errorreserved_namedefault_valuephp_namespace<unknown: %T>AlreadyExistsUnimplementedUNIMPLEMENTED\"UNAVAILABLE\"INVALID_STATE in host nameGrpc-Encodinggrpc-encodinggrpc-tags-bintransport: %vunix-abstractIntegrityOnlyAddr: <nil>, AuthorizationAccept-RangesIf-None-MatchLast-Modified[FrameHeader invalid base accept-rangesauthorizationcache-controlcontent-rangeif-none-matchlast-modifiedCache-ControlReset ContentLoop DetectedSTREAM_CLOSEDCONNECT_ERRORWINDOW_UPDATE3814697265625#   %s\t%s:%d\n/debug/eventsGunjala_GondiMasaram_GondiMende_KikakuiOld_Hungarianinvalid port name too longData: []byte{gocacheverifyinstallgoroothtml/templatetlsmaxrsasize for message gzip, deflate_grp..." /* TRUNCATED STRING LITERAL */
    ;
    puVar4 = (p->wholeRegexp).str;
    extraout_RAX_03[3] = (char *)(p->wholeRegexp).len;
    ppcVar2 = extraout_RAX_03;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_02 = extraout_RCX_02;
      ppcVar2 = extraout_RAX_04;
      puVar4 = extraout_RCX_02;
    }
    ppcVar2[2] = (char *)puVar4;
    return;
  }
  pprVar5 = (p->stack).array;
  re_00 = pprVar5[iVar1 + -2];
  re = pprVar5[iVar1 + -1];
  (p->stack).len = iVar1 + -2;
  if (re_00->Op != 0x80) {
    runtime_newobject((internal_abi_Type *)&DAT_00855c40,re_00);
    extraout_RAX_01[1] = (char *)0xc;
    *extraout_RAX_01 =
         "unexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen , not pointer != sweepgen  MB globals,  work.nproc=  work.nwait=  nStackRoots= flushedWork double unlock s.spanclass= MB) workers=min too large-byte block (runtime: val=runtime: seq= failed with timer_settimefatal error:  idlethreads= syscalltick=load64 failedxadd64 failedxchg64 failedmp.g0 stack [nil stackbase}\n\tsched={pc:, gp->status= pluginpath= : unknown pc  called from level 3 resetexchange fulltimer expiredsrmount errorreserved_namedefault_valuephp_namespace<unknown: %T>AlreadyExistsUnimplementedUNIMPLEMENTED\"UNAVAILABLE\"INVALID_STATE in host nameGrpc-Encodinggrpc-encodinggrpc-tags-bintransport: %vunix-abstractIntegrityOnlyAddr: <nil>, AuthorizationAccept-RangesIf-None-MatchLast-Modified[FrameHeader invalid base accept-rangesauthorizationcache-controlcontent-rangeif-none-matchlast-modifiedCache-ControlReset ContentLoop DetectedSTREAM_CLOSEDCONNECT_ERRORWINDOW_UPDATE3814697265625#   %s\t%s:%d\n/debug/eventsGunjala_GondiMasaram_GondiMende_KikakuiOld_Hungarianinvalid port name too longData: []byte{gocacheverifyinstallgoroothtml/templatetlsmaxrsasize for message gzip, deflate_grp..." /* TRUNCATED STRING LITERAL */
    ;
    puVar4 = (p->wholeRegexp).str;
    extraout_RAX_01[3] = (char *)(p->wholeRegexp).len;
    ppcVar2 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_01 = extraout_RCX_01;
      ppcVar2 = extraout_RAX_02;
      puVar4 = extraout_RCX_01;
    }
    ppcVar2[2] = (char *)puVar4;
    return;
  }
  p->flags = re_00->Flags;
  if (re_00->Cap == 0) {
    regexp_syntax___parser__push(p,re,re);
  }
  else {
    re_00->Op = 0xd;
    (re_00->Sub).len = 1;
    (re_00->Sub).cap = 1;
    pprVar5 = re_00->Sub0;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = (int)pprVar5;
      extraout_R11[1] = (int)(extraout_RBX->Sub).array;
      p = extraout_RAX;
      re = extraout_RCX;
      re_00 = extraout_RBX;
    }
    (re_00->Sub).array = pprVar5;
    pprVar5 = (re_00->Sub).array;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RCX_00;
      extraout_R11_00[1] = *pprVar5;
      p = extraout_RAX_00;
      re = extraout_RCX_00;
      re_00 = extraout_RBX_00;
    }
    *pprVar5 = re;
    regexp_syntax___parser__push(p,re_00,re);
  }
  return;
}



// WARNING: Variable defined which should be unmapped: nhex

void regexp_syntax___parser__parseEscape
               (regexp_syntax_parser *p,string s,int32 r,string rest,error err)

{
  string t;
  string t_00;
  string t_01;
  string t_02;
  error err_00;
  error err_01;
  error err_02;
  error err_03;
  sdword extraout_EAX;
  int32 c;
  sdword extraout_EAX_00;
  sdword extraout_EAX_01;
  sdword extraout_EAX_02;
  int iVar1;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *puVar2;
  int i;
  undefined *in_RCX;
  int extraout_RCX;
  int extraout_RCX_00;
  int extraout_RCX_01;
  int extraout_RCX_02;
  int iVar3;
  int32 x;
  undefined4 in_register_0000001c;
  void *~r0;
  byte *extraout_RBX;
  undefined8 extraout_RBX_00;
  undefined *~r0_00;
  undefined8 uVar4;
  undefined8 extraout_RBX_01;
  byte *pbVar5;
  void *unaff_RBP;
  int32 v;
  sdword sVar6;
  int extraout_RDI;
  int extraout_RDI_00;
  int extraout_RDI_01;
  int extraout_RDI_02;
  int32 y;
  void **extraout_R11;
  int unaff_R14;
  undefined in_XMM15 [16];
  string in_stack_ffffffffffffffd0;
  undefined4 local_20;
  undefined4 local_1c;
  int nhex;
  runtime_itab *in_stack_fffffffffffffff0;
  
  ~r0 = (void *)CONCAT44(in_register_0000001c,r);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RCX == (undefined *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  if (in_RCX == &DAT_00000001) {
    runtime_newobject((internal_abi_Type *)&DAT_00855c40,~r0);
    extraout_RAX[1] = 0x27;
    *extraout_RAX = &DAT_008c4565;
    *(undefined (*) [16])(extraout_RAX + 2) = in_XMM15;
    return;
  }
  t.str._4_4_ = local_1c;
  t.str._0_4_ = local_20;
  t.len = nhex;
  err_00.data = unaff_RBP;
  err_00.tab = in_stack_fffffffffffffff0;
  regexp_syntax_nextRune
            (in_stack_ffffffffffffffd0,r + ((dword)(-(int)(in_RCX + -1) >> 0x3f) & 1),t,err_00);
  if (extraout_RDI != 0) {
    return;
  }
  iVar3 = extraout_RCX;
  if (extraout_EAX < 0x67) {
    if (extraout_EAX < 0x38) {
      if (extraout_EAX == 0x30) {
LAB_006f64d4:
        iVar1 = 1;
        for (pbVar5 = extraout_RBX;
            ((iVar1 < 3 && (iVar3 != 0)) && ((0x2f < *pbVar5 && (*pbVar5 < 0x38))));
            pbVar5 = pbVar5 + ((dword)(-iVar3 >> 0x3f) & 1)) {
          iVar3 = iVar3 + -1;
          iVar1 = iVar1 + 1;
        }
        return;
      }
      if (0x30 < extraout_EAX) {
        if (((extraout_RCX == 0) || (*extraout_RBX < 0x30)) || (0x37 < *extraout_RBX))
        goto LAB_006f66d2;
        goto LAB_006f64d4;
      }
    }
    else {
      if (extraout_EAX == 0x61) {
        return;
      }
      if (extraout_EAX == 0x66) {
        return;
      }
    }
  }
  else if (extraout_EAX < 0x73) {
    if (extraout_EAX == 0x6e) {
      return;
    }
    if (extraout_EAX == 0x72) {
      return;
    }
  }
  else {
    if (extraout_EAX == 0x74) {
      return;
    }
    if (extraout_EAX == 0x76) {
      return;
    }
    if (extraout_EAX == 0x78) {
      if (extraout_RCX != 0) {
        t_00.str._4_4_ = local_1c;
        t_00.str._0_4_ = local_20;
        t_00.len = nhex;
        err_01.data = unaff_RBP;
        err_01.tab = in_stack_fffffffffffffff0;
        regexp_syntax_nextRune(in_stack_ffffffffffffffd0,(int32)extraout_RBX,t_00,err_01);
        if (extraout_RDI_00 != 0) {
          return;
        }
        if (extraout_EAX_00 == 0x7b) {
          iVar1 = 0;
          sVar6 = 0;
          iVar3 = extraout_RCX_00;
          uVar4 = extraout_RBX_00;
          while (iVar3 != 0) {
            t_02.str._4_4_ = sVar6;
            t_02.str._0_4_ = local_20;
            t_02.len = iVar1;
            err_03.data = unaff_RBP;
            err_03.tab = in_stack_fffffffffffffff0;
            regexp_syntax_nextRune(in_stack_ffffffffffffffd0,(int32)uVar4,t_02,err_03);
            if (extraout_RDI_02 != 0) {
              return;
            }
            iVar3 = extraout_RCX_02;
            if (extraout_EAX_02 == 0x7d) {
              if (iVar1 != 0) {
                return;
              }
              break;
            }
            v = extraout_EAX_02 - 0x30;
            if (9 < (dword)v) {
              if ((dword)(extraout_EAX_02 - 0x61U) < 6) {
                v = extraout_EAX_02 + -0x57;
              }
              else if ((dword)(extraout_EAX_02 - 0x41U) < 6) {
                v = extraout_EAX_02 + -0x37;
              }
              else {
                v = -1;
              }
            }
            if ((v < 0) || (sVar6 = v + sVar6 * 0x10, 0x10ffff < sVar6)) break;
            iVar1 = iVar1 + 1;
            uVar4 = extraout_RBX_01;
          }
        }
        else {
          x = extraout_EAX_00 - 0x30;
          if (9 < (dword)x) {
            if ((dword)(extraout_EAX_00 - 0x61U) < 6) {
              x = extraout_EAX_00 + -0x57;
            }
            else if ((dword)(extraout_EAX_00 - 0x41U) < 6) {
              x = extraout_EAX_00 + -0x37;
            }
            else {
              x = -1;
            }
          }
          t_01.str._4_4_ = local_1c;
          t_01.str._0_4_ = x;
          t_01.len = nhex;
          err_02.data = unaff_RBP;
          err_02.tab = in_stack_fffffffffffffff0;
          regexp_syntax_nextRune(in_stack_ffffffffffffffd0,(int32)extraout_RBX_00,t_01,err_02);
          if (extraout_RDI_01 != 0) {
            return;
          }
          y = extraout_EAX_01 - 0x30;
          if (9 < (dword)y) {
            if ((dword)(extraout_EAX_01 - 0x61U) < 6) {
              y = extraout_EAX_01 + -0x57;
            }
            else if ((dword)(extraout_EAX_01 - 0x41U) < 6) {
              y = extraout_EAX_01 + -0x37;
            }
            else {
              y = -1;
            }
          }
          iVar3 = extraout_RCX_01;
          if ((-1 < x) && (-1 < y)) {
            return;
          }
        }
      }
      goto LAB_006f66d2;
    }
  }
  if (((extraout_EAX < 0x80) && (9 < (dword)(extraout_EAX - 0x30U))) &&
     ((0x19 < (dword)(extraout_EAX - 0x41U) && (0x19 < (dword)(extraout_EAX - 0x61U))))) {
    return;
  }
LAB_006f66d2:
  ~r0_00 = in_RCX + -iVar3;
  if (in_RCX < ~r0_00) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855c40,~r0_00);
  extraout_RAX_00[1] = 0x17;
  *extraout_RAX_00 = &DAT_008bb004;
  extraout_RAX_00[3] = ~r0_00;
  puVar2 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = ~r0;
    puVar2 = extraout_RAX_01;
  }
  puVar2[2] = ~r0;
  return;
}



void regexp_syntax___parser__parseClassChar
               (regexp_syntax_parser *p,string s,string wholeClass,int32 r,string rest,error err)

{
  error err_00;
  error err_01;
  string rest_00;
  string t;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  int in_RCX;
  undefined4 in_register_0000001c;
  int unaff_RBP;
  undefined8 in_RSI;
  undefined8 in_RDI;
  undefined8 *extraout_R11;
  int unaff_R14;
  runtime_itab *unaff_retaddr;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    s.str = (uint8 *)p;
  }
  if (in_RCX == 0) {
    runtime_newobject((internal_abi_Type *)&DAT_00855c40,(char *)CONCAT44(in_register_0000001c,r));
    extraout_RAX[1] = 0x11;
    *extraout_RAX = &DAT_008b7506;
    extraout_RAX[3] = in_RSI;
    puVar1 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = in_RDI;
      puVar1 = extraout_RAX_00;
    }
    puVar1[2] = in_RDI;
    return;
  }
  if (*(char *)CONCAT44(in_register_0000001c,r) != '\\') {
    t.len = unaff_RBP;
    t.str = in_stack_fffffffffffffff0;
    err_01.data = s.str;
    err_01.tab = unaff_retaddr;
    regexp_syntax_nextRune(in_stack_ffffffffffffffe0,r,t,err_01);
    return;
  }
  rest_00.len = unaff_RBP;
  rest_00.str = in_stack_fffffffffffffff0;
  err_00.data = s.str;
  err_00.tab = unaff_retaddr;
  regexp_syntax___parser__parseEscape(p,in_stack_ffffffffffffffe0,r,rest_00,err_00);
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void regexp_syntax___parser__parsePerlClassEscape
               (regexp_syntax_parser *p,string s,__int32 r,__int32 out,string rest)

{
  __int32 r_00;
  __int32 ~r0;
  int *extraout_RAX;
  int in_RCX;
  char *in_RBX;
  undefined8 unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  string in_stack_ffffffffffffffb8;
  int in_stack_ffffffffffffffc8;
  regexp_syntax_charGroup in_stack_ffffffffffffffd0;
  undefined8 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((p->flags & 0x40) != 0) && (1 < in_RCX)) && (*in_RBX == '\\')) {
    runtime_mapaccess1_faststr
              ((internal_abi_MapType *)&DAT_008305e0,(runtime_hmap *)regexp_syntax_perlGroup,
               in_stack_ffffffffffffffb8,in_RBX);
    if (*extraout_RAX == 0) {
      return;
    }
    r_00.cap = in_stack_ffffffffffffffc8;
    r_00.array = (int32 *)in_stack_ffffffffffffffb8.str;
    r_00.len = in_stack_ffffffffffffffb8.len;
    ~r0.len = unaff_RBP;
    ~r0.array = (int32 *)in_stack_fffffffffffffff0;
    ~r0.cap = unaff_retaddr;
    regexp_syntax___parser__appendGroup(p,r_00,in_stack_ffffffffffffffd0,~r0);
    return;
  }
  return;
}



void regexp_syntax___parser__parseNamedClass
               (regexp_syntax_parser *p,string s,__int32 r,__int32 out,string rest,error err)

{
  __int32 r_00;
  string substr;
  regexp_syntax_charGroup g;
  __int32 ~r0;
  int extraout_RAX;
  int i;
  int *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *puVar1;
  uint in_RCX;
  uint uVar2;
  char *in_RBX;
  void *~r0_00;
  char **extraout_R11;
  int unaff_R14;
  string in_stack_ffffffffffffff90;
  uint8 *in_stack_ffffffffffffffa0;
  int in_stack_ffffffffffffffa8;
  __int32 in_stack_ffffffffffffffb0;
  undefined8 in_stack_ffffffffffffffc8;
  uint uVar3;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((int)in_RCX < 2) || (*in_RBX != '[')) || (in_RBX[1] != ':')) {
    return;
  }
  substr.len = in_stack_ffffffffffffffa8;
  substr.str = in_stack_ffffffffffffffa0;
  strings_Index(in_stack_ffffffffffffff90,substr,
                (int)(in_RBX + ((dword)((int)-(in_RCX - 2) >> 0x3f) & 2)));
  if (extraout_RAX < 0) {
    return;
  }
  uVar3 = extraout_RAX + 4;
  if (in_RCX < uVar3) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  uVar2 = (int)-((in_RCX - extraout_RAX) + -4) >> 0x3f & uVar3;
  runtime_mapaccess1_faststr
            ((internal_abi_MapType *)&DAT_008305e0,(runtime_hmap *)regexp_syntax_posixGroup,
             in_stack_ffffffffffffff90,in_RBX);
  if (*extraout_RAX_00 != 0) {
    r_00.cap = (int)in_stack_ffffffffffffffa0;
    r_00.array = (int32 *)in_stack_ffffffffffffff90.str;
    r_00.len = in_stack_ffffffffffffff90.len;
    g.class = in_stack_ffffffffffffffb0;
    g.sign = in_stack_ffffffffffffffa8;
    ~r0.len = uVar3;
    ~r0.array = (int32 *)in_stack_ffffffffffffffc8;
    ~r0.cap = uVar2;
    regexp_syntax___parser__appendGroup(p,r_00,g,~r0);
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855c40,~r0_00);
  extraout_RAX_01[1] = 0x1d;
  *extraout_RAX_01 = &DAT_008be932;
  extraout_RAX_01[3] = uVar3;
  puVar1 = extraout_RAX_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = in_RBX;
    puVar1 = extraout_RAX_02;
  }
  puVar1[2] = in_RBX;
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void regexp_syntax___parser__appendGroup
               (regexp_syntax_parser *p,__int32 r,regexp_syntax_charGroup g,__int32 ~r0)

{
  __int32 ~r0_00;
  __int32 ~r0_01;
  __int32 ~r0_02;
  __int32 ~r0_03;
  __int32 ~r0_04;
  int32 *extraout_RAX;
  int32 *extraout_RAX_00;
  int32 *piVar1;
  int extraout_RCX;
  int extraout_RBX;
  undefined8 unaff_RBP;
  int in_RSI;
  int32 **extraout_R11;
  int unaff_R14;
  int unaff_retaddr;
  __int32 in_stack_ffffffffffffffc0;
  __int32 in_stack_ffffffffffffffd8;
  undefined8 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((p->flags & 1) == 0) {
    if (in_RSI < 0) {
      ~r0_00.len = unaff_RBP;
      ~r0_00.array = (int32 *)in_stack_fffffffffffffff0;
      ~r0_00.cap = unaff_retaddr;
      regexp_syntax_appendNegatedClass(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd8,~r0_00);
    }
    else {
      ~r0_01.len = unaff_RBP;
      ~r0_01.array = (int32 *)in_stack_fffffffffffffff0;
      ~r0_01.cap = unaff_retaddr;
      regexp_syntax_appendClass(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd8,~r0_01);
    }
  }
  else {
    ~r0_02.len = unaff_RBP;
    ~r0_02.array = (int32 *)in_RSI;
    ~r0_02.cap = unaff_retaddr;
    regexp_syntax_appendFoldedClass(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd8,~r0_02);
    (p->tmpClass).len = extraout_RBX;
    (p->tmpClass).cap = extraout_RCX;
    piVar1 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_00;
      extraout_R11[1] = (p->tmpClass).array;
      piVar1 = extraout_RAX_00;
    }
    (p->tmpClass).array = piVar1;
    regexp_syntax_cleanClass(&p->tmpClass,in_stack_ffffffffffffffc0);
    if (in_RSI < 0) {
      ~r0_03.len = unaff_RBP;
      ~r0_03.array = (int32 *)in_RSI;
      ~r0_03.cap = unaff_retaddr;
      regexp_syntax_appendNegatedClass(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd8,~r0_03);
    }
    else {
      ~r0_04.len = unaff_RBP;
      ~r0_04.array = (int32 *)in_RSI;
      ~r0_04.cap = unaff_retaddr;
      regexp_syntax_appendClass(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd8,~r0_04);
    }
  }
  return;
}



void regexp_syntax___parser__parseUnicodeClass
               (regexp_syntax_parser *p,string s,__int32 r,__int32 out,string rest,error err)

{
  __int32 r_00;
  __int32 r_01;
  __int32 r_02;
  __int32 r_03;
  __int32 ~r0;
  __int32 r_04;
  __int32 r_05;
  string t_00;
  error ~r0_00;
  error ~r0_01;
  __int32 ~r0_02;
  __int32 ~r0_03;
  __int32 ~r0_04;
  __int32 ~r0_05;
  __int32 x;
  __int32 x_00;
  __int32 ~r0_06;
  __int32 ~r0_07;
  sdword extraout_EAX;
  int32 c;
  uint extraout_RAX;
  int end;
  int extraout_RAX_00;
  unicode_RangeTable **extraout_RAX_01;
  unicode_RangeTable **extraout_RAX_02;
  unicode_RangeTable **extraout_RAX_03;
  unicode_RangeTable **extraout_RAX_04;
  unicode_RangeTable *fold;
  unicode_RangeTable *x_01;
  int32 *extraout_RAX_05;
  int32 *extraout_RAX_06;
  int32 *piVar1;
  undefined8 *extraout_RAX_07;
  undefined8 *extraout_RAX_08;
  undefined8 *puVar2;
  int extraout_RAX_09;
  undefined8 *extraout_RAX_10;
  undefined8 *extraout_RAX_11;
  uint in_RCX;
  int extraout_RCX;
  int extraout_RCX_00;
  int sign;
  int iVar3;
  char *~r0_08;
  unicode_RangeTable *t;
  unicode_RangeTable *t_1;
  char *in_RBX;
  char *extraout_RBX;
  int extraout_RBX_00;
  void *~r0_09;
  uint uVar4;
  unicode_RangeTable *in_RDI;
  int extraout_RDI;
  dword dVar5;
  short *~r0_10;
  unicode_RangeTable *tab;
  int iVar6;
  int32 **extraout_R11;
  char **extraout_R11_00;
  char **extraout_R11_01;
  int unaff_R14;
  string in_stack_ffffffffffffff78;
  runtime_itab *in_stack_ffffffffffffff88;
  int32 *in_stack_ffffffffffffff90;
  error in_stack_ffffffffffffff98;
  undefined7 in_stack_ffffffffffffffa8;
  char cVar7;
  
  while (&stack0xfffffffffffffff8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((((p->flags & 0x80) == 0) || ((int)in_RCX < 2)) || (*in_RBX != '\\')) ||
     ((cVar7 = in_RBX[1], cVar7 != 'p' && (cVar7 != 'P')))) {
    return;
  }
  t_00.len = (int)in_stack_ffffffffffffff90;
  t_00.str = (uint8 *)in_stack_ffffffffffffff88;
  regexp_syntax_nextRune
            (in_stack_ffffffffffffff78,((dword)((int)-(in_RCX - 2) >> 0x3f) & 2) + (sdword)in_RBX,
             t_00,in_stack_ffffffffffffff98);
  sign = 1;
  if (cVar7 == 'P') {
    sign = -1;
  }
  if (extraout_RDI != 0) {
    return;
  }
  if (extraout_EAX == 0x7b) {
    strings_IndexRune(in_stack_ffffffffffffff78,(sdword)in_RBX,in_RCX);
    if ((int)extraout_RAX < 0) {
      ~r0_01.data = in_stack_ffffffffffffff90;
      ~r0_01.tab = in_stack_ffffffffffffff88;
      regexp_syntax_checkUTF8(in_stack_ffffffffffffff78,~r0_01);
      if (extraout_RAX_09 != 0) {
        return;
      }
      runtime_newobject((internal_abi_Type *)&DAT_00855c40,~r0_09);
      extraout_RAX_10[1] = 0x1d;
      *extraout_RAX_10 = &DAT_008be932;
      extraout_RAX_10[3] = in_RCX;
      puVar2 = extraout_RAX_10;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_01 = in_RBX;
        puVar2 = extraout_RAX_11;
      }
      puVar2[2] = in_RBX;
      return;
    }
    uVar4 = extraout_RAX + 1;
    if (in_RCX < uVar4) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    iVar3 = (in_RCX - extraout_RAX) + -1;
    ~r0_08 = in_RBX + (-iVar3 >> 0x3f & uVar4);
    if (extraout_RAX < 3) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    iVar6 = extraout_RAX - 3;
    dVar5 = (dword)(-iVar6 >> 0x3f) & 3;
    ~r0_00.data = in_stack_ffffffffffffff90;
    ~r0_00.tab = in_stack_ffffffffffffff88;
    regexp_syntax_checkUTF8(in_stack_ffffffffffffff78,~r0_00);
    if (extraout_RAX_00 != 0) {
      return;
    }
  }
  else {
    uVar4 = in_RCX - extraout_RCX;
    if (in_RCX < uVar4) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    if (uVar4 < 2) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    iVar6 = uVar4 - 2;
    dVar5 = (dword)(-iVar6 >> 0x3f) & 2;
    iVar3 = extraout_RCX;
    ~r0_08 = extraout_RBX;
  }
  ~r0_10 = (short *)(in_RBX + dVar5);
  if ((iVar6 != 0) && (*(char *)~r0_10 == '^')) {
    iVar6 = iVar6 + -1;
    sign = -sign;
    ~r0_10 = (short *)((int)~r0_10 + (uint)((dword)(-iVar6 >> 0x3f) & 1));
  }
  if (((iVar6 != 3) || (*~r0_10 != 0x6e41)) ||
     (fold = regexp_syntax_anyTable, tab = regexp_syntax_anyTable, *(char *)(~r0_10 + 1) != 'y')) {
    runtime_mapaccess1_faststr
              ((internal_abi_MapType *)&DAT_0082e1e0,(runtime_hmap *)unicode_Categories,
               in_stack_ffffffffffffff78,~r0_10);
    tab = *extraout_RAX_01;
    if (tab == (unicode_RangeTable *)0x0) {
      runtime_mapaccess1_faststr
                ((internal_abi_MapType *)&DAT_0082e1e0,(runtime_hmap *)unicode_Scripts,
                 in_stack_ffffffffffffff78,~r0_10);
      tab = *extraout_RAX_03;
      if (tab == (unicode_RangeTable *)0x0) {
        tab = (unicode_RangeTable *)0x0;
        fold = (unicode_RangeTable *)0x0;
      }
      else {
        runtime_mapaccess1_faststr
                  ((internal_abi_MapType *)&DAT_0082e1e0,(runtime_hmap *)unicode_FoldScript,
                   in_stack_ffffffffffffff78,~r0_10);
        fold = *extraout_RAX_04;
      }
    }
    else {
      runtime_mapaccess1_faststr
                ((internal_abi_MapType *)&DAT_0082e1e0,(runtime_hmap *)unicode_FoldCategory,
                 in_stack_ffffffffffffff78,~r0_10);
      fold = *extraout_RAX_02;
    }
  }
  if (tab == (unicode_RangeTable *)0x0) {
    runtime_newobject((internal_abi_Type *)&DAT_00855c40,~r0_08);
    extraout_RAX_07[1] = 0x1d;
    *extraout_RAX_07 = &DAT_008be932;
    extraout_RAX_07[3] = uVar4;
    puVar2 = extraout_RAX_07;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = in_RBX;
      puVar2 = extraout_RAX_08;
    }
    puVar2[2] = in_RBX;
    return;
  }
  if (((p->flags & 1) == 0) || (fold == (unicode_RangeTable *)0x0)) {
    if (sign < 1) {
      r_01.cap = (int)in_stack_ffffffffffffff88;
      r_01.array = (int32 *)in_stack_ffffffffffffff78.str;
      r_01.len = in_stack_ffffffffffffff78.len;
      ~r0_03.len = (int)in_stack_ffffffffffffff98.tab;
      ~r0_03.cap = (int)in_stack_ffffffffffffff98.data;
      ~r0_03.array = in_stack_ffffffffffffff90;
      regexp_syntax_appendNegatedTable(r_01,in_RDI,~r0_03);
    }
    else {
      r_00.cap = (int)in_stack_ffffffffffffff88;
      r_00.array = (int32 *)in_stack_ffffffffffffff78.str;
      r_00.len = in_stack_ffffffffffffff78.len;
      ~r0_02.len = (int)in_stack_ffffffffffffff98.tab;
      ~r0_02.cap = (int)in_stack_ffffffffffffff98.data;
      ~r0_02.array = in_stack_ffffffffffffff90;
      regexp_syntax_appendTable(r_00,in_RDI,~r0_02);
    }
  }
  else {
    r_02.cap = (int)in_stack_ffffffffffffff88;
    r_02.array = (int32 *)in_stack_ffffffffffffff78.str;
    r_02.len = in_stack_ffffffffffffff78.len;
    ~r0_04.len = (int)in_stack_ffffffffffffff98.tab;
    ~r0_04.cap = (int)in_stack_ffffffffffffff98.data;
    ~r0_04.array = in_stack_ffffffffffffff90;
    regexp_syntax_appendTable(r_02,(unicode_RangeTable *)(p->tmpClass).array,~r0_04);
    r_03.cap = (int)in_stack_ffffffffffffff88;
    r_03.array = (int32 *)in_stack_ffffffffffffff78.str;
    r_03.len = in_stack_ffffffffffffff78.len;
    ~r0_05.len = (int)in_stack_ffffffffffffff98.tab;
    ~r0_05.cap = (int)in_stack_ffffffffffffff98.data;
    ~r0_05.array = in_stack_ffffffffffffff90;
    regexp_syntax_appendTable(r_03,x_01,~r0_05);
    (p->tmpClass).len = extraout_RBX_00;
    (p->tmpClass).cap = extraout_RCX_00;
    piVar1 = extraout_RAX_05;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_06;
      extraout_R11[1] = (p->tmpClass).array;
      piVar1 = extraout_RAX_06;
    }
    (p->tmpClass).array = piVar1;
    ~r0.cap = (int)in_stack_ffffffffffffff88;
    ~r0.array = (int32 *)in_stack_ffffffffffffff78.str;
    ~r0.len = in_stack_ffffffffffffff78.len;
    regexp_syntax_cleanClass(&p->tmpClass,~r0);
    if (sign < 1) {
      r_05.cap = (int)in_stack_ffffffffffffff88;
      r_05.array = (int32 *)in_stack_ffffffffffffff78.str;
      r_05.len = in_stack_ffffffffffffff78.len;
      x_00.len = (int)in_stack_ffffffffffffff98.tab;
      x_00.cap = (int)in_stack_ffffffffffffff98.data;
      x_00.array = in_stack_ffffffffffffff90;
      ~r0_07.array._7_1_ = cVar7;
      ~r0_07.array._0_7_ = in_stack_ffffffffffffffa8;
      ~r0_07.len = iVar3;
      ~r0_07.cap = sign;
      regexp_syntax_appendNegatedClass(r_05,x_00,~r0_07);
    }
    else {
      r_04.cap = (int)in_stack_ffffffffffffff88;
      r_04.array = (int32 *)in_stack_ffffffffffffff78.str;
      r_04.len = in_stack_ffffffffffffff78.len;
      x.len = (int)in_stack_ffffffffffffff98.tab;
      x.cap = (int)in_stack_ffffffffffffff98.data;
      x.array = in_stack_ffffffffffffff90;
      ~r0_06.array._7_1_ = cVar7;
      ~r0_06.array._0_7_ = in_stack_ffffffffffffffa8;
      ~r0_06.len = iVar3;
      ~r0_06.cap = sign;
      regexp_syntax_appendClass(r_04,x,~r0_06);
    }
  }
  return;
}



void regexp_syntax___parser__parseClass(regexp_syntax_parser *p,string s,string rest,error err)

{
  __int32 r;
  __int32 r_00;
  __int32 ~r0;
  __int32 r_01;
  string wholeClass;
  string wholeClass_00;
  __int32 r_02;
  __int32 r_03;
  __int32 r_04;
  __int32 ~r0_00;
  __int32 ~r0_01;
  __int32 ~r0_02;
  string rest_00;
  string rest_01;
  __int32 out;
  __int32 out_00;
  __int32 out_01;
  error err_00;
  error err_01;
  string rest_02;
