  }
  runtime_assertI2I2((internal_abi_InterfaceType *)&DAT_00835740,in_stack_ffffffffffffffd0,
                     in_stack_ffffffffffffffe0);
  if (extraout_RAX != 0) {
    (**(code **)(extraout_RAX + 0x18))(extraout_RBX);
  }
  return;
}



void net___ParseError__Error(net_ParseError *e,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffb0;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.len = unaff_RBP;
  ~r0_00.str = in_stack_fffffffffffffff0;
  runtime_concatstring4
            ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc0,
             in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,~r0_00);
  return;
}



void net___ParseError__Timeout(net_ParseError *e,bool ~r0)

{
  return;
}



void net___ParseError__Temporary(net_ParseError *e,bool ~r0)

{
  return;
}



void net___AddrError__Error(net_AddrError *e,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffb0;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (e != (net_AddrError *)0x0) {
    if ((e->Addr).len != 0) {
      ~r0_00.len = unaff_RBP;
      ~r0_00.str = in_stack_fffffffffffffff0;
      runtime_concatstring4
                ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc0,
                 in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,~r0_00);
    }
    return;
  }
  return;
}



void net___AddrError__Timeout(net_AddrError *e,bool ~r0)

{
  return;
}



void net___AddrError__Temporary(net_AddrError *e,bool ~r0)

{
  return;
}



void net_UnknownNetworkError_Error(net_UnknownNetworkError e,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.len = unaff_RBP;
  ~r0_00.str = in_stack_fffffffffffffff0;
  runtime_concatstring2
            ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,~r0_00);
  return;
}



void net_UnknownNetworkError_Timeout(net_UnknownNetworkError e,bool ~r0)

{
  return;
}



void net_UnknownNetworkError_Temporary(net_UnknownNetworkError e,bool ~r0)

{
  return;
}



void net___timeoutError__Error(net_timeoutError *e,string ~r0)

{
  return;
}



void net___timeoutError__Timeout(net_timeoutError *e,bool ~r0)

{
  return;
}



void net___timeoutError__Temporary(net_timeoutError *e,bool ~r0)

{
  return;
}



void net___timeoutError__Is(net_timeoutError *e,error err,bool ~r0)

{
  void *in_RCX;
  undefined7 in_register_00000019;
  undefined in_DIL;
  undefined extraout_DIL;
  int unaff_R14;
  void *pvStack0000000000000018;
  
  pvStack0000000000000018 = in_RCX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  if (context_DeadlineExceeded.tab == (runtime_itab *)CONCAT71(in_register_00000019,~r0)) {
    runtime_ifaceeq((runtime_itab *)CONCAT71(in_register_00000019,~r0),pvStack0000000000000018,
                    context_DeadlineExceeded.data,(bool)in_DIL);
  }
  return;
}



void net___DNSError__Error(net_DNSError *e,string ~r0)

{
  string ~r0_00;
  string ~r0_01;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (e != (net_DNSError *)0x0) {
    runtime_concatstring2
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
               in_stack_ffffffffffffffe0);
    if ((e->Server).len != 0) {
      ~r0_00.len = unaff_RBP;
      ~r0_00.str = in_stack_fffffffffffffff0;
      runtime_concatstring3
                ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
                 in_stack_ffffffffffffffe0,~r0_00);
    }
    ~r0_01.len = unaff_RBP;
    ~r0_01.str = in_stack_fffffffffffffff0;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
               in_stack_ffffffffffffffe0,~r0_01);
    return;
  }
  return;
}



void net___DNSError__Timeout(net_DNSError *e,bool ~r0)

{
  return;
}



void net___DNSError__Temporary(net_DNSError *e,bool ~r0)

{
  return;
}



void net_genericReadFrom(io_Writer w,io_Reader r,int64 n,error err)

{
  void *in_RCX;
  void *in_RBX;
  int unaff_R14;
  io_Writer in_stack_ffffffffffffffb0;
  io_Reader in_stack_ffffffffffffffc0;
  __uint8 in_stack_ffffffffffffffd0;
  error err_00;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  err_00.data = in_RBX;
  err_00.tab = (runtime_itab *)n;
  runtime_convT((internal_abi_Type *)&DAT_0084a380,&stack0xffffffffffffffe8,in_RCX);
  io_copyBuffer(in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
                0x95eae0,err_00);
  return;
}



// WARNING: Unknown calling convention

void net_acquireThread(void)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (net_threadOnce.done == 0) {
    sync___Once__doSlow(&net_threadOnce,(func__ **)&PTR_net_acquireThread_func1_008eb100);
  }
  runtime_chansend1((runtime_hchan *)net_threadLimit,&stack0xfffffffffffffff8);
  return;
}



// WARNING: Unknown calling convention

void net_releaseThread(void)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_chanrecv1((runtime_hchan *)net_threadLimit,(void *)0x0);
  return;
}



void net_getSystemNSS(net_nssConf *~r0)

{
  sdword sVar1;
  net_nssConf *conf;
  sdword new_00;
  int32 new;
  int unaff_R14;
  bool bVar2;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  net___nsswitchConfig__tryUpdate(&net_nssConfig);
  LOCK();
  bVar2 = net_nssConfig.mu.state == 0;
  if (bVar2) {
    net_nssConfig.mu.state = 1;
  }
  UNLOCK();
  if (!bVar2) {
    sync___Mutex__lockSlow(&net_nssConfig.mu);
  }
  LOCK();
  sVar1 = net_nssConfig.mu.state + -1;
  UNLOCK();
  new_00 = net_nssConfig.mu.state + -1;
  net_nssConfig.mu.state = sVar1;
  if (new_00 != 0) {
    sync___Mutex__unlockSlow(&net_nssConfig.mu,new_00);
  }
  return;
}



int net___nsswitchConfig__init(EVP_PKEY_CTX *ctx)

{
  time_Time ~r0;
  undefined8 extraout_RAX;
  undefined8 extraout_RAX_00;
  undefined8 uVar1;
  undefined8 extraout_RAX_01;
  int extraout_RAX_02;
  int extraout_RAX_03;
  int iVar2;
  EVP_PKEY_CTX *extraout_RCX;
  EVP_PKEY_CTX *pEVar3;
  runtime_hchan *extraout_RCX_00;
  runtime_hchan *extraout_RCX_01;
  runtime_hchan *~r0_00;
  undefined8 extraout_RBX;
  time_Location *unaff_RBP;
  undefined8 *extraout_R11;
  runtime_hchan **extraout_R11_00;
  int *extraout_R11_01;
  int unaff_R14;
  EVP_PKEY_CTX *pEStack0000000000000008;
  string in_stack_ffffffffffffffe8;
  
  pEStack0000000000000008 = ctx;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  net_parseNSSConfFile(in_stack_ffffffffffffffe8,(net_nssConf *)&DAT_008b786b,(net_nssConf *)0x12);
  uVar1 = extraout_RAX;
  pEVar3 = pEStack0000000000000008;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_00;
    extraout_R11[1] = *(undefined8 *)(extraout_RCX + 0x38);
    uVar1 = extraout_RAX_00;
    pEVar3 = extraout_RCX;
  }
  *(undefined8 *)(pEVar3 + 0x38) = uVar1;
  ~r0.loc = unaff_RBP;
  ~r0.wall = (uint64)in_stack_ffffffffffffffe8.str;
  ~r0.ext = in_stack_ffffffffffffffe8.len;
  time_Now(~r0);
  *(undefined8 *)(pEStack0000000000000008 + 0x18) = extraout_RAX_01;
  *(undefined8 *)(pEStack0000000000000008 + 0x20) = extraout_RBX;
  ~r0_00 = extraout_RCX_00;
  pEVar3 = pEStack0000000000000008;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RCX_01;
    extraout_R11_00[1] = *(runtime_hchan **)(pEVar3 + 0x28);
    ~r0_00 = extraout_RCX_01;
  }
  *(runtime_hchan **)(pEVar3 + 0x28) = ~r0_00;
  runtime_makechan((internal_abi_ChanType *)&DAT_00808e20,1,~r0_00);
  iVar2 = extraout_RAX_02;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_01 = extraout_RAX_03;
    extraout_R11_01[1] = *(int *)(pEStack0000000000000008 + 0x10);
    iVar2 = extraout_RAX_03;
  }
  *(int *)(pEStack0000000000000008 + 0x10) = iVar2;
  return iVar2;
}



// WARNING: Unknown calling convention

void net___nsswitchConfig__tryUpdate(net_nsswitchConfig *conf)

{
  sync_Mutex *psVar1;
  time_Time ~r0;
  time_Time t;
  time_Time t_00;
  time_Time t_01;
  io_fs_FileInfo ~r0_00;
  time_Time ~r0_01;
  time_Time u;
  time_Time u_00;
  char extraout_AL;
  char extraout_AL_00;
  undefined ~r0_02;
  char extraout_AL_01;
  uint64 d;
  int extraout_RAX;
  net_nssConf *extraout_RAX_00;
  net_nssConf *nssConf;
  time_Location *extraout_RCX;
  int extraout_RCX_00;
  net_nsswitchConfig *extraout_RCX_01;
  net_nsswitchConfig *pnVar2;
  sync_Mutex *m;
  sdword sVar3;
  int32 new;
  int64 extraout_RBX;
  undefined8 extraout_RBX_00;
  net_nssConf *extraout_RBX_01;
  time_Location **extraout_R11;
  net_nssConf **extraout_R11_00;
  int unaff_R14;
  bool bVar4;
  net_nsswitchConfig *pnStack0000000000000008;
  string in_stack_ffffffffffffff70;
  time_Location *in_stack_ffffffffffffff80;
  void *in_stack_ffffffffffffff88;
  error in_stack_ffffffffffffff90;
  undefined local_59;
  int64 local_58;
  uint64 local_50;
  sync_Mutex *local_48;
  net_nssConf *local_40;
  time_Location *local_38;
  undefined local_30 [16];
  undefined local_20 [16];
  code **local_10;
  
  pnStack0000000000000008 = conf;
  while (&local_10 <= *(code ****)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_59 = 0;
  local_20._8_8_ = pnStack0000000000000008;
  local_20._0_8_ = net___nsswitchConfig__init_fm;
  if ((pnStack0000000000000008->initOnce).done == 0) {
    sync___Once__doSlow(&pnStack0000000000000008->initOnce,(func__ **)local_20);
  }
  runtime_selectnbsend
            ((runtime_hchan *)pnStack0000000000000008->ch,&local_59,
             SUB81(pnStack0000000000000008->ch,0));
  if (extraout_AL == '\0') {
    return;
  }
  local_30._8_8_ = pnStack0000000000000008;
  local_30._0_8_ = net___nsswitchConfig__tryUpdate_func1;
  local_10 = (code **)local_30;
  local_59 = 1;
  ~r0.loc = in_stack_ffffffffffffff80;
  ~r0.wall = (uint64)in_stack_ffffffffffffff70.str;
  ~r0.ext = in_stack_ffffffffffffff70.len;
  time_Now(~r0);
  t.loc = in_stack_ffffffffffffff80;
  t.wall = (uint64)in_stack_ffffffffffffff70.str;
  t.ext = in_stack_ffffffffffffff70.len;
  ~r0_01.ext = (int64)in_stack_ffffffffffffff90.tab;
  ~r0_01.loc = (time_Location *)in_stack_ffffffffffffff90.data;
  ~r0_01.wall = (uint64)in_stack_ffffffffffffff88;
  local_58 = extraout_RBX;
  local_50 = d;
  local_38 = extraout_RCX;
  time_Time_Add(t,d,~r0_01);
  t_00.loc = in_stack_ffffffffffffff80;
  t_00.wall = (uint64)in_stack_ffffffffffffff70.str;
  t_00.ext = in_stack_ffffffffffffff70.len;
  u.ext = (int64)in_stack_ffffffffffffff90.tab;
  u.loc = (time_Location *)in_stack_ffffffffffffff90.data;
  u.wall = (uint64)in_stack_ffffffffffffff88;
  time_Time_After(t_00,u,SUB81((pnStack0000000000000008->lastChecked).wall,0));
  if (extraout_AL_00 != '\0') {
    local_59 = 0;
    (**local_10)();
    return;
  }
  (pnStack0000000000000008->lastChecked).wall = local_50;
  (pnStack0000000000000008->lastChecked).ext = local_58;
  pnVar2 = pnStack0000000000000008;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = local_38;
    extraout_R11[1] = (pnVar2->lastChecked).loc;
  }
  (pnVar2->lastChecked).loc = local_38;
  ~r0_00.data = in_stack_ffffffffffffff88;
  ~r0_00.tab = (runtime_itab *)in_stack_ffffffffffffff80;
  os_Stat(in_stack_ffffffffffffff70,~r0_00,in_stack_ffffffffffffff90);
  if (extraout_RCX_00 == 0) {
    ~r0_02 = (**(code **)(extraout_RAX + 0x20))(extraout_RBX_00);
  }
  else {
    ~r0_02 = false;
  }
  t_01.loc = in_stack_ffffffffffffff80;
  t_01.wall = (uint64)in_stack_ffffffffffffff70.str;
  t_01.ext = in_stack_ffffffffffffff70.len;
  u_00.ext = (int64)in_stack_ffffffffffffff90.tab;
  u_00.loc = (time_Location *)in_stack_ffffffffffffff90.data;
  u_00.wall = (uint64)in_stack_ffffffffffffff88;
  time_Time_Equal(t_01,u_00,(bool)~r0_02);
  if (extraout_AL_01 != '\0') {
    local_59 = 0;
    (**local_10)();
    return;
  }
  net_parseNSSConfFile(in_stack_ffffffffffffff70,(net_nssConf *)&DAT_008b786b,(net_nssConf *)0x12);
  m = &pnStack0000000000000008->mu;
  LOCK();
  bVar4 = (pnStack0000000000000008->mu).state == 0;
  if (bVar4) {
    (pnStack0000000000000008->mu).state = 1;
  }
  UNLOCK();
  local_40 = extraout_RAX_00;
  if (!bVar4) {
    local_48 = m;
    sync___Mutex__lockSlow(m);
    m = local_48;
  }
  pnVar2 = pnStack0000000000000008;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RBX_01;
    extraout_R11_00[1] = extraout_RCX_01->nssConf;
    pnVar2 = extraout_RCX_01;
    local_40 = extraout_RBX_01;
  }
  pnVar2->nssConf = local_40;
  LOCK();
  psVar1 = &pnVar2->mu;
  sVar3 = psVar1->state;
  psVar1->state = psVar1->state + -1;
  UNLOCK();
  sVar3 = sVar3 + -1;
  if (sVar3 != 0) {
    sync___Mutex__unlockSlow(m,sVar3);
  }
  local_59 = 0;
  (**local_10)();
  return;
}



// WARNING: Unknown calling convention

void net___nsswitchConfig__tryUpdate_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  net___nsswitchConfig__releaseSema(*(net_nsswitchConfig **)(in_RDX + 8));
  return;
}



// WARNING: Unknown calling convention

void net___nsswitchConfig__releaseSema(net_nsswitchConfig *conf)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_chanrecv1((runtime_hchan *)conf->ch,(void *)0x0);
  return;
}



// DWARF original prototype: void net.parseNSSConfFile(string file, net.nssConf * ~r0, net.nssConf *
// ~r0)

void net_parseNSSConfFile(string file,net_nssConf *~r0,net_nssConf *~r0_1)

{
  net_file *f_00;
  net_file *f;
  int extraout_RAX;
  int extraout_RAX_00;
  int iVar1;
  int extraout_RAX_01;
  int extraout_RAX_02;
  int *extraout_RAX_03;
  net_nssConf *conf;
  int *extraout_RAX_04;
  int *piVar2;
  undefined8 extraout_RCX;
  int extraout_RCX_00;
  void *~r0_00;
  net_nssConf *~r0_01;
  int extraout_RSI;
  undefined8 extraout_R8;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int *extraout_R11_01;
  int unaff_R14;
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  f_00 = (net_file *)net_open((char *)~r0,(int)~r0_1);
  if (~r0_00 == (void *)0x0) {
    local_20._8_8_ = f_00;
    local_20._0_8_ = net_parseNSSConfFile_func1;
    local_10 = (code **)local_20;
    iVar1 = net___file__stat((char *)f_00,(stat *)0x0);
    if (extraout_RSI == 0) {
      net_parseNSSConf(f_00,~r0_01);
      *extraout_RAX_03 = iVar1;
      extraout_RAX_03[1] = (int)~r0_01;
      piVar2 = extraout_RAX_03;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_01 = extraout_RCX_00;
        extraout_R11_01[1] = extraout_RAX_04[2];
        piVar2 = extraout_RAX_04;
      }
      piVar2[2] = extraout_RCX_00;
      (**local_10)();
      return;
    }
    runtime_newobject((internal_abi_Type *)&DAT_0085e000,~r0_01);
    *(int *)(extraout_RAX_01 + 0x18) = extraout_RSI;
    iVar1 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = extraout_R8;
      iVar1 = extraout_RAX_02;
    }
    *(undefined8 *)(iVar1 + 0x20) = extraout_R8;
    (**local_10)();
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0085e000,~r0_00);
  *(void **)(extraout_RAX + 0x18) = ~r0_00;
  iVar1 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RCX;
    iVar1 = extraout_RAX_00;
  }
  *(undefined8 *)(iVar1 + 0x20) = extraout_RCX;
  return;
}



// WARNING: Unknown calling convention

void net_parseNSSConfFile_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  net___file__close(*(int *)(in_RDX + 8));
  return;
}



void net_parseNSSConf(net_file *f,net_nssConf *~r0)

{
  runtime_hmap *prVar1;
  uint8 uVar2;
  char cVar3;
  string s;
  string s_00;
  string x;
  string s_01;
  string a0;
  runtime_slice ~r0_00;
  error ~r0_01;
  string a1;
  int extraout_RAX;
  net_nssConf *conf;
  uint8 *extraout_RAX_00;
  uint8 *extraout_RAX_01;
  char **extraout_RAX_02;
  char **extraout_RAX_03;
  char **ppcVar4;
  uint8 *puVar5;
  int extraout_RAX_04;
  undefined8 extraout_RAX_05;
  undefined8 extraout_RAX_06;
  undefined8 uVar6;
  void **extraout_RAX_07;
  void *extraout_RAX_08;
  void *extraout_RAX_09;
  void *oldPtr;
  undefined8 extraout_RAX_10;
  undefined8 *extraout_RAX_11;
  undefined8 *extraout_RAX_12;
  undefined8 *extraout_RAX_13;
  undefined8 *puVar7;
  undefined8 *extraout_RAX_14;
  undefined8 *extraout_RAX_15;
  bool ok;
  undefined8 extraout_RCX;
  undefined8 extraout_RCX_00;
  undefined8 uVar8;
  int i;
  int colon;
  int sp;
  int bclose;
  void *extraout_RCX_01;
  runtime_hmap *prVar9;
  runtime_hmap *prVar10;
  uint8 *puVar11;
  bool ok_00;
  runtime_hmap *extraout_RBX;
  runtime_hmap *extraout_RBX_00;
  runtime_hmap *extraout_RBX_01;
  void *~r0_02;
  void *~r0_03;
  void *newLen;
  void *extraout_RBX_02;
  void *extraout_RBX_03;
  void *~r0_04;
  net_nssConf *extraout_RBX_04;
  int iVar12;
  undefined8 uVar13;
  uint8 *puVar14;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  void **extraout_R11_01;
  undefined8 *extraout_R11_02;
  int *extraout_R11_03;
  undefined8 *extraout_R11_04;
  int unaff_R14;
  bool bVar15;
  uint8 *in_stack_fffffffffffffeb0;
  int in_stack_fffffffffffffeb8;
  runtime_hmap *prVar16;
  undefined uVar17;
  undefined7 in_stack_fffffffffffffec1;
  runtime_hmap *in_stack_fffffffffffffec8;
  string in_stack_fffffffffffffed0;
  runtime_hmap *local_d0;
  int local_c8;
  runtime_hmap *local_c0;
  func_string__error **local_b8;
  uint8 *local_b0;
  undefined8 local_a8;
  uint8 *local_a0;
  uint8 *local_98;
  undefined8 local_90;
  int local_88;
  void *local_80;
  void **local_78;
  uint8 *local_70;
  uint8 *local_68;
  net_file *local_60;
  undefined local_58 [16];
  undefined8 local_48;
  undefined local_40 [16];
  uint8 *local_30;
  undefined4 uStack_28;
  undefined4 uStack_24;
  undefined4 local_20;
  undefined4 uStack_1c;
  undefined local_18 [8];
  undefined8 uStack_10;
  
  while (&local_d0 <= *(runtime_hmap ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0 = extraout_RBX_04;
  }
  local_60 = f;
  runtime_newobject((internal_abi_Type *)&DAT_0085e000,~r0);
  s.len = in_stack_fffffffffffffeb8;
  s.str = in_stack_fffffffffffffeb0;
  local_88 = extraout_RAX;
  net___file__readLine(local_60,s,ok_00);
  puVar5 = extraout_RAX_00;
  uVar8 = extraout_RCX;
  prVar10 = extraout_RBX;
  do {
    if ((char)uVar8 == '\0') {
      return;
    }
    prVar16 = prVar10;
    local_98 = puVar5;
    internal_bytealg_IndexByteString();
    puVar14 = local_98;
    if ((in_stack_fffffffffffffec8 != (runtime_hmap *)0xffffffffffffffff) &&
       (bVar15 = prVar10 < in_stack_fffffffffffffec8, prVar10 = in_stack_fffffffffffffec8, bVar15))
    {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    while ((prVar10 != (runtime_hmap *)0x0 &&
           ((((uVar2 = *puVar14, uVar2 == 0x20 || (uVar2 == 9)) || (uVar2 == 10)) || (uVar2 == 0xd))
           ))) {
      prVar10 = (runtime_hmap *)((int)&prVar10[-1].extra + 7);
      puVar14 = puVar14 + ((dword)(-(int)prVar10 >> 0x3f) & 1);
    }
    for (; prVar9 = extraout_RBX_01, prVar10 != (runtime_hmap *)0x0;
        prVar10 = (runtime_hmap *)((int)&prVar10[-1].extra + 7)) {
      uVar2 = (puVar14 + -1)[(int)prVar10];
      if (((uVar2 != 0x20) && (uVar2 != 9)) && ((uVar2 != 10 && (uVar2 != 0xd)))) {
        if (prVar10 != (runtime_hmap *)0x0) {
          prVar16 = prVar10;
          local_98 = puVar14;
          internal_bytealg_IndexByteString();
          if (in_stack_fffffffffffffec8 == (runtime_hmap *)0xffffffffffffffff) {
            runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_02);
            extraout_RAX_02[1] = (char *)0x10;
            *extraout_RAX_02 =
                 "no colon on line: value of type integer overflowgcshrinkstackofftracefpunwindoffGC scavenge waitGC worker (idle)SIGNONE: no trap out of bounds [/gc/gogc:percent, not a functiongc: unswept span KiB work (bg),  mheap.sweepgen=runtime: nelems=workbuf is emptymSpanList.removemSpanList.insertbad special kindbad summary dataruntime: addr = runtime: base = runtime: head =  already; errno=\nruntime stack:\ninvalid g statuscastogscanstatusbad g transitionschedule: in cgoGOTRACEBACK=nonereflect mismatch untyped locals missing stackmapbad symbol tablenon-Go function\n not in ranges:\nsigaction failedinvalid argumentinvalid exchangeobject is remotemessage too longno route to hostremote I/O errorsource_code_infocc_enable_arenascsharp_namespacephp_class_prefixclient_streamingserver_streamingedition_defaultsmessage_encodingidentifier_valueleading_commentsunknown type: %Treflect.MakeFuncDeadlineExceededPermissionDeniedINVALID_ARGUMENTinvalid code: %dinvalid code: %q\"ALREADY_EXISTS\"ServerName: %q, Attributes: %v, <stream: %p, %v>^{h(?::(\\d+))?}$^{m(?::(\\d+))?}$after object keyhttp: nil Cookiecontent-encodingcontent-languagecontent-locationwww-authenticate%s %s HTTP/1.1\r\nUser-Agent: %s\r\nAlready ReportedMultiple ChoicesPayment RequiredUpgrade RequiredContent-Length: SETTINGS_TIMEOUTFRAME_SIZE_ERRORout of range: %q2384185791015625Imperial_AramaicMeroitic_CursiveZanabazar_Squareinvalid ip:port invalid AddrPortinvalid dns nameunpacking headerRCodeFormatErrorGODEBUG: value \"must be positiveinvalid encodingregexp: Compile(quoted-printableContent-Language"
            ;
            *(undefined1 **)(local_88 + 0x18) = go_itab__errors_errorString_error;
            ppcVar4 = extraout_RAX_02;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier2();
              *extraout_R11 = extraout_RAX_03;
              extraout_R11[1] = *(undefined8 *)(local_88 + 0x20);
              ppcVar4 = extraout_RAX_03;
            }
            *(char ***)(local_88 + 0x20) = ppcVar4;
            return;
          }
          puVar5 = local_98;
          prVar9 = in_stack_fffffffffffffec8;
          if (prVar10 < in_stack_fffffffffffffec8) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceAlen();
          }
          while ((prVar9 != (runtime_hmap *)0x0 &&
                 (((uVar2 = *puVar5, uVar2 == 0x20 || (uVar2 == 9)) ||
                  ((uVar2 == 10 || (uVar2 == 0xd))))))) {
            prVar9 = (runtime_hmap *)((int)&prVar9[-1].extra + 7);
            puVar5 = puVar5 + ((dword)(-(int)prVar9 >> 0x3f) & 1);
          }
          for (; (prVar9 != (runtime_hmap *)0x0 &&
                 ((((uVar2 = (puVar5 + -1)[(int)prVar9], uVar2 == 0x20 || (uVar2 == 9)) ||
                   (uVar2 == 10)) || (uVar2 == 0xd))));
              prVar9 = (runtime_hmap *)((int)&prVar9[-1].extra + 7)) {
          }
          prVar1 = (runtime_hmap *)((int)&in_stack_fffffffffffffec8->count + 1);
          if (prVar10 < prVar1) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          prVar9 = (runtime_hmap *)((int)prVar10 + (-1 - (int)in_stack_fffffffffffffec8));
          puVar11 = local_98 + ((uint)prVar1 & -(int)prVar9 >> 0x3f);
          local_b0 = puVar5;
          puVar5 = puVar14;
          while( true ) {
            while ((prVar9 != (runtime_hmap *)0x0 &&
                   (((uVar2 = *puVar11, uVar2 == 0x20 || (uVar2 == 9)) ||
                    ((uVar2 == 10 || (uVar2 == 0xd))))))) {
              prVar9 = (runtime_hmap *)((int)&prVar9[-1].extra + 7);
              puVar11 = puVar11 + ((dword)(-(int)prVar9 >> 0x3f) & 1);
            }
            while( true ) {
              if (prVar9 == (runtime_hmap *)0x0) goto LAB_005f8968;
              cVar3 = ((undefined *)((int)&prVar9[-1].extra + 7))[(int)puVar11];
              if (((cVar3 != ' ') && (cVar3 != '\t')) && ((cVar3 != '\n' && (cVar3 != '\r'))))
              break;
              prVar9 = (runtime_hmap *)((int)&prVar9[-1].extra + 7);
            }
            if (prVar9 == (runtime_hmap *)0x0) break;
            uVar17 = 0x20;
            prVar16 = prVar9;
            local_a0 = puVar11;
            internal_bytealg_IndexByteString();
            if (in_stack_fffffffffffffec8 == (runtime_hmap *)0xffffffffffffffff) {
              prVar10 = (runtime_hmap *)0x0;
              puVar14 = (uint8 *)0x0;
            }
            else {
              if (prVar9 < in_stack_fffffffffffffec8) {
                    // WARNING: Subroutine does not return
                runtime_panicSliceAlen();
              }
              prVar1 = (runtime_hmap *)((int)&in_stack_fffffffffffffec8->count + 1);
              if (prVar9 < prVar1) {
                    // WARNING: Subroutine does not return
                runtime_panicSliceB();
              }
              prVar10 = (runtime_hmap *)((int)prVar9 + (-1 - (int)in_stack_fffffffffffffec8));
              for (puVar14 = local_a0 + ((uint)prVar1 & -(int)prVar10 >> 0x3f);
                  (prVar10 != (runtime_hmap *)0x0 &&
                  ((((uVar2 = *puVar14, uVar2 == 0x20 || (uVar2 == 9)) || (uVar2 == 10)) ||
                   (uVar2 == 0xd)))); puVar14 = puVar14 + ((dword)(-(int)prVar10 >> 0x3f) & 1)) {
                prVar10 = (runtime_hmap *)((int)&prVar10[-1].extra + 7);
              }
              while ((prVar9 = in_stack_fffffffffffffec8, prVar10 != (runtime_hmap *)0x0 &&
                     (((cVar3 = ((undefined *)((int)&prVar10[-1].extra + 7))[(int)puVar14],
                       cVar3 == ' ' || (cVar3 == '\t')) || ((cVar3 == '\n' || (cVar3 == '\r')))))))
              {
                prVar10 = (runtime_hmap *)((int)&prVar10[-1].extra + 7);
              }
            }
            if (prVar10 == (runtime_hmap *)0x0) {
              uVar8 = 0;
              uVar13 = 0;
              uVar6 = 0;
            }
            else if (*puVar14 == 0x5b) {
              uVar17 = 0x5d;
              local_c0 = prVar10;
              local_68 = puVar14;
              internal_bytealg_IndexByteString();
              if (in_stack_fffffffffffffec8 == (runtime_hmap *)0xffffffffffffffff) {
                runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_03);
                extraout_RAX_14[1] = 0x1a;
                *extraout_RAX_14 = &DAT_008bc395;
                *(undefined1 **)(local_88 + 0x18) = go_itab__errors_errorString_error;
                puVar7 = extraout_RAX_14;
                if (runtime_writeBarrier._0_4_ != 0) {
                  runtime_gcWriteBarrier2();
                  *extraout_R11_04 = extraout_RAX_15;
                  extraout_R11_04[1] = *(undefined8 *)(local_88 + 0x20);
                  puVar7 = extraout_RAX_15;
                }
                *(undefined8 **)(local_88 + 0x20) = puVar7;
                return;
              }
              if (local_c0 < in_stack_fffffffffffffec8) {
                    // WARNING: Subroutine does not return
                runtime_panicSliceAlen();
              }
              if (in_stack_fffffffffffffec8 == (runtime_hmap *)0x0) {
                    // WARNING: Subroutine does not return
                runtime_panicSliceB();
              }
              local_48 = 0;
              local_40 = ZEXT816(0);
              local_b8 = (func_string__error **)
                         (local_68 +
                         ((dword)(-(int)((int)&in_stack_fffffffffffffec8[-1].extra + 7) >> 0x3f) & 1
                         ));
              local_58._8_8_ = &local_48;
              local_58._0_8_ = net_parseNSSConf_parseCriteria_func1;
              x.len = (int)prVar10;
              x.str = puVar14;
              ~r0_01.tab._1_7_ = in_stack_fffffffffffffec1;
              ~r0_01.tab._0_1_ = uVar17;
              ~r0_01.data = in_stack_fffffffffffffec8;
              puVar11 = puVar14;
              prVar16 = prVar10;
              local_d0 = in_stack_fffffffffffffec8;
              net_foreachField(x,local_b8,~r0_01);
              if (extraout_RAX_04 != 0) {
                a0.len = (int)prVar16;
                a0.str = puVar11;
                a1.str._1_7_ = in_stack_fffffffffffffec1;
                a1.str._0_1_ = uVar17;
