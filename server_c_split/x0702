  }
  dot_00.ptr = (void *)in_stack_ffffffffffffff48;
  dot_00.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff40;
  dot_00.flag = in_stack_ffffffffffffff50;
  typ.data = in_stack_ffffffffffffff60;
  typ.tab = in_stack_ffffffffffffff58;
  n.data = in_stack_ffffffffffffff70;
  n.tab = in_stack_ffffffffffffff68;
  ~r0_00.ptr = (void *)in_stack_ffffffffffffff80;
  ~r0_00.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff78;
  ~r0_00.flag = in_stack_ffffffffffffff88;
  text_template___state__evalArg(s,dot_00,typ,n,~r0_00);
  receiver.ptr = (void *)in_R9;
  receiver.typ_ = (internal_abi_Type *)in_R8;
  receiver.flag = in_R10;
  ident.len = in_stack_ffffffffffffff88;
  ident.array = (string *)dot.flag;
  ident.cap = in_stack_ffffffffffffff90;
  ~r0_01.ptr = (void *)in_RDI;
  ~r0_01.typ_ = (internal_abi_Type *)in_stack_ffffffffffffffc8;
  ~r0_01.flag = in_RCX;
  text_template___state__evalFieldChain
            (s,*(reflect_Value *)((int)in_RSI + 0x28),receiver,dot._0_16_,ident,
             in_stack_ffffffffffffff98,in_stack_ffffffffffffffb0,~r0_01);
  return;
}



void text_template___state__evalVariableNode
               (text_template_state *s,reflect_Value dot,text_template_parse_VariableNode *variable,
               __text_template_parse_Node args,reflect_Value final,reflect_Value ~r0)

{
  int iVar1;
  string name;
  reflect_Value dot_00;
  __text_template_parse_Node args_00;
  reflect_Value ~r0_00;
  reflect_Value receiver;
  reflect_Value final_00;
  __string ident;
  reflect_Value ~r0_01;
  text_template_state *extraout_RAX;
  text_template_parse_VariableNode *extraout_RBX;
  void *in_RSI;
  void *extraout_RSI;
  undefined8 in_RDI;
  undefined8 extraout_RDI;
  undefined8 in_R8;
  undefined8 extraout_R8;
  undefined8 in_R9;
  undefined8 extraout_R9;
  reflect_flag in_R10;
  reflect_flag extraout_R10;
  void **extraout_R11;
  reflect_flag rVar2;
  int unaff_R14;
  uint8 *in_stack_ffffffffffffff50;
  int in_stack_ffffffffffffff58;
  int in_stack_ffffffffffffff60;
  undefined8 in_stack_ffffffffffffff68;
  reflect_flag in_stack_ffffffffffffff70;
  reflect_flag in_stack_ffffffffffffff78;
  undefined in_stack_ffffffffffffff98 [16];
  __text_template_parse_Node in_stack_ffffffffffffffa8;
  reflect_Value in_stack_ffffffffffffffc0;
  undefined8 in_stack_ffffffffffffffd8;
  
  while (&stack0xffffffffffffffd0 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  (s->node).tab = (runtime_itab *)go_itab__text_template_parse_VariableNode_text_template_parse_Node
  ;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RSI;
    extraout_R11[1] = (extraout_RAX->node).data;
    s = extraout_RAX;
    variable = extraout_RBX;
    in_RSI = extraout_RSI;
    in_RDI = extraout_RDI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
    in_R10 = extraout_R10;
  }
  (s->node).data = in_RSI;
  if (*(int *)((int)in_RSI + 0x20) == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  name.len = in_stack_ffffffffffffff58;
  name.str = in_stack_ffffffffffffff50;
  ~r0_00.ptr = (void *)in_stack_ffffffffffffff68;
  ~r0_00.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff60;
  ~r0_00.flag = in_stack_ffffffffffffff70;
  text_template___state__varValue(s,name,~r0_00);
  iVar1 = *(int *)((int)in_RSI + 0x20);
  if (iVar1 == 1) {
    args_00.len = in_stack_ffffffffffffff58;
    args_00.array = (text_template_parse_Node *)in_stack_ffffffffffffff50;
    args_00.cap = in_stack_ffffffffffffff60;
    final_00.ptr = (void *)in_stack_ffffffffffffff70;
    final_00.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff68;
    final_00.flag = in_stack_ffffffffffffff78;
    text_template___state__notAFunction(s,args_00,final_00);
    return;
  }
  if (iVar1 != 0) {
    rVar2 = *(int *)((int)in_RSI + 0x28) - 1;
    dot_00.ptr = (void *)(iVar1 + -1);
    dot_00.typ_ = (internal_abi_Type *)
                  (*(int *)((int)in_RSI + 0x18) + (uint)((dword)((int)-rVar2 >> 0x3f) & 0x10));
    dot_00.flag = rVar2;
    receiver.ptr = (void *)in_R9;
    receiver.typ_ = (internal_abi_Type *)in_R8;
    receiver.flag = in_R10;
    ident.len = in_stack_ffffffffffffff98._0_8_;
    ident.cap = in_stack_ffffffffffffff98._8_8_;
    ident.array = (string *)dot.flag;
    ~r0_01.ptr = (void *)in_RDI;
    ~r0_01.typ_ = (internal_abi_Type *)in_stack_ffffffffffffffd8;
    ~r0_01.flag = (reflect_flag)variable;
    text_template___state__evalFieldChain
              (s,dot_00,receiver,dot._0_16_,ident,in_stack_ffffffffffffffa8,
               in_stack_ffffffffffffffc0,~r0_01);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceB();
}



// WARNING: Variable defined which should be unmapped: i

void text_template___state__evalFieldChain
               (text_template_state *s,reflect_Value dot,reflect_Value receiver,
               text_template_parse_Node node,__string ident,__text_template_parse_Node args,
               reflect_Value final,reflect_Value ~r0)

{
  reflect_Value dot_00;
  string fieldName;
  text_template_parse_Node node_00;
  text_template_parse_Node node_01;
  __text_template_parse_Node args_00;
  __text_template_parse_Node args_01;
  reflect_Value ~r0_00;
  reflect_Value ~r0_01;
  void *extraout_RAX;
  undefined8 extraout_RCX;
  int iVar1;
  undefined8 extraout_RBX;
  void *in_RSI;
  reflect_flag in_RDI;
  undefined8 in_R8;
  undefined8 in_R9;
  int unaff_R14;
  undefined in_XMM15 [16];
  int in_stack_ffffffffffffff90;
  reflect_Value in_stack_ffffffffffffff98;
  reflect_Value in_stack_ffffffffffffffb0;
  undefined8 local_38;
  int i;
  reflect_flag local_28;
  text_template_state *local_20;
  
  while (&local_38 <= *(undefined8 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar1 = 0;
  local_28 = in_RDI;
  local_20 = s;
  while( true ) {
    if ((int)(void *)((int)dot.ptr - 1U) <= iVar1) break;
    dot_00.flag = 0;
    dot_00.typ_ = (internal_abi_Type *)in_XMM15._0_8_;
    dot_00.ptr = (void *)in_XMM15._8_8_;
    fieldName.len = (int)text_template_missingVal.ptr;
    fieldName.str = (uint8 *)text_template_missingVal.typ_;
    node_00.data = in_RSI;
    node_00.tab = (runtime_itab *)text_template_missingVal.flag;
    args_00.len = in_R9;
    args_00.array = (text_template_parse_Node *)in_R8;
    args_00.cap = in_stack_ffffffffffffff90;
    ~r0_00.ptr = (void *)iVar1;
    ~r0_00.typ_ = (internal_abi_Type *)local_38;
    ~r0_00.flag = local_28;
    i = iVar1;
    text_template___state__evalField
              (local_20,dot_00,fieldName,node_00,args_00,in_stack_ffffffffffffff98,
               in_stack_ffffffffffffffb0,~r0_00);
    iVar1 = i + 1;
    in_RSI = extraout_RAX;
    in_R8 = extraout_RBX;
    in_R9 = extraout_RCX;
  }
  if ((void *)((int)dot.ptr - 1U) < dot.ptr) {
    node_01.data = in_RSI;
    node_01.tab = (runtime_itab *)ident.array;
    args_01.len = in_R9;
    args_01.array = (text_template_parse_Node *)in_R8;
    args_01.cap = in_stack_ffffffffffffff90;
    ~r0_01.ptr = (void *)i;
    ~r0_01.typ_ = (internal_abi_Type *)local_38;
    ~r0_01.flag = local_28;
    text_template___state__evalField
              (local_20,receiver,(string)node,node_01,args_01,in_stack_ffffffffffffff98,
               in_stack_ffffffffffffffb0,~r0_01);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void text_template___state__evalFunction
               (text_template_state *s,reflect_Value dot,text_template_parse_IdentifierNode *node,
               text_template_parse_Node cmd,__text_template_parse_Node args,reflect_Value final,
               reflect_Value ~r0)

{
  text_template_Template *tmpl;
  undefined8 uVar1;
  string name;
  string val;
  string format;
  reflect_Value dot_00;
  reflect_Value v;
  __interface___ args_00;
  reflect_Value fun;
  text_template_parse_Node node_00;
  string name_00;
  reflect_Value ~r0_00;
  text_template_state *extraout_RAX;
  char extraout_SIL;
  bool ok;
  void *in_RSI;
  void *extraout_RSI;
  undefined in_DIL;
  undefined extraout_DIL;
  undefined extraout_DIL_00;
  bool isBuiltin;
  undefined8 in_R8;
  undefined8 in_R9;
  void **extraout_R11;
  int unaff_R14;
  uint8 *in_stack_ffffffffffffff10;
  int in_stack_ffffffffffffff18;
  undefined8 in_stack_ffffffffffffff20;
  undefined8 in_stack_ffffffffffffff28;
  reflect_flag in_stack_ffffffffffffff30;
  __text_template_parse_Node in_stack_ffffffffffffff60;
  reflect_Value in_stack_ffffffffffffff78;
  undefined in_stack_ffffffffffffff90 [23];
  undefined in_stack_ffffffffffffffa7;
  
  while (&stack0xffffffffffffff90 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  (s->node).tab =
       (runtime_itab *)go_itab__text_template_parse_IdentifierNode_text_template_parse_Node;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RSI;
    extraout_R11[1] = (extraout_RAX->node).data;
    s = extraout_RAX;
    in_RSI = extraout_RSI;
    in_DIL = extraout_DIL;
  }
  (s->node).data = in_RSI;
  tmpl = *(text_template_Template **)((int)in_RSI + 0x18);
  uVar1 = *(undefined8 *)((int)in_RSI + 0x20);
  name.len = in_stack_ffffffffffffff18;
  name.str = in_stack_ffffffffffffff10;
  v.ptr = (void *)in_stack_ffffffffffffff28;
  v.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff20;
  v.flag = in_stack_ffffffffffffff30;
  text_template_findFunction
            (name,tmpl,v,SUB81(uVar1,0),SUB81(s->tmpl,0),(bool)in_DIL,SUB81(in_RSI,0));
  if (extraout_SIL == '\0') {
    val.len = in_stack_ffffffffffffff18;
    val.str = in_stack_ffffffffffffff10;
    in_stack_ffffffffffffffa7 = extraout_DIL_00;
    runtime_convTstring(val,tmpl);
    format.len = in_stack_ffffffffffffff18;
    format.str = in_stack_ffffffffffffff10;
    args_00.len = in_stack_ffffffffffffff28;
    args_00.array = (interface___ *)in_stack_ffffffffffffff20;
    args_00.cap = in_stack_ffffffffffffff30;
    text_template___state__errorf(s,format,args_00);
  }
  dot_00.ptr = (void *)in_R9;
  dot_00.typ_ = (internal_abi_Type *)in_R8;
  dot_00.flag = (reflect_flag)tmpl;
  fun.ptr = dot.typ_;
  fun.typ_ = (internal_abi_Type *)uVar1;
  fun.flag = (reflect_flag)dot.ptr;
  node_00.data = cmd.tab;
  node_00.tab = (runtime_itab *)dot.flag;
  name_00.len = (int)args.array;
  name_00.str = (uint8 *)cmd.data;
  ~r0_00.flag._7_1_ = in_stack_ffffffffffffffa7;
  ~r0_00._0_23_ = in_stack_ffffffffffffff90;
  text_template___state__evalCall
            (s,dot_00,fun,SUB81(node,0),node_00,name_00,in_stack_ffffffffffffff60,
             in_stack_ffffffffffffff78,~r0_00);
  return;
}



// WARNING: Removing unreachable block (ram,0x00760765)
// WARNING: Removing unreachable block (ram,0x0076079c)

void text_template___state__evalField
               (text_template_state *s,reflect_Value dot,string fieldName,
               text_template_parse_Node node,__text_template_parse_Node args,reflect_Value final,
               reflect_Value receiver,reflect_Value ~r0)

{
  string val;
  string format;
  string val_00;
  string format_00;
  string format_01;
  string val_01;
  string format_02;
  string val_02;
  reflect_Type u;
  string val_03;
  string format_03;
  reflect_Type typ;
  string val_04;
  string format_04;
  string val_05;
  string format_05;
  string val_06;
  string format_06;
  interface___ e;
  string val_07;
  string format_07;
  reflect_Value v;
  reflect_Value v_00;
  reflect_Value v_01;
  reflect_Value v_02;
  reflect_Value v_03;
  reflect_Value v_04;
  reflect_Value v_05;
  reflect_Value v_06;
  reflect_Value v_07;
  reflect_Value v_08;
  reflect_Value dot_00;
  reflect_Value v_09;
  __interface___ args_00;
  __interface___ args_01;
  __interface___ args_02;
  __interface___ args_03;
  __interface___ args_04;
  reflect_Value ~r0_00;
  __interface___ args_05;
  __interface___ args_06;
  __interface___ args_07;
  __interface___ args_08;
  reflect_Type ~r0_01;
  string name;
  reflect_Type ~r0_02;
  reflect_Type ~r0_03;
  reflect_Type ~r0_04;
  reflect_Type ~r0_05;
  reflect_Value rv;
  reflect_Value ~r0_06;
  __int index;
  reflect_Value key;
  reflect_Value fun;
  reflect_Value ~r0_07;
  text_template_parse_Node node_00;
  reflect_Value ~r0_08;
  reflect_Value ~r0_09;
  string name_00;
  error ~r1;
  __text_template_parse_Node args_09;
  reflect_Value ~r0_10;
  byte extraout_AL;
  bool hasArgs;
  bool ok;
  char cVar1;
  bool ~r0_11;
  char extraout_AL_00;
  bool ok_1;
  char cVar2;
  undefined8 extraout_RAX;
  undefined1 *extraout_RAX_00;
  undefined1 *extraout_RAX_01;
  undefined1 *extraout_RAX_02;
  int iVar3;
  undefined1 *extraout_RAX_03;
  dword extraout_ECX;
  int extraout_RCX;
  int extraout_RCX_00;
  undefined8 uVar4;
  dword dVar5;
  undefined1 *puVar6;
  internal_abi_Type *t;
  bool in_BL;
  undefined8 extraout_RBX;
  undefined8 extraout_RBX_00;
  undefined8 extraout_RBX_01;
  undefined8 extraout_RBX_02;
  void *in_RSI;
  reflect_flag f;
  char extraout_DIL;
  bool isNil;
  int extraout_RDI;
  undefined8 in_R8;
  undefined8 in_R9;
  undefined8 in_R10;
  int unaff_R14;
  undefined auVar7 [16];
  internal_abi_Type *in_stack_fffffffffffffd48;
  void *in_stack_fffffffffffffd50;
  reflect_flag in_stack_fffffffffffffd58;
  runtime_itab *in_stack_fffffffffffffd60;
  void *in_stack_fffffffffffffd68;
  reflect_flag in_stack_fffffffffffffd70;
  undefined8 in_stack_fffffffffffffd78;
  reflect_flag in_stack_fffffffffffffd80;
  reflect_flag in_stack_fffffffffffffd88;
  runtime_itab *in_stack_fffffffffffffd90;
  text_template_parse_Node *in_stack_fffffffffffffd98;
  undefined in_stack_fffffffffffffda0 [16];
  reflect_Value in_stack_fffffffffffffdb0;
  undefined in_stack_fffffffffffffdc8 [22];
  undefined in_stack_fffffffffffffddf;
  reflect_StructField tField;
  int local_c0;
  
  while (&stack0xfffffffffffffdc8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (args.len == 0) {
    if ((s->tmpl->common->option).missingKey == 2) {
      val_05.len = (int)in_stack_fffffffffffffd50;
      val_05.str = (uint8 *)in_stack_fffffffffffffd48;
      runtime_convTstring(val_05,in_RSI);
      format_05.len = (int)in_stack_fffffffffffffd50;
      format_05.str = (uint8 *)in_stack_fffffffffffffd48;
      args_06.len = (int)in_stack_fffffffffffffd60;
      args_06.array = (interface___ *)in_stack_fffffffffffffd58;
      args_06.cap = (int)in_stack_fffffffffffffd68;
      text_template___state__errorf(s,format_05,args_06);
    }
    return;
  }
  if ((args.len >> 9 & 1) != 0) {
    v.ptr = in_stack_fffffffffffffd50;
    v.typ_ = in_stack_fffffffffffffd48;
    v.flag = in_stack_fffffffffffffd58;
    ~r0_01.data = in_stack_fffffffffffffd68;
    ~r0_01.tab = in_stack_fffffffffffffd60;
    reflect_Value_typeSlow(v,~r0_01);
  }
  v_00.ptr = in_stack_fffffffffffffd50;
  v_00.typ_ = in_stack_fffffffffffffd48;
  v_00.flag = in_stack_fffffffffffffd58;
  rv.ptr = in_stack_fffffffffffffd68;
  rv.typ_ = (internal_abi_Type *)in_stack_fffffffffffffd60;
  rv.flag = in_stack_fffffffffffffd70;
  text_template_indirect(v_00,rv,node.data);
  dVar5 = extraout_ECX & 0x1f;
  if ((dVar5 == 0x14) && (extraout_DIL != '\0')) {
    val.len = (int)in_stack_fffffffffffffd50;
    val.str = (uint8 *)in_stack_fffffffffffffd48;
    runtime_convTstring(val,in_RSI);
    format.len = (int)in_stack_fffffffffffffd50;
    format.str = (uint8 *)in_stack_fffffffffffffd48;
    args_00.len = (int)in_stack_fffffffffffffd60;
    args_00.array = (interface___ *)in_stack_fffffffffffffd58;
    args_00.cap = (int)in_stack_fffffffffffffd68;
    text_template___state__errorf(s,format,args_00);
    return;
  }
  cVar1 = extraout_DIL;
  if (((dVar5 != 0x14) && (dVar5 != 0x16)) && ((extraout_ECX >> 8 & 1) != 0)) {
    v_01.ptr = in_stack_fffffffffffffd50;
    v_01.typ_ = in_stack_fffffffffffffd48;
    v_01.flag = in_stack_fffffffffffffd58;
    ~r0_06.ptr = in_stack_fffffffffffffd68;
    ~r0_06.typ_ = (internal_abi_Type *)in_stack_fffffffffffffd60;
    ~r0_06.flag = in_stack_fffffffffffffd70;
    reflect_Value_Addr(v_01,~r0_06);
  }
  v_02.ptr = in_stack_fffffffffffffd50;
  v_02.typ_ = in_stack_fffffffffffffd48;
  v_02.flag = in_stack_fffffffffffffd58;
  name.len = (int)in_stack_fffffffffffffd68;
  name.str = (uint8 *)in_stack_fffffffffffffd60;
  ~r0_07.ptr = (void *)in_stack_fffffffffffffd78;
  ~r0_07.typ_ = (internal_abi_Type *)in_stack_fffffffffffffd70;
  ~r0_07.flag = in_stack_fffffffffffffd80;
  reflect_Value_MethodByName(v_02,name,~r0_07);
  if (extraout_RCX != 0) {
    dot_00.ptr = (void *)in_R10;
    dot_00.typ_ = (internal_abi_Type *)in_R9;
    dot_00.flag = (reflect_flag)in_RSI;
    fun.ptr = dot.typ_;
    fun.typ_ = (internal_abi_Type *)in_R8;
    fun.flag = (reflect_flag)dot.ptr;
    node_00.data = fieldName.str;
    node_00.tab = (runtime_itab *)dot.flag;
    name_00.len = (int)node.tab;
    name_00.str = (uint8 *)fieldName.len;
    args_09.len = in_stack_fffffffffffffda0._0_8_;
    args_09.cap = in_stack_fffffffffffffda0._8_8_;
    args_09.array = in_stack_fffffffffffffd98;
    ~r0_10.flag._6_1_ = cVar1;
    ~r0_10._0_22_ = in_stack_fffffffffffffdc8;
    ~r0_10.flag._7_1_ = in_stack_fffffffffffffddf;
    text_template___state__evalCall
              (s,dot_00,fun,in_BL,node_00,name_00,args_09,in_stack_fffffffffffffdb0,~r0_10);
    return;
  }
  if ((int)dot.ptr < 2) {
    v_03.ptr = in_stack_fffffffffffffd50;
    v_03.typ_ = in_stack_fffffffffffffd48;
    v_03.flag = in_stack_fffffffffffffd58;
    text_template_isMissing(v_03,fieldName.str);
    hasArgs = (bool)(extraout_AL ^ 1);
  }
  else {
    hasArgs = true;
  }
  if (dVar5 == 0x15) {
    val_02.len = (int)in_stack_fffffffffffffd50;
    val_02.str = (uint8 *)in_stack_fffffffffffffd48;
    runtime_convTstring(val_02,in_RSI);
    if ((extraout_ECX >> 9 & 1) == 0) {
      puVar6 = go_itab__reflect_rtype_reflect_Type;
      uVar4 = extraout_RAX;
    }
    else {
      v_06.ptr = in_stack_fffffffffffffd50;
      v_06.typ_ = in_stack_fffffffffffffd48;
      v_06.flag = in_stack_fffffffffffffd58;
      ~r0_03.data = in_stack_fffffffffffffd68;
      ~r0_03.tab = in_stack_fffffffffffffd60;
      reflect_Value_typeSlow(v_06,~r0_03);
      puVar6 = extraout_RAX_01;
      uVar4 = extraout_RBX_00;
    }
    ~r0_11 = (bool)(**(code **)(puVar6 + 0x90))(uVar4);
    u.data = in_stack_fffffffffffffd50;
    u.tab = (runtime_itab *)in_stack_fffffffffffffd48;
    reflect___rtype__AssignableTo((reflect_rtype *)&DAT_008075e0,u,~r0_11);
    if (extraout_AL_00 != '\0') {
      if (hasArgs != false) {
        val_03.len = (int)in_stack_fffffffffffffd50;
        val_03.str = (uint8 *)in_stack_fffffffffffffd48;
        runtime_convTstring(val_03,in_RSI);
        format_03.len = (int)in_stack_fffffffffffffd50;
        format_03.str = (uint8 *)in_stack_fffffffffffffd48;
        args_04.len = (int)in_stack_fffffffffffffd60;
        args_04.array = (interface___ *)in_stack_fffffffffffffd58;
        args_04.cap = (int)in_stack_fffffffffffffd68;
        text_template___state__errorf(s,format_03,args_04);
      }
      v_07.ptr = in_stack_fffffffffffffd50;
      v_07.typ_ = in_stack_fffffffffffffd48;
      v_07.flag = in_stack_fffffffffffffd58;
      key.ptr = in_stack_fffffffffffffd68;
      key.typ_ = (internal_abi_Type *)in_stack_fffffffffffffd60;
      key.flag = in_stack_fffffffffffffd70;
      ~r0_09.ptr = (void *)in_stack_fffffffffffffd80;
      ~r0_09.typ_ = (internal_abi_Type *)in_stack_fffffffffffffd78;
      ~r0_09.flag = in_stack_fffffffffffffd88;
      reflect_Value_MapIndex(v_07,key,~r0_09);
      if ((extraout_RCX_00 == 0) && (iVar3 = (s->tmpl->common->option).missingKey, iVar3 != 0)) {
        if (iVar3 == 1) {
          if ((extraout_ECX >> 9 & 1) == 0) {
            puVar6 = go_itab__reflect_rtype_reflect_Type;
            uVar4 = extraout_RAX;
          }
          else {
            v_08.ptr = in_stack_fffffffffffffd50;
            v_08.typ_ = in_stack_fffffffffffffd48;
            v_08.flag = in_stack_fffffffffffffd58;
            ~r0_04.data = in_stack_fffffffffffffd68;
            ~r0_04.tab = in_stack_fffffffffffffd60;
            reflect_Value_typeSlow(v_08,~r0_04);
            puVar6 = extraout_RAX_02;
            uVar4 = extraout_RBX_01;
          }
          (**(code **)(puVar6 + 0x48))(uVar4);
          typ.data = in_stack_fffffffffffffd50;
          typ.tab = (runtime_itab *)in_stack_fffffffffffffd48;
          ~r0_00.ptr = in_stack_fffffffffffffd60;
          ~r0_00.typ_ = (internal_abi_Type *)in_stack_fffffffffffffd58;
          ~r0_00.flag = (reflect_flag)in_stack_fffffffffffffd68;
          reflect_Zero(typ,~r0_00);
        }
        else if (iVar3 == 2) {
          val_04.len = (int)in_stack_fffffffffffffd50;
          val_04.str = (uint8 *)in_stack_fffffffffffffd48;
          runtime_convTstring(val_04,in_RSI);
          format_04.len = (int)in_stack_fffffffffffffd50;
          format_04.str = (uint8 *)in_stack_fffffffffffffd48;
          args_05.len = (int)in_stack_fffffffffffffd60;
          args_05.array = (interface___ *)in_stack_fffffffffffffd58;
          args_05.cap = (int)in_stack_fffffffffffffd68;
          text_template___state__errorf(s,format_04,args_05);
        }
      }
      return;
    }
  }
  else if (dVar5 == 0x16) {
    if ((extraout_ECX >> 9 & 1) == 0) {
      puVar6 = go_itab__reflect_rtype_reflect_Type;
      uVar4 = extraout_RAX;
    }
    else {
      v_09.ptr = in_stack_fffffffffffffd50;
      v_09.typ_ = in_stack_fffffffffffffd48;
      v_09.flag = in_stack_fffffffffffffd58;
      ~r0_05.data = in_stack_fffffffffffffd68;
      ~r0_05.tab = in_stack_fffffffffffffd60;
      reflect_Value_typeSlow(v_09,~r0_05);
      puVar6 = extraout_RAX_03;
      uVar4 = extraout_RBX_02;
    }
    auVar7 = (**(code **)(puVar6 + 0x48))(uVar4);
    iVar3 = (**(code **)(auVar7._0_8_ + 0x98))(auVar7._8_8_);
    if (iVar3 == 0x19) {
      FUN_0046cdab();
      (**(code **)(auVar7._0_8_ + 0x68))(auVar7._8_8_,in_RSI,in_R8);
      cVar2 = FUN_0046d10c();
      if (cVar2 == '\0') goto LAB_00760b51;
    }
    if (cVar1 != '\0') {
      val_07.len = (int)in_stack_fffffffffffffd50;
      val_07.str = (uint8 *)in_stack_fffffffffffffd48;
      runtime_convTstring(val_07,in_RSI);
      format_07.len = (int)in_stack_fffffffffffffd50;
      format_07.str = (uint8 *)in_stack_fffffffffffffd48;
      args_08.len = (int)in_stack_fffffffffffffd60;
      args_08.array = (interface___ *)in_stack_fffffffffffffd58;
      args_08.cap = (int)in_stack_fffffffffffffd68;
      text_template___state__errorf(s,format_07,args_08);
    }
  }
  else if (dVar5 == 0x19) {
    if ((extraout_ECX >> 9 & 1) == 0) {
      puVar6 = go_itab__reflect_rtype_reflect_Type;
    }
    else {
      v_04.ptr = in_stack_fffffffffffffd50;
      v_04.typ_ = in_stack_fffffffffffffd48;
      v_04.flag = in_stack_fffffffffffffd58;
      ~r0_02.data = in_stack_fffffffffffffd68;
      ~r0_02.tab = in_stack_fffffffffffffd60;
      reflect_Value_typeSlow(v_04,~r0_02);
      puVar6 = extraout_RAX_00;
    }
    FUN_0046cdab();
    (**(code **)(puVar6 + 0x68))(extraout_RBX,in_RSI,in_R8);
    FUN_0046d10c();
    cVar1 = FUN_0046d10c();
    if (cVar1 != '\0') {
      v_05.ptr = in_stack_fffffffffffffd50;
      v_05.typ_ = in_stack_fffffffffffffd48;
      v_05.flag = in_stack_fffffffffffffd58;
      index.len = (int)in_stack_fffffffffffffd68;
      index.array = (int *)in_stack_fffffffffffffd60;
      index.cap = in_stack_fffffffffffffd70;
      ~r0_08.ptr = (void *)in_stack_fffffffffffffd80;
      ~r0_08.typ_ = (internal_abi_Type *)in_stack_fffffffffffffd78;
      ~r0_08.flag = in_stack_fffffffffffffd88;
      ~r1.data = in_stack_fffffffffffffd98;
      ~r1.tab = in_stack_fffffffffffffd90;
      reflect_Value_FieldByIndexErr(v_05,index,~r0_08,~r1);
      iVar3 = extraout_RDI;
      FUN_0046d10c();
      if (local_c0 != 0) {
        val_00.len = (int)in_stack_fffffffffffffd50;
        val_00.str = (uint8 *)in_stack_fffffffffffffd48;
        runtime_convTstring(val_00,in_RSI);
        format_00.len = (int)in_stack_fffffffffffffd50;
        format_00.str = (uint8 *)in_stack_fffffffffffffd48;
        args_01.len = (int)in_stack_fffffffffffffd60;
        args_01.array = (interface___ *)in_stack_fffffffffffffd58;
        args_01.cap = (int)in_stack_fffffffffffffd68;
        text_template___state__errorf(s,format_00,args_01);
      }
      if (iVar3 != 0) {
        format_01.len = (int)in_stack_fffffffffffffd50;
        format_01.str = (uint8 *)in_stack_fffffffffffffd48;
        args_02.len = (int)in_stack_fffffffffffffd60;
        args_02.array = (interface___ *)in_stack_fffffffffffffd58;
        args_02.cap = (int)in_stack_fffffffffffffd68;
        text_template___state__errorf(s,format_01,args_02);
      }
      if (hasArgs != false) {
        val_01.len = (int)in_stack_fffffffffffffd50;
        val_01.str = (uint8 *)in_stack_fffffffffffffd48;
        runtime_convTstring(val_01,in_RSI);
        format_02.len = (int)in_stack_fffffffffffffd50;
        format_02.str = (uint8 *)in_stack_fffffffffffffd48;
        args_03.len = (int)in_stack_fffffffffffffd60;
        args_03.array = (interface___ *)in_stack_fffffffffffffd58;
        args_03.cap = (int)in_stack_fffffffffffffd68;
        text_template___state__errorf(s,format_02,args_03);
      }
      return;
    }
  }
LAB_00760b51:
  val_06.len = (int)in_stack_fffffffffffffd50;
  val_06.str = (uint8 *)in_stack_fffffffffffffd48;
  runtime_convTstring(val_06,in_RSI);
  format_06.len = (int)in_stack_fffffffffffffd50;
  format_06.str = (uint8 *)in_stack_fffffffffffffd48;
  args_07.len = (int)in_stack_fffffffffffffd60;
  args_07.array = (interface___ *)in_stack_fffffffffffffd58;
  args_07.cap = (int)in_stack_fffffffffffffd68;
  text_template___state__errorf(s,format_06,args_07);
  e.data = in_stack_fffffffffffffd50;
  e._type = in_stack_fffffffffffffd48;
                    // WARNING: Subroutine does not return
  runtime_gopanic(e);
}



void text_template___state__evalCall
               (text_template_state *s,reflect_Value dot,reflect_Value fun,bool isBuiltin,
               text_template_parse_Node node,string name,__text_template_parse_Node args,
               reflect_Value final,reflect_Value ~r0)

{
  reflect_Value v;
  reflect_Value v_00;
  reflect_Value dot_00;
  reflect_Value v_01;
  reflect_Value value;
  reflect_Value fun_00;
  reflect_Value v_02;
  reflect_Value dot_01;
  reflect_Value dot_02;
  reflect_Value v_03;
  reflect_Value arg;
  reflect_Value value_00;
  reflect_Value v_04;
  __interface___ args_00;
  __interface___ args_01;
  __interface___ args_02;
  __interface___ args_03;
  __reflect_Value args_04;
  reflect_Value ~r0_00;
  reflect_Value ~r0_01;
  text_template_parse_Node n;
  text_template_parse_Node n_00;
  text_template_parse_Node n_01;
  reflect_Value ~r0_02;
  reflect_Value ~r0_03;
  reflect_Value val;
  reflect_Value ~r0_04;
  reflect_Value ~r0_05;
  reflect_Value ~r0_06;
  error err;
  char extraout_AL;
  char extraout_AL_01;
  bool safe;
  char extraout_AL_02;
  char cVar1;
  char extraout_AL_00;
  runtime_itab *extraout_RAX;
  int iVar2;
  undefined8 extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 extraout_RAX_02;
  undefined8 extraout_RAX_03;
  undefined8 extraout_RAX_04;
  undefined8 extraout_RAX_05;
  undefined8 extraout_RAX_06;
  undefined8 extraout_RAX_07;
  int extraout_RAX_08;
  undefined8 extraout_RAX_09;
  undefined8 extraout_RAX_10;
  int iVar3;
  uint uVar4;
  undefined8 extraout_RAX_11;
  undefined8 extraout_RAX_12;
  undefined8 extraout_RAX_13;
  undefined8 extraout_RAX_14;
  undefined8 uVar5;
  undefined8 extraout_RAX_15;
  undefined8 extraout_RAX_16;
  internal_abi_Type *have;
  int numFixed;
  undefined8 extraout_RCX;
  undefined8 extraout_RCX_00;
  undefined8 extraout_RCX_01;
  int numIn;
  undefined7 in_register_00000019;
  undefined8 extraout_RBX;
  void *x;
  void *x_00;
  void *x_01;
  void *x_02;
  void *x_03;
  undefined8 extraout_RBX_00;
  undefined8 extraout_RBX_01;
  undefined8 extraout_RBX_02;
  undefined8 extraout_RBX_03;
  undefined8 uVar6;
  undefined8 extraout_RBX_04;
  undefined8 extraout_RBX_05;
  undefined8 *extraout_RBX_06;
  undefined8 in_RSI;
  undefined8 extraout_RSI;
  void *extraout_RDI;
  void *extraout_RDI_00;
  void *~r0_07;
  int extraout_RDI_01;
  int extraout_RDI_02;
  int extraout_RDI_03;
  int in_R8;
  int iVar7;
  int extraout_R8;
  text_template_state *extraout_R8_00;
  text_template_state *ptVar8;
  int in_R9;
  char in_R10B;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  void **extraout_R11_01;
  undefined8 *extraout_R11_02;
  undefined1 *puVar9;
  uint64 uVar10;
  int unaff_R14;
  bool bVar11;
  undefined auVar12 [16];
  undefined auVar13 [16];
  string in_stack_fffffffffffffea8;
  interface___ *in_stack_fffffffffffffeb8;
  interface___ in_stack_fffffffffffffec0;
  runtime_itab *in_stack_fffffffffffffed0;
  void *in_stack_fffffffffffffed8;
  reflect_flag in_stack_fffffffffffffee0;
  undefined7 in_stack_fffffffffffffee8;
  char cVar14;
  void *in_stack_fffffffffffffef8;
  int i;
  uint64 local_d8;
  uint64 local_d0;
  int local_c8;
  undefined8 local_b8;
  undefined8 local_b0;
  undefined8 local_a8;
  undefined8 local_a0;
  undefined8 local_98;
  int local_90;
  undefined8 local_88;
  undefined8 local_80;
  int local_78;
  int local_68;
  undefined8 local_60;
  undefined local_58 [16];
  undefined local_48 [16];
  undefined local_38 [16];
  undefined local_28 [16];
  undefined local_18 [16];
  
  while (&local_d8 <= *(uint64 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (fun.ptr == (void *)0x0) {
    local_68 = 0;
    numIn = fun.flag;
  }
  else {
    if (fun.flag == 0) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    local_68 = (uint)((dword)(-(int)((int)node.tab[-1].fun + 7) >> 0x3f) & 0x10) + (int)fun.ptr;
    numIn = fun.flag - 1;
  }
  local_c8 = in_R9;
  local_80 = in_RSI;
  local_78 = in_R8;
  local_60 = CONCAT71(in_register_00000019,isBuiltin);
  if ((in_R9 == 0) || (((dword)in_R9 >> 9 & 1) != 0)) {
    v.flag = (reflect_flag)in_stack_fffffffffffffeb8;
    v.typ_ = (internal_abi_Type *)in_stack_fffffffffffffea8.str;
    v.ptr = (void *)in_stack_fffffffffffffea8.len;
    reflect_Value_typeSlow(v,(reflect_Type)in_stack_fffffffffffffec0);
    in_RSI = extraout_RBX;
    puVar9 = (undefined1 *)extraout_RAX;
  }
  else {
    puVar9 = go_itab__reflect_rtype_reflect_Type;
  }
  v_00.flag = (reflect_flag)in_stack_fffffffffffffeb8;
  v_00.typ_ = (internal_abi_Type *)in_stack_fffffffffffffea8.str;
  v_00.ptr = (void *)in_stack_fffffffffffffea8.len;
  local_b8 = in_RSI;
  text_template_isMissing(v_00,node.data);
  local_d0 = numIn + 1;
  cVar14 = extraout_AL;
  cVar1 = (*(code *)((runtime_itab *)((int)puVar9 + 0x80))->_type)(local_b8);
  if (cVar14 != '\0') {
    local_d0 = numIn;
  }
  if (cVar1 == '\0') {
    uVar10 = (*(code *)((runtime_itab *)((int)puVar9 + 0xc0))->_type)(local_b8);
    iVar2 = numIn;
    if (uVar10 != local_d0) {
      local_d8 = (*(code *)((runtime_itab *)((int)puVar9 + 0xc0))->_type)(local_b8);
      runtime_convTstring(in_stack_fffffffffffffea8,(void *)dot.flag);
      local_38._8_8_ = extraout_RAX_03;
      local_38._0_8_ = &DAT_008075e0;
      runtime_convT64(local_d8,x_01);
      local_28._8_8_ = extraout_RAX_04;
      local_28._0_8_ = &DAT_00807760;
      runtime_convT64(local_d0,x_02);
      local_18._8_8_ = extraout_RAX_05;
      local_18._0_8_ = &DAT_00807760;
      args_01.len = (int)in_stack_fffffffffffffec0._type;
      args_01.cap = (int)in_stack_fffffffffffffec0.data;
      args_01.array = in_stack_fffffffffffffeb8;
      text_template___state__errorf(s,in_stack_fffffffffffffea8,args_01);
    }
  }
  else {
    iVar2 = (*(code *)((runtime_itab *)((int)puVar9 + 0xc0))->_type)(local_b8);
    iVar2 = iVar2 + -1;
    if ((int)local_d0 < iVar2) {
      local_d8 = (*(code *)((runtime_itab *)((int)puVar9 + 0xc0))->_type)(local_b8);
      runtime_convTstring(in_stack_fffffffffffffea8,(void *)dot.flag);
      local_38._8_8_ = extraout_RAX_00;
      local_38._0_8_ = &DAT_008075e0;
      runtime_convT64(local_d8 - 1,x);
      local_28._8_8_ = extraout_RAX_01;
      local_28._0_8_ = &DAT_00807760;
      runtime_convT64(numIn,x_00);
      local_18._8_8_ = extraout_RAX_02;
      local_18._0_8_ = &DAT_00807760;
      args_00.len = (int)in_stack_fffffffffffffec0._type;
      args_00.cap = (int)in_stack_fffffffffffffec0.data;
      args_00.array = in_stack_fffffffffffffeb8;
      text_template___state__errorf(s,in_stack_fffffffffffffea8,args_00);
    }
  }
  text_template_goodFunc((reflect_Type)in_stack_fffffffffffffea8,SUB81(puVar9,0));
  ~r0_07 = extraout_RDI;
  if (extraout_AL_00 == '\0') {
    local_d8 = (*(code *)((runtime_itab *)((int)puVar9 + 0xc0))->fun[0])(local_b8);
    runtime_convTstring(in_stack_fffffffffffffea8,(void *)dot.flag);
    local_58._8_8_ = extraout_RAX_06;
    local_58._0_8_ = &DAT_008075e0;
    runtime_convT64(local_d8,x_03);
    local_48._8_8_ = extraout_RAX_07;
    local_48._0_8_ = &DAT_00807760;
    args_02.len = (int)in_stack_fffffffffffffec0._type;
    args_02.cap = (int)in_stack_fffffffffffffec0.data;
    args_02.array = in_stack_fffffffffffffeb8;
    text_template___state__errorf(s,in_stack_fffffffffffffea8,args_02);
    ~r0_07 = extraout_RDI_00;
  }
  if ((in_R10B != '\0') &&
     ((((fun.typ_ == (internal_abi_Type *)&DAT_00000003 && (*(short *)dot.flag == 0x6e61)) &&
       (*(char *)(dot.flag + 2) == 'd')) ||
      ((fun.typ_ == (internal_abi_Type *)0x2 && (*(short *)dot.flag == 0x726f)))))) {
    auVar12 = (*(code *)((runtime_itab *)((int)puVar9 + 0x80))->inter)(local_b8,0);
    uVar10 = 0;
    iVar2 = local_68;
    while( true ) {
      local_98 = auVar12._8_8_;
      local_88 = auVar12._0_8_;
      if (numIn <= (int)uVar10) {
        if (((text_template_missingVal.typ_ != (internal_abi_Type *)node.data) ||
            ((uint8 *)text_template_missingVal.ptr != name.str)) ||
           (text_template_missingVal.flag != name.len)) {
          value_00.flag = (reflect_flag)in_stack_fffffffffffffeb8;
          value_00.typ_ = (internal_abi_Type *)in_stack_fffffffffffffea8.str;
          value_00.ptr = (void *)in_stack_fffffffffffffea8.len;
          ~r0_03.ptr = in_stack_fffffffffffffed8;
          ~r0_03.typ_ = (internal_abi_Type *)in_stack_fffffffffffffed0;
          ~r0_03.flag = in_stack_fffffffffffffee0;
          text_template___state__validateType
                    (s,value_00,(reflect_Type)in_stack_fffffffffffffec0,~r0_03);
          v_04.flag = (reflect_flag)in_stack_fffffffffffffeb8;
          v_04.typ_ = (internal_abi_Type *)in_stack_fffffffffffffea8.str;
          v_04.ptr = (void *)in_stack_fffffffffffffea8.len;
          ~r0_01.flag = (reflect_flag)in_stack_fffffffffffffed0;
          ~r0_01.typ_ = in_stack_fffffffffffffec0._type;
          ~r0_01.ptr = in_stack_fffffffffffffec0.data;
