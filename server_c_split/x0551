        (*pavStack0000000000000008)[iVar1 + 1].Feature) {
      return;
    }
    if ((*pavStack0000000000000010)[iVar1 + 1].Specified !=
        (*pavStack0000000000000008)[iVar1 + 1].Specified) {
      return;
    }
    if ((*pavStack0000000000000010)[iVar1 + 1].Enable !=
        (*pavStack0000000000000008)[iVar1 + 1].Enable) {
      return;
    }
    if ((*pavStack0000000000000010)[iVar1 + 1].Required !=
        (*pavStack0000000000000008)[iVar1 + 1].Required) {
      return;
    }
    if ((*pavStack0000000000000008)[iVar1 + 2].Name.len !=
        (*pavStack0000000000000010)[iVar1 + 2].Name.len) {
      return;
    }
    if ((*pavStack0000000000000010)[iVar1 + 2].Feature !=
        (*pavStack0000000000000008)[iVar1 + 2].Feature) break;
    if ((*pavStack0000000000000010)[iVar1 + 2].Specified !=
        (*pavStack0000000000000008)[iVar1 + 2].Specified) {
      return;
    }
    if ((*pavStack0000000000000010)[iVar1 + 2].Enable !=
        (*pavStack0000000000000008)[iVar1 + 2].Enable) {
      return;
    }
    if ((*pavStack0000000000000010)[iVar1 + 2].Required !=
        (*pavStack0000000000000008)[iVar1 + 2].Required) {
      return;
    }
    if ((*pavStack0000000000000010)[iVar1 + 3].Name.len !=
        (*pavStack0000000000000008)[iVar1 + 3].Name.len) {
      return;
    }
    if ((*pavStack0000000000000010)[iVar1 + 3].Feature !=
        (*pavStack0000000000000008)[iVar1 + 3].Feature) {
      return;
    }
    if ((*pavStack0000000000000010)[iVar1 + 3].Specified !=
        (*pavStack0000000000000008)[iVar1 + 3].Specified) {
      return;
    }
    if ((*pavStack0000000000000010)[iVar1 + 3].Enable !=
        (*pavStack0000000000000008)[iVar1 + 3].Enable) {
      return;
    }
    if ((*pavStack0000000000000010)[iVar1 + 3].Required !=
        (*pavStack0000000000000008)[iVar1 + 3].Required) {
      return;
    }
    iVar1 = iVar1 + 4;
  }
  return;
}



int vendor_golang_org_x_crypto_chacha20poly1305_init(EVP_PKEY_CTX *ctx)

{
  uint uVar1;
  
  if (vendor_golang_org_x_sys_cpu_X86.HasAVX2) {
    uVar1 = (uint)vendor_golang_org_x_sys_cpu_X86.HasBMI2;
  }
  else {
    uVar1 = 0;
  }
  vendor_golang_org_x_crypto_chacha20poly1305_useAVX2 = (bool)(char)uVar1;
  return uVar1;
}



void crypto_tls_CipherSuites(___crypto_tls_CipherSuite ~r0)

{
  int iVar1;
  undefined8 *extraout_RAX;
  undefined2 *extraout_RAX_00;
  undefined2 *extraout_RAX_01;
  undefined2 *extraout_RAX_02;
  undefined2 *extraout_RAX_03;
  undefined2 *extraout_RAX_04;
  undefined2 *extraout_RAX_05;
  undefined2 *extraout_RAX_06;
  undefined2 *extraout_RAX_07;
  undefined2 *extraout_RAX_08;
  undefined2 *extraout_RAX_09;
  undefined2 *extraout_RAX_10;
  undefined2 *extraout_RAX_11;
  undefined2 *extraout_RAX_12;
  undefined2 *extraout_RAX_13;
  undefined2 *extraout_RAX_14;
  undefined2 *extraout_RAX_15;
  undefined2 *extraout_RAX_16;
  undefined2 *extraout_RAX_17;
  undefined2 *extraout_RAX_18;
  undefined2 *extraout_RAX_19;
  undefined2 *extraout_RAX_20;
  undefined2 *extraout_RAX_21;
  undefined2 *extraout_RAX_22;
  undefined2 *extraout_RAX_23;
  undefined2 *extraout_RAX_24;
  undefined2 *extraout_RAX_25;
  undefined2 *extraout_RAX_26;
  undefined2 *extraout_RAX_27;
  undefined2 *extraout_RAX_28;
  undefined2 *extraout_RAX_29;
  undefined2 *extraout_RAX_30;
  undefined2 *extraout_RAX_31;
  undefined2 *extraout_RAX_32;
  undefined2 *extraout_RAX_33;
  undefined2 *extraout_RAX_34;
  undefined2 *extraout_RAX_35;
  undefined2 *extraout_RAX_36;
  undefined2 *extraout_RAX_37;
  undefined2 *extraout_RAX_38;
  undefined2 *extraout_RAX_39;
  undefined2 *extraout_RAX_40;
  undefined2 *extraout_RAX_41;
  undefined2 *extraout_RAX_42;
  undefined2 *extraout_RAX_43;
  undefined2 *extraout_RAX_44;
  undefined2 *extraout_RAX_45;
  undefined2 *extraout_RAX_46;
  undefined2 *extraout_RAX_47;
  undefined2 *extraout_RAX_48;
  undefined2 *extraout_RAX_49;
  undefined2 *extraout_RAX_50;
  undefined2 *puVar2;
  void *in_RBX;
  void *~r0_00;
  uint16 *extraout_RBX;
  uint16 *extraout_RBX_00;
  uint16 *extraout_RBX_01;
  uint16 *extraout_RBX_02;
  uint16 *extraout_RBX_03;
  uint16 *extraout_RBX_04;
  uint16 *extraout_RBX_05;
  uint16 *extraout_RBX_06;
  uint16 *extraout_RBX_07;
  uint16 *extraout_RBX_08;
  uint16 *extraout_RBX_09;
  uint16 *extraout_RBX_10;
  uint16 *extraout_RBX_11;
  uint16 *extraout_RBX_12;
  uint16 *extraout_RBX_13;
  uint16 *extraout_RBX_14;
  uint16 *extraout_RBX_15;
  uint16 *extraout_RBX_16;
  uint16 *extraout_RBX_17;
  uint16 *extraout_RBX_18;
  uint16 *extraout_RBX_19;
  uint16 *extraout_RBX_20;
  uint16 *extraout_RBX_21;
  uint16 *extraout_RBX_22;
  uint16 *extraout_RBX_23;
  uint16 *extraout_RBX_24;
  uint16 *extraout_RBX_25;
  uint16 *extraout_RBX_26;
  uint16 *extraout_RBX_27;
  uint16 *extraout_RBX_28;
  uint16 *extraout_RBX_29;
  uint16 *extraout_RBX_30;
  uint16 *extraout_RBX_31;
  uint16 *puVar3;
  void *extraout_RBX_32;
  uint16 **extraout_R11;
  undefined8 *extraout_R11_00;
  uint16 **extraout_R11_01;
  undefined8 *extraout_R11_02;
  uint16 **extraout_R11_03;
  undefined8 *extraout_R11_04;
  uint16 **extraout_R11_05;
  undefined8 *extraout_R11_06;
  uint16 **extraout_R11_07;
  undefined8 *extraout_R11_08;
  uint16 **extraout_R11_09;
  undefined8 *extraout_R11_10;
  uint16 **extraout_R11_11;
  undefined8 *extraout_R11_12;
  uint16 **extraout_R11_13;
  undefined8 *extraout_R11_14;
  uint16 **extraout_R11_15;
  undefined8 *extraout_R11_16;
  uint16 **extraout_R11_17;
  undefined8 *extraout_R11_18;
  uint16 **extraout_R11_19;
  undefined8 *extraout_R11_20;
  uint16 **extraout_R11_21;
  undefined8 *extraout_R11_22;
  uint16 **extraout_R11_23;
  undefined8 *extraout_R11_24;
  uint16 **extraout_R11_25;
  undefined8 *extraout_R11_26;
  uint16 **extraout_R11_27;
  undefined8 *extraout_R11_28;
  uint16 **extraout_R11_29;
  undefined8 *extraout_R11_30;
  uint16 **extraout_R11_31;
  undefined8 *extraout_R11_32;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX_32;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0081b240,in_RBX);
  runtime_newobject((internal_abi_Type *)&DAT_00878020,~r0_00);
  *extraout_RAX_00 = 0x2f;
  *(undefined8 *)(extraout_RAX_00 + 8) = 0x1c;
  *(undefined **)(extraout_RAX_00 + 4) = &DAT_008bdc65;
  iVar1 = crypto_tls_supportedUpToTLS12.cap;
  puVar3 = crypto_tls_supportedUpToTLS12.array;
  *(int *)(extraout_RAX_00 + 0x10) = crypto_tls_supportedUpToTLS12.len;
  *(int *)(extraout_RAX_00 + 0x14) = iVar1;
  puVar2 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RBX;
    puVar2 = extraout_RAX_01;
    puVar3 = extraout_RBX;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_02;
    extraout_R11_00[1] = *extraout_RAX;
    puVar2 = extraout_RAX_02;
    puVar3 = extraout_RBX_00;
  }
  *extraout_RAX = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_03 = 0x35;
  *(undefined8 *)(extraout_RAX_03 + 8) = 0x1c;
  *(undefined **)(extraout_RAX_03 + 4) = &DAT_008bdc81;
  iVar1 = crypto_tls_supportedUpToTLS12.cap;
  puVar3 = crypto_tls_supportedUpToTLS12.array;
  *(int *)(extraout_RAX_03 + 0x10) = crypto_tls_supportedUpToTLS12.len;
  *(int *)(extraout_RAX_03 + 0x14) = iVar1;
  puVar2 = extraout_RAX_03;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_01 = extraout_RBX_01;
    puVar2 = extraout_RAX_04;
    puVar3 = extraout_RBX_01;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_02 = extraout_RAX_05;
    extraout_R11_02[1] = extraout_RAX[1];
    puVar2 = extraout_RAX_05;
    puVar3 = extraout_RBX_02;
  }
  extraout_RAX[1] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_06 = 0x9c;
  *(undefined8 *)(extraout_RAX_06 + 8) = 0x1f;
  *(undefined **)(extraout_RAX_06 + 4) = &DAT_008bfaa3;
  iVar1 = crypto_tls_supportedOnlyTLS12.cap;
  puVar3 = crypto_tls_supportedOnlyTLS12.array;
  *(int *)(extraout_RAX_06 + 0x10) = crypto_tls_supportedOnlyTLS12.len;
  *(int *)(extraout_RAX_06 + 0x14) = iVar1;
  puVar2 = extraout_RAX_06;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_03 = extraout_RBX_03;
    puVar2 = extraout_RAX_07;
    puVar3 = extraout_RBX_03;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_04 = extraout_RAX_08;
    extraout_R11_04[1] = extraout_RAX[2];
    puVar2 = extraout_RAX_08;
    puVar3 = extraout_RBX_04;
  }
  extraout_RAX[2] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_09 = 0x9d;
  *(undefined8 *)(extraout_RAX_09 + 8) = 0x1f;
  *(undefined **)(extraout_RAX_09 + 4) = &DAT_008bfac2;
  iVar1 = crypto_tls_supportedOnlyTLS12.cap;
  puVar3 = crypto_tls_supportedOnlyTLS12.array;
  *(int *)(extraout_RAX_09 + 0x10) = crypto_tls_supportedOnlyTLS12.len;
  *(int *)(extraout_RAX_09 + 0x14) = iVar1;
  puVar2 = extraout_RAX_09;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_05 = extraout_RBX_05;
    puVar2 = extraout_RAX_10;
    puVar3 = extraout_RBX_05;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_06 = extraout_RAX_11;
    extraout_R11_06[1] = extraout_RAX[3];
    puVar2 = extraout_RAX_11;
    puVar3 = extraout_RBX_06;
  }
  extraout_RAX[3] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_12 = 0x1301;
  *(undefined8 *)(extraout_RAX_12 + 8) = 0x16;
  *(undefined **)(extraout_RAX_12 + 4) = &DAT_008ba431;
  iVar1 = crypto_tls_supportedOnlyTLS13.cap;
  puVar3 = crypto_tls_supportedOnlyTLS13.array;
  *(int *)(extraout_RAX_12 + 0x10) = crypto_tls_supportedOnlyTLS13.len;
  *(int *)(extraout_RAX_12 + 0x14) = iVar1;
  puVar2 = extraout_RAX_12;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_07 = extraout_RBX_07;
    puVar2 = extraout_RAX_13;
    puVar3 = extraout_RBX_07;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_08 = extraout_RAX_14;
    extraout_R11_08[1] = extraout_RAX[4];
    puVar2 = extraout_RAX_14;
    puVar3 = extraout_RBX_08;
  }
  extraout_RAX[4] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_15 = 0x1302;
  *(undefined8 *)(extraout_RAX_15 + 8) = 0x16;
  *(undefined **)(extraout_RAX_15 + 4) = &DAT_008ba447;
  iVar1 = crypto_tls_supportedOnlyTLS13.cap;
  puVar3 = crypto_tls_supportedOnlyTLS13.array;
  *(int *)(extraout_RAX_15 + 0x10) = crypto_tls_supportedOnlyTLS13.len;
  *(int *)(extraout_RAX_15 + 0x14) = iVar1;
  puVar2 = extraout_RAX_15;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_09 = extraout_RBX_09;
    puVar2 = extraout_RAX_16;
    puVar3 = extraout_RBX_09;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_10 = extraout_RAX_17;
    extraout_R11_10[1] = extraout_RAX[5];
    puVar2 = extraout_RAX_17;
    puVar3 = extraout_RBX_10;
  }
  extraout_RAX[5] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_18 = 0x1303;
  *(undefined8 *)(extraout_RAX_18 + 8) = 0x1c;
  *(undefined **)(extraout_RAX_18 + 4) = &DAT_008bdc9d;
  iVar1 = crypto_tls_supportedOnlyTLS13.cap;
  puVar3 = crypto_tls_supportedOnlyTLS13.array;
  *(int *)(extraout_RAX_18 + 0x10) = crypto_tls_supportedOnlyTLS13.len;
  *(int *)(extraout_RAX_18 + 0x14) = iVar1;
  puVar2 = extraout_RAX_18;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_11 = extraout_RBX_11;
    puVar2 = extraout_RAX_19;
    puVar3 = extraout_RBX_11;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_12 = extraout_RAX_20;
    extraout_R11_12[1] = extraout_RAX[6];
    puVar2 = extraout_RAX_20;
    puVar3 = extraout_RBX_12;
  }
  extraout_RAX[6] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_21 = 0xc009;
  *(undefined8 *)(extraout_RAX_21 + 8) = 0x24;
  *(undefined **)(extraout_RAX_21 + 4) = &DAT_008c29db;
  iVar1 = crypto_tls_supportedUpToTLS12.cap;
  puVar3 = crypto_tls_supportedUpToTLS12.array;
  *(int *)(extraout_RAX_21 + 0x10) = crypto_tls_supportedUpToTLS12.len;
  *(int *)(extraout_RAX_21 + 0x14) = iVar1;
  puVar2 = extraout_RAX_21;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_13 = extraout_RBX_13;
    puVar2 = extraout_RAX_22;
    puVar3 = extraout_RBX_13;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_14 = extraout_RAX_23;
    extraout_R11_14[1] = extraout_RAX[7];
    puVar2 = extraout_RAX_23;
    puVar3 = extraout_RBX_14;
  }
  extraout_RAX[7] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_24 = 0xc00a;
  *(undefined8 *)(extraout_RAX_24 + 8) = 0x24;
  *(undefined **)(extraout_RAX_24 + 4) = &DAT_008c29ff;
  iVar1 = crypto_tls_supportedUpToTLS12.cap;
  puVar3 = crypto_tls_supportedUpToTLS12.array;
  *(int *)(extraout_RAX_24 + 0x10) = crypto_tls_supportedUpToTLS12.len;
  *(int *)(extraout_RAX_24 + 0x14) = iVar1;
  puVar2 = extraout_RAX_24;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_15 = extraout_RBX_15;
    puVar2 = extraout_RAX_25;
    puVar3 = extraout_RBX_15;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_16 = extraout_RAX_26;
    extraout_R11_16[1] = extraout_RAX[8];
    puVar2 = extraout_RAX_26;
    puVar3 = extraout_RBX_16;
  }
  extraout_RAX[8] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_27 = 0xc013;
  *(undefined8 *)(extraout_RAX_27 + 8) = 0x22;
  *(undefined **)(extraout_RAX_27 + 4) = &DAT_008c185e;
  iVar1 = crypto_tls_supportedUpToTLS12.cap;
  puVar3 = crypto_tls_supportedUpToTLS12.array;
  *(int *)(extraout_RAX_27 + 0x10) = crypto_tls_supportedUpToTLS12.len;
  *(int *)(extraout_RAX_27 + 0x14) = iVar1;
  puVar2 = extraout_RAX_27;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_17 = extraout_RBX_17;
    puVar2 = extraout_RAX_28;
    puVar3 = extraout_RBX_17;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_18 = extraout_RAX_29;
    extraout_R11_18[1] = extraout_RAX[9];
    puVar2 = extraout_RAX_29;
    puVar3 = extraout_RBX_18;
  }
  extraout_RAX[9] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_30 = 0xc014;
  *(undefined8 *)(extraout_RAX_30 + 8) = 0x22;
  *(undefined **)(extraout_RAX_30 + 4) = &DAT_008c1880;
  iVar1 = crypto_tls_supportedUpToTLS12.cap;
  puVar3 = crypto_tls_supportedUpToTLS12.array;
  *(int *)(extraout_RAX_30 + 0x10) = crypto_tls_supportedUpToTLS12.len;
  *(int *)(extraout_RAX_30 + 0x14) = iVar1;
  puVar2 = extraout_RAX_30;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_19 = extraout_RBX_19;
    puVar2 = extraout_RAX_31;
    puVar3 = extraout_RBX_19;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_20 = extraout_RAX_32;
    extraout_R11_20[1] = extraout_RAX[10];
    puVar2 = extraout_RAX_32;
    puVar3 = extraout_RBX_20;
  }
  extraout_RAX[10] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_33 = 0xc02b;
  *(undefined8 *)(extraout_RAX_33 + 8) = 0x27;
  *(undefined **)(extraout_RAX_33 + 4) = &DAT_008c42f5;
  iVar1 = crypto_tls_supportedOnlyTLS12.cap;
  puVar3 = crypto_tls_supportedOnlyTLS12.array;
  *(int *)(extraout_RAX_33 + 0x10) = crypto_tls_supportedOnlyTLS12.len;
  *(int *)(extraout_RAX_33 + 0x14) = iVar1;
  puVar2 = extraout_RAX_33;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_21 = extraout_RBX_21;
    puVar2 = extraout_RAX_34;
    puVar3 = extraout_RBX_21;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_22 = extraout_RAX_35;
    extraout_R11_22[1] = extraout_RAX[0xb];
    puVar2 = extraout_RAX_35;
    puVar3 = extraout_RBX_22;
  }
  extraout_RAX[0xb] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_36 = 0xc02c;
  *(undefined8 *)(extraout_RAX_36 + 8) = 0x27;
  *(undefined **)(extraout_RAX_36 + 4) = &DAT_008c431c;
  iVar1 = crypto_tls_supportedOnlyTLS12.cap;
  puVar3 = crypto_tls_supportedOnlyTLS12.array;
  *(int *)(extraout_RAX_36 + 0x10) = crypto_tls_supportedOnlyTLS12.len;
  *(int *)(extraout_RAX_36 + 0x14) = iVar1;
  puVar2 = extraout_RAX_36;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_23 = extraout_RBX_23;
    puVar2 = extraout_RAX_37;
    puVar3 = extraout_RBX_23;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_24 = extraout_RAX_38;
    extraout_R11_24[1] = extraout_RAX[0xc];
    puVar2 = extraout_RAX_38;
    puVar3 = extraout_RBX_24;
  }
  extraout_RAX[0xc] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_39 = 0xc02f;
  *(undefined8 *)(extraout_RAX_39 + 8) = 0x25;
  *(undefined **)(extraout_RAX_39 + 4) = &DAT_008c3299;
  iVar1 = crypto_tls_supportedOnlyTLS12.cap;
  puVar3 = crypto_tls_supportedOnlyTLS12.array;
  *(int *)(extraout_RAX_39 + 0x10) = crypto_tls_supportedOnlyTLS12.len;
  *(int *)(extraout_RAX_39 + 0x14) = iVar1;
  puVar2 = extraout_RAX_39;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_25 = extraout_RBX_25;
    puVar2 = extraout_RAX_40;
    puVar3 = extraout_RBX_25;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_26 = extraout_RAX_41;
    extraout_R11_26[1] = extraout_RAX[0xd];
    puVar2 = extraout_RAX_41;
    puVar3 = extraout_RBX_26;
  }
  extraout_RAX[0xd] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_42 = 0xc030;
  *(undefined8 *)(extraout_RAX_42 + 8) = 0x25;
  *(undefined **)(extraout_RAX_42 + 4) = &DAT_008c32be;
  iVar1 = crypto_tls_supportedOnlyTLS12.cap;
  puVar3 = crypto_tls_supportedOnlyTLS12.array;
  *(int *)(extraout_RAX_42 + 0x10) = crypto_tls_supportedOnlyTLS12.len;
  *(int *)(extraout_RAX_42 + 0x14) = iVar1;
  puVar2 = extraout_RAX_42;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_27 = extraout_RBX_27;
    puVar2 = extraout_RAX_43;
    puVar3 = extraout_RBX_27;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_28 = extraout_RAX_44;
    extraout_R11_28[1] = extraout_RAX[0xe];
    puVar2 = extraout_RAX_44;
    puVar3 = extraout_RBX_28;
  }
  extraout_RAX[0xe] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_45 = 0xcca8;
  *(undefined8 *)(extraout_RAX_45 + 8) = 0x2b;
  *(undefined **)(extraout_RAX_45 + 4) = &DAT_008c61cb;
  iVar1 = crypto_tls_supportedOnlyTLS12.cap;
  puVar3 = crypto_tls_supportedOnlyTLS12.array;
  *(int *)(extraout_RAX_45 + 0x10) = crypto_tls_supportedOnlyTLS12.len;
  *(int *)(extraout_RAX_45 + 0x14) = iVar1;
  puVar2 = extraout_RAX_45;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_29 = extraout_RBX_29;
    puVar2 = extraout_RAX_46;
    puVar3 = extraout_RBX_29;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_30 = extraout_RAX_47;
    extraout_R11_30[1] = extraout_RAX[0xf];
    puVar2 = extraout_RAX_47;
    puVar3 = extraout_RBX_30;
  }
  extraout_RAX[0xf] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_48 = 0xcca9;
  *(undefined8 *)(extraout_RAX_48 + 8) = 0x2d;
  *(undefined **)(extraout_RAX_48 + 4) = &DAT_008c70a4;
  iVar1 = crypto_tls_supportedOnlyTLS12.cap;
  puVar3 = crypto_tls_supportedOnlyTLS12.array;
  *(int *)(extraout_RAX_48 + 0x10) = crypto_tls_supportedOnlyTLS12.len;
  *(int *)(extraout_RAX_48 + 0x14) = iVar1;
  puVar2 = extraout_RAX_48;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_31 = extraout_RBX_31;
    puVar2 = extraout_RAX_49;
    puVar3 = extraout_RBX_31;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_32 = extraout_RAX_50;
    extraout_R11_32[1] = extraout_RAX[0x10];
    puVar2 = extraout_RAX_50;
  }
  extraout_RAX[0x10] = puVar2;
  return;
}



void crypto_tls_InsecureCipherSuites(___crypto_tls_CipherSuite ~r0)

{
  int iVar1;
  undefined8 *extraout_RAX;
  undefined2 *extraout_RAX_00;
  undefined2 *extraout_RAX_01;
  undefined2 *extraout_RAX_02;
  undefined2 *extraout_RAX_03;
  undefined2 *extraout_RAX_04;
  undefined2 *extraout_RAX_05;
  undefined2 *extraout_RAX_06;
  undefined2 *extraout_RAX_07;
  undefined2 *extraout_RAX_08;
  undefined2 *extraout_RAX_09;
  undefined2 *extraout_RAX_10;
  undefined2 *extraout_RAX_11;
  undefined2 *extraout_RAX_12;
  undefined2 *extraout_RAX_13;
  undefined2 *extraout_RAX_14;
  undefined2 *extraout_RAX_15;
  undefined2 *extraout_RAX_16;
  undefined2 *extraout_RAX_17;
  undefined2 *extraout_RAX_18;
  undefined2 *extraout_RAX_19;
  undefined2 *extraout_RAX_20;
  undefined2 *extraout_RAX_21;
  undefined2 *extraout_RAX_22;
  undefined2 *extraout_RAX_23;
  undefined2 *puVar2;
  void *in_RBX;
  void *~r0_00;
  uint16 *extraout_RBX;
  uint16 *extraout_RBX_00;
  uint16 *extraout_RBX_01;
  uint16 *extraout_RBX_02;
  uint16 *extraout_RBX_03;
  uint16 *extraout_RBX_04;
  uint16 *extraout_RBX_05;
  uint16 *extraout_RBX_06;
  uint16 *extraout_RBX_07;
  uint16 *extraout_RBX_08;
  uint16 *extraout_RBX_09;
  uint16 *extraout_RBX_10;
  uint16 *extraout_RBX_11;
  uint16 *extraout_RBX_12;
  uint16 *extraout_RBX_13;
  uint16 *puVar3;
  void *extraout_RBX_14;
  uint16 **extraout_R11;
  undefined8 *extraout_R11_00;
  uint16 **extraout_R11_01;
  undefined8 *extraout_R11_02;
  uint16 **extraout_R11_03;
  undefined8 *extraout_R11_04;
  uint16 **extraout_R11_05;
  undefined8 *extraout_R11_06;
  uint16 **extraout_R11_07;
  undefined8 *extraout_R11_08;
  uint16 **extraout_R11_09;
  undefined8 *extraout_R11_10;
  uint16 **extraout_R11_11;
  undefined8 *extraout_R11_12;
  uint16 **extraout_R11_13;
  undefined8 *extraout_R11_14;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX_14;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0081b2a0,in_RBX);
  runtime_newobject((internal_abi_Type *)&DAT_00878020,~r0_00);
  *extraout_RAX_00 = 5;
  *(undefined8 *)(extraout_RAX_00 + 8) = 0x18;
  *(undefined **)(extraout_RAX_00 + 4) = &DAT_008bb6b5;
  iVar1 = crypto_tls_supportedUpToTLS12.cap;
  puVar3 = crypto_tls_supportedUpToTLS12.array;
  *(int *)(extraout_RAX_00 + 0x10) = crypto_tls_supportedUpToTLS12.len;
  *(int *)(extraout_RAX_00 + 0x14) = iVar1;
  puVar2 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RBX;
    puVar2 = extraout_RAX_01;
    puVar3 = extraout_RBX;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 1;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_02;
    extraout_R11_00[1] = *extraout_RAX;
    puVar2 = extraout_RAX_02;
    puVar3 = extraout_RBX_00;
  }
  *extraout_RAX = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_03 = 10;
  *(undefined8 *)(extraout_RAX_03 + 8) = 0x1d;
  *(undefined **)(extraout_RAX_03 + 4) = &DAT_008be70b;
  iVar1 = crypto_tls_supportedUpToTLS12.cap;
  puVar3 = crypto_tls_supportedUpToTLS12.array;
  *(int *)(extraout_RAX_03 + 0x10) = crypto_tls_supportedUpToTLS12.len;
  *(int *)(extraout_RAX_03 + 0x14) = iVar1;
  puVar2 = extraout_RAX_03;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_01 = extraout_RBX_01;
    puVar2 = extraout_RAX_04;
    puVar3 = extraout_RBX_01;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 1;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_02 = extraout_RAX_05;
    extraout_R11_02[1] = extraout_RAX[1];
    puVar2 = extraout_RAX_05;
    puVar3 = extraout_RBX_02;
  }
  extraout_RAX[1] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_06 = 0x3c;
  *(undefined8 *)(extraout_RAX_06 + 8) = 0x1f;
  *(undefined **)(extraout_RAX_06 + 4) = &DAT_008bfae1;
  iVar1 = crypto_tls_supportedOnlyTLS12.cap;
  puVar3 = crypto_tls_supportedOnlyTLS12.array;
  *(int *)(extraout_RAX_06 + 0x10) = crypto_tls_supportedOnlyTLS12.len;
  *(int *)(extraout_RAX_06 + 0x14) = iVar1;
  puVar2 = extraout_RAX_06;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_03 = extraout_RBX_03;
    puVar2 = extraout_RAX_07;
    puVar3 = extraout_RBX_03;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 1;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_04 = extraout_RAX_08;
    extraout_R11_04[1] = extraout_RAX[2];
    puVar2 = extraout_RAX_08;
    puVar3 = extraout_RBX_04;
  }
  extraout_RAX[2] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_09 = 0xc007;
  *(undefined8 *)(extraout_RAX_09 + 8) = 0x20;
  *(undefined **)(extraout_RAX_09 + 4) = &DAT_008c04f3;
  iVar1 = crypto_tls_supportedUpToTLS12.cap;
  puVar3 = crypto_tls_supportedUpToTLS12.array;
  *(int *)(extraout_RAX_09 + 0x10) = crypto_tls_supportedUpToTLS12.len;
  *(int *)(extraout_RAX_09 + 0x14) = iVar1;
  puVar2 = extraout_RAX_09;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_05 = extraout_RBX_05;
    puVar2 = extraout_RAX_10;
    puVar3 = extraout_RBX_05;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 1;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_06 = extraout_RAX_11;
    extraout_R11_06[1] = extraout_RAX[3];
    puVar2 = extraout_RAX_11;
    puVar3 = extraout_RBX_06;
  }
  extraout_RAX[3] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_12 = 0xc011;
  *(undefined8 *)(extraout_RAX_12 + 8) = 0x1e;
  *(undefined **)(extraout_RAX_12 + 4) = &DAT_008bf143;
  iVar1 = crypto_tls_supportedUpToTLS12.cap;
  puVar3 = crypto_tls_supportedUpToTLS12.array;
  *(int *)(extraout_RAX_12 + 0x10) = crypto_tls_supportedUpToTLS12.len;
  *(int *)(extraout_RAX_12 + 0x14) = iVar1;
  puVar2 = extraout_RAX_12;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_07 = extraout_RBX_07;
    puVar2 = extraout_RAX_13;
    puVar3 = extraout_RBX_07;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 1;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_08 = extraout_RAX_14;
    extraout_R11_08[1] = extraout_RAX[4];
    puVar2 = extraout_RAX_14;
    puVar3 = extraout_RBX_08;
  }
  extraout_RAX[4] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_15 = 0xc012;
  *(undefined8 *)(extraout_RAX_15 + 8) = 0x23;
  *(undefined **)(extraout_RAX_15 + 4) = &DAT_008c1f43;
  iVar1 = crypto_tls_supportedUpToTLS12.cap;
  puVar3 = crypto_tls_supportedUpToTLS12.array;
  *(int *)(extraout_RAX_15 + 0x10) = crypto_tls_supportedUpToTLS12.len;
  *(int *)(extraout_RAX_15 + 0x14) = iVar1;
  puVar2 = extraout_RAX_15;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_09 = extraout_RBX_09;
    puVar2 = extraout_RAX_16;
    puVar3 = extraout_RBX_09;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 1;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_10 = extraout_RAX_17;
    extraout_R11_10[1] = extraout_RAX[5];
    puVar2 = extraout_RAX_17;
    puVar3 = extraout_RBX_10;
  }
  extraout_RAX[5] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_18 = 0xc023;
  *(undefined8 *)(extraout_RAX_18 + 8) = 0x27;
  *(undefined **)(extraout_RAX_18 + 4) = &DAT_008c4343;
  iVar1 = crypto_tls_supportedOnlyTLS12.cap;
  puVar3 = crypto_tls_supportedOnlyTLS12.array;
  *(int *)(extraout_RAX_18 + 0x10) = crypto_tls_supportedOnlyTLS12.len;
  *(int *)(extraout_RAX_18 + 0x14) = iVar1;
  puVar2 = extraout_RAX_18;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_11 = extraout_RBX_11;
    puVar2 = extraout_RAX_19;
    puVar3 = extraout_RBX_11;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 1;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_12 = extraout_RAX_20;
    extraout_R11_12[1] = extraout_RAX[6];
    puVar2 = extraout_RAX_20;
    puVar3 = extraout_RBX_12;
  }
  extraout_RAX[6] = puVar2;
  runtime_newobject((internal_abi_Type *)&DAT_00878020,puVar3);
  *extraout_RAX_21 = 0xc027;
  *(undefined8 *)(extraout_RAX_21 + 8) = 0x25;
  *(undefined **)(extraout_RAX_21 + 4) = &DAT_008c32e3;
  iVar1 = crypto_tls_supportedOnlyTLS12.cap;
  puVar3 = crypto_tls_supportedOnlyTLS12.array;
  *(int *)(extraout_RAX_21 + 0x10) = crypto_tls_supportedOnlyTLS12.len;
  *(int *)(extraout_RAX_21 + 0x14) = iVar1;
  puVar2 = extraout_RAX_21;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_13 = extraout_RBX_13;
    puVar2 = extraout_RAX_22;
    puVar3 = extraout_RBX_13;
  }
  *(uint16 **)(puVar2 + 0xc) = puVar3;
  *(undefined *)(puVar2 + 0x18) = 1;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_14 = extraout_RAX_23;
    extraout_R11_14[1] = extraout_RAX[7];
    puVar2 = extraout_RAX_23;
  }
  extraout_RAX[7] = puVar2;
  return;
}



void crypto_tls___ConnectionState__ExportKeyingMaterial
               (crypto_tls_ConnectionState *cs,string label,__uint8 context,int length,__uint8 ~r0,
               error ~r1)

{
  __uint8 *in_RCX;
  error *in_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffffc8;
  __uint8 in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  (**cs->ekm)(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffd8,length,in_RCX,in_RDI);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

int crypto_tls_init(EVP_PKEY_CTX *ctx)

{
  crypto_tls_certCache *extraout_RAX;
  crypto_tls_certCache *extraout_RAX_00;
  crypto_tls_certCache *pcVar1;
  uint16 *extraout_RAX_01;
  uint16 *puVar2;
  runtime_hmap *~r0;
  map_uint16_bool h;
  undefined *extraout_RAX_02;
  undefined *extraout_RAX_03;
  undefined *extraout_RAX_04;
  undefined *extraout_RAX_05;
  undefined *extraout_RAX_06;
  undefined *extraout_RAX_07;
  void *~r0_00;
  void *~r0_01;
  void *~r0_02;
  void *~r0_03;
  void *~r0_04;
  void *~r0_05;
  void *~r0_06;
  crypto_tls_certCache **extraout_R11;
  uint16 **extraout_R11_00;
  map_uint16_bool *extraout_R11_01;
  int unaff_R14;
  undefined2 local_12;
  map_uint16_bool local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_mapinitnoop();
  if ((uint)crypto_digestSizes.len < 6) {
                    // WARNING: Subroutine does not return
    runtime_panicIndexU();
  }
  _DAT_00c11828 = (uint)crypto_digestSizes.array[5] * 2 + 2;
  if ((uint)crypto_digestSizes.len < 7) {
                    // WARNING: Subroutine does not return
    runtime_panicIndexU();
  }
  _DAT_00c11840 = (uint)crypto_digestSizes.array[6] * 2 + 2;
  if ((uint)crypto_digestSizes.len < 8) {
                    // WARNING: Subroutine does not return
    runtime_panicIndexU();
  }
  _DAT_00c11858 = (uint)crypto_digestSizes.array[7] * 2 + 2;
  if ((uint)crypto_digestSizes.len < 6) {
                    // WARNING: Subroutine does not return
    runtime_panicIndexU();
  }
  _DAT_00c11870 = crypto_digestSizes.array[5] + 0x1e;
  if ((uint)crypto_digestSizes.len < 7) {
                    // WARNING: Subroutine does not return
    runtime_panicIndexU();
  }
  _DAT_00c11888 = crypto_digestSizes.array[6] + 0x1e;
  if ((uint)crypto_digestSizes.len < 8) {
                    // WARNING: Subroutine does not return
