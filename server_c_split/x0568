  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    key.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (runtime_hmap **)key.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &key)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffd0;
  }
  if (in_RAX != (runtime_hmap **)0x0) {
    h = *in_RAX;
    net_textproto_CanonicalMIMEHeaderKey(in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0);
    runtime_mapdelete_faststr((internal_abi_MapType *)&DAT_00873760,h,in_stack_ffffffffffffffd0);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void net_textproto___MIMEHeader__Get(string key,string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  net_textproto_MIMEHeader *in_RAX;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    key.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (net_textproto_MIMEHeader *)key.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &key)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffe0;
  }
  if (in_RAX != (net_textproto_MIMEHeader *)0x0) {
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    net_textproto_MIMEHeader_Get(*in_RAX,in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void net_textproto___MIMEHeader__Set(string key,string value)

{
  string **ppsVar1;
  runtime_hmap *h;
  runtime_hmap **in_RAX;
  void *~r0;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar2;
  int *extraout_RAX_01;
  int *extraout_RAX_02;
  int *piVar3;
  void *~r0_00;
  undefined8 in_RSI;
  undefined8 in_RDI;
  undefined8 *extraout_R11;
  int *extraout_R11_00;
  int unaff_R14;
  string in_stack_ffffffffffffffb8;
  string in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    key.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (runtime_hmap **)key.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &key)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffb8;
  }
  if (in_RAX == (runtime_hmap **)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  h = *in_RAX;
  net_textproto_CanonicalMIMEHeaderKey(in_stack_ffffffffffffffb8,in_stack_ffffffffffffffc8);
  runtime_newobject((internal_abi_Type *)&DAT_008117e0,~r0_00);
  extraout_RAX[1] = in_RSI;
  puVar2 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = in_RDI;
    puVar2 = extraout_RAX_00;
  }
  *puVar2 = in_RDI;
  runtime_mapassign_faststr((internal_abi_MapType *)&DAT_00873760,h,in_stack_ffffffffffffffb8,~r0);
  extraout_RAX_01[1] = 1;
  extraout_RAX_01[2] = 1;
  piVar3 = extraout_RAX_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = (int)puVar2;
    extraout_R11_00[1] = *extraout_RAX_02;
    piVar3 = extraout_RAX_02;
  }
  *piVar3 = (int)puVar2;
  return;
}



void net_textproto___MIMEHeader__Values(string key,__string ~r0)

{
  string **ppsVar1;
  runtime_hmap *h;
  runtime_hmap **in_RAX;
  void *~r0_00;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    key.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (runtime_hmap **)key.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &key)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffd0;
  }
  if (in_RAX == (runtime_hmap **)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  h = *in_RAX;
  if (h != (runtime_hmap *)0x0) {
    net_textproto_CanonicalMIMEHeaderKey(in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0);
    runtime_mapaccess1_faststr
              ((internal_abi_MapType *)&DAT_00873760,h,in_stack_ffffffffffffffd0,~r0_00);
  }
  return;
}



void net_textproto___ProtocolError__Error(string ~r0)

{
  string **ppsVar1;
  int in_RAX;
  int unaff_R14;
  
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xfffffffffffffff8;
  }
  if (in_RAX != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void mime_isTokenChar(int32 r,bool ~r0)

{
  int unaff_R14;
  string in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((dword)(r - 0x21U) < 0x5e) {
    strings_IndexRune(in_stack_ffffffffffffffe0,0x8b6011,0xf);
  }
  return;
}



void mime_FormatMediaType(string t,map_string_string param,string ~r0)

{
  byte bVar1;
  uint8 uVar2;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  runtime_slice ~r0_03;
  runtime_slice ~r0_04;
  __uint8 val;
  runtime_slice ~r0_05;
  runtime_slice ~r0_06;
  runtime_slice ~r0_07;
  runtime_slice ~r0_08;
  runtime_slice ~r0_09;
  runtime_slice ~r0_10;
  runtime_slice ~r0_11;
  runtime_slice ~r0_12;
  runtime_slice ~r0_13;
  runtime_slice ~r0_14;
  runtime_slice ~r0_15;
  runtime_slice ~r0_16;
  runtime_slice ~r0_17;
  runtime_slice ~r0_18;
  runtime_slice ~r0_19;
  runtime_slice ~r0_20;
  runtime_slice ~r0_21;
  string sep;
  string ~r0_22;
  string ~r0_23;
  string ~r0_24;
  string ~r0_25;
  undefined auVar3 [16];
  int32 extraout_EAX;
  func_int32__bool **f;
  int extraout_RAX;
  int extraout_RAX_00;
  void *extraout_RAX_01;
  uint8 *extraout_RAX_02;
  uint8 *extraout_RAX_03;
  void *extraout_RAX_04;
  uint8 *extraout_RAX_05;
  int extraout_RAX_06;
  void *extraout_RAX_07;
  uint8 *extraout_RAX_08;
  void **extraout_RAX_09;
  void **extraout_RAX_10;
  undefined8 *extraout_RAX_11;
  uint8 *extraout_RAX_12;
  uint8 *extraout_RAX_13;
  int extraout_RAX_14;
  void *extraout_RAX_15;
  uint8 *extraout_RAX_16;
  uint8 *extraout_RAX_17;
  uint8 *extraout_RAX_18;
  uint8 *extraout_RAX_19;
  int extraout_RAX_20;
  uint8 *extraout_RAX_21;
  uint8 *extraout_RAX_22;
  int offset;
  int index_1;
  uint8 *extraout_RAX_23;
  uint8 *extraout_RAX_24;
  uint8 *extraout_RAX_25;
  uint8 *puVar4;
  uint8 *extraout_RAX_26;
  int extraout_RAX_27;
  uint8 *extraout_RAX_28;
  uint8 *extraout_RAX_29;
  uint8 *extraout_RAX_30;
  uint8 *extraout_RAX_31;
  uint8 *extraout_RAX_32;
  runtime_hmap *in_RCX;
  func_int32__bool **extraout_RCX;
  uint extraout_RCX_00;
  int extraout_RCX_01;
  int extraout_RCX_02;
  int extraout_RCX_03;
  uint extraout_RCX_04;
  void **extraout_RCX_05;
  int extraout_RCX_06;
  int extraout_RCX_07;
  int extraout_RCX_08;
  int extraout_RCX_09;
  int extraout_RCX_10;
  int extraout_RCX_11;
  int extraout_RCX_12;
  uint uVar5;
  uint extraout_RCX_13;
  uint extraout_RCX_14;
  int extraout_RCX_15;
  uint extraout_RCX_16;
  int extraout_RCX_17;
  int offset_1;
  uint extraout_RCX_18;
  int extraout_RCX_19;
  int extraout_RCX_20;
  int extraout_RCX_21;
  uint extraout_RCX_22;
  undefined8 uVar6;
  int iVar7;
  int in_RBX;
  int ~r0_26;
  size_t __n;
  uint extraout_RBX;
  uint uVar8;
  uint extraout_RBX_00;
  size_t __n_00;
  uint extraout_RBX_01;
  size_t num;
  uint extraout_RBX_02;
  uint extraout_RBX_03;
  uint uVar9;
  uint extraout_RBX_04;
  uint extraout_RBX_05;
  size_t __n_01;
  uint extraout_RBX_06;
  uint extraout_RBX_07;
  uint extraout_RBX_08;
  uint extraout_RBX_09;
  uint extraout_RBX_10;
  uint extraout_RBX_11;
  uint extraout_RBX_12;
  uint extraout_RBX_13;
  void *pvVar10;
  uint extraout_RBX_14;
  uint extraout_RBX_15;
  uint extraout_RBX_16;
  uint extraout_RBX_17;
  uint extraout_RBX_18;
  uint extraout_RBX_19;
  uint extraout_RBX_20;
  uint extraout_RBX_21;
  char extraout_SIL;
  bool ok;
  uint8 character;
  uint8 ch;
  int iVar11;
  int extraout_RSI;
  func_int32__bool **f_00;
  int ~r0_27;
  void *extraout_RDI;
  void *extraout_RDI_00;
  size_t sVar12;
  int32 b_1;
  undefined8 *extraout_R11;
  int unaff_R14;
  bool bVar13;
  undefined in_XMM15 [16];
  interface___ in_stack_fffffffffffffe10;
  uint8 *in_stack_fffffffffffffe20;
  int in_stack_fffffffffffffe28;
  string in_stack_fffffffffffffe30;
  string in_stack_fffffffffffffe40;
  size_t local_170;
  uint local_168;
  uint local_160;
  int index;
  uint local_148;
  uint local_140;
  void *local_138;
  void *local_130;
  size_t local_128;
  uint local_120;
  uint local_118;
  func_int32__bool **local_110;
  func_int32__bool **local_108;
  void *local_100;
  void *local_f8;
  void *local_f0;
  void *local_e8;
  void *local_e0;
  void *local_d8;
  void *local_d0;
  void *local_c8;
  void **local_b8;
  func_int32__bool **local_b0;
  undefined8 local_a8;
  void **local_a0;
  void **local_98;
  uint8 *local_90;
  strings_Builder b;
  runtime_hiter local_68;
  
  while (&local_170 <= *(size_t **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  sep.len = in_stack_fffffffffffffe28;
  sep.str = in_stack_fffffffffffffe20;
  b._0_16_ = in_XMM15;
  b.buf._8_16_ = in_XMM15;
  strings_Cut((string)in_stack_fffffffffffffe10,sep,in_stack_fffffffffffffe30,
              in_stack_fffffffffffffe40,SUB81(param,0));
  if (extraout_SIL == '\0') {
    if ((in_RBX == 0) ||
       (strings_IndexFunc((string)in_stack_fffffffffffffe10,(func_int32__bool **)param,in_RBX),
       -1 < extraout_RAX_06)) {
      return;
    }
    ~r0_24.len = in_stack_fffffffffffffe28;
    ~r0_24.str = in_stack_fffffffffffffe20;
    strings_ToLower((string)in_stack_fffffffffffffe10,~r0_24);
    if (b.addr == (strings_Builder *)0x0) {
      b.addr = &b;
    }
    else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_fffffffffffffe10);
    }
    local_120 = num + b.buf.len;
    local_c8 = extraout_RAX_07;
    local_170 = num;
    local_90 = b.buf.array;
    if ((uint)b.buf.cap < local_120) {
      local_118 = b.buf.len;
      ~r0_03.cap = (int)in_stack_fffffffffffffe20;
      ~r0_03.array = in_stack_fffffffffffffe10._type;
      ~r0_03.len = (int)in_stack_fffffffffffffe10.data;
      runtime_growslice(b.buf.array,local_120,b.buf.cap,num,(internal_abi_Type *)&DAT_00807920,
                        ~r0_03);
      b.buf.cap = extraout_RCX_03;
      b.buf.len = local_118;
      local_120 = extraout_RBX_02;
      local_90 = extraout_RAX_08;
    }
    local_118 = b.buf.cap;
    runtime_memmove(local_90 + b.buf.len,local_c8,local_170);
    b.buf.cap = local_118;
    b.buf.len = local_120;
    pvVar10 = extraout_RDI_00;
LAB_006b3ae5:
    if (in_RCX == (runtime_hmap *)0x0) {
      local_140 = 0;
    }
    else {
      local_140 = in_RCX->count;
    }
    b.buf.array = local_90;
    runtime_makeslice((internal_abi_Type *)&DAT_008075e0,0,local_140,pvVar10);
    local_98 = extraout_RAX_09;
    FUN_0046cdab();
    runtime_mapiterinit((internal_abi_MapType *)&DAT_0082bd20,in_RCX,&local_68);
    local_b8 = local_98;
    uVar8 = 0;
    while ((undefined8 *)local_68.key != (undefined8 *)0x0) {
      uVar8 = uVar8 + 1;
                    // WARNING: Load size is inaccurate
      uVar6 = *local_68.key;
      pvVar10 = *(void **)((int)local_68.key + 8);
      if (local_140 < uVar8) {
        ~r0_04.cap = (int)in_stack_fffffffffffffe20;
        ~r0_04.array = in_stack_fffffffffffffe10._type;
        ~r0_04.len = (int)in_stack_fffffffffffffe10.data;
        local_130 = *(void **)((int)local_68.key + 8);
        local_a8 = *local_68.key;
        runtime_growslice(local_b8,uVar8,local_140,1,(internal_abi_Type *)&DAT_008075e0,~r0_04);
        local_140 = extraout_RCX_04;
        local_b8 = extraout_RAX_10;
        uVar6 = local_a8;
        uVar8 = extraout_RBX_03;
        pvVar10 = local_130;
      }
      iVar11 = (uVar8 - 1) * 0x10;
      local_b8[(uVar8 - 1) * 2 + 1] = pvVar10;
      local_148 = uVar8;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = uVar6;
        extraout_R11[1] = *(undefined8 *)((int)extraout_RCX_05 + extraout_RSI);
        local_b8 = extraout_RCX_05;
        iVar11 = extraout_RSI;
      }
      *(undefined8 *)((int)local_b8 + iVar11) = uVar6;
      runtime_mapiternext(&local_68);
      uVar8 = local_148;
    }
    val.cap = (int)in_stack_fffffffffffffe20;
    val.array = (uint8 *)in_stack_fffffffffffffe10._type;
    val.len = (int)in_stack_fffffffffffffe10.data;
    local_148 = uVar8;
    local_a0 = local_b8;
    runtime_convTslice(val,local_b8);
    sort_Sort((sort_Interface)in_stack_fffffffffffffe10);
    iVar11 = 0;
    do {
      if ((int)local_148 <= iVar11) {
        if ((uint)b.buf.len <= (uint)-(int)b.buf.array) {
          return;
        }
        if (b.buf.array == (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
          runtime_panicunsafestringnilptr();
        }
                    // WARNING: Subroutine does not return
        runtime_panicunsafestringlen();
      }
      local_138 = local_a0[1];
      local_b0 = (func_int32__bool **)*local_a0;
      local_118 = iVar11;
      local_98 = local_a0;
      runtime_mapaccess1_faststr
                ((internal_abi_MapType *)&DAT_0082bd20,in_RCX,(string)in_stack_fffffffffffffe10,
                 local_b0);
      uVar8 = extraout_RAX_11[1];
      if (b.addr == (strings_Builder *)0x0) {
        b.addr = &b;
      }
      else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffe10);
      }
      uVar9 = b.buf.len + 1;
      local_110 = (func_int32__bool **)*extraout_RAX_11;
      if ((uint)b.buf.cap < uVar9) {
        ~r0_05.cap = (int)in_stack_fffffffffffffe20;
        ~r0_05.array = in_stack_fffffffffffffe10._type;
        ~r0_05.len = (int)in_stack_fffffffffffffe10.data;
        runtime_growslice(b.buf.array,uVar9,b.buf.cap,1,(internal_abi_Type *)&DAT_00807920,~r0_05);
        uVar9 = extraout_RBX_04;
        b.buf.array = extraout_RAX_12;
        b.buf.cap = extraout_RCX_06;
      }
      b.buf.len = uVar9;
      b.buf.array[uVar9 - 1] = 0x3b;
      if (b.addr == (strings_Builder *)0x0) {
        b.addr = &b;
      }
      else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffe10);
      }
      uVar9 = uVar9 + 1;
      if ((uint)b.buf.cap < uVar9) {
        ~r0_06.cap = (int)in_stack_fffffffffffffe20;
        ~r0_06.array = in_stack_fffffffffffffe10._type;
        ~r0_06.len = (int)in_stack_fffffffffffffe10.data;
        runtime_growslice(b.buf.array,uVar9,b.buf.cap,1,(internal_abi_Type *)&DAT_00807920,~r0_06);
        uVar9 = extraout_RBX_05;
        b.buf.array = extraout_RAX_13;
        b.buf.cap = extraout_RCX_07;
      }
      b.buf.array[uVar9 - 1] = 0x20;
      if ((local_138 == (void *)0x0) ||
         (b.buf.len = uVar9,
         strings_IndexFunc((string)in_stack_fffffffffffffe10,local_b0,(int)local_138),
         -1 < extraout_RAX_14)) {
        return;
      }
      ~r0_25.len = in_stack_fffffffffffffe28;
      ~r0_25.str = in_stack_fffffffffffffe20;
      strings_ToLower((string)in_stack_fffffffffffffe10,~r0_25);
      if (b.addr == (strings_Builder *)0x0) {
        b.addr = &b;
      }
      else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffe10);
      }
      uVar9 = b.buf.len + __n_01;
      local_e0 = extraout_RAX_15;
      iVar11 = b.buf.cap;
      iVar7 = b.buf.len;
      puVar4 = b.buf.array;
      if ((uint)b.buf.cap < uVar9) {
        local_120 = b.buf.len;
        ~r0_07.cap = (int)in_stack_fffffffffffffe20;
        ~r0_07.array = in_stack_fffffffffffffe10._type;
        ~r0_07.len = (int)in_stack_fffffffffffffe10.data;
        runtime_growslice(b.buf.array,uVar9,b.buf.cap,__n_01,(internal_abi_Type *)&DAT_00807920,
                          ~r0_07);
        iVar11 = extraout_RCX_08;
        iVar7 = local_120;
        uVar9 = extraout_RBX_06;
        puVar4 = extraout_RAX_16;
      }
      local_128 = uVar9;
      local_120 = iVar11;
      local_90 = puVar4;
      runtime_memmove(puVar4 + iVar7,local_e0,__n_01);
      b.buf.len = local_128;
      b.buf.cap = local_120;
      b.buf.array = local_90;
      uVar9 = 0;
      f_00 = local_110;
      do {
        iVar11 = uVar9 - uVar8;
        local_120 = uVar9;
        if ((int)uVar8 <= (int)uVar9) goto LAB_006b3f6d;
        b_1 = (int32)*(byte *)((int)f_00 + uVar9);
        if (*(byte *)((int)f_00 + uVar9) < 0x80) {
          uVar9 = uVar9 + 1;
        }
        else {
          runtime_decoderune((string)in_stack_fffffffffffffe10,(int)f_00,(int32)uVar8,uVar9);
          f_00 = local_110;
          uVar9 = extraout_RBX_12;
          b_1 = extraout_EAX;
        }
      } while (((dword)(b_1 - 0x20U) < 0x5f) || (b_1 == 9));
      iVar11 = local_120 - uVar8;
LAB_006b3f6d:
      if (SBORROW8(local_120,uVar8) != iVar11 < 0) {
        if (b.addr == (strings_Builder *)0x0) {
          b.addr = &b;
        }
        else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
          runtime_gopanic(in_stack_fffffffffffffe10);
        }
        uVar9 = b.buf.len + 1;
        if ((uint)b.buf.cap < uVar9) {
          ~r0_08.cap = (int)in_stack_fffffffffffffe20;
          ~r0_08.array = in_stack_fffffffffffffe10._type;
          ~r0_08.len = (int)in_stack_fffffffffffffe10.data;
          runtime_growslice(b.buf.array,uVar9,b.buf.cap,1,(internal_abi_Type *)&DAT_00807920,~r0_08)
          ;
          uVar9 = extraout_RBX_07;
          f_00 = local_110;
          b.buf.array = extraout_RAX_17;
          b.buf.cap = extraout_RCX_09;
        }
        b.buf.array[uVar9 - 1] = 0x2a;
        b.buf.len = uVar9;
      }
      if (b.addr == (strings_Builder *)0x0) {
        b.addr = &b;
      }
      else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffe10);
      }
      uVar9 = b.buf.len + 1;
      if ((uint)b.buf.cap < uVar9) {
        ~r0_09.cap = (int)in_stack_fffffffffffffe20;
        ~r0_09.array = in_stack_fffffffffffffe10._type;
        ~r0_09.len = (int)in_stack_fffffffffffffe10.data;
        runtime_growslice(b.buf.array,uVar9,b.buf.cap,1,(internal_abi_Type *)&DAT_00807920,~r0_09);
        iVar11 = local_120 - uVar8;
        uVar9 = extraout_RBX_08;
        f_00 = local_110;
        b.buf.array = extraout_RAX_18;
        b.buf.cap = extraout_RCX_10;
      }
      else {
        iVar11 = local_120 - uVar8;
      }
      b.buf.array[uVar9 - 1] = 0x3d;
      b.buf.len = uVar9;
      if (SBORROW8(local_120,uVar8) == iVar11 < 0) {
        if (uVar8 == 0) {
          bVar13 = false;
        }
        else {
          strings_IndexFunc((string)in_stack_fffffffffffffe10,f_00,uVar8);
          bVar13 = extraout_RAX_20 < 0;
          f_00 = local_110;
        }
        if (bVar13) {
          if (b.addr == (strings_Builder *)0x0) {
            b.addr = &b;
          }
          else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
            runtime_gopanic(in_stack_fffffffffffffe10);
          }
          uVar9 = uVar8 + b.buf.len;
          puVar4 = b.buf.array;
          uVar5 = b.buf.cap;
          iVar11 = b.buf.len;
          if ((uint)b.buf.cap < uVar9) {
            local_120 = b.buf.len;
            ~r0_12.cap = (int)in_stack_fffffffffffffe20;
            ~r0_12.array = in_stack_fffffffffffffe10._type;
            ~r0_12.len = (int)in_stack_fffffffffffffe10.data;
            runtime_growslice(b.buf.array,uVar9,b.buf.cap,uVar8,(internal_abi_Type *)&DAT_00807920,
                              ~r0_12);
            puVar4 = extraout_RAX_22;
            uVar5 = extraout_RCX_13;
            uVar9 = extraout_RBX_11;
            f_00 = local_110;
            iVar11 = local_120;
          }
          local_128 = uVar9;
          local_120 = uVar5;
          local_90 = puVar4;
          runtime_memmove(puVar4 + iVar11,f_00,uVar8);
          b.buf.cap = local_120;
          b.buf.len = local_128;
          b.buf.array = local_90;
        }
        else {
          if (b.addr == (strings_Builder *)0x0) {
            b.addr = &b;
          }
          else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
            runtime_gopanic(in_stack_fffffffffffffe10);
          }
          uVar9 = b.buf.len + 1;
          if ((uint)b.buf.cap < uVar9) {
            ~r0_11.cap = (int)in_stack_fffffffffffffe20;
            ~r0_11.array = in_stack_fffffffffffffe10._type;
            ~r0_11.len = (int)in_stack_fffffffffffffe10.data;
            runtime_growslice(b.buf.array,uVar9,b.buf.cap,1,(internal_abi_Type *)&DAT_00807920,
                              ~r0_11);
            uVar9 = extraout_RBX_10;
            f_00 = local_110;
            b.buf.array = extraout_RAX_21;
            b.buf.cap = extraout_RCX_12;
          }
          b.buf.array[uVar9 - 1] = 0x22;
          uVar5 = 0;
          index_1 = 0;
          b.buf.len = uVar9;
          while (index_1 < (int)uVar8) {
            if ((*(char *)((int)f_00 + index_1) == '\"') ||
               (offset = index_1, *(char *)((int)f_00 + index_1) == '\\')) {
              if ((uint)index_1 < uVar5) {
                    // WARNING: Subroutine does not return
                runtime_panicSliceB();
              }
              sVar12 = index_1 - uVar5;
              pvVar10 = (void *)((uVar5 & (int)-sVar12 >> 0x3f) + (int)f_00);
              if (b.addr == (strings_Builder *)0x0) {
                b.addr = &b;
              }
              else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
                runtime_gopanic(in_stack_fffffffffffffe10);
              }
              uVar9 = b.buf.len + sVar12;
              uVar5 = b.buf.cap;
              iVar11 = b.buf.len;
              puVar4 = b.buf.array;
              local_168 = index_1;
              if ((uint)b.buf.cap < uVar9) {
                local_120 = b.buf.len;
                ~r0_13.cap = (int)in_stack_fffffffffffffe20;
                ~r0_13.array = in_stack_fffffffffffffe10._type;
                ~r0_13.len = (int)in_stack_fffffffffffffe10.data;
                local_f8 = pvVar10;
                runtime_growslice(b.buf.array,uVar9,b.buf.cap,sVar12,
                                  (internal_abi_Type *)&DAT_00807920,~r0_13);
                uVar5 = extraout_RCX_14;
                pvVar10 = local_f8;
                iVar11 = local_120;
                uVar9 = extraout_RBX_13;
                puVar4 = extraout_RAX_23;
              }
              local_128 = uVar5;
              local_120 = uVar9;
              local_90 = puVar4;
              runtime_memmove(puVar4 + iVar11,pvVar10,sVar12);
              b.buf.cap = local_128;
              b.buf.len = local_120;
              auVar3 = b.buf._8_16_;
              b.buf.array = local_90;
              b.buf._8_16_ = auVar3;
              if (b.addr == (strings_Builder *)0x0) {
                b.addr = &b;
              }
              else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
                runtime_gopanic(in_stack_fffffffffffffe10);
              }
              uVar9 = local_120 + 1;
              if (local_128 < uVar9) {
                ~r0_14.cap = (int)in_stack_fffffffffffffe20;
                ~r0_14.array = in_stack_fffffffffffffe10._type;
                ~r0_14.len = (int)in_stack_fffffffffffffe10.data;
                runtime_growslice(local_90,uVar9,local_128,1,(internal_abi_Type *)&DAT_00807920,
                                  ~r0_14);
                uVar9 = extraout_RBX_14;
                b.buf.array = extraout_RAX_24;
                b.buf.cap = extraout_RCX_15;
              }
              b.buf.array[uVar9 - 1] = 0x5c;
              offset = local_168;
              uVar5 = local_168;
              f_00 = local_110;
              b.buf.len = uVar9;
            }
            offset = offset + 1;
            index_1 = offset;
          }
          if (uVar8 < uVar5) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          sVar12 = uVar8 - uVar5;
          pvVar10 = (void *)((uVar5 & (int)-sVar12 >> 0x3f) + (int)f_00);
          if (b.addr == (strings_Builder *)0x0) {
            b.addr = &b;
          }
          else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
            runtime_gopanic(in_stack_fffffffffffffe10);
          }
          uVar8 = sVar12 + b.buf.len;
          puVar4 = b.buf.array;
          uVar9 = b.buf.cap;
          iVar11 = b.buf.len;
          local_128 = sVar12;
          if ((uint)b.buf.cap < uVar8) {
            local_120 = b.buf.len;
            ~r0_15.cap = (int)in_stack_fffffffffffffe20;
            ~r0_15.array = in_stack_fffffffffffffe10._type;
            ~r0_15.len = (int)in_stack_fffffffffffffe10.data;
            local_100 = pvVar10;
            runtime_growslice(b.buf.array,uVar8,b.buf.cap,sVar12,(internal_abi_Type *)&DAT_00807920,
                              ~r0_15);
            puVar4 = extraout_RAX_25;
            uVar9 = extraout_RCX_16;
            iVar11 = local_120;
            pvVar10 = local_100;
            uVar8 = extraout_RBX_15;
          }
          sVar12 = local_128;
          local_128 = uVar8;
          local_120 = uVar9;
          local_90 = puVar4;
          runtime_memmove(puVar4 + iVar11,pvVar10,sVar12);
          b.buf.cap = local_120;
          b.buf.len = local_128;
          auVar3 = b.buf._8_16_;
          b.buf.array = local_90;
          b.buf._8_16_ = auVar3;
          if (b.addr == (strings_Builder *)0x0) {
            b.addr = &b;
          }
          else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
            runtime_gopanic(in_stack_fffffffffffffe10);
          }
          uVar8 = local_128 + 1;
          if (local_120 < uVar8) {
            ~r0_16.cap = (int)in_stack_fffffffffffffe20;
            ~r0_16.array = in_stack_fffffffffffffe10._type;
            ~r0_16.len = (int)in_stack_fffffffffffffe10.data;
            runtime_growslice(local_90,uVar8,local_120,1,(internal_abi_Type *)&DAT_00807920,~r0_16);
            uVar8 = extraout_RBX_16;
            b.buf.array = extraout_RAX_26;
            b.buf.cap = extraout_RCX_17;
          }
          b.buf.len = uVar8;
          b.buf.array[uVar8 - 1] = 0x22;
        }
      }
      else {
        if (b.addr == (strings_Builder *)0x0) {
          b.addr = &b;
        }
        else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
          runtime_gopanic(in_stack_fffffffffffffe10);
        }
        b.buf.len = uVar9 + 7;
        if ((uint)b.buf.cap < (uint)b.buf.len) {
          ~r0_10.cap = (int)in_stack_fffffffffffffe20;
          ~r0_10.array = in_stack_fffffffffffffe10._type;
          ~r0_10.len = (int)in_stack_fffffffffffffe10.data;
          local_120 = uVar9;
          uVar5 = b.buf.len;
          b.buf.len = uVar9;
          runtime_growslice(b.buf.array,uVar5,b.buf.cap,7,(internal_abi_Type *)&DAT_00807920,~r0_10)
          ;
          b.buf.array = extraout_RAX_19;
          b.buf.cap = extraout_RCX_11;
          uVar9 = local_120;
          f_00 = local_110;
          b.buf.len = extraout_RBX_09;
        }
        *(undefined4 *)(b.buf.array + uVar9) = 0x2d667475;
        *(undefined4 *)(b.buf.array + uVar9 + 3) = 0x2727382d;
        offset_1 = 0;
        iVar11 = 0;
        while (iVar11 < (int)uVar8) {
          bVar1 = *(byte *)((int)f_00 + iVar11);
          index = iVar11;
          if ((byte)(bVar1 - 0x21) < 0x5e) {
            if (bVar1 == 0x2a) {
              bVar13 = true;
            }
            else if (bVar1 == 0x27) {
              bVar13 = true;
            }
            else if (bVar1 == 0x25) {
              bVar13 = true;
            }
            else {
              local_160 = offset_1;
              strings_IndexRune((string)in_stack_fffffffffffffe10,0x8b6011,0xf);
              bVar13 = -1 < extraout_RAX_27;
              offset_1 = local_160;
              f_00 = local_110;
            }
          }
          else {
            bVar13 = true;
          }
          if (bVar13) {
            if ((uint)index < (uint)offset_1) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            sVar12 = index - offset_1;
            pvVar10 = (void *)((offset_1 & (int)-sVar12 >> 0x3f) + (int)f_00);
            if (b.addr == (strings_Builder *)0x0) {
              b.addr = &b;
            }
            else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
              runtime_gopanic(in_stack_fffffffffffffe10);
            }
            uVar9 = sVar12 + b.buf.len;
            uVar5 = b.buf.cap;
            iVar11 = b.buf.len;
            puVar4 = b.buf.array;
            if ((uint)b.buf.cap < uVar9) {
              local_120 = b.buf.len;
              ~r0_17.cap = (int)in_stack_fffffffffffffe20;
              ~r0_17.array = in_stack_fffffffffffffe10._type;
              ~r0_17.len = (int)in_stack_fffffffffffffe10.data;
              local_e8 = pvVar10;
              runtime_growslice(b.buf.array,uVar9,b.buf.cap,sVar12,
                                (internal_abi_Type *)&DAT_00807920,~r0_17);
              uVar5 = extraout_RCX_18;
              pvVar10 = local_e8;
              iVar11 = local_120;
              uVar9 = extraout_RBX_17;
              puVar4 = extraout_RAX_28;
            }
            local_128 = uVar5;
            local_120 = uVar9;
            local_90 = puVar4;
            runtime_memmove(puVar4 + iVar11,pvVar10,sVar12);
            b.buf.cap = local_128;
            b.buf.len = local_120;
            auVar3 = b.buf._8_16_;
            b.buf.array = local_90;
            b.buf._8_16_ = auVar3;
            if (b.addr == (strings_Builder *)0x0) {
              b.addr = &b;
            }
            else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
              runtime_gopanic(in_stack_fffffffffffffe10);
            }
            uVar9 = local_120 + 1;
            if (local_128 < uVar9) {
              ~r0_18.cap = (int)in_stack_fffffffffffffe20;
              ~r0_18.array = in_stack_fffffffffffffe10._type;
              ~r0_18.len = (int)in_stack_fffffffffffffe10.data;
              runtime_growslice(local_90,uVar9,local_128,1,(internal_abi_Type *)&DAT_00807920,~r0_18
                               );
              uVar9 = extraout_RBX_18;
              b.buf.array = extraout_RAX_29;
              b.buf.cap = extraout_RCX_19;
            }
            b.buf.len = uVar9;
            b.buf.array[uVar9 - 1] = 0x25;
            uVar2 = "goal , cons/mark  maxTrigger= pages/byte\n s.sweepgen= allocCount end tracegc\ntimer_deletens} value: {}, want {r1= [recovered]bad recoverybad g statusentersyscallwirep: p->m=) p->status=releasep: m= sysmonwait= preemptoff=cas64 failedGOTRACEBACK= m->gsignal=-byte limit\nruntime: sp=abi mismatchillegal seekinvalid slothost is downnot pollable<unknown:%d>Sfixed32KindSfixed64Kindmessage_typejava_packageoptimize_forswift_prefixruby_packagedebug_redactdouble_valuestring_valueverificationis_extension has no name has no typereflect.CopyOUT_OF_RANGENormalSocketgrpc-messageContent-Typegrpc-timeoutGrpc-MessageAddr: \'%s\', Cookie.Valuemax-forwardshttp2debug=1http2debug=2status code Multi-StatusNot ModifiedUnauthorizedI\'m a teapotNot ExtendedPUSH_PROMISECONTINUATION152587890625762939453125Cypro_MinoanMeetei_MayekPahawh_HmongSora_SompengSyloti_NagriRCodeSuccessRCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen..." /* TRUNCATED STRING LITERAL */
                    [(bVar1 >> 4) + 0x1f54];
            if (b.addr == (strings_Builder *)0x0) {
              b.addr = &b;
            }
            else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
              runtime_gopanic(in_stack_fffffffffffffe10);
            }
            uVar9 = uVar9 + 1;
            if ((uint)b.buf.cap < uVar9) {
              ~r0_19.cap = (int)in_stack_fffffffffffffe20;
              ~r0_19.array = in_stack_fffffffffffffe10._type;
              ~r0_19.len = (int)in_stack_fffffffffffffe10.data;
              runtime_growslice(b.buf.array,uVar9,b.buf.cap,1,(internal_abi_Type *)&DAT_00807920,
                                ~r0_19);
              uVar9 = extraout_RBX_19;
              b.buf.array = extraout_RAX_30;
              b.buf.cap = extraout_RCX_20;
            }
            b.buf.len = uVar9;
            b.buf.array[uVar9 - 1] = uVar2;
            uVar2 = "goal , cons/mark  maxTrigger= pages/byte\n s.sweepgen= allocCount end tracegc\ntimer_deletens} value: {}, want {r1= [recovered]bad recoverybad g statusentersyscallwirep: p->m=) p->status=releasep: m= sysmonwait= preemptoff=cas64 failedGOTRACEBACK= m->gsignal=-byte limit\nruntime: sp=abi mismatchillegal seekinvalid slothost is downnot pollable<unknown:%d>Sfixed32KindSfixed64Kindmessage_typejava_packageoptimize_forswift_prefixruby_packagedebug_redactdouble_valuestring_valueverificationis_extension has no name has no typereflect.CopyOUT_OF_RANGENormalSocketgrpc-messageContent-Typegrpc-timeoutGrpc-MessageAddr: \'%s\', Cookie.Valuemax-forwardshttp2debug=1http2debug=2status code Multi-StatusNot ModifiedUnauthorizedI\'m a teapotNot ExtendedPUSH_PROMISECONTINUATION152587890625762939453125Cypro_MinoanMeetei_MayekPahawh_HmongSora_SompengSyloti_NagriRCodeSuccessRCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen..." /* TRUNCATED STRING LITERAL */
                    [(bVar1 & 0xf) + 0x1f54];
            if (b.addr == (strings_Builder *)0x0) {
              b.addr = &b;
            }
            else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
              runtime_gopanic(in_stack_fffffffffffffe10);
            }
            uVar9 = uVar9 + 1;
            if ((uint)b.buf.cap < uVar9) {
              ~r0_20.cap = (int)in_stack_fffffffffffffe20;
              ~r0_20.array = in_stack_fffffffffffffe10._type;
              ~r0_20.len = (int)in_stack_fffffffffffffe10.data;
              runtime_growslice(b.buf.array,uVar9,b.buf.cap,1,(internal_abi_Type *)&DAT_00807920,
                                ~r0_20);
              uVar9 = extraout_RBX_20;
              b.buf.array = extraout_RAX_31;
              b.buf.cap = extraout_RCX_21;
            }
            b.buf.array[uVar9 - 1] = uVar2;
            offset_1 = index + 1;
            f_00 = local_110;
            b.buf.len = uVar9;
          }
          iVar11 = index + 1;
        }
        if (uVar8 < (uint)offset_1) {
