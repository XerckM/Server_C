  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (*in_R8 < 0x10000) {
    *(undefined2 *)((int)in_R8 + 0x1c) = 10;
    *(char *)((int)in_R8 + 0x1e) = (char)(*in_R8 >> 8);
    *(char *)((int)in_R8 + 0x1f) = (char)*in_R8;
    *(undefined4 *)((int)in_R8 + 0x34) = *(undefined4 *)(in_R8 + 1);
    *(undefined4 *)((int)in_R8 + 0x24) = *(undefined4 *)((int)in_R8 + 0xc);
    *(undefined4 *)(in_R8 + 5) = *(undefined4 *)(in_R8 + 2);
    *(undefined4 *)((int)in_R8 + 0x2c) = *(undefined4 *)((int)in_R8 + 0x14);
    *(undefined4 *)(in_R8 + 6) = *(undefined4 *)(in_R8 + 3);
    ptr = (void *)((int)in_R8 + 0x1c);
    puVar1 = (undefined1 *)0x0;
  }
  else {
    puVar1 = go_itab_syscall_Errno_error;
    ptr = (void *)0x0;
  }
  if (puVar1 != (undefined1 *)0x0) {
    return;
  }
  syscall_sendto(fd,(void *)flags,(size_t)to,in_RDI,in_RSI,(socklen_t)ptr);
  return;
}



void syscall_Sendto(int fd,__uint8 p,int flags,syscall_Sockaddr to,error err)

{
  socklen_t __addr_len;
  void *ptr;
  syscall__Socklen salen;
  size_t in_RCX;
  int extraout_RCX;
  sockaddr *in_RSI;
  int in_RDI;
  int in_R8;
  undefined8 in_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_R8 == 0) {
    __addr_len = 0;
  }
  else {
    __addr_len = (**(code **)(in_R8 + 0x18))(in_R9);
    if (extraout_RCX != 0) {
      return;
    }
  }
  syscall_sendto(fd,(void *)flags,in_RCX,in_RDI,in_RSI,__addr_len);
  return;
}



void syscall_Socket(int domain,int typ,int proto,int fd,error err)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((domain == 10) && (syscall_SocketDisableIPv6 != false)) {
    return;
  }
  syscall_socket(domain,typ,proto);
  return;
}



int syscall_openat(int __fd,char *__file,int __oflag,...)

{
  string s;
  uint8 *extraout_RAX;
  uint8 *_p0;
  int extraout_RAX_00;
  uintptr r0;
  uint val;
  syscall_Errno e1;
  int extraout_RBX;
  void *x;
  dword in_ESI;
  uintptr in_RDI;
  int extraout_RDI;
  int iVar1;
  uintptr r1;
  uintptr r2;
  int unaff_R14;
  char *pcStack0000000000000010;
  dword dStack0000000000000028;
  uint8 *in_stack_ffffffffffffff90;
  int in_stack_ffffffffffffff98;
  __uint8 in_stack_ffffffffffffffa0;
  error in_stack_ffffffffffffffb8;
  
  pcStack0000000000000010 = __file;
  dStack0000000000000028 = in_ESI;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  s.len = in_stack_ffffffffffffff98;
  s.str = in_stack_ffffffffffffff90;
  syscall_ByteSliceFromString(s,in_stack_ffffffffffffffa0,in_stack_ffffffffffffffb8);
  if (extraout_RDI == 0) {
    if (extraout_RBX == 0) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    iVar1 = 0;
    _p0 = extraout_RAX;
  }
  else {
    _p0 = (uint8 *)0x0;
    iVar1 = extraout_RDI;
  }
  if (iVar1 != 0) {
    return 0;
  }
  syscall_Syscall6(0x101,__fd,(uintptr)_p0,in_RDI,(uint)dStack0000000000000028,0,0,r1,r2,
                   (syscall_Errno)in_stack_ffffffffffffff90);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return extraout_RAX_00;
      }
    }
    else {
      if (val == 0xb) {
        return extraout_RAX_00;
      }
      if (val == 0x16) {
        return extraout_RAX_00;
      }
    }
    runtime_convT64(val,x);
  }
  return extraout_RAX_00;
}



int syscall_pipe2(int *__pipedes,int __flags)

{
  uint val;
  syscall_Errno e1;
  undefined1 *puVar1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_RawSyscall(0x125,(uintptr)__pipedes,__flags,0,in_RSI,in_R8,in_R9);
  if (val == 0) {
    puVar1 = (undefined1 *)0x0;
  }
  else {
    if (val < 3) {
      if (val == 2) {
        return (int)syscall_errENOENT.tab;
      }
    }
    else {
      if (val == 0xb) {
        return (int)syscall_errEAGAIN.tab;
      }
      if (val == 0x16) {
        return (int)syscall_errEINVAL.tab;
      }
    }
    runtime_convT64(val,x);
    puVar1 = go_itab_syscall_Errno_error;
  }
  return (int)puVar1;
}



ssize_t syscall_readlinkat(int __fd,char *__path,char *__buf,size_t __len)

{
  string s;
  uint8 *extraout_RAX;
  uint8 *_p0;
  ssize_t extraout_RAX_00;
  uintptr r0;
  void *_p1;
  uint val;
  syscall_Errno e1;
  int extraout_RBX;
  void *x;
  uintptr in_RSI;
  int extraout_RDI;
  int iVar1;
  uintptr r2;
  int unaff_R14;
  char *pcStack0000000000000010;
  void *pvStack0000000000000020;
  uintptr uStack0000000000000028;
  uint8 *in_stack_ffffffffffffff90;
  int in_stack_ffffffffffffff98;
  __uint8 in_stack_ffffffffffffffa0;
  error in_stack_ffffffffffffffb8;
  
  pcStack0000000000000010 = __path;
  uStack0000000000000028 = in_RSI;
  pvStack0000000000000020 = (void *)__len;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  s.len = in_stack_ffffffffffffff98;
  s.str = in_stack_ffffffffffffff90;
  syscall_ByteSliceFromString(s,in_stack_ffffffffffffffa0,in_stack_ffffffffffffffb8);
  if (extraout_RDI == 0) {
    if (extraout_RBX == 0) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    iVar1 = 0;
    _p0 = extraout_RAX;
  }
  else {
    _p0 = (uint8 *)0x0;
    iVar1 = extraout_RDI;
  }
  if (iVar1 != 0) {
    return 0;
  }
  _p1 = pvStack0000000000000020;
  if (uStack0000000000000028 == 0) {
    _p1 = &syscall__zero;
  }
  syscall_Syscall6(0x10b,__fd,(uintptr)_p0,(uintptr)_p1,uStack0000000000000028,0,0,(uintptr)_p0,r2,
                   (syscall_Errno)in_stack_ffffffffffffff90);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return extraout_RAX_00;
      }
    }
    else {
      if (val == 0xb) {
        return extraout_RAX_00;
      }
      if (val == 0x16) {
        return extraout_RAX_00;
      }
    }
    runtime_convT64(val,x);
  }
  return extraout_RAX_00;
}



int syscall_unlinkat(int __fd,char *__name,int __flag)

{
  __uint8 ~r0;
  error ~r1;
  uint8 *extraout_RAX;
  uint8 *_p0;
  uint val;
  syscall_Errno e1;
  undefined1 *puVar1;
  int extraout_RBX;
  void *x;
  uintptr extraout_RSI;
  uintptr r1;
  runtime_itab *in_RDI;
  undefined1 *extraout_RDI;
  uintptr r2;
  syscall_Errno err;
  int unaff_R14;
  char *pcStack0000000000000010;
  string in_stack_ffffffffffffffb0;
  undefined in_stack_ffffffffffffffc0 [16];
  int in_stack_ffffffffffffffd0;
  
  pcStack0000000000000010 = __name;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0.cap = in_stack_ffffffffffffffd0;
  ~r0.array = (uint8 *)in_stack_ffffffffffffffc0._0_8_;
  ~r0.len = in_stack_ffffffffffffffc0._8_8_;
  ~r1.data = (void *)__fd;
  ~r1.tab = in_RDI;
  syscall_ByteSliceFromString(in_stack_ffffffffffffffb0,~r0,~r1);
  if (extraout_RDI == (undefined1 *)0x0) {
    if (extraout_RBX == 0) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    puVar1 = (undefined1 *)0x0;
    r1 = 0;
    _p0 = extraout_RAX;
  }
  else {
    _p0 = (uint8 *)0x0;
    r1 = extraout_RSI;
    puVar1 = extraout_RDI;
  }
  if (puVar1 != (undefined1 *)0x0) {
    return (int)puVar1;
  }
  syscall_Syscall(0x107,__fd,(uintptr)_p0,(uintptr)in_RDI,r1,r2,err);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return (int)syscall_errENOENT.tab;
      }
    }
    else {
      if (val == 0xb) {
        return (int)syscall_errEAGAIN.tab;
      }
      if (val == 0x16) {
        return (int)syscall_errEINVAL.tab;
      }
    }
    runtime_convT64(val,x);
    puVar1 = go_itab_syscall_Errno_error;
  }
  return (int)puVar1;
}



void syscall_Close(int fd,error err)

{
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(3,fd,0,0,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return;
      }
    }
    else {
      if (val == 0xb) {
        return;
      }
      if (val == 0x16) {
        return;
      }
    }
    runtime_convT64(val,x);
  }
  return;
}



void syscall_Dup(int oldfd,int fd,error err)

{
  uintptr r0;
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(0x20,oldfd,0,0,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return;
      }
    }
    else {
      if (val == 0xb) {
        return;
      }
      if (val == 0x16) {
        return;
      }
    }
    runtime_convT64(val,x);
  }
  return;
}



void syscall_Fchdir(int fd,error err)

{
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(0x51,fd,0,0,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return;
      }
    }
    else {
      if (val == 0xb) {
        return;
      }
      if (val == 0x16) {
        return;
      }
    }
    runtime_convT64(val,x);
  }
  return;
}



void syscall_Fchmod(int fd,uint32 mode,error err)

{
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(0x5b,fd,(uint)mode,0,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return;
      }
    }
    else {
      if (val == 0xb) {
        return;
      }
      if (val == 0x16) {
        return;
      }
    }
    runtime_convT64(val,x);
  }
  return;
}



int syscall_fcntl(int __fd,int __cmd,...)

{
  int extraout_RAX;
  uintptr r0;
  uintptr in_RCX;
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(0x48,__fd,__cmd,in_RCX,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return extraout_RAX;
      }
    }
    else {
      if (val == 0xb) {
        return extraout_RAX;
      }
      if (val == 0x16) {
        return extraout_RAX;
      }
    }
    runtime_convT64(val,x);
  }
  return extraout_RAX;
}



void syscall_Fsync(int fd,error err)

{
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(0x4a,fd,0,0,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return;
      }
    }
    else {
      if (val == 0xb) {
        return;
      }
      if (val == 0x16) {
        return;
      }
    }
    runtime_convT64(val,x);
  }
  return;
}



void syscall_Getdents(int fd,__uint8 buf,int n,error err)

{
  uintptr r0;
  uintptr in_RCX;
  uint val;
  syscall_Errno e1;
  void *_p0;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  _p0 = (void *)n;
  if (in_RCX == 0) {
    _p0 = &syscall__zero;
  }
  syscall_Syscall(0xd9,fd,(uintptr)_p0,in_RCX,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return;
      }
    }
    else {
      if (val == 0xb) {
        return;
      }
      if (val == 0x16) {
        return;
      }
    }
    runtime_convT64(val,x);
  }
  return;
}



ssize_t syscall_read(int __fd,void *__buf,size_t __nbytes)

{
  ssize_t extraout_RAX;
  uintptr r0;
  uint val;
  syscall_Errno e1;
  void *_p0;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  void *pvStack0000000000000010;
  
  pvStack0000000000000010 = __buf;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  _p0 = pvStack0000000000000010;
  if (__nbytes == 0) {
    _p0 = &syscall__zero;
  }
  syscall_Syscall(0,__fd,(uintptr)_p0,__nbytes,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return extraout_RAX;
      }
    }
    else {
      if (val == 0xb) {
        return extraout_RAX;
      }
      if (val == 0x16) {
        return extraout_RAX;
      }
    }
    runtime_convT64(val,x);
  }
  return extraout_RAX;
}



void syscall_Uname(syscall_Utsname *buf,error err)

{
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_RawSyscall(0x3f,(uintptr)buf,0,0,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return;
      }
    }
    else {
      if (val == 0xb) {
        return;
      }
      if (val == 0x16) {
        return;
      }
    }
    runtime_convT64(val,x);
  }
  return;
}



ssize_t syscall_write(int __fd,void *__buf,size_t __n)

{
  ssize_t extraout_RAX;
  uintptr r0;
  uint val;
  syscall_Errno e1;
  void *_p0;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  void *pvStack0000000000000010;
  
  pvStack0000000000000010 = __buf;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  _p0 = pvStack0000000000000010;
  if (__n == 0) {
    _p0 = &syscall__zero;
  }
  syscall_Syscall(1,__fd,(uintptr)_p0,__n,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return extraout_RAX;
      }
    }
    else {
      if (val == 0xb) {
        return extraout_RAX;
      }
      if (val == 0x16) {
        return extraout_RAX;
      }
    }
    runtime_convT64(val,x);
  }
  return extraout_RAX;
}



int syscall_munmap(void *__addr,size_t __len)

{
  uint val;
  syscall_Errno e1;
  undefined1 *puVar1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(0xb,(uintptr)__addr,__len,0,in_RSI,in_R8,in_R9);
  if (val == 0) {
    puVar1 = (undefined1 *)0x0;
  }
  else {
    if (val < 3) {
      if (val == 2) {
        return (int)syscall_errENOENT.tab;
      }
    }
    else {
      if (val == 0xb) {
        return (int)syscall_errEAGAIN.tab;
      }
      if (val == 0x16) {
        return (int)syscall_errEINVAL.tab;
      }
    }
    runtime_convT64(val,x);
    puVar1 = go_itab_syscall_Errno_error;
  }
  return (int)puVar1;
}



void syscall_Fchown(int fd,int uid,int gid,error err)

{
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(0x5d,fd,uid,gid,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return;
      }
    }
    else {
      if (val == 0xb) {
        return;
      }
      if (val == 0x16) {
        return;
      }
    }
    runtime_convT64(val,x);
  }
  return;
}



void syscall_Fstat(int fd,syscall_Stat_t *stat,error err)

{
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(5,fd,(uintptr)stat,0,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return;
      }
    }
    else {
      if (val == 0xb) {
        return;
      }
      if (val == 0x16) {
        return;
      }
    }
    runtime_convT64(val,x);
  }
  return;
}



void syscall_Ftruncate(int fd,int64 length,error err)

{
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(0x4d,fd,length,0,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return;
      }
    }
    else {
      if (val == 0xb) {
        return;
      }
      if (val == 0x16) {
        return;
      }
    }
    runtime_convT64(val,x);
  }
  return;
}



void syscall_Getrlimit(int resource,syscall_Rlimit *rlim,error err)

{
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_RawSyscall(0x61,resource,(uintptr)rlim,0,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return;
      }
    }
    else {
      if (val == 0xb) {
