    runtime_morestack_noctxt();
  }
  remain.cap = (int)in_stack_ffffffffffffff38;
  remain.array = (uint8 *)in_stack_ffffffffffffff28._0_8_;
  remain.len = in_stack_ffffffffffffff28._8_8_;
  err.data = in_stack_ffffffffffffff48;
  err.tab = in_stack_ffffffffffffff40;
  golang_org_x_net_http2_hpack_readVarInt
            (7,in_stack_ffffffffffffff10,(uint64)(d->buf).array,remain,err);
  if (extraout_RSI != 0) {
    return;
  }
  local_b0 = in_XMM15._0_8_;
  uStack_a8 = in_XMM15._0_4_;
  uStack_a4 = in_XMM15._4_4_;
  uStack_a0 = in_XMM15._8_4_;
  uStack_9c = in_XMM15._12_4_;
  _local_98 = in_XMM15;
  if (val == 0) {
    bVar3 = false;
  }
  else {
    uVar1 = (golang_org_x_net_http2_hpack_staticTable->ents).len;
    if (uVar1 < val) {
      if (uVar1 + (d->dynTab).table.ents.len < val) {
        bVar3 = false;
      }
      else {
        pgVar2 = (d->dynTab).table.ents.array;
        uVar1 = (d->dynTab).table.ents.len;
        uVar5 = uVar1 - (val - (golang_org_x_net_http2_hpack_staticTable->ents).len);
        if (uVar1 <= uVar5) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        local_b0 = pgVar2[uVar5].Name.str;
        uStack_a8 = *(undefined4 *)&pgVar2[uVar5].Name.len;
        uStack_a4 = *(undefined4 *)((int)&pgVar2[uVar5].Name.len + 4);
        uStack_a0 = *(undefined4 *)&pgVar2[uVar5].Value.str;
        uStack_9c = *(undefined4 *)((int)&pgVar2[uVar5].Value.str + 4);
        _local_98 = *(undefined (*) [16])&pgVar2[uVar5].Value.len;
        bVar3 = true;
      }
    }
    else {
      pgVar2 = (golang_org_x_net_http2_hpack_staticTable->ents).array;
      local_b0 = pgVar2[val - 1].Name.str;
      uStack_a8 = *(undefined4 *)&pgVar2[val - 1].Name.len;
      uStack_a4 = *(undefined4 *)((int)&pgVar2[val - 1].Name.len + 4);
      uStack_a0 = *(undefined4 *)&pgVar2[val - 1].Value.str;
      uStack_9c = *(undefined4 *)((int)&pgVar2[val - 1].Value.str + 4);
      _local_98 = *(undefined (*) [16])&pgVar2[val - 1].Value.len;
      bVar3 = true;
    }
  }
  hf.Name.str = local_b0;
  hf.Name.len._0_4_ = uStack_a8;
  hf.Name.len._4_4_ = uStack_a4;
  hf.Value.str._0_4_ = uStack_a0;
  hf.Value.str._4_4_ = uStack_9c;
  hf.Value.len._0_4_ = local_98._0_4_;
  hf.Value.len._4_4_ = local_98._4_4_;
  hf.Sensitive = uStack_90._0_1_;
  hf._33_3_ = uStack_90._1_3_;
  hf._36_4_ = uStack_8c;
  if (bVar3) {
    (d->buf).len = extraout_RCX;
    (d->buf).cap = extraout_RDI;
    puVar4 = x;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RBX;
      extraout_R11[1] = (d->buf).array;
      puVar4 = extraout_RBX;
    }
    (d->buf).array = puVar4;
    hf_00.Value.len = (uint8 *)in_stack_ffffffffffffff28._0_8_;
    hf_00._32_8_ = in_stack_ffffffffffffff28._8_8_;
    hf_00.Name.str = in_stack_ffffffffffffff10.array;
    hf_00.Name.len = in_stack_ffffffffffffff10.len;
    hf_00.Value.str = (uint8 *)in_stack_ffffffffffffff10.cap;
    ~r0_00.data = in_stack_ffffffffffffff40;
    ~r0_00.tab = in_stack_ffffffffffffff38;
    golang_org_x_net_http2_hpack___Decoder__callEmit(d,hf_00,~r0_00);
    return;
  }
  runtime_convT64(val,x);
  runtime_convT((internal_abi_Type *)&DAT_0084c680,&stack0xffffffffffffff40,
                go_itab_golang_org_x_net_http2_hpack_InvalidIndexError_error);
  return;
}



// WARNING: Type propagation algorithm not settling

void golang_org_x_net_http2_hpack___Decoder__parseFieldLiteral
               (golang_org_x_net_http2_hpack_Decoder *d,uint8 n,
               golang_org_x_net_http2_hpack_indexType it,error ~r0)

{
  uint uVar1;
  golang_org_x_net_http2_hpack_HeaderField *pgVar2;
  golang_org_x_net_http2_hpack_undecodedString u;
  golang_org_x_net_http2_hpack_undecodedString u_00;
  golang_org_x_net_http2_hpack_HeaderField f;
  golang_org_x_net_http2_hpack_HeaderField hf_00;
  __uint8 remain;
  golang_org_x_net_http2_hpack_undecodedString u_01;
  golang_org_x_net_http2_hpack_undecodedString u_02;
  string ~r0_00;
  string ~r0_01;
  error ~r0_02;
  error err;
  error ~r1;
  error ~r1_00;
  __uint8 remain_00;
  __uint8 remain_01;
  error err_00;
  error err_01;
  bool bVar3;
  undefined extraout_AL;
  undefined extraout_AL_00;
  uint64 val;
  uint64 nameIdx;
  undefined8 extraout_RAX;
  golang_org_x_net_http2_hpack_Decoder *extraout_RAX_00;
  golang_org_x_net_http2_hpack_Decoder *d_00;
  void *extraout_RCX;
  int extraout_RCX_00;
  int extraout_RCX_01;
  void *x;
  int extraout_RSI;
  uint8 *extraout_RSI_00;
  uint8 *extraout_RSI_01;
  uint8 *puVar4;
  undefined8 extraout_RDI;
  bool wantStr;
  int extraout_R8;
  int iVar5;
  bool ok;
  uint uVar6;
  void *pvVar7;
  int extraout_R9;
  int iVar8;
  undefined8 uVar9;
  int extraout_R10;
  int extraout_R10_00;
  undefined uVar10;
  uint8 **extraout_R11;
  int unaff_R14;
  undefined in_XMM15 [16];
  golang_org_x_net_http2_hpack_indexType gStack0000000000000018;
  __uint8 in_stack_fffffffffffffeb8;
  int in_stack_fffffffffffffed0;
  uint8 *in_stack_fffffffffffffed8;
  int in_stack_fffffffffffffee0;
  undefined5 in_stack_fffffffffffffee8;
  undefined in_stack_fffffffffffffeed;
  undefined in_stack_fffffffffffffeee;
  undefined in_stack_fffffffffffffeef;
  void *in_stack_fffffffffffffef0;
  undefined8 in_stack_fffffffffffffef8;
  uint64 uVar11;
  runtime_itab *in_stack_ffffffffffffff08;
  void *in_stack_ffffffffffffff10;
  undefined local_c8 [8];
  undefined local_c0 [16];
  golang_org_x_net_http2_hpack_HeaderField ihf;
  uint8 *local_88;
  undefined4 uStack_80;
  undefined4 uStack_7c;
  undefined4 uStack_78;
  undefined4 uStack_74;
  undefined local_70 [8];
  undefined4 uStack_68;
  undefined4 uStack_64;
  golang_org_x_net_http2_hpack_HeaderField hf;
  golang_org_x_net_http2_hpack_headerFieldTable dt;
  
  gStack0000000000000018 = it;
  while (local_c8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  remain.len = (int)in_stack_fffffffffffffed8;
  remain.array = (uint8 *)in_stack_fffffffffffffed0;
  remain.cap = in_stack_fffffffffffffee0;
  err.tab._5_1_ = in_stack_fffffffffffffeed;
  err.tab._0_5_ = in_stack_fffffffffffffee8;
  err.tab._6_1_ = in_stack_fffffffffffffeee;
  err.tab._7_1_ = in_stack_fffffffffffffeef;
  err.data = in_stack_fffffffffffffef0;
  golang_org_x_net_http2_hpack_readVarInt
            (n,in_stack_fffffffffffffeb8,(uint64)(d->buf).array,remain,err);
  local_88 = in_XMM15._0_8_;
  if (extraout_RSI != 0) {
    return;
  }
  wantStr = d->emitEnabled != false || gStack0000000000000018 == 0;
  uVar11 = val;
  if (val == 0) {
    u_01.b.array = in_stack_fffffffffffffed8;
    u_01._0_8_ = in_stack_fffffffffffffed0;
    u_01.b.len = in_stack_fffffffffffffee0;
    u_01.b.cap._0_5_ = in_stack_fffffffffffffee8;
    u_01.b.cap._5_1_ = wantStr;
    u_01.b.cap._6_1_ = in_stack_fffffffffffffeee;
    u_01.b.cap._7_1_ = in_stack_fffffffffffffeef;
    remain_00.len = in_stack_fffffffffffffef8;
    remain_00.array = (uint8 *)in_stack_fffffffffffffef0;
    remain_00.cap = 0;
    err_00.data = in_stack_ffffffffffffff10;
    err_00.tab = in_stack_ffffffffffffff08;
    golang_org_x_net_http2_hpack___Decoder__readString
              (d,in_stack_fffffffffffffeb8,u_01,remain_00,err_00);
    pvVar7 = extraout_RCX;
    uVar9 = extraout_RDI;
    uVar10 = extraout_AL;
    if (extraout_R10 != 0) {
      return;
    }
  }
  else {
    uStack_80 = in_XMM15._0_4_;
    uStack_7c = in_XMM15._4_4_;
    uStack_78 = in_XMM15._8_4_;
    uStack_74 = in_XMM15._12_4_;
    uVar1 = (golang_org_x_net_http2_hpack_staticTable->ents).len;
    if (uVar1 < val) {
      if ((d->dynTab).table.ents.len + uVar1 < val) {
        bVar3 = false;
        _local_70 = in_XMM15;
      }
      else {
        pgVar2 = (d->dynTab).table.ents.array;
        uVar1 = (d->dynTab).table.ents.len;
        uVar6 = uVar1 - (val - (golang_org_x_net_http2_hpack_staticTable->ents).len);
        if (uVar1 <= uVar6) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        local_88 = pgVar2[uVar6].Name.str;
        uStack_80 = *(undefined4 *)&pgVar2[uVar6].Name.len;
        uStack_7c = *(undefined4 *)((int)&pgVar2[uVar6].Name.len + 4);
        uStack_78 = *(undefined4 *)&pgVar2[uVar6].Value.str;
        uStack_74 = *(undefined4 *)((int)&pgVar2[uVar6].Value.str + 4);
        _local_70 = *(undefined (*) [16])&pgVar2[uVar6].Value.len;
        bVar3 = true;
      }
    }
    else {
      pgVar2 = (golang_org_x_net_http2_hpack_staticTable->ents).array;
      local_88 = pgVar2[val - 1].Name.str;
      uStack_80 = *(undefined4 *)&pgVar2[val - 1].Name.len;
      uStack_7c = *(undefined4 *)((int)&pgVar2[val - 1].Name.len + 4);
      uStack_78 = *(undefined4 *)&pgVar2[val - 1].Value.str;
      uStack_74 = *(undefined4 *)((int)&pgVar2[val - 1].Value.str + 4);
      _local_70 = *(undefined (*) [16])&pgVar2[val - 1].Value.len;
      bVar3 = true;
    }
    ihf.Name.str = local_88;
    ihf.Name.len._0_4_ = uStack_80;
    ihf.Name.len._4_4_ = uStack_7c;
    ihf.Value.str._0_4_ = uStack_78;
    ihf.Value.str._4_4_ = uStack_74;
    ihf.Value.len._0_4_ = local_70._0_4_;
    ihf.Value.len._4_4_ = local_70._4_4_;
    ihf.Sensitive = uStack_68._0_1_;
    ihf._33_3_ = uStack_68._1_3_;
    ihf._36_4_ = uStack_64;
    if (!bVar3) {
      runtime_convT64(val,x);
      local_c0._8_8_ = extraout_RAX;
      local_c0._0_8_ = go_itab_golang_org_x_net_http2_hpack_InvalidIndexError_error;
      runtime_convT((internal_abi_Type *)&DAT_0084c680,local_c0,
                    go_itab_golang_org_x_net_http2_hpack_InvalidIndexError_error);
      return;
    }
    pvVar7 = (void *)0x0;
    uVar9 = 0;
    uVar10 = 0;
  }
  u_02.b.array = in_stack_fffffffffffffed8;
  u_02._0_8_ = in_stack_fffffffffffffed0;
  u_02.b.len = in_stack_fffffffffffffee0;
  u_02.b.cap._0_5_ = in_stack_fffffffffffffee8;
  u_02.b.cap._5_1_ = wantStr;
  u_02.b.cap._6_1_ = uVar10;
  u_02.b.cap._7_1_ = in_stack_fffffffffffffeef;
  remain_01.len = uVar9;
  remain_01.array = (uint8 *)pvVar7;
  remain_01.cap = uVar11;
  err_01.data = in_stack_ffffffffffffff10;
  err_01.tab = in_stack_ffffffffffffff08;
  golang_org_x_net_http2_hpack___Decoder__readString
            (d,in_stack_fffffffffffffeb8,u_02,remain_01,err_01);
  if (extraout_R10_00 != 0) {
    return;
  }
  iVar5 = extraout_R8;
  iVar8 = extraout_R9;
  if (wantStr != false) {
    if ((uVar11 == 0) &&
       (u.b.cap = in_stack_fffffffffffffed0, u._0_24_ = (undefined  [24])in_stack_fffffffffffffeb8,
       ~r0_00.len = in_stack_fffffffffffffee0, ~r0_00.str = in_stack_fffffffffffffed8,
       ~r1.tab._5_1_ = wantStr, ~r1.tab._0_5_ = in_stack_fffffffffffffee8, ~r1.tab._6_1_ = uVar10,
       ~r1.tab._7_1_ = extraout_AL_00, ~r1.data = pvVar7, in_stack_fffffffffffffeef = extraout_AL_00
       , golang_org_x_net_http2_hpack___Decoder__decodeString(d,u,~r0_00,~r1), extraout_RCX_00 != 0)
       ) {
      return;
    }
    u_00.b.cap = in_stack_fffffffffffffed0;
    u_00._0_24_ = (undefined  [24])in_stack_fffffffffffffeb8;
    ~r0_01.len = in_stack_fffffffffffffee0;
    ~r0_01.str = in_stack_fffffffffffffed8;
    ~r1_00.tab._5_1_ = wantStr;
    ~r1_00.tab._0_5_ = in_stack_fffffffffffffee8;
    ~r1_00.tab._6_1_ = uVar10;
    ~r1_00.tab._7_1_ = in_stack_fffffffffffffeef;
    ~r1_00.data = pvVar7;
    golang_org_x_net_http2_hpack___Decoder__decodeString(d,u_00,~r0_01,~r1_00);
    if (extraout_RCX_01 != 0) {
      return;
    }
  }
  (d->buf).len = iVar5;
  (d->buf).cap = iVar8;
  d_00 = d;
  puVar4 = extraout_RSI_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RSI_01;
    extraout_R11[1] = (extraout_RAX_00->buf).array;
    d_00 = extraout_RAX_00;
    puVar4 = extraout_RSI_01;
  }
  (d_00->buf).array = puVar4;
  if (gStack0000000000000018 == 0) {
    f.Value.len = in_stack_fffffffffffffed0;
    f.Name.str = in_stack_fffffffffffffeb8.array;
    f.Name.len = in_stack_fffffffffffffeb8.len;
    f.Value.str = (uint8 *)in_stack_fffffffffffffeb8.cap;
    f._32_8_ = in_stack_fffffffffffffed8;
    golang_org_x_net_http2_hpack___dynamicTable__add(&d_00->dynTab,f);
    d_00 = d;
  }
  hf_00.Value.len = in_stack_fffffffffffffed0;
  hf_00.Name.str = in_stack_fffffffffffffeb8.array;
  hf_00.Name.len = in_stack_fffffffffffffeb8.len;
  hf_00.Value.str = (uint8 *)in_stack_fffffffffffffeb8.cap;
  hf_00._32_8_ = in_stack_fffffffffffffed8;
  ~r0_02.data._0_5_ = in_stack_fffffffffffffee8;
  ~r0_02.tab = (runtime_itab *)in_stack_fffffffffffffee0;
  ~r0_02.data._5_1_ = wantStr;
  ~r0_02.data._6_1_ = uVar10;
  ~r0_02.data._7_1_ = in_stack_fffffffffffffeef;
  golang_org_x_net_http2_hpack___Decoder__callEmit(d_00,hf_00,~r0_02);
  return;
}



void golang_org_x_net_http2_hpack___Decoder__callEmit
               (golang_org_x_net_http2_hpack_Decoder *d,golang_org_x_net_http2_hpack_HeaderField hf,
               error ~r0)

{
  int iVar1;
  int in_RCX;
  int in_RSI;
  int unaff_R14;
  golang_org_x_net_http2_hpack_HeaderField in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar1 = d->maxStrLen;
  if ((iVar1 != 0) && ((iVar1 < in_RCX || (iVar1 < in_RSI)))) {
    return;
  }
  if (d->emitEnabled != false) {
    (**d->emit)(in_stack_ffffffffffffffd0);
  }
  return;
}



void golang_org_x_net_http2_hpack___Decoder__parseDynamicTableSizeUpdate
               (golang_org_x_net_http2_hpack_Decoder *d,error ~r0)

{
  __uint8 remain;
  error err;
  uint extraout_RAX;
  uint64 size;
  undefined8 *extraout_RAX_00;
  char **extraout_RAX_01;
  int extraout_RCX;
  uint8 *puVar1;
  void *in_RBX;
  uint8 *~r0_00;
  void *extraout_RBX;
  int extraout_RSI;
  int extraout_RDI;
  uint8 **extraout_R11;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffffb0;
  undefined8 in_stack_ffffffffffffffc8;
  undefined8 in_stack_ffffffffffffffd0;
  int iVar2;
  int in_stack_ffffffffffffffd8;
  int iVar3;
  runtime_itab *in_stack_ffffffffffffffe0;
  void *in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  if ((d->firstField == false) && ((d->dynTab).size != 0)) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,in_RBX);
    extraout_RAX_01[1] = (char *)0x47;
    *extraout_RAX_01 =
         "dynamic table size update MUST occur at the beginning of a header blockx509: issuer has name constraints but leaf doesn\'t have a SAN extensiongrpc: Server.RegisterService found duplicate service registration for %qreflect: embedded type with methods not implemented for non-pointer typecrypto/ecdh: internal error: nistec ScalarBaseMult returned the identityReceived a RST_STREAM frame with code %q, but found no mapped gRPC statusbytes.Buffer: UnreadRune: previous operation was not a successful ReadRuneheader list size to send violates the maximum size (%d bytes) set by serverHeader list size to send violates the maximum size (%d bytes) set by clienttransport: http2Server.HandleStreams received bogus greeting from client: %qtransport: http2Server.HandleStreams saw invalid preface type %T from clienttransport: trying to send header list size larger than the limit set by peergrpc: credentials.Bundle may not be used with individual TransportCredentialsClientConn\'s authority from transport creds %q and dial option %q don\'t matchMapIter.Next called on an iterator that does not have an associated map Valuereflect: embedded type with methods not implemented if type is not first fieldtransport: http2Server.HandleStreams failed to read initial settings frame: %vx509: signature check attempts limit reached while verifying certificate chain115792089210356248762697446949407573530086143415290314195533631308867097853951115792089210356248762697446949407573529996955224135760342422259061068512044369cannot convert slice with length %y to array or pointer to array with length %xmetadata: FromOutgoingContext got an odd number of input pairs for metadata: %dx509: invalid signature: parent certificate cannot sign this kind of certificatecrypto/rand: blocked for 60 seconds waiting to read random data from the kernel\ncrypto/ecdh: internal error: nistec ScalarBaseMult failed for a fixed-size inputgrpc: Server.RegisterService found the handler of type %v that does not satisfy %vreceived goaway with stream id: %v, which exceeds stream id of p..." /* TRUNCATED STRING LITERAL */
    ;
    runtime_convT((internal_abi_Type *)&DAT_0084c680,&stack0xffffffffffffffe8,
                  go_itab__errors_errorString_error);
    return;
  }
  remain.len = in_stack_ffffffffffffffd0;
  remain.array = (uint8 *)in_stack_ffffffffffffffc8;
  remain.cap = in_stack_ffffffffffffffd8;
  err.data = in_stack_ffffffffffffffe8;
  err.tab = in_stack_ffffffffffffffe0;
  golang_org_x_net_http2_hpack_readVarInt
            (5,in_stack_ffffffffffffffb0,(uint64)(d->buf).array,remain,err);
  if (extraout_RSI != 0) {
    return;
  }
  if ((d->dynTab).allowedMaxSize < extraout_RAX) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_00);
    extraout_RAX_00[1] = 0x23;
    *extraout_RAX_00 = &DAT_008c1f20;
    runtime_convT((internal_abi_Type *)&DAT_0084c680,&stack0xffffffffffffffe8,
                  go_itab__errors_errorString_error);
    return;
  }
  (d->dynTab).maxSize = (uint32)extraout_RAX;
  iVar2 = extraout_RCX;
  iVar3 = extraout_RDI;
  puVar1 = ~r0_00;
  golang_org_x_net_http2_hpack___dynamicTable__evict(&d->dynTab);
  (d->buf).len = iVar2;
  (d->buf).cap = iVar3;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = puVar1;
    extraout_R11[1] = (d->buf).array;
  }
  (d->buf).array = puVar1;
  return;
}



void golang_org_x_net_http2_hpack_readVarInt(uint8 n,__uint8 p,uint64 i,__uint8 remain,error err)

{
  void *pvVar1;
  byte bVar2;
  void *~r0;
  int in_RCX;
  uint uVar3;
  int in_RDI;
  byte *pbVar4;
  int iVar5;
  uint64 m;
  uint8 b;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((n == 0) || (8 < n)) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe0);
  }
  if (in_RCX == 0) {
    return;
  }
  uVar3 = (uint)*(byte *)i;
  if (n < 8) {
    uVar3 = uVar3 & (1 << (n & 0x3f) & -(uint)(n < 0x40)) - 1;
  }
  if (uVar3 < (1 << (n & 0x3f) & -(uint)(n < 0x40)) - 1) {
    return;
  }
  iVar5 = in_RDI + -1;
  pbVar4 = (byte *)(((dword)(-iVar5 >> 0x3f) & 1) + i);
  pvVar1 = (void *)0x0;
  while( true ) {
    ~r0 = pvVar1;
    in_RCX = in_RCX + -1;
    if (in_RCX == 0) {
      return;
    }
    bVar2 = *pbVar4;
    iVar5 = iVar5 + -1;
    pbVar4 = pbVar4 + ((dword)(-iVar5 >> 0x3f) & 1);
    if ((bVar2 & 0x80) == 0) break;
    pvVar1 = (void *)((int)~r0 + 7);
    if ((void *)0x3e < pvVar1) {
      runtime_convT((internal_abi_Type *)&DAT_0084c680,
                    &golang_org_x_net_http2_hpack_errVarintOverflow,~r0);
      return;
    }
  }
  return;
}



void golang_org_x_net_http2_hpack___Decoder__readString
               (golang_org_x_net_http2_hpack_Decoder *d,__uint8 p,
               golang_org_x_net_http2_hpack_undecodedString u,__uint8 remain,error err)

{
  error err_00;
  __uint8 remain_00;
  uint extraout_RAX;
  uint64 strLen;
  int in_RCX;
  uint extraout_RCX;
  bool isHuff;
  undefined *in_RBX;
  int unaff_RBP;
  int extraout_RSI;
  int unaff_R14;
  runtime_itab *unaff_retaddr;
  __uint8 in_stack_ffffffffffffffd0;
  undefined in_stack_ffffffffffffffe8 [15];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RCX == 0) {
    return;
  }
  remain_00.len._7_1_ = *in_RBX;
  remain_00._0_15_ = in_stack_ffffffffffffffe8;
  remain_00.cap = unaff_RBP;
  err_00.data = d;
  err_00.tab = unaff_retaddr;
  golang_org_x_net_http2_hpack_readVarInt
            (7,in_stack_ffffffffffffffd0,(uint64)in_RBX,remain_00,err_00);
  if (extraout_RSI != 0) {
    return;
  }
  if ((d->maxStrLen != 0) && ((uint)d->maxStrLen < extraout_RAX)) {
    return;
  }
  if (extraout_RCX < extraout_RAX) {
    return;
  }
  return;
}



void golang_org_x_net_http2_hpack___Decoder__decodeString
               (golang_org_x_net_http2_hpack_Decoder *d,
               golang_org_x_net_http2_hpack_undecodedString u,string ~r0,error ~r1)

{
  uint uVar1;
  uint uVar2;
  __uint8 v;
  internal_abi_Type *have;
  int extraout_RAX;
  uint8 *in_RCX;
  char in_BL;
  bytes_Buffer *buf_00;
  bytes_Buffer *buf;
  int in_RDI;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff90;
  int in_stack_ffffffffffffffa0;
  error in_stack_ffffffffffffffa8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_BL == '\0') {
    runtime_slicebytetostring((runtime_tmpBuf *)0x0,in_RCX,in_RDI,(string)in_stack_ffffffffffffff90)
    ;
    return;
  }
  sync___Pool__Get(&golang_org_x_net_http2_hpack_bufPool,in_stack_ffffffffffffff90);
  if (have != (internal_abi_Type *)&DAT_0089f320) {
                    // WARNING: Subroutine does not return
    runtime_panicdottypeE
              (have,(internal_abi_Type *)&DAT_0089f320,(internal_abi_Type *)&DAT_00821120);
  }
  (buf_00->buf).len = 0;
  buf_00->off = 0;
  buf_00->lastRead = 0;
  v.cap = in_stack_ffffffffffffffa0;
  v.array = (uint8 *)in_stack_ffffffffffffff90._type;
  v.len = (int)in_stack_ffffffffffffff90.data;
  golang_org_x_net_http2_hpack_huffmanDecode(buf_00,d->maxStrLen,v,in_stack_ffffffffffffffa8);
  if (extraout_RAX == 0) {
    uVar1 = (buf_00->buf).len;
    uVar2 = buf_00->off;
    if (uVar1 < uVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    runtime_slicebytetostring
              ((runtime_tmpBuf *)0x0,
               (buf_00->buf).array + (uVar2 & (int)(uVar2 - (buf_00->buf).cap) >> 0x3f),
               uVar1 - uVar2,(string)in_stack_ffffffffffffff90);
  }
  (buf_00->buf).len = 0;
  buf_00->off = 0;
  buf_00->lastRead = 0;
  sync___Pool__Put(&golang_org_x_net_http2_hpack_bufPool,in_stack_ffffffffffffff90);
  return;
}



void golang_org_x_net_http2_hpack_glob__func1(interface___ ~r0)

{
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00860d00,in_RBX);
  return;
}



void golang_org_x_net_http2_hpack_huffmanDecode(bytes_Buffer *buf,int maxLen,__uint8 v,error ~r0)

{
  golang_org_x_net_http2_hpack_node *pgVar1;
  byte bVar2;
  int in_RCX;
  golang_org_x_net_http2_hpack_node *rootHuffmanNode;
  golang_org_x_net_http2_hpack_node *pgVar3;
  uint uVar4;
  uint mask;
  int in_RDI;
  int iVar5;
  uint8 cbits;
  uint8 sbits;
  uint cur;
  int unaff_R14;
  error in_stack_ffffffffffffffc0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (golang_org_x_net_http2_hpack_buildRootOnce.done == 0) {
    sync___Once__doSlow(&golang_org_x_net_http2_hpack_buildRootOnce,
                        (func__ **)&PTR_golang_org_x_net_http2_hpack_buildRootHuffmanNode_008ec8c8);
  }
  pgVar1 = golang_org_x_net_http2_hpack_lazyRootHuffmanNode;
  cbits = 0;
  sbits = 0;
  cur = 0;
  pgVar3 = golang_org_x_net_http2_hpack_lazyRootHuffmanNode;
  for (iVar5 = 0; iVar5 < in_RDI; iVar5 = iVar5 + 1) {
    cur = cur << 8 | (uint)*(byte *)(in_RCX + iVar5);
    sbits = sbits + 8;
    bVar2 = cbits + 8;
    while (cbits = bVar2, 7 < cbits) {
      bVar2 = cbits - 8;
      pgVar3 = (*pgVar3->children)[cur >> (bVar2 & 0x3f) & -(uint)(bVar2 < 0x40) & 0xff];
      if (pgVar3 == (golang_org_x_net_http2_hpack_node *)0x0) {
        return;
      }
      if (pgVar3->children == (golang_org_x_net_http2_hpack_node *(*) [256])0x0) {
        if ((maxLen != 0) && (maxLen == (buf->buf).len - buf->off)) {
          return;
        }
        bytes___Buffer__WriteByte(buf,pgVar3->sym,in_stack_ffffffffffffffc0);
        sbits = cbits - pgVar3->codeLen;
        pgVar3 = pgVar1;
        bVar2 = sbits;
      }
    }
  }
  while (cbits != 0) {
    pgVar3 = (*pgVar3->children)
             [cur << (-(cbits - 8) & 0x3f) & -(uint)((byte)-(cbits - 8) < 0x40) & 0xff];
    if (pgVar3 == (golang_org_x_net_http2_hpack_node *)0x0) {
      return;
    }
    if ((pgVar3->children != (golang_org_x_net_http2_hpack_node *(*) [256])0x0) ||
       (cbits < pgVar3->codeLen)) break;
    if ((maxLen != 0) && (maxLen == (buf->buf).len - buf->off)) {
      return;
    }
    bytes___Buffer__WriteByte(buf,pgVar3->sym,in_stack_ffffffffffffffc0);
    sbits = cbits - pgVar3->codeLen;
    pgVar3 = pgVar1;
    cbits = sbits;
  }
  if (7 < sbits) {
    return;
  }
  uVar4 = (1 << (cbits & 0x3f) & -(uint)(cbits < 0x40)) - 1;
  if ((cur & uVar4) == uVar4) {
    return;
  }
  return;
}



// WARNING: Unknown calling convention

void golang_org_x_net_http2_hpack_buildRootHuffmanNode(void)

{
  dword dVar1;
  golang_org_x_net_http2_hpack_node *(*extraout_RAX) [256];
  golang_org_x_net_http2_hpack_node *extraout_RAX_00;
  golang_org_x_net_http2_hpack_node *extraout_RAX_01;
  golang_org_x_net_http2_hpack_node *pgVar2;
  int extraout_RAX_02;
  golang_org_x_net_http2_hpack_node (*leaves) [256];
  int extraout_RAX_03;
  golang_org_x_net_http2_hpack_node *(*extraout_RAX_04) [256];
  golang_org_x_net_http2_hpack_node *extraout_RAX_05;
  golang_org_x_net_http2_hpack_node *extraout_RAX_06;
  golang_org_x_net_http2_hpack_node *extraout_RAX_07;
  golang_org_x_net_http2_hpack_node *pgVar3;
  int iVar4;
  int extraout_RAX_08;
  byte bVar5;
  int sym;
  uint uVar6;
  uint extraout_RCX;
  uint32 code;
  dword dVar7;
  int start;
  uint uVar8;
  void *in_RBX;
  void *~r0;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *~r0_00;
  void *~r0_01;
  golang_org_x_net_http2_hpack_node *(*extraout_RBX_01) [256];
  golang_org_x_net_http2_hpack_node *(*papgVar9) [256];
  void *extraout_RBX_02;
  uint8 codeLen;
  uint8 uVar10;
  golang_org_x_net_http2_hpack_node *extraout_RSI;
  golang_org_x_net_http2_hpack_node *cur;
  golang_org_x_net_http2_hpack_node *extraout_RDI;
  uint8 shift;
  golang_org_x_net_http2_hpack_node *(*extraout_R8) [256];
  int iVar11;
  int extraout_R9;
  uint uVar12;
  int end;
  uint extraout_R10;
  golang_org_x_net_http2_hpack_node *(**extraout_R11) [256];
  golang_org_x_net_http2_hpack_node *(**extraout_R11_00) [256];
  golang_org_x_net_http2_hpack_node **extraout_R11_01;
  golang_org_x_net_http2_hpack_node **extraout_R11_02;
  int unaff_R14;
  dword local_420 [22];
  undefined local_3c8 [936];
  int local_20;
  golang_org_x_net_http2_hpack_node *local_18;
  golang_org_x_net_http2_hpack_node *(*local_10) [256];
  
  while (local_3c8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX_02;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0081af00,in_RBX);
  local_10 = extraout_RAX;
  runtime_newobject((internal_abi_Type *)&DAT_00877de0,~r0);
  pgVar2 = extraout_RAX_00;
  ~r0_00 = extraout_RBX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier3();
    *extraout_R11 = local_10;
    extraout_R11[1] = (golang_org_x_net_http2_hpack_node *(*) [256])extraout_RAX_01;
    extraout_R11[2] =
         (golang_org_x_net_http2_hpack_node *(*) [256])
         golang_org_x_net_http2_hpack_lazyRootHuffmanNode;
    pgVar2 = extraout_RAX_01;
    ~r0_00 = extraout_RBX_00;
  }
  pgVar2->children = local_10;
  golang_org_x_net_http2_hpack_lazyRootHuffmanNode = pgVar2;
  runtime_newobject((internal_abi_Type *)&DAT_0081af60,~r0_00);
  local_20 = extraout_RAX_02;
  runtime_duffcopy();
  sym = 0;
  iVar4 = extraout_RAX_03;
  do {
    if (0xff < sym) {
      return;
    }
    dVar1 = local_420[sym];
    uVar10 = golang_org_x_net_http2_hpack_huffmanCodeLen[sym];
    pgVar2 = golang_org_x_net_http2_hpack_lazyRootHuffmanNode;
    while (8 < uVar10) {
      uVar10 = uVar10 - 8;
      dVar7 = dVar1 >> (uVar10 & 0x1f) & -(dword)(uVar10 < 0x20) & 0xff;
      if ((*pgVar2->children)[dVar7] == (golang_org_x_net_http2_hpack_node *)0x0) {
        local_18 = pgVar2;
        runtime_newobject((internal_abi_Type *)&DAT_0081af00,
                          golang_org_x_net_http2_hpack_huffmanCodeLen);
        local_10 = extraout_RAX_04;
        runtime_newobject((internal_abi_Type *)&DAT_00877de0,~r0_01);
        pgVar3 = extraout_RAX_05;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_00 = local_10;
          pgVar3 = extraout_RAX_06;
        }
        pgVar3->children = local_10;
        papgVar9 = local_18->children;
        pgVar2 = local_18;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_01 = extraout_RAX_07;
          extraout_R11_01[1] = (*extraout_RBX_01)[dVar7];
          pgVar3 = extraout_RAX_07;
          papgVar9 = extraout_RBX_01;
        }
        (*papgVar9)[dVar7] = pgVar3;
        iVar4 = local_20;
      }
      pgVar2 = (*pgVar2->children)[dVar7];
    }
    bVar5 = -(uVar10 - 8);
    iVar11 = sym * 0x10;
    *(char *)(iVar4 + 9 + iVar11) = (char)sym;
    *(uint8 *)(iVar4 + 8 + iVar11) = uVar10;
    pgVar3 = (golang_org_x_net_http2_hpack_node *)(iVar4 + iVar11);
    uVar12 = 1 << (bVar5 & 0x3f) & -(uint)(bVar5 < 0x40);
    uVar6 = (uint)(dVar1 << (bVar5 & 0x1f) & -(dword)(bVar5 < 0x20) & 0xff);
    for (uVar8 = uVar6; (int)uVar8 < (int)(uVar12 + uVar6); uVar8 = uVar8 + 1) {
      if (0xff < uVar8) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      papgVar9 = pgVar2->children;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_02 = extraout_RSI;
        extraout_R11_02[1] = (*extraout_R8)[uVar8];
        iVar4 = extraout_RAX_08;
        uVar6 = extraout_RCX;
        pgVar3 = extraout_RSI;
        pgVar2 = extraout_RDI;
        papgVar9 = extraout_R8;
        uVar12 = extraout_R10;
        sym = extraout_R9;
      }
      (*papgVar9)[uVar8] = pgVar3;
    }
    sym = sym + 1;
  } while( true );
}



void golang_org_x_net_http2_hpack_AppendHuffmanString(__uint8 dst,string s,__uint8 ~r0)

{
  void *in_RAX;
  void *extraout_RAX;
  void *extraout_RAX_00;
  void *extraout_RAX_01;
  void *extraout_RAX_02;
  void *extraout_RAX_03;
  uint in_RCX;
  uint n;
  uint extraout_RCX;
  int iVar1;
  int i;
  uint in_RBX;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  uint extraout_RBX_03;
  int in_RSI;
  int in_RDI;
  dword dVar2;
  uint over;
  uint uVar3;
  ushort uVar4;
  uint64 x;
  uint pad;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffff90;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  n = 0;
  x = 0;
  for (iVar1 = 0; iVar1 < in_RSI; iVar1 = iVar1 + 1) {
    n = n + golang_org_x_net_http2_hpack_huffmanCodeLen[*(byte *)(in_RDI + iVar1)];
    x = (uint)golang_org_x_net_http2_hpack_huffmanCodes[*(byte *)(in_RDI + iVar1)] |
        x << (golang_org_x_net_http2_hpack_huffmanCodeLen[*(byte *)(in_RDI + iVar1)] & 0x3f);
    if (0x1f < n) {
      dVar2 = (dword)n & 0x1f;
      n = (uint)dVar2;
      in_RBX = in_RBX + 4;
      if (in_RCX < in_RBX) {
        runtime_growslice(in_RAX,in_RBX,in_RCX,4,(internal_abi_Type *)&DAT_00807920,
                          in_stack_ffffffffffffff90);
        in_RAX = extraout_RAX;
        in_RBX = extraout_RBX;
        in_RCX = extraout_RCX;
      }
      dVar2 = (dword)(x >> (sbyte)dVar2);
      *(dword *)((in_RBX - 4) + (int)in_RAX) =
           dVar2 >> 0x18 | (dVar2 & 0xff0000) >> 8 | (dVar2 & 0xff00) << 8 | dVar2 << 0x18;
    }
  }
  dVar2 = (dword)n & 7;
  uVar3 = (uint)dVar2;
  if (uVar3 != 0) {
    n = (n - uVar3) + 8;
    x = x << ((byte)-(uVar3 - 8) & 0x3f) & -(uint)(-(uVar3 - 8) < 0x40) | 0xffU >> (sbyte)dVar2;
  }
  uVar3 = n >> 3;
  if (uVar3 < 2) {
    if (uVar3 == 0) {
      return;
    }
    uVar3 = in_RBX + 1;
    if (in_RCX < uVar3) {
      runtime_growslice(in_RAX,uVar3,in_RCX,1,(internal_abi_Type *)&DAT_00807920,
                        in_stack_ffffffffffffff90);
      in_RAX = extraout_RAX_00;
      uVar3 = extraout_RBX_00;
    }
    *(char *)((uVar3 - 1) + (int)in_RAX) = (char)x;
    return;
  }
  if (uVar3 == 2) {
    uVar3 = in_RBX + 2;
    if (in_RCX < uVar3) {
      runtime_growslice(in_RAX,uVar3,in_RCX,2,(internal_abi_Type *)&DAT_00807920,
                        in_stack_ffffffffffffff90);
      in_RAX = extraout_RAX_01;
      uVar3 = extraout_RBX_01;
    }
    *(ushort *)((uVar3 - 2) + (int)in_RAX) = (ushort)x << 8 | (ushort)x >> 8;
    return;
  }
  if (uVar3 != 3) {
    uVar3 = in_RBX + 4;
    if (in_RCX < uVar3) {
      runtime_growslice(in_RAX,uVar3,in_RCX,4,(internal_abi_Type *)&DAT_00807920,
                        in_stack_ffffffffffffff90);
      in_RAX = extraout_RAX_03;
      uVar3 = extraout_RBX_03;
    }
    dVar2 = (dword)x;
    *(dword *)((uVar3 - 4) + (int)in_RAX) =
         dVar2 >> 0x18 | (dVar2 & 0xff0000) >> 8 | (dVar2 & 0xff00) << 8 | dVar2 << 0x18;
    return;
  }
  uVar3 = in_RBX + 3;
  if (in_RCX < uVar3) {
    runtime_growslice(in_RAX,uVar3,in_RCX,3,(internal_abi_Type *)&DAT_00807920,
                      in_stack_ffffffffffffff90);
    in_RAX = extraout_RAX_02;
    uVar3 = extraout_RBX_02;
  }
  uVar4 = (ushort)(x >> 8);
  *(ushort *)((uVar3 - 3) + (int)in_RAX) = uVar4 << 8 | uVar4 >> 8;
  *(char *)((uVar3 - 1) + (int)in_RAX) = (char)x;
  return;
}


