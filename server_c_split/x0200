      pvVar1 = reflect_dummy.x.data;
      if (reflect_dummy.b != false) {
                    // WARNING: Load size is inaccurate
        reflect_dummy.x._type = *p;
        pvVar2 = *(void **)((int)p + 8);
        pvVar1 = pvVar2;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11 = extraout_RDI_00;
          extraout_R11[1] = reflect_dummy.x.data;
          p = extraout_RBX_00;
          pvVar2 = extraout_RDI_00;
          pvVar1 = extraout_RDI_00;
        }
      }
      reflect_dummy.x.data = pvVar1;
      reflect_chansend0((runtime_hchan *)__buf,p,(bool)nb,SUB81(pvVar2,0));
      return extraout_RAX;
    }
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffa0);
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffa0);
}



void reflect_Value_Set(reflect_Value v,reflect_Value x)

{
  reflect_Value ~r0;
  internal_abi_Type *in_RAX;
  uint8 **extraout_RAX;
  dword extraout_ECX;
  uint in_RCX;
  uint8 **in_RBX;
  void *target;
  uint8 *src;
  uint8 *extraout_RBX;
  uint8 *puVar1;
  void *in_RSI;
  internal_abi_Type *in_RDI;
  uint in_R8;
  uint8 **extraout_R11;
  int unaff_R14;
  reflect_Value in_stack_ffffffffffffff90;
  string in_stack_ffffffffffffffa8;
  undefined in_stack_ffffffffffffffb8 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((in_RCX & 0x60) != 0) || (((dword)in_RCX >> 8 & 1) == 0)) {
    reflect_flag_mustBeAssignableSlow(in_RCX);
  }
  if ((in_R8 == 0) || ((in_R8 & 0x60) != 0)) {
    reflect_flag_mustBeExportedSlow(in_R8);
  }
  ~r0.flag = in_R8;
  ~r0.typ_ = (internal_abi_Type *)in_stack_ffffffffffffffb8._0_8_;
  ~r0.ptr = (void *)in_stack_ffffffffffffffb8._8_8_;
  reflect_Value_assignTo(in_stack_ffffffffffffff90,in_stack_ffffffffffffffa8,in_RDI,in_RSI,~r0);
  if ((extraout_ECX >> 7 & 1) == 0) {
    puVar1 = src;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RBX;
      extraout_R11[1] = *extraout_RAX;
      in_RBX = extraout_RAX;
      puVar1 = extraout_RBX;
    }
    *in_RBX = puVar1;
  }
  else if (src == runtime_zeroVal) {
    reflect_typedmemclr(in_RAX,in_RBX);
  }
  else {
    reflect_typedmemmove(in_RAX,in_RBX,src);
  }
  return;
}



void reflect_Value_SetBool(reflect_Value v,bool x)

{
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  uint in_RCX;
  uint uVar2;
  undefined *in_RBX;
  void *~r0;
  undefined in_DIL;
  undefined8 *extraout_R11;
  int unaff_R14;
  undefined uStack0000000000000020;
  interface___ in_stack_ffffffffffffffc8;
  
  uStack0000000000000020 = in_DIL;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((in_RCX & 0x60) != 0) || (((dword)in_RCX >> 8 & 1) == 0)) {
    reflect_flag_mustBeAssignableSlow(in_RCX);
  }
  uVar2 = (uint)((dword)in_RCX & 0x1f);
  if (uVar2 == 1) {
    *in_RBX = uStack0000000000000020;
    return;
  }
  reflect_valueMethodName((string)in_stack_ffffffffffffffc8);
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0);
  extraout_RAX_00[1] = ~r0;
  puVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RAX;
    puVar1 = extraout_RAX_01;
  }
  *puVar1 = extraout_RAX;
  puVar1[2] = uVar2;
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffc8);
}



void reflect_Value_SetBytes(reflect_Value v,__uint8 x)

{
  internal_abi_Type *in_RAX;
  int extraout_RAX;
  int iVar1;
  undefined8 extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *puVar2;
  undefined8 *extraout_RAX_02;
  uint in_RCX;
  uint uVar3;
  undefined1 *puVar4;
  internal_abi_Type *extraout_RCX;
  internal_abi_Type *in_RBX;
  void *~r0;
  uintptr in_RSI;
  uintptr in_RDI;
  undefined8 in_R8;
  uintptr *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffc0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((in_RCX & 0x60) != 0) || (((dword)in_RCX >> 8 & 1) == 0)) {
    reflect_flag_mustBeAssignableSlow(in_RCX);
  }
  uVar3 = (uint)((dword)in_RCX & 0x1f);
  if (uVar3 != 0x17) {
    reflect_valueMethodName((string)in_stack_ffffffffffffffc0);
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0);
    extraout_RAX_01[1] = ~r0;
    puVar2 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = extraout_RAX_00;
      puVar2 = extraout_RAX_02;
    }
    *puVar2 = extraout_RAX_00;
    puVar2[2] = uVar3;
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffc0);
  }
  reflect_elem(in_RAX,in_RBX);
  if (extraout_RAX == 0) {
    puVar4 = (undefined1 *)0x0;
  }
  else {
    puVar4 = go_itab__reflect_rtype_reflect_Type;
  }
  iVar1 = (**(code **)(puVar4 + 0x98))();
  if (iVar1 != 8) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffc0);
  }
  in_RBX->PtrBytes = in_RSI;
  in_RBX->Hash = (sdword)in_R8;
  in_RBX->TFlag = (char)((uint)in_R8 >> 0x20);
  in_RBX->Align_ = (char)((uint)in_R8 >> 0x28);
  in_RBX->FieldAlign_ = (char)((uint)in_R8 >> 0x30);
  in_RBX->Kind_ = (char)((uint)in_R8 >> 0x38);
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = in_RDI;
    extraout_R11[1] = extraout_RCX->Size_;
    in_RBX = extraout_RCX;
  }
  in_RBX->Size_ = in_RDI;
  return;
}



void reflect_Value_setRunes(reflect_Value v,__int32 x)

{
  int in_RAX;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  byte bVar2;
  uint in_RCX;
  uint uVar3;
  int iVar4;
  undefined8 *in_RBX;
  undefined8 *extraout_RBX;
  void *~r0;
  undefined8 in_RSI;
  undefined8 in_RDI;
  undefined8 extraout_RDI;
  undefined8 in_R8;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffc0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((in_RCX & 0x60) != 0) || (((dword)in_RCX >> 8 & 1) == 0)) {
    reflect_flag_mustBeAssignableSlow(in_RCX);
  }
  uVar3 = (uint)((dword)in_RCX & 0x1f);
  if (uVar3 != 0x17) {
    reflect_valueMethodName((string)in_stack_ffffffffffffffc0);
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0);
    extraout_RAX_00[1] = ~r0;
    puVar1 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = extraout_RAX;
      puVar1 = extraout_RAX_01;
    }
    *puVar1 = extraout_RAX;
    puVar1[2] = uVar3;
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffc0);
  }
  bVar2 = *(byte *)(in_RAX + 0x17) & 0x1f;
  if (bVar2 < 0x13) {
    if (bVar2 == 0x11) {
      iVar4 = *(int *)(in_RAX + 0x30);
      goto LAB_004dd76e;
    }
    if (bVar2 == 0x12) {
      iVar4 = *(int *)(in_RAX + 0x30);
      goto LAB_004dd76e;
    }
  }
  else {
    if (bVar2 == 0x15) {
      iVar4 = *(int *)(in_RAX + 0x38);
      goto LAB_004dd76e;
    }
    if (bVar2 == 0x16) {
      iVar4 = *(int *)(in_RAX + 0x30);
      goto LAB_004dd76e;
    }
    if (bVar2 == 0x17) {
      iVar4 = *(int *)(in_RAX + 0x30);
      goto LAB_004dd76e;
    }
  }
  iVar4 = 0;
LAB_004dd76e:
  if ((*(byte *)(iVar4 + 0x17) & 0x1f) == 5) {
    in_RBX[1] = in_RSI;
    in_RBX[2] = in_R8;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RDI;
      extraout_R11[1] = *extraout_RBX;
      in_RBX = extraout_RBX;
      in_RDI = extraout_RDI;
    }
    *in_RBX = in_RDI;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffc0);
}



void reflect_Value_SetComplex(reflect_Value v,complex128 x)

{
  undefined8 *extraout_RAX;
  uint in_RCX;
  uint uVar1;
  reflect_Kind k;
  double *in_RBX;
  int unaff_R14;
  double in_XMM0_Qa;
  double in_XMM1_Qa;
  interface___ in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((in_RCX & 0x60) != 0) || (((dword)in_RCX >> 8 & 1) == 0)) {
    reflect_flag_mustBeAssignableSlow(in_RCX);
  }
  uVar1 = (uint)((dword)in_RCX & 0x1f);
  if (uVar1 == 0xf) {
    *(float *)in_RBX = (float)in_XMM0_Qa;
    *(float *)((int)in_RBX + 4) = (float)in_XMM1_Qa;
  }
  else {
    if (uVar1 != 0x10) {
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
      extraout_RAX[1] = 0x18;
      *extraout_RAX = &DAT_008bb4ed;
      extraout_RAX[2] = uVar1;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffd8);
    }
    *in_RBX = in_XMM0_Qa;
    in_RBX[1] = in_XMM1_Qa;
  }
  return;
}



void reflect_Value_SetFloat(reflect_Value v,float64 x)

{
  undefined8 *extraout_RAX;
  uint in_RCX;
  uint uVar1;
  reflect_Kind k;
  double *in_RBX;
  int unaff_R14;
  float64 fStack0000000000000020;
  interface___ in_stack_ffffffffffffffd8;
  
  fStack0000000000000020 = x;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((in_RCX & 0x60) != 0) || (((dword)in_RCX >> 8 & 1) == 0)) {
    reflect_flag_mustBeAssignableSlow(in_RCX);
  }
  uVar1 = (uint)((dword)in_RCX & 0x1f);
  if (uVar1 == 0xd) {
    *(float *)in_RBX = (float)(double)fStack0000000000000020;
  }
  else {
    if (uVar1 != 0xe) {
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
      extraout_RAX[1] = 0x16;
      *extraout_RAX = &DAT_008ba187;
      extraout_RAX[2] = uVar1;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffd8);
    }
    *in_RBX = (double)fStack0000000000000020;
  }
  return;
}



void reflect_Value_SetInt(reflect_Value v,int64 x)

{
  undefined8 *extraout_RAX;
  uint in_RCX;
  uint uVar1;
  reflect_Kind k;
  undefined8 *in_RBX;
  undefined8 in_RDI;
  int unaff_R14;
  undefined8 uStack0000000000000020;
  interface___ in_stack_ffffffffffffffd8;
  
  uStack0000000000000020 = in_RDI;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((in_RCX & 0x60) != 0) || (((dword)in_RCX >> 8 & 1) == 0)) {
    reflect_flag_mustBeAssignableSlow(in_RCX);
  }
  uVar1 = (uint)((dword)in_RCX & 0x1f);
  if (uVar1 < 4) {
    if (uVar1 == 2) {
      *in_RBX = uStack0000000000000020;
    }
    else {
      if (uVar1 != 3) {
LAB_004ddb44:
        runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
        extraout_RAX[1] = 0x14;
        *extraout_RAX = &DAT_008b9027;
        extraout_RAX[2] = uVar1;
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffffd8);
      }
      *(char *)in_RBX = (char)uStack0000000000000020;
    }
  }
  else if (uVar1 == 4) {
    *(short *)in_RBX = (short)uStack0000000000000020;
  }
  else if (uVar1 == 5) {
    *(sdword *)in_RBX = (sdword)uStack0000000000000020;
  }
  else {
    if (uVar1 != 6) goto LAB_004ddb44;
    *in_RBX = uStack0000000000000020;
  }
  return;
}



void reflect_Value_SetLen(reflect_Value v,int n)

{
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  uint in_RCX;
  uint uVar2;
  int in_RBX;
  internal_unsafeheader_Slice *s;
  void *~r0;
  uint in_RDI;
  undefined8 *extraout_R11;
  int unaff_R14;
  uint uStack0000000000000020;
  interface___ in_stack_ffffffffffffffc8;
  
  uStack0000000000000020 = in_RDI;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((in_RCX & 0x60) != 0) || (((dword)in_RCX >> 8 & 1) == 0)) {
    reflect_flag_mustBeAssignableSlow(in_RCX);
  }
  uVar2 = (uint)((dword)in_RCX & 0x1f);
  if (uVar2 == 0x17) {
    if (uStack0000000000000020 <= *(uint *)(in_RBX + 0x10)) {
      *(uint *)(in_RBX + 8) = uStack0000000000000020;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffc8);
  }
  reflect_valueMethodName((string)in_stack_ffffffffffffffc8);
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0);
  extraout_RAX_00[1] = ~r0;
  puVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RAX;
    puVar1 = extraout_RAX_01;
  }
  *puVar1 = extraout_RAX;
  puVar1[2] = uVar2;
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffc8);
}



void reflect_Value_SetCap(reflect_Value v,int n)

{
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  uint in_RCX;
  uint uVar2;
  int in_RBX;
  internal_unsafeheader_Slice *s;
  void *~r0;
  int in_RDI;
  undefined8 *extraout_R11;
  int unaff_R14;
  int iStack0000000000000020;
  interface___ in_stack_ffffffffffffffc8;
  
  iStack0000000000000020 = in_RDI;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((in_RCX & 0x60) != 0) || (((dword)in_RCX >> 8 & 1) == 0)) {
    reflect_flag_mustBeAssignableSlow(in_RCX);
  }
  uVar2 = (uint)((dword)in_RCX & 0x1f);
  if (uVar2 == 0x17) {
    if ((*(int *)(in_RBX + 8) <= iStack0000000000000020) &&
       (iStack0000000000000020 <= *(int *)(in_RBX + 0x10))) {
      *(int *)(in_RBX + 0x10) = iStack0000000000000020;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffc8);
  }
  reflect_valueMethodName((string)in_stack_ffffffffffffffc8);
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0);
  extraout_RAX_00[1] = ~r0;
  puVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RAX;
    puVar1 = extraout_RAX_01;
  }
  *puVar1 = extraout_RAX;
  puVar1[2] = uVar2;
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffc8);
}



void reflect_Value_SetMapIndex(reflect_Value v,reflect_Value key,reflect_Value elem)

{
  void *val;
  reflect_Value v_00;
  reflect_Value v_01;
  reflect_Value v_02;
  reflect_Value ~r0;
  reflect_Value ~r0_00;
  reflect_Value ~r0_01;
  internal_abi_MapType *in_RAX;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  dword dVar2;
  uint in_RCX;
  uint extraout_RCX;
  void *k;
  uint extraout_RCX_00;
  runtime_hmap *in_RBX;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *~r0_02;
  void *in_RSI;
  void *e_1;
  internal_abi_Type *in_RDI;
  void *e;
  reflect_flag in_R8;
  internal_abi_Type *in_R9;
  void *in_R10;
  reflect_flag in_R11;
  undefined8 *extraout_R11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff80;
  reflect_flag in_stack_ffffffffffffff90;
  string in_stack_ffffffffffffff98;
  undefined in_stack_ffffffffffffffa8 [16];
  reflect_flag in_stack_ffffffffffffffb8;
  reflect_flag rVar3;
  
  key.ptr = in_RSI;
  key.typ_ = in_RDI;
  key.flag = in_R8;
  elem.typ_ = in_R9;
  elem.ptr = in_R10;
  elem.flag = in_R11;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  dVar2 = (dword)in_RCX;
  if ((dVar2 & 0x1f) != 0x15) {
    reflect_valueMethodName((string)in_stack_ffffffffffffff80);
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_02);
    extraout_RAX_00[1] = ~r0_02;
    puVar1 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = extraout_RAX;
      puVar1 = extraout_RAX_01;
    }
    *puVar1 = extraout_RAX;
    puVar1[2] = (uint)(dVar2 & 0x1f);
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff80);
  }
  if ((in_RCX & 0x60) != 0) {
    reflect_flag_mustBeExportedSlow(in_RCX);
  }
  if ((key.flag == 0) || ((key.flag & 0x60) != 0)) {
    reflect_flag_mustBeExportedSlow(key.flag);
  }
  if ((((reflect_stringType == in_RAX->Key) || (((dword)key.flag & 0x1f) == 0x18)) &&
      (key.typ_ == in_RAX->Key)) && (in_RAX->Elem->Size_ < 0x81)) {
                    // WARNING: Load size is inaccurate
    val = *key.ptr;
    rVar3 = *(reflect_flag *)((int)key.ptr + 8);
    if (elem.typ_ == (internal_abi_Type *)0x0) {
      if (((in_RAX->Type).Size_ == 8) && ((in_RAX->Type).PtrBytes != 0)) {
        if ((dVar2 >> 7 & 1) != 0) {
          in_RBX = (runtime_hmap *)in_RBX->count;
        }
        reflect_mapdelete_faststr(in_RAX,in_RBX,(string)in_stack_ffffffffffffff80);
        return;
      }
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff80);
    }
    if ((elem.flag == 0) || ((elem.flag & 0x60) != 0)) {
      reflect_flag_mustBeExportedSlow(elem.flag);
    }
    v_00.flag = in_stack_ffffffffffffff90;
    v_00.typ_ = in_stack_ffffffffffffff80._type;
    v_00.ptr = in_stack_ffffffffffffff80.data;
    ~r0.flag = rVar3;
    ~r0.typ_ = (internal_abi_Type *)in_stack_ffffffffffffffa8._0_8_;
    ~r0.ptr = (void *)in_stack_ffffffffffffffa8._8_8_;
    reflect_Value_assignTo(v_00,in_stack_ffffffffffffff98,elem.typ_,elem.ptr,~r0);
    if (((in_RAX->Type).Size_ == 8) && ((in_RAX->Type).PtrBytes != 0)) {
      if ((dVar2 >> 7 & 1) != 0) {
        in_RBX = (runtime_hmap *)in_RBX->count;
      }
      reflect_mapassign_faststr(&in_RAX->Type,in_RBX,(string)in_stack_ffffffffffffff80,val);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff80);
  }
  v_01.flag = in_stack_ffffffffffffff90;
  v_01.typ_ = in_stack_ffffffffffffff80._type;
  v_01.ptr = in_stack_ffffffffffffff80.data;
  ~r0_00.flag = in_stack_ffffffffffffffb8;
  ~r0_00.typ_ = (internal_abi_Type *)in_stack_ffffffffffffffa8._0_8_;
  ~r0_00.ptr = (void *)in_stack_ffffffffffffffa8._8_8_;
  reflect_Value_assignTo(v_01,in_stack_ffffffffffffff98,key.typ_,key.ptr,~r0_00);
  k = &key.ptr;
  if ((extraout_RCX & 0x80) != 0) {
    k = extraout_RBX;
  }
  if (elem.typ_ != (internal_abi_Type *)0x0) {
    if ((elem.flag == 0) || ((elem.flag & 0x60) != 0)) {
      reflect_flag_mustBeExportedSlow(elem.flag);
    }
    v_02.flag = in_stack_ffffffffffffff90;
    v_02.typ_ = in_stack_ffffffffffffff80._type;
    v_02.ptr = in_stack_ffffffffffffff80.data;
    ~r0_01.flag = in_stack_ffffffffffffffb8;
    ~r0_01.typ_ = (internal_abi_Type *)in_stack_ffffffffffffffa8._0_8_;
    ~r0_01.ptr = (void *)in_stack_ffffffffffffffa8._8_8_;
    reflect_Value_assignTo(v_02,in_stack_ffffffffffffff98,elem.typ_,elem.ptr,~r0_01);
    e = &elem.ptr;
    if ((extraout_RCX_00 & 0x80) != 0) {
      e = extraout_RBX_00;
    }
    if (((in_RAX->Type).Size_ == 8) && ((in_RAX->Type).PtrBytes != 0)) {
      if ((dVar2 >> 7 & 1) != 0) {
        in_RBX = (runtime_hmap *)in_RBX->count;
      }
      reflect_mapassign(&in_RAX->Type,in_RBX,k,e);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff80);
  }
  if (((in_RAX->Type).Size_ == 8) && ((in_RAX->Type).PtrBytes != 0)) {
    if ((dVar2 >> 7 & 1) != 0) {
      in_RBX = (runtime_hmap *)in_RBX->count;
    }
    reflect_mapdelete(in_RAX,in_RBX,k);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffff80);
}



void reflect_Value_SetUint(reflect_Value v,uint64 x)

{
  undefined8 *extraout_RAX;
  uint in_RCX;
  uint uVar1;
  reflect_Kind k;
  undefined8 *in_RBX;
  undefined8 in_RDI;
  int unaff_R14;
  undefined8 uStack0000000000000020;
  interface___ in_stack_ffffffffffffffd8;
  
  uStack0000000000000020 = in_RDI;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((in_RCX & 0x60) != 0) || (((dword)in_RCX >> 8 & 1) == 0)) {
    reflect_flag_mustBeAssignableSlow(in_RCX);
  }
  uVar1 = (uint)((dword)in_RCX & 0x1f);
  if (uVar1 < 10) {
    if (uVar1 == 7) {
      *in_RBX = uStack0000000000000020;
    }
    else if (uVar1 == 8) {
      *(char *)in_RBX = (char)uStack0000000000000020;
    }
    else {
      if (uVar1 != 9) {
LAB_004de391:
        runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
        extraout_RAX[1] = 0x15;
        *extraout_RAX = &DAT_008b98c5;
        extraout_RAX[2] = uVar1;
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffffd8);
      }
      *(short *)in_RBX = (short)uStack0000000000000020;
    }
  }
  else if (uVar1 == 10) {
    *(sdword *)in_RBX = (sdword)uStack0000000000000020;
  }
  else if (uVar1 == 0xb) {
    *in_RBX = uStack0000000000000020;
  }
  else {
    if (uVar1 != 0xc) goto LAB_004de391;
    *in_RBX = uStack0000000000000020;
  }
  return;
}



void reflect_Value_SetPointer(reflect_Value v,void *x)

{
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  uint in_RCX;
  uint uVar2;
  undefined8 *in_RBX;
  undefined8 *extraout_RBX;
  void *~r0;
  undefined8 in_RDI;
  undefined8 extraout_RDI;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  undefined8 uStack0000000000000020;
  interface___ in_stack_ffffffffffffffc8;
  
  uStack0000000000000020 = in_RDI;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((in_RCX & 0x60) != 0) || (((dword)in_RCX >> 8 & 1) == 0)) {
    reflect_flag_mustBeAssignableSlow(in_RCX);
  }
  uVar2 = (uint)((dword)in_RCX & 0x1f);
  if (uVar2 == 0x1a) {
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RDI;
      extraout_R11[1] = *extraout_RBX;
      in_RBX = extraout_RBX;
      uStack0000000000000020 = extraout_RDI;
    }
    *in_RBX = uStack0000000000000020;
    return;
  }
  reflect_valueMethodName((string)in_stack_ffffffffffffffc8);
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0);
  extraout_RAX_00[1] = ~r0;
  puVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = extraout_RAX;
    puVar1 = extraout_RAX_01;
  }
  *puVar1 = extraout_RAX;
  puVar1[2] = uVar2;
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffc8);
}



void reflect_Value_SetString(reflect_Value v,string x)

{
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  uint in_RCX;
  uint uVar2;
  undefined8 *in_RBX;
  undefined8 *extraout_RBX;
  void *~r0;
  undefined8 in_RSI;
  undefined8 in_RDI;
  undefined8 extraout_RDI;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((in_RCX & 0x60) != 0) || (((dword)in_RCX >> 8 & 1) == 0)) {
    reflect_flag_mustBeAssignableSlow(in_RCX);
  }
  uVar2 = (uint)((dword)in_RCX & 0x1f);
  if (uVar2 == 0x18) {
    in_RBX[1] = in_RSI;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RDI;
      extraout_R11[1] = *extraout_RBX;
      in_RBX = extraout_RBX;
      in_RDI = extraout_RDI;
    }
    *in_RBX = in_RDI;
    return;
  }
  reflect_valueMethodName((string)in_stack_ffffffffffffffc8);
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0);
  extraout_RAX_00[1] = ~r0;
  puVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = extraout_RAX;
    puVar1 = extraout_RAX_01;
  }
  *puVar1 = extraout_RAX;
  puVar1[2] = uVar2;
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffc8);
}



void reflect_Value_Slice(reflect_Value v,int i,int j,reflect_Value ~r0)

{
  reflect_sliceType *typ;
  void **extraout_RAX;
  __unsafe_Pointer *_x;
  void **extraout_RAX_00;
  void **ppvVar1;
  void **extraout_RAX_01;
  int *extraout_RAX_02;
  internal_unsafeheader_String *_t;
  int *extraout_RAX_03;
  int *piVar2;
  undefined8 *extraout_RAX_04;
  dword in_ECX;
  uint uVar3;
  reflect_Kind kind;
  int cap;
  reflect_flag fl;
  void *pvVar4;
  int iVar5;
  int in_RSI;
  int in_RDI;
  void **extraout_R11;
  void **extraout_R11_00;
  int *extraout_R11_01;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar3 = (uint)(in_ECX & 0x1f);
  if (uVar3 == 0x11) {
    if ((in_ECX >> 8 & 1) == 0) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffb8);
    }
    iVar5 = *(int *)(i + 0x40);
    i = *(int *)(i + 0x38);
    pvVar4 = (void *)j;
  }
  else {
    if (uVar3 != 0x17) {
      if (uVar3 != 0x18) {
        runtime_newobject((internal_abi_Type *)&DAT_00850d80,(void *)j);
        extraout_RAX_04[1] = 0x13;
        *extraout_RAX_04 = &DAT_008b85c1;
        extraout_RAX_04[2] = uVar3;
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffffb8);
      }
      if (((-1 < in_RDI) && (in_RDI <= in_RSI)) && (in_RSI <= *(int *)(j + 8))) {
        runtime_newobject((internal_abi_Type *)&DAT_00853580,(void *)j);
        if (in_RDI < *(int *)(j + 8)) {
          iVar5 = *(int *)j;
          extraout_RAX_02[1] = in_RSI - in_RDI;
          iVar5 = iVar5 + in_RDI;
          piVar2 = extraout_RAX_02;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier1();
            *extraout_R11_01 = iVar5;
            piVar2 = extraout_RAX_03;
          }
          *piVar2 = iVar5;
        }
        return;
      }
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffb8);
    }
    pvVar4 = *(void **)j;
    iVar5 = *(int *)(j + 0x10);
  }
  if (((-1 < in_RDI) && (in_RDI <= in_RSI)) && (in_RSI <= iVar5)) {
    runtime_newobject((internal_abi_Type *)&DAT_00801de0,pvVar4);
    *extraout_RAX = (void *)0x0;
    extraout_RAX[1] = (void *)(in_RSI - in_RDI);
    extraout_RAX[2] = (void *)(iVar5 - in_RDI);
    if ((int)(void *)(iVar5 - in_RDI) < 1) {
      ppvVar1 = extraout_RAX;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_00 = pvVar4;
        extraout_R11_00[1] = *extraout_RAX_01;
        ppvVar1 = extraout_RAX_01;
      }
      *ppvVar1 = pvVar4;
    }
    else {
      pvVar4 = (void *)(in_RDI * **(int **)(i + 0x30) + (int)pvVar4);
      ppvVar1 = extraout_RAX;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = pvVar4;
        extraout_R11[1] = *extraout_RAX_00;
        ppvVar1 = extraout_RAX_00;
      }
      *ppvVar1 = pvVar4;
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffb8);
}



void reflect_Value_Slice3(reflect_Value v,int i,int j,int k,reflect_Value ~r0)

{
  reflect_sliceType *typ;
  void **extraout_RAX;
  __unsafe_Pointer *_x;
  void **extraout_RAX_00;
  void **ppvVar1;
  void **extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  uint uVar2;
  reflect_Kind kind;
  int cap;
  int iVar3;
  reflect_flag fl;
  void *pvVar4;
  int in_RSI;
  int in_RDI;
  int in_R8;
  void **extraout_R11;
  void **extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar2 = (uint)((dword)k & 0x1f);
  if (uVar2 == 0x11) {
    if (((dword)k >> 8 & 1) == 0) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffd0);
