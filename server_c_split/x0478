  int iVar1;
  char extraout_AL;
  int iVar2;
  int i;
  crypto_ecdh_PrivateKey *in_RCX;
  crypto_ecdh_PrivateKey *xx;
  char cVar3;
  undefined7 in_register_00000019;
  uint8 v;
  undefined8 in_RDI;
  undefined8 extraout_RDI;
  int unaff_R14;
  
  xx = in_RCX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  if ((undefined *)CONCAT71(in_register_00000019,~r0) != &DAT_00864fc0) {
    return;
  }
  tab = (k->curve).tab;
  if ((xx->curve).tab == tab) {
    runtime_ifaceeq(tab,(k->curve).data,(xx->curve).data,SUB81(in_RDI,0));
    cVar3 = extraout_AL;
  }
  else {
    cVar3 = '\0';
  }
  if ((cVar3 != '\0') && (iVar1 = (k->privateKey).len, (xx->privateKey).len == iVar1)) {
    for (iVar2 = 0; iVar2 < iVar1; iVar2 = iVar2 + 1) {
    }
  }
  return;
}



void crypto_ecdh___PrivateKey__Curve(crypto_ecdh_PrivateKey *k,crypto_ecdh_Curve ~r0)

{
  return;
}



void crypto_ecdh___PrivateKey__PublicKey(crypto_ecdh_PrivateKey *k,crypto_ecdh_PublicKey *~r0)

{
  int unaff_R14;
  crypto_ecdh_PrivateKey *pcStack0000000000000008;
  undefined local_18 [16];
  
  pcStack0000000000000008 = k;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_18._8_8_ = pcStack0000000000000008;
  local_18._0_8_ = crypto_ecdh___PrivateKey__PublicKey_func1;
  if ((pcStack0000000000000008->publicKeyOnce).done == 0) {
    sync___Once__doSlow(&pcStack0000000000000008->publicKeyOnce,(func__ **)local_18);
  }
  return;
}



// WARNING: Unknown calling convention

void crypto_ecdh___PrivateKey__PublicKey_func1(void)

{
  int *piVar1;
  int iVar2;
  int extraout_RAX;
  int in_RDX;
  crypto_ecdh_PrivateKey *k;
  int *extraout_R11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(in_RDX + 8);
  if (piVar1[5] != 0) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe0);
  }
  iVar2 = (**(code **)(*piVar1 + 0x38))(piVar1[1]);
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX;
    extraout_R11[1] = piVar1[6];
    iVar2 = extraout_RAX;
  }
  piVar1[6] = iVar2;
  return;
}



void crypto_ecdh___PrivateKey__Public(crypto_ecdh_PrivateKey *k,crypto_PublicKey ~r0)

{
  crypto_ecdh_PublicKey *in_RBX;
  crypto_ecdh_PublicKey *extraout_RBX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  crypto_ecdh___PrivateKey__PublicKey(k,in_RBX);
  return;
}



void crypto_ecdh_isLess(__uint8 a,__uint8 b,bool ~r0)

{
  undefined uVar1;
  undefined7 in_register_00000001;
  int iVar2;
  int i_1;
  int i;
  uint64 borrow;
  uint in_RBX;
  uint in_RSI;
  int in_RDI;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_ffffffffffffff58;
  undefined8 local_98;
  undefined8 uStack_90;
  undefined8 uStack_88;
  undefined8 local_50;
  undefined8 uStack_48;
  undefined8 uStack_40;
  undefined local_28 [32];
  
  while (local_28 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RSI == in_RBX) {
    if (0x48 < (int)in_RBX) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff58);
    }
    local_50 = in_XMM15._0_8_;
    uStack_40 = in_XMM15._8_8_;
    i = 0;
    local_98 = local_50;
    uStack_90 = local_50;
    uStack_88 = uStack_40;
    uStack_48 = local_50;
    while( true ) {
      if ((int)in_RBX <= i) {
        iVar2 = 0;
        while( true ) {
          if (0x47 < iVar2) {
            return;
          }
          if ((uint)-(iVar2 + -0x48) < 7 || iVar2 + -0x48 == -7) break;
          iVar2 = iVar2 + 8;
        }
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if (in_RSI <= (in_RSI - i) - 1) break;
      uVar1 = *(undefined *)(in_RDI + -1 + (in_RSI - i));
      if (in_RBX <= (in_RBX - i) - 1) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      *(undefined *)((int)&local_50 + i) =
           *(undefined *)(CONCAT71(in_register_00000001,~r0) + -1 + (in_RBX - i));
      *(undefined *)((int)&local_98 + i) = uVar1;
      i = i + 1;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffff58);
}



void crypto_ecdh___x25519Curve__String(crypto_ecdh_x25519Curve *c,string ~r0)

{
  return;
}



void crypto_ecdh___x25519Curve__GenerateKey
               (crypto_ecdh_x25519Curve *c,io_Reader rand,crypto_ecdh_PrivateKey *~r0,error ~r1)

{
  runtime_slice ~r0_00;
  __uint8 buf;
  error err;
  void *__src;
  uintptr *__dest;
  uintptr *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_03;
  int in_RCX;
  undefined8 uVar2;
  undefined8 extraout_RCX;
  int extraout_RBX;
  undefined8 uVar3;
  undefined8 extraout_RBX_00;
  void *~r0_01;
  void *in_RDI;
  void *extraout_RDI;
  crypto_ecdh_x25519Curve **extraout_R11;
  uintptr **extraout_R11_00;
  int unaff_R14;
  io_Reader in_stack_ffffffffffffffa0;
  uint8 *in_stack_ffffffffffffffb0;
  undefined in_stack_ffffffffffffffb8 [16];
  runtime_itab *in_stack_ffffffffffffffc8;
  void *__n;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  runtime_makeslice((internal_abi_Type *)&DAT_00807920,crypto_ecdh_x25519PrivateKeySize,
                    crypto_ecdh_x25519PrivateKeySize,in_RDI);
  __n = (void *)crypto_ecdh_x25519PrivateKeySize;
  crypto_internal_randutil_MaybeReadByte(in_stack_ffffffffffffffa0);
  buf.len = in_stack_ffffffffffffffb8._0_8_;
  buf.cap = in_stack_ffffffffffffffb8._8_8_;
  buf.array = in_stack_ffffffffffffffb0;
  err.data = __n;
  err.tab = in_stack_ffffffffffffffc8;
  io_ReadAtLeast(in_stack_ffffffffffffffa0,buf,(int)~r0,in_RCX,err);
  if (extraout_RBX != 0) {
    return;
  }
  if ((void *)crypto_ecdh_x25519PrivateKeySize == __n) {
    if (__n == (void *)0x0) {
      __dest = &runtime_zerobase;
      uVar2 = 0;
      uVar3 = 0;
    }
    else {
      ~r0_00.cap = (int)in_stack_ffffffffffffffb0;
      ~r0_00.array = in_stack_ffffffffffffffa0.tab;
      ~r0_00.len = (int)in_stack_ffffffffffffffa0.data;
      runtime_growslice(&runtime_zerobase,(int)__n,0,(int)__n,(internal_abi_Type *)&DAT_00807920,
                        ~r0_00);
      __dest = extraout_RAX;
      uVar2 = extraout_RCX;
      uVar3 = extraout_RBX_00;
    }
    runtime_memmove(__dest,__src,(size_t)__n);
    runtime_newobject((internal_abi_Type *)&DAT_00881ee0,~r0_01);
    *extraout_RAX_00 = go_itab__crypto_ecdh_x25519Curve_crypto_ecdh_Curve;
    puVar1 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = c;
      puVar1 = extraout_RAX_01;
    }
    puVar1[1] = c;
    puVar1[3] = uVar3;
    puVar1[4] = uVar2;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = __dest;
      puVar1 = extraout_RAX_02;
    }
    puVar1[2] = __dest;
  }
  else {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,(void *)0x0);
    extraout_RAX_03[1] = 0x25;
    *extraout_RAX_03 = &DAT_008c347a;
  }
  return;
}



void crypto_ecdh___x25519Curve__NewPrivateKey
               (crypto_ecdh_x25519Curve *c,__uint8 key,crypto_ecdh_PrivateKey *~r0,error ~r1)

{
  uintptr *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_03;
  size_t in_RCX;
  undefined8 extraout_RCX;
  uintptr *__dest;
  undefined8 extraout_RBX;
  void *~r0_00;
  undefined8 uVar2;
  undefined8 uVar3;
  crypto_ecdh_x25519Curve **extraout_R11;
  uintptr **extraout_R11_00;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (crypto_ecdh_x25519PrivateKeySize != in_RCX) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0);
    extraout_RAX_03[1] = 0x25;
    *extraout_RAX_03 = &DAT_008c347a;
    return;
  }
  if (in_RCX == 0) {
    __dest = &runtime_zerobase;
    uVar2 = 0;
    uVar3 = 0;
  }
  else {
    runtime_growslice(&runtime_zerobase,in_RCX,0,in_RCX,(internal_abi_Type *)&DAT_00807920,
                      in_stack_ffffffffffffffb8);
    __dest = extraout_RAX;
    uVar2 = extraout_RCX;
    uVar3 = extraout_RBX;
  }
  runtime_memmove(__dest,~r0,in_RCX);
  runtime_newobject((internal_abi_Type *)&DAT_00881ee0,~r0_00);
  *extraout_RAX_00 = go_itab__crypto_ecdh_x25519Curve_crypto_ecdh_Curve;
  puVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = c;
    puVar1 = extraout_RAX_01;
  }
  puVar1[1] = c;
  puVar1[3] = uVar3;
  puVar1[4] = uVar2;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = __dest;
    puVar1 = extraout_RAX_02;
  }
  puVar1[2] = __dest;
  return;
}



void crypto_ecdh___x25519Curve__privateKeyToPublicKey
               (crypto_ecdh_x25519Curve *c,crypto_ecdh_PrivateKey *key,crypto_ecdh_PublicKey *~r0)

{
  __uint8 dst;
  int iVar1;
  char extraout_AL;
  runtime_itab *extraout_RAX;
  runtime_itab **extraout_RAX_00;
  crypto_ecdh_PublicKey *k;
  runtime_itab **extraout_RAX_01;
  runtime_itab **extraout_RAX_02;
  runtime_itab **pprVar2;
  void *~r0_00;
  undefined8 in_RDI;
  void *~r0_01;
  runtime_itab *extraout_RDI;
  runtime_itab *prVar3;
  undefined8 extraout_RDI_00;
  runtime_itab **extraout_R11;
  runtime_itab **extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff78;
  int in_stack_ffffffffffffff88;
  __uint8 in_stack_ffffffffffffff90;
  __uint8 in_stack_ffffffffffffffa8;
  
  while (&stack0xfffffffffffffff8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI_00;
  }
  if (((key->curve).tab == (runtime_itab *)go_itab__crypto_ecdh_x25519Curve_crypto_ecdh_Curve) &&
     (runtime_ifaceeq((runtime_itab *)go_itab__crypto_ecdh_x25519Curve_crypto_ecdh_Curve,
                      (key->curve).data,c,SUB81(in_RDI,0)), extraout_AL != '\0')) {
    runtime_makeslice((internal_abi_Type *)&DAT_00807920,crypto_ecdh_x25519PublicKeySize,
                      crypto_ecdh_x25519PublicKeySize,~r0_01);
    iVar1 = crypto_ecdh_x25519PublicKeySize;
    runtime_newobject((internal_abi_Type *)&DAT_00864f00,~r0_00);
    prVar3 = (runtime_itab *)(key->curve).data;
    *extraout_RAX_00 = (key->curve).tab;
    pprVar2 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = extraout_RDI;
      pprVar2 = extraout_RAX_01;
      prVar3 = extraout_RDI;
    }
    pprVar2[1] = prVar3;
    pprVar2[3] = (runtime_itab *)iVar1;
    pprVar2[4] = (runtime_itab *)iVar1;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = extraout_RAX;
      pprVar2 = extraout_RAX_02;
    }
    pprVar2[2] = extraout_RAX;
    dst.cap = in_stack_ffffffffffffff88;
    dst.array = (uint8 *)in_stack_ffffffffffffff78._type;
    dst.len = (int)in_stack_ffffffffffffff78.data;
    crypto_ecdh_x25519ScalarMult(dst,in_stack_ffffffffffffff90,in_stack_ffffffffffffffa8);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffff78);
}



void crypto_ecdh___x25519Curve__NewPublicKey
               (crypto_ecdh_x25519Curve *c,__uint8 key,crypto_ecdh_PublicKey *~r0,error ~r1)

{
  uintptr *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_03;
  size_t in_RCX;
  undefined8 extraout_RCX;
  uintptr *__dest;
  undefined8 extraout_RBX;
  void *~r0_00;
  undefined8 uVar2;
  undefined8 uVar3;
  crypto_ecdh_x25519Curve **extraout_R11;
  uintptr **extraout_R11_00;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (crypto_ecdh_x25519PublicKeySize != in_RCX) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0);
    extraout_RAX_03[1] = 0x1f;
    *extraout_RAX_03 = &DAT_008bfbf8;
    return;
  }
  if (in_RCX == 0) {
    __dest = &runtime_zerobase;
    uVar2 = 0;
    uVar3 = 0;
  }
  else {
    runtime_growslice(&runtime_zerobase,in_RCX,0,in_RCX,(internal_abi_Type *)&DAT_00807920,
                      in_stack_ffffffffffffffb8);
    __dest = extraout_RAX;
    uVar2 = extraout_RCX;
    uVar3 = extraout_RBX;
  }
  runtime_memmove(__dest,~r0,in_RCX);
  runtime_newobject((internal_abi_Type *)&DAT_00864f00,~r0_00);
  *extraout_RAX_00 = go_itab__crypto_ecdh_x25519Curve_crypto_ecdh_Curve;
  puVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = c;
    puVar1 = extraout_RAX_01;
  }
  puVar1[1] = c;
  puVar1[3] = uVar3;
  puVar1[4] = uVar2;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = __dest;
    puVar1 = extraout_RAX_02;
  }
  puVar1[2] = __dest;
  return;
}



EC_KEY * crypto_ecdh___x25519Curve__ecdh(SSL *ssl,int is_export,int keylength)

{
  int iVar1;
  uint8 acc;
  EC_KEY *extraout_RAX;
  int iVar2;
  undefined8 *extraout_RAX_00;
  void *~r0;
  void *in_RDI;
  void *extraout_RDI;
  uint8 b;
  int unaff_R14;
  int iStack0000000000000010;
  int iStack0000000000000018;
  __uint8 in_stack_ffffffffffffffa0;
  __uint8 in_stack_ffffffffffffffb8;
  __uint8 in_stack_ffffffffffffffd0;
  
  iStack0000000000000018 = keylength;
  iStack0000000000000010 = is_export;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  runtime_makeslice((internal_abi_Type *)&DAT_00807920,crypto_ecdh_x25519SharedSecretSize,
                    crypto_ecdh_x25519SharedSecretSize,in_RDI);
  iVar1 = crypto_ecdh_x25519SharedSecretSize;
  crypto_ecdh_x25519ScalarMult
            (in_stack_ffffffffffffffa0,in_stack_ffffffffffffffb8,in_stack_ffffffffffffffd0);
  acc = 0;
  for (iVar2 = 0; iVar2 < iVar1; iVar2 = iVar2 + 1) {
    acc = acc | (byte)extraout_RAX[iVar2];
  }
  if (acc == 0) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0);
    extraout_RAX_00[1] = 0x3a;
    *extraout_RAX_00 = &DAT_008caccd;
    return (EC_KEY *)0x0;
  }
  return extraout_RAX;
}



void crypto_ecdh_x25519ScalarMult(__uint8 dst,__uint8 scalar,__uint8 point)

{
  undefined auVar1 [16];
  undefined auVar2 [16];
  undefined auVar3 [16];
  __uint8 x;
  __uint8 ~r0;
  error ~r1;
  void *in_RAX;
  int iVar4;
  void *__src;
  size_t __n;
  crypto_internal_edwards25519_field_Element *~r0_00;
  uint8 b;
  size_t in_RBX;
  uint uVar6;
  int swap;
  size_t extraout_RBX;
  size_t in_RSI;
  undefined *in_RDI;
  crypto_internal_edwards25519_field_Element *~r0_01;
  crypto_internal_edwards25519_field_Element *~r0_02;
  crypto_internal_edwards25519_field_Element *~r0_03;
  crypto_internal_edwards25519_field_Element *~r0_04;
  crypto_internal_edwards25519_field_Element *~r0_05;
  crypto_internal_edwards25519_field_Element *~r0_06;
  crypto_internal_edwards25519_field_Element *~r0_07;
  crypto_internal_edwards25519_field_Element *~r0_08;
  crypto_internal_edwards25519_field_Element *~r0_09;
  crypto_internal_edwards25519_field_Element *in_R9;
  int unaff_R14;
  undefined4 in_XMM15_Da;
  undefined4 in_XMM15_Db;
  undefined4 in_XMM15_Dc;
  undefined4 in_XMM15_Dd;
  undefined8 in_stack_fffffffffffffe68;
  undefined *puVar7;
  undefined8 in_stack_fffffffffffffe70;
  undefined *puVar8;
  int in_stack_fffffffffffffe78;
  crypto_internal_edwards25519_field_Element *pcVar9;
  runtime_itab *in_stack_fffffffffffffe80;
  void *in_stack_fffffffffffffe88;
  int pos;
  undefined local_160 [16];
  undefined local_150 [16];
  undefined local_140 [16];
  undefined local_130 [16];
  undefined local_120 [8];
  undefined4 uStack_118;
  undefined4 uStack_114;
  undefined4 uStack_110;
  undefined4 uStack_10c;
  undefined local_108 [16];
  crypto_internal_edwards25519_field_Element local_f8;
  undefined local_d0 [12];
  undefined4 uStack_c4;
  undefined4 uStack_c0;
  undefined4 uStack_bc;
  undefined local_a8 [12];
  undefined4 uStack_9c;
  undefined4 uStack_98;
  undefined4 uStack_94;
  undefined local_90 [16];
  undefined local_80 [12];
  undefined4 uStack_74;
  undefined4 uStack_70;
  undefined4 uStack_6c;
  crypto_internal_edwards25519_field_Element local_58;
  crypto_internal_edwards25519_field_Element local_30;
  uint uVar5;
  
  while (&uStack_118 <= *(undefined4 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_140._4_4_ = in_XMM15_Db;
  local_140._0_4_ = in_XMM15_Da;
  local_140._8_4_ = in_XMM15_Dc;
  local_140._12_4_ = in_XMM15_Dd;
  local_130._4_4_ = in_XMM15_Db;
  local_130._0_4_ = in_XMM15_Da;
  local_130._8_4_ = in_XMM15_Dc;
  local_130._12_4_ = in_XMM15_Dd;
  __n = 0x20;
  if ((int)in_RSI < 0x20) {
    __n = in_RSI;
  }
  if (in_RDI != local_140) {
    runtime_memmove(local_140,in_RDI,__n);
  }
  local_140[0] = local_140[0] & 0xf8;
  local_130[15] = local_130[15] & 0x7f | 0x40;
  local_80._0_8_ = CONCAT44(in_XMM15_Db,in_XMM15_Da);
  auVar1._4_4_ = in_XMM15_Db;
  auVar1._0_4_ = in_XMM15_Da;
  auVar1._8_4_ = in_XMM15_Dc;
  auVar1._12_4_ = in_XMM15_Dd;
  local_f8.l2 = auVar1._8_8_;
  auVar2._4_4_ = in_XMM15_Db;
  auVar2._0_4_ = in_XMM15_Da;
  auVar2._8_4_ = in_XMM15_Dc;
  auVar2._12_4_ = in_XMM15_Dd;
  local_30.l2 = auVar2._8_8_;
  auVar3._4_4_ = in_XMM15_Db;
  auVar3._0_4_ = in_XMM15_Da;
  auVar3._8_4_ = in_XMM15_Dc;
  auVar3._12_4_ = in_XMM15_Dd;
  local_58.l2 = auVar3._8_8_;
  x.len = in_stack_fffffffffffffe70;
  x.array = (uint8 *)in_stack_fffffffffffffe68;
  x.cap = in_stack_fffffffffffffe78;
  ~r1.data = in_stack_fffffffffffffe88;
  ~r1.tab = in_stack_fffffffffffffe80;
  local_80._8_4_ = in_XMM15_Da;
  uStack_74 = in_XMM15_Db;
  uStack_70 = in_XMM15_Dc;
  uStack_6c = in_XMM15_Dd;
  crypto_internal_edwards25519_field___Element__SetBytes
            ((crypto_internal_edwards25519_field_Element *)local_80,x,in_R9,~r1);
  local_a8._0_8_ = crypto_internal_edwards25519_field_feOne->l0;
  local_a8._8_4_ = *(undefined4 *)&crypto_internal_edwards25519_field_feOne->l1;
  uStack_9c = *(undefined4 *)((int)&crypto_internal_edwards25519_field_feOne->l1 + 4);
  uStack_98 = *(undefined4 *)&crypto_internal_edwards25519_field_feOne->l2;
  uStack_94 = *(undefined4 *)((int)&crypto_internal_edwards25519_field_feOne->l2 + 4);
  local_90._0_8_ = crypto_internal_edwards25519_field_feOne->l3;
  local_90._8_8_ = crypto_internal_edwards25519_field_feOne->l4;
  local_d0._0_8_ = local_80._0_8_;
  local_d0._8_4_ = local_80._8_4_;
  uStack_c4 = uStack_74;
  uStack_c0 = uStack_70;
  uStack_bc = uStack_6c;
  local_120 = (undefined  [8])crypto_internal_edwards25519_field_feOne->l0;
  uStack_118 = *(undefined4 *)&crypto_internal_edwards25519_field_feOne->l1;
  uStack_114 = *(undefined4 *)((int)&crypto_internal_edwards25519_field_feOne->l1 + 4);
  uStack_110 = *(undefined4 *)&crypto_internal_edwards25519_field_feOne->l2;
  uStack_10c = *(undefined4 *)((int)&crypto_internal_edwards25519_field_feOne->l2 + 4);
  local_108._0_8_ = crypto_internal_edwards25519_field_feOne->l3;
  local_108._8_8_ = crypto_internal_edwards25519_field_feOne->l4;
  iVar4 = 0xfe;
  uVar6 = 0;
  while( true ) {
    if (iVar4 < 0) {
      crypto_internal_edwards25519_field___Element__Swap
                ((crypto_internal_edwards25519_field_Element *)local_a8,
                 (crypto_internal_edwards25519_field_Element *)local_d0,uVar6);
      crypto_internal_edwards25519_field___Element__Swap
                (&local_f8,(crypto_internal_edwards25519_field_Element *)local_120,uVar6);
      crypto_internal_edwards25519_field___Element__Invert(&local_f8,&local_f8,~r0_00);
      puVar7 = local_a8;
      pcVar9 = &local_f8;
      puVar8 = puVar7;
      crypto_internal_edwards25519_field_feMul();
      local_160 = ZEXT816(0);
      local_150 = ZEXT816(0);
      ~r0.len = (int)puVar8;
      ~r0.array = puVar7;
      ~r0.cap = (int)pcVar9;
      crypto_internal_edwards25519_field___Element__bytes
                ((crypto_internal_edwards25519_field_Element *)local_a8,(uint8 (*) [32])local_160,
                 ~r0);
      if ((int)extraout_RBX < (int)in_RBX) {
        in_RBX = extraout_RBX;
      }
      if (__src != in_RAX) {
        runtime_memmove(in_RAX,__src,in_RBX);
      }
      return;
    }
    if (0x1f < (uint)(iVar4 >> 3)) break;
    uVar5 = (uint)((byte)local_140[iVar4 >> 3] >> ((byte)iVar4 & 7) & 1);
    uVar6 = uVar6 ^ uVar5;
    crypto_internal_edwards25519_field___Element__Swap
              ((crypto_internal_edwards25519_field_Element *)local_a8,
               (crypto_internal_edwards25519_field_Element *)local_d0,uVar6);
    crypto_internal_edwards25519_field___Element__Swap
              (&local_f8,(crypto_internal_edwards25519_field_Element *)local_120,uVar6);
    crypto_internal_edwards25519_field___Element__Subtract
              (&local_30,(crypto_internal_edwards25519_field_Element *)local_d0,
               (crypto_internal_edwards25519_field_Element *)local_120,~r0_01);
    crypto_internal_edwards25519_field___Element__Subtract
              (&local_58,(crypto_internal_edwards25519_field_Element *)local_a8,&local_f8,~r0_02);
    crypto_internal_edwards25519_field___Element__Add
              ((crypto_internal_edwards25519_field_Element *)local_a8,
               (crypto_internal_edwards25519_field_Element *)local_a8,&local_f8,~r0_03);
    crypto_internal_edwards25519_field___Element__Add
              (&local_f8,(crypto_internal_edwards25519_field_Element *)local_d0,
               (crypto_internal_edwards25519_field_Element *)local_120,~r0_04);
    iVar4 = iVar4 + -1;
    crypto_internal_edwards25519_field_feMul();
    crypto_internal_edwards25519_field_feMul();
    crypto_internal_edwards25519_field_feSquare();
    crypto_internal_edwards25519_field_feSquare();
    crypto_internal_edwards25519_field___Element__Add
              ((crypto_internal_edwards25519_field_Element *)local_d0,
               (crypto_internal_edwards25519_field_Element *)local_120,&local_f8,~r0_05);
    crypto_internal_edwards25519_field___Element__Subtract
              (&local_f8,(crypto_internal_edwards25519_field_Element *)local_120,&local_f8,~r0_06);
    crypto_internal_edwards25519_field_feMul();
    crypto_internal_edwards25519_field___Element__Subtract(&local_58,&local_58,&local_30,~r0_07);
    crypto_internal_edwards25519_field_feSquare();
    crypto_internal_edwards25519_field___Element__Mult32
              ((crypto_internal_edwards25519_field_Element *)local_120,&local_58,0x1db42,~r0_08);
    crypto_internal_edwards25519_field_feSquare();
    crypto_internal_edwards25519_field___Element__Add
              (&local_30,&local_30,(crypto_internal_edwards25519_field_Element *)local_120,~r0_09);
    crypto_internal_edwards25519_field_feMul();
    crypto_internal_edwards25519_field_feMul();
    uVar6 = uVar5;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



EC_KEY * crypto_ecdh___nistCurve_go_shape__uint8___ecdh(SSL *ssl,int is_export,int keylength)

{
  undefined8 uVar1;
  _param13 p;
  EC_KEY *pEVar2;
  int extraout_RBX;
  int in_RDI;
  int unaff_R14;
  undefined auVar3 [16];
  SSL *pSStack0000000000000008;
  int iStack0000000000000010;
  int iStack0000000000000018;
  int iStack0000000000000020;
  
  pSStack0000000000000008 = ssl;
  iStack0000000000000018 = keylength;
  iStack0000000000000010 = is_export;
  iStack0000000000000020 = in_RDI;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  crypto_internal_boring_sig_StandardCrypto();
  uVar1 = (*(code *)pSStack0000000000000008->method->version)();
  auVar3 = (**(code **)(iStack0000000000000010 + 0x10))
                     (uVar1,*(undefined8 *)(iStack0000000000000020 + 0x10),
                      *(undefined8 *)(iStack0000000000000020 + 0x18),
                      *(undefined8 *)(iStack0000000000000020 + 0x20));
  uVar1 = auVar3._0_8_;
  if (auVar3._8_8_ == 0) {
    (**(code **)(iStack0000000000000010 + 0x18))
              (uVar1,uVar1,*(undefined8 *)(iStack0000000000000018 + 0x10),
               *(undefined8 *)(iStack0000000000000018 + 0x18),
               *(undefined8 *)(iStack0000000000000018 + 0x20),iStack0000000000000010 + 0x18);
    if (extraout_RBX != 0) {
      return (EC_KEY *)0x0;
    }
    pEVar2 = (EC_KEY *)
             (**(code **)(iStack0000000000000010 + 0x20))
                       (uVar1,*(code **)(iStack0000000000000010 + 0x20),
                        iStack0000000000000010 + 0x20);
    return pEVar2;
  }
  return (EC_KEY *)0x0;
}



void crypto_ecdh___nistCurve_go_shape__uint8___NewPublicKey
               (_param11 c,__uint8 key,crypto_ecdh_PublicKey *~r0,error ~r1)

{
  undefined8 *extraout_RAX;
  crypto_internal_boring_PublicKeyECDH *__dest;
  crypto_internal_boring_PublicKeyECDH **extraout_RAX_00;
  crypto_ecdh_PublicKey *k;
  crypto_internal_boring_PublicKeyECDH **extraout_RAX_01;
  crypto_internal_boring_PublicKeyECDH **extraout_RAX_02;
  crypto_internal_boring_PublicKeyECDH **ppcVar1;
  undefined8 uVar2;
  char *in_RCX;
  crypto_internal_boring_PublicKeyECDH *extraout_RCX;
  _param11 extraout_RCX_00;
  crypto_internal_boring_PublicKeyECDH *extraout_RBX;
  void *~r0_00;
  int extraout_RBX_00;
  undefined8 in_RSI;
  size_t in_RDI;
  _param11 *extraout_R11;
  crypto_internal_boring_PublicKeyECDH **extraout_R11_00;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffffb0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_RDI == 0) || (*in_RCX != '\x04')) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0);
    extraout_RAX[1] = 0x1f;
    *extraout_RAX = &DAT_008bfbf8;
    return;
  }
  runtime_growslice(&runtime_zerobase,in_RDI,0,in_RDI,(internal_abi_Type *)&DAT_00807920,
                    in_stack_ffffffffffffffb0);
  runtime_memmove(__dest,in_RCX,in_RDI);
  runtime_newobject((internal_abi_Type *)&DAT_00864f00,~r0_00);
  *extraout_RAX_00 = ~r0[2].boring;
  ppcVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = c;
    ppcVar1 = extraout_RAX_01;
  }
  ppcVar1[1] = (crypto_internal_boring_PublicKeyECDH *)c;
  ppcVar1[3] = extraout_RBX;
  ppcVar1[4] = extraout_RCX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = __dest;
    ppcVar1 = extraout_RAX_02;
    c = extraout_RCX_00;
  }
  ppcVar1[2] = __dest;
  uVar2 = (**c->newPoint)((go_shape__uint8 *)ppcVar1);
  (*(code *)(~r0->publicKey).array)(uVar2,in_RCX,in_RDI,in_RSI);
  if (extraout_RBX_00 == 0) {
    return;
  }
  return;
}



void crypto_ecdh___nistCurve_go_shape__uint8___privateKeyToPublicKey
               (_param9 c,crypto_ecdh_PrivateKey *key,crypto_ecdh_PublicKey *~r0)

{
  code *pcVar1;
  char extraout_AL;
  undefined8 uVar2;
  _param10 p;
  runtime_itab *extraout_RAX;
  runtime_itab **extraout_RAX_00;
  runtime_itab **extraout_RAX_01;
  runtime_itab **extraout_RAX_02;
  runtime_itab **pprVar3;
  runtime_itab *extraout_RCX;
  runtime_itab *extraout_RCX_00;
  runtime_itab *prVar4;
  runtime_itab *~r0_00;
  bool ~r0_01;
  runtime_itab **extraout_R11;
  runtime_itab **extraout_R11_00;
  int unaff_R14;
  undefined auVar5 [16];
  _param9 pcStack0000000000000008;
  crypto_ecdh_PrivateKey *pcStack0000000000000010;
  crypto_ecdh_PublicKey *pcStack0000000000000018;
  interface___ in_stack_ffffffffffffffc0;
  
  pcStack0000000000000008 = c;
  pcStack0000000000000018 = ~r0;
  pcStack0000000000000010 = key;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  crypto_internal_boring_sig_StandardCrypto();
  prVar4 = (pcStack0000000000000018->curve).tab;
  if ((*(runtime_itab **)&pcStack0000000000000010[1].publicKeyOnce != prVar4) ||
     (runtime_ifaceeq(prVar4,(pcStack0000000000000018->curve).data,pcStack0000000000000008,~r0_01),
     extraout_AL == '\0')) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffc0);
  }
  uVar2 = (**pcStack0000000000000008->newPoint)
                    ((go_shape__uint8 *)*pcStack0000000000000008->newPoint);
  auVar5 = (*(code *)(pcStack0000000000000010->curve).tab)
                     (uVar2,(pcStack0000000000000018->publicKey).array,
                      (pcStack0000000000000018->publicKey).len,
                      (pcStack0000000000000018->publicKey).cap);
  if (auVar5._8_8_ != 0) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffc0);
  }
  pcVar1 = (code *)(pcStack0000000000000010->curve).data;
  (*pcVar1)(auVar5._0_8_,pcVar1,&(pcStack0000000000000010->curve).data);
  if (~r0_00 == (runtime_itab *)&DAT_00000001) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffc0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00864f00,~r0_00);
  prVar4 = (runtime_itab *)(pcStack0000000000000018->curve).data;
  *extraout_RAX_00 = (pcStack0000000000000018->curve).tab;
  pprVar3 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RCX_00;
    pprVar3 = extraout_RAX_01;
    prVar4 = extraout_RCX_00;
  }
  pprVar3[1] = prVar4;
  pprVar3[3] = ~r0_00;
  pprVar3[4] = extraout_RCX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = extraout_RAX;
    pprVar3 = extraout_RAX_02;
  }
  pprVar3[2] = extraout_RAX;
  return;
}



void crypto_ecdh___nistCurve_go_shape__uint8___NewPrivateKey
               (_param8 c,__uint8 key,crypto_ecdh_PrivateKey *~r0,error ~r1)

{
  char extraout_AL;
  undefined8 *extraout_RAX;
  uintptr *__dest;
  crypto_ecdh_PublicKey *extraout_RAX_00;
  crypto_ecdh_PublicKey **extraout_RAX_01;
  crypto_ecdh_PrivateKey *k;
  crypto_ecdh_PublicKey **extraout_RAX_02;
  crypto_ecdh_PublicKey **extraout_RAX_03;
  crypto_ecdh_PublicKey **ppcVar1;
  void *in_RCX;
  crypto_ecdh_PublicKey *pcVar2;
  crypto_ecdh_PublicKey *extraout_RCX;
  crypto_ecdh_PublicKey *pcVar3;
  crypto_ecdh_PublicKey *extraout_RBX;
  void *~r0_00;
  size_t in_RDI;
  int iVar4;
  uint8 acc;
  uint8 b;
  _param8 *extraout_R11;
  crypto_ecdh_PublicKey **extraout_R11_00;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffffb0;
  __uint8 in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RDI != (c->scalarOrder).len) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0);
    extraout_RAX[1] = 0x25;
    *extraout_RAX = &DAT_008c347a;
    return;
  }
  acc = 0;
  for (iVar4 = 0; iVar4 < (int)in_RDI; iVar4 = iVar4 + 1) {
    acc = acc | *(byte *)((int)in_RCX + iVar4);
  }
  if ((acc != 0) &&
     (crypto_ecdh_isLess(in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc8,SUB81(in_RCX,0)),
     extraout_AL != '\0')) {
    if (in_RDI == 0) {
      __dest = &runtime_zerobase;
      pcVar2 = (crypto_ecdh_PublicKey *)0x0;
      pcVar3 = (crypto_ecdh_PublicKey *)0x0;
    }
    else {
      runtime_growslice(&runtime_zerobase,in_RDI,0,in_RDI,(internal_abi_Type *)&DAT_00807920,
