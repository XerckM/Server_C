  int extraout_RAX;
  undefined *in_RBX;
  int unaff_R14;
  runtime_eface in_stack_ffffffffffffffc0;
  runtime_iface in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RBX != (undefined *)0x0) {
    dVar1 = *(dword *)(in_RBX + 0x10);
    if (dVar1 < 0x5eb9273e) {
      if (dVar1 == 0x1712e740) {
        if (in_RBX == &DAT_0080f280) {
          return;
        }
      }
      else if ((dVar1 == 0x5eb9273d) && (in_RBX == &DAT_0080f2e0)) {
        return;
      }
    }
    else if (dVar1 == 0x7f949a56) {
      if (in_RBX == &DAT_0081e5e0) {
        return;
      }
    }
    else if ((dVar1 == 0xfc24222d) && (in_RBX == &DAT_0080f340)) {
      return;
    }
    runtime_assertE2I2((internal_abi_InterfaceType *)&DAT_00834fc0,in_stack_ffffffffffffffc0,
                       in_stack_ffffffffffffffd0);
    if (extraout_RAX != 0) {
      return;
    }
    if ((dVar1 == 0xdf1d1ebd) && (in_RBX == &DAT_00807160)) {
      return;
    }
  }
  return;
}



void log_slog_TimeValue(time_Time v,log_slog_Value ~r0)

{
  uint in_RAX;
  time_Location *l;
  int in_RBX;
  
  if ((int)in_RAX < 0) {
    in_RBX = ((in_RAX << 1) >> 0x1f) + 0xdd7b17f80;
  }
  if ((in_RBX == 0) && ((in_RAX & 0x3fffffff) == 0)) {
    return;
  }
  return;
}



void log_slog_GroupValue(__log_slog_Attr as,log_slog_Value ~r0)

{
  dword dVar1;
  undefined auVar2 [16];
  undefined auVar3 [16];
  runtime_slice ~r0_00;
  runtime_iface r;
  runtime_iface r_00;
  internal_abi_Type *in_RAX;
  int extraout_RAX;
  internal_abi_Type *piVar4;
  void *extraout_RAX_00;
  int extraout_RAX_01;
  void *extraout_RAX_02;
  int iVar5;
  uint uVar6;
  uint extraout_RCX;
  int in_RBX;
  uint extraout_RBX;
  int n_1;
  int n;
  internal_abi_Type *in_RDI;
  uint uVar7;
  internal_abi_Type *extraout_RDI;
  int *piVar8;
  uint uVar9;
  int iVar10;
  log_slog_Kind x;
  log_slog_Kind x_1;
  int unaff_R14;
  runtime_eface in_stack_fffffffffffffef0;
  runtime_itab *in_stack_ffffffffffffff00;
  void *in_stack_ffffffffffffff08;
  int local_90;
  uint local_88;
  uint local_80;
  void *local_78;
  int *local_70;
  internal_abi_Type *local_68;
  void *local_60;
  log_slog_Attr a_1;
  log_slog_Attr a;
  
  while (&local_90 <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  n = 0;
  piVar4 = in_RAX;
  for (iVar5 = 0; iVar5 < in_RBX; iVar5 = iVar5 + 1) {
    a_1.Key.str = (uint8 *)piVar4->Size_;
    a_1.Key.len._0_4_ = *(undefined4 *)&piVar4->PtrBytes;
    a_1.Key.len._4_4_ = *(undefined4 *)((int)&piVar4->PtrBytes + 4);
    a_1.Value.num._0_4_ = piVar4->Hash;
    a_1.Value.num._4_1_ = piVar4->TFlag;
    a_1.Value.num._5_1_ = piVar4->Align_;
    a_1.Value.num._6_1_ = piVar4->FieldAlign_;
    a_1.Value.num._7_1_ = piVar4->Kind_;
    uVar6._0_4_ = piVar4->Hash;
    uVar6._4_1_ = piVar4->TFlag;
    uVar6._5_1_ = piVar4->Align_;
    uVar6._6_1_ = piVar4->FieldAlign_;
    uVar6._7_1_ = piVar4->Kind_;
    a_1.Value.any._type._0_4_ = *(undefined4 *)&piVar4->Equal;
    a_1.Value.any._type._4_4_ = *(undefined4 *)((int)&piVar4->Equal + 4);
    in_RDI = (internal_abi_Type *)piVar4->Equal;
    a_1.Value.any.data._0_4_ = *(undefined4 *)&piVar4->GCData;
    a_1.Value.any.data._4_4_ = *(undefined4 *)((int)&piVar4->GCData + 4);
    piVar8 = (int *)piVar4->GCData;
    if (in_RDI == (internal_abi_Type *)0x0) {
LAB_007c684d:
      iVar10 = 0;
    }
    else {
      dVar1 = in_RDI->Hash;
      local_90 = iVar5;
      local_68 = piVar4;
      if (dVar1 < 0x5eb9273e) {
        if (dVar1 == 0x1712e740) {
          if (in_RDI == (internal_abi_Type *)&DAT_0080f280) {
            iVar10 = 8;
          }
          else {
LAB_007c673e:
            r.data = in_stack_ffffffffffffff08;
            r.tab = in_stack_ffffffffffffff00;
            local_70 = piVar8;
            runtime_assertE2I2((internal_abi_InterfaceType *)&DAT_00834fc0,in_stack_fffffffffffffef0
                               ,r);
            piVar4 = local_68;
            iVar5 = local_90;
            piVar8 = local_70;
            if (extraout_RAX == 0) {
              if ((dVar1 != 0xdf1d1ebd) || (in_RDI != (internal_abi_Type *)&DAT_00807160))
              goto LAB_007c684d;
              iVar10 = 0;
            }
            else {
              iVar10 = 9;
            }
          }
        }
        else {
          if ((dVar1 != 0x5eb9273d) || (in_RDI != (internal_abi_Type *)&DAT_0080f2e0))
          goto LAB_007c673e;
          iVar10 = 5;
        }
      }
      else if (dVar1 == 0x7f949a56) {
        if (in_RDI != (internal_abi_Type *)&DAT_0081e5e0) goto LAB_007c673e;
        iVar10 = *piVar8;
      }
      else {
        if ((dVar1 != 0xfc24222d) || (in_RDI != (internal_abi_Type *)&DAT_0080f340))
        goto LAB_007c673e;
        iVar10 = 6;
      }
    }
    n_1 = n;
    if (iVar10 == 8) {
      if (in_RDI != (internal_abi_Type *)&DAT_0080f280) {
                    // WARNING: Subroutine does not return
        runtime_panicdottypeE
                  (in_RDI,(internal_abi_Type *)&DAT_0080f280,(internal_abi_Type *)&DAT_00821120);
      }
      if ((int)uVar6 < 0) {
                    // WARNING: Subroutine does not return
        runtime_panicunsafeslicelen();
      }
      auVar2._8_8_ = 0;
      auVar2._0_8_ = uVar6;
      if ((SUB168(auVar2 * ZEXT816(0x28),8) != 0) ||
         ((uint)-(int)piVar8 < SUB168(auVar2 * ZEXT816(0x28),0))) {
        if (piVar8 == (int *)0x0) {
                    // WARNING: Subroutine does not return
          runtime_panicunsafeslicenilptr();
        }
                    // WARNING: Subroutine does not return
        runtime_panicunsafeslicelen();
      }
      in_RDI = piVar4;
      if (uVar6 == 0) {
        n_1 = n + 1;
      }
    }
    piVar4 = (internal_abi_Type *)&piVar4->Str;
    n = n_1;
  }
  if (0 < n) {
    uVar6 = in_RBX - n;
    runtime_makeslice((internal_abi_Type *)&DAT_00874a20,0,uVar6,in_RDI);
    uVar7 = 0;
    local_78 = extraout_RAX_00;
    for (local_90 = 0; local_90 < in_RBX; local_90 = local_90 + 1) {
      a.Key.str = (uint8 *)in_RAX->Size_;
      a.Key.len._0_4_ = *(undefined4 *)&in_RAX->PtrBytes;
      a.Key.len._4_4_ = *(undefined4 *)((int)&in_RAX->PtrBytes + 4);
      a.Value.num._0_4_ = in_RAX->Hash;
      a.Value.num._4_1_ = in_RAX->TFlag;
      a.Value.num._5_1_ = in_RAX->Align_;
      a.Value.num._6_1_ = in_RAX->FieldAlign_;
      a.Value.num._7_1_ = in_RAX->Kind_;
      uVar9._0_4_ = in_RAX->Hash;
      uVar9._4_1_ = in_RAX->TFlag;
      uVar9._5_1_ = in_RAX->Align_;
      uVar9._6_1_ = in_RAX->FieldAlign_;
      uVar9._7_1_ = in_RAX->Kind_;
      a.Value.any._type._0_4_ = *(undefined4 *)&in_RAX->Equal;
      a.Value.any._type._4_4_ = *(undefined4 *)((int)&in_RAX->Equal + 4);
      piVar4 = (internal_abi_Type *)in_RAX->Equal;
      a.Value.any.data._0_4_ = *(undefined4 *)&in_RAX->GCData;
      a.Value.any.data._4_4_ = *(undefined4 *)((int)&in_RAX->GCData + 4);
      piVar8 = (int *)in_RAX->GCData;
      local_68 = in_RAX;
      if (piVar4 == (internal_abi_Type *)0x0) {
LAB_007c6b91:
        iVar5 = 0;
      }
      else {
        dVar1 = piVar4->Hash;
        if (dVar1 < 0x5eb9273e) {
          if (dVar1 == 0x1712e740) {
            if (piVar4 == (internal_abi_Type *)&DAT_0080f280) {
              iVar5 = 8;
            }
            else {
LAB_007c6a70:
              r_00.data = in_stack_ffffffffffffff08;
              r_00.tab = in_stack_ffffffffffffff00;
              local_70 = piVar8;
              runtime_assertE2I2((internal_abi_InterfaceType *)&DAT_00834fc0,
                                 in_stack_fffffffffffffef0,r_00);
              piVar8 = local_70;
              if (extraout_RAX_01 == 0) {
                if ((dVar1 != 0xdf1d1ebd) || (piVar4 != (internal_abi_Type *)&DAT_00807160))
                goto LAB_007c6b91;
                iVar5 = 0;
              }
              else {
                iVar5 = 9;
              }
            }
          }
          else {
            if ((dVar1 != 0x5eb9273d) || (piVar4 != (internal_abi_Type *)&DAT_0080f2e0))
            goto LAB_007c6a70;
            iVar5 = 5;
          }
        }
        else if (dVar1 == 0x7f949a56) {
          if (piVar4 != (internal_abi_Type *)&DAT_0081e5e0) goto LAB_007c6a70;
          iVar5 = *piVar8;
        }
        else {
          if ((dVar1 != 0xfc24222d) || (piVar4 != (internal_abi_Type *)&DAT_0080f340))
          goto LAB_007c6a70;
          iVar5 = 6;
        }
      }
      if (iVar5 == 8) {
        if (piVar4 != (internal_abi_Type *)&DAT_0080f280) {
                    // WARNING: Subroutine does not return
          runtime_panicdottypeE
                    (piVar4,(internal_abi_Type *)&DAT_0080f280,(internal_abi_Type *)&DAT_00821120);
        }
        if ((int)uVar9 < 0) {
                    // WARNING: Subroutine does not return
          runtime_panicunsafeslicelen();
        }
        auVar3._8_8_ = 0;
        auVar3._0_8_ = uVar9;
        if ((SUB168(auVar3 * ZEXT816(0x28),8) != 0) ||
           ((uint)-(int)piVar8 < SUB168(auVar3 * ZEXT816(0x28),0))) {
          if (piVar8 == (int *)0x0) {
                    // WARNING: Subroutine does not return
            runtime_panicunsafeslicenilptr();
          }
                    // WARNING: Subroutine does not return
          runtime_panicunsafeslicelen();
        }
        if (uVar9 != 0) goto LAB_007c6c03;
      }
      else {
LAB_007c6c03:
        uVar9 = uVar7 + 1;
        if (uVar6 < uVar9) {
          ~r0_00.cap = (int)in_stack_ffffffffffffff00;
          ~r0_00.array = in_stack_fffffffffffffef0._type;
          ~r0_00.len = (int)in_stack_fffffffffffffef0.data;
          runtime_growslice(local_78,uVar9,uVar6,1,(internal_abi_Type *)&DAT_00874a20,~r0_00);
          local_78 = extraout_RAX_02;
          uVar6 = extraout_RCX;
          uVar9 = extraout_RBX;
        }
        uVar7 = uVar9;
        if (runtime_writeBarrier._0_4_ != 0) {
          local_88 = uVar6;
          local_80 = uVar9;
          local_60 = local_78;
          runtime_wbMove((internal_abi_Type *)&DAT_00874a20,
                         (void *)((int)local_78 + uVar9 * 0x28 + -0x28),&a);
          local_78 = local_60;
          uVar6 = local_88;
          uVar7 = local_80;
        }
        *(uint8 **)((int)local_78 + uVar9 * 0x28 + -0x28) = a.Key.str;
        *(undefined4 *)((int)local_78 + uVar9 * 0x28 + -0x20) = (undefined4)a.Key.len;
        *(undefined4 *)((int)local_78 + uVar9 * 0x28 + -0x1c) = a.Key.len._4_4_;
        *(uint32 *)((int)local_78 + uVar9 * 0x28 + -0x18) = (uint32)a.Value.num;
        *(undefined4 *)((int)local_78 + uVar9 * 0x28 + -0x14) = a.Value.num._4_4_;
        *(undefined4 *)((int)local_78 + uVar9 * 0x28 + -0x10) = a.Value.any._type._0_4_;
        *(undefined4 *)((int)local_78 + uVar9 * 0x28 + -0xc) = a.Value.any._type._4_4_;
        *(undefined4 *)((int)local_78 + uVar9 * 0x28 + -8) = a.Value.any.data._0_4_;
        *(undefined4 *)((int)local_78 + uVar9 * 0x28 + -4) = a.Value.any.data._4_4_;
      }
      in_RAX = (internal_abi_Type *)&local_68->Str;
    }
  }
  return;
}


/*
Unable to decompile 'log/slog.AnyValue'
Cause: 
Low-level Error: Overlapping input varnodes
*/


void log_slog_Value_Any(log_slog_Value v,interface___ ~r0)

{
  undefined auVar1 [16];
  __uint8 val;
  runtime_iface r;
  runtime_iface r_00;
  __interface___ a;
  string ~r0_00;
  time_t *in_RAX;
  int extraout_RAX;
  void *x_00;
  int extraout_RAX_00;
  log_slog_Kind x_1;
  uint64 *in_RCX;
  void *~r0_01;
  uint64 uVar2;
  log_slog_Kind x;
  internal_abi_Type *in_RBX;
  internal_abi_Type *extraout_RBX;
  internal_abi_Type *piVar3;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff88;
  runtime_itab *in_stack_ffffffffffffff98;
  void *in_stack_ffffffffffffffa0;
  int in_stack_ffffffffffffffa8;
  undefined4 in_stack_ffffffffffffffb0;
  dword in_stack_ffffffffffffffb4;
  time_t *in_stack_ffffffffffffffb8;
  time_t local_20 [3];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RBX == (internal_abi_Type *)0x0) {
LAB_007c73d8:
    uVar2 = 0;
  }
  else {
    in_stack_ffffffffffffffb4 = in_RBX->Hash;
    in_stack_ffffffffffffffb8 = in_RAX;
    if (in_stack_ffffffffffffffb4 < 0x5eb9273e) {
      if (in_stack_ffffffffffffffb4 == 0x1712e740) {
        if (in_RBX == (internal_abi_Type *)&DAT_0080f280) {
          uVar2 = 8;
        }
        else {
LAB_007c735d:
          r.data = in_stack_ffffffffffffffa0;
          r.tab = in_stack_ffffffffffffff98;
          runtime_assertE2I2((internal_abi_InterfaceType *)&DAT_00834fc0,in_stack_ffffffffffffff88,r
                            );
          in_stack_ffffffffffffffb8 = in_RAX;
          if (extraout_RAX == 0) {
            if ((in_stack_ffffffffffffffb4 != 0xdf1d1ebd) ||
               (in_RBX != (internal_abi_Type *)&DAT_00807160)) goto LAB_007c73d8;
            uVar2 = 0;
          }
          else {
            uVar2 = 9;
          }
        }
      }
      else {
        if ((in_stack_ffffffffffffffb4 != 0x5eb9273d) ||
           (in_RBX != (internal_abi_Type *)&DAT_0080f2e0)) goto LAB_007c735d;
        uVar2 = 5;
      }
    }
    else if (in_stack_ffffffffffffffb4 == 0x7f949a56) {
      if (in_RBX != (internal_abi_Type *)&DAT_0081e5e0) goto LAB_007c735d;
      uVar2 = *in_RCX;
    }
    else {
      if ((in_stack_ffffffffffffffb4 != 0xfc24222d) ||
         (in_RBX != (internal_abi_Type *)&DAT_0080f340)) goto LAB_007c735d;
      uVar2 = 6;
    }
  }
  switch(uVar2) {
  case 0:
    if (in_RBX == (internal_abi_Type *)&DAT_00807160) {
      runtime_convT64(*in_RCX,&DAT_00807160);
      return;
    }
    return;
  case 1:
    return;
  case 2:
    runtime_convT64((uint64)in_RAX,in_RBX);
    return;
  case 3:
    runtime_convT64((uint64)in_RAX,in_RBX);
    return;
  case 4:
    runtime_convT64((uint64)in_RAX,in_RBX);
    return;
  case 5:
    if (in_RBX != (internal_abi_Type *)&DAT_0080f2e0) {
                    // WARNING: Subroutine does not return
      runtime_panicdottypeE
                (in_RBX,(internal_abi_Type *)&DAT_0080f2e0,(internal_abi_Type *)&DAT_00821120);
    }
    if ((int)in_RAX < 0) {
                    // WARNING: Subroutine does not return
      runtime_panicunsafestringlen();
    }
    if (in_RAX <= (time_t *)-(int)in_RCX) {
      runtime_convTstring((string)in_stack_ffffffffffffff88,in_RCX);
      return;
    }
    if (in_RCX != (uint64 *)0x0) {
                    // WARNING: Subroutine does not return
      runtime_panicunsafestringlen();
    }
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringnilptr();
  case 6:
    local_20[0] = log_slog_Value_time(in_RAX);
    runtime_convT((internal_abi_Type *)&DAT_008a8120,local_20,~r0_01);
    return;
  case 7:
    runtime_convT64((uint64)in_RAX,in_RBX);
    return;
  case 8:
    if (in_RBX != (internal_abi_Type *)&DAT_0080f280) {
                    // WARNING: Subroutine does not return
      runtime_panicdottypeE
                (in_RBX,(internal_abi_Type *)&DAT_0080f280,(internal_abi_Type *)&DAT_00821120);
    }
    if ((int)in_RAX < 0) {
                    // WARNING: Subroutine does not return
      runtime_panicunsafeslicelen();
    }
    auVar1._8_8_ = 0;
    auVar1._0_8_ = in_RAX;
    if ((SUB168(auVar1 * ZEXT816(0x28),8) == 0) &&
       (SUB168(auVar1 * ZEXT816(0x28),0) <= (uint)-(int)in_RCX)) {
      val.cap = (int)in_stack_ffffffffffffff98;
      val.array = (uint8 *)in_stack_ffffffffffffff88._type;
      val.len = (int)in_stack_ffffffffffffff88.data;
      runtime_convTslice(val,in_RCX);
      return;
    }
    if (in_RCX != (uint64 *)0x0) {
                    // WARNING: Subroutine does not return
      runtime_panicunsafeslicelen();
    }
                    // WARNING: Subroutine does not return
    runtime_panicunsafeslicenilptr();
  case 9:
    return;
  }
  piVar3 = in_RBX;
  if (in_RBX != (internal_abi_Type *)0x0) {
    in_stack_ffffffffffffffb4 = in_RBX->Hash;
    if (in_stack_ffffffffffffffb4 < 0x5eb9273e) {
      if (in_stack_ffffffffffffffb4 == 0x1712e740) {
        if (in_RBX == (internal_abi_Type *)&DAT_0080f280) {
          uVar2 = 8;
          goto LAB_007c7602;
        }
      }
      else if ((in_stack_ffffffffffffffb4 == 0x5eb9273d) &&
              (in_RBX == (internal_abi_Type *)&DAT_0080f2e0)) {
        uVar2 = 5;
        goto LAB_007c7602;
      }
    }
    else if (in_stack_ffffffffffffffb4 == 0x7f949a56) {
      if (in_RBX == (internal_abi_Type *)&DAT_0081e5e0) {
        uVar2 = *in_RCX;
        goto LAB_007c7602;
      }
    }
    else if ((in_stack_ffffffffffffffb4 == 0xfc24222d) &&
            (in_RBX == (internal_abi_Type *)&DAT_0080f340)) {
      uVar2 = 6;
      goto LAB_007c7602;
    }
    r_00.data = in_stack_ffffffffffffffa0;
    r_00.tab = in_stack_ffffffffffffff98;
    runtime_assertE2I2((internal_abi_InterfaceType *)&DAT_00834fc0,in_stack_ffffffffffffff88,r_00);
    if (extraout_RAX_00 != 0) {
      uVar2 = 9;
      in_RBX = extraout_RBX;
      goto LAB_007c7602;
    }
    piVar3 = extraout_RBX;
    if ((in_stack_ffffffffffffffb4 == 0xdf1d1ebd) && (in_RBX == (internal_abi_Type *)&DAT_00807160))
    {
      uVar2 = 0;
      in_RBX = extraout_RBX;
      goto LAB_007c7602;
    }
  }
  uVar2 = 0;
  in_RBX = piVar3;
LAB_007c7602:
  runtime_convT64(uVar2,in_RBX);
  a.len = (int)in_stack_ffffffffffffffa0;
  a.array = (interface___ *)in_stack_ffffffffffffff98;
  a.cap = in_stack_ffffffffffffffa8;
  ~r0_00.str._4_4_ = in_stack_ffffffffffffffb4;
  ~r0_00.str._0_4_ = in_stack_ffffffffffffffb0;
  ~r0_00.len = (int)in_stack_ffffffffffffffb8;
  fmt_Sprintf((string)in_stack_ffffffffffffff88,a,~r0_00);
  runtime_convTstring((string)in_stack_ffffffffffffff88,x_00);
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffff88);
}


/*
Unable to decompile 'log/slog.Value.String'
Cause: 
Low-level Error: Overlapping input varnodes
*/


void log_slog_Value_Int64(log_slog_Value v,int64 ~r0)

{
  __interface___ a;
  string ~r0_00;
  int extraout_RAX;
  void *x_00;
  log_slog_Kind *in_RCX;
  log_slog_Kind x;
  log_slog_Kind g;
  undefined *in_RBX;
  undefined *extraout_RBX;
  undefined *puVar1;
  void *x_01;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff98;
  runtime_iface in_stack_ffffffffffffffa8;
  int in_stack_ffffffffffffffb8;
  undefined4 in_stack_ffffffffffffffc0;
  dword in_stack_ffffffffffffffc4;
  int in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  puVar1 = in_RBX;
  if (in_RBX != (undefined *)0x0) {
    in_stack_ffffffffffffffc4 = *(dword *)(in_RBX + 0x10);
    if (in_stack_ffffffffffffffc4 < 0x5eb9273e) {
      if (in_stack_ffffffffffffffc4 == 0x1712e740) {
        if (in_RBX == &DAT_0080f280) {
          g = 8;
          goto LAB_007c78ea;
        }
      }
      else if ((in_stack_ffffffffffffffc4 == 0x5eb9273d) && (in_RBX == &DAT_0080f2e0)) {
        g = 5;
        goto LAB_007c78ea;
      }
    }
    else if (in_stack_ffffffffffffffc4 == 0x7f949a56) {
      if (in_RBX == &DAT_0081e5e0) {
        g = *in_RCX;
        goto LAB_007c78ea;
      }
    }
    else if ((in_stack_ffffffffffffffc4 == 0xfc24222d) && (in_RBX == &DAT_0080f340)) {
      g = 6;
      goto LAB_007c78ea;
    }
    runtime_assertE2I2((internal_abi_InterfaceType *)&DAT_00834fc0,in_stack_ffffffffffffff98,
                       in_stack_ffffffffffffffa8);
    if (extraout_RAX != 0) {
      g = 9;
      in_RBX = extraout_RBX;
      goto LAB_007c78ea;
    }
    puVar1 = extraout_RBX;
    in_stack_ffffffffffffffc8 = ~r0;
    if ((in_stack_ffffffffffffffc4 == 0xdf1d1ebd) && (in_RBX == &DAT_00807160)) {
      g = 0;
      in_RBX = extraout_RBX;
      goto LAB_007c78ea;
    }
  }
  g = 0;
  in_RBX = puVar1;
  ~r0 = in_stack_ffffffffffffffc8;
LAB_007c78ea:
  if (g != 4) {
    runtime_convT64(g,in_RBX);
    runtime_convT64(4,x_01);
    a.cap = in_stack_ffffffffffffffb8;
    a.array = (interface___ *)in_stack_ffffffffffffffa8.tab;
    a.len = (int)in_stack_ffffffffffffffa8.data;
    ~r0_00.str._4_4_ = in_stack_ffffffffffffffc4;
    ~r0_00.str._0_4_ = in_stack_ffffffffffffffc0;
    ~r0_00.len = ~r0;
    fmt_Sprintf((string)in_stack_ffffffffffffff98,a,~r0_00);
    runtime_convTstring((string)in_stack_ffffffffffffff98,x_00);
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff98);
  }
  return;
}



void log_slog_Value_Uint64(log_slog_Value v,uint64 ~r0)

{
  __interface___ a;
  string ~r0_00;
  int extraout_RAX;
  void *x_00;
  log_slog_Kind *in_RCX;
  log_slog_Kind x;
  log_slog_Kind g;
  undefined *in_RBX;
  undefined *extraout_RBX;
  undefined *puVar1;
  void *x_01;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff98;
  runtime_iface in_stack_ffffffffffffffa8;
  int in_stack_ffffffffffffffb8;
  undefined4 in_stack_ffffffffffffffc0;
  dword in_stack_ffffffffffffffc4;
  uint64 in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  puVar1 = in_RBX;
  if (in_RBX != (undefined *)0x0) {
    in_stack_ffffffffffffffc4 = *(dword *)(in_RBX + 0x10);
    if (in_stack_ffffffffffffffc4 < 0x5eb9273e) {
      if (in_stack_ffffffffffffffc4 == 0x1712e740) {
        if (in_RBX == &DAT_0080f280) {
          g = 8;
          goto LAB_007c7aaa;
        }
      }
      else if ((in_stack_ffffffffffffffc4 == 0x5eb9273d) && (in_RBX == &DAT_0080f2e0)) {
        g = 5;
        goto LAB_007c7aaa;
      }
    }
    else if (in_stack_ffffffffffffffc4 == 0x7f949a56) {
      if (in_RBX == &DAT_0081e5e0) {
        g = *in_RCX;
        goto LAB_007c7aaa;
      }
    }
    else if ((in_stack_ffffffffffffffc4 == 0xfc24222d) && (in_RBX == &DAT_0080f340)) {
      g = 6;
      goto LAB_007c7aaa;
    }
    runtime_assertE2I2((internal_abi_InterfaceType *)&DAT_00834fc0,in_stack_ffffffffffffff98,
                       in_stack_ffffffffffffffa8);
    if (extraout_RAX != 0) {
      g = 9;
      in_RBX = extraout_RBX;
      goto LAB_007c7aaa;
    }
    puVar1 = extraout_RBX;
    in_stack_ffffffffffffffc8 = ~r0;
    if ((in_stack_ffffffffffffffc4 == 0xdf1d1ebd) && (in_RBX == &DAT_00807160)) {
      g = 0;
      in_RBX = extraout_RBX;
      goto LAB_007c7aaa;
    }
  }
  g = 0;
  in_RBX = puVar1;
  ~r0 = in_stack_ffffffffffffffc8;
LAB_007c7aaa:
  if (g != 7) {
    runtime_convT64(g,in_RBX);
    runtime_convT64(7,x_01);
    a.cap = in_stack_ffffffffffffffb8;
    a.array = (interface___ *)in_stack_ffffffffffffffa8.tab;
    a.len = (int)in_stack_ffffffffffffffa8.data;
    ~r0_00.str._4_4_ = in_stack_ffffffffffffffc4;
    ~r0_00.str._0_4_ = in_stack_ffffffffffffffc0;
    ~r0_00.len = ~r0;
    fmt_Sprintf((string)in_stack_ffffffffffffff98,a,~r0_00);
    runtime_convTstring((string)in_stack_ffffffffffffff98,x_00);
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff98);
  }
  return;
}



void log_slog_Value_Bool(log_slog_Value v,bool ~r0)

{
  __interface___ a;
  string ~r0_00;
  undefined7 in_register_00000001;
  int iVar1;
  int extraout_RAX;
  void *x_00;
  log_slog_Kind *in_RCX;
  log_slog_Kind x;
  log_slog_Kind g;
  undefined *in_RBX;
  undefined *extraout_RBX;
  undefined *puVar2;
  void *x_01;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff98;
  runtime_iface in_stack_ffffffffffffffa8;
  int in_stack_ffffffffffffffb8;
  undefined4 in_stack_ffffffffffffffc0;
  dword in_stack_ffffffffffffffc4;
  int in_stack_ffffffffffffffc8;
  
  iVar1 = CONCAT71(in_register_00000001,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  puVar2 = in_RBX;
  if (in_RBX != (undefined *)0x0) {
    in_stack_ffffffffffffffc4 = *(dword *)(in_RBX + 0x10);
    if (in_stack_ffffffffffffffc4 < 0x5eb9273e) {
      if (in_stack_ffffffffffffffc4 == 0x1712e740) {
        if (in_RBX == &DAT_0080f280) {
          g = 8;
          goto LAB_007c7c6a;
        }
      }
      else if ((in_stack_ffffffffffffffc4 == 0x5eb9273d) && (in_RBX == &DAT_0080f2e0)) {
        g = 5;
        goto LAB_007c7c6a;
      }
    }
    else if (in_stack_ffffffffffffffc4 == 0x7f949a56) {
      if (in_RBX == &DAT_0081e5e0) {
        g = *in_RCX;
        goto LAB_007c7c6a;
      }
    }
    else if ((in_stack_ffffffffffffffc4 == 0xfc24222d) && (in_RBX == &DAT_0080f340)) {
      g = 6;
      goto LAB_007c7c6a;
    }
    runtime_assertE2I2((internal_abi_InterfaceType *)&DAT_00834fc0,in_stack_ffffffffffffff98,
                       in_stack_ffffffffffffffa8);
    if (extraout_RAX != 0) {
      g = 9;
      in_RBX = extraout_RBX;
      goto LAB_007c7c6a;
    }
    puVar2 = extraout_RBX;
    in_stack_ffffffffffffffc8 = iVar1;
    if ((in_stack_ffffffffffffffc4 == 0xdf1d1ebd) && (in_RBX == &DAT_00807160)) {
      g = 0;
      in_RBX = extraout_RBX;
      goto LAB_007c7c6a;
    }
  }
  g = 0;
  in_RBX = puVar2;
  iVar1 = in_stack_ffffffffffffffc8;
LAB_007c7c6a:
  if (g != 1) {
    runtime_convT64(g,in_RBX);
    runtime_convT64(1,x_01);
    a.cap = in_stack_ffffffffffffffb8;
    a.array = (interface___ *)in_stack_ffffffffffffffa8.tab;
    a.len = (int)in_stack_ffffffffffffffa8.data;
    ~r0_00.str._4_4_ = in_stack_ffffffffffffffc4;
    ~r0_00.str._0_4_ = in_stack_ffffffffffffffc0;
    ~r0_00.len = iVar1;
    fmt_Sprintf((string)in_stack_ffffffffffffff98,a,~r0_00);
    runtime_convTstring((string)in_stack_ffffffffffffff98,x_00);
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff98);
  }
  return;
}



void log_slog_Value_Duration(log_slog_Value a,time_Duration ~r0)

{
  __interface___ a_00;
  string ~r0_00;
  int extraout_RAX;
  void *x_00;
  log_slog_Kind *in_RCX;
  log_slog_Kind x;
  log_slog_Kind g;
  undefined *in_RBX;
  undefined *extraout_RBX;
  undefined *puVar1;
  void *x_01;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff98;
  runtime_iface in_stack_ffffffffffffffa8;
  int in_stack_ffffffffffffffb8;
  undefined4 in_stack_ffffffffffffffc0;
  dword in_stack_ffffffffffffffc4;
  int in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  puVar1 = in_RBX;
  if (in_RBX != (undefined *)0x0) {
    in_stack_ffffffffffffffc4 = *(dword *)(in_RBX + 0x10);
    if (in_stack_ffffffffffffffc4 < 0x5eb9273e) {
      if (in_stack_ffffffffffffffc4 == 0x1712e740) {
        if (in_RBX == &DAT_0080f280) {
          g = 8;
          goto LAB_007c7e2a;
        }
      }
      else if ((in_stack_ffffffffffffffc4 == 0x5eb9273d) && (in_RBX == &DAT_0080f2e0)) {
        g = 5;
        goto LAB_007c7e2a;
      }
    }
    else if (in_stack_ffffffffffffffc4 == 0x7f949a56) {
      if (in_RBX == &DAT_0081e5e0) {
        g = *in_RCX;
        goto LAB_007c7e2a;
      }
    }
    else if ((in_stack_ffffffffffffffc4 == 0xfc24222d) && (in_RBX == &DAT_0080f340)) {
      g = 6;
      goto LAB_007c7e2a;
    }
    runtime_assertE2I2((internal_abi_InterfaceType *)&DAT_00834fc0,in_stack_ffffffffffffff98,
                       in_stack_ffffffffffffffa8);
    if (extraout_RAX != 0) {
      g = 9;
      in_RBX = extraout_RBX;
      goto LAB_007c7e2a;
    }
    puVar1 = extraout_RBX;
    in_stack_ffffffffffffffc8 = ~r0;
    if ((in_stack_ffffffffffffffc4 == 0xdf1d1ebd) && (in_RBX == &DAT_00807160)) {
      g = 0;
      in_RBX = extraout_RBX;
      goto LAB_007c7e2a;
    }
  }
  g = 0;
  in_RBX = puVar1;
  ~r0 = in_stack_ffffffffffffffc8;
LAB_007c7e2a:
  if (g != 2) {
    runtime_convT64(g,in_RBX);
    runtime_convT64(2,x_01);
    a_00.cap = in_stack_ffffffffffffffb8;
    a_00.array = (interface___ *)in_stack_ffffffffffffffa8.tab;
    a_00.len = (int)in_stack_ffffffffffffffa8.data;
    ~r0_00.str._4_4_ = in_stack_ffffffffffffffc4;
    ~r0_00.str._0_4_ = in_stack_ffffffffffffffc0;
    ~r0_00.len = ~r0;
    fmt_Sprintf((string)in_stack_ffffffffffffff98,a_00,~r0_00);
    runtime_convTstring((string)in_stack_ffffffffffffff98,x_00);
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff98);
  }
  return;
}



void log_slog_Value_Float64(log_slog_Value v,float64 ~r0)

{
  __interface___ a;
  string ~r0_00;
  int in_RAX;
  int extraout_RAX;
  void *x_00;
  log_slog_Kind *in_RCX;
  log_slog_Kind x;
  log_slog_Kind g;
  undefined *in_RBX;
  undefined *extraout_RBX;
  undefined *puVar1;
  void *x_01;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff98;
  runtime_iface in_stack_ffffffffffffffa8;
  int in_stack_ffffffffffffffb8;
  undefined4 in_stack_ffffffffffffffc0;
  dword in_stack_ffffffffffffffc4;
  int in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  puVar1 = in_RBX;
  if (in_RBX != (undefined *)0x0) {
    in_stack_ffffffffffffffc4 = *(dword *)(in_RBX + 0x10);
    if (in_stack_ffffffffffffffc4 < 0x5eb9273e) {
      if (in_stack_ffffffffffffffc4 == 0x1712e740) {
        if (in_RBX == &DAT_0080f280) {
          g = 8;
          goto LAB_007c7fea;
        }
      }
      else if ((in_stack_ffffffffffffffc4 == 0x5eb9273d) && (in_RBX == &DAT_0080f2e0)) {
        g = 5;
        goto LAB_007c7fea;
      }
    }
    else if (in_stack_ffffffffffffffc4 == 0x7f949a56) {
      if (in_RBX == &DAT_0081e5e0) {
        g = *in_RCX;
        goto LAB_007c7fea;
      }
    }
    else if ((in_stack_ffffffffffffffc4 == 0xfc24222d) && (in_RBX == &DAT_0080f340)) {
      g = 6;
      goto LAB_007c7fea;
    }
    runtime_assertE2I2((internal_abi_InterfaceType *)&DAT_00834fc0,in_stack_ffffffffffffff98,
                       in_stack_ffffffffffffffa8);
    if (extraout_RAX != 0) {
      g = 9;
      in_RBX = extraout_RBX;
      goto LAB_007c7fea;
    }
    puVar1 = extraout_RBX;
    in_stack_ffffffffffffffc8 = in_RAX;
    if ((in_stack_ffffffffffffffc4 == 0xdf1d1ebd) && (in_RBX == &DAT_00807160)) {
      g = 0;
      in_RBX = extraout_RBX;
      goto LAB_007c7fea;
    }
  }
  g = 0;
  in_RBX = puVar1;
  in_RAX = in_stack_ffffffffffffffc8;
LAB_007c7fea:
  if (g != 3) {
    runtime_convT64(g,in_RBX);
    runtime_convT64(3,x_01);
    a.cap = in_stack_ffffffffffffffb8;
