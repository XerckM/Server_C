  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  sync___RWMutex__Unlock(*(sync_RWMutex **)(in_RDX + 8));
  return;
}



// WARNING: Unknown calling convention

void google_golang_org_grpc_internal_channelz___channelMap__decrTraceRefCount
               (google_golang_org_grpc_internal_channelz_channelMap *c,int64 id)

{
  uint64 **extraout_RAX;
  undefined1 *puVar1;
  uint64 **extraout_RAX_00;
  uint64 **extraout_RAX_01;
  uint64 **extraout_RAX_02;
  uint64 *extraout_RAX_03;
  int extraout_RAX_04;
  google_golang_org_grpc_internal_channelz_Channel *v;
  google_golang_org_grpc_internal_channelz_SubChannel *v_1;
  google_golang_org_grpc_internal_channelz_Server *v_2;
  google_golang_org_grpc_internal_channelz_Socket *v_3;
  char extraout_BL;
  bool ok;
  char extraout_BL_00;
  bool ok_1;
  char extraout_BL_01;
  bool ok_2;
  bool ok_3;
  uint64 *puVar2;
  void *~r0;
  undefined8 extraout_RBX;
  undefined in_SIL;
  bool ~r1;
  bool ~r1_00;
  bool ~r1_01;
  undefined extraout_SIL;
  void *in_RDI;
  void *~r0_00;
  void *~r0_01;
  void *~r0_02;
  void *extraout_RDI;
  int unaff_R14;
  undefined in_XMM15 [16];
  google_golang_org_grpc_internal_channelz_channelMap *pgStack0000000000000008;
  uint64 uStack0000000000000010;
  runtime_iface in_stack_ffffffffffffffc0;
  runtime_iface in_stack_ffffffffffffffd0;
  
  pgStack0000000000000008 = c;
  uStack0000000000000010 = id;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_SIL = extraout_SIL;
    in_RDI = extraout_RDI;
  }
  runtime_mapaccess2_fast64
            ((internal_abi_MapType *)&DAT_0082d580,(runtime_hmap *)pgStack0000000000000008->channels
             ,uStack0000000000000010,in_RDI,(bool)in_SIL);
  if (extraout_BL == '\0') {
    runtime_mapaccess2_fast64
              ((internal_abi_MapType *)&DAT_0082d5e0,
               (runtime_hmap *)pgStack0000000000000008->subChannels,uStack0000000000000010,~r0_00,
               ~r1);
    if (extraout_BL_00 == '\0') {
      runtime_mapaccess2_fast64
                ((internal_abi_MapType *)&DAT_0082d6a0,
                 (runtime_hmap *)pgStack0000000000000008->servers,uStack0000000000000010,~r0_01,
                 ~r1_00);
      if (extraout_BL_01 == '\0') {
        runtime_mapaccess2_fast64
                  ((internal_abi_MapType *)&DAT_0082d640,
                   (runtime_hmap *)pgStack0000000000000008->sockets,uStack0000000000000010,~r0_02,
                   ~r1_01);
        ok_3 = SUB81(~r0,0);
        if (ok_3 == false) {
          runtime_newobject((internal_abi_Type *)&DAT_008676a0,~r0);
          *(undefined (*) [16])(extraout_RAX_03 + 1) = in_XMM15;
          *extraout_RAX_03 = uStack0000000000000010;
          puVar1 = 
          go_itab__google_golang_org_grpc_internal_channelz_dummyEntry_google_golang_org_grpc_internal_channelz_entry
          ;
          puVar2 = extraout_RAX_03;
        }
        else {
          puVar2 = *extraout_RAX_02;
          puVar1 = 
          go_itab__google_golang_org_grpc_internal_channelz_Socket_google_golang_org_grpc_internal_channelz_entry
          ;
        }
      }
      else {
        puVar2 = *extraout_RAX_01;
        puVar1 = 
        go_itab__google_golang_org_grpc_internal_channelz_Server_google_golang_org_grpc_internal_channelz_entry
        ;
      }
    }
    else {
      puVar2 = *extraout_RAX_00;
      puVar1 = 
      go_itab__google_golang_org_grpc_internal_channelz_SubChannel_google_golang_org_grpc_internal_channelz_entry
      ;
    }
  }
  else {
    puVar2 = *extraout_RAX;
    puVar1 = 
    go_itab__google_golang_org_grpc_internal_channelz_Channel_google_golang_org_grpc_internal_channelz_entry
    ;
  }
  runtime_assertI2I2((internal_abi_InterfaceType *)&DAT_00846c60,in_stack_ffffffffffffffc0,
                     in_stack_ffffffffffffffd0);
  if (extraout_RAX_04 != 0) {
    (**(code **)(extraout_RAX_04 + 0x18))(extraout_RBX);
    (**(code **)(puVar1 + 0x30))(puVar2);
  }
  return;
}



void google_golang_org_grpc_internal_channelz___channelMap__deleteEntry
               (google_golang_org_grpc_internal_channelz_channelMap *c,int64 id,
               google_golang_org_grpc_internal_channelz_entry ~r0)

{
  int64 *extraout_RAX;
  google_golang_org_grpc_internal_channelz_Server *v_3;
  char extraout_BL;
  bool ok;
  char extraout_BL_00;
  bool ok_1;
  char extraout_BL_01;
  bool ok_2;
  bool ok_3;
  google_golang_org_grpc_internal_channelz_Channel *v_2;
  google_golang_org_grpc_internal_channelz_SubChannel *v_1;
  google_golang_org_grpc_internal_channelz_Socket *v;
  void *~r0_00;
  bool ~r1;
  bool ~r1_00;
  bool ~r1_01;
  undefined8 in_RSI;
  undefined8 extraout_RSI;
  void *in_RDI;
  void *~r0_01;
  void *~r0_02;
  void *~r0_03;
  void *extraout_RDI;
  int unaff_R14;
  undefined in_XMM15 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_RDI = extraout_RDI;
  }
  runtime_mapaccess2_fast64
            ((internal_abi_MapType *)&DAT_0082d640,(runtime_hmap *)c->sockets,id,in_RDI,
             SUB81(in_RSI,0));
  if (extraout_BL != '\0') {
    runtime_mapdelete_fast64((internal_abi_MapType *)&DAT_0082d640,(runtime_hmap *)c->sockets,id);
    return;
  }
  runtime_mapaccess2_fast64
            ((internal_abi_MapType *)&DAT_0082d5e0,(runtime_hmap *)c->subChannels,id,~r0_01,~r1);
  if (extraout_BL_00 != '\0') {
    runtime_mapdelete_fast64
              ((internal_abi_MapType *)&DAT_0082d5e0,(runtime_hmap *)c->subChannels,id);
    return;
  }
  runtime_mapaccess2_fast64
            ((internal_abi_MapType *)&DAT_0082d580,(runtime_hmap *)c->channels,id,~r0_02,~r1_00);
  if (extraout_BL_01 == '\0') {
    runtime_mapaccess2_fast64
              ((internal_abi_MapType *)&DAT_0082d6a0,(runtime_hmap *)c->servers,id,~r0_03,~r1_01);
    ok_3 = SUB81(~r0_00,0);
    if (ok_3 != false) {
      runtime_mapdelete_fast64((internal_abi_MapType *)&DAT_0082d6a0,(runtime_hmap *)c->servers,id);
      return;
    }
    runtime_newobject((internal_abi_Type *)&DAT_008676a0,~r0_00);
    *(undefined (*) [16])(extraout_RAX + 1) = in_XMM15;
    *extraout_RAX = id;
    return;
  }
  runtime_mapdelete_fast64((internal_abi_MapType *)&DAT_0082d580,(runtime_hmap *)c->channels,id);
  runtime_mapdelete_fast64
            ((internal_abi_MapType *)&DAT_0082d520,(runtime_hmap *)c->topLevelChannels,id);
  return;
}



// WARNING: Unknown calling convention

void google_golang_org_grpc_internal_channelz___channelMap__traceEvent
               (google_golang_org_grpc_internal_channelz_channelMap *c,int64 id,
               google_golang_org_grpc_internal_channelz_TraceEvent *desc)

{
  undefined auVar1 [16];
  time_Time ~r0;
  time_Time ~r0_00;
  runtime_iface r;
  runtime_iface r_00;
  uint64 **extraout_RAX;
  uint64 **extraout_RAX_00;
  uint64 **extraout_RAX_01;
  uint64 **extraout_RAX_02;
  uint64 *extraout_RAX_03;
  uint64 *puVar2;
  int extraout_RAX_04;
  uint64 extraout_RAX_05;
  google_golang_org_grpc_internal_channelz_traceEvent *extraout_RAX_06;
  google_golang_org_grpc_internal_channelz_traceEvent *extraout_RAX_07;
  google_golang_org_grpc_internal_channelz_traceEvent *extraout_RAX_08;
  uint64 key;
  uint64 *extraout_RAX_09;
  int extraout_RAX_10;
  uint64 extraout_RAX_11;
  google_golang_org_grpc_internal_channelz_traceEvent *extraout_RAX_12;
  google_golang_org_grpc_internal_channelz_traceEvent *extraout_RAX_13;
  google_golang_org_grpc_internal_channelz_traceEvent *extraout_RAX_14;
  google_golang_org_grpc_internal_channelz_traceEvent *extraout_RAX_15;
  google_golang_org_grpc_internal_channelz_traceEvent *pgVar3;
  time_Location *extraout_RCX;
  google_golang_org_grpc_internal_channelz_TraceEvent *extraout_RCX_00;
  google_golang_org_grpc_internal_channelz_RefChannelType chanType;
  time_Location *extraout_RCX_01;
  google_golang_org_grpc_internal_channelz_TraceEvent *extraout_RCX_02;
  google_golang_org_grpc_internal_channelz_TraceEvent *pgVar4;
  google_golang_org_grpc_internal_channelz_Channel *v;
  undefined1 *puVar5;
  google_golang_org_grpc_internal_channelz_SubChannel *v_1;
  char extraout_BL;
  bool ok;
  google_golang_org_grpc_internal_channelz_Server *v_2;
  char extraout_BL_00;
  bool ok_1;
  google_golang_org_grpc_internal_channelz_Socket *v_3;
  char extraout_BL_01;
  bool ok_2;
  google_golang_org_grpc_internal_channelz_Channel *v_4;
  bool ok_3;
  google_golang_org_grpc_internal_channelz_SubChannel *v_5;
  char extraout_BL_02;
  bool ok_4;
  google_golang_org_grpc_internal_channelz_Server *v_6;
  char extraout_BL_03;
  bool ok_5;
  google_golang_org_grpc_internal_channelz_Socket *v_7;
  char extraout_BL_04;
  bool ok_6;
  bool ok_7;
  uint8 *puVar6;
  void *~r0_01;
  undefined8 extraout_RBX;
  void *~r0_02;
  uint8 *extraout_RBX_00;
  void *~r0_03;
  undefined8 extraout_RBX_01;
  int64 extraout_RBX_02;
  bool ~r1;
  bool ~r1_00;
  bool ~r1_01;
  bool ~r1_02;
  bool ~r1_03;
  bool ~r1_04;
  bool ~r1_05;
  bool ~r1_06;
  void *~r0_04;
  void *~r0_05;
  void *~r0_06;
  void *~r0_07;
  void *~r0_08;
  void *~r0_09;
  void *~r0_10;
  void *~r0_11;
  uint8 **extraout_R11;
  time_Location **extraout_R11_00;
  uint8 **extraout_R11_01;
  time_Location **extraout_R11_02;
  uint8 **extraout_R11_03;
  int unaff_R14;
  undefined8 in_XMM15_Qa;
  undefined8 in_XMM15_Qb;
  undefined auVar7 [16];
  google_golang_org_grpc_internal_channelz_channelMap *pgStack0000000000000008;
  uint64 uStack0000000000000010;
  google_golang_org_grpc_internal_channelz_TraceEvent *pgStack0000000000000018;
  runtime_iface in_stack_ffffffffffffff50;
  time_Location *in_stack_ffffffffffffff60;
  void *in_stack_ffffffffffffff68;
  time_Location *local_30;
  google_golang_org_grpc_internal_channelz_ChannelTrace *local_28;
  undefined local_20 [16];
  code **local_10;
  
  pgStack0000000000000008 = c;
  pgStack0000000000000018 = desc;
  uStack0000000000000010 = id;
  while (&local_30 <= *(time_Location ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  sync___RWMutex__Lock(&pgStack0000000000000008->mu);
  local_20._8_8_ = pgStack0000000000000008;
  local_20._0_8_ = google_golang_org_grpc_internal_channelz___channelMap__traceEvent_func1;
  local_10 = (code **)local_20;
  runtime_mapaccess2_fast64
            ((internal_abi_MapType *)&DAT_0082d580,(runtime_hmap *)pgStack0000000000000008->channels
             ,uStack0000000000000010,~r0_04,~r1);
  if (extraout_BL == '\0') {
    runtime_mapaccess2_fast64
              ((internal_abi_MapType *)&DAT_0082d5e0,
               (runtime_hmap *)pgStack0000000000000008->subChannels,uStack0000000000000010,~r0_05,
               ~r1_00);
    if (extraout_BL_00 == '\0') {
      runtime_mapaccess2_fast64
                ((internal_abi_MapType *)&DAT_0082d6a0,
                 (runtime_hmap *)pgStack0000000000000008->servers,uStack0000000000000010,~r0_06,
                 ~r1_01);
      if (extraout_BL_01 == '\0') {
        runtime_mapaccess2_fast64
                  ((internal_abi_MapType *)&DAT_0082d640,
                   (runtime_hmap *)pgStack0000000000000008->sockets,uStack0000000000000010,~r0_07,
                   ~r1_02);
        ok_3 = SUB81(~r0_01,0);
        if (ok_3 == false) {
          runtime_newobject((internal_abi_Type *)&DAT_008676a0,~r0_01);
          auVar7._8_8_ = in_XMM15_Qb;
          auVar7._0_8_ = in_XMM15_Qa;
          *(undefined (*) [16])(extraout_RAX_03 + 1) = auVar7;
          *extraout_RAX_03 = uStack0000000000000010;
          puVar5 = 
          go_itab__google_golang_org_grpc_internal_channelz_dummyEntry_google_golang_org_grpc_internal_channelz_entry
          ;
          puVar2 = extraout_RAX_03;
        }
        else {
          puVar2 = *extraout_RAX_02;
          puVar5 = 
          go_itab__google_golang_org_grpc_internal_channelz_Socket_google_golang_org_grpc_internal_channelz_entry
          ;
        }
      }
      else {
        puVar2 = *extraout_RAX_01;
        puVar5 = 
        go_itab__google_golang_org_grpc_internal_channelz_Server_google_golang_org_grpc_internal_channelz_entry
        ;
      }
    }
    else {
      puVar2 = *extraout_RAX_00;
      puVar5 = 
      go_itab__google_golang_org_grpc_internal_channelz_SubChannel_google_golang_org_grpc_internal_channelz_entry
      ;
    }
  }
  else {
    puVar2 = *extraout_RAX;
    puVar5 = 
    go_itab__google_golang_org_grpc_internal_channelz_Channel_google_golang_org_grpc_internal_channelz_entry
    ;
  }
  r.data = in_stack_ffffffffffffff68;
  r.tab = (runtime_itab *)in_stack_ffffffffffffff60;
  runtime_assertI2I2((internal_abi_InterfaceType *)&DAT_00846c60,in_stack_ffffffffffffff50,r);
  if (extraout_RAX_04 == 0) {
    (**local_10)();
    return;
  }
  local_28 = (google_golang_org_grpc_internal_channelz_ChannelTrace *)
             (**(code **)(extraout_RAX_04 + 0x20))(extraout_RBX);
  ~r0.loc = in_stack_ffffffffffffff60;
  ~r0.wall = (uint64)in_stack_ffffffffffffff50.tab;
  ~r0.ext = (int64)in_stack_ffffffffffffff50.data;
  time_Now(~r0);
  local_30 = extraout_RCX;
  runtime_newobject((internal_abi_Type *)&DAT_00885920,~r0_02);
  puVar6 = (pgStack0000000000000018->Desc).str;
  (extraout_RAX_06->Desc).len = (pgStack0000000000000018->Desc).len;
  pgVar3 = extraout_RAX_06;
  pgVar4 = pgStack0000000000000018;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RBX_00;
    pgVar3 = extraout_RAX_07;
    pgVar4 = extraout_RCX_00;
    puVar6 = extraout_RBX_00;
  }
  (pgVar3->Desc).str = puVar6;
  pgVar3->Severity = pgVar4->Severity;
  (pgVar3->Timestamp).wall = extraout_RAX_05;
  (pgVar3->Timestamp).ext = (int64)~r0_02;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = local_30;
    pgVar3 = extraout_RAX_08;
  }
  (pgVar3->Timestamp).loc = local_30;
  google_golang_org_grpc_internal_channelz___ChannelTrace__append(local_28,pgVar3);
  if (pgStack0000000000000018->Parent != (google_golang_org_grpc_internal_channelz_TraceEvent *)0x0)
  {
    key = (**(code **)(puVar5 + 0x38))(puVar2);
    runtime_mapaccess2_fast64
              ((internal_abi_MapType *)&DAT_0082d580,
               (runtime_hmap *)pgStack0000000000000008->channels,key,~r0_08,~r1_03);
    if ((((extraout_BL_02 == '\0') &&
         (runtime_mapaccess2_fast64
                    ((internal_abi_MapType *)&DAT_0082d5e0,
                     (runtime_hmap *)pgStack0000000000000008->subChannels,key,~r0_09,~r1_04),
         extraout_BL_03 == '\0')) &&
        (runtime_mapaccess2_fast64
                   ((internal_abi_MapType *)&DAT_0082d6a0,
                    (runtime_hmap *)pgStack0000000000000008->servers,key,~r0_10,~r1_05),
        extraout_BL_04 == '\0')) &&
       (runtime_mapaccess2_fast64
                  ((internal_abi_MapType *)&DAT_0082d640,
                   (runtime_hmap *)pgStack0000000000000008->sockets,key,~r0_11,~r1_06),
       ok_7 = SUB81(~r0_03,0), ok_7 == false)) {
      runtime_newobject((internal_abi_Type *)&DAT_008676a0,~r0_03);
      auVar1._8_8_ = in_XMM15_Qb;
      auVar1._0_8_ = in_XMM15_Qa;
      *(undefined (*) [16])(extraout_RAX_09 + 1) = auVar1;
      *extraout_RAX_09 = key;
    }
    if (puVar5 == (undefined1 *)0x0) {
      chanType = 0;
    }
    else if (puVar5 == 
             go_itab__google_golang_org_grpc_internal_channelz_Channel_google_golang_org_grpc_internal_channelz_entry
            ) {
      chanType = 1;
    }
    else if (puVar5 == 
             go_itab__google_golang_org_grpc_internal_channelz_SubChannel_google_golang_org_grpc_internal_channelz_entry
            ) {
      chanType = 2;
    }
    else {
      chanType = 0;
    }
    r_00.data = in_stack_ffffffffffffff68;
    r_00.tab = (runtime_itab *)in_stack_ffffffffffffff60;
    runtime_assertI2I2((internal_abi_InterfaceType *)&DAT_00846c60,in_stack_ffffffffffffff50,r_00);
    if (extraout_RAX_10 != 0) {
      local_28 = (google_golang_org_grpc_internal_channelz_ChannelTrace *)
                 (**(code **)(extraout_RAX_10 + 0x20))(extraout_RBX_01);
      ~r0_00.loc = in_stack_ffffffffffffff60;
      ~r0_00.wall = (uint64)in_stack_ffffffffffffff50.tab;
      ~r0_00.ext = (int64)in_stack_ffffffffffffff50.data;
      time_Now(~r0_00);
      local_30 = extraout_RCX_01;
      auVar7 = (**(code **)(extraout_RAX_04 + 0x28))(extraout_RBX);
      runtime_newobject((internal_abi_Type *)&DAT_00885920,auVar7._8_8_);
      puVar6 = (pgStack0000000000000018->Parent->Desc).str;
      (extraout_RAX_12->Desc).len = (pgStack0000000000000018->Parent->Desc).len;
      pgVar3 = extraout_RAX_12;
      pgVar4 = pgStack0000000000000018;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_01 = puVar6;
        pgVar3 = extraout_RAX_13;
        pgVar4 = extraout_RCX_02;
      }
      (pgVar3->Desc).str = puVar6;
      pgVar3->Severity = pgVar4->Parent->Severity;
      (pgVar3->Timestamp).wall = extraout_RAX_11;
      (pgVar3->Timestamp).ext = extraout_RBX_02;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_02 = local_30;
        pgVar3 = extraout_RAX_14;
      }
      (pgVar3->Timestamp).loc = local_30;
      pgVar3->RefID = uStack0000000000000010;
      (pgVar3->RefName).len = (int)auVar7._8_8_;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_03 = auVar7._0_8_;
        pgVar3 = extraout_RAX_15;
      }
      (pgVar3->RefName).str = auVar7._0_8_;
      pgVar3->RefType = chanType;
      google_golang_org_grpc_internal_channelz___ChannelTrace__append(local_28,pgVar3);
      (**(code **)(extraout_RAX_04 + 0x30))(extraout_RBX);
    }
  }
  (**local_10)();
  return;
}



// WARNING: Unknown calling convention

void google_golang_org_grpc_internal_channelz___channelMap__traceEvent_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  sync___RWMutex__Unlock(*(sync_RWMutex **)(in_RDX + 8));
  return;
}



void google_golang_org_grpc_internal_channelz___dummyEntry__String
               (google_golang_org_grpc_internal_channelz_dummyEntry *d,string ~r0)

{
  int extraout_RAX;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  __interface___ in_stack_ffffffffffffffd0;
  string ~r0_00;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_convT64(d->idNotFound,in_RBX);
  ~r0_00.len = extraout_RAX;
  ~r0_00.str = &DAT_00807820;
  fmt_Sprintf(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,~r0_00);
  return;
}



void google_golang_org_grpc_internal_channelz___dummyEntry__ID
               (google_golang_org_grpc_internal_channelz_dummyEntry *d,int64 ~r0)

{
  return;
}



void google_golang_org_grpc_internal_channelz___dummyEntry__addChild
               (google_golang_org_grpc_internal_channelz_dummyEntry *d,int64 id,
               google_golang_org_grpc_internal_channelz_entry e)

{
  int *extraout_RAX;
  int *extraout_RAX_00;
  int *piVar1;
  int extraout_RAX_01;
  int extraout_RAX_02;
  int extraout_RAX_03;
  int extraout_RAX_04;
  int iVar2;
  int in_RCX;
  int *piVar3;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *extraout_RBX_01;
  void *pvVar4;
  int in_RDI;
  int *extraout_RDI;
  int *extraout_R11;
  int *extraout_R11_00;
  int *extraout_R11_01;
  int unaff_R14;
  int iStack0000000000000018;
  int iStack0000000000000020;
  
  iStack0000000000000018 = in_RCX;
  iStack0000000000000020 = in_RDI;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_newobject((internal_abi_Type *)&DAT_00811540,(void *)id);
  if (iStack0000000000000018 != 0) {
    iStack0000000000000018 = *(int *)(iStack0000000000000018 + 8);
  }
  *extraout_RAX = iStack0000000000000018;
  piVar1 = extraout_RAX;
  pvVar4 = extraout_RBX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = iStack0000000000000020;
    piVar1 = extraout_RAX_00;
    pvVar4 = extraout_RBX_00;
  }
  piVar1[1] = iStack0000000000000020;
  runtime_convT64(id,pvVar4);
  piVar1[2] = (int)&DAT_00807820;
  iVar2 = extraout_RAX_01;
  piVar3 = piVar1;
  pvVar4 = extraout_RBX_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_02;
    pvVar4 = (void *)piVar3[3];
    extraout_R11_00[1] = (int)pvVar4;
    iVar2 = extraout_RAX_02;
  }
  piVar3[3] = iVar2;
  runtime_convT64(d->idNotFound,pvVar4);
  piVar1[4] = (int)&DAT_00807820;
  iVar2 = extraout_RAX_03;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_01 = extraout_RAX_04;
    extraout_R11_01[1] = extraout_RDI[5];
    iVar2 = extraout_RAX_04;
    piVar1 = extraout_RDI;
  }
  piVar1[5] = iVar2;
  (*(code *)google_golang_org_grpc_internal_channelz_logger.tab[3]._type)
            (google_golang_org_grpc_internal_channelz_logger.data,
             "attempt to add child of type %T with id %d to a parent (id=%d) that doesn\'t currently existgrpc-status-details-bin mismatch: grpc-status=%v, grpc-message=%q, grpc-status-details-bin=%+vsize mismatch (see https://github.com/golang/protobuf/issues/1609): calculated=%d, measured=%db3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aefaa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab73617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5fgrpc: the credentials require transport level security (use grpc.WithTransportCredentials() to set)Balancer retrieved for name %q. grpc-go will be switching to case sensitive balancer registries soonnum values of :authority: %v, num values of host: %v, both must only have 1 value as per HTTP/2 specignoring service config from resolver (%v) and applying the default because service config is disabledcgocheck > 1 mode is no longer supported at runtime. Use GOEXPERIMENT=cgocheck2 at build time instead.Balancer registered with name %q. grpc-go will be switching to case sensitive balancer registries soontest user authenticated, but has no privileges in network so no need to authenticate with Auth Service!Client received GoAway with error code ENHANCE_YOUR_CALM and debug data equal to ASCII \"too_many_pings\".State: %v, Target: %s, CallsStarted: %v, CallsSucceeded: %v, CallsFailed: %v, LastCallStartedTimestamp: %vasn1: time did not serialize back to the original value and may be invalid: given %q, but serialized as %qReceived a HEADERS frame with a :connection header which makes the request malformed, as per the HTTP/2 specinvalid nil message info; this suggests memory corruption due to a race or shallow copy on the message struct3940200619639447921227904010014361380507973927046544666794829340424572177149687032904726608825893800186160697311231939402006196394479212279040100143613805079739270465446667946905279627659399113263569398956308152294913554433653942643grpc: no..." /* TRUNCATED STRING LITERAL */
             ,0x5b,piVar1,3,3);
  return;
}



// WARNING: Unknown calling convention

void google_golang_org_grpc_internal_channelz___dummyEntry__deleteChild
               (google_golang_org_grpc_internal_channelz_dummyEntry *d,int64 id)

{
  undefined8 *extraout_RAX;
  undefined8 extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 extraout_RAX_02;
  undefined8 extraout_RAX_03;
  undefined8 uVar1;
  undefined8 *puVar2;
  void *x;
  void *extraout_RBX;
  void *x_00;
  undefined8 *extraout_RDI;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  google_golang_org_grpc_internal_channelz_dummyEntry *pgStack0000000000000008;
  
  pgStack0000000000000008 = d;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_newobject((internal_abi_Type *)&DAT_0080f8e0,(void *)id);
  runtime_convT64(id,x);
  *extraout_RAX = &DAT_00807820;
  uVar1 = extraout_RAX_00;
  puVar2 = extraout_RAX;
  x_00 = extraout_RBX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_01;
    x_00 = (void *)puVar2[1];
    extraout_R11[1] = x_00;
    uVar1 = extraout_RAX_01;
  }
  puVar2[1] = uVar1;
  runtime_convT64(pgStack0000000000000008->idNotFound,x_00);
  extraout_RAX[2] = &DAT_00807820;
  uVar1 = extraout_RAX_02;
  puVar2 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_03;
    extraout_R11_00[1] = extraout_RDI[3];
    uVar1 = extraout_RAX_03;
    puVar2 = extraout_RDI;
  }
  puVar2[3] = uVar1;
  (*(code *)google_golang_org_grpc_internal_channelz_logger.tab[3]._type)
            (google_golang_org_grpc_internal_channelz_logger.data,
             "attempt to delete child with id %d from a parent (id=%d) that doesn\'t currently existSubchannel health check is unimplemented at server side, thus health check is disabledreflect: New of type that may not be allocated in heap (possibly undefined cgo C type)x509: a root or intermediate certificate is not authorized for an extended key usage: Unsupported codec %q. Defaulting to %q for now. This will start to fail in future releases.attempt to add child of type %T with id %d to a parent (id=%d) that doesn\'t currently existgrpc-status-details-bin mismatch: grpc-status=%v, grpc-message=%q, grpc-status-details-bin=%+vsize mismatch (see https://github.com/golang/protobuf/issues/1609): calculated=%d, measured=%db3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aefaa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab73617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5fgrpc: the credentials require transport level security (use grpc.WithTransportCredentials() to set)Balancer retrieved for name %q. grpc-go will be switching to case sensitive balancer registries soonnum values of :authority: %v, num values of host: %v, both must only have 1 value as per HTTP/2 specignoring service config from resolver (%v) and applying the default because service config is disabledcgocheck > 1 mode is no longer supported at runtime. Use GOEXPERIMENT=cgocheck2 at build time instead.Balancer registered with name %q. grpc-go will be switching to case sensitive balancer registries soontest user authenticated, but has no privileges in network so no need to authenticate with Auth Service!Client received GoAway with error code ENHANCE_YOUR_CALM and debug data equal to ASCII \"too_many_pings\".State: %v, Target: %s, CallsStarted: %v, CallsSucceeded: %v, CallsFailed: %v, LastCallStartedTimestamp: %vasn1: time did not serialize back to the original value and may be invalid: given %q, but serialized as %qReceived a HEADERS fram..." /* TRUNCATED STRING LITERAL */
             ,0x55,puVar2,2,2);
  return;
}



// WARNING: Unknown calling convention

void google_golang_org_grpc_internal_channelz___dummyEntry__triggerDelete
               (google_golang_org_grpc_internal_channelz_dummyEntry *d)

{
  undefined8 *extraout_RAX;
  undefined8 extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 uVar1;
  void *in_RBX;
  void *x;
  void *extraout_RBX;
  undefined8 *extraout_RDI;
  undefined8 *puVar2;
  undefined8 *extraout_R11;
  int unaff_R14;
  google_golang_org_grpc_internal_channelz_dummyEntry *pgStack0000000000000008;
  
  pgStack0000000000000008 = d;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0080f880,in_RBX);
  runtime_convT64(pgStack0000000000000008->idNotFound,x);
  *extraout_RAX = &DAT_00807820;
  uVar1 = extraout_RAX_00;
  puVar2 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_01;
    extraout_R11[1] = extraout_RDI[1];
    uVar1 = extraout_RAX_01;
    puVar2 = extraout_RDI;
  }
  puVar2[1] = uVar1;
  (**(code **)&google_golang_org_grpc_internal_channelz_logger.tab[4].hash)
            (google_golang_org_grpc_internal_channelz_logger.data,
             "attempt to delete an entry (id=%d) that doesn\'t currently existtransport: received per-RPC creds error with illegal status: %vnet/trace: trace used after finish:\nFinished at:\n%s\nUsed at:\n%selementNoneelementScriptelementStyleelementTextareaelementTitleecdsa: internal error: P256OrdInverse produced an invalid valuegrpc: Compressor is not installed for requested grpc-encoding %qgrpc: client streaming protocol violation: get <nil>, want <EOF>runtime.SetFinalizer: first argument was allocated into an arenareflect.StructOf: struct size would exceed virtual address spacethe stream is rejected because server is draining the connectionjson: invalid number literal, trying to unmarshal %q into Numberheader key %q contains value with non-printable ASCII charactersextension %v has mismatching containing message: got %v, want %vABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credentialsruntime: unexpected error while checking standard file descriptor reflect: indirection through nil pointer to embedded struct field base.baseBalancer: UpdateSubConnState(%v, %+v) called unexpectedlyreceived goaway with non-zero even-numbered numbered..." /* TRUNCATED STRING LITERAL */
             ,0x3f,puVar2,1,1);
  return;
}



// WARNING: Unknown calling convention

void google_golang_org_grpc_internal_channelz___dummyEntry__deleteSelfIfReady(void)

{
  return;
}



void google_golang_org_grpc_internal_channelz___dummyEntry__getParentID(int64 ~r0)

{
  return;
}



// WARNING: Unknown calling convention

void google_golang_org_grpc_internal_channelz_init_0(void)

{
  undefined8 extraout_RAX;
  undefined8 *extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RAX;
  }
  google_golang_org_grpc_internal_ChannelzTurnOffForTesting =
       (func__ **)&PTR_google_golang_org_grpc_internal_channelz_init_0_func1_008eb828;
  return;
}



void google_golang_org_grpc_internal_channelz_RegisterChannel
               (google_golang_org_grpc_internal_channelz_Channel *parent,string target,
               google_golang_org_grpc_internal_channelz_Channel *~r0)

{
  runtime_hmap *~r0_00;
  string *_target;
  map_int64_string ~r0_01;
  map_int64_string extraout_RAX;
  uint64 extraout_RAX_00;
  google_golang_org_grpc_internal_channelz_traceEvent **extraout_RAX_01;
  google_golang_org_grpc_internal_channelz_Channel *extraout_RAX_02;
  google_golang_org_grpc_internal_channelz_Channel *cn;
  google_golang_org_grpc_internal_channelz_Channel *extraout_RAX_03;
  google_golang_org_grpc_internal_channelz_Channel *cn_00;
  google_golang_org_grpc_internal_channelz_ChannelTrace *extraout_RAX_04;
  google_golang_org_grpc_internal_channelz_ChannelTrace *extraout_RAX_05;
  google_golang_org_grpc_internal_channelz_ChannelTrace *extraout_RAX_06;
  google_golang_org_grpc_internal_channelz_ChannelTrace *pgVar1;
  int extraout_RAX_07;
  undefined8 in_RCX;
  int id_00;
  int64 id;
  time_Location *extraout_RCX;
  int cap;
  int64 pid;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *~r0_02;
  int64 extraout_RBX_01;
  void *~r0_03;
  uint8 *extraout_RSI;
  uint8 *puVar2;
  bool isTopChannel;
  void *~r0_04;
  uint8 **extraout_R11;
  time_Location **extraout_R11_00;
  undefined8 *extraout_R11_01;
  int unaff_R14;
  undefined uStack0000000000000018;
  undefined uStack0000000000000019;
  undefined2 uStack000000000000001a;
  uint32 uStack000000000000001c;
  time_Time in_stack_ffffffffffffff80;
  
  target.str = (uint8 *)parent;
  _uStack0000000000000018 = in_RCX;
  while( true ) {
    target.len._0_4_ = SUB84(~r0,0);
    target.len._4_4_ = (undefined4)((uint)~r0 >> 0x20);
    if (*(undefined **)(unaff_R14 + 0x10) < &stack0x00000000) break;
    runtime_morestack_noctxt();
    ~r0 = (google_golang_org_grpc_internal_channelz_Channel *)
          CONCAT44(target.len._4_4_,(undefined4)target.len);
  }
  runtime_newobject((internal_abi_Type *)&DAT_008075e0,~r0);
  ~r0_02 = extraout_RBX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_wbMove((internal_abi_Type *)&DAT_008075e0,~r0_00,&target.len);
    ~r0_02 = extraout_RBX_00;
  }
  *(undefined4 *)&~r0_00->count = (undefined4)target.len;
  *(undefined4 *)((int)&~r0_00->count + 4) = target.len._4_4_;
  ~r0_00->flags = uStack0000000000000018;
  ~r0_00->B = uStack0000000000000019;
  ~r0_00->noverflow = uStack000000000000001a;
  ~r0_00->hash0 = uStack000000000000001c;
  LOCK();
  UNLOCK();
  id_00 = google_golang_org_grpc_internal_channelz_IDGen.id + 1;
  if (google_golang_org_grpc_internal_channelz_curState != 1) {
    google_golang_org_grpc_internal_channelz_IDGen.id =
         google_golang_org_grpc_internal_channelz_IDGen.id + 1;
    runtime_newobject((internal_abi_Type *)&DAT_00894c80,~r0_02);
    *(int *)(extraout_RAX_07 + 0x10) = id_00;
    return;
  }
  google_golang_org_grpc_internal_channelz_IDGen.id =
       google_golang_org_grpc_internal_channelz_IDGen.id + 1;
  runtime_makemap_small(~r0_00);
  runtime_makemap_small((runtime_hmap *)~r0_01);
  time_Now(in_stack_ffffffffffffff80);
  cap = (int)google_golang_org_grpc_internal_channelz_maxTraceEntry;
  runtime_makeslice((internal_abi_Type *)&DAT_007fabe0,0,cap,~r0_04);
  runtime_newobject((internal_abi_Type *)&DAT_00894c80,~r0_03);
  extraout_RAX_02->ID = id_00;
  puVar2 = (uint8 *)~r0_00->count;
  (extraout_RAX_02->RefName).len = *(int *)&~r0_00->flags;
  cn_00 = extraout_RAX_02;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier4();
    *extraout_R11 = extraout_RSI;
    extraout_R11[1] = (uint8 *)~r0_01;
    extraout_R11[2] = (uint8 *)extraout_RAX;
    extraout_R11[3] = target.str;
    cn_00 = extraout_RAX_03;
    puVar2 = extraout_RSI;
  }
  (cn_00->RefName).str = puVar2;
  cn_00->nestedChans = ~r0_01;
  cn_00->subChans = extraout_RAX;
  cn_00->Parent = (google_golang_org_grpc_internal_channelz_Channel *)target.str;
  runtime_newobject((internal_abi_Type *)&DAT_00885a20,~r0_01);
  (extraout_RAX_04->CreationTime).wall = extraout_RAX_00;
  (extraout_RAX_04->CreationTime).ext = extraout_RBX_01;
  pgVar1 = extraout_RAX_04;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = extraout_RCX;
    pgVar1 = extraout_RAX_05;
  }
  (pgVar1->CreationTime).loc = extraout_RCX;
  (pgVar1->Events).len = 0;
  (pgVar1->Events).cap = cap;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier3();
    *extraout_R11_01 = extraout_RAX_01;
    extraout_R11_01[1] = extraout_RAX_06;
    extraout_R11_01[2] = cn_00->trace;
    pgVar1 = extraout_RAX_06;
  }
  (pgVar1->Events).array = extraout_RAX_01;
  cn_00->trace = pgVar1;
  sync_atomic_StorePointer(&(cn_00->ChannelMetrics).Target.v,~r0_00);
  if (cn_00->Parent == (google_golang_org_grpc_internal_channelz_Channel *)0x0) {
    pid = -1;
  }
  else {
    pid = cn_00->Parent->ID;
  }
  google_golang_org_grpc_internal_channelz___channelMap__addChannel
            (google_golang_org_grpc_internal_channelz_db,id_00,cn_00,target.str == (uint8 *)0x0,pid)
  ;
  return;
}



void google_golang_org_grpc_internal_channelz_RegisterSubChannel
               (google_golang_org_grpc_internal_channelz_Channel *parent,string ref,
               google_golang_org_grpc_internal_channelz_SubChannel *~r0)

{
  google_golang_org_grpc_internal_channelz_IDGenerator gVar1;
  google_golang_org_grpc_internal_channelz_SubChannel *extraout_RAX;
  google_golang_org_grpc_internal_channelz_SubChannel *sc;
  google_golang_org_grpc_internal_channelz_SubChannel *extraout_RAX_00;
  google_golang_org_grpc_internal_channelz_SubChannel *sc_00;
  map_int64_string extraout_RAX_01;
  map_int64_string extraout_RAX_02;
  map_int64_string phVar2;
  uint64 extraout_RAX_03;
  google_golang_org_grpc_internal_channelz_traceEvent **extraout_RAX_04;
  google_golang_org_grpc_internal_channelz_ChannelTrace *extraout_RAX_05;
  google_golang_org_grpc_internal_channelz_ChannelTrace *extraout_RAX_06;
  google_golang_org_grpc_internal_channelz_ChannelTrace *extraout_RAX_07;
  google_golang_org_grpc_internal_channelz_ChannelTrace *pgVar3;
  int in_RCX;
  int64 id_00;
  int64 id;
  int64 extraout_RCX;
  time_Location *extraout_RCX_00;
  int cap;
  int64 extraout_RBX;
  void *~r0_00;
  void *~r0_01;
  google_golang_org_grpc_internal_channelz_SubChannel **extraout_R11;
  map_int64_string *extraout_R11_00;
  time_Location **extraout_R11_01;
  undefined8 *extraout_R11_02;
  int unaff_R14;
  int iStack0000000000000018;
  time_Time in_stack_ffffffffffffffa0;
  
  iStack0000000000000018 = in_RCX;
  while (gVar1.id = google_golang_org_grpc_internal_channelz_IDGen.id,
        &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  LOCK();
  google_golang_org_grpc_internal_channelz_IDGen.id =
       google_golang_org_grpc_internal_channelz_IDGen.id + 1;
  UNLOCK();
  runtime_newobject((internal_abi_Type *)&DAT_00892200,~r0);
  id_00 = gVar1.id + 1;
  extraout_RAX->ID = id_00;
  (extraout_RAX->RefName).len = iStack0000000000000018;
  sc_00 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = ~r0;
    extraout_R11[1] = (google_golang_org_grpc_internal_channelz_SubChannel *)parent;
    sc_00 = extraout_RAX_00;
    id_00 = extraout_RCX;
  }
  (sc_00->RefName).str = (uint8 *)~r0;
  sc_00->parent = parent;
  if (google_golang_org_grpc_internal_channelz_curState != 1) {
    return;
  }
  runtime_makemap_small((runtime_hmap *)sc_00);
  phVar2 = extraout_RAX_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_02;
    extraout_R11_00[1] = sc_00->sockets;
    phVar2 = extraout_RAX_02;
  }
  sc_00->sockets = phVar2;
  time_Now(in_stack_ffffffffffffffa0);
  cap = (int)google_golang_org_grpc_internal_channelz_maxTraceEntry;
  runtime_makeslice((internal_abi_Type *)&DAT_007fabe0,0,cap,~r0_01);
