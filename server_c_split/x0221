                if (runtime_writeBarrier._0_4_ != 0) {
                  runtime_gcWriteBarrier1();
                  *extraout_R11_05 = local_58;
                  local_18._8_8_ = extraout_RAX_33;
                }
                *(undefined8 *)local_18._8_8_ = local_58;
                local_18._0_8_ = go_itab__errors_errorString_error;
                runtime_convT((internal_abi_Type *)&DAT_0083f7e0,local_18,
                              go_itab__errors_errorString_error);
                    // WARNING: Subroutine does not return
                runtime_gopanic(in_stack_fffffffffffffeb8);
              }
              v_18 = (int32)(byte)(&DAT_008b1aa6)[iVar3];
              if ((byte)(&DAT_008b1aa6)[iVar3] < 0x80) {
                iVar3 = iVar3 + 1;
              }
              else {
                runtime_decoderune((string)in_stack_fffffffffffffeb8,0x8b1aa6,8,iVar3);
                iVar3 = extraout_RBX_09;
                v_18 = extraout_EAX_02;
              }
            } while (verb != v_18);
            fmt___ss__SkipSpace(s);
            fmt___ss__notEOF(s);
            fmt___ss__floatToken(s,(string)in_stack_fffffffffffffeb8);
            fmt___ss__convertFloat
                      (s,(string)in_stack_fffffffffffffeb8,n_00,
                       (float64)CONCAT44(in_XMM0_Db,in_XMM0_Da));
            *(float *)local_30 = (float)(double)CONCAT44(in_XMM0_Db,in_XMM0_Da);
            return;
          }
        }
        else if ((dVar1 == 0x43cfbb1f) && (local_38 == &DAT_008000e0)) {
          fmt___ss__convertString(s,verb,(string)in_stack_fffffffffffffeb8);
          ~r0.len = (int)in_stack_fffffffffffffed0;
          ~r0.array = (uint8 *)in_stack_fffffffffffffec8;
          ~r0.cap = (int)in_stack_fffffffffffffed8;
          runtime_stringtoslicebyte((runtime_tmpBuf *)0x0,(string)in_stack_fffffffffffffeb8,~r0);
          local_30[1] = extraout_RBX_00;
          local_30[2] = extraout_RCX;
          uVar2 = extraout_RAX_00;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11 = extraout_RAX_01;
            extraout_R11[1] = *local_30;
            uVar2 = extraout_RAX_01;
          }
          *local_30 = uVar2;
          return;
        }
      }
      else if (dVar1 < 0x510ad14e) {
        if (dVar1 == 0x49163278) {
          if (local_38 == &DAT_007f8860) {
            fmt___ss__scanUint(s,verb,0x40,~r0_22);
            *local_30 = extraout_RAX_04;
            return;
          }
        }
        else if ((dVar1 == 0x510ad14d) && (local_38 == &DAT_007f8320)) {
          fmt___ss__scanComplex(s,verb,0x40,(complex128)in_stack_fffffffffffffeb8);
          *(float *)local_30 = (float)(double)CONCAT44(in_XMM0_Db,in_XMM0_Da);
          *(float *)((int)local_30 + 4) = (float)in_XMM1_Qa;
          return;
        }
      }
      else if (dVar1 == 0x62de383d) {
        if (local_38 == &DAT_007f8460) {
          fmt___ss__scanInt(s,verb,0x20,~r0_22);
          *(undefined4 *)local_30 = extraout_EAX_00;
          return;
        }
      }
      else if (dVar1 == 0x6d448d5d) {
        if (local_38 == &DAT_007f83a0) {
          iVar3 = 0;
          do {
            if (7 < iVar3) {
              runtime_intstring((uint8 (*) [4])&stack0xffffffffffffff00,(int)verb,
                                (string)in_stack_fffffffffffffeb8);
              a1_02.len = (int)in_stack_fffffffffffffed0;
              a1_02.str = (uint8 *)in_stack_fffffffffffffec8;
              a2.len = in_stack_fffffffffffffee0;
              a2.str = in_stack_fffffffffffffed8;
              runtime_concatstring4
                        ((runtime_tmpBuf *)0x0,(string)in_stack_fffffffffffffeb8,a1_02,a2,
                         in_stack_fffffffffffffee8,in_stack_fffffffffffffef8);
              local_c0 = ~r0_19;
              local_60 = extraout_RAX_28;
              runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_19);
              extraout_RAX_29[1] = local_c0;
              local_18._8_8_ = extraout_RAX_29;
              if (runtime_writeBarrier._0_4_ != 0) {
                runtime_gcWriteBarrier1();
                *extraout_R11_04 = local_60;
                local_18._8_8_ = extraout_RAX_30;
              }
              *(undefined8 *)local_18._8_8_ = local_60;
              local_18._0_8_ = go_itab__errors_errorString_error;
              runtime_convT((internal_abi_Type *)&DAT_0083f7e0,local_18,
                            go_itab__errors_errorString_error);
                    // WARNING: Subroutine does not return
              runtime_gopanic(in_stack_fffffffffffffeb8);
            }
            v_19 = (int32)(byte)(&DAT_008b1aa6)[iVar3];
            if ((byte)(&DAT_008b1aa6)[iVar3] < 0x80) {
              iVar3 = iVar3 + 1;
            }
            else {
              runtime_decoderune((string)in_stack_fffffffffffffeb8,0x8b1aa6,8,iVar3);
              iVar3 = extraout_RBX_08;
              v_19 = extraout_EAX_01;
            }
          } while (verb != v_19);
          fmt___ss__SkipSpace(s);
          fmt___ss__notEOF(s);
          fmt___ss__floatToken(s,(string)in_stack_fffffffffffffeb8);
          fmt___ss__convertFloat
                    (s,(string)in_stack_fffffffffffffeb8,n,(float64)CONCAT44(in_XMM0_Db,in_XMM0_Da))
          ;
          *local_30 = CONCAT44(in_XMM0_Db,in_XMM0_Da);
          return;
        }
      }
      else if ((dVar1 == 0x6e78e923) && (local_38 == &DAT_007f8620)) {
        fmt___ss__scanUint(s,verb,0x40,~r0_22);
        *local_30 = extraout_RAX_03;
        return;
      }
    }
    else if (dVar1 < 0xba585d68) {
      if (dVar1 < 0x889ce7f9) {
        if (dVar1 == 0x7afcd172) {
          if (local_38 == &DAT_007f82e0) {
            fmt___ss__scanComplex(s,verb,0x80,(complex128)in_stack_fffffffffffffeb8);
            *local_30 = CONCAT44(in_XMM0_Db,in_XMM0_Da);
            local_30[1] = in_XMM1_Qa;
            return;
          }
        }
        else if ((dVar1 == 0x889ce7f8) && (local_38 == &DAT_007f8960)) {
          fmt___ss__scanUint(s,verb,0x10,~r0_22);
          *(undefined2 *)local_30 = extraout_AX;
          return;
        }
      }
      else if (dVar1 == 0x8f96facd) {
        if (local_38 == &DAT_007f8520) {
          fmt___ss__scanUint(s,verb,0x40,~r0_22);
          *local_30 = extraout_RAX_05;
          return;
        }
      }
      else if ((dVar1 == 0xba585d67) && (local_38 == &DAT_007f83e0)) {
        fmt___ss__scanInt(s,verb,0x40,~r0_22);
        *local_30 = extraout_RAX_06;
        return;
      }
    }
    else if (dVar1 < 0xd6631a7d) {
      if (dVar1 == 0xc3230e0b) {
        if (local_38 == &DAT_007f8420) {
          fmt___ss__scanInt(s,verb,0x10,~r0_22);
          *(undefined2 *)local_30 = extraout_AX_00;
          return;
        }
      }
      else if ((dVar1 == 0xd6631a7c) && (local_38 == &DAT_007f84e0)) {
        fmt___ss__scanInt(s,verb,8,~r0_22);
        *(undefined *)local_30 = extraout_AL;
        return;
      }
    }
    else if (dVar1 == 0xe47f76c1) {
      if (local_38 == &DAT_007f8220) {
        fmt___ss__convertString(s,verb,(string)in_stack_fffffffffffffeb8);
        local_30[1] = extraout_RBX_01;
        uVar2 = extraout_RAX_07;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_00 = extraout_RAX_08;
          extraout_R11_00[1] = *extraout_RCX_00;
          uVar2 = extraout_RAX_08;
          local_30 = extraout_RCX_00;
        }
        *local_30 = uVar2;
        return;
      }
    }
    else if (dVar1 == 0xf3b50de0) {
      if (local_38 == &DAT_007f85e0) {
        fmt___ss__scanUint(s,verb,8,~r0_22);
        *(undefined *)local_30 = extraout_AL_00;
        return;
      }
    }
    else if ((dVar1 == 0xfcd60fce) && (local_38 == &DAT_007f82a0)) {
      fmt___ss__scanBool(s,verb,~r0_14);
      *(undefined *)local_30 = extraout_AL_01;
      return;
    }
  }
  if (local_38 == (undefined *)0x0) {
    local_38 = (undefined *)0x0;
    local_30 = (undefined8 *)0x0;
    local_a0 = 0;
  }
  else {
    local_28 = local_38;
    local_20 = local_30;
    if (local_38 == (undefined *)0x0) {
      local_38 = (undefined *)0x0;
      local_30 = (undefined8 *)0x0;
      local_a0 = 0;
    }
    else {
      local_a0 = (uint)((byte)local_38[0x17] & 0x1f);
      if ((local_38[0x17] & 0x20) == 0) {
        local_a0 = local_a0 | 0x80;
      }
    }
  }
  if (((dword)local_a0 & 0x1f) != 0x16) {
    if (local_a0 == 0) {
      v_37.flag = (reflect_flag)in_stack_fffffffffffffec8;
      v_37.typ_ = in_stack_fffffffffffffeb8._type;
      v_37.ptr = in_stack_fffffffffffffeb8.data;
      ~r0_08.data = in_stack_fffffffffffffed8;
      ~r0_08.tab = in_stack_fffffffffffffed0;
      reflect_Value_typeSlow(v_37,~r0_08);
      puVar6 = extraout_RAX_27;
      local_38 = extraout_RBX_07;
    }
    else {
      puVar6 = go_itab__reflect_rtype_reflect_Type;
    }
    (**(code **)(puVar6 + 0xf8))(local_38);
    a1_01.len = (int)in_stack_fffffffffffffed0;
    a1_01.str = (uint8 *)in_stack_fffffffffffffec8;
    ~r0_13.len = in_stack_fffffffffffffee0;
    ~r0_13.str = in_stack_fffffffffffffed8;
    runtime_concatstring2((runtime_tmpBuf *)0x0,(string)in_stack_fffffffffffffeb8,a1_01,~r0_13);
    local_c8 = ~r0_18;
    local_68 = extraout_RAX_24;
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_18);
    extraout_RAX_25[1] = local_c8;
    local_18._8_8_ = extraout_RAX_25;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_03 = local_68;
      local_18._8_8_ = extraout_RAX_26;
    }
    *(undefined8 *)local_18._8_8_ = local_68;
    local_18._0_8_ = go_itab__errors_errorString_error;
    runtime_convT((internal_abi_Type *)&DAT_0083f7e0,local_18,go_itab__errors_errorString_error);
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_fffffffffffffeb8);
  }
  v_20.flag = (reflect_flag)in_stack_fffffffffffffec8;
  v_20.typ_ = in_stack_fffffffffffffeb8._type;
  v_20.ptr = in_stack_fffffffffffffeb8.data;
  ~r0_09.ptr = in_stack_fffffffffffffed8;
  ~r0_09.typ_ = (internal_abi_Type *)in_stack_fffffffffffffed0;
  ~r0_09.flag = in_stack_fffffffffffffee0;
  local_90 = local_38;
  local_88 = local_30;
  reflect_Value_Elem(v_20,~r0_09);
  uVar5 = (uint)(extraout_ECX & 0x1f);
  local_40 = extraout_RAX_09;
  if (uVar5 < 0xd) {
    if (uVar5 == 1) {
      fmt___ss__scanBool(s,verb,SUB41(extraout_ECX,0));
      v_25.flag = (reflect_flag)in_stack_fffffffffffffec8;
      v_25.typ_ = in_stack_fffffffffffffeb8._type;
      v_25.ptr = in_stack_fffffffffffffeb8.data;
      reflect_Value_SetBool(v_25,SUB81(local_40,0));
    }
    else if (uVar5 - 2 < 5) {
      if ((extraout_ECX >> 9 & 1) == 0) {
        puVar6 = go_itab__reflect_rtype_reflect_Type;
      }
      else {
        v_21.flag = (reflect_flag)in_stack_fffffffffffffec8;
        v_21.typ_ = in_stack_fffffffffffffeb8._type;
        v_21.ptr = in_stack_fffffffffffffeb8.data;
        ~r0_01.data = in_stack_fffffffffffffed8;
        ~r0_01.tab = in_stack_fffffffffffffed0;
        reflect_Value_typeSlow(v_21,~r0_01);
        puVar6 = extraout_RAX_10;
      }
      iVar3 = (**(code **)(puVar6 + 0x28))();
      fmt___ss__scanInt(s,verb,iVar3,~r0_23);
      v_22.flag = (reflect_flag)in_stack_fffffffffffffec8;
      v_22.typ_ = in_stack_fffffffffffffeb8._type;
      v_22.ptr = in_stack_fffffffffffffeb8.data;
      reflect_Value_SetInt(v_22,local_40);
    }
    else {
      if (uVar5 < 7) {
LAB_004f7d4f:
        if (((dword)local_a0 >> 9 & 1) == 0) {
          puVar6 = go_itab__reflect_rtype_reflect_Type;
          puVar4 = local_90;
        }
        else {
          v_36.flag = (reflect_flag)in_stack_fffffffffffffec8;
          v_36.typ_ = in_stack_fffffffffffffeb8._type;
          v_36.ptr = in_stack_fffffffffffffeb8.data;
          ~r0_07.data = in_stack_fffffffffffffed8;
          ~r0_07.tab = in_stack_fffffffffffffed0;
          reflect_Value_typeSlow(v_36,~r0_07);
          puVar6 = extraout_RAX_23;
          puVar4 = extraout_RBX_06;
        }
        (**(code **)(puVar6 + 0xf8))(puVar4);
        a1_00.len = (int)in_stack_fffffffffffffed0;
        a1_00.str = (uint8 *)in_stack_fffffffffffffec8;
        ~r0_12.len = in_stack_fffffffffffffee0;
        ~r0_12.str = in_stack_fffffffffffffed8;
        runtime_concatstring2((runtime_tmpBuf *)0x0,(string)in_stack_fffffffffffffeb8,a1_00,~r0_12);
        local_78 = extraout_RAX_20;
        runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_17);
        extraout_RAX_21[1] = ~r0_17;
        local_18._8_8_ = extraout_RAX_21;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_02 = local_78;
          local_18._8_8_ = extraout_RAX_22;
        }
        *(undefined8 *)local_18._8_8_ = local_78;
        local_18._0_8_ = go_itab__errors_errorString_error;
        runtime_convT((internal_abi_Type *)&DAT_0083f7e0,local_18,go_itab__errors_errorString_error)
        ;
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffeb8);
      }
      if ((extraout_ECX >> 9 & 1) == 0) {
        puVar6 = go_itab__reflect_rtype_reflect_Type;
      }
      else {
        v_23.flag = (reflect_flag)in_stack_fffffffffffffec8;
        v_23.typ_ = in_stack_fffffffffffffeb8._type;
        v_23.ptr = in_stack_fffffffffffffeb8.data;
        ~r0_02.data = in_stack_fffffffffffffed8;
        ~r0_02.tab = in_stack_fffffffffffffed0;
        reflect_Value_typeSlow(v_23,~r0_02);
        puVar6 = extraout_RAX_11;
      }
      iVar3 = (**(code **)(puVar6 + 0x28))();
      fmt___ss__scanUint(s,verb,iVar3,~r0_24);
      v_24.flag = (reflect_flag)in_stack_fffffffffffffec8;
      v_24.typ_ = in_stack_fffffffffffffeb8._type;
      v_24.ptr = in_stack_fffffffffffffeb8.data;
      reflect_Value_SetUint(v_24,local_40);
    }
  }
  else if (uVar5 < 0x11) {
    if (uVar5 < 0xf) {
      fmt___ss__SkipSpace(s);
      fmt___ss__notEOF(s);
      fmt___ss__floatToken(s,(string)in_stack_fffffffffffffeb8);
      local_38 = (undefined *)extraout_RAX_13;
      if ((extraout_ECX >> 9 & 1) == 0) {
        puVar6 = go_itab__reflect_rtype_reflect_Type;
      }
      else {
        v_28.flag = (reflect_flag)in_stack_fffffffffffffec8;
        v_28.typ_ = in_stack_fffffffffffffeb8._type;
        v_28.ptr = in_stack_fffffffffffffeb8.data;
        ~r0_04.data = in_stack_fffffffffffffed8;
        ~r0_04.tab = in_stack_fffffffffffffed0;
        reflect_Value_typeSlow(v_28,~r0_04);
        puVar6 = extraout_RAX_14;
        local_40 = extraout_RBX_02;
      }
      ~r0_25 = (float64)(**(code **)(puVar6 + 0x28))(local_40);
      fmt___ss__convertFloat(s,(string)in_stack_fffffffffffffeb8,(int)local_38,~r0_25);
      v_29.flag = (reflect_flag)in_stack_fffffffffffffec8;
      v_29.typ_ = in_stack_fffffffffffffeb8._type;
      v_29.ptr = in_stack_fffffffffffffeb8.data;
      reflect_Value_SetFloat(v_29,~r0_25);
    }
    else {
      if ((extraout_ECX >> 9 & 1) == 0) {
        puVar6 = go_itab__reflect_rtype_reflect_Type;
      }
      else {
        v_26.flag = (reflect_flag)in_stack_fffffffffffffec8;
        v_26.typ_ = in_stack_fffffffffffffeb8._type;
        v_26.ptr = in_stack_fffffffffffffeb8.data;
        ~r0_03.data = in_stack_fffffffffffffed8;
        ~r0_03.tab = in_stack_fffffffffffffed0;
        reflect_Value_typeSlow(v_26,~r0_03);
        puVar6 = extraout_RAX_12;
      }
      iVar3 = (**(code **)(puVar6 + 0x28))();
      fmt___ss__scanComplex(s,verb,iVar3,(complex128)in_stack_fffffffffffffeb8);
      v_27.flag = (reflect_flag)in_stack_fffffffffffffec8;
      v_27.typ_ = in_stack_fffffffffffffeb8._type;
      v_27.ptr = in_stack_fffffffffffffeb8.data;
      auVar7._8_8_ = in_stack_fffffffffffffed8;
      auVar7._0_8_ = in_stack_fffffffffffffed0;
      reflect_Value_SetComplex(v_27,auVar7);
    }
  }
  else if (uVar5 == 0x17) {
    if ((extraout_ECX >> 9 & 1) == 0) {
      puVar6 = go_itab__reflect_rtype_reflect_Type;
      local_98 = extraout_RAX_09;
    }
    else {
      v_31.flag = (reflect_flag)in_stack_fffffffffffffec8;
      v_31.typ_ = in_stack_fffffffffffffeb8._type;
      v_31.ptr = in_stack_fffffffffffffeb8.data;
      ~r0_05.data = in_stack_fffffffffffffed8;
      ~r0_05.tab = in_stack_fffffffffffffed0;
      reflect_Value_typeSlow(v_31,~r0_05);
      local_98 = extraout_RBX_03;
      puVar6 = extraout_RAX_15;
    }
    auVar7 = (**(code **)(puVar6 + 0x48))();
    iVar3 = (**(code **)(auVar7._0_8_ + 0x98))(auVar7._8_8_);
    if (iVar3 != 8) {
      if (((dword)local_a0 >> 9 & 1) == 0) {
        puVar6 = go_itab__reflect_rtype_reflect_Type;
        puVar4 = local_90;
      }
      else {
        v_35.flag = (reflect_flag)in_stack_fffffffffffffec8;
        v_35.typ_ = in_stack_fffffffffffffeb8._type;
        v_35.ptr = in_stack_fffffffffffffeb8.data;
        ~r0_06.data = in_stack_fffffffffffffed8;
        ~r0_06.tab = in_stack_fffffffffffffed0;
        reflect_Value_typeSlow(v_35,~r0_06);
        puVar6 = extraout_RAX_19;
        puVar4 = extraout_RBX_05;
      }
      (**(code **)(puVar6 + 0xf8))(puVar4);
      a1.len = (int)in_stack_fffffffffffffed0;
      a1.str = (uint8 *)in_stack_fffffffffffffec8;
      ~r0_11.len = in_stack_fffffffffffffee0;
      ~r0_11.str = in_stack_fffffffffffffed8;
      runtime_concatstring2((runtime_tmpBuf *)0x0,(string)in_stack_fffffffffffffeb8,a1,~r0_11);
      local_70 = extraout_RAX_16;
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_16);
      extraout_RAX_17[1] = ~r0_16;
      local_18._8_8_ = extraout_RAX_17;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_01 = local_70;
        local_18._8_8_ = extraout_RAX_18;
      }
      *(undefined8 *)local_18._8_8_ = local_70;
      local_18._0_8_ = go_itab__errors_errorString_error;
      runtime_convT((internal_abi_Type *)&DAT_0083f7e0,local_18,go_itab__errors_errorString_error);
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_fffffffffffffeb8);
    }
    fmt___ss__convertString(s,verb,(string)in_stack_fffffffffffffeb8);
    ~r0_00.ptr = in_stack_fffffffffffffed0;
    ~r0_00.typ_ = (internal_abi_Type *)in_stack_fffffffffffffec8;
    ~r0_00.flag = (reflect_flag)in_stack_fffffffffffffed8;
    reflect_MakeSlice((reflect_Type)in_stack_fffffffffffffeb8,(int)puVar6,local_98,~r0_00);
    v_32.flag = (reflect_flag)in_stack_fffffffffffffec8;
    v_32.typ_ = in_stack_fffffffffffffeb8._type;
    v_32.ptr = in_stack_fffffffffffffeb8.data;
    x_00.ptr = in_stack_fffffffffffffed8;
    x_00.typ_ = (internal_abi_Type *)in_stack_fffffffffffffed0;
    x_00.flag = in_stack_fffffffffffffee0;
    reflect_Value_Set(v_32,x_00);
    for (iVar3 = 0; iVar3 < extraout_RBX_04; iVar3 = iVar3 + 1) {
      v_33.flag = (reflect_flag)in_stack_fffffffffffffec8;
      v_33.typ_ = in_stack_fffffffffffffeb8._type;
      v_33.ptr = in_stack_fffffffffffffeb8.data;
      ~r0_10.ptr = in_stack_fffffffffffffed8;
      ~r0_10.typ_ = (internal_abi_Type *)in_stack_fffffffffffffed0;
      ~r0_10.flag = in_stack_fffffffffffffee0;
      reflect_Value_Index(v_33,local_40,~r0_10);
      v_34.flag = (reflect_flag)in_stack_fffffffffffffec8;
      v_34.typ_ = in_stack_fffffffffffffeb8._type;
      v_34.ptr = in_stack_fffffffffffffeb8.data;
      reflect_Value_SetUint(v_34,x_01);
    }
  }
  else {
    if (uVar5 != 0x18) goto LAB_004f7d4f;
    fmt___ss__convertString(s,verb,(string)in_stack_fffffffffffffeb8);
    v_30.flag = (reflect_flag)in_stack_fffffffffffffec8;
    v_30.typ_ = in_stack_fffffffffffffeb8._type;
    v_30.ptr = in_stack_fffffffffffffeb8.data;
    x.len = (int)in_stack_fffffffffffffed8;
    x.str = (uint8 *)in_stack_fffffffffffffed0;
    reflect_Value_SetString(v_30,x);
  }
  return;
}



// WARNING: Unknown calling convention

void fmt_errorHandler(error *errp)

{
  char extraout_AL;
  undefined *extraout_RAX;
  error *extraout_RAX_00;
  runtime_itab *tab;
  char cVar1;
  error *extraout_RCX;
  runtime_itab **extraout_RBX;
  void *x;
  void *extraout_RBX_00;
  void *pvVar2;
  runtime_itab *extraout_RSI;
  runtime_itab *prVar3;
  bool ~r0;
  runtime_itab **extraout_R11;
  void **extraout_R11_00;
  int unaff_R14;
  error *peStack0000000000000008;
  interface___ in_stack_ffffffffffffffb0;
  runtime_iface in_stack_ffffffffffffffc0;
  
  peStack0000000000000008 = errp;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_gorecover((uintptr)&stack0x00000008,in_stack_ffffffffffffffb0);
  if (extraout_RAX != (undefined *)0x0) {
    if (extraout_RAX != &DAT_0083f7e0) {
      runtime_assertE2I2((internal_abi_InterfaceType *)&DAT_00835ac0,in_stack_ffffffffffffffb0,
                         in_stack_ffffffffffffffc0);
      if (tab != (runtime_itab *)0x0) {
        if (io_EOF.tab == tab) {
          runtime_ifaceeq(tab,x,io_EOF.data,~r0);
          cVar1 = extraout_AL;
        }
        else {
          cVar1 = '\0';
        }
        if (cVar1 != '\0') {
          peStack0000000000000008->tab = tab;
          pvVar2 = x;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_00 = extraout_RBX_00;
            extraout_R11_00[1] = extraout_RCX->data;
            peStack0000000000000008 = extraout_RCX;
            pvVar2 = extraout_RBX_00;
          }
          peStack0000000000000008->data = pvVar2;
          return;
        }
      }
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffb0);
    }
    prVar3 = extraout_RBX[1];
    peStack0000000000000008->tab = *extraout_RBX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RSI;
      extraout_R11[1] = (runtime_itab *)extraout_RAX_00->data;
      peStack0000000000000008 = extraout_RAX_00;
      prVar3 = extraout_RSI;
    }
    peStack0000000000000008->data = prVar3;
  }
  return;
}



// DWARF original prototype: void fmt.(*ss).doScan(fmt.ss * s, []interface_{} a, int numProcessed,
// int numProcessed, error err)

void fmt___ss__doScan(fmt_ss *s,__interface___ a,int numProcessed,int numProcessed_1,error err)

{
  bool bVar1;
  sdword extraout_EAX;
  int32 r;
  char **extraout_RAX;
  int iVar2;
  void *extraout_RBX;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff80;
  ushort local_5c;
  ushort uStack_5a;
  error err_local;
  undefined local_30 [16];
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_30._8_8_ = &err_local;
  local_30._0_8_ = fmt___ss__doScan_func1;
  local_10 = (code **)local_30;
  for (iVar2 = 0; iVar2 < numProcessed_1; iVar2 = iVar2 + 1) {
    fmt___ss__scanOne(s,0x76,in_stack_ffffffffffffff80);
    numProcessed = numProcessed + 0x10;
  }
  if ((s->ssave).nlIsEnd != false) {
    while ((fmt___ss__getRune(s,(int32)numProcessed), extraout_EAX != 10 && (extraout_EAX != -1))) {
      if (extraout_EAX < 0x10000) {
        for (numProcessed = 0; numProcessed < fmt_space.len; numProcessed = numProcessed + 1) {
          local_5c = SUB42(fmt_space.array[numProcessed],0);
          if ((ushort)extraout_EAX < local_5c) {
            bVar1 = false;
            goto LAB_004f84aa;
          }
          uStack_5a = SUB42(fmt_space.array[numProcessed],2);
          if ((ushort)extraout_EAX <= uStack_5a) {
            bVar1 = true;
            goto LAB_004f84aa;
          }
        }
        bVar1 = false;
      }
      else {
        bVar1 = false;
        numProcessed = (int)extraout_RBX;
      }
LAB_004f84aa:
      if (!bVar1) {
        runtime_newobject((internal_abi_Type *)&DAT_0083e560,(void *)numProcessed);
        extraout_RAX[1] = (char *)0x10;
        *extraout_RAX =
             "expected newlineinvalid address hostLookupOrder=/etc/resolv.confnon-IPv4 addressnon-IPv6 addressunknown network no colon on line: value of type integer overflowgcshrinkstackofftracefpunwindoffGC scavenge waitGC worker (idle)SIGNONE: no trap out of bounds [/gc/gogc:percent, not a functiongc: unswept span KiB work (bg),  mheap.sweepgen=runtime: nelems=workbuf is emptymSpanList.removemSpanList.insertbad special kindbad summary dataruntime: addr = runtime: base = runtime: head =  already; errno=\nruntime stack:\ninvalid g statuscastogscanstatusbad g transitionschedule: in cgoGOTRACEBACK=nonereflect mismatch untyped locals missing stackmapbad symbol tablenon-Go function\n not in ranges:\nsigaction failedinvalid argumentinvalid exchangeobject is remotemessage too longno route to hostremote I/O errorsource_code_infocc_enable_arenascsharp_namespacephp_class_prefixclient_streamingserver_streamingedition_defaultsmessage_encodingidentifier_valueleading_commentsunknown type: %Treflect.MakeFuncDeadlineExceededPermissionDeniedINVALID_ARGUMENTinvalid code: %dinvalid code: %q\"ALREADY_EXISTS\"ServerName: %q, Attributes: %v, <stream: %p, %v>^{h(?::(\\d+))?}$^{m(?::(\\d+))?}$after object keyhttp: nil Cookiecontent-encodingcontent-languagecontent-locationwww-authenticate%s %s HTTP/1.1\r\nUser-Agent: %s\r\nAlready ReportedMultiple ChoicesPayment RequiredUpgrade RequiredContent-Length: SETTINGS_TIMEOUTFRAME_SIZE_ERRORout of range: %q2384185791015625Imperial_AramaicMeroitic_CursiveZanabazar_Squareinvalid ip:port invalid AddrPortinvalid dns nameunpacking headerRCodeFormatErrorGODEBUG: value \"must be positiveinvalid encodingregexp: Compile(quoted-printableContent-Language"
        ;
        local_20._8_8_ = extraout_RAX;
        local_20._0_8_ = go_itab__errors_errorString_error;
        runtime_convT((internal_abi_Type *)&DAT_0083f7e0,local_20,go_itab__errors_errorString_error)
        ;
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffff80);
      }
    }
  }
  (**local_10)();
  return;
}



// WARNING: Unknown calling convention

void fmt___ss__doScan_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  fmt_errorHandler(*(error **)(in_RDX + 8));
  return;
}



void type__eq_fmt_readRune(fmt_readRune *p,fmt_readRune *q,bool r)

{
  runtime_itab *tab;
  undefined in_DIL;
  undefined extraout_DIL;
  int unaff_R14;
  fmt_readRune *pfStack0000000000000008;
  fmt_readRune *pfStack0000000000000010;
  
  pfStack0000000000000008 = p;
  pfStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  tab = (pfStack0000000000000008->reader).tab;
  if ((pfStack0000000000000010->reader).tab == tab) {
    runtime_ifaceeq(tab,(pfStack0000000000000008->reader).data,
                    (pfStack0000000000000010->reader).data,(bool)in_DIL);
  }
  return;
}



void type__eq_fmt_ssave(fmt_ssave *p,fmt_ssave *q,bool r)

{
  if ((((q->validSave == p->validSave) && (q->nlIsEnd == p->nlIsEnd)) &&
      (q->nlIsSpace == p->nlIsSpace)) && ((q->argLimit == p->argLimit && (q->limit == p->limit)))) {
    return;
  }
  return;
}



void type__eq_fmt_fmt(fmt_fmt *p,fmt_fmt *q,bool r)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((((q->buf == p->buf) && ((q->fmtFlags).widPresent == (p->fmtFlags).widPresent)) &&
        ((q->fmtFlags).precPresent == (p->fmtFlags).precPresent)) &&
       (((q->fmtFlags).minus == (p->fmtFlags).minus && ((q->fmtFlags).plus == (p->fmtFlags).plus))))
      && (((q->fmtFlags).sharp == (p->fmtFlags).sharp &&
          (((q->fmtFlags).space == (p->fmtFlags).space && ((q->fmtFlags).zero == (p->fmtFlags).zero)
           ))))) &&
     (((q->fmtFlags).plusV == (p->fmtFlags).plusV && ((q->fmtFlags).sharpV == (p->fmtFlags).sharpV))
     )) {
    runtime_memequal();
  }
  return;
}



void type__eq_fmt_wrapError(fmt_wrapError *p,fmt_wrapError *q,bool r)

{
  runtime_itab *tab;
  char extraout_AL;
  bool ~r0;
  int unaff_R14;
  fmt_wrapError *pfStack0000000000000008;
  fmt_wrapError *pfStack0000000000000010;
  
  pfStack0000000000000008 = p;
  pfStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((pfStack0000000000000010->msg).len == (pfStack0000000000000008->msg).len) &&
      (runtime_memequal(), extraout_AL != '\0')) &&
     (tab = (pfStack0000000000000008->err).tab, (pfStack0000000000000010->err).tab == tab)) {
    runtime_ifaceeq(tab,(pfStack0000000000000008->err).data,(pfStack0000000000000010->err).data,~r0)
    ;
  }
  return;
}



void strings___Builder__String(strings_Builder *b,string ~r0)

{
  uint8 *puVar1;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  puVar1 = (b->buf).array;
  if ((uint)(b->buf).len <= (uint)-(int)puVar1) {
    return;
  }
  if (puVar1 != (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringlen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafestringnilptr();
}



void strings___Builder__Len(strings_Builder *b,int ~r0)

{
  return;
}



void strings___Builder__Cap(strings_Builder *b,int ~r0)

{
  return;
}



// WARNING: Unknown calling convention

void strings___Builder__Reset(strings_Builder *b)

{
  strings_Builder *extraout_RAX;
  strings_Builder *extraout_RAX_00;
  undefined8 extraout_RCX;
  undefined8 extraout_RCX_00;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  undefined in_XMM15 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RCX;
    b = extraout_RAX;
  }
  b->addr = (strings_Builder *)0x0;
  (b->buf).len = in_XMM15._0_8_;
  (b->buf).cap = in_XMM15._8_8_;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = extraout_RCX_00;
    b = extraout_RAX_00;
  }
  (b->buf).array = (uint8 *)0x0;
  return;
}



// WARNING: Unknown calling convention

void strings___Builder__grow(strings_Builder *b,int n)

{
  uint __n;
  uint8 *__dest;
  uint8 *extraout_RAX;
  uint8 *puVar1;
  uint extraout_RCX;
  uint8 **extraout_R11;
  int unaff_R14;
  strings_Builder *psStack0000000000000008;
  __uint8 in_stack_ffffffffffffffc8;
  
  psStack0000000000000008 = b;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  internal_bytealg_MakeNoZero(n + (psStack0000000000000008->buf).cap * 2,in_stack_ffffffffffffffc8);
  __n = (psStack0000000000000008->buf).len;
  if (__n <= extraout_RCX) {
    puVar1 = (psStack0000000000000008->buf).array;
    if (__dest != puVar1) {
      runtime_memmove(__dest,puVar1,__n);
    }
    (psStack0000000000000008->buf).len = __n;
    (psStack0000000000000008->buf).cap = extraout_RCX;
    puVar1 = __dest;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX;
      extraout_R11[1] = (psStack0000000000000008->buf).array;
      puVar1 = extraout_RAX;
    }
    (psStack0000000000000008->buf).array = puVar1;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceAcap();
}



// WARNING: Unknown calling convention

void strings___Builder__Grow(strings_Builder *b,int n)

{
  strings_Builder *extraout_RAX;
  int extraout_RBX;
  strings_Builder **extraout_R11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (b->addr == (strings_Builder *)0x0) {
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX;
      extraout_R11[1] = extraout_RAX->addr;
      b = extraout_RAX;
      n = extraout_RBX;
    }
    b->addr = b;
  }
  else if (b != b->addr) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe8);
  }
  if (-1 < n) {
    if ((b->buf).cap - (b->buf).len < n) {
      strings___Builder__grow(b,n);
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe8);
}



void strings___Builder__Write(strings_Builder *b,__uint8 p,int ~r0,error ~r1)

{
  int iVar1;
  runtime_slice ~r0_00;
  strings_Builder *extraout_RAX;
  uint8 *extraout_RAX_00;
  size_t in_RCX;
  size_t extraout_RCX;
  uint extraout_RCX_00;
  uint oldCap;
  void *extraout_RBX;
  uint extraout_RBX_00;
  strings_Builder *extraout_RSI;
  uint newLen;
  uint8 *oldPtr;
  strings_Builder **extraout_R11;
  uint8 **extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffb8;
  int in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (b->addr == (strings_Builder *)0x0) {
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX;
      extraout_R11[1] = extraout_RAX->addr;
      b = extraout_RAX;
      in_RCX = extraout_RCX;
      ~r0 = (int)extraout_RBX;
    }
    b->addr = b;
  }
  else if (b != b->addr) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb8);
  }
  oldCap = (b->buf).cap;
  iVar1 = (b->buf).len;
  newLen = iVar1 + in_RCX;
  oldPtr = (b->buf).array;
  if (oldCap < newLen) {
    ~r0_00.cap = in_stack_ffffffffffffffc8;
    ~r0_00.array = in_stack_ffffffffffffffb8._type;
    ~r0_00.len = (int)in_stack_ffffffffffffffb8.data;
    runtime_growslice(oldPtr,newLen,oldCap,in_RCX,(internal_abi_Type *)&DAT_00807920,~r0_00);
    oldCap = extraout_RCX_00;
    newLen = extraout_RBX_00;
    oldPtr = extraout_RAX_00;
  }
  runtime_memmove(oldPtr + iVar1,(void *)~r0,in_RCX);
  (b->buf).len = newLen;
  (b->buf).cap = oldCap;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = oldPtr;
    extraout_R11_00[1] = (extraout_RSI->buf).array;
    b = extraout_RSI;
  }
  (b->buf).array = oldPtr;
  return;
}



void strings___Builder__WriteByte(strings_Builder *b,uint8 c,error ~r0)

{
  uint oldCap;
  runtime_slice ~r0_00;
  strings_Builder *extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *extraout_RAX_01;
  uint8 *oldPtr;
  int extraout_RCX;
  uint newLen;
  uint8 extraout_BL;
  uint extraout_RBX;
  uint extraout_RBX_00;
  strings_Builder **extraout_R11;
