      originalAddr.len = (int)in_stack_ffffffffffffff00;
      originalAddr.str = in_stack_fffffffffffffef8;
      ~r0_02.len = (int)in_stack_ffffffffffffff10.tab;
      ~r0_02.cap = (int)in_stack_ffffffffffffff10.data;
      ~r0_02.array = in_stack_ffffffffffffff08;
      ~r1_00.data = in_stack_ffffffffffffff28;
      ~r1_00.tab = in_stack_ffffffffffffff20;
      net_filterAddrList(filter,ips,local_88,originalAddr,~r0_02,~r1_00);
      return;
    }
    return;
  }
  local_48 = in_XMM15._8_8_;
  local_58 = local_70;
  pvStack_50 = local_70;
  local_40 = in_XMM15;
  if (in_RSI == 2) {
    if (*(short *)in_RDI != 0x7069) goto LAB_005f00df;
LAB_005efc58:
    runtime_newobject((internal_abi_Type *)&DAT_0084e9e0,in_RBX);
    extraout_RAX_01[1] = pvStack_50;
    extraout_RAX_01[2] = local_48;
    local_a0 = extraout_RAX_01;
    ~r0_04 = local_58;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = extraout_RBX_01;
      local_a0 = extraout_RAX_02;
      ~r0_04 = extraout_RBX_01;
    }
    *local_a0 = ~r0_04;
    local_a0[4] = (void *)local_40._8_8_;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = (void *)local_40._0_8_;
      local_a0 = extraout_RAX_03;
      ~r0_04 = extraout_RBX_02;
    }
    local_a0[3] = (void *)local_40._0_8_;
    puVar2 = go_itab__net_IPAddr_net_Addr;
  }
  else {
    if (in_RSI == 3) {
      if (*(char *)in_RDI < 'j') {
        if (((*(short *)in_RDI != 0x7069) || (*(char *)((int)in_RDI + 2) != '4')) &&
           ((*(short *)in_RDI != 0x7069 || (*(char *)((int)in_RDI + 2) != '6')))) goto LAB_005f00df;
        goto LAB_005efc58;
      }
      if ((*(short *)in_RDI == 0x6374) && (*(char *)((int)in_RDI + 2) == 'p')) {
LAB_005efd1c:
        runtime_newobject((internal_abi_Type *)&DAT_0085dd00,in_RBX);
        extraout_RAX_04[1] = pvStack_50;
        extraout_RAX_04[2] = local_48;
        local_a0 = extraout_RAX_04;
        ~r0_04 = local_58;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_01 = extraout_RBX_03;
          local_a0 = extraout_RAX_05;
          ~r0_04 = extraout_RBX_03;
        }
        *local_a0 = ~r0_04;
        local_a0[3] = pvVar4;
        local_a0[5] = (void *)local_40._8_8_;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_02 = (void *)local_40._0_8_;
          local_a0 = extraout_RAX_06;
          ~r0_04 = extraout_RBX_04;
        }
        local_a0[4] = (void *)local_40._0_8_;
        puVar2 = go_itab__net_TCPAddr_net_Addr;
        goto LAB_005efe27;
      }
      if ((*(short *)in_RDI != 0x6475) || (*(char *)((int)in_RDI + 2) != 'p')) goto LAB_005f00df;
    }
    else {
      if (in_RSI != 4) {
LAB_005f00df:
        a1.len = (int)in_stack_fffffffffffffef8;
        a1.str = in_stack_fffffffffffffef0;
        ~r0_01.len = (int)in_stack_ffffffffffffff08;
        ~r0_01.str = in_stack_ffffffffffffff00;
        runtime_concatstring2((runtime_tmpBuf *)0x0,(string)in_stack_fffffffffffffee0,a1,~r0_01);
        runtime_convTstring((string)in_stack_fffffffffffffee0,x_00);
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffee0);
      }
      if (*(char *)in_RDI < 'u') {
        if ((*in_RDI != 0x34706374) && (*in_RDI != 0x36706374)) goto LAB_005f00df;
        goto LAB_005efd1c;
      }
      if ((*in_RDI != 0x34706475) && (*in_RDI != 0x36706475)) goto LAB_005f00df;
    }
    runtime_newobject((internal_abi_Type *)&DAT_0085dc40,in_RBX);
    extraout_RAX_07[1] = pvStack_50;
    extraout_RAX_07[2] = local_48;
    local_a0 = extraout_RAX_07;
    ~r0_04 = local_58;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_03 = extraout_RBX_05;
      local_a0 = extraout_RAX_08;
      ~r0_04 = extraout_RBX_05;
    }
    *local_a0 = ~r0_04;
    local_a0[3] = pvVar4;
    local_a0[5] = (void *)local_40._8_8_;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_04 = (void *)local_40._0_8_;
      local_a0 = extraout_RAX_09;
      ~r0_04 = extraout_RBX_06;
    }
    local_a0[4] = (void *)local_40._0_8_;
    puVar2 = go_itab__net_UDPAddr_net_Addr;
  }
LAB_005efe27:
  runtime_newobject((internal_abi_Type *)&DAT_00813900,~r0_04);
  *extraout_RAX_10 = puVar2;
  puVar1 = extraout_RAX_10;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_05 = (int)local_a0;
    puVar1 = extraout_RAX_11;
  }
  puVar1[1] = local_a0;
  return;
}



void net___Resolver__internetAddrList_func1(net_IPAddr ip,net_Addr ~r0)

{
  int iVar1;
  sdword *psVar2;
  string ~r0_00;
  undefined8 in_RAX;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  undefined8 *extraout_RAX_07;
  undefined8 *puVar3;
  void *x;
  undefined8 in_RCX;
  int in_RDX;
  int portnum;
  void *in_RBX;
  undefined8 extraout_RBX;
  undefined8 extraout_RBX_00;
  undefined8 extraout_RBX_01;
  undefined8 in_RSI;
  undefined8 in_RDI;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  undefined8 *extraout_R11_02;
  undefined8 *extraout_R11_03;
  undefined8 *extraout_R11_04;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffc8;
  string in_stack_ffffffffffffffd8;
  uint8 *in_stack_ffffffffffffffe8;
  int in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  iVar1 = *(int *)(in_RDX + 0x10);
  psVar2 = *(sdword **)(in_RDX + 8);
  if (iVar1 == 2) {
    if (*(short *)psVar2 == 0x7069) {
LAB_005f01f5:
      runtime_newobject((internal_abi_Type *)&DAT_0084e9e0,in_RBX);
      extraout_RAX[1] = in_RBX;
      extraout_RAX[2] = in_RCX;
      puVar3 = extraout_RAX;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11 = extraout_RBX;
        puVar3 = extraout_RAX_00;
        in_RAX = extraout_RBX;
      }
      *puVar3 = in_RAX;
      puVar3[4] = in_RSI;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_00 = in_RDI;
        puVar3 = extraout_RAX_01;
      }
      puVar3[3] = in_RDI;
      return;
    }
  }
  else {
    in_stack_fffffffffffffff0 = *(int *)(in_RDX + 0x18);
    if (iVar1 == 3) {
      if (*(char *)psVar2 < 'j') {
        if (((*(short *)psVar2 == 0x7069) && (*(char *)((int)psVar2 + 2) == '4')) ||
           ((*(short *)psVar2 == 0x7069 && (*(char *)((int)psVar2 + 2) == '6')))) goto LAB_005f01f5;
      }
      else {
        if ((*(short *)psVar2 == 0x6374) && (*(char *)((int)psVar2 + 2) == 'p')) {
LAB_005f02b2:
          runtime_newobject((internal_abi_Type *)&DAT_0085dd00,in_RBX);
          extraout_RAX_02[1] = in_RBX;
          extraout_RAX_02[2] = in_RCX;
          puVar3 = extraout_RAX_02;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier1();
            *extraout_R11_01 = extraout_RBX_00;
            puVar3 = extraout_RAX_03;
            in_RAX = extraout_RBX_00;
          }
          *puVar3 = in_RAX;
          puVar3[3] = in_stack_fffffffffffffff0;
          puVar3[5] = in_RSI;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier1();
            *extraout_R11_02 = in_RDI;
            puVar3 = extraout_RAX_04;
          }
          puVar3[4] = in_RDI;
          return;
        }
        if ((*(short *)psVar2 == 0x6475) && (*(char *)((int)psVar2 + 2) == 'p')) {
LAB_005f0337:
          runtime_newobject((internal_abi_Type *)&DAT_0085dc40,in_RBX);
          extraout_RAX_05[1] = in_RBX;
          extraout_RAX_05[2] = in_RCX;
          puVar3 = extraout_RAX_05;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier1();
            *extraout_R11_03 = extraout_RBX_01;
            puVar3 = extraout_RAX_06;
            in_RAX = extraout_RBX_01;
          }
          *puVar3 = in_RAX;
          puVar3[3] = in_stack_fffffffffffffff0;
          puVar3[5] = in_RSI;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier1();
            *extraout_R11_04 = in_RDI;
            puVar3 = extraout_RAX_07;
          }
          puVar3[4] = in_RDI;
          return;
        }
      }
    }
    else if (iVar1 == 4) {
      if (*(char *)psVar2 < 'u') {
        if ((*psVar2 == 0x34706374) || (*psVar2 == 0x36706374)) goto LAB_005f02b2;
      }
      else if ((*psVar2 == 0x34706475) || (*psVar2 == 0x36706475)) goto LAB_005f0337;
    }
  }
  ~r0_00.len = in_stack_fffffffffffffff0;
  ~r0_00.str = in_stack_ffffffffffffffe8;
  runtime_concatstring2
            ((runtime_tmpBuf *)0x0,(string)in_stack_ffffffffffffffc8,in_stack_ffffffffffffffd8,
             ~r0_00);
  runtime_convTstring((string)in_stack_ffffffffffffffc8,x);
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffc8);
}



// WARNING: Unknown calling convention

void net___ipStackCapabilities__probe(net_ipStackCapabilities *p)

{
  error ~r1;
  string s_00;
  error ~r1_00;
  syscall_Sockaddr ~r0;
  syscall_Sockaddr sa;
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  bool valid;
  sdword extraout_EAX;
  int extraout_RAX;
  int s;
  undefined8 uVar1;
  int i;
  func__ *extraout_RAX_00;
  int s_1;
  func__ **extraout_RAX_01;
  func__ **extraout_RAX_02;
  func__ **fn;
  int extraout_RAX_03;
  void *x;
  undefined *puVar2;
  uint8 *extraout_RCX;
  int extraout_RCX_00;
  runtime_itab *extraout_RBX;
  int extraout_RBX_00;
  size_t __n;
  bool ~r0_00;
  undefined extraout_DIL;
  undefined ~r0_01;
  int in_RDI;
  int extraout_RDI;
  int ~r0_02;
  int extraout_RDI_00;
  int extraout_RDI_01;
  int extraout_RDI_02;
  int extraout_RDI_03;
  undefined8 *extraout_R11;
  int unaff_R14;
  bool bVar3;
  undefined in_XMM15 [16];
  net_ipStackCapabilities *pnStack0000000000000008;
  undefined4 in_stack_fffffffffffffee0;
  undefined4 in_stack_fffffffffffffee4;
  undefined4 in_stack_fffffffffffffee8;
  undefined4 in_stack_fffffffffffffeec;
  error in_stack_fffffffffffffef0;
  undefined4 local_f4;
  undefined8 local_f0;
  func__ *local_e8;
  int local_e0;
  int local_d8;
  undefined local_d0 [16];
  undefined local_c0 [32];
  undefined *local_a0;
  void *local_98;
  net_TCPAddr *local_90;
  func_int__error **local_88;
  runtime_itab *local_80;
  net_TCPAddr local_78;
  undefined *local_48 [7];
  undefined8 local_10;
  
  pnStack0000000000000008 = p;
  while (local_c0._0_12_ = in_XMM15._0_12_, &local_a0 <= *(undefined ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI_03;
  }
  ~r1.tab._4_4_ = in_stack_fffffffffffffee4;
  ~r1.tab._0_4_ = in_stack_fffffffffffffee0;
  ~r1.data._0_4_ = in_stack_fffffffffffffee8;
  ~r1.data._4_4_ = in_stack_fffffffffffffeec;
  net_sysSocket(2,1,6,in_RDI,~r1);
  bVar3 = extraout_RBX == (runtime_itab *)go_itab_syscall_Errno_error;
  local_98 = x;
  ~r0_01 = ~r0_00;
  local_e0 = extraout_RAX;
  local_80 = extraout_RBX;
  if (bVar3) {
    runtime_ifaceeq((runtime_itab *)go_itab_syscall_Errno_error,x,&DAT_0095c678,~r0_00);
    if (extraout_AL != '\0') goto LAB_005f04fd;
    bVar3 = local_80 == (runtime_itab *)go_itab_syscall_Errno_error;
    ~r0_01 = extraout_DIL;
  }
  if (((!bVar3) ||
      (runtime_ifaceeq(local_80,local_98,&DAT_0095c670,(bool)~r0_01), extraout_AL_00 == '\0')) &&
     (local_80 == (runtime_itab *)0x0)) {
    (**internal_poll_CloseFunc)(local_e0,(error *)0x0);
    pnStack0000000000000008->ipv4Enabled = true;
  }
LAB_005f04fd:
  s_00.str._4_4_ = in_stack_fffffffffffffee4;
  s_00.str._0_4_ = in_stack_fffffffffffffee0;
  s_00.len._0_4_ = in_stack_fffffffffffffee8;
  s_00.len._4_4_ = in_stack_fffffffffffffeec;
  net_parseIP(s_00,(uint8  [16])in_stack_fffffffffffffef0,true);
  if (extraout_AL_01 == '\0') {
    uVar1 = 0;
    puVar2 = (undefined *)0x0;
  }
  else {
    uVar1 = 0x10;
    puVar2 = local_d0;
  }
  __n = 0x10;
  if (net_v4InV6Prefix.len < 0x10) {
    __n = net_v4InV6Prefix.len;
  }
  if (net_v4InV6Prefix.array != local_c0) {
    local_f0 = uVar1;
    local_a0 = puVar2;
    runtime_memmove(local_c0,net_v4InV6Prefix.array,__n);
  }
  puVar2 = local_c0;
  local_c0._12_4_ = 0x100007f;
  local_78.IP.len = FUN_0046cda6();
  local_48[0] = (undefined *)0x1;
  local_48[2] = (undefined *)0x10;
  local_48[3] = (undefined *)0x10;
  local_10 = 0;
  i = 0;
  ~r0_02 = extraout_RDI;
  local_78.IP.array = extraout_RCX;
  local_78.IP.cap = local_78.IP.len;
  local_48[1] = puVar2;
  do {
    if (1 < i) {
      runtime_deferreturn();
      return;
    }
    ~r1_00.tab._4_4_ = in_stack_fffffffffffffee4;
    ~r1_00.tab._0_4_ = in_stack_fffffffffffffee0;
    ~r1_00.data._0_4_ = in_stack_fffffffffffffee8;
    ~r1_00.data._4_4_ = in_stack_fffffffffffffeec;
    local_d8 = i;
    net_sysSocket(10,1,6,~r0_02,~r1_00);
    ~r0_02 = extraout_RDI_00;
    if (extraout_RBX_00 == 0) {
      local_88 = internal_poll_CloseFunc;
      local_e8 = extraout_RAX_00;
      runtime_newobject((internal_abi_Type *)&DAT_00859be0,(void *)0x0);
      *extraout_RAX_01 = net___ipStackCapabilities__probe_func1;
      fn = extraout_RAX_01;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11 = local_88;
        fn = extraout_RAX_02;
      }
      fn[1] = (func__ *)local_88;
      fn[2] = local_e8;
      runtime_deferproc(fn);
      if (extraout_EAX != 0) {
        runtime_deferreturn();
        return;
      }
      local_90 = (net_TCPAddr *)((int)&local_78 + local_d8 * 0x38);
      local_f4 = SUB84(local_48[local_d8 * 7],0);
      syscall_setsockopt((int)local_e8,0x29,0x1a,&local_f4,4);
      ~r0.tab._4_4_ = in_stack_fffffffffffffee4;
      ~r0.tab._0_4_ = in_stack_fffffffffffffee0;
      ~r0.data._0_4_ = in_stack_fffffffffffffee8;
      ~r0.data._4_4_ = in_stack_fffffffffffffeec;
      net___TCPAddr__sockaddr(local_90,10,~r0,in_stack_fffffffffffffef0);
      ~r0_02 = extraout_RDI_01;
      if ((extraout_RCX_00 == 0) &&
         (sa.tab._4_4_ = in_stack_fffffffffffffee4, sa.tab._0_4_ = in_stack_fffffffffffffee0,
         sa.data._0_4_ = in_stack_fffffffffffffee8, sa.data._4_4_ = in_stack_fffffffffffffeec,
         syscall_Bind((int)local_e8,sa,in_stack_fffffffffffffef0), ~r0_02 = extraout_RDI_02,
         extraout_RAX_03 == 0)) {
        if (local_d8 == 0) {
          pnStack0000000000000008->ipv6Enabled = true;
        }
        else {
          pnStack0000000000000008->ipv4MappedIPv6Enabled = true;
        }
      }
    }
    i = local_d8 + 1;
  } while( true );
}



// WARNING: Unknown calling convention

void net___ipStackCapabilities__probe_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  (***(code ***)(in_RDX + 8))(*(undefined8 *)(in_RDX + 0x10));
  return;
}



void net_favoriteAddrFamily
               (string network,net_sockaddr laddr,net_sockaddr raddr,string mode,int family,
               bool ipv6only)

{
  char cVar1;
  int iVar2;
  int in_RCX;
  undefined7 in_register_00000019;
  uint uVar3;
  int in_RSI;
  undefined8 in_RDI;
  undefined8 in_R8;
  sdword *in_R9;
  int in_R10;
  int unaff_R14;
  bool bVar4;
  undefined local_28 [16];
  undefined local_18 [16];
  
  uVar3 = CONCAT71(in_register_00000019,ipv6only);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (uVar3 <= uVar3 - 1) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  cVar1 = *(char *)((uVar3 - 1) + family);
  if (cVar1 == '4') {
    return;
  }
  if (cVar1 != '6') {
    if (in_R10 == 6) {
      if (*in_R9 == 0x7473696c) {
        if (*(short *)(in_R9 + 1) == 0x6e65) {
          if (in_RCX == 0) {
            cVar1 = '\x01';
          }
          else {
            cVar1 = (**(code **)(in_RCX + 0x30))(in_RDI);
          }
        }
        else {
          cVar1 = '\0';
        }
      }
      else {
        cVar1 = '\0';
      }
    }
    else {
      cVar1 = '\0';
    }
    if (cVar1 != '\0') {
      local_18._8_8_ = &net_ipStackCaps;
      local_18._0_8_ = net___ipStackCapabilities__probe_fm;
      if (net_ipStackCaps.Once.done == 0) {
        sync___Once__doSlow(&net_ipStackCaps.Once,(func__ **)local_18);
      }
      if (net_ipStackCaps.ipv4MappedIPv6Enabled == false) {
        local_28._8_8_ = &net_ipStackCaps;
        local_28._0_8_ = net___ipStackCapabilities__probe_fm;
        if (net_ipStackCaps.Once.done == 0) {
          sync___Once__doSlow(&net_ipStackCaps.Once,(func__ **)local_28);
        }
        if (net_ipStackCaps.ipv4Enabled != false) {
          if (in_RCX != 0) {
            (**(code **)(in_RCX + 0x28))(in_RDI);
            return;
          }
          return;
        }
      }
      return;
    }
    if (in_RCX == 0) {
      bVar4 = true;
    }
    else {
      iVar2 = (**(code **)(in_RCX + 0x28))(in_RDI);
      bVar4 = iVar2 == 2;
    }
    if (bVar4) {
      if (in_RSI == 0) {
        bVar4 = true;
      }
      else {
        iVar2 = (**(code **)(in_RSI + 0x28))(in_R8);
        bVar4 = iVar2 == 2;
      }
      if (bVar4) {
        return;
      }
    }
    return;
  }
  return;
}



void net_internetSocket(context_Context ctx,string net,net_sockaddr laddr,net_sockaddr raddr,
                       int sotype,int proto,string mode,
                       func_context_Context__string__string__syscall_RawConn__error **ctrlCtxFn,
                       net_netFD *fd,error err)

{
  string network;
  net_sockaddr laddr_00;
  int family;
  bool ipv6only;
  int unaff_R14;
  uint8 *in_stack_ffffffffffffff88;
  int in_stack_ffffffffffffff90;
  runtime_itab *in_stack_ffffffffffffff98;
  void *in_stack_ffffffffffffffa0;
  net_sockaddr in_stack_ffffffffffffffa8;
  string in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  network.len = in_stack_ffffffffffffff90;
  network.str = in_stack_ffffffffffffff88;
  laddr_00.data = in_stack_ffffffffffffffa0;
  laddr_00.tab = in_stack_ffffffffffffff98;
  net_favoriteAddrFamily
            (network,laddr_00,in_stack_ffffffffffffffa8,in_stack_ffffffffffffffb8,(int)ctrlCtxFn,
             SUB81(fd,0));
  net_socket(sotype,proto,(int)ctrlCtxFn);
  return;
}



void net_ipToSockaddrInet4(net_IP ip,int port,syscall_SockaddrInet4 ~r0,error ~r1)

{
  string ~r0_00;
  char *extraout_RAX;
  char **extraout_RAX_00;
  char **extraout_RAX_01;
  char **ppcVar1;
  size_t __n;
  int i;
  int in_RBX;
  char *~r0_01;
  uint uVar2;
  char **extraout_R11;
  int unaff_R14;
  undefined in_XMM15 [16];
  net_IP in_stack_ffffffffffffffb0;
  undefined8 in_stack_ffffffffffffffc8;
  char *pcVar3;
  undefined4 in_stack_ffffffffffffffd0;
  undefined4 in_stack_ffffffffffffffd4;
  undefined4 uStack_28;
  undefined4 uStack_24;
  char *local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RBX == 0) {
    port = (int)net_IPv4zero.array;
    in_RBX = net_IPv4zero.len;
  }
  if (in_RBX == 4) {
    uVar2 = 4;
  }
  else {
    if (in_RBX == 0x10) {
      for (i = 0; i < 10; i = i + 1) {
        if (*(uint8 *)(port + i) != 0) goto LAB_005f0d33;
      }
      if ((*(uint8 *)(port + 10) == 0xff) && (*(uint8 *)(port + 0xb) == 0xff)) {
        port = port + 0xc;
        uVar2 = 4;
        goto LAB_005f0c60;
      }
    }
LAB_005f0d33:
    port = 0;
    uVar2 = 0;
  }
LAB_005f0c60:
  if ((undefined4 *)port == (undefined4 *)0x0) {
    ~r0_00.len._0_4_ = in_stack_ffffffffffffffd0;
    ~r0_00.str = (uint8 *)in_stack_ffffffffffffffc8;
    ~r0_00.len._4_4_ = in_stack_ffffffffffffffd4;
    net_IP_String(in_stack_ffffffffffffffb0,~r0_00);
    pcVar3 = ~r0_01;
    local_10 = extraout_RAX;
    runtime_newobject((internal_abi_Type *)&DAT_0084eb20,~r0_01);
    extraout_RAX_00[1] = (char *)0x10;
    *extraout_RAX_00 =
         "non-IPv4 addressnon-IPv6 addressunknown network no colon on line: value of type integer overflowgcshrinkstackofftracefpunwindoffGC scavenge waitGC worker (idle)SIGNONE: no trap out of bounds [/gc/gogc:percent, not a functiongc: unswept span KiB work (bg),  mheap.sweepgen=runtime: nelems=workbuf is emptymSpanList.removemSpanList.insertbad special kindbad summary dataruntime: addr = runtime: base = runtime: head =  already; errno=\nruntime stack:\ninvalid g statuscastogscanstatusbad g transitionschedule: in cgoGOTRACEBACK=nonereflect mismatch untyped locals missing stackmapbad symbol tablenon-Go function\n not in ranges:\nsigaction failedinvalid argumentinvalid exchangeobject is remotemessage too longno route to hostremote I/O errorsource_code_infocc_enable_arenascsharp_namespacephp_class_prefixclient_streamingserver_streamingedition_defaultsmessage_encodingidentifier_valueleading_commentsunknown type: %Treflect.MakeFuncDeadlineExceededPermissionDeniedINVALID_ARGUMENTinvalid code: %dinvalid code: %q\"ALREADY_EXISTS\"ServerName: %q, Attributes: %v, <stream: %p, %v>^{h(?::(\\d+))?}$^{m(?::(\\d+))?}$after object keyhttp: nil Cookiecontent-encodingcontent-languagecontent-locationwww-authenticate%s %s HTTP/1.1\r\nUser-Agent: %s\r\nAlready ReportedMultiple ChoicesPayment RequiredUpgrade RequiredContent-Length: SETTINGS_TIMEOUTFRAME_SIZE_ERRORout of range: %q2384185791015625Imperial_AramaicMeroitic_CursiveZanabazar_Squareinvalid ip:port invalid AddrPortinvalid dns nameunpacking headerRCodeFormatErrorGODEBUG: value \"must be positiveinvalid encodingregexp: Compile(quoted-printableContent-Language"
    ;
    extraout_RAX_00[3] = pcVar3;
    ppcVar1 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = local_10;
      ppcVar1 = extraout_RAX_01;
    }
    ppcVar1[2] = local_10;
    return;
  }
  uStack_28 = in_XMM15._8_4_;
  uStack_24 = in_XMM15._12_4_;
  __n = 4;
  if (uVar2 < 4) {
    __n = uVar2;
  }
  if ((undefined4 *)port != &uStack_28) {
    runtime_memmove(&uStack_28,(void *)port,__n);
  }
  return;
}



void net_ipToSockaddrInet6(net_IP ip,int port,string zone,syscall_SockaddrInet6 ~r0,error ~r1)

{
  uint8 uVar1;
  uint8 uVar2;
  uint8 uVar3;
  uint8 uVar4;
  net_IP x;
  char extraout_AL;
  char *pcVar5;
  char *extraout_RAX;
  char **extraout_RAX_00;
  char **extraout_RAX_01;
  char **ppcVar6;
  size_t sVar7;
  int in_RBX;
  char *~r0_00;
  int in_RSI;
  uint uVar8;
  char **extraout_R11;
  int unaff_R14;
  undefined in_XMM15 [16];
  undefined auVar9 [12];
  net_IP in_stack_ffffffffffffff40;
  string in_stack_ffffffffffffff58;
  int in_stack_ffffffffffffff68;
  undefined local_68 [16];
  undefined4 uStack_50;
  undefined4 uStack_4c;
  undefined4 uStack_48;
  undefined4 uStack_44;
  undefined local_40 [32];
  undefined4 *local_20;
  undefined4 *local_18;
  char *local_10;
  
  while (local_40 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_RBX == 0) ||
     (x.cap = in_stack_ffffffffffffff68, x.array = in_stack_ffffffffffffff58.str,
     x.len = in_stack_ffffffffffffff58.len, net_IP_Equal(in_stack_ffffffffffffff40,x,SUB81(port,0)),
     local_20 = (undefined4 *)port, extraout_AL != '\0')) {
    local_20 = (undefined4 *)net_IPv6zero.array;
    in_RBX = net_IPv6zero.len;
  }
  if (in_RBX == 4) {
    uVar1 = *(uint8 *)local_20;
    uVar2 = *(uint8 *)((int)local_20 + 1);
    uVar3 = *(uint8 *)((int)local_20 + 2);
    uVar4 = *(uint8 *)((int)local_20 + 3);
    sVar7 = 0x10;
    if (net_v4InV6Prefix.len < 0x10) {
      sVar7 = net_v4InV6Prefix.len;
    }
    local_68._0_12_ = in_XMM15._0_12_;
    if (net_v4InV6Prefix.array != local_68) {
      local_18 = local_20;
      runtime_memmove(local_68,net_v4InV6Prefix.array,sVar7);
    }
    local_68[12] = uVar1;
    local_68[13] = uVar2;
    local_68[14] = uVar3;
    local_68[15] = uVar4;
    local_20 = (undefined4 *)local_68;
    uVar8 = 0x10;
  }
  else if (in_RBX == 0x10) {
    uVar8 = 0x10;
  }
  else {
    local_20 = (undefined4 *)0x0;
    uVar8 = 0;
  }
  auVar9 = in_XMM15._4_12_;
  if (local_20 == (undefined4 *)0x0) {
    net_IP_String(in_stack_ffffffffffffff40,in_stack_ffffffffffffff58);
    local_10 = extraout_RAX;
    runtime_newobject((internal_abi_Type *)&DAT_0084eb20,~r0_00);
    extraout_RAX_00[1] = (char *)0x10;
    *extraout_RAX_00 =
         "non-IPv6 addressunknown network no colon on line: value of type integer overflowgcshrinkstackofftracefpunwindoffGC scavenge waitGC worker (idle)SIGNONE: no trap out of bounds [/gc/gogc:percent, not a functiongc: unswept span KiB work (bg),  mheap.sweepgen=runtime: nelems=workbuf is emptymSpanList.removemSpanList.insertbad special kindbad summary dataruntime: addr = runtime: base = runtime: head =  already; errno=\nruntime stack:\ninvalid g statuscastogscanstatusbad g transitionschedule: in cgoGOTRACEBACK=nonereflect mismatch untyped locals missing stackmapbad symbol tablenon-Go function\n not in ranges:\nsigaction failedinvalid argumentinvalid exchangeobject is remotemessage too longno route to hostremote I/O errorsource_code_infocc_enable_arenascsharp_namespacephp_class_prefixclient_streamingserver_streamingedition_defaultsmessage_encodingidentifier_valueleading_commentsunknown type: %Treflect.MakeFuncDeadlineExceededPermissionDeniedINVALID_ARGUMENTinvalid code: %dinvalid code: %q\"ALREADY_EXISTS\"ServerName: %q, Attributes: %v, <stream: %p, %v>^{h(?::(\\d+))?}$^{m(?::(\\d+))?}$after object keyhttp: nil Cookiecontent-encodingcontent-languagecontent-locationwww-authenticate%s %s HTTP/1.1\r\nUser-Agent: %s\r\nAlready ReportedMultiple ChoicesPayment RequiredUpgrade RequiredContent-Length: SETTINGS_TIMEOUTFRAME_SIZE_ERRORout of range: %q2384185791015625Imperial_AramaicMeroitic_CursiveZanabazar_Squareinvalid ip:port invalid AddrPortinvalid dns nameunpacking headerRCodeFormatErrorGODEBUG: value \"must be positiveinvalid encodingregexp: Compile(quoted-printableContent-Language"
    ;
    extraout_RAX_00[3] = ~r0_00;
    ppcVar6 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = local_10;
      ppcVar6 = extraout_RAX_01;
    }
    ppcVar6[2] = local_10;
    return;
  }
  pcVar5 = net___ipv6ZoneCache__index((char *)&net_zoneCache,in_RSI);
  uStack_4c = auVar9._0_4_;
  uStack_48 = auVar9._4_4_;
  uStack_44 = auVar9._8_4_;
  uStack_50 = SUB84(pcVar5,0);
  sVar7 = 0x10;
  if (uVar8 < 0x10) {
    sVar7 = uVar8;
  }
  if (local_20 != &uStack_4c) {
    runtime_memmove(&uStack_4c,local_20,sVar7);
  }
  return;
}



void net_ipToSockaddr(int family,net_IP ip,int port,string zone,syscall_Sockaddr ~r0,error ~r1)

{
  net_IP ip_00;
  net_IP ip_01;
  net_IP ip_02;
  string zone_00;
  string ~r0_00;
  syscall_SockaddrInet4 ~r0_01;
  syscall_SockaddrInet6 ~r0_02;
  error ~r1_00;
  undefined8 *extraout_RAX;
  syscall_SockaddrInet6 *_sa_1;
  int extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *puVar1;
  undefined4 *extraout_RAX_04;
  syscall_SockaddrInet4 *_sa;
  int extraout_RAX_05;
  void *~r0_03;
  void *in_RSI;
  undefined8 *extraout_R11;
  int unaff_R14;
  undefined4 in_stack_fffffffffffffec0;
  undefined4 in_stack_fffffffffffffec4;
  undefined4 in_stack_fffffffffffffec8;
  undefined4 in_stack_fffffffffffffecc;
  undefined4 in_stack_fffffffffffffed0;
  undefined4 in_stack_fffffffffffffed4;
  undefined4 in_stack_fffffffffffffed8;
  undefined4 in_stack_fffffffffffffedc;
  undefined4 in_stack_fffffffffffffee0;
  undefined4 in_stack_fffffffffffffee4;
  undefined4 in_stack_fffffffffffffee8;
  undefined4 in_stack_fffffffffffffeec;
  undefined4 in_stack_fffffffffffffef0;
  undefined4 in_stack_fffffffffffffef4;
  error in_stack_fffffffffffffef8;
  undefined in_stack_ffffffffffffff08 [24];
  runtime_itab *in_stack_ffffffffffffff20;
  void *pvVar2;
  undefined local_c0 [160];
  undefined8 local_20;
  undefined8 *local_18;
  undefined4 *local_10;
  
  while (local_c0 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (family == 2) {
    runtime_newobject((internal_abi_Type *)&DAT_0085f200,(void *)port);
    ip_02.array._4_4_ = in_stack_fffffffffffffec4;
    ip_02.array._0_4_ = in_stack_fffffffffffffec0;
    ip_02.len._0_4_ = in_stack_fffffffffffffec8;
    ip_02.len._4_4_ = in_stack_fffffffffffffecc;
    ip_02.cap._0_4_ = in_stack_fffffffffffffed0;
    ip_02.cap._4_4_ = in_stack_fffffffffffffed4;
    ~r0_01.Port._4_4_ = in_stack_fffffffffffffedc;
    ~r0_01.Port._0_4_ = in_stack_fffffffffffffed8;
    ~r0_01.Addr[0] = (char)in_stack_fffffffffffffee0;
    ~r0_01.Addr[1] = (char)((dword)in_stack_fffffffffffffee0 >> 8);
    ~r0_01.Addr[2] = (char)((dword)in_stack_fffffffffffffee0 >> 0x10);
    ~r0_01.Addr[3] = (char)((dword)in_stack_fffffffffffffee0 >> 0x18);
    ~r0_01.raw.Family = (short)in_stack_fffffffffffffee4;
    ~r0_01.raw.Port = (short)((dword)in_stack_fffffffffffffee4 >> 0x10);
    ~r0_01.raw.Addr[0] = (char)in_stack_fffffffffffffee8;
    ~r0_01.raw.Addr[1] = (char)((dword)in_stack_fffffffffffffee8 >> 8);
    ~r0_01.raw.Addr[2] = (char)((dword)in_stack_fffffffffffffee8 >> 0x10);
    ~r0_01.raw.Addr[3] = (char)((dword)in_stack_fffffffffffffee8 >> 0x18);
    ~r0_01.raw.Zero[0] = (char)in_stack_fffffffffffffeec;
    ~r0_01.raw.Zero[1] = (char)((dword)in_stack_fffffffffffffeec >> 8);
    ~r0_01.raw.Zero[2] = (char)((dword)in_stack_fffffffffffffeec >> 0x10);
    ~r0_01.raw.Zero[3] = (char)((dword)in_stack_fffffffffffffeec >> 0x18);
    ~r0_01.raw.Zero[4] = (char)in_stack_fffffffffffffef0;
    ~r0_01.raw.Zero[5] = (char)((dword)in_stack_fffffffffffffef0 >> 8);
    ~r0_01.raw.Zero[6] = (char)((dword)in_stack_fffffffffffffef0 >> 0x10);
    ~r0_01.raw.Zero[7] = (char)((dword)in_stack_fffffffffffffef0 >> 0x18);
    ~r0_01._28_4_ = in_stack_fffffffffffffef4;
    local_10 = extraout_RAX_04;
    net_ipToSockaddrInet4(ip_02,port,~r0_01,in_stack_fffffffffffffef8);
    *local_10 = in_stack_fffffffffffffec0;
    local_10[1] = in_stack_fffffffffffffec4;
    local_10[2] = in_stack_fffffffffffffec8;
    local_10[3] = in_stack_fffffffffffffecc;
    local_10[4] = in_stack_fffffffffffffed0;
    local_10[5] = in_stack_fffffffffffffed4;
    local_10[6] = in_stack_fffffffffffffed8;
    local_10[7] = in_stack_fffffffffffffedc;
    if (extraout_RAX_05 == 0) {
      return;
    }
    return;
  }
  if (family != 10) {
    ip_01.array._4_4_ = in_stack_fffffffffffffec4;
    ip_01.array._0_4_ = in_stack_fffffffffffffec0;
    ip_01.len._0_4_ = in_stack_fffffffffffffec8;
    ip_01.len._4_4_ = in_stack_fffffffffffffecc;
    ip_01.cap._0_4_ = in_stack_fffffffffffffed0;
    ip_01.cap._4_4_ = in_stack_fffffffffffffed4;
    ~r0_00.str._4_4_ = in_stack_fffffffffffffedc;
    ~r0_00.str._0_4_ = in_stack_fffffffffffffed8;
    ~r0_00.len._0_4_ = in_stack_fffffffffffffee0;
    ~r0_00.len._4_4_ = in_stack_fffffffffffffee4;
    net_IP_String(ip_01,~r0_00);
    pvVar2 = ~r0_03;
    local_20 = extraout_RAX_01;
    runtime_newobject((internal_abi_Type *)&DAT_0084eb20,~r0_03);
    extraout_RAX_02[1] = 0x16;
    *extraout_RAX_02 = &DAT_008b9d67;
    extraout_RAX_02[3] = pvVar2;
    puVar1 = extraout_RAX_02;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = local_20;
      puVar1 = extraout_RAX_03;
    }
    puVar1[2] = local_20;
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00875da0,(void *)port);
  ip_00.array._4_4_ = in_stack_fffffffffffffec4;
  ip_00.array._0_4_ = in_stack_fffffffffffffec0;
  ip_00.len._0_4_ = in_stack_fffffffffffffec8;
  ip_00.len._4_4_ = in_stack_fffffffffffffecc;
  ip_00.cap._0_4_ = in_stack_fffffffffffffed0;
  ip_00.cap._4_4_ = in_stack_fffffffffffffed4;
  zone_00.str._4_4_ = in_stack_fffffffffffffedc;
  zone_00.str._0_4_ = in_stack_fffffffffffffed8;
  zone_00.len._0_4_ = in_stack_fffffffffffffee0;
  zone_00.len._4_4_ = in_stack_fffffffffffffee4;
  ~r0_02.Port._4_4_ = in_stack_fffffffffffffeec;
  ~r0_02.Port._0_4_ = in_stack_fffffffffffffee8;
  ~r0_02.ZoneId = in_stack_fffffffffffffef0;
  ~r0_02.Addr[0] = (char)in_stack_fffffffffffffef4;
  ~r0_02.Addr[1] = (char)((dword)in_stack_fffffffffffffef4 >> 8);
  ~r0_02.Addr[2] = (char)((dword)in_stack_fffffffffffffef4 >> 0x10);
  ~r0_02.Addr[3] = (char)((dword)in_stack_fffffffffffffef4 >> 0x18);
  ~r0_02._16_16_ = (uint8  [16])in_stack_fffffffffffffef8;
  ~r0_02.raw.Flowinfo = in_stack_ffffffffffffff08._0_4_;
  ~r0_02.raw.Addr[0] = in_stack_ffffffffffffff08[4];
  ~r0_02.raw.Addr[1] = in_stack_ffffffffffffff08[5];
  ~r0_02.raw.Addr[2] = in_stack_ffffffffffffff08[6];
  ~r0_02.raw.Addr[3] = in_stack_ffffffffffffff08[7];
  ~r0_02.raw.Addr[4] = in_stack_ffffffffffffff08[8];
  ~r0_02.raw.Addr[5] = in_stack_ffffffffffffff08[9];
  ~r0_02.raw.Addr[6] = in_stack_ffffffffffffff08[10];
  ~r0_02.raw.Addr[7] = in_stack_ffffffffffffff08[11];
  ~r0_02.raw.Addr[8] = in_stack_ffffffffffffff08[12];
  ~r0_02.raw.Addr[9] = in_stack_ffffffffffffff08[13];
  ~r0_02.raw.Addr[10] = in_stack_ffffffffffffff08[14];
  ~r0_02.raw.Addr[11] = in_stack_ffffffffffffff08[15];
  ~r0_02.raw.Addr[12] = in_stack_ffffffffffffff08[16];
  ~r0_02.raw.Addr[13] = in_stack_ffffffffffffff08[17];
  ~r0_02.raw.Addr[14] = in_stack_ffffffffffffff08[18];
  ~r0_02.raw.Addr[15] = in_stack_ffffffffffffff08[19];
  ~r0_02.raw.Scope_id = in_stack_ffffffffffffff08._20_4_;
  ~r1_00.data = in_RSI;
  ~r1_00.tab = in_stack_ffffffffffffff20;
  local_18 = extraout_RAX;
  net_ipToSockaddrInet6(ip_00,port,zone_00,~r0_02,~r1_00);
  *local_18 = CONCAT44(in_stack_fffffffffffffec4,in_stack_fffffffffffffec0);
  *(undefined4 *)(local_18 + 1) = in_stack_fffffffffffffec8;
  *(undefined4 *)((int)local_18 + 0xc) = in_stack_fffffffffffffecc;
  *(undefined4 *)(local_18 + 2) = in_stack_fffffffffffffed0;
  *(undefined4 *)((int)local_18 + 0x14) = in_stack_fffffffffffffed4;
  *(undefined4 *)(local_18 + 3) = in_stack_fffffffffffffed8;
  *(undefined4 *)((int)local_18 + 0x1c) = in_stack_fffffffffffffedc;
  *(undefined4 *)(local_18 + 4) = in_stack_fffffffffffffee0;
  *(undefined4 *)((int)local_18 + 0x24) = in_stack_fffffffffffffee4;
  *(undefined4 *)(local_18 + 5) = in_stack_fffffffffffffee8;
  *(undefined4 *)((int)local_18 + 0x2c) = in_stack_fffffffffffffeec;
  *(undefined4 *)(local_18 + 6) = in_stack_fffffffffffffef0;
  *(undefined4 *)((int)local_18 + 0x34) = in_stack_fffffffffffffef4;
  if (extraout_RAX_00 == 0) {
    return;
  }
  return;
}
