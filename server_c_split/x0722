

void html_template_urlFilter(__interface___ args,string ~r0)

{
  __interface___ args_00;
  string ~r0_00;
  html_template_contentType in_AL;
  bool ~r0_01;
  char extraout_AL;
  char extraout_CL;
  html_template_contentType t;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  int in_stack_ffffffffffffffe0;
  uint8 *in_stack_ffffffffffffffe8;
  int in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  args_00.cap = in_stack_ffffffffffffffe0;
  args_00.array = (interface___ *)in_stack_ffffffffffffffd0.str;
  args_00.len = in_stack_ffffffffffffffd0.len;
  ~r0_00.len = in_stack_fffffffffffffff0;
  ~r0_00.str = in_stack_ffffffffffffffe8;
  html_template_stringify(args_00,~r0_00,in_AL);
  if (extraout_CL != '\x06') {
    html_template_isSafeURL(in_stack_ffffffffffffffd0,~r0_01);
    if (extraout_AL != '\0') {
      return;
    }
    return;
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void html_template_isSafeURL(string s,bool ~r0)

{
  string before;
  string after;
  char extraout_AL;
  byte extraout_AL_00;
  byte bVar1;
  char extraout_AL_01;
  int ~r0_00;
  int extraout_RAX;
  uint8 *unaff_RBP;
  char extraout_SIL;
  bool ok;
  int unaff_R14;
  bool bVar2;
  int unaff_retaddr;
  string in_stack_ffffffffffffffc8;
  string in_stack_ffffffffffffffd8;
  uint8 *in_stack_ffffffffffffffe8;
  undefined ~r0_01;
  int in_stack_fffffffffffffff0;
  int iVar3;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  before.len = in_stack_fffffffffffffff0;
  before.str = in_stack_ffffffffffffffe8;
  after.len = unaff_retaddr;
  after.str = unaff_RBP;
  strings_Cut(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffd8,before,after,~r0);
  iVar3 = ~r0_00;
  if (extraout_SIL == '\0') {
    bVar2 = false;
  }
  else {
    strings_Index(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffd8,~r0_00);
    bVar2 = extraout_RAX < 0;
  }
  ~r0_01 = (undefined)iVar3;
  if (bVar2) {
    strings_EqualFold(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffd8,(bool)~r0_01);
    if (extraout_AL == '\0') {
      strings_EqualFold(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffd8,(bool)~r0_01);
      bVar1 = extraout_AL_00 ^ 1;
    }
    else {
      bVar1 = 0;
    }
    if (bVar1 != 0) {
      strings_EqualFold(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffd8,(bool)~r0_01);
      if (extraout_AL_01 == '\0') {
        return;
      }
    }
  }
  return;
}



void html_template_urlEscaper(__interface___ args,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  __interface___ in_stack_ffffffffffffffd8;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.len = unaff_RBP;
  ~r0_00.str = in_stack_fffffffffffffff0;
  html_template_urlProcessor(false,in_stack_ffffffffffffffd8,~r0_00);
  return;
}



void html_template_urlNormalizer(__interface___ args,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  __interface___ in_stack_ffffffffffffffd8;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.len = unaff_RBP;
  ~r0_00.str = in_stack_fffffffffffffff0;
  html_template_urlProcessor(true,in_stack_ffffffffffffffd8,~r0_00);
  return;
}



void html_template_urlProcessor(bool norm,__interface___ args,string ~r0)

{
  __interface___ args_00;
  string ~r0_00;
  bool norm_00;
  char extraout_AL;
  int extraout_RAX;
  strings_Builder *_b;
  char extraout_CL;
  html_template_contentType t;
  html_template_contentType in_BL;
  strings_Builder *b;
  int unaff_R14;
  string in_stack_ffffffffffffffb8;
  int in_stack_ffffffffffffffc8;
  undefined in_stack_ffffffffffffffd0 [15];
  undefined in_stack_ffffffffffffffdf;
  char cVar1;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  args_00.cap = in_stack_ffffffffffffffc8;
  args_00.array = (interface___ *)in_stack_ffffffffffffffb8.str;
  args_00.len = in_stack_ffffffffffffffb8.len;
  ~r0_00.len._7_1_ = in_stack_ffffffffffffffdf;
  ~r0_00._0_15_ = in_stack_ffffffffffffffd0;
  html_template_stringify(args_00,~r0_00,in_BL);
  cVar1 = extraout_CL;
  runtime_newobject((internal_abi_Type *)&DAT_00851780,b);
  *(undefined8 *)(extraout_RAX + 8) = 0;
  html_template_processURLOnto(in_stack_ffffffffffffffb8,norm_00,b,cVar1 == '\x06' || norm);
  if (extraout_AL == '\0') {
    return;
  }
  if (*(uint *)(extraout_RAX + 0x10) <= (uint)-*(int *)(extraout_RAX + 8)) {
    return;
  }
  if (*(int *)(extraout_RAX + 8) != 0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringlen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafestringnilptr();
}



void html_template_processURLOnto(string s,bool norm,strings_Builder *b,bool ~r0)

{
  char cVar1;
  int iVar2;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  string format;
  error err;
  undefined7 in_register_00000001;
  int iVar3;
  int i;
  int extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *extraout_RAX_01;
  uint8 *puVar4;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint uVar5;
  char cVar6;
  uint64 *puVar7;
  strings_Builder *psVar8;
  int written;
  void *pvVar9;
  void *extraout_RBX;
  uint extraout_RBX_00;
  strings_Builder *extraout_RBX_01;
  uint extraout_RBX_02;
  strings_Builder *extraout_RSI;
  strings_Builder *in_RDI;
  size_t sVar10;
  size_t extraout_RDI;
  size_t extraout_RDI_00;
  uint8 c;
  byte extraout_R8B;
  byte bVar11;
  strings_Builder *extraout_R9;
  void *extraout_R9_00;
  uint uVar12;
  strings_Builder **extraout_R11;
  uint8 **extraout_R11_00;
  strings_Builder **extraout_R11_01;
  uint8 **extraout_R11_02;
  int unaff_R14;
  char cStack0000000000000018;
  strings_Builder *psStack0000000000000020;
  interface___ in_stack_ffffffffffffff68;
  uint8 *in_stack_ffffffffffffff78;
  int in_stack_ffffffffffffff80;
  __interface___ in_stack_ffffffffffffff88;
  undefined7 in_stack_ffffffffffffffa0;
  void *in_stack_ffffffffffffffa8;
  undefined local_18 [16];
  
  iVar3 = CONCAT71(in_register_00000001,norm);
  psStack0000000000000020 = in_RDI;
  cStack0000000000000018 = ~r0;
  while (local_18 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  strings___Builder__Grow(psStack0000000000000020,(int)&(b->buf).len);
  i = 0;
  written = 0;
  cVar6 = cStack0000000000000018;
  do {
    if ((int)b <= i) {
      if (b < (uint)written) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      sVar10 = (int)b - written;
      pvVar9 = (void *)(((int)-sVar10 >> 0x3f & written) + iVar3);
      psVar8 = psStack0000000000000020;
      if (psStack0000000000000020->addr == (strings_Builder *)0x0) {
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_01 = psVar8;
          extraout_R11_01[1] = psVar8->addr;
          sVar10 = extraout_RDI_00;
          pvVar9 = extraout_R9_00;
        }
        psVar8->addr = psVar8;
      }
      else if (psStack0000000000000020 != psStack0000000000000020->addr) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffff68);
      }
      uVar5 = (psVar8->buf).cap;
      iVar3 = (psVar8->buf).len;
      uVar12 = iVar3 + sVar10;
      puVar4 = (psVar8->buf).array;
      if (uVar5 < uVar12) {
        ~r0_01.cap = (int)in_stack_ffffffffffffff78;
        ~r0_01.array = in_stack_ffffffffffffff68._type;
        ~r0_01.len = (int)in_stack_ffffffffffffff68.data;
        runtime_growslice(puVar4,uVar12,uVar5,sVar10,(internal_abi_Type *)&DAT_00807920,~r0_01);
        puVar4 = extraout_RAX_01;
        uVar5 = extraout_RCX_00;
        uVar12 = extraout_RBX_02;
      }
      runtime_memmove(puVar4 + iVar3,pvVar9,sVar10);
      (psStack0000000000000020->buf).len = uVar12;
      (psStack0000000000000020->buf).cap = uVar5;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_02 = puVar4;
        extraout_R11_02[1] = (extraout_RSI->buf).array;
        psStack0000000000000020 = extraout_RSI;
      }
      (psStack0000000000000020->buf).array = puVar4;
      return;
    }
    bVar11 = *(byte *)(iVar3 + i);
    if (bVar11 < 0x30) {
      if (bVar11 < 0x26) {
        if ((bVar11 != 0x21) && (1 < (byte)(bVar11 - 0x23))) {
          if (bVar11 != 0x25) goto LAB_0077c634;
          if ((cVar6 != '\0') && ((int)(strings_Builder *)(i + 2U) < (int)b)) {
            if (b <= (strings_Builder *)(i + 1U)) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            cVar1 = *(char *)(i + 1 + iVar3);
            if ((((byte)(cVar1 - 0x30U) < 10) || ((byte)(cVar1 + 0x9fU) < 6)) ||
               ((byte)(cVar1 + 0xbfU) < 6)) {
              if (b <= (strings_Builder *)(i + 2U)) {
                    // WARNING: Subroutine does not return
                runtime_panicIndex();
              }
              cVar1 = *(char *)(i + 2 + iVar3);
              if ((((byte)(cVar1 - 0x30U) < 10) || ((byte)(cVar1 + 0x9fU) < 6)) ||
                 ((byte)(cVar1 + 0xbfU) < 6)) goto LAB_0077c4c6;
            }
          }
          goto LAB_0077c66a;
        }
      }
      else if (bVar11 < 0x2d) {
        if ((bVar11 != 0x26) && (bVar11 < 0x2a)) goto LAB_0077c634;
      }
      else {
        if (bVar11 < 0x2f) goto LAB_0077c4c6;
        if (bVar11 != 0x2f) goto LAB_0077c634;
      }
LAB_0077c612:
      if (cVar6 == '\0') {
LAB_0077c66a:
        if ((uint)i < (uint)written) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        sVar10 = i - written;
        pvVar9 = (void *)((written & (int)-sVar10 >> 0x3f) + iVar3);
        psVar8 = psStack0000000000000020;
        if (psStack0000000000000020->addr == (strings_Builder *)0x0) {
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11 = extraout_R9;
            extraout_R11[1] = extraout_R9->addr;
            i = extraout_RAX;
            pvVar9 = extraout_RBX;
            sVar10 = extraout_RDI;
            psVar8 = extraout_R9;
            bVar11 = extraout_R8B;
          }
          psVar8->addr = psVar8;
        }
        else if (psStack0000000000000020 != psStack0000000000000020->addr) {
                    // WARNING: Subroutine does not return
          runtime_gopanic(in_stack_ffffffffffffff68);
        }
        uVar5 = (psVar8->buf).cap;
        iVar2 = (psVar8->buf).len;
        uVar12 = iVar2 + sVar10;
        puVar4 = (psVar8->buf).array;
        if (uVar5 < uVar12) {
          ~r0_00.cap = (int)in_stack_ffffffffffffff78;
          ~r0_00.array = in_stack_ffffffffffffff68._type;
          ~r0_00.len = (int)in_stack_ffffffffffffff68.data;
          runtime_growslice(puVar4,uVar12,uVar5,sVar10,(internal_abi_Type *)&DAT_00807920,~r0_00);
          uVar5 = extraout_RCX;
          uVar12 = extraout_RBX_00;
          puVar4 = extraout_RAX_00;
        }
        runtime_memmove(puVar4 + iVar2,pvVar9,sVar10);
        (psStack0000000000000020->buf).len = uVar12;
        (psStack0000000000000020->buf).cap = uVar5;
        puVar7 = runtime_staticuint64s + bVar11;
        psVar8 = psStack0000000000000020;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_00 = puVar4;
          extraout_R11_00[1] = (extraout_RBX_01->buf).array;
          psVar8 = extraout_RBX_01;
        }
        (psVar8->buf).array = puVar4;
        local_18._8_8_ = puVar7;
        local_18._0_8_ = &DAT_00807920;
        format.len = in_stack_ffffffffffffff80;
        format.str = in_stack_ffffffffffffff78;
        err.tab._7_1_ = bVar11;
        err.tab._0_7_ = in_stack_ffffffffffffffa0;
        err.data = in_stack_ffffffffffffffa8;
        fmt_Fprintf((io_Writer)in_stack_ffffffffffffff68,format,in_stack_ffffffffffffff88,0x95e860,
                    err);
        written = i + 1;
        cVar6 = cStack0000000000000018;
      }
    }
    else {
      if (bVar11 < 0x41) {
        if ((((byte)(bVar11 - 0x3a) < 2) || (bVar11 == 0x3d)) || (0x3e < bVar11)) goto LAB_0077c612;
      }
      else if (bVar11 < 0x5e) {
        if ((bVar11 == 0x5b) || (bVar11 == 0x5d)) goto LAB_0077c612;
      }
      else if ((bVar11 == 0x5f) || (bVar11 == 0x7e)) goto LAB_0077c4c6;
LAB_0077c634:
      if (((0x19 < (byte)(bVar11 + 0x9f)) && (0x19 < (byte)(bVar11 + 0xbf))) &&
         (9 < (byte)(bVar11 - 0x30))) goto LAB_0077c66a;
    }
LAB_0077c4c6:
    i = i + 1;
  } while( true );
}



void html_template_srcsetFilterAndEscaper(__interface___ args,string ~r0)

{
  int *piVar1;
  __interface___ args_00;
  runtime_slice ~r0_00;
  string old;
  string ~r0_01;
  string new;
  string ~r0_02;
  html_template_contentType in_AL;
  char extraout_AL;
  int left;
  int **extraout_RAX;
  strings_Builder *_b;
  int extraout_RAX_00;
  strings_Builder *_b_1;
  int *extraout_RAX_01;
  int *extraout_RAX_02;
  int *oldPtr;
  char extraout_CL;
  html_template_contentType t;
  strings_Builder *psVar2;
  int *extraout_RCX;
  int *oldCap;
  int *newLen;
  strings_Builder *~r0_03;
  int i;
  int *extraout_RBX;
  int written;
  int **extraout_RSI;
  int **extraout_RSI_00;
  int **ppiVar3;
  int n;
  int **extraout_R11;
  int **extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff90;
  uint8 *in_stack_ffffffffffffffa0;
  uint8 *in_stack_ffffffffffffffa8;
  uint8 *in_stack_ffffffffffffffb0;
  int in_stack_ffffffffffffffb8;
  uint8 *in_stack_ffffffffffffffc0;
  strings_Builder *psVar4;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  args_00.cap = (int)in_stack_ffffffffffffffa0;
  args_00.array = (interface___ *)in_stack_ffffffffffffff90._type;
  args_00.len = (int)in_stack_ffffffffffffff90.data;
  ~r0_01.len = (int)in_stack_ffffffffffffffb0;
  ~r0_01.str = in_stack_ffffffffffffffa8;
  html_template_stringify(args_00,~r0_01,in_AL);
  if (extraout_CL == '\x06') {
    psVar2 = ~r0_03;
    runtime_newobject((internal_abi_Type *)&DAT_00851780,~r0_03);
    *(undefined8 *)(extraout_RAX_00 + 8) = 0;
    html_template_processURLOnto((string)in_stack_ffffffffffffff90,SUB81(left,0),psVar2,true);
    n = left;
    if ((extraout_AL != '\0') &&
       (n = *(int *)(extraout_RAX_00 + 8), (uint)-n < *(uint *)(extraout_RAX_00 + 0x10))) {
      if (n == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicunsafestringnilptr();
      }
                    // WARNING: Subroutine does not return
      runtime_panicunsafestringlen();
    }
    old.len = (int)in_stack_ffffffffffffffa8;
    old.str = in_stack_ffffffffffffffa0;
    new.len = in_stack_ffffffffffffffb8;
    new.str = in_stack_ffffffffffffffb0;
    ~r0_02.len = (int)psVar2;
    ~r0_02.str = in_stack_ffffffffffffffc0;
    strings_Replace((string)in_stack_ffffffffffffff90,old,new,n,~r0_02);
    return;
  }
  if (extraout_CL == '\a') {
    return;
  }
  psVar2 = ~r0_03;
  runtime_newobject((internal_abi_Type *)&DAT_00851780,~r0_03);
  extraout_RAX[1] = (int *)0x0;
  written = 0;
  psVar4 = psVar2;
  for (i = 0; i < (int)psVar2; i = i + 1) {
    if (*(char *)(left + i) == ',') {
      html_template_filterSrcsetElement
                ((string)in_stack_ffffffffffffff90,left,(int)psVar2,(strings_Builder *)written);
      ppiVar3 = extraout_RAX;
      if ((int **)*extraout_RAX == (int **)0x0) {
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11 = (int *)extraout_RSI;
          extraout_R11[1] = *extraout_RSI;
          ppiVar3 = extraout_RSI;
        }
        *ppiVar3 = (int *)ppiVar3;
        psVar2 = psVar4;
      }
      else {
        psVar2 = psVar4;
        if (extraout_RAX != (int **)*extraout_RAX) {
                    // WARNING: Subroutine does not return
          runtime_gopanic(in_stack_ffffffffffffff90);
        }
      }
      oldCap = ppiVar3[3];
      piVar1 = ppiVar3[2];
      newLen = (int *)((int)piVar1 + 1);
      oldPtr = ppiVar3[1];
      if (oldCap < newLen) {
        ~r0_00.cap = (int)in_stack_ffffffffffffffa0;
        ~r0_00.array = in_stack_ffffffffffffff90._type;
        ~r0_00.len = (int)in_stack_ffffffffffffff90.data;
        runtime_growslice(oldPtr,(int)newLen,(int)oldCap,1,(internal_abi_Type *)&DAT_00807920,~r0_00
                         );
        oldPtr = extraout_RAX_01;
        oldCap = extraout_RCX;
        newLen = extraout_RBX;
        ppiVar3 = extraout_RAX;
      }
      *(undefined *)((int)oldPtr + (int)piVar1) = 0x2c;
      ppiVar3[2] = newLen;
      ppiVar3[3] = oldCap;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_00 = extraout_RAX_02;
        extraout_R11_00[1] = extraout_RSI_00[1];
        oldPtr = extraout_RAX_02;
        ppiVar3 = extraout_RSI_00;
      }
      ppiVar3[1] = oldPtr;
      written = i + 1;
      psVar4 = psVar2;
    }
  }
  html_template_filterSrcsetElement
            ((string)in_stack_ffffffffffffff90,left,(int)psVar2,(strings_Builder *)written);
  if ((int *)-(int)extraout_RAX[1] < extraout_RAX[2]) {
    if (extraout_RAX[1] == (int *)0x0) {
                    // WARNING: Subroutine does not return
      runtime_panicunsafestringnilptr();
    }
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringlen();
  }
  return;
}



// Local variable start:int[RCX:8] conflicts with parameter, skipped.
// Local variable end:int[RDI:8] conflicts with parameter, skipped.

void html_template_filterSrcsetElement(string s,int left,int right,strings_Builder *b)

{
  byte bVar1;
  int *piVar2;
  runtime_slice ~r0;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  bool ~r0_03;
  char extraout_AL;
  int *extraout_RAX;
  int *extraout_RAX_00;
  int *extraout_RAX_01;
  int *extraout_RAX_02;
  int *extraout_RAX_03;
  int *extraout_RAX_04;
  int *piVar3;
  int i;
  int *extraout_RCX;
  int *extraout_RCX_00;
  int *extraout_RCX_01;
  int *extraout_RCX_02;
  int *piVar4;
  int **ppiVar5;
  int *extraout_RBX;
  int *extraout_RBX_00;
  void *extraout_RBX_01;
  int *extraout_RBX_02;
  void *extraout_RBX_03;
  void *pvVar6;
  int *extraout_RBX_04;
  int **in_RSI;
  int **extraout_RSI;
  uint in_RDI;
  size_t sVar7;
  size_t extraout_RDI;
  int **extraout_RDI_00;
  size_t extraout_RDI_01;
  int *piVar8;
  int i_1;
  uint uVar9;
  int **extraout_R10;
  undefined8 *extraout_R11;
  int **extraout_R11_00;
  int **extraout_R11_01;
  int **extraout_R11_02;
  undefined8 *extraout_R11_03;
  int **extraout_R11_04;
  undefined8 *extraout_R11_05;
  int **extraout_R11_06;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff88;
  int in_stack_ffffffffffffff98;
  
  while (i = (int)b, &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  for (; uVar9 = i, i < (int)in_RDI; i = i + 1) {
    if ((uint)right <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    bVar1 = *(byte *)(left + i);
    if (0x20 < bVar1) break;
    if (0xf < bVar1 >> 3) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((byte)("goal , cons/mark  maxTrigger= pages/byte\n s.sweepgen= allocCount end tracegc\ntimer_deletens} value: {}, want {r1= [recovered]bad recoverybad g statusentersyscallwirep: p->m=) p->status=releasep: m= sysmonwait= preemptoff=cas64 failedGOTRACEBACK= m->gsignal=-byte limit\nruntime: sp=abi mismatchillegal seekinvalid slothost is downnot pollable<unknown:%d>Sfixed32KindSfixed64Kindmessage_typejava_packageoptimize_forswift_prefixruby_packagedebug_redactdouble_valuestring_valueverificationis_extension has no name has no typereflect.CopyOUT_OF_RANGENormalSocketgrpc-messageContent-Typegrpc-timeoutGrpc-MessageAddr: \'%s\', Cookie.Valuemax-forwardshttp2debug=1http2debug=2status code Multi-StatusNot ModifiedUnauthorizedI\'m a teapotNot ExtendedPUSH_PROMISECONTINUATION152587890625762939453125Cypro_MinoanMeetei_MayekPahawh_HmongSora_SompengSyloti_NagriRCodeSuccessRCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen..." /* TRUNCATED STRING LITERAL */
               [(bVar1 >> 3) + 0x2614] & (byte)(1 << (bVar1 & 7))) == 0) break;
  }
  do {
    i_1 = in_RDI;
    if ((int)in_RDI <= (int)uVar9) break;
    if ((uint)right <= uVar9) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    bVar1 = *(byte *)(left + uVar9);
    if (bVar1 < 0x21) {
      if (0xf < bVar1 >> 3) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      i_1 = uVar9;
      if ((byte)("goal , cons/mark  maxTrigger= pages/byte\n s.sweepgen= allocCount end tracegc\ntimer_deletens} value: {}, want {r1= [recovered]bad recoverybad g statusentersyscallwirep: p->m=) p->status=releasep: m= sysmonwait= preemptoff=cas64 failedGOTRACEBACK= m->gsignal=-byte limit\nruntime: sp=abi mismatchillegal seekinvalid slothost is downnot pollable<unknown:%d>Sfixed32KindSfixed64Kindmessage_typejava_packageoptimize_forswift_prefixruby_packagedebug_redactdouble_valuestring_valueverificationis_extension has no name has no typereflect.CopyOUT_OF_RANGENormalSocketgrpc-messageContent-Typegrpc-timeoutGrpc-MessageAddr: \'%s\', Cookie.Valuemax-forwardshttp2debug=1http2debug=2status code Multi-StatusNot ModifiedUnauthorizedI\'m a teapotNot ExtendedPUSH_PROMISECONTINUATION152587890625762939453125Cypro_MinoanMeetei_MayekPahawh_HmongSora_SompengSyloti_NagriRCodeSuccessRCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen..." /* TRUNCATED STRING LITERAL */
                 [(bVar1 >> 3) + 0x2614] & (byte)(1 << (bVar1 & 7))) != 0) break;
    }
    uVar9 = uVar9 + 1;
  } while( true );
  if ((uint)right < (uint)i_1) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  if ((uint)i_1 < (uint)i) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  ~r0_03 = (bool)(((byte)(-(int)(strings_Builder *)(i_1 - i) >> 0x3f) & (byte)i) + (char)left);
  html_template_isSafeURL((string)in_stack_ffffffffffffff88,~r0_03);
  uVar9 = i_1;
  if (extraout_AL != '\0') {
    while( true ) {
      if ((int)in_RDI <= (int)uVar9) {
        if ((uint)i < b) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        sVar7 = i - (int)b;
        pvVar6 = (void *)(left + ((uint)b & (int)-sVar7 >> 0x3f));
        ppiVar5 = in_RSI;
        if ((int **)*in_RSI == (int **)0x0) {
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_03 = extraout_R10;
            extraout_R11_03[1] = *extraout_R10;
            pvVar6 = extraout_RBX_01;
            sVar7 = extraout_RDI;
            ppiVar5 = extraout_R10;
          }
          *ppiVar5 = (int *)ppiVar5;
        }
        else if (in_RSI != (int **)*in_RSI) {
                    // WARNING: Subroutine does not return
          runtime_gopanic(in_stack_ffffffffffffff88);
        }
        piVar4 = ppiVar5[3];
        piVar2 = ppiVar5[2];
        piVar8 = (int *)((int)piVar2 + sVar7);
        piVar3 = ppiVar5[1];
        if (piVar4 < piVar8) {
          ~r0_01.cap = in_stack_ffffffffffffff98;
          ~r0_01.array = in_stack_ffffffffffffff88._type;
          ~r0_01.len = (int)in_stack_ffffffffffffff88.data;
          runtime_growslice(piVar3,(int)piVar8,(int)piVar4,sVar7,(internal_abi_Type *)&DAT_00807920,
                            ~r0_01);
          piVar4 = extraout_RCX_01;
          piVar8 = extraout_RBX_02;
          piVar3 = extraout_RAX_03;
        }
        runtime_memmove((void *)((int)piVar3 + (int)piVar2),pvVar6,sVar7);
        in_RSI[2] = piVar8;
        in_RSI[3] = piVar4;
        ppiVar5 = in_RSI;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_04 = piVar3;
          extraout_R11_04[1] = extraout_RDI_00[1];
          ppiVar5 = extraout_RDI_00;
        }
        ppiVar5[1] = piVar3;
        html_template_processURLOnto
                  ((string)in_stack_ffffffffffffff88,~r0_03,(strings_Builder *)(i_1 - i),true);
        if ((uint)right < in_RDI) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAlen();
        }
        if (in_RDI < (uint)i_1) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        sVar7 = in_RDI - i_1;
        pvVar6 = (void *)((i_1 & (int)-sVar7 >> 0x3f) + left);
        ppiVar5 = in_RSI;
        if ((int **)*in_RSI == (int **)0x0) {
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_05 = ppiVar5;
            extraout_R11_05[1] = *ppiVar5;
            pvVar6 = extraout_RBX_03;
            sVar7 = extraout_RDI_01;
          }
          *ppiVar5 = (int *)ppiVar5;
        }
        else if (in_RSI != (int **)*in_RSI) {
                    // WARNING: Subroutine does not return
          runtime_gopanic(in_stack_ffffffffffffff88);
        }
        piVar4 = ppiVar5[3];
        piVar2 = ppiVar5[2];
        piVar8 = (int *)((int)piVar2 + sVar7);
        piVar3 = ppiVar5[1];
        if (piVar4 < piVar8) {
          ~r0_02.cap = in_stack_ffffffffffffff98;
          ~r0_02.array = in_stack_ffffffffffffff88._type;
          ~r0_02.len = (int)in_stack_ffffffffffffff88.data;
          runtime_growslice(piVar3,(int)piVar8,(int)piVar4,sVar7,(internal_abi_Type *)&DAT_00807920,
                            ~r0_02);
          piVar3 = extraout_RAX_04;
          piVar4 = extraout_RCX_02;
          piVar8 = extraout_RBX_04;
        }
        runtime_memmove((void *)((int)piVar3 + (int)piVar2),pvVar6,sVar7);
        in_RSI[2] = piVar8;
        in_RSI[3] = piVar4;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_06 = piVar3;
          extraout_R11_06[1] = extraout_RSI[1];
          in_RSI = extraout_RSI;
        }
        in_RSI[1] = piVar3;
        return;
      }
      if ((uint)right <= uVar9) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      bVar1 = *(byte *)(left + uVar9);
      if (0x7f < bVar1) break;
      if (0xf < bVar1 >> 3) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if ((byte)((byte)(1 << (bVar1 & 7)) &
                "goal , cons/mark  maxTrigger= pages/byte\n s.sweepgen= allocCount end tracegc\ntimer_deletens} value: {}, want {r1= [recovered]bad recoverybad g statusentersyscallwirep: p->m=) p->status=releasep: m= sysmonwait= preemptoff=cas64 failedGOTRACEBACK= m->gsignal=-byte limit\nruntime: sp=abi mismatchillegal seekinvalid slothost is downnot pollable<unknown:%d>Sfixed32KindSfixed64Kindmessage_typejava_packageoptimize_forswift_prefixruby_packagedebug_redactdouble_valuestring_valueverificationis_extension has no name has no typereflect.CopyOUT_OF_RANGENormalSocketgrpc-messageContent-Typegrpc-timeoutGrpc-MessageAddr: \'%s\', Cookie.Valuemax-forwardshttp2debug=1http2debug=2status code Multi-StatusNot ModifiedUnauthorizedI\'m a teapotNot ExtendedPUSH_PROMISECONTINUATION152587890625762939453125Cypro_MinoanMeetei_MayekPahawh_HmongSora_SompengSyloti_NagriRCodeSuccessRCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen..." /* TRUNCATED STRING LITERAL */
                [(bVar1 >> 3) + 0x2614]) == 0) break;
      uVar9 = uVar9 + 1;
    }
  }
  ppiVar5 = in_RSI;
  if ((int **)*in_RSI == (int **)0x0) {
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = ppiVar5;
      extraout_R11[1] = *ppiVar5;
    }
    *ppiVar5 = (int *)ppiVar5;
  }
  else if (in_RSI != (int **)*in_RSI) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff88);
  }
  piVar4 = ppiVar5[3];
  piVar2 = ppiVar5[2];
  piVar8 = (int *)((int)piVar2 + 1);
  piVar3 = ppiVar5[1];
  if (piVar4 < piVar8) {
    ~r0.cap = in_stack_ffffffffffffff98;
    ~r0.array = in_stack_ffffffffffffff88._type;
    ~r0.len = (int)in_stack_ffffffffffffff88.data;
    runtime_growslice(piVar3,(int)piVar8,(int)piVar4,1,(internal_abi_Type *)&DAT_00807920,~r0);
    piVar3 = extraout_RAX;
    piVar4 = extraout_RCX;
    ppiVar5 = in_RSI;
    piVar8 = extraout_RBX;
  }
  *(undefined *)((int)piVar3 + (int)piVar2) = 0x23;
  ppiVar5[2] = piVar8;
  ppiVar5[3] = piVar4;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_00;
    extraout_R11_00[1] = ppiVar5[1];
    piVar3 = extraout_RAX_00;
  }
  ppiVar5[1] = piVar3;
  if ((int **)*ppiVar5 == (int **)0x0) {
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_01 = (int *)ppiVar5;
      extraout_R11_01[1] = *ppiVar5;
    }
    *ppiVar5 = (int *)ppiVar5;
  }
  else if (ppiVar5 != (int **)*ppiVar5) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff88);
  }
  piVar4 = ppiVar5[3];
  piVar2 = ppiVar5[2];
  piVar8 = piVar2 + 1;
  piVar3 = ppiVar5[1];
  if (piVar4 < piVar8) {
    ~r0_00.cap = in_stack_ffffffffffffff98;
    ~r0_00.array = in_stack_ffffffffffffff88._type;
    ~r0_00.len = (int)in_stack_ffffffffffffff88.data;
    runtime_growslice(piVar3,(int)piVar8,(int)piVar4,8,(internal_abi_Type *)&DAT_00807920,~r0_00);
    piVar3 = extraout_RAX_01;
    piVar4 = extraout_RCX_00;
    ppiVar5 = in_RSI;
    piVar8 = extraout_RBX_00;
  }
  *(undefined8 *)((int)piVar3 + (int)piVar2) = 0x5a6c706d746f675a;
  ppiVar5[2] = piVar8;
  ppiVar5[3] = piVar4;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_02 = extraout_RAX_02;
    extraout_R11_02[1] = ppiVar5[1];
    piVar3 = extraout_RAX_02;
  }
  ppiVar5[1] = piVar3;
  return;
}



void html_template_urlPart_String(html_template_urlPart i,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (3 < i) {
    strconv_FormatInt((uint)i,10,in_stack_ffffffffffffffc0);
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
               in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
  if (4 < (byte)(i + 1)) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if (html_template__urlPart_index[(byte)(i + 1)] < 0x3b) {
    if (html_template__urlPart_index[i] <= html_template__urlPart_index[(byte)(i + 1)]) {
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceAlen();
}



// WARNING: Removing unreachable block (ram,0x0077d45b)
// WARNING: Removing unreachable block (ram,0x0077d3ff)
// WARNING: Removing unreachable block (ram,0x0077d6ee)

int html_template_init(EVP_PKEY_CTX *ctx)

{
  error ~r0;
  runtime_itab *extraout_RAX;
  runtime_hmap *extraout_RAX_00;
  map_string_bool h;
  undefined *extraout_RAX_01;
  undefined *extraout_RAX_02;
  map_string_string h_00;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  undefined8 *extraout_RAX_07;
  undefined8 *extraout_RAX_08;
  undefined8 *extraout_RAX_09;
  undefined8 *extraout_RAX_10;
  undefined8 *extraout_RAX_11;
  undefined8 *extraout_RAX_12;
  undefined8 *puVar1;
  regexp_Regexp *extraout_RAX_13;
  regexp_Regexp *extraout_RAX_14;
  regexp_Regexp *prVar2;
  runtime_itab *extraout_RAX_15;
  runtime_hmap *extraout_RAX_16;
  runtime_hmap *prVar3;
  map_string_html_template_element h_01;
  undefined *extraout_RAX_17;
  undefined *extraout_RAX_18;
  undefined *extraout_RAX_19;
  undefined *extraout_RAX_20;
  int extraout_RAX_21;
  undefined8 extraout_RCX;
  undefined8 uVar4;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *extraout_RBX_01;
  void *extraout_RBX_02;
  void *extraout_RBX_03;
  void *extraout_RBX_04;
  void *extraout_RBX_05;
  void *extraout_RBX_06;
  void *pvVar5;
  void **extraout_R11;
  void **extraout_R11_00;
  map_string_bool *extraout_R11_01;
  undefined8 *extraout_R11_02;
  undefined8 *extraout_R11_03;
  undefined8 *extraout_R11_04;
  undefined8 *extraout_R11_05;
  undefined8 *extraout_R11_06;
  regexp_Regexp **extraout_R11_07;
  void **extraout_R11_08;
  void **extraout_R11_09;
  map_string_html_template_element *extraout_R11_10;
  int unaff_R14;
  string in_stack_ffffffffffffff88;
  __interface___ in_stack_ffffffffffffff98;
  runtime_itab *in_stack_ffffffffffffffb0;
  map_string_html_template_element h_02;
  map_string_string phVar6;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  html_template_map_init_0();
  reflect___rtype__Elem((reflect_rtype *)&DAT_007f8260,(reflect_Type)in_stack_ffffffffffffff88);
  pvVar5 = extraout_RBX;
  html_template_errorType.tab = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RBX_00;
    extraout_R11[1] = html_template_errorType.data;
    pvVar5 = extraout_RBX_00;
  }
  html_template_errorType.data = pvVar5;
  reflect___rtype__Elem((reflect_rtype *)&DAT_007f78e0,(reflect_Type)in_stack_ffffffffffffff88);
  prVar3 = extraout_RAX_00;
  pvVar5 = extraout_RBX_01;
  html_template_fmtStringerType.tab = (runtime_itab *)extraout_RAX_00;
