    runtime_mapassign((internal_abi_MapType *)&DAT_0082f3e0,*pprVar4,&k,pprVar4);
    *extraout_RAX_06 = uVar1;
    puVar3 = extraout_RAX_06;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_02 = uVar2;
      extraout_R11_02[1] = extraout_RAX_07[1];
      puVar3 = extraout_RAX_07;
    }
    puVar3[1] = uVar2;
    runtime_mapiternext((runtime_hiter *)local_68);
    pvVar6 = extraout_RDI_00;
  }
  runtime_mapassign((internal_abi_MapType *)&DAT_0082f3e0,*pprVar4,&key.data,pvVar6);
  *extraout_RAX_08 = in_RDI;
  pprVar4 = extraout_RAX_08;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_03 = prStack0000000000000028;
    extraout_R11_03[1] = extraout_RAX_09[1];
    pprVar4 = extraout_RAX_09;
  }
  pprVar4[1] = prStack0000000000000028;
  return;
}



void google_golang_org_grpc_attributes___Attributes__Value
               (google_golang_org_grpc_attributes_Attributes *a,interface___ key,interface___ ~r0)

{
  void *in_RDI;
  void *extraout_RDI;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    key._type = (internal_abi_Type *)a;
    runtime_morestack_noctxt();
    a = (google_golang_org_grpc_attributes_Attributes *)key._type;
    in_RDI = extraout_RDI;
  }
  if ((internal_abi_Type *)a != (internal_abi_Type *)0x0) {
    runtime_mapaccess1((internal_abi_MapType *)&DAT_0082f3e0,
                       (runtime_hmap *)((internal_abi_Type *)a)->Size_,&key.data,in_RDI);
    return;
  }
  return;
}



void google_golang_org_grpc_attributes___Attributes__Equal
               (google_golang_org_grpc_attributes_Attributes *a,
               google_golang_org_grpc_attributes_Attributes *o,bool ~r0)

{
  internal_abi_Type *t;
  internal_abi_Type *x;
  internal_abi_Type *piVar1;
  internal_abi_Type *y;
  char extraout_AL;
  char cVar2;
  internal_abi_Type **extraout_RAX;
  int extraout_RAX_00;
  char extraout_BL;
  bool ok;
  map_interface____interface___ h;
  undefined8 extraout_RBX;
  int iVar3;
  bool ~r0_00;
  int iVar4;
  int unaff_R14;
  google_golang_org_grpc_attributes_Attributes *pgStack0000000000000010;
  runtime_eface in_stack_ffffffffffffff40;
  runtime_iface in_stack_ffffffffffffff50;
  interface___ k;
  undefined local_68 [96];
  
  pgStack0000000000000010 = o;
  while (local_68 + 0x28 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (a == (google_golang_org_grpc_attributes_Attributes *)0x0) {
    if (pgStack0000000000000010 == (google_golang_org_grpc_attributes_Attributes *)0x0) {
      return;
    }
  }
  else if (pgStack0000000000000010 != (google_golang_org_grpc_attributes_Attributes *)0x0) {
    h = a->m;
    if (h == (map_interface____interface___)0x0) {
      iVar3 = 0;
    }
    else {
      iVar3 = h->count;
    }
    if (pgStack0000000000000010->m == (map_interface____interface___)0x0) {
      iVar4 = 0;
    }
    else {
      iVar4 = pgStack0000000000000010->m->count;
    }
    if (iVar4 == iVar3) {
      FUN_0046cdab();
      runtime_mapiterinit((internal_abi_MapType *)&DAT_0082f3e0,(runtime_hmap *)h,
                          (runtime_hiter *)local_68);
      while( true ) {
        if ((internal_abi_Type **)local_68._0_8_ == (internal_abi_Type **)0x0) {
          return;
        }
        k._type = *(internal_abi_Type **)local_68._0_8_;
        k.data = *(internal_abi_Type **)(local_68._0_8_ + 8);
        t = *(internal_abi_Type **)local_68._8_8_;
        x = *(internal_abi_Type **)(local_68._8_8_ + 8);
        runtime_mapaccess2((internal_abi_MapType *)&DAT_0082f3e0,
                           (runtime_hmap *)pgStack0000000000000010->m,&k,t,
                           SUB81(pgStack0000000000000010,0));
        if (extraout_BL == '\0') break;
        piVar1 = *extraout_RAX;
        y = extraout_RAX[1];
        runtime_assertE2I2((internal_abi_InterfaceType *)&DAT_0082f440,in_stack_ffffffffffffff40,
                           in_stack_ffffffffffffff50);
        if (extraout_RAX_00 == 0) {
          if ((piVar1 != t) || (runtime_efaceeq(t,x,y,~r0_00), extraout_AL == '\0')) {
            return;
          }
        }
        else {
          cVar2 = (**(code **)(extraout_RAX_00 + 0x18))(extraout_RBX,piVar1,y);
          if (cVar2 == '\0') {
            return;
          }
        }
        runtime_mapiternext((runtime_hiter *)local_68);
      }
      return;
    }
    return;
  }
  return;
}



void google_golang_org_grpc_attributes___Attributes__String
               (google_golang_org_grpc_attributes_Attributes *a,string ~r0)

{
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  runtime_slice ~r0_03;
  string s;
  string s_00;
  __interface___ a_00;
  string ~r0_04;
  bool bVar1;
  int iVar2;
  bool first;
  uint8 *extraout_RAX;
  uint8 *extraout_RAX_00;
  void *x;
  void *x_00;
  void *__src;
  uint8 *extraout_RAX_01;
  uint8 *extraout_RAX_02;
  uint8 *extraout_RCX;
  int iVar3;
  int extraout_RCX_00;
  int extraout_RCX_01;
  int extraout_RCX_02;
  uint8 *puVar4;
  uint uVar5;
  uint8 *extraout_RBX;
  runtime_hmap *h;
  size_t __n;
  uint extraout_RBX_00;
  size_t num;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  uint8 *puVar6;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_fffffffffffffed8;
  uint8 *in_stack_fffffffffffffee8;
  int in_stack_fffffffffffffef0;
  int in_stack_fffffffffffffef8;
  size_t in_stack_ffffffffffffff08;
  strings_Builder sb;
  runtime_hiter local_68;
  
  while (sb.buf.cap = in_XMM15._8_8_, &sb <= *(strings_Builder **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  sb.addr = &sb;
  sb.buf.array = (uint8 *)sb.buf.cap;
  sb.buf.len = in_XMM15._0_8_;
  puVar4 = (uint8 *)(sb.buf.len + 1);
  puVar6 = (uint8 *)sb.buf.cap;
  if ((uint)sb.buf.cap < puVar4) {
    ~r0_00.cap = (int)in_stack_fffffffffffffee8;
    ~r0_00.array = in_stack_fffffffffffffed8._type;
    ~r0_00.len = (int)in_stack_fffffffffffffed8.data;
    runtime_growslice((void *)sb.buf.cap,(int)puVar4,sb.buf.cap,1,(internal_abi_Type *)&DAT_00807920
                      ,~r0_00);
    sb.buf.cap = (int)extraout_RCX;
    puVar4 = extraout_RBX;
    puVar6 = extraout_RAX;
  }
  puVar6[sb.buf.len] = 0x7b;
  sb.buf.array = puVar6;
  sb.buf.len = (int)puVar4;
  FUN_0046cdab();
  runtime_mapiterinit((internal_abi_MapType *)&DAT_0082f3e0,h,&local_68);
  bVar1 = true;
  while (iVar2 = sb.buf.len, local_68.key != (void *)0x0) {
                    // WARNING: Load size is inaccurate
    puVar4 = *local_68.elem;
    if (!bVar1) {
      if (sb.addr == (strings_Builder *)0x0) {
        sb.addr = &sb;
      }
      else if (sb.addr != &sb) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffed8);
      }
      uVar5 = sb.buf.len + 2;
      if ((uint)sb.buf.cap < uVar5) {
        ~r0_01.cap = (int)in_stack_fffffffffffffee8;
        ~r0_01.array = in_stack_fffffffffffffed8._type;
        ~r0_01.len = (int)in_stack_fffffffffffffed8.data;
        runtime_growslice(sb.buf.array,uVar5,sb.buf.cap,2,(internal_abi_Type *)&DAT_00807920,~r0_01)
        ;
        sb.buf.array = extraout_RAX_00;
        sb.buf.cap = extraout_RCX_00;
        uVar5 = extraout_RBX_00;
      }
      *(undefined2 *)(sb.buf.array + iVar2) = 0x202c;
      sb.buf.len = uVar5;
    }
    s.len = in_stack_fffffffffffffef0;
    s.str = in_stack_fffffffffffffee8;
    google_golang_org_grpc_attributes_str(in_stack_fffffffffffffed8,s);
    s_00.len = in_stack_fffffffffffffef0;
    s_00.str = in_stack_fffffffffffffee8;
    google_golang_org_grpc_attributes_str(in_stack_fffffffffffffed8,s_00);
    runtime_convTstring((string)in_stack_fffffffffffffed8,x);
    runtime_convTstring((string)in_stack_fffffffffffffed8,x_00);
    a_00.len = in_stack_fffffffffffffef0;
    a_00.array = (interface___ *)in_stack_fffffffffffffee8;
    a_00.cap = in_stack_fffffffffffffef8;
    ~r0_04.len = in_stack_ffffffffffffff08;
    ~r0_04.str = puVar4;
    fmt_Sprintf((string)in_stack_fffffffffffffed8,a_00,~r0_04);
    iVar2 = sb.buf.len;
    if (sb.addr == (strings_Builder *)0x0) {
      sb.addr = &sb;
    }
    else if (sb.addr != &sb) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_fffffffffffffed8);
    }
    uVar5 = sb.buf.len + num;
    iVar3 = sb.buf.cap;
    __n = num;
    puVar4 = sb.buf.array;
    if ((uint)sb.buf.cap < uVar5) {
      ~r0_02.cap = (int)in_stack_fffffffffffffee8;
      ~r0_02.array = in_stack_fffffffffffffed8._type;
      ~r0_02.len = (int)in_stack_fffffffffffffed8.data;
      runtime_growslice(sb.buf.array,uVar5,sb.buf.cap,num,(internal_abi_Type *)&DAT_00807920,~r0_02)
      ;
      iVar3 = extraout_RCX_01;
      uVar5 = extraout_RBX_01;
      puVar4 = extraout_RAX_01;
      in_stack_ffffffffffffff08 = __n;
    }
    runtime_memmove(puVar4 + iVar2,__src,__n);
    sb.buf.array = puVar4;
    sb.buf.len = uVar5;
    sb.buf.cap = iVar3;
    runtime_mapiternext(&local_68);
    bVar1 = false;
  }
  if (sb.addr == (strings_Builder *)0x0) {
    sb.addr = &sb;
  }
  else if (sb.addr != &sb) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_fffffffffffffed8);
  }
  uVar5 = sb.buf.len + 1;
  if ((uint)sb.buf.cap < uVar5) {
    ~r0_03.cap = (int)in_stack_fffffffffffffee8;
    ~r0_03.array = in_stack_fffffffffffffed8._type;
    ~r0_03.len = (int)in_stack_fffffffffffffed8.data;
    runtime_growslice(sb.buf.array,uVar5,sb.buf.cap,1,(internal_abi_Type *)&DAT_00807920,~r0_03);
    sb.buf.array = extraout_RAX_02;
    sb.buf.cap = extraout_RCX_02;
    uVar5 = extraout_RBX_02;
  }
  sb.buf.array[iVar2] = 0x7d;
  sb.buf.len = uVar5;
  if (uVar5 <= (uint)-(int)sb.buf.array) {
    return;
  }
  if (sb.buf.array != (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringlen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafestringnilptr();
}



void google_golang_org_grpc_attributes_str(interface___ x,string s)

{
  __interface___ a;
  runtime_iface r;
  __interface___ a_00;
  string ~r0;
  string ~r0_00;
  uint8 *in_RAX;
  int extraout_RAX;
  int in_RBX;
  int unaff_R14;
  runtime_eface in_stack_ffffffffffffffb0;
  runtime_itab *in_stack_ffffffffffffffc0;
  uint8 *in_stack_ffffffffffffffc8;
  int in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  r.data = in_stack_ffffffffffffffc8;
  r.tab = in_stack_ffffffffffffffc0;
  runtime_assertE2I2((internal_abi_InterfaceType *)&DAT_008353c0,in_stack_ffffffffffffffb0,r);
  if (extraout_RAX != 0) {
    a.cap = (int)in_stack_ffffffffffffffc0;
    a.array = (interface___ *)in_stack_ffffffffffffffb0._type;
    a.len = (int)in_stack_ffffffffffffffb0.data;
    ~r0.len = in_stack_ffffffffffffffd0;
    ~r0.str = in_stack_ffffffffffffffc8;
    fmt_Sprint(a,~r0);
    return;
  }
  if (in_RAX == &DAT_008075e0) {
    return;
  }
  a_00.len = (int)in_stack_ffffffffffffffc8;
  a_00.array = (interface___ *)in_stack_ffffffffffffffc0;
  a_00.cap = in_stack_ffffffffffffffd0;
  ~r0_00.len = in_RBX;
  ~r0_00.str = in_RAX;
  fmt_Sprintf((string)in_stack_ffffffffffffffb0,a_00,~r0_00);
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void google_golang_org_grpc_attributes___Attributes__MarshalJSON
               (google_golang_org_grpc_attributes_Attributes *a,__uint8 ~r0,error ~r1)

{
  __uint8 ~r0_00;
  undefined8 unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  string in_stack_ffffffffffffffe0;
  undefined8 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  google_golang_org_grpc_attributes___Attributes__String(a,in_stack_ffffffffffffffe0);
  ~r0_00.len = unaff_RBP;
  ~r0_00.array = (uint8 *)in_stack_fffffffffffffff0;
  ~r0_00.cap = unaff_retaddr;
  runtime_stringtoslicebyte((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffe0,~r0_00);
  return;
}



void crypto_Hash_HashFunc(crypto_Hash h,crypto_Hash ~r0)

{
  return;
}



void crypto_Hash_String(crypto_Hash h,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  switch(h) {
  case 1:
    return;
  case 2:
    return;
  case 3:
    return;
  case 4:
    return;
  case 5:
    return;
  case 6:
    return;
  case 7:
    return;
  case 8:
    return;
  case 9:
    return;
  case 10:
    return;
  case 0xb:
    return;
  case 0xc:
    return;
  case 0xd:
    return;
  case 0xe:
    return;
  case 0xf:
    return;
  case 0x10:
    return;
  case 0x11:
    return;
  case 0x12:
    return;
  case 0x13:
    return;
  default:
    strconv_FormatInt(h,10,in_stack_ffffffffffffffd0);
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    runtime_concatstring2
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
}



void crypto_Hash_Size(crypto_Hash h,int ~r0)

{
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (h - 1 < 0x13) {
    if (h < (uint)crypto_digestSizes.len) {
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndexU();
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe8);
}



void crypto_Hash_New(crypto_Hash h,hash_Hash ~r0)

{
  func___hash_Hash *pfVar1;
  string ~r0_00;
  void *x;
  func___hash_Hash **f;
  int unaff_RBP;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (h - 1 < 0x13) {
    if ((uint)crypto_hashes.len <= h) {
                    // WARNING: Subroutine does not return
      runtime_panicIndexU();
    }
    if (crypto_hashes.array[h] != (func___hash_Hash **)0x0) {
      pfVar1 = *crypto_hashes.array[h];
      (*pfVar1)((hash_Hash *)pfVar1);
      return;
    }
  }
  strconv_FormatInt(h,10,(string)in_stack_ffffffffffffffc0);
  ~r0_00.len = unaff_RBP;
  ~r0_00.str = in_stack_fffffffffffffff0;
  runtime_concatstring3
            ((runtime_tmpBuf *)0x0,(string)in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
             in_stack_ffffffffffffffe0,~r0_00);
  runtime_convTstring((string)in_stack_ffffffffffffffc0,x);
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffc0);
}



void crypto_Hash_Available(crypto_Hash h,bool ~r0)

{
  if ((h < 0x14) && ((uint)crypto_hashes.len <= h)) {
                    // WARNING: Subroutine does not return
    runtime_panicIndexU();
  }
  return;
}



int crypto_init(EVP_PKEY_CTX *ctx)

{
  func___hash_Hash ***extraout_RAX;
  func___hash_Hash ***extraout_RAX_00;
  func___hash_Hash ***pppfVar1;
  void *in_RDI;
  void *extraout_RDI;
  undefined8 *extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  runtime_makeslice((internal_abi_Type *)&DAT_0080d5e0,0x14,0x14,in_RDI);
  crypto_hashes.len = 0x14;
  crypto_hashes.cap = 0x14;
  pppfVar1 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_00;
    extraout_R11[1] = crypto_hashes.array;
    pppfVar1 = extraout_RAX_00;
  }
  crypto_hashes.array = pppfVar1;
  return (int)pppfVar1;
}



void crypto___Hash__Available(bool ~r0)

{
  int *piVar1;
  uint uVar2;
  undefined7 in_register_00000001;
  int unaff_R14;
  undefined auStack_18 [16];
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_18;
  }
  if ((uint *)CONCAT71(in_register_00000001,~r0) == (uint *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  uVar2 = *(uint *)CONCAT71(in_register_00000001,~r0);
  if ((uVar2 < 0x14) && ((uint)crypto_hashes.len <= uVar2)) {
                    // WARNING: Subroutine does not return
    runtime_panicIndexU();
  }
  return;
}



void crypto___Hash__HashFunc(crypto_Hash ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void crypto___Hash__New(hash_Hash ~r0)

{
  hash_Hash **pphVar1;
  hash_Hash ~r0_00;
  runtime_itab *in_RAX;
  void *unaff_RBP;
  int unaff_R14;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.tab = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.tab;
  }
  pphVar1 = *(hash_Hash ***)(unaff_R14 + 0x20);
  if ((pphVar1 != (hash_Hash **)0x0) && (*pphVar1 == &~r0)) {
    *pphVar1 = (hash_Hash *)&stack0xfffffffffffffff0;
  }
  if (in_RAX != (runtime_itab *)0x0) {
    ~r0_00.data = unaff_RBP;
    ~r0_00.tab = in_stack_fffffffffffffff0;
    crypto_Hash_New((crypto_Hash)in_RAX->inter,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void crypto___Hash__Size(int ~r0)

{
  int *piVar1;
  int unaff_R14;
  uint *in_stack_00000008;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = (uint *)~r0;
    runtime_morestack_noctxt();
    ~r0 = (int)in_stack_00000008;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((uint **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffe8;
  }
  if ((uint *)~r0 == (uint *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  if (0x12 < *(uint *)~r0 - 1) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe8);
  }
  if (*(uint *)~r0 < (uint)crypto_digestSizes.len) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndexU();
}



void crypto___Hash__String(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  crypto_Hash *in_RAX;
  int unaff_RBP;
  int unaff_R14;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (crypto_Hash *)~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xfffffffffffffff0;
  }
  if (in_RAX != (crypto_Hash *)0x0) {
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    crypto_Hash_String(*in_RAX,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Unknown calling convention

void crypto_internal_boring_sig_StandardCrypto(void)

{
  return;
}



void crypto_internal_boring___PublicKeyECDH__Bytes(__uint8 ~r0)

{
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe8);
}



void crypto_internal_boring___PrivateKeyECDH__PublicKey
               (crypto_internal_boring_PublicKeyECDH *~r0,error ~r1)

{
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe8);
}



int crypto_aes_init(EVP_PKEY_CTX *ctx)

{
  uint uVar1;
  
  if ((internal_cpu_X86.HasAES) || (internal_cpu_ARM64.HasAES)) {
    crypto_aes_supportsAES = true;
  }
  else {
    crypto_aes_supportsAES = false;
  }
  if (internal_cpu_X86.HasPCLMULQDQ) {
    uVar1 = 1;
  }
  else {
    uVar1 = (uint)internal_cpu_ARM64.HasPMULL;
  }
  crypto_aes_supportsGFMUL = (bool)(char)uVar1;
  return uVar1;
}



void crypto_internal_nistec_fiat___P224Element__One
               (crypto_internal_nistec_fiat_P224Element *e,
               crypto_internal_nistec_fiat_P224Element *~r0)

{
  undefined4 in_XMM15_Da;
  undefined4 in_XMM15_Db;
  undefined4 in_XMM15_Dc;
  undefined4 in_XMM15_Dd;
  
  e->x[0] = 0xffffffff00000000;
  e->x[1] = 0xffffffffffffffff;
  *(undefined4 *)(e->x + 2) = in_XMM15_Da;
  *(undefined4 *)((int)e->x + 0x14) = in_XMM15_Db;
  *(undefined4 *)(e->x + 3) = in_XMM15_Dc;
  *(undefined4 *)((int)e->x + 0x1c) = in_XMM15_Dd;
  return;
}



void crypto_internal_nistec_fiat___P224Element__Equal
               (crypto_internal_nistec_fiat_P224Element *e,
               crypto_internal_nistec_fiat_P224Element *t,int ~r0)

{
  __uint8 ~r0_00;
  __uint8 ~r0_01;
  int extraout_RBX;
  int extraout_RBX_00;
  int iVar1;
  int i;
  uint8 v;
  int unaff_R14;
  undefined in_XMM15 [16];
  undefined in_stack_ffffffffffffff98 [16];
  int in_stack_ffffffffffffffa8;
  int iVar2;
  undefined local_50 [12];
  undefined4 uStack_44;
  undefined auStack_40 [12];
  undefined local_34 [12];
  undefined4 uStack_28;
  undefined auStack_24 [12];
  crypto_internal_nistec_fiat_P224Element *local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_34 = in_XMM15._0_12_;
  uStack_28 = in_XMM15._0_4_;
  auStack_24 = in_XMM15._4_12_;
  ~r0_00.cap = in_stack_ffffffffffffffa8;
  ~r0_00.array = (uint8 *)in_stack_ffffffffffffff98._0_8_;
  ~r0_00.len = in_stack_ffffffffffffff98._8_8_;
  local_10 = t;
  crypto_internal_nistec_fiat___P224Element__bytes(e,(uint8 (*) [28])local_34,~r0_00);
  local_50 = in_XMM15._0_12_;
  uStack_44 = in_XMM15._0_4_;
  auStack_40 = in_XMM15._4_12_;
  ~r0_01.cap = extraout_RBX;
  ~r0_01.array = (uint8 *)in_stack_ffffffffffffff98._0_8_;
  ~r0_01.len = in_stack_ffffffffffffff98._8_8_;
  iVar2 = extraout_RBX;
  crypto_internal_nistec_fiat___P224Element__bytes(local_10,(uint8 (*) [28])local_50,~r0_01);
  if (extraout_RBX_00 == iVar2) {
    for (iVar1 = 0; iVar1 < iVar2; iVar1 = iVar1 + 1) {
    }
  }
  return;
}



void crypto_internal_nistec_fiat___P224Element__IsZero
               (crypto_internal_nistec_fiat_P224Element *e,int ~r0)

{
  __uint8 ~r0_00;
  int iVar1;
  int i;
  uint8 v;
  int extraout_RBX;
  int unaff_R14;
  undefined in_XMM15 [16];
  undefined in_stack_ffffffffffffffb0 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.cap = in_XMM15._0_8_;
  ~r0_00.array = (uint8 *)in_stack_ffffffffffffffb0._0_8_;
  ~r0_00.len = in_stack_ffffffffffffffb0._8_8_;
  crypto_internal_nistec_fiat___P224Element__bytes
            (e,(uint8 (*) [28])&stack0xffffffffffffffc0,~r0_00);
  if (extraout_RBX == 0x1c) {
    for (iVar1 = 0; iVar1 < 0x1c; iVar1 = iVar1 + 1) {
    }
  }
  return;
}



void crypto_internal_nistec_fiat___P224Element__Set
               (crypto_internal_nistec_fiat_P224Element *e,
               crypto_internal_nistec_fiat_P224Element *t,
               crypto_internal_nistec_fiat_P224Element *~r0)

{
  undefined4 uVar1;
  undefined4 uVar2;
  undefined4 uVar3;
  
  uVar1 = *(undefined4 *)((int)t->x + 4);
  uVar2 = *(undefined4 *)(t->x + 1);
  uVar3 = *(undefined4 *)((int)t->x + 0xc);
  *(undefined4 *)e->x = *(undefined4 *)t->x;
  *(undefined4 *)((int)e->x + 4) = uVar1;
  *(undefined4 *)(e->x + 1) = uVar2;
  *(undefined4 *)((int)e->x + 0xc) = uVar3;
  uVar1 = *(undefined4 *)((int)t->x + 0x14);
  uVar2 = *(undefined4 *)(t->x + 3);
  uVar3 = *(undefined4 *)((int)t->x + 0x1c);
  *(undefined4 *)(e->x + 2) = *(undefined4 *)(t->x + 2);
  *(undefined4 *)((int)e->x + 0x14) = uVar1;
  *(undefined4 *)(e->x + 3) = uVar2;
  *(undefined4 *)((int)e->x + 0x1c) = uVar3;
  return;
}



void crypto_internal_nistec_fiat___P224Element__Bytes
               (crypto_internal_nistec_fiat_P224Element *e,__uint8 ~r0)

{
  __uint8 ~r0_00;
  uint8 (*out) [28];
  uint8 (*_out) [28];
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  undefined in_stack_ffffffffffffffe0 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0081a8a0,in_RBX);
  ~r0_00.cap = (int)e;
  ~r0_00.array = (uint8 *)in_stack_ffffffffffffffe0._0_8_;
  ~r0_00.len = in_stack_ffffffffffffffe0._8_8_;
  crypto_internal_nistec_fiat___P224Element__bytes(e,out,~r0_00);
  return;
}



void crypto_internal_nistec_fiat___P224Element__bytes
               (crypto_internal_nistec_fiat_P224Element *e,uint8 (*out) [28],__uint8 ~r0)

{
  uint8 uVar1;
  int i;
  uint8 *puVar2;
  int unaff_R14;
  uint64 local_28 [4];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  crypto_internal_nistec_fiat_p224FromMontgomery(&local_28,e->x);
  crypto_internal_nistec_fiat_p224ToBytes(out,&local_28);
  i = 0;
  while( true ) {
    if (0xd < i) {
      return;
    }
    uVar1 = (*out)[i];
    if (0x1b < (uint)-(i + -0x1b)) break;
    puVar2 = (uint8 *)((int)out - (i + -0x1b));
    (*out)[i] = *puVar2;
    *puVar2 = uVar1;
    i = i + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void crypto_internal_nistec_fiat___P224Element__SetBytes
               (crypto_internal_nistec_fiat_P224Element *e,__uint8 v,
               crypto_internal_nistec_fiat_P224Element *~r0,error ~r1)

{
  byte bVar1;
  undefined uVar2;
  int extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  int i_1;
  int in_RCX;
  int i;
  uint uVar3;
  void *~r0_00;
  int unaff_R14;
  undefined in_XMM15 [16];
  __uint8 in_stack_ffffffffffffff28;
  undefined local_c0 [12];
  undefined4 uStack_b4;
  undefined auStack_b0 [12];
  undefined4 local_a4;
  undefined4 uStack_a0;
  undefined4 uStack_9c;
  undefined4 uStack_98;
  undefined4 uStack_94;
  undefined4 uStack_90;
  undefined4 uStack_8c;
  uint64 local_88 [4];
  undefined local_68 [16];
  undefined local_58 [16];
  uint64 local_48 [4];
  crypto_internal_nistec_fiat_P224Element local_28;
  
  while (local_58 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
