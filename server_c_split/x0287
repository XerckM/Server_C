            [(byte)"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZgrpc: addrConn.createTransport failed to connect to %s. Err: %vHealth check is requested but health check function is not set.malformed GOMEMLIMIT; see `go doc runtime/debug.SetMemoryLimit`attempt to delete an entry (id=%d) that doesn\'t currently existtransport: received per-RPC creds error with illegal status: %vnet/trace: trace used after finish:\nFinished at:\n%s\nUsed at:\n%selementNoneelementScriptelementStyleelementTextareaelementTitleecdsa: internal error: P256OrdInverse produced an invalid valuegrpc: Compressor is not installed for requested grpc-encoding %qgrpc: client streaming protocol violation: get <nil>, want <EOF>runtime.SetFinalizer: first argument was allocated into an arenareflect.StructOf: struct size would exceed virtual address spacethe stream is rejected because server is draining the connectionjson: invalid number literal, trying to unmarshal %q into Numberheader key %q contains value with non-printable ASCII charactersextension %v has mismatching containing message: got %v, want %vABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credential..." /* TRUNCATED STRING LITERAL */
                   [i_3 + 0x476]] = (uint8)i_3;
          }
          peVar1 = __dest_00;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_00 = extraout_RAX_00;
            extraout_R11_00[1] = encoding_base64_URLEncoding;
            peVar1 = extraout_RAX_00;
            pcVar2 = extraout_RBX_00;
          }
          encoding_base64_URLEncoding = peVar1;
          runtime_newobject((internal_abi_Type *)&DAT_008827a0,pcVar2);
          *extraout_RAX_01 = *(undefined8 *)encoding_base64_StdEncoding->encode;
          auVar3 = FUN_0046d048();
          i_4 = 0;
          while( true ) {
            if (0x3f < i_4) {
              *(undefined4 *)(auVar3._0_8_ + 0x140) = 0xffffffff;
              if (runtime_writeBarrier._0_4_ != 0) {
                runtime_gcWriteBarrier2();
                auVar3._8_8_ = extraout_RBX_01;
                auVar3._0_8_ = extraout_RAX_02;
                *extraout_R11_01 = extraout_RAX_02;
                extraout_R11_01[1] = encoding_base64_RawStdEncoding;
              }
              encoding_base64_RawStdEncoding = auVar3._0_8_;
              runtime_newobject((internal_abi_Type *)&DAT_008827a0,auVar3._8_8_);
              *extraout_RAX_03 = *(undefined8 *)encoding_base64_URLEncoding->encode;
              peVar1 = (encoding_base64_Encoding *)FUN_0046d048();
              i_5 = 0;
              while( true ) {
                if (0x3f < i_5) {
                  peVar1->padChar = -1;
                  if (runtime_writeBarrier._0_4_ != 0) {
                    runtime_gcWriteBarrier2();
                    *extraout_R11_02 = extraout_RAX_04;
                    extraout_R11_02[1] = encoding_base64_RawURLEncoding;
                    peVar1 = extraout_RAX_04;
                  }
                  encoding_base64_RawURLEncoding = peVar1;
                  return (int)peVar1;
                }
                if (peVar1->encode[i_5] == 0xffffffff) break;
                i_5 = i_5 + 1;
              }
                    // WARNING: Subroutine does not return
              runtime_gopanic(in_stack_ffffffffffffffd0);
            }
            if (*(byte *)(auVar3._0_8_ + i_4) == 0xffffffff) break;
            i_4 = i_4 + 1;
          }
                    // WARNING: Subroutine does not return
          runtime_gopanic(in_stack_ffffffffffffffd0);
        }
        if (("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZgrpc: addrConn.createTransport failed to connect to %s. Err: %vHealth check is requested but health check function is not set.malformed GOMEMLIMIT; see `go doc runtime/debug.SetMemoryLimit`attempt to delete an entry (id=%d) that doesn\'t currently existtransport: received per-RPC creds error with illegal status: %vnet/trace: trace used after finish:\nFinished at:\n%s\nUsed at:\n%selementNoneelementScriptelementStyleelementTextareaelementTitleecdsa: internal error: P256OrdInverse produced an invalid valuegrpc: Compressor is not installed for requested grpc-encoding %qgrpc: client streaming protocol violation: get <nil>, want <EOF>runtime.SetFinalizer: first argument was allocated into an arenareflect.StructOf: struct size would exceed virtual address spacethe stream is rejected because server is draining the connectionjson: invalid number literal, trying to unmarshal %q into Numberheader key %q contains value with non-printable ASCII charactersextension %v has mismatching containing message: got %v, want %vABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credential..." /* TRUNCATED STRING LITERAL */
             [i_2 + 0x476] == '\n') ||
           ("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZgrpc: addrConn.createTransport failed to connect to %s. Err: %vHealth check is requested but health check function is not set.malformed GOMEMLIMIT; see `go doc runtime/debug.SetMemoryLimit`attempt to delete an entry (id=%d) that doesn\'t currently existtransport: received per-RPC creds error with illegal status: %vnet/trace: trace used after finish:\nFinished at:\n%s\nUsed at:\n%selementNoneelementScriptelementStyleelementTextareaelementTitleecdsa: internal error: P256OrdInverse produced an invalid valuegrpc: Compressor is not installed for requested grpc-encoding %qgrpc: client streaming protocol violation: get <nil>, want <EOF>runtime.SetFinalizer: first argument was allocated into an arenareflect.StructOf: struct size would exceed virtual address spacethe stream is rejected because server is draining the connectionjson: invalid number literal, trying to unmarshal %q into Numberheader key %q contains value with non-printable ASCII charactersextension %v has mismatching containing message: got %v, want %vABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credential..." /* TRUNCATED STRING LITERAL */
            [i_2 + 0x476] == '\r')) break;
        i_2 = i_2 + 1;
      }
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffd0);
    }
    if (("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZgrpc: addrConn.createTransport failed to connect to %s. Err: %vHealth check is requested but health check function is not set.malformed GOMEMLIMIT; see `go doc runtime/debug.SetMemoryLimit`attempt to delete an entry (id=%d) that doesn\'t currently existtransport: received per-RPC creds error with illegal status: %vnet/trace: trace used after finish:\nFinished at:\n%s\nUsed at:\n%selementNoneelementScriptelementStyleelementTextareaelementTitleecdsa: internal error: P256OrdInverse produced an invalid valuegrpc: Compressor is not installed for requested grpc-encoding %qgrpc: client streaming protocol violation: get <nil>, want <EOF>runtime.SetFinalizer: first argument was allocated into an arenareflect.StructOf: struct size would exceed virtual address spacethe stream is rejected because server is draining the connectionjson: invalid number literal, trying to unmarshal %q into Numberheader key %q contains value with non-printable ASCII charactersextension %v has mismatching containing message: got %v, want %vABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credential..." /* TRUNCATED STRING LITERAL */
         [i + 0x436] == '\n') ||
       ("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZgrpc: addrConn.createTransport failed to connect to %s. Err: %vHealth check is requested but health check function is not set.malformed GOMEMLIMIT; see `go doc runtime/debug.SetMemoryLimit`attempt to delete an entry (id=%d) that doesn\'t currently existtransport: received per-RPC creds error with illegal status: %vnet/trace: trace used after finish:\nFinished at:\n%s\nUsed at:\n%selementNoneelementScriptelementStyleelementTextareaelementTitleecdsa: internal error: P256OrdInverse produced an invalid valuegrpc: Compressor is not installed for requested grpc-encoding %qgrpc: client streaming protocol violation: get <nil>, want <EOF>runtime.SetFinalizer: first argument was allocated into an arenareflect.StructOf: struct size would exceed virtual address spacethe stream is rejected because server is draining the connectionjson: invalid number literal, trying to unmarshal %q into Numberheader key %q contains value with non-printable ASCII charactersextension %v has mismatching containing message: got %v, want %vABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credential..." /* TRUNCATED STRING LITERAL */
        [i + 0x436] == '\r')) break;
    i = i + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffd0);
}



void type__eq_encoding_base64_Encoding
               (encoding_base64_Encoding *p,encoding_base64_Encoding *q,bool r)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_memequal();
  return;
}



void encoding_base64___CorruptInputError__Error(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  int64 *in_RAX;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (int64 *)~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffd0;
  }
  if (in_RAX != (int64 *)0x0) {
    strconv_FormatInt(*in_RAX,10,in_stack_ffffffffffffffd0);
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    runtime_concatstring2
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void encoding_json_Unmarshal(__uint8 data,interface___ v,error ~r0)

{
  __uint8 data_00;
  error ~r0_00;
  error ~r0_01;
  encoding_json_scanner *in_RAX;
  encoding_json_decodeState *extraout_RAX;
  encoding_json_decodeState *_d;
  int extraout_RAX_00;
  encoding_json_decodeState *extraout_RAX_01;
  encoding_json_decodeState *extraout_RAX_02;
  encoding_json_decodeState *extraout_RAX_03;
  encoding_json_decodeState *d;
  int in_RCX;
  void *pvVar1;
  encoding_json_errorContext *peVar2;
  void *in_RBX;
  undefined8 extraout_RSI;
  encoding_json_scanner **extraout_R11;
  void **extraout_R11_00;
  undefined8 *extraout_R11_01;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffd0;
  runtime_itab *in_stack_ffffffffffffffe0;
  runtime_itab *in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_newobject((internal_abi_Type *)&DAT_0088dc00,in_RBX);
  data_00.cap = (int)in_stack_ffffffffffffffe0;
  data_00.array = (uint8 *)in_stack_ffffffffffffffd0._type;
  data_00.len = (int)in_stack_ffffffffffffffd0.data;
  ~r0_01.data = extraout_RAX;
  ~r0_01.tab = in_stack_ffffffffffffffe8;
  d = extraout_RAX;
  encoding_json_checkValid(data_00,in_RAX,~r0_01);
  if (extraout_RAX_00 != 0) {
    return;
  }
  (d->data).len = (int)in_RBX;
  (d->data).cap = in_RCX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = in_RAX;
    extraout_R11[1] = (encoding_json_scanner *)(extraout_RAX_01->data).array;
    d = extraout_RAX_01;
  }
  (d->data).array = (uint8 *)in_RAX;
  d->off = 0;
  (d->savedError).tab = (runtime_itab *)0x0;
  if (runtime_writeBarrier._0_4_ != 0) {
    pvVar1 = (d->savedError).data;
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = pvVar1;
    d = extraout_RAX_02;
  }
  (d->savedError).data = (void *)0x0;
  peVar2 = d->errorContext;
  if (peVar2 != (encoding_json_errorContext *)0x0) {
    (peVar2->Struct).tab = (runtime_itab *)0x0;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_01 = extraout_RSI;
      d = extraout_RAX_03;
    }
    *(void **)&peVar2->Struct = (void *)0x0;
    (d->errorContext->FieldStack).len = 0;
  }
  ~r0_00.data = in_stack_ffffffffffffffe8;
  ~r0_00.tab = in_stack_ffffffffffffffe0;
  encoding_json___decodeState__unmarshal(d,in_stack_ffffffffffffffd0,~r0_00);
  return;
}



void encoding_json___UnmarshalTypeError__Error(encoding_json_UnmarshalTypeError *e,string ~r0)

{
  __string a;
  string a1;
  string ~r0_00;
  string a2;
  string ~r0_01;
  int unaff_R14;
  string in_stack_ffffffffffffff30;
  uint8 *in_stack_ffffffffffffff40;
  uint8 *in_stack_ffffffffffffff48;
  uint8 *in_stack_ffffffffffffff50;
  int in_stack_ffffffffffffff58;
  string in_stack_ffffffffffffff60;
  uint8 *in_stack_ffffffffffffff70;
  int in_stack_ffffffffffffff78;
  int local_50;
  undefined *local_48;
  undefined8 local_40;
  uint8 *local_38;
  int local_30;
  undefined *local_28;
  undefined8 local_20;
  undefined local_18 [16];
  
  while (&local_50 <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((e->Struct).len == 0) && ((e->Field).len == 0)) {
    (*(code *)(e->Type).tab[7].fun[0])((e->Type).data);
    a1.len = (int)in_stack_ffffffffffffff48;
    a1.str = in_stack_ffffffffffffff40;
    a2.len = in_stack_ffffffffffffff58;
    a2.str = in_stack_ffffffffffffff50;
    ~r0_01.len = in_stack_ffffffffffffff78;
    ~r0_01.str = in_stack_ffffffffffffff70;
    runtime_concatstring4
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff30,a1,a2,in_stack_ffffffffffffff60,
               ~r0_01);
    return;
  }
  (*(code *)(e->Type).tab[7].fun[0])((e->Type).data);
  local_18 = FUN_0046cda2();
  local_50 = (e->Struct).len;
  local_40 = 1;
  local_48 = &DAT_0095a710;
  local_38 = (e->Field).str;
  local_30 = (e->Field).len;
  local_20 = 9;
  local_28 = &DAT_008b2a1d;
  a.cap = (int)in_stack_ffffffffffffff40;
  a.array = (string *)in_stack_ffffffffffffff30.str;
  a.len = in_stack_ffffffffffffff30.len;
  ~r0_00.len = (int)in_stack_ffffffffffffff50;
  ~r0_00.str = in_stack_ffffffffffffff48;
  runtime_concatstrings((runtime_tmpBuf *)0x0,a,~r0_00);
  return;
}



void encoding_json___InvalidUnmarshalError__Error(encoding_json_InvalidUnmarshalError *e,string ~r0)

{
  runtime_itab *prVar1;
  string ~r0_00;
  string ~r0_01;
  int iVar2;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  prVar1 = (e->Type).tab;
  if (prVar1 != (runtime_itab *)0x0) {
    iVar2 = (*(code *)prVar1[4].fun[0])((e->Type).data);
    if (iVar2 != 0x16) {
      (*(code *)(e->Type).tab[7].fun[0])((e->Type).data);
      ~r0_00.len = unaff_RBP;
      ~r0_00.str = in_stack_fffffffffffffff0;
      runtime_concatstring3
                ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
                 in_stack_ffffffffffffffe0,~r0_00);
      return;
    }
    (*(code *)(e->Type).tab[7].fun[0])((e->Type).data);
    ~r0_01.len = unaff_RBP;
    ~r0_01.str = in_stack_fffffffffffffff0;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
               in_stack_ffffffffffffffe0,~r0_01);
    return;
  }
  return;
}



void encoding_json___decodeState__unmarshal(encoding_json_decodeState *d,interface___ v,error ~r0)

{
  reflect_Value v_00;
  error ~r0_00;
  error ~r0_01;
  encoding_json_decodeState *extraout_RAX;
  encoding_json_decodeState *extraout_RAX_00;
  int extraout_RAX_01;
  undefined1 *puVar1;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *puVar2;
  undefined8 *in_RCX;
  void *pvVar3;
  internal_abi_Type *t;
  void *in_RBX;
  byte bVar4;
  reflect_flag f;
  undefined8 extraout_RSI;
  undefined8 extraout_RSI_00;
  void *ptr;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  void **extraout_R11_01;
  int unaff_R14;
  bool bVar5;
  error in_stack_ffffffffffffff90;
  runtime_itab *in_stack_ffffffffffffffa0;
  runtime_itab *in_stack_ffffffffffffffa8;
  void *in_stack_ffffffffffffffb0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RBX == (void *)0x0) {
    bVar4 = 0;
    bVar5 = false;
    in_RCX = (undefined8 *)0x0;
  }
  else if (in_RBX == (void *)0x0) {
    bVar4 = 0;
    bVar5 = false;
    in_RCX = (undefined8 *)0x0;
  }
  else {
    bVar4 = *(byte *)((int)in_RBX + 0x17) & 0x1f;
    bVar5 = (*(byte *)((int)in_RBX + 0x17) & 0x20) == 0;
  }
  if (bVar4 == 0x16) {
    if (bVar5) {
      in_RCX = (undefined8 *)*in_RCX;
    }
    if (in_RCX != (undefined8 *)0x0) {
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11 = extraout_RSI;
        d = extraout_RAX;
      }
      (d->scan).step =
           (func__encoding_json_scanner__uint8__int **)&PTR_encoding_json_stateBeginValue_008eb960;
      (d->scan).parseState.len = 0;
      (d->scan).err.tab = (runtime_itab *)0x0;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_00 = extraout_RSI_00;
        d = extraout_RAX_00;
      }
      (d->scan).err.data = (void *)0x0;
      (d->scan).endTop = false;
      encoding_json___decodeState__scanWhile(d,9);
      v_00.flag = (reflect_flag)in_stack_ffffffffffffffa0;
      v_00.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff90.tab;
      v_00.ptr = in_stack_ffffffffffffff90.data;
      ~r0_01.data = in_stack_ffffffffffffffb0;
      ~r0_01.tab = in_stack_ffffffffffffffa8;
      encoding_json___decodeState__value(d,v_00,~r0_01);
      if (extraout_RAX_01 != 0) {
        ~r0_00.data = in_stack_ffffffffffffffa8;
        ~r0_00.tab = in_stack_ffffffffffffffa0;
        encoding_json___decodeState__addErrorContext(d,in_stack_ffffffffffffff90,~r0_00);
        return;
      }
      return;
    }
  }
  if (in_RBX == (void *)0x0) {
    puVar1 = (undefined1 *)0x0;
    pvVar3 = (void *)0x0;
  }
  else {
    puVar1 = go_itab__reflect_rtype_reflect_Type;
    pvVar3 = in_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_008429e0,in_RBX);
  *extraout_RAX_02 = puVar1;
  puVar2 = extraout_RAX_02;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_01 = pvVar3;
    puVar2 = extraout_RAX_03;
  }
  puVar2[1] = pvVar3;
  return;
}



void encoding_json_Number_String(encoding_json_Number n,string ~r0)

{
  return;
}



void encoding_json_Number_Float64(encoding_json_Number n,float64 ~r0,error ~r1)

{
  error ~r1_00;
  int in_RAX;
  void *unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffe0;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r1_00.data = unaff_RBP;
  ~r1_00.tab = in_stack_fffffffffffffff0;
  strconv_ParseFloat(in_stack_ffffffffffffffe0,in_RAX,~r0,~r1_00);
  return;
}



void encoding_json_Number_Int64(encoding_json_Number n,int64 ~r0,error ~r1)

{
  int in_RBX;
  int unaff_R14;
  string in_stack_ffffffffffffffd8;
  error in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  strconv_ParseInt(in_stack_ffffffffffffffd8,~r0,in_RBX,10,in_stack_ffffffffffffffe8);
  return;
}



void encoding_json___decodeState__addErrorContext(encoding_json_decodeState *d,error err,error ~r0)

{
  encoding_json_errorContext *peVar1;
  runtime_itab *prVar2;
  string ~r0_00;
  undefined8 extraout_RAX;
  undefined8 extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 uVar3;
  int in_RCX;
  encoding_json_UnmarshalTypeError *err_1;
  int extraout_RCX;
  int iVar4;
  uint8 *in_RBX;
  undefined8 extraout_RBX;
  int unaff_RBP;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  undefined auVar5 [16];
  __string in_stack_ffffffffffffffc8;
  string in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  peVar1 = d->errorContext;
  if (((peVar1 != (encoding_json_errorContext *)0x0) &&
      (((prVar2 = (peVar1->Struct).tab, prVar2 != (runtime_itab *)0x0 ||
        ((peVar1->FieldStack).len != 0)) && (in_RBX != (uint8 *)0x0)))) &&
     (in_RBX == go_itab__encoding_json_UnmarshalTypeError_error)) {
    auVar5 = (*(code *)prVar2[5].fun[0])((peVar1->Struct).data);
    uVar3 = auVar5._0_8_;
    *(int *)(in_RCX + 0x30) = auVar5._8_8_;
    iVar4 = in_RCX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX;
      extraout_R11[1] = *(undefined8 *)(extraout_RCX + 0x28);
      uVar3 = extraout_RAX;
      iVar4 = extraout_RCX;
    }
    *(undefined8 *)(iVar4 + 0x28) = uVar3;
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_RBX;
    strings_Join(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffe0,~r0_00);
    *(undefined8 *)(in_RCX + 0x40) = extraout_RBX;
    uVar3 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RAX_01;
      extraout_R11_00[1] = *(undefined8 *)(in_RCX + 0x38);
      uVar3 = extraout_RAX_01;
    }
    *(undefined8 *)(in_RCX + 0x38) = uVar3;
  }
  return;
}



// WARNING: Unknown calling convention

void encoding_json___decodeState__skip(encoding_json_decodeState *d)

{
  encoding_json_scanner *peVar1;
  int iVar2;
  uint uVar3;
  uint8 *puVar4;
  func__encoding_json_scanner__uint8__int *pfVar5;
  int iVar6;
  int op;
  uint uVar7;
  encoding_json_scanner *s;
  int i;
  int unaff_R14;
  encoding_json_decodeState *peStack0000000000000008;
  
  peStack0000000000000008 = d;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar2 = (peStack0000000000000008->scan).parseState.len;
  peVar1 = &peStack0000000000000008->scan;
  uVar3 = (peStack0000000000000008->data).len;
  puVar4 = (peStack0000000000000008->data).array;
  uVar7 = peStack0000000000000008->off;
  do {
    if (uVar3 <= uVar7) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    pfVar5 = *(peStack0000000000000008->scan).step;
    iVar6 = (*pfVar5)(peVar1,puVar4[uVar7],(int *)pfVar5);
    uVar7 = uVar7 + 1;
  } while (iVar2 <= (peStack0000000000000008->scan).parseState.len);
  peStack0000000000000008->off = uVar7;
  peStack0000000000000008->opcode = iVar6;
  return;
}



// WARNING: Unknown calling convention

void encoding_json___decodeState__scanNext(encoding_json_decodeState *d)

{
  uint uVar1;
  uint uVar2;
  int *piVar3;
  int iVar4;
  int extraout_RAX;
  int in_RBX;
  int extraout_RBX;
  int unaff_R14;
  encoding_json_decodeState *peStack0000000000000008;
  
  peStack0000000000000008 = d;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  uVar1 = (peStack0000000000000008->data).len;
  uVar2 = peStack0000000000000008->off;
  if ((int)uVar2 < (int)uVar1) {
    if (uVar1 <= uVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    piVar3 = (int *)(peStack0000000000000008->data).array;
    iVar4 = (**(peStack0000000000000008->scan).step)
                      (&peStack0000000000000008->scan,*(uint8 *)((int)piVar3 + uVar2),piVar3);
    peStack0000000000000008->opcode = iVar4;
    peStack0000000000000008->off = peStack0000000000000008->off + 1;
  }
  else {
    encoding_json___scanner__eof(&peStack0000000000000008->scan,in_RBX);
    peStack0000000000000008->opcode = extraout_RAX;
    peStack0000000000000008->off = (peStack0000000000000008->data).len + 1;
  }
  return;
}



// WARNING: Unknown calling convention

void encoding_json___decodeState__scanWhile(encoding_json_decodeState *d,int op)

{
  encoding_json_scanner *s_00;
  uint uVar1;
  uint8 *puVar2;
  func__encoding_json_scanner__uint8__int *pfVar3;
  int iVar4;
  int newOp;
  int extraout_RAX;
  uint uVar5;
  encoding_json_scanner *s;
  int i;
  int unaff_R14;
  encoding_json_decodeState *peStack0000000000000008;
  int iStack0000000000000010;
  
  peStack0000000000000008 = d;
  iStack0000000000000010 = op;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  s_00 = &peStack0000000000000008->scan;
  uVar1 = (peStack0000000000000008->data).len;
  puVar2 = (peStack0000000000000008->data).array;
  uVar5 = peStack0000000000000008->off;
  while( true ) {
    if ((int)uVar1 <= (int)uVar5) {
      peStack0000000000000008->off = uVar1 + 1;
      encoding_json___scanner__eof(s_00,iStack0000000000000010);
      peStack0000000000000008->opcode = extraout_RAX;
      return;
    }
    if (uVar1 <= uVar5) break;
    pfVar3 = *(peStack0000000000000008->scan).step;
    iVar4 = (*pfVar3)(s_00,puVar2[uVar5],(int *)pfVar3);
    uVar5 = uVar5 + 1;
    if (iVar4 != iStack0000000000000010) {
      peStack0000000000000008->opcode = iVar4;
      peStack0000000000000008->off = uVar5;
      return;
    }
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Unknown calling convention

void encoding_json___decodeState__rescanLiteral(encoding_json_decodeState *d)

{
  byte bVar1;
  uint uVar2;
  uint8 *puVar3;
  int extraout_RAX;
  int i;
  uint uVar4;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar2 = (d->data).len;
  uVar4 = d->off;
  if (uVar2 <= uVar4 - 1) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  puVar3 = (d->data).array;
  bVar1 = puVar3[uVar4 - 1];
  if (bVar1 < 0x3a) {
    if (bVar1 == 0x22) {
      for (; (int)uVar4 < (int)uVar2; uVar4 = uVar4 + 1) {
        if (uVar2 <= uVar4) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        if (puVar3[uVar4] == 0x22) {
          uVar4 = uVar4 + 1;
          break;
        }
        if (puVar3[uVar4] == 0x5c) {
          uVar4 = uVar4 + 1;
        }
      }
    }
    else if ((bVar1 == 0x2d) || (0x2f < bVar1)) {
      for (; (int)uVar4 < (int)uVar2; uVar4 = uVar4 + 1) {
        if (uVar2 <= uVar4) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        bVar1 = puVar3[uVar4];
        if (bVar1 < 0x2f) {
          if ((bVar1 != 0x2b) && (bVar1 < 0x2d)) break;
        }
        else if (((9 < (byte)(bVar1 - 0x30)) && (bVar1 != 0x45)) && (bVar1 != 0x65)) break;
      }
    }
  }
  else if (bVar1 == 0x66) {
    uVar4 = uVar4 + 4;
  }
  else if (bVar1 == 0x6e) {
    uVar4 = uVar4 + 3;
  }
  else if (bVar1 == 0x74) {
    uVar4 = uVar4 + 3;
  }
  if ((int)uVar4 < (int)uVar2) {
    if (uVar2 <= uVar4) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    encoding_json_stateEndValue(&d->scan,puVar3[uVar4],(int)&d->scan);
    d->opcode = extraout_RAX;
  }
  else {
    d->opcode = 10;
  }
  d->off = uVar4 + 1;
  return;
}



void encoding_json___decodeState__value(encoding_json_decodeState *d,reflect_Value v,error ~r0)

{
  uint uVar1;
  uint uVar2;
  int iVar3;
  uint uVar4;
  reflect_Value v_00;
  reflect_Value v_01;
  __uint8 item;
  reflect_Value v_02;
  int extraout_RAX;
  int extraout_RAX_00;
  int extraout_RAX_01;
  int in_RDI;
  int start;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff98;
  reflect_flag in_stack_ffffffffffffffa8;
  error in_stack_ffffffffffffffb0;
  reflect_flag in_stack_ffffffffffffffc0;
  error in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar3 = d->opcode;
  if (iVar3 == 1) {
    iVar3 = d->off;
    encoding_json___decodeState__rescanLiteral(d);
    if (in_RDI != 0) {
      uVar4 = (d->data).cap;
      uVar1 = d->off - 1;
      if (uVar4 < uVar1) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
      uVar2 = iVar3 - 1;
      if (uVar1 < uVar2) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      item.cap = in_stack_ffffffffffffffa8;
      item.array = (uint8 *)in_stack_ffffffffffffff98._type;
      item.len = (int)in_stack_ffffffffffffff98.data;
      v_02.flag = in_stack_ffffffffffffffc0;
      v_02.typ_ = (internal_abi_Type *)in_stack_ffffffffffffffb0.tab;
      v_02.ptr = in_stack_ffffffffffffffb0.data;
      encoding_json___decodeState__literalStore
                (d,item,v_02,
                 (bool)((char)(d->data).array +
                       ((byte)uVar2 & (byte)((int)-((uVar4 - iVar3) + 1) >> 0x3f))),
                 in_stack_ffffffffffffffc8);
      if (extraout_RAX_01 != 0) {
        return;
      }
    }
  }
  else if (iVar3 == 2) {
    if (in_RDI == 0) {
      encoding_json___decodeState__skip(d);
    }
    else {
      v_00.flag = in_stack_ffffffffffffffa8;
      v_00.typ_ = in_stack_ffffffffffffff98._type;
      v_00.ptr = in_stack_ffffffffffffff98.data;
      encoding_json___decodeState__object(d,v_00,in_stack_ffffffffffffffb0);
      if (extraout_RAX != 0) {
        return;
      }
    }
    encoding_json___decodeState__scanNext(d);
  }
  else {
    if (iVar3 != 6) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff98);
    }
    if (in_RDI == 0) {
      encoding_json___decodeState__skip(d);
    }
    else {
      v_01.flag = in_stack_ffffffffffffffa8;
      v_01.typ_ = in_stack_ffffffffffffff98._type;
      v_01.ptr = in_stack_ffffffffffffff98.data;
      encoding_json___decodeState__array(d,v_01,in_stack_ffffffffffffffb0);
      if (extraout_RAX_00 != 0) {
        return;
      }
    }
    encoding_json___decodeState__scanNext(d);
  }
  return;
}



void encoding_json___decodeState__valueQuoted(encoding_json_decodeState *d,interface___ ~r0)

{
  int iVar1;
  undefined *extraout_RAX;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar1 = d->opcode;
  if (iVar1 == 1) {
    encoding_json___decodeState__literalInterface(d,in_stack_ffffffffffffffe8);
    if ((extraout_RAX == (undefined *)0x0) ||
       ((*(sdword *)(extraout_RAX + 0x10) == 0x778cdb8 && (extraout_RAX == &DAT_008075e0)))) {
      return;
    }
  }
  else {
    if ((iVar1 != 2) && (iVar1 != 6)) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffe8);
    }
    encoding_json___decodeState__skip(d);
    encoding_json___decodeState__scanNext(d);
  }
  return;
}



void encoding_json_indirect
               (reflect_Value v,bool decodingNull,encoding_json_Unmarshaler ~r0,
               encoding_TextUnmarshaler ~r1,reflect_Value ~r2)

{
  reflect_Value v_00;
  reflect_Value v_01;
  reflect_Value v_02;
  reflect_Value v_03;
  reflect_Value v_04;
  reflect_Value v_05;
  reflect_Value v_06;
  reflect_Value v_07;
  reflect_Value v_08;
  reflect_Value v_09;
  reflect_Value v_10;
  reflect_Value v_11;
  reflect_Value v_12;
  reflect_Value v_13;
  runtime_iface r;
  runtime_iface r_00;
  reflect_Value ~r0_00;
  reflect_Type ~r0_01;
  reflect_Type ~r0_02;
  reflect_Type ~r0_03;
  interface___ ~r0_04;
  interface___ ~r0_05;
  reflect_Value ~r0_06;
  reflect_Value ~r0_07;
  reflect_Value ~r0_08;
  reflect_Value ~r0_09;
  reflect_Value ~r0_10;
  reflect_Value ~r0_11;
  reflect_Value x;
  reflect_Value ~r0_12;
  reflect_Value ~r0_13;
  undefined7 in_register_00000001;
  int iVar1;
  undefined1 *extraout_RAX;
  int extraout_RAX_00;
  int extraout_RAX_01;
  int extraout_RAX_02;
  undefined1 *extraout_RAX_03;
  undefined1 *extraout_RAX_04;
  int iVar2;
  int extraout_RAX_05;
  int extraout_RAX_06;
  int extraout_RAX_07;
  dword extraout_ECX;
  dword extraout_ECX_00;
  uint in_RCX;
  uint extraout_RCX;
  uint uVar3;
  uint uVar4;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  uint extraout_RCX_02;
  dword dVar5;
  dword dVar6;
  undefined1 *puVar7;
  void *ptr;
  int **ppiVar8;
  int **in_RBX;
  int extraout_RBX;
  int extraout_RBX_00;
  int **extraout_RBX_01;
  int **extraout_RBX_02;
  int **extraout_RBX_03;
  void *ptr_1;
  int **ppiVar9;
  int extraout_RBX_04;
  int extraout_RBX_05;
  int **extraout_RBX_06;
  char in_DIL;
  int unaff_R14;
  bool bVar10;
  bool bVar11;
  runtime_eface in_stack_ffffffffffffff70;
  runtime_itab *in_stack_ffffffffffffff80;
  internal_abi_Type *in_stack_ffffffffffffff88;
  void *in_stack_ffffffffffffff90;
  reflect_flag in_stack_ffffffffffffff98;
  bool haveAddr;
  int local_10;
  
  iVar1 = CONCAT71(in_register_00000001,decodingNull);
  while (&local_10 <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  dVar5 = (dword)in_RCX;
  local_10 = iVar1;
  if ((dVar5 & 0x1f) == 0x16) {
    bVar11 = false;
  }
  else {
    if ((in_RCX == 0) || ((dVar5 >> 9 & 1) != 0)) {
      v_00.flag = (reflect_flag)in_stack_ffffffffffffff80;
      v_00.typ_ = in_stack_ffffffffffffff70._type;
      v_00.ptr = in_stack_ffffffffffffff70.data;
      ~r0_01.data = in_stack_ffffffffffffff90;
      ~r0_01.tab = (runtime_itab *)in_stack_ffffffffffffff88;
      reflect_Value_typeSlow(v_00,~r0_01);
      iVar1 = extraout_RBX;
      puVar7 = extraout_RAX;
    }
    else {
      puVar7 = go_itab__reflect_rtype_reflect_Type;
    }
    (**(code **)(puVar7 + 0xb8))(iVar1);
    bVar11 = extraout_RBX_00 != 0;
  }
  iVar1 = local_10;
  uVar4 = in_RCX;
  ppiVar9 = in_RBX;
  if (bVar11) {
    if ((dVar5 >> 8 & 1) == 0) {
      bVar11 = false;
    }
    else {
      v_01.flag = (reflect_flag)in_stack_ffffffffffffff80;
      v_01.typ_ = in_stack_ffffffffffffff70._type;
      v_01.ptr = in_stack_ffffffffffffff70.data;
      ~r0_06.ptr = in_stack_ffffffffffffff90;
      ~r0_06.typ_ = in_stack_ffffffffffffff88;
      ~r0_06.flag = in_stack_ffffffffffffff98;
      reflect_Value_Addr(v_01,~r0_06);
      bVar11 = true;
      iVar1 = extraout_RAX_00;
      uVar4 = extraout_RCX;
      ppiVar9 = extraout_RBX_01;
