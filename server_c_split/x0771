      __n = (h->groupPrefix).len;
      oldCap = extraout_R8_01[2];
      pvVar14 = extraout_R8_01[1];
      pvVar11 = (void *)((int)pvVar14 + __n);
      puVar7 = (h->groupPrefix).str;
      local_f8 = *extraout_R8_01;
      local_100 = extraout_R8_01;
      state.h = extraout_RAX_07;
      state.sep.str = extraout_RDI_00;
      state.sep.len = extraout_RSI_00;
      if (oldCap < pvVar11) {
        ~r0_00.cap = (int)in_stack_fffffffffffffe70;
        ~r0_00.array = in_stack_fffffffffffffe60._type;
        ~r0_00.len = (int)in_stack_fffffffffffffe60.data;
        local_118 = puVar7;
        runtime_growslice(local_f8,(int)pvVar11,(int)oldCap,__n,(internal_abi_Type *)&DAT_00807920,
                          ~r0_00);
        local_f8 = extraout_RAX_08;
        oldCap = extraout_RCX_04;
        pvVar11 = extraout_RBX_00;
        puVar7 = local_118;
      }
      runtime_memmove((void *)((int)local_f8 + (int)pvVar14),puVar7,__n);
      local_100[1] = pvVar11;
      local_100[2] = oldCap;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_05 = local_f8;
        extraout_R11_05[1] = *extraout_RSI_01;
        local_100 = extraout_RSI_01;
      }
      *local_100 = local_f8;
      if ((local_120->preformattedAttrs).len != 0) {
        state.sep.str = &DAT_0095c5d0;
        if (h->json != false) {
          state.sep.str = &DAT_0095a6c8;
        }
        state.sep.len = 1;
      }
      uVar2 = ((state.h)->groups).len;
      uVar3 = (state.h)->nOpenGroups;
      if (uVar2 < uVar3) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      plVar8 = (log_slog_commonHandler *)
               ((int)&(((state.h)->groups).array)->str +
               (uVar3 << 4 & (int)(uVar3 - ((state.h)->groups).cap) >> 0x3f));
      iVar9 = uVar2 - uVar3;
      for (iVar12 = 0; iVar12 < iVar9; iVar12 = iVar12 + 1) {
        local_e8 = plVar8;
        log_slog___handleState__openGroup(&state,(string)in_stack_fffffffffffffe60);
        plVar8 = (log_slog_commonHandler *)&(local_e8->opts).Level;
      }
      for (iVar12 = 0; iVar12 < (int)~r0_1; iVar12 = iVar12 + 1) {
        a_00.Value.num = (uint64)in_stack_fffffffffffffe70;
        a_00.Key.str = (uint8 *)in_stack_fffffffffffffe60._type;
        a_00.Key.len = (int)in_stack_fffffffffffffe60.data;
        a_00.Value.any._type = (internal_abi_Type *)in_stack_fffffffffffffe78;
        a_00.Value.any.data = in_stack_fffffffffffffe80;
        local_e8 = ~r0;
        log_slog___handleState__appendAttr(&state,a_00);
        ~r0 = (log_slog_commonHandler *)&local_e8->preformattedAttrs;
      }
      runtime_slicebytetostring
                ((runtime_tmpBuf *)0x0,*(uint8 **)CONCAT44(state.prefix._4_4_,state.prefix._0_4_),
                 (int)((uint8 **)CONCAT44(state.prefix._4_4_,state.prefix._0_4_))[1],
                 (string)in_stack_fffffffffffffe60);
      (local_120->groupPrefix).len = extraout_RBX_01;
      puVar7 = extraout_RAX_09;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_06 = extraout_RAX_10;
        extraout_R11_06[1] = (local_120->groupPrefix).str;
        puVar7 = extraout_RAX_10;
      }
      (local_120->groupPrefix).str = puVar7;
      local_120->nOpenGroups = (local_120->groups).len;
      (*(code *)local_e0._0_8_)();
      return;
    }
    a_1.Key.str = *(uint8 **)plVar8;
    a_1.Key.len._0_4_ = *(undefined4 *)&plVar8->opts;
    a_1.Key.len._4_4_ = *(undefined4 *)&(plVar8->opts).field_0x4;
    plVar5 = &(plVar8->opts).Level;
    a_1.Value.num._0_4_ = *(undefined4 *)&plVar5->tab;
    a_1.Value.num._4_4_ = *(undefined4 *)((int)&(plVar8->opts).Level.tab + 4);
    prVar15 = plVar5->tab;
    ppvVar1 = &(plVar8->opts).Level.data;
    a_1.Value.any._type._0_4_ = *(undefined4 *)ppvVar1;
    a_1.Value.any._type._4_4_ = *(undefined4 *)((int)&(plVar8->opts).Level.data + 4);
    have = (internal_abi_Type *)*ppvVar1;
    pppfVar6 = &(plVar8->opts).ReplaceAttr;
    a_1.Value.any.data._0_4_ = *(undefined4 *)pppfVar6;
    a_1.Value.any.data._4_4_ = *(undefined4 *)((int)&(plVar8->opts).ReplaceAttr + 4);
    ppfVar13 = *pppfVar6;
    if (have == (internal_abi_Type *)0x0) {
LAB_007bc3d1:
      pfVar16 = (func___string__log_slog_Attr__log_slog_Attr *)0x0;
    }
    else {
      in_stack_fffffffffffffe94 = have->Hash;
      in_stack_fffffffffffffeb0 = (log_slog_commonHandler *)n;
      in_stack_fffffffffffffec8 = prVar15;
      in_stack_fffffffffffffed0 = iVar12;
      local_e8 = plVar8;
      if (in_stack_fffffffffffffe94 < 0x5eb9273e) {
        if (in_stack_fffffffffffffe94 == 0x1712e740) {
          if (have == (internal_abi_Type *)&DAT_0080f280) {
            pfVar16 = (func___string__log_slog_Attr__log_slog_Attr *)0x8;
          }
          else {
LAB_007bc2b0:
            r.data = in_stack_fffffffffffffe78;
            r.tab = in_stack_fffffffffffffe70;
            local_f0 = ppfVar13;
            runtime_assertE2I2((internal_abi_InterfaceType *)&DAT_00834fc0,in_stack_fffffffffffffe60
                               ,r);
            plVar8 = local_e8;
            ppfVar13 = local_f0;
            in_stack_fffffffffffffeb0 = (log_slog_commonHandler *)n;
            in_stack_fffffffffffffec0 = have;
            in_stack_fffffffffffffec8 = prVar15;
            in_stack_fffffffffffffed0 = iVar12;
            if (extraout_RAX == 0) {
              if ((in_stack_fffffffffffffe94 != 0xdf1d1ebd) ||
                 (have != (internal_abi_Type *)&DAT_00807160)) goto LAB_007bc3d1;
              pfVar16 = (func___string__log_slog_Attr__log_slog_Attr *)0x0;
            }
            else {
              pfVar16 = (func___string__log_slog_Attr__log_slog_Attr *)0x9;
            }
          }
        }
        else {
          if ((in_stack_fffffffffffffe94 != 0x5eb9273d) ||
             (have != (internal_abi_Type *)&DAT_0080f2e0)) goto LAB_007bc2b0;
          pfVar16 = (func___string__log_slog_Attr__log_slog_Attr *)0x5;
        }
      }
      else if (in_stack_fffffffffffffe94 == 0x7f949a56) {
        if (have != (internal_abi_Type *)&DAT_0081e5e0) goto LAB_007bc2b0;
        pfVar16 = *ppfVar13;
      }
      else {
        if ((in_stack_fffffffffffffe94 != 0xfc24222d) ||
           (have != (internal_abi_Type *)&DAT_0080f340)) goto LAB_007bc2b0;
        pfVar16 = (func___string__log_slog_Attr__log_slog_Attr *)&DAT_00000006;
      }
    }
    if (pfVar16 == (func___string__log_slog_Attr__log_slog_Attr *)0x8) {
      if (have != (internal_abi_Type *)&DAT_0080f280) {
                    // WARNING: Subroutine does not return
        runtime_panicdottypeE
                  (have,(internal_abi_Type *)&DAT_0080f280,(internal_abi_Type *)&DAT_00821120);
      }
      if ((int)prVar15 < 0) {
                    // WARNING: Subroutine does not return
        runtime_panicunsafeslicelen();
      }
      auVar4._8_8_ = 0;
      auVar4._0_8_ = prVar15;
      if ((SUB168(auVar4 * ZEXT816(0x28),8) != 0) ||
         ((uint)-(int)ppfVar13 < SUB168(auVar4 * ZEXT816(0x28),0))) {
        if (ppfVar13 == (func___string__log_slog_Attr__log_slog_Attr **)0x0) {
                    // WARNING: Subroutine does not return
          runtime_panicunsafeslicenilptr();
        }
                    // WARNING: Subroutine does not return
        runtime_panicunsafeslicelen();
      }
      if (prVar15 == (runtime_itab *)0x0) {
        n = n + 1;
      }
    }
    plVar8 = (log_slog_commonHandler *)&plVar8->preformattedAttrs;
    iVar12 = iVar12 + 1;
  } while( true );
}



// WARNING: Unknown calling convention

void log_slog___commonHandler__withAttrs_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  log_slog___handleState__free(*(void **)(in_RDX + 8));
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack
// DWARF original prototype: void log/slog.(*commonHandler).handle(log/slog.commonHandler * h,
// log/slog.Record r, error ~r0, error ~r0)
// Local variable ~R0_:func() * *[0][Stack[0x8]:1] conflicts with parameter, skipped.

void log_slog___commonHandler__handle
               (log_slog_commonHandler *h,log_slog_Record r,error ~r0,error ~r0_1)

{
  func___string__log_slog_Attr__log_slog_Attr **ppfVar1;
  sync_Mutex *m;
  runtime_slice ~r0_00;
  time_Time t;
  time_Time v;
  time_Time t_00;
  runtime_slice ~r0_01;
  log_slog_Attr a;
  log_slog_Attr a_00;
  log_slog_Attr a_01;
  log_slog_Attr a_02;
  log_slog_Record r_00;
  log_slog_Record r_01;
  log_slog_Value ~r0_02;
  log_slog_Value ~r0_03;
  log_slog_handleState ~r0_04;
  time_Time ~r0_05;
  log_slog_Value ~r0_06;
  undefined8 *puVar2;
  internal_abi_Type *have;
  void *extraout_RAX;
  void *extraout_RAX_00;
  log_slog_Level val;
  log_slog_Source *~r0_07;
  void *extraout_RAX_01;
  void *extraout_RAX_02;
  void *pvVar3;
  bool extraout_CL;
  void *extraout_RCX;
  void *extraout_RCX_00;
  void **ppvVar4;
  log_slog_internal_buffer_Buffer *buf;
  void **extraout_RBX;
  void *pvVar5;
  void *extraout_RBX_00;
  void *extraout_RBX_01;
  void *extraout_RBX_02;
  void *extraout_RBX_03;
  void *extraout_RBX_04;
  void *extraout_RBX_05;
  undefined8 extraout_RSI;
  __string *stateGroups;
  undefined8 extraout_RDI;
  undefined8 extraout_R8;
  int iVar6;
  func___string__log_slog_Attr__log_slog_Attr **rep;
  void **extraout_R11;
  void **extraout_R11_00;
  int unaff_R14;
  bool bVar7;
  interface___ in_stack_fffffffffffffd28;
  time_Location *in_stack_fffffffffffffd38;
  interface___ in_stack_fffffffffffffd40;
  time_Location *in_stack_fffffffffffffd50;
  undefined in_stack_fffffffffffffd58 [24];
  log_slog_handleState in_stack_fffffffffffffd70;
  undefined auVar8 [16];
  undefined auVar9 [24];
  undefined in_stack_fffffffffffffda8 [160];
  log_slog_handleState state;
  undefined4 local_48;
  undefined4 uStack_44;
  undefined4 uStack_40;
  undefined4 local_38;
  undefined4 uStack_34;
  undefined4 uStack_30;
  undefined4 uStack_2c;
  undefined4 local_28;
  undefined4 uStack_24;
  
  while (&stack0xfffffffffffffda8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  sync___Pool__Get(&log_slog_internal_buffer_bufPool,in_stack_fffffffffffffd28);
  if (have != (internal_abi_Type *)&DAT_0087a3a0) {
                    // WARNING: Subroutine does not return
    runtime_panicdottypeE
              (have,(internal_abi_Type *)&DAT_0087a3a0,(internal_abi_Type *)&DAT_00821120);
  }
  ~r0_04._8_16_ = (undefined  [16])in_stack_fffffffffffffd40;
  ~r0_04.h = (log_slog_commonHandler *)in_stack_fffffffffffffd38;
  ~r0_04.sep.str = (uint8 *)in_stack_fffffffffffffd50;
  ~r0_04.sep.len = in_stack_fffffffffffffd58._0_8_;
  ~r0_04.prefix = (log_slog_internal_buffer_Buffer *)in_stack_fffffffffffffd58._8_8_;
  ~r0_04.groups = (__string *)in_stack_fffffffffffffd58._16_8_;
  log_slog___commonHandler__newHandleState
            (h,buf,true,(string)in_stack_fffffffffffffd28,~r0_04,in_stack_fffffffffffffd70);
  uStack_40._0_1_ = extraout_CL;
  local_48 = SUB84(extraout_RBX,0);
  uStack_44 = (undefined4)((uint)extraout_RBX >> 0x20);
  state.buf._0_4_ = local_48;
  state.buf._4_4_ = uStack_44;
  state.freeBuf = uStack_40._0_1_;
  state._17_3_ = uStack_40._1_3_;
  local_38 = (undefined4)extraout_RDI;
  uStack_34 = (undefined4)((uint)extraout_RDI >> 0x20);
  uStack_30 = (undefined4)extraout_RSI;
  uStack_2c = (undefined4)((uint)extraout_RSI >> 0x20);
  state.sep.str._0_4_ = local_38;
  state.sep.str._4_4_ = uStack_34;
  state.sep.len._0_4_ = uStack_30;
  state.sep.len._4_4_ = uStack_2c;
  local_28 = (undefined4)extraout_R8;
  uStack_24 = (undefined4)((uint)extraout_R8 >> 0x20);
  state.prefix._0_4_ = local_28;
  state.prefix._4_4_ = uStack_24;
  if (h->json != false) {
    pvVar5 = (void *)((int)extraout_RBX[1] + 1);
    pvVar3 = *extraout_RBX;
    ppvVar4 = extraout_RBX;
    if (extraout_RBX[2] < pvVar5) {
      ~r0_00.cap = (int)in_stack_fffffffffffffd38;
      ~r0_00.array = in_stack_fffffffffffffd28._type;
      ~r0_00.len = (int)in_stack_fffffffffffffd28.data;
      runtime_growslice(pvVar3,(int)pvVar5,(int)extraout_RBX[2],1,(internal_abi_Type *)&DAT_00807920
                        ,~r0_00);
      extraout_RBX[2] = extraout_RCX;
      pvVar3 = extraout_RAX;
      pvVar5 = extraout_RBX_00;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_RAX_00;
        extraout_R11[1] = *ppvVar4;
        pvVar3 = extraout_RAX_00;
        pvVar5 = extraout_RBX_01;
      }
      *ppvVar4 = pvVar3;
    }
    ppvVar4[1] = pvVar5;
    *(undefined *)((int)pvVar5 + -1 + (int)pvVar3) = 0x7b;
  }
  state.groups = (__string *)0x0;
  iVar6 = r.Time.ext;
  if ((int)r.Time.wall < 0) {
    iVar6 = ((r.Time.wall << 1) >> 0x1f) + 0xdd7b17f80;
  }
  ppfVar1 = (h->opts).ReplaceAttr;
  if ((iVar6 != 0) ||
     (((undefined  [288])r & (undefined  [288])0x3fffffff) != (undefined  [288])0x0)) {
    t.loc = in_stack_fffffffffffffd38;
    t.wall = (uint64)in_stack_fffffffffffffd28._type;
    t.ext = (int64)in_stack_fffffffffffffd28.data;
    ~r0_05.loc = in_stack_fffffffffffffd50;
    ~r0_05.wall = (uint64)in_stack_fffffffffffffd40._type;
    ~r0_05.ext = (int64)in_stack_fffffffffffffd40.data;
    time_Time_Round(t,r.Time.wall,~r0_05);
    if (ppfVar1 == (func___string__log_slog_Attr__log_slog_Attr **)0x0) {
      log_slog___handleState__appendKey(&state,(string)in_stack_fffffffffffffd28);
      t_00.loc = in_stack_fffffffffffffd38;
      t_00.wall = (uint64)in_stack_fffffffffffffd28._type;
      t_00.ext = (int64)in_stack_fffffffffffffd28.data;
      log_slog___handleState__appendTime(&state,t_00);
      r.Time.ext = (int64)extraout_RBX_03;
    }
    else {
      v.loc = in_stack_fffffffffffffd38;
      v.wall = (uint64)in_stack_fffffffffffffd28._type;
      v.ext = (int64)in_stack_fffffffffffffd28.data;
      ~r0_06.any.data = in_stack_fffffffffffffd50;
      ~r0_06.num = (uint64)in_stack_fffffffffffffd40._type;
      ~r0_06.any._type = (internal_abi_Type *)in_stack_fffffffffffffd40.data;
      log_slog_TimeValue(v,~r0_06);
      a.Value.num = (uint64)in_stack_fffffffffffffd38;
      a.Key.str = (uint8 *)in_stack_fffffffffffffd28._type;
      a.Key.len = (int)in_stack_fffffffffffffd28.data;
      a.Value.any = in_stack_fffffffffffffd40;
      log_slog___handleState__appendAttr(&state,a);
      r.Time.ext = (int64)extraout_RBX_02;
    }
  }
  if (ppfVar1 == (func___string__log_slog_Attr__log_slog_Attr **)0x0) {
    log_slog___handleState__appendKey(&state,(string)in_stack_fffffffffffffd28);
    log_slog_Level_String(r.Level,(string)in_stack_fffffffffffffd28);
    log_slog___handleState__appendString(&state,(string)in_stack_fffffffffffffd28);
  }
  else {
    runtime_convT64(r.Level,(void *)r.Time.ext);
    ~r0_02.any = in_stack_fffffffffffffd40;
    ~r0_02.num = (uint64)in_stack_fffffffffffffd38;
    log_slog_AnyValue(in_stack_fffffffffffffd28,~r0_02);
    a_00.Value.num = (uint64)in_stack_fffffffffffffd38;
    a_00.Key.str = (uint8 *)in_stack_fffffffffffffd28._type;
    a_00.Key.len = (int)in_stack_fffffffffffffd28.data;
    a_00.Value.any = in_stack_fffffffffffffd40;
    log_slog___handleState__appendAttr(&state,a_00);
  }
  if ((h->opts).AddSource != false) {
    ~r0_07 = (log_slog_Source *)FUN_0046d064();
    r_00.Time.loc = in_stack_fffffffffffffd38;
    r_00.Time.wall = (uint64)in_stack_fffffffffffffd28._type;
    r_00.Time.ext = (int64)in_stack_fffffffffffffd28.data;
    r_00.Message.str = (uint8 *)in_stack_fffffffffffffd40._type;
    r_00.Message.len = (int)in_stack_fffffffffffffd40.data;
    r_00.Level = (log_slog_Level)in_stack_fffffffffffffd50;
    r_00.PC = in_stack_fffffffffffffd58._0_8_;
    r_00.front[0].Key.str = (uint8 *)SUB168(in_stack_fffffffffffffd58._8_16_,0);
    r_00.front[0].Key.len = SUB168(in_stack_fffffffffffffd58._8_16_,8);
    r_00.front._16_56_ = (undefined  [56])in_stack_fffffffffffffd70;
    r_00.front[1].Value.any.data = (void *)in_stack_fffffffffffffda8._0_8_;
    auVar8 = SUB4016(in_stack_fffffffffffffda8._8_40_,0);
    auVar9 = SUB4024(in_stack_fffffffffffffda8._8_40_,0x10);
    r_00.front[2].Key.str = (uint8 *)auVar8._0_8_;
    r_00.front[2].Key.len = auVar8._8_8_;
    auVar8 = auVar9._8_16_;
    r_00.front[2].Value.num = auVar9._0_8_;
    r_00.front[2].Value.any._type = (internal_abi_Type *)auVar8._0_8_;
    r_00.front[2].Value.any.data = (void *)auVar8._8_8_;
    auVar8 = SUB4016(in_stack_fffffffffffffda8._48_40_,0);
    auVar9 = SUB4024(in_stack_fffffffffffffda8._48_40_,0x10);
    r_00.front[3].Key.str = (uint8 *)auVar8._0_8_;
    r_00.front[3].Key.len = auVar8._8_8_;
    auVar8 = auVar9._8_16_;
    r_00.front[3].Value.num = auVar9._0_8_;
    r_00.front[3].Value.any._type = (internal_abi_Type *)auVar8._0_8_;
    r_00.front[3].Value.any.data = (void *)auVar8._8_8_;
    auVar8 = SUB4016(in_stack_fffffffffffffda8._88_40_,0);
    auVar9 = SUB4024(in_stack_fffffffffffffda8._88_40_,0x10);
    r_00.front[4].Key.str = (uint8 *)auVar8._0_8_;
    r_00.front[4].Key.len = auVar8._8_8_;
    auVar8 = auVar9._8_16_;
    r_00.front[4].Value.num = auVar9._0_8_;
    r_00.front[4].Value.any._type = (internal_abi_Type *)auVar8._0_8_;
    r_00.front[4].Value.any.data = (void *)auVar8._8_8_;
    r_00.nFront = (uint8 *)SUB168(in_stack_fffffffffffffda8._128_16_,0);
    r_00.back.array = SUB168(in_stack_fffffffffffffda8._128_16_,8);
    r_00.back.len = in_stack_fffffffffffffda8._144_8_;
    r_00.back.cap = (internal_abi_Type *)in_stack_fffffffffffffda8._152_8_;
    log_slog_Record_source(r_00,~r0_07);
    ~r0_03.any = in_stack_fffffffffffffd40;
    ~r0_03.num = (uint64)in_stack_fffffffffffffd38;
    log_slog_AnyValue(in_stack_fffffffffffffd28,~r0_03);
    a_01.Value.num = (uint64)in_stack_fffffffffffffd38;
    a_01.Key.str = (uint8 *)in_stack_fffffffffffffd28._type;
    a_01.Key.len = (int)in_stack_fffffffffffffd28.data;
    a_01.Value.any = in_stack_fffffffffffffd40;
    log_slog___handleState__appendAttr(&state,a_01);
  }
  if (ppfVar1 == (func___string__log_slog_Attr__log_slog_Attr **)0x0) {
    log_slog___handleState__appendKey(&state,(string)in_stack_fffffffffffffd28);
    log_slog___handleState__appendString(&state,(string)in_stack_fffffffffffffd28);
  }
  else {
    a_02.Value.num = (uint64)in_stack_fffffffffffffd38;
    a_02.Key.str = (uint8 *)in_stack_fffffffffffffd28._type;
    a_02.Key.len = (int)in_stack_fffffffffffffd28.data;
    a_02.Value.any = in_stack_fffffffffffffd40;
    log_slog___handleState__appendAttr(&state,a_02);
  }
  FUN_0046d064();
  r_01.Time.loc = in_stack_fffffffffffffd38;
  r_01.Time.wall = (uint64)in_stack_fffffffffffffd28._type;
  r_01.Time.ext = (int64)in_stack_fffffffffffffd28.data;
  r_01.Message.str = (uint8 *)in_stack_fffffffffffffd40._type;
  r_01.Message.len = (int)in_stack_fffffffffffffd40.data;
  r_01.Level = (log_slog_Level)in_stack_fffffffffffffd50;
  r_01.PC = in_stack_fffffffffffffd58._0_8_;
  r_01.front[0].Key.str = (uint8 *)SUB168(in_stack_fffffffffffffd58._8_16_,0);
  r_01.front[0].Key.len = SUB168(in_stack_fffffffffffffd58._8_16_,8);
  r_01.front._16_56_ = (undefined  [56])in_stack_fffffffffffffd70;
  r_01.front[1].Value.any.data = (void *)in_stack_fffffffffffffda8._0_8_;
  auVar8 = SUB4016(in_stack_fffffffffffffda8._8_40_,0);
  auVar9 = SUB4024(in_stack_fffffffffffffda8._8_40_,0x10);
  r_01.front[2].Key.str = (uint8 *)auVar8._0_8_;
  r_01.front[2].Key.len = auVar8._8_8_;
  auVar8 = auVar9._8_16_;
  r_01.front[2].Value.num = auVar9._0_8_;
  r_01.front[2].Value.any._type = (internal_abi_Type *)auVar8._0_8_;
  r_01.front[2].Value.any.data = (void *)auVar8._8_8_;
  auVar8 = SUB4016(in_stack_fffffffffffffda8._48_40_,0);
  auVar9 = SUB4024(in_stack_fffffffffffffda8._48_40_,0x10);
  r_01.front[3].Key.str = (uint8 *)auVar8._0_8_;
  r_01.front[3].Key.len = auVar8._8_8_;
  auVar8 = auVar9._8_16_;
  r_01.front[3].Value.num = auVar9._0_8_;
  r_01.front[3].Value.any._type = (internal_abi_Type *)auVar8._0_8_;
  r_01.front[3].Value.any.data = (void *)auVar8._8_8_;
  auVar8 = SUB4016(in_stack_fffffffffffffda8._88_40_,0);
  auVar9 = SUB4024(in_stack_fffffffffffffda8._88_40_,0x10);
  r_01.front[4].Key.str = (uint8 *)auVar8._0_8_;
  r_01.front[4].Key.len = auVar8._8_8_;
  auVar8 = auVar9._8_16_;
  r_01.front[4].Value.num = auVar9._0_8_;
  r_01.front[4].Value.any._type = (internal_abi_Type *)auVar8._0_8_;
  r_01.front[4].Value.any.data = (void *)auVar8._8_8_;
  r_01.nFront = (uint8 *)SUB168(in_stack_fffffffffffffda8._128_16_,0);
  r_01.back.array = SUB168(in_stack_fffffffffffffda8._128_16_,8);
  r_01.back.len = in_stack_fffffffffffffda8._144_8_;
  r_01.back.cap = (internal_abi_Type *)in_stack_fffffffffffffda8._152_8_;
  log_slog___handleState__appendNonBuiltIns(&state,r_01);
  ppvVar4 = (void **)CONCAT44(state.buf._4_4_,state.buf._0_4_);
  pvVar5 = (void *)((int)ppvVar4[1] + 1);
  pvVar3 = *ppvVar4;
  if (ppvVar4[2] < pvVar5) {
    ~r0_01.cap = (int)in_stack_fffffffffffffd38;
    ~r0_01.array = in_stack_fffffffffffffd28._type;
    ~r0_01.len = (int)in_stack_fffffffffffffd28.data;
    runtime_growslice(pvVar3,(int)pvVar5,(int)ppvVar4[2],1,(internal_abi_Type *)&DAT_00807920,~r0_01
                     );
    ppvVar4[2] = extraout_RCX_00;
    pvVar3 = extraout_RAX_01;
    pvVar5 = extraout_RBX_04;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RAX_02;
      extraout_R11_00[1] = *ppvVar4;
      pvVar3 = extraout_RAX_02;
      pvVar5 = extraout_RBX_05;
    }
    *ppvVar4 = pvVar3;
  }
  ppvVar4[1] = pvVar5;
  *(undefined *)((int)pvVar5 + -1 + (int)pvVar3) = 10;
  m = h->mu;
  LOCK();
  bVar7 = m->state == 0;
  if (bVar7) {
    m->state = 1;
  }
  UNLOCK();
  if (!bVar7) {
    sync___Mutex__lockSlow(m);
  }
  puVar2 = (undefined8 *)CONCAT44(state.buf._4_4_,state.buf._0_4_);
  (*(code *)((h->w).tab)->fun[0])((h->w).data,*puVar2,puVar2[1],puVar2[2]);
  log_slog___commonHandler__handle_func2();
  log_slog___commonHandler__handle_func1();
  return;
}



// WARNING: Unknown calling convention

void log_slog___commonHandler__handle_func2(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  sync___Mutex__Unlock(*(sync_Mutex **)(in_RDX + 8));
  return;
}



// WARNING: Unknown calling convention

void log_slog___commonHandler__handle_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  log_slog___handleState__free(*(void **)(in_RDX + 8));
  return;
}



// WARNING: Unknown calling convention

void log_slog___handleState__appendNonBuiltIns(log_slog_handleState *s,log_slog_Record r)

{
  bool bVar1;
  size_t sVar2;
  runtime_slice ~r0;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  runtime_slice ~r0_03;
  log_slog_Record r_00;
  uint8 *extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *puVar3;
  log_slog_handleState *plVar4;
  uint8 *extraout_RAX_01;
  uint8 *extraout_RAX_02;
  uint8 *extraout_RAX_03;
  uint8 *extraout_RAX_04;
  uint8 *extraout_RAX_05;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  int iVar5;
  int extraout_RCX_02;
  int extraout_RCX_03;
  log_slog_internal_buffer_Buffer *plVar6;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint uVar7;
  uint extraout_RBX_02;
  uint extraout_RBX_03;
  uint uVar8;
  uint extraout_RBX_04;
  uint extraout_RBX_05;
  log_slog_internal_buffer_Buffer *extraout_RSI;
  log_slog_internal_buffer_Buffer *extraout_RSI_00;
  log_slog_internal_buffer_Buffer *extraout_RSI_01;
  log_slog_handleState *extraout_R8;
  int nOpenGroups;
  uint extraout_R8_00;
  uint8 *puVar9;
  uint8 *extraout_R9;
  uint8 **extraout_R11;
  uint8 **extraout_R11_00;
  uint8 **extraout_R11_01;
  uint8 **extraout_R11_02;
  uint8 **extraout_R11_03;
  uint8 **extraout_R11_04;
  int unaff_R14;
  log_slog_handleState *plStack0000000000000128;
  string in_stack_fffffffffffffd20;
  time_Location *in_stack_fffffffffffffd30;
  undefined auVar10 [16];
  undefined auVar11 [24];
  undefined in_stack_fffffffffffffd38 [264];
  undefined auVar12 [24];
  undefined local_138 [272];
  int local_28;
  int local_18;
  
  plStack0000000000000128 = s;
  while (&stack0xfffffffffffffda0 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((plStack0000000000000128->h->preformattedAttrs).len != 0) {
    plVar6 = plStack0000000000000128->buf;
    sVar2 = (plStack0000000000000128->sep).len;
    uVar7 = plVar6->cap;
    iVar5 = plVar6->len;
    uVar8 = sVar2 + iVar5;
    puVar9 = (plStack0000000000000128->sep).str;
    puVar3 = plVar6->array;
    if (uVar7 < uVar8) {
      ~r0.cap = (int)in_stack_fffffffffffffd30;
      ~r0.array = in_stack_fffffffffffffd20.str;
      ~r0.len = in_stack_fffffffffffffd20.len;
      runtime_growslice(puVar3,uVar8,uVar7,sVar2,(internal_abi_Type *)&DAT_00807920,~r0);
      uVar7 = extraout_RCX;
      uVar8 = extraout_RBX;
      puVar3 = extraout_RAX;
    }
    runtime_memmove(puVar3 + iVar5,puVar9,sVar2);
    plVar6->len = uVar8;
    plVar6->cap = uVar7;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = puVar3;
      extraout_R11[1] = extraout_RSI->array;
      plVar6 = extraout_RSI;
    }
    plVar6->array = puVar3;
    plVar6 = plStack0000000000000128->buf;
    sVar2 = (plStack0000000000000128->h->preformattedAttrs).len;
    uVar7 = plVar6->cap;
    iVar5 = plVar6->len;
    uVar8 = sVar2 + iVar5;
    puVar9 = (plStack0000000000000128->h->preformattedAttrs).array;
    puVar3 = plVar6->array;
    if (uVar7 < uVar8) {
      ~r0_00.cap = (int)in_stack_fffffffffffffd30;
      ~r0_00.array = in_stack_fffffffffffffd20.str;
      ~r0_00.len = in_stack_fffffffffffffd20.len;
      runtime_growslice(puVar3,uVar8,uVar7,sVar2,(internal_abi_Type *)&DAT_00807920,~r0_00);
      puVar3 = extraout_RAX_00;
      uVar7 = extraout_RCX_00;
      uVar8 = extraout_RBX_00;
    }
    runtime_memmove(puVar3 + iVar5,puVar9,sVar2);
    plVar6->len = uVar8;
    plVar6->cap = uVar7;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = puVar3;
      extraout_R11_00[1] = extraout_RSI_00->array;
      plVar6 = extraout_RSI_00;
    }
    plVar6->array = puVar3;
    bVar1 = plStack0000000000000128->h->json;
    (plStack0000000000000128->sep).len = (int)&DAT_00000001;
    puVar9 = &DAT_0095c5d0;
    if (bVar1 != false) {
      puVar9 = &DAT_0095a6c8;
    }
    plVar4 = plStack0000000000000128;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_01 = extraout_R9;
      extraout_R11_01[1] = (extraout_R8->sep).str;
      plVar4 = extraout_R8;
      puVar9 = extraout_R9;
    }
    (plVar4->sep).str = puVar9;
  }
  plVar4 = (log_slog_handleState *)FUN_0046d064();
  uVar8 = extraout_R8_00;
  if (0 < local_28 + local_18) {
    plVar6 = plVar4->prefix;
    sVar2 = (plVar4->h->groupPrefix).len;
    uVar7 = plVar6->cap;
    iVar5 = plVar6->len;
    uVar8 = sVar2 + iVar5;
    puVar9 = (plVar4->h->groupPrefix).str;
    puVar3 = plVar6->array;
    if (uVar7 < uVar8) {
      ~r0_01.cap = (int)in_stack_fffffffffffffd30;
      ~r0_01.array = in_stack_fffffffffffffd20.str;
      ~r0_01.len = in_stack_fffffffffffffd20.len;
      runtime_growslice(puVar3,uVar8,uVar7,sVar2,(internal_abi_Type *)&DAT_00807920,~r0_01);
      uVar7 = extraout_RCX_01;
      uVar8 = extraout_RBX_01;
      puVar3 = extraout_RAX_01;
    }
    runtime_memmove(puVar3 + iVar5,puVar9,sVar2);
    plVar6->len = uVar8;
    plVar6->cap = uVar7;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_02 = puVar3;
      extraout_R11_02[1] = extraout_RSI_01->array;
      plVar6 = extraout_RSI_01;
    }
    plVar6->array = puVar3;
    uVar8 = (plStack0000000000000128->h->groups).len;
    uVar7 = plStack0000000000000128->h->nOpenGroups;
    if (uVar8 < uVar7) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    for (iVar5 = 0; iVar5 < (int)(uVar8 - uVar7); iVar5 = iVar5 + 1) {
      log_slog___handleState__openGroup(plStack0000000000000128,in_stack_fffffffffffffd20);
    }
    uVar8 = (plStack0000000000000128->h->groups).len;
    local_138._8_8_ = plStack0000000000000128;
    local_138._0_8_ = log_slog___handleState__appendNonBuiltIns_func1;
    FUN_0046d064();
    r_00.Time.loc = in_stack_fffffffffffffd30;
    r_00.Time.wall = (uint64)in_stack_fffffffffffffd20.str;
    r_00.Time.ext = in_stack_fffffffffffffd20.len;
    auVar12 = in_stack_fffffffffffffd38._240_24_;
    r_00.Message.str = (uint8 *)SUB168(in_stack_fffffffffffffd38._0_16_,0);
    r_00.Message.len = SUB168(in_stack_fffffffffffffd38._0_16_,8);
    r_00.Level = in_stack_fffffffffffffd38._16_8_;
    r_00.PC = in_stack_fffffffffffffd38._24_8_;
    auVar10 = SUB4016(in_stack_fffffffffffffd38._32_40_,0);
    auVar11 = SUB4024(in_stack_fffffffffffffd38._32_40_,0x10);
    r_00.front[0].Key.str = (uint8 *)auVar10._0_8_;
    r_00.front[0].Key.len = auVar10._8_8_;
    auVar10 = auVar11._8_16_;
    r_00.front[0].Value.num = auVar11._0_8_;
    r_00.front[0].Value.any._type = (internal_abi_Type *)auVar10._0_8_;
    r_00.front[0].Value.any.data = (void *)auVar10._8_8_;
    auVar10 = SUB4016(in_stack_fffffffffffffd38._72_40_,0);
    auVar11 = SUB4024(in_stack_fffffffffffffd38._72_40_,0x10);
    r_00.front[1].Key.str = (uint8 *)auVar10._0_8_;
    r_00.front[1].Key.len = auVar10._8_8_;
    auVar10 = auVar11._8_16_;
    r_00.front[1].Value.num = auVar11._0_8_;
    r_00.front[1].Value.any._type = (internal_abi_Type *)auVar10._0_8_;
    r_00.front[1].Value.any.data = (void *)auVar10._8_8_;
    auVar10 = SUB4016(in_stack_fffffffffffffd38._112_40_,0);
    auVar11 = SUB4024(in_stack_fffffffffffffd38._112_40_,0x10);
    r_00.front[2].Key.str = (uint8 *)auVar10._0_8_;
    r_00.front[2].Key.len = auVar10._8_8_;
    auVar10 = auVar11._8_16_;
    r_00.front[2].Value.num = auVar11._0_8_;
    r_00.front[2].Value.any._type = (internal_abi_Type *)auVar10._0_8_;
    r_00.front[2].Value.any.data = (void *)auVar10._8_8_;
    auVar10 = SUB4016(in_stack_fffffffffffffd38._152_40_,0);
    auVar11 = SUB4024(in_stack_fffffffffffffd38._152_40_,0x10);
    r_00.front[3].Key.str = (uint8 *)auVar10._0_8_;
    r_00.front[3].Key.len = auVar10._8_8_;
    auVar10 = auVar11._8_16_;
    r_00.front[3].Value.num = auVar11._0_8_;
    r_00.front[3].Value.any._type = (internal_abi_Type *)auVar10._0_8_;
    r_00.front[3].Value.any.data = (void *)auVar10._8_8_;
    auVar10 = SUB4016(in_stack_fffffffffffffd38._192_40_,0);
    auVar11 = SUB4024(in_stack_fffffffffffffd38._192_40_,0x10);
    r_00.front[4].Key.str = (uint8 *)auVar10._0_8_;
    r_00.front[4].Key.len = auVar10._8_8_;
    auVar10 = auVar11._8_16_;
    r_00.front[4].Value.num = auVar11._0_8_;
    r_00.front[4].Value.any._type = (internal_abi_Type *)auVar10._0_8_;
    r_00.front[4].Value.any.data = (void *)auVar10._8_8_;
    r_00.nFront = in_stack_fffffffffffffd38._232_8_;
    r_00.back.array = (log_slog_Attr *)auVar12._0_8_;
    r_00.back.len = auVar12._8_8_;
    r_00.back.cap = auVar12._16_8_;
    log_slog_Record_Attrs(r_00,(func_log_slog_Attr__bool **)local_138);
    plVar4 = plStack0000000000000128;
  }
  if (plVar4->h->json != false) {
    if ((uint)(plVar4->h->groups).cap < uVar8) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    for (iVar5 = 0; iVar5 < (int)uVar8; iVar5 = iVar5 + 1) {
      plVar6 = plVar4->buf;
      uVar7 = plVar6->len + 1;
      puVar9 = plVar6->array;
      if ((uint)plVar6->cap < uVar7) {
        ~r0_02.cap = (int)in_stack_fffffffffffffd30;
        ~r0_02.array = in_stack_fffffffffffffd20.str;
        ~r0_02.len = in_stack_fffffffffffffd20.len;
        runtime_growslice(puVar9,uVar7,plVar6->cap,1,(internal_abi_Type *)&DAT_00807920,~r0_02);
        plVar6->cap = extraout_RCX_02;
        puVar9 = extraout_RAX_02;
        uVar7 = extraout_RBX_02;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_03 = extraout_RAX_03;
          extraout_R11_03[1] = plVar6->array;
          puVar9 = extraout_RAX_03;
          uVar7 = extraout_RBX_03;
        }
        plVar6->array = puVar9;
        plVar4 = plStack0000000000000128;
      }
      plVar6->len = uVar7;
      puVar9[uVar7 - 1] = 0x7d;
    }
    plVar6 = plVar4->buf;
    uVar8 = plVar6->len + 1;
    puVar9 = plVar6->array;
    if ((uint)plVar6->cap < uVar8) {
      ~r0_03.cap = (int)in_stack_fffffffffffffd30;
      ~r0_03.array = in_stack_fffffffffffffd20.str;
      ~r0_03.len = in_stack_fffffffffffffd20.len;
      runtime_growslice(puVar9,uVar8,plVar6->cap,1,(internal_abi_Type *)&DAT_00807920,~r0_03);
      plVar6->cap = extraout_RCX_03;
      puVar9 = extraout_RAX_04;
      uVar8 = extraout_RBX_04;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_04 = extraout_RAX_05;
        extraout_R11_04[1] = plVar6->array;
        puVar9 = extraout_RAX_05;
        uVar8 = extraout_RBX_05;
      }
      plVar6->array = puVar9;
    }
    plVar6->len = uVar8;
    puVar9[uVar8 - 1] = 0x7d;
  }
  return;
}



void log_slog___handleState__appendNonBuiltIns_func1(log_slog_Attr a,bool ~r0)

{
  log_slog_handleState *s;
  int in_RDX;
  int unaff_R14;
  log_slog_Attr in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  log_slog___handleState__appendAttr
            (*(log_slog_handleState **)(in_RDX + 8),in_stack_ffffffffffffffc8);
  return;
}



void log_slog_glob__func1(interface___ ~r0)

{
  undefined8 *extraout_RAX;
  __string *_s;
  undefined8 extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 uVar1;
  void *in_RBX;
  undefined8 *extraout_RBX;
  undefined8 *puVar2;
  void *extraout_RBX_00;
  void *~r0_00;
  undefined8 *extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX_00;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00802320,in_RBX);
  runtime_makeslice((internal_abi_Type *)&DAT_008075e0,0,10,~r0_00);
  extraout_RAX[1] = 0;
  extraout_RAX[2] = 10;
  uVar1 = extraout_RAX_00;
  puVar2 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_01;
    extraout_R11[1] = *extraout_RBX;
    uVar1 = extraout_RAX_01;
    puVar2 = extraout_RBX;
  }
  *puVar2 = uVar1;
  return;
}



// DWARF original prototype: void log/slog.(*commonHandler).newHandleState(log/slog.commonHandler *
// h, log/slog/internal/buffer.Buffer * buf, bool freeBuf, string sep, log/slog.handleState ~r0,
// log/slog.handleState ~r0)

void log_slog___commonHandler__newHandleState
               (log_slog_commonHandler *h,log_slog_internal_buffer_Buffer *buf,bool freeBuf,
               string sep,log_slog_handleState ~r0,log_slog_handleState ~r0_1)

{
  uint num;
  string *srcPtr;
  int iVar1;
  runtime_slice ~r0_00;
  internal_abi_Type *have;
  internal_abi_Type *have_00;
  string *extraout_RAX;
  string *oldPtr;
  uint extraout_RCX;
  log_slog_internal_buffer_Buffer *extraout_RBX;
  __string *extraout_RBX_00;
  uint extraout_RBX_01;
  uint newLen;
  uint oldCap;
  string **extraout_R11;
  int unaff_R14;
  undefined in_XMM15 [16];
  __string *p_Var2;
  interface___ in_stack_ffffffffffffff48;
  int in_stack_ffffffffffffff58;
  log_slog_handleState s;
  
  while (p_Var2 = in_XMM15._9_8_, &s.buf <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  sync___Pool__Get(&log_slog_internal_buffer_bufPool,in_stack_ffffffffffffff48);
  if (have != (internal_abi_Type *)&DAT_0087a3a0) {
                    // WARNING: Subroutine does not return
    runtime_panicdottypeE
              (have,(internal_abi_Type *)&DAT_0087a3a0,(internal_abi_Type *)&DAT_00821120);
  }
  s._20_4_ = (undefined4)((uint)p_Var2 >> 0x20);
  s._17_3_ = (undefined3)((uint)p_Var2 >> 8);
  s.freeBuf = freeBuf;
  s.groups = p_Var2;
  s.prefix = extraout_RBX;
  if ((h->opts).ReplaceAttr != (func___string__log_slog_Attr__log_slog_Attr **)0x0) {
    s.h = h;
    s.buf = buf;
    sync___Pool__Get(&log_slog_groupPool,in_stack_ffffffffffffff48);
    if (have_00 != (internal_abi_Type *)&DAT_00800aa0) {
                    // WARNING: Subroutine does not return
      runtime_panicdottypeE
                (have_00,(internal_abi_Type *)&DAT_00800aa0,(internal_abi_Type *)&DAT_00821120);
    }
    num = h->nOpenGroups;
    srcPtr = (h->groups).array;
    if ((uint)(h->groups).cap < num) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
