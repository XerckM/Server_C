  uint extraout_RBX_04;
  uint extraout_RBX_05;
  uint extraout_RBX_06;
  uint extraout_RBX_07;
  uint in_RSI;
  void *in_RDI;
  uint64 n;
  uint uVar3;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffff80;
  string in_stack_ffffffffffffff98;
  __uint8 in_stack_ffffffffffffffa8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  n = 0;
  for (iVar1 = 0; iVar1 < (int)in_RSI; iVar1 = iVar1 + 1) {
    n = n + golang_org_x_net_http2_hpack_huffmanCodeLen[*(byte *)((int)in_RDI + iVar1)];
  }
  uVar2 = n + 7 >> 3;
  if (uVar2 < in_RSI) {
    if (uVar2 < 0x7f) {
      uVar3 = in_RBX + 1;
      if (in_RCX < uVar3) {
        runtime_growslice(in_RAX,uVar3,in_RCX,1,(internal_abi_Type *)&DAT_00807920,
                          (runtime_slice)in_stack_ffffffffffffff80);
        in_RAX = extraout_RAX_00;
        uVar3 = extraout_RBX_00;
      }
      *(char *)((uVar3 - 1) + (int)in_RAX) = (char)uVar2;
    }
    else {
      uVar3 = in_RBX + 1;
      if (in_RCX < uVar3) {
        runtime_growslice(in_RAX,uVar3,in_RCX,1,(internal_abi_Type *)&DAT_00807920,
                          (runtime_slice)in_stack_ffffffffffffff80);
        in_RAX = extraout_RAX;
        in_RCX = extraout_RCX;
        uVar3 = extraout_RBX;
      }
      *(undefined *)((uVar3 - 1) + (int)in_RAX) = 0x7f;
      for (uVar2 = uVar2 - 0x7f; 0x7f < uVar2; uVar2 = uVar2 >> 7) {
        uVar3 = uVar3 + 1;
        if (in_RCX < uVar3) {
          runtime_growslice(in_RAX,uVar3,in_RCX,1,(internal_abi_Type *)&DAT_00807920,
                            (runtime_slice)in_stack_ffffffffffffff80);
          in_RAX = extraout_RAX_07;
          in_RCX = extraout_RCX_04;
          uVar3 = extraout_RBX_06;
        }
        *(byte *)((uVar3 - 1) + (int)in_RAX) = (byte)uVar2 & 0x7f | 0x80;
      }
      uVar3 = uVar3 + 1;
      if (in_RCX < uVar3) {
        runtime_growslice(in_RAX,uVar3,in_RCX,1,(internal_abi_Type *)&DAT_00807920,
                          (runtime_slice)in_stack_ffffffffffffff80);
        in_RAX = extraout_RAX_08;
        uVar3 = extraout_RBX_07;
      }
      *(byte *)((uVar3 - 1) + (int)in_RAX) = (byte)uVar2;
    }
    golang_org_x_net_http2_hpack_AppendHuffmanString
              (in_stack_ffffffffffffff80,in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8);
    if (extraout_RBX_05 <= in_RBX) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(byte *)(extraout_RAX_06 + in_RBX) = *(byte *)(extraout_RAX_06 + in_RBX) | 0x80;
  }
  else {
    if (in_RSI < 0x7f) {
      uVar2 = in_RBX + 1;
      if (in_RCX < uVar2) {
        runtime_growslice(in_RAX,uVar2,in_RCX,1,(internal_abi_Type *)&DAT_00807920,
                          (runtime_slice)in_stack_ffffffffffffff80);
        in_RAX = extraout_RAX_02;
        in_RCX = extraout_RCX_01;
        uVar2 = extraout_RBX_02;
      }
      *(char *)((uVar2 - 1) + (int)in_RAX) = (char)in_RSI;
    }
    else {
      uVar2 = in_RBX + 1;
      if (in_RCX < uVar2) {
        runtime_growslice(in_RAX,uVar2,in_RCX,1,(internal_abi_Type *)&DAT_00807920,
                          (runtime_slice)in_stack_ffffffffffffff80);
        in_RAX = extraout_RAX_01;
        in_RCX = extraout_RCX_00;
        uVar2 = extraout_RBX_01;
      }
      *(undefined *)((uVar2 - 1) + (int)in_RAX) = 0x7f;
      for (uVar3 = in_RSI - 0x7f; 0x7f < uVar3; uVar3 = uVar3 >> 7) {
        uVar2 = uVar2 + 1;
        if (in_RCX < uVar2) {
          runtime_growslice(in_RAX,uVar2,in_RCX,1,(internal_abi_Type *)&DAT_00807920,
                            (runtime_slice)in_stack_ffffffffffffff80);
          in_RAX = extraout_RAX_04;
          in_RCX = extraout_RCX_02;
          uVar2 = extraout_RBX_03;
        }
        *(byte *)((uVar2 - 1) + (int)in_RAX) = (byte)uVar3 & 0x7f | 0x80;
      }
      uVar2 = uVar2 + 1;
      if (in_RCX < uVar2) {
        runtime_growslice(in_RAX,uVar2,in_RCX,1,(internal_abi_Type *)&DAT_00807920,
                          (runtime_slice)in_stack_ffffffffffffff80);
        in_RAX = extraout_RAX_05;
        in_RCX = extraout_RCX_03;
        uVar2 = extraout_RBX_04;
      }
      *(byte *)((uVar2 - 1) + (int)in_RAX) = (byte)uVar3;
    }
    if (in_RCX < uVar2 + in_RSI) {
      runtime_growslice(in_RAX,uVar2 + in_RSI,in_RCX,in_RSI,(internal_abi_Type *)&DAT_00807920,
                        (runtime_slice)in_stack_ffffffffffffff80);
      in_RAX = extraout_RAX_03;
    }
    runtime_memmove((void *)((int)in_RAX + uVar2),in_RDI,in_RSI);
  }
  return;
}



void golang_org_x_net_http2_hpack_DecodingError_Error
               (golang_org_x_net_http2_hpack_DecodingError de,string ~r0)

{
  uint8 *in_RAX;
  int in_RBX;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  __interface___ in_stack_ffffffffffffffd0;
  string ~r0_00;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RAX != (uint8 *)0x0) {
    in_RAX = *(uint8 **)(in_RAX + 8);
  }
  ~r0_00.len = in_RBX;
  ~r0_00.str = in_RAX;
  fmt_Sprintf(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,~r0_00);
  return;
}



void golang_org_x_net_http2_hpack_InvalidIndexError_Error
               (golang_org_x_net_http2_hpack_InvalidIndexError e,string ~r0)

{
  int extraout_RAX;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  __interface___ in_stack_ffffffffffffffd0;
  string ~r0_00;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_convT64(e,in_RBX);
  ~r0_00.len = extraout_RAX;
  ~r0_00.str = &DAT_00807760;
  fmt_Sprintf(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,~r0_00);
  return;
}



void golang_org_x_net_http2_hpack_HeaderField_IsPseudo
               (golang_org_x_net_http2_hpack_HeaderField hf,bool ~r0)

{
  return;
}



void golang_org_x_net_http2_hpack_HeaderField_String
               (golang_org_x_net_http2_hpack_HeaderField hf,string ~r0)

{
  string ~r0_00;
  void *in_RAX;
  char *x;
  void *in_RCX;
  uint8 *puVar1;
  byte in_SIL;
  int unaff_R14;
  string in_stack_ffffffffffffff98;
  __interface___ in_stack_ffffffffffffffa8;
  undefined *puVar2;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  puVar1 = (uint8 *)(uint)in_SIL;
  runtime_convTstring(in_stack_ffffffffffffff98,in_RAX);
  puVar2 = &DAT_008075e0;
  runtime_convTstring(in_stack_ffffffffffffff98,in_RCX);
  x = (char *)0x0;
  if (puVar1 != (uint8 *)0x0) {
    x = 
    " (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen , not pointer != sweepgen  MB globals,  work.nproc=  work.nwait=  nStackRoots= flushedWork double unlock s.spanclass= MB) workers=min too large-byte block (runtime: val=runtime: seq= failed with timer_settimefatal error:  idlethreads= syscalltick=load64 failedxadd64 failedxchg64 failedmp.g0 stack [nil stackbase}\n\tsched={pc:, gp->status= pluginpath= : unknown pc  called from level 3 resetexchange fulltimer expiredsrmount errorreserved_namedefault_valuephp_namespace<unknown: %T>AlreadyExistsUnimplementedUNIMPLEMENTED\"UNAVAILABLE\"INVALID_STATE in host nameGrpc-Encodinggrpc-encodinggrpc-tags-bintransport: %vunix-abstractIntegrityOnlyAddr: <nil>, AuthorizationAccept-RangesIf-None-MatchLast-Modified[FrameHeader invalid base accept-rangesauthorizationcache-controlcontent-rangeif-none-matchlast-modifiedCache-ControlReset ContentLoop DetectedSTREAM_CLOSEDCONNECT_ERRORWINDOW_UPDATE38146972..." /* TRUNCATED STRING LITERAL */
    ;
  }
  runtime_convTstring(in_stack_ffffffffffffff98,x);
  ~r0_00.len = (int)puVar2;
  ~r0_00.str = puVar1;
  fmt_Sprintf(in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8,~r0_00);
  return;
}



void golang_org_x_net_http2_hpack_HeaderField_Size
               (golang_org_x_net_http2_hpack_HeaderField hf,uint32 ~r0)

{
  return;
}



void golang_org_x_net_http2_hpack_NewDecoder
               (uint32 maxDynamicTableSize,func_golang_org_x_net_http2_hpack_HeaderField_ **emitFunc
               ,golang_org_x_net_http2_hpack_Decoder *~r0)

{
  golang_org_x_net_http2_hpack_dynamicTable *extraout_RAX;
  golang_org_x_net_http2_hpack_Decoder *d;
  golang_org_x_net_http2_hpack_dynamicTable *extraout_RAX_00;
  golang_org_x_net_http2_hpack_dynamicTable *dt;
  map_string_uint64 extraout_RAX_01;
  map_string_uint64 extraout_RAX_02;
  map_string_uint64 ~r0_00;
  map_golang_org_x_net_http2_hpack_pairNameValue_uint64 extraout_RAX_03;
  map_golang_org_x_net_http2_hpack_pairNameValue_uint64 extraout_RAX_04;
  map_golang_org_x_net_http2_hpack_pairNameValue_uint64 phVar1;
  golang_org_x_net_http2_hpack_HeaderField **extraout_R11;
  map_string_uint64 *extraout_R11_00;
  map_golang_org_x_net_http2_hpack_pairNameValue_uint64 *extraout_R11_01;
  int unaff_R14;
  uint32 uStack0000000000000008;
  golang_org_x_net_http2_hpack_HeaderField *pgStack0000000000000010;
  
  pgStack0000000000000010 = (golang_org_x_net_http2_hpack_HeaderField *)emitFunc;
  uStack0000000000000008 = maxDynamicTableSize;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_newobject((internal_abi_Type *)&DAT_0088ade0,pgStack0000000000000010);
  dt = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = pgStack0000000000000010;
    dt = extraout_RAX_00;
  }
  dt[1].table.ents.array = pgStack0000000000000010;
  *(undefined *)&dt[1].table.ents.len = 1;
  *(undefined *)&dt[2].table.evictCount = 1;
  runtime_makemap_small((runtime_hmap *)dt);
  ~r0_00 = extraout_RAX_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_02;
    extraout_R11_00[1] = (dt->table).byName;
    ~r0_00 = extraout_RAX_02;
  }
  (dt->table).byName = ~r0_00;
  runtime_makemap_small((runtime_hmap *)~r0_00);
  phVar1 = extraout_RAX_03;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_01 = extraout_RAX_04;
    extraout_R11_01[1] = (dt->table).byNameValue;
    phVar1 = extraout_RAX_04;
  }
  (dt->table).byNameValue = phVar1;
  dt->allowedMaxSize = uStack0000000000000008;
  dt->maxSize = uStack0000000000000008;
  golang_org_x_net_http2_hpack___dynamicTable__evict(dt);
  return;
}



// WARNING: Unknown calling convention

void golang_org_x_net_http2_hpack___Decoder__SetMaxStringLength
               (golang_org_x_net_http2_hpack_Decoder *d,int n)

{
  d->maxStrLen = n;
  return;
}



// WARNING: Unknown calling convention

void golang_org_x_net_http2_hpack___Decoder__SetEmitFunc
               (golang_org_x_net_http2_hpack_Decoder *d,
               func_golang_org_x_net_http2_hpack_HeaderField_ **emitFunc)

{
  golang_org_x_net_http2_hpack_Decoder *extraout_RAX;
  func_golang_org_x_net_http2_hpack_HeaderField_ **extraout_RBX;
  undefined8 *extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RBX;
    extraout_R11[1] = extraout_RAX->emit;
    d = extraout_RAX;
    emitFunc = extraout_RBX;
  }
  d->emit = emitFunc;
  return;
}



// WARNING: Unknown calling convention

void golang_org_x_net_http2_hpack___Decoder__SetEmitEnabled
               (golang_org_x_net_http2_hpack_Decoder *d,bool v)

{
  d->emitEnabled = v;
  return;
}



void golang_org_x_net_http2_hpack___Decoder__EmitEnabled
               (golang_org_x_net_http2_hpack_Decoder *d,bool ~r0)

{
  return;
}



// WARNING: Unknown calling convention

void golang_org_x_net_http2_hpack___Decoder__SetMaxDynamicTableSize
               (golang_org_x_net_http2_hpack_Decoder *d,uint32 v)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  (d->dynTab).maxSize = v;
  golang_org_x_net_http2_hpack___dynamicTable__evict(&d->dynTab);
  return;
}



// WARNING: Unknown calling convention

void golang_org_x_net_http2_hpack___Decoder__SetAllowedMaxDynamicTableSize
               (golang_org_x_net_http2_hpack_Decoder *d,uint32 v)

{
  (d->dynTab).allowedMaxSize = v;
  return;
}



// WARNING: Type propagation algorithm not settling

void golang_org_x_net_http2_hpack___dynamicTable__add
               (golang_org_x_net_http2_hpack_dynamicTable *dt,
               golang_org_x_net_http2_hpack_HeaderField f)

{
  uint oldCap;
  runtime_slice ~r0;
  int *extraout_RAX;
  int *extraout_RAX_00;
  golang_org_x_net_http2_hpack_HeaderField *extraout_RAX_01;
  golang_org_x_net_http2_hpack_HeaderField *extraout_RAX_02;
  golang_org_x_net_http2_hpack_HeaderField *oldPtr;
  undefined8 in_RCX;
  int extraout_RCX;
  int iVar1;
  uint64 id;
  golang_org_x_net_http2_hpack_dynamicTable *pgVar2;
  uint8 *in_RBX;
  uint newLen;
  uint extraout_RBX;
  uint extraout_RBX_00;
  undefined8 in_RSI;
  undefined8 in_RDI;
  void *~r0_00;
  undefined in_R8B;
  golang_org_x_net_http2_hpack_HeaderField **extraout_R11;
  int unaff_R14;
  undefined4 in_stack_00000030;
  undefined4 in_stack_00000034;
  string in_stack_ffffffffffffff30;
  int in_stack_ffffffffffffff40;
  undefined local_78 [8];
  undefined8 uStack_70;
  undefined local_68 [8];
  undefined8 uStack_60;
  sdword local_50;
  undefined4 uStack_4c;
  undefined4 uStack_48;
  undefined4 uStack_44;
  undefined4 local_40;
  undefined4 uStack_3c;
  undefined4 uStack_38;
  uint8 *local_30;
  sdword local_28;
  undefined4 uStack_24;
  undefined4 uStack_20;
  undefined4 uStack_1c;
  undefined4 local_18;
  undefined4 uStack_14;
  undefined4 uStack_10;
  undefined4 uStack_c;
  
  while (f.Value.str._0_4_ = (sdword)in_RCX, f.Value.str._4_4_ = (undefined4)((uint)in_RCX >> 0x20),
        f.Value.len._0_4_ = (undefined4)in_RDI,
        f.Value.len._4_4_ = (undefined4)((uint)in_RDI >> 0x20), f._32_4_ = (undefined4)in_RSI,
        f._36_4_ = (undefined4)((uint)in_RSI >> 0x20), &local_50 <= *(sdword **)(unaff_R14 + 0x10))
  {
    in_stack_00000030 = CONCAT31(in_stack_00000030._1_3_,in_R8B);
    runtime_morestack_noctxt();
  }
  in_stack_00000030 = CONCAT31(in_stack_00000030._1_3_,in_R8B);
  local_28 = (sdword)f.Value.str;
  uStack_24 = f.Value.str._4_4_;
  uStack_20 = (undefined4)f.Value.len;
  uStack_1c = f.Value.len._4_4_;
  local_18._0_1_ = f.Sensitive;
  local_18._1_3_ = f._33_3_;
  uStack_14 = f._36_4_;
  uStack_10 = in_stack_00000030;
  uStack_c = in_stack_00000034;
  iVar1 = (dt->table).evictCount + (dt->table).ents.len + 1;
  local_30 = in_RBX;
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_0082bc60,(runtime_hmap *)(dt->table).byName,
             in_stack_ffffffffffffff30,in_RBX);
  *extraout_RAX = iVar1;
  uStack_70._4_4_ = uStack_24;
  uStack_70._0_4_ = local_28;
  local_78 = (undefined  [8])local_30;
  local_68._4_4_ = uStack_1c;
  local_68._0_4_ = uStack_20;
  uStack_60._4_4_ = uStack_14;
  uStack_60._0_4_ = local_18;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082f7a0,(runtime_hmap *)(dt->table).byNameValue,
                    local_78,~r0_00);
  *extraout_RAX_00 = iVar1;
  oldCap = (dt->table).ents.cap;
  newLen = (dt->table).ents.len + 1;
  oldPtr = (dt->table).ents.array;
  if (oldCap < newLen) {
    ~r0.cap = in_stack_ffffffffffffff40;
    ~r0.array = in_stack_ffffffffffffff30.str;
    ~r0.len = in_stack_ffffffffffffff30.len;
    runtime_growslice(oldPtr,newLen,oldCap,1,(internal_abi_Type *)&DAT_008811c0,~r0);
    (dt->table).ents.cap = extraout_RCX;
    oldPtr = extraout_RAX_01;
    pgVar2 = dt;
    newLen = extraout_RBX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_02;
      extraout_R11[1] = (pgVar2->table).ents.array;
      oldPtr = extraout_RAX_02;
      newLen = extraout_RBX_00;
    }
    (pgVar2->table).ents.array = oldPtr;
  }
  (dt->table).ents.len = newLen;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_wbMove((internal_abi_Type *)&DAT_008811c0,oldPtr + (newLen - 1),&local_30);
  }
  oldPtr[newLen - 1].Name.str = local_30;
  *(sdword *)&oldPtr[newLen - 1].Name.len = local_28;
  *(undefined4 *)((int)&oldPtr[newLen - 1].Name.len + 4) = uStack_24;
  *(undefined4 *)&oldPtr[newLen - 1].Value.str = uStack_20;
  *(undefined4 *)((int)&oldPtr[newLen - 1].Value.str + 4) = uStack_1c;
  *(undefined4 *)&oldPtr[newLen - 1].Value.len = local_18;
  *(undefined4 *)((int)&oldPtr[newLen - 1].Value.len + 4) = uStack_14;
  *(undefined4 *)&oldPtr[newLen - 1].Sensitive = uStack_10;
  *(undefined4 *)&oldPtr[newLen - 1].field_0x24 = uStack_c;
  local_50 = (sdword)f.Value.str;
  uStack_4c = f.Value.str._4_4_;
  uStack_48 = (undefined4)f.Value.len;
  uStack_44 = f.Value.len._4_4_;
  local_40._0_1_ = f.Sensitive;
  local_40._1_3_ = f._33_3_;
  uStack_3c = f._36_4_;
  uStack_38 = in_stack_00000030;
  dt->size = dt->size + (sdword)f.Value.str + f._32_4_ + 0x20;
  golang_org_x_net_http2_hpack___dynamicTable__evict(dt);
  return;
}



// WARNING: Unknown calling convention

void golang_org_x_net_http2_hpack___dynamicTable__evict
               (golang_org_x_net_http2_hpack_dynamicTable *dt)

{
  golang_org_x_net_http2_hpack_HeaderField *pgVar1;
  int n;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  for (n = 0; (dt->maxSize < dt->size && (n < (dt->table).ents.len)); n = n + 1) {
    if ((uint)(dt->table).ents.len <= (uint)n) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    pgVar1 = (dt->table).ents.array;
    dt->size = dt->size - (*(sdword *)&pgVar1[n].Name.len + *(sdword *)&pgVar1[n].Value.len + 0x20);
  }
  golang_org_x_net_http2_hpack___headerFieldTable__evictOldest(&dt->table,n);
  return;
}



// DWARF original prototype: void
// golang.org/x/net/http2/hpack.(*Decoder).DecodeFull(golang.org/x/net/http2/hpack.Decoder * d,
// []uint8 p, []golang.org/x/net/http2/hpack.HeaderField ~r0,
// []golang.org/x/net/http2/hpack.HeaderField ~r0, error ~r1, error ~r1)

void golang_org_x_net_http2_hpack___Decoder__DecodeFull
               (golang_org_x_net_http2_hpack_Decoder *d,__uint8 p,
               __golang_org_x_net_http2_hpack_HeaderField ~r0,
               __golang_org_x_net_http2_hpack_HeaderField ~r0_1,error ~r1,error ~r1_1)

{
  error err;
  undefined8 *extraout_RAX;
  __golang_org_x_net_http2_hpack_HeaderField *_hf;
  func_golang_org_x_net_http2_hpack_HeaderField_ **extraout_RAX_00;
  func_golang_org_x_net_http2_hpack_HeaderField_ **extraout_RAX_01;
  func_golang_org_x_net_http2_hpack_HeaderField_ **ppfVar1;
  undefined8 *extraout_RAX_02;
  undefined1 *puVar2;
  func_golang_org_x_net_http2_hpack_HeaderField_ **saveFunc;
  void *in_RBX;
  int extraout_RBX;
  void *~r0_00;
  undefined8 *extraout_R11;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffff70;
  undefined in_stack_ffffffffffffff88 [15];
  undefined uVar3;
  undefined local_50 [16];
  undefined8 local_40;
  undefined8 uStack_38;
  undefined8 local_30;
  undefined local_28 [16];
  func_golang_org_x_net_http2_hpack_HeaderField_ **local_18;
  code **local_10;
  
  while (&local_10 <= *(code ****)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_30 = 0;
  runtime_newobject((internal_abi_Type *)&DAT_00802e60,in_RBX);
  *extraout_RAX = 0;
  local_18 = d->emit;
  local_28._8_8_ = d;
  local_28._0_8_ = golang_org_x_net_http2_hpack___Decoder__DecodeFull_func1;
  local_10 = (code **)local_28;
  uVar3 = 1;
  runtime_newobject((internal_abi_Type *)&DAT_008494e0,
                    golang_org_x_net_http2_hpack___Decoder__DecodeFull_func1);
  *extraout_RAX_00 = golang_org_x_net_http2_hpack___Decoder__DecodeFull_func2;
  ppfVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier3();
    *extraout_R11 = extraout_RAX;
    extraout_R11[1] = extraout_RAX_01;
    extraout_R11[2] = d->emit;
    ppfVar1 = extraout_RAX_01;
  }
  ppfVar1[1] = (func_golang_org_x_net_http2_hpack_HeaderField_ *)extraout_RAX;
  d->emit = ppfVar1;
  err.data._7_1_ = uVar3;
  err._0_15_ = in_stack_ffffffffffffff88;
  golang_org_x_net_http2_hpack___Decoder__Write(d,in_stack_ffffffffffffff70,(int)in_RBX,err);
  if (extraout_RBX != 0) {
    local_40 = 0;
    (**local_10)();
    return;
  }
  ~r0_00 = (void *)((d->saveBuf).buf.len - (d->saveBuf).off);
  if ((int)~r0_00 < 1) {
    d->firstField = true;
    puVar2 = (undefined1 *)0x0;
  }
  else {
    (d->saveBuf).buf.len = 0;
    (d->saveBuf).off = 0;
    (d->saveBuf).lastRead = 0;
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_00);
    extraout_RAX_02[1] = 0x11;
    *extraout_RAX_02 = &DAT_008b7280;
    local_50._8_8_ = extraout_RAX_02;
    local_50._0_8_ = go_itab__errors_errorString_error;
    runtime_convT((internal_abi_Type *)&DAT_0084c680,local_50,go_itab__errors_errorString_error);
    puVar2 = go_itab_golang_org_x_net_http2_hpack_DecodingError_error;
  }
  if (puVar2 == (undefined1 *)0x0) {
    local_40 = *extraout_RAX;
    uStack_38 = extraout_RAX[1];
    local_30 = extraout_RAX[2];
    (**local_10)();
    return;
  }
  local_40 = 0;
  (**local_10)();
  return;
}



void golang_org_x_net_http2_hpack___Decoder__DecodeFull_func2
               (golang_org_x_net_http2_hpack_HeaderField f)

{
  uint8 *in_RAX;
  void *extraout_RAX;
  void *extraout_RAX_00;
  void *oldPtr;
  undefined8 in_RCX;
  void *extraout_RCX;
  int in_RDX;
  __golang_org_x_net_http2_hpack_HeaderField *_hf;
  void **ppvVar1;
  undefined8 in_RBX;
  void *newLen;
  void *extraout_RBX;
  void *extraout_RBX_00;
  undefined in_SIL;
  undefined8 in_RDI;
  void **extraout_R11;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffffa0;
  
  f.Name.str = in_RAX;
  while (f.Name.len._0_4_ = (undefined4)in_RBX,
        f.Name.len._4_4_ = (undefined4)((uint)in_RBX >> 0x20),
        f.Value.str._0_4_ = (undefined4)in_RCX,
        f.Value.str._4_4_ = (undefined4)((uint)in_RCX >> 0x20),
        f.Value.len._0_4_ = (undefined4)in_RDI,
        f.Value.len._4_4_ = (undefined4)((uint)in_RDI >> 0x20),
        &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    f.Sensitive = (bool)in_SIL;
    runtime_morestack();
    in_RBX = CONCAT44(f.Name.len._4_4_,(undefined4)f.Name.len);
    in_RCX = CONCAT44(f.Value.str._4_4_,f.Value.str._0_4_);
    in_RDI = CONCAT44(f.Value.len._4_4_,(undefined4)f.Value.len);
    in_SIL = f.Sensitive;
  }
  f.Sensitive = (bool)in_SIL;
  ppvVar1 = *(void ***)(in_RDX + 8);
  newLen = (void *)((int)ppvVar1[1] + 1);
  oldPtr = *ppvVar1;
  if (ppvVar1[2] < newLen) {
    runtime_growslice(oldPtr,(int)newLen,(int)ppvVar1[2],1,(internal_abi_Type *)&DAT_008811c0,
                      in_stack_ffffffffffffffa0);
    ppvVar1[2] = extraout_RCX;
    oldPtr = extraout_RAX;
    newLen = extraout_RBX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_00;
      extraout_R11[1] = *ppvVar1;
      oldPtr = extraout_RAX_00;
      newLen = extraout_RBX_00;
    }
    *ppvVar1 = oldPtr;
  }
  ppvVar1[1] = newLen;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_wbMove((internal_abi_Type *)&DAT_008811c0,
                   (void *)((int)oldPtr + (int)newLen * 0x28 + -0x28),&f);
  }
  *(uint8 **)((int)oldPtr + (int)newLen * 0x28 + -0x28) = f.Name.str;
  *(undefined4 *)((int)oldPtr + (int)newLen * 0x28 + -0x20) = (undefined4)f.Name.len;
  *(undefined4 *)((int)oldPtr + (int)newLen * 0x28 + -0x1c) = f.Name.len._4_4_;
  *(undefined4 *)((int)oldPtr + (int)newLen * 0x28 + -0x18) = f.Value.str._0_4_;
  *(undefined4 *)((int)oldPtr + (int)newLen * 0x28 + -0x14) = f.Value.str._4_4_;
  *(undefined4 *)((int)oldPtr + (int)newLen * 0x28 + -0x10) = (undefined4)f.Value.len;
  *(undefined4 *)((int)oldPtr + (int)newLen * 0x28 + -0xc) = f.Value.len._4_4_;
  *(undefined4 *)((int)oldPtr + (int)newLen * 0x28 + -8) = f._32_4_;
  *(undefined4 *)((int)oldPtr + (int)newLen * 0x28 + -4) = f._36_4_;
  return;
}



// WARNING: Unknown calling convention

void golang_org_x_net_http2_hpack___Decoder__DecodeFull_func1(void)

{
  golang_org_x_net_http2_hpack_Decoder *d;
  int extraout_RAX;
  int iVar1;
  func_golang_org_x_net_http2_hpack_HeaderField_ **saveFunc;
  undefined8 extraout_RCX;
  undefined8 uVar2;
  int in_RDX;
  undefined8 *extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  iVar1 = *(int *)(in_RDX + 8);
  uVar2 = *(undefined8 *)(in_RDX + 0x10);
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RCX;
    extraout_R11[1] = *(undefined8 *)(extraout_RAX + 0x40);
    iVar1 = extraout_RAX;
    uVar2 = extraout_RCX;
  }
  *(undefined8 *)(iVar1 + 0x40) = uVar2;
  return;
}



void golang_org_x_net_http2_hpack___Decoder__Close
               (golang_org_x_net_http2_hpack_Decoder *d,error ~r0)

{
  int iVar1;
  int iVar2;
  undefined8 *extraout_RAX;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  undefined local_18 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  iVar1 = (d->saveBuf).buf.len;
  iVar2 = (d->saveBuf).off;
  if (iVar1 != iVar2 && -1 < iVar1 - iVar2) {
    (d->saveBuf).buf.len = 0;
    (d->saveBuf).off = 0;
    (d->saveBuf).lastRead = 0;
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,in_RBX);
    extraout_RAX[1] = 0x11;
    *extraout_RAX = &DAT_008b7280;
    local_18._8_8_ = extraout_RAX;
    local_18._0_8_ = go_itab__errors_errorString_error;
    runtime_convT((internal_abi_Type *)&DAT_0084c680,local_18,go_itab__errors_errorString_error);
    return;
  }
  d->firstField = true;
  return;
}



void golang_org_x_net_http2_hpack___Decoder__Write
               (golang_org_x_net_http2_hpack_Decoder *d,__uint8 p,int n,error err)

{
  uint uVar1;
  uint uVar2;
  __uint8 p_00;
  __uint8 p_01;
  error err_00;
  error err_01;
  char extraout_AL;
  golang_org_x_net_http2_hpack_Decoder *extraout_RAX;
  golang_org_x_net_http2_hpack_Decoder *extraout_RAX_00;
  golang_org_x_net_http2_hpack_Decoder *pgVar3;
  runtime_itab *tab;
  int in_RCX;
  uint8 *puVar4;
  uint8 *extraout_RBX;
  void *x;
  int iVar5;
  int iVar6;
  bool ~r0;
  int in_RDI;
  int iVar7;
  uint8 **extraout_R11;
  uint8 **extraout_R11_00;
  int unaff_R14;
  error in_stack_ffffffffffffffc0;
  int in_stack_ffffffffffffffd0;
  runtime_itab *in_stack_ffffffffffffffd8;
  bytes_Buffer *b;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RCX == 0) {
    return;
  }
  b = &d->saveBuf;
  pgVar3 = d;
  if ((d->saveBuf).buf.len == (d->saveBuf).off) {
    (d->buf).len = in_RCX;
    (d->buf).cap = in_RDI;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RBX;
      extraout_R11[1] = (extraout_RAX->buf).array;
      pgVar3 = extraout_RAX;
      n = (int)extraout_RBX;
    }
    (pgVar3->buf).array = (uint8 *)n;
  }
  else {
    p_00.cap = in_stack_ffffffffffffffd0;
    p_00.array = (uint8 *)in_stack_ffffffffffffffc0.tab;
    p_00.len = (int)in_stack_ffffffffffffffc0.data;
    err_00.data = b;
    err_00.tab = in_stack_ffffffffffffffd8;
    bytes___Buffer__Write(b,p_00,n,err_00);
    uVar1 = (d->saveBuf).buf.len;
    uVar2 = (d->saveBuf).off;
    if (uVar1 < uVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    puVar4 = (d->saveBuf).buf.array;
    iVar7 = (d->saveBuf).buf.cap - uVar2;
    (d->buf).len = uVar1 - uVar2;
    (d->buf).cap = iVar7;
    puVar4 = puVar4 + (uVar2 & -iVar7 >> 0x3f);
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = puVar4;
      extraout_R11_00[1] = (extraout_RAX_00->buf).array;
      pgVar3 = extraout_RAX_00;
    }
    (pgVar3->buf).array = puVar4;
    (pgVar3->saveBuf).buf.len = 0;
    (pgVar3->saveBuf).off = 0;
    (pgVar3->saveBuf).lastRead = 0;
  }
  while( true ) {
    if ((pgVar3->buf).len == 0) {
      return;
    }
    golang_org_x_net_http2_hpack___Decoder__parseHeaderFieldRepr(pgVar3,in_stack_ffffffffffffffc0);
    if ((golang_org_x_net_http2_hpack_errNeedMore.tab == tab) &&
       (runtime_ifaceeq(tab,x,golang_org_x_net_http2_hpack_errNeedMore.data,~r0),
       extraout_AL != '\0')) break;
    d->firstField = false;
    pgVar3 = d;
    if (tab != (runtime_itab *)0x0) {
      return;
    }
  }
  if ((d->maxStrLen != 0) &&
     (iVar5 = d->maxStrLen + 8, iVar6 = iVar5 * 2, iVar7 = (d->buf).len,
     iVar7 != iVar6 && SBORROW8(iVar7,iVar6) == iVar7 + iVar5 * -2 < 0)) {
    return;
  }
  p_01.cap = in_stack_ffffffffffffffd0;
  p_01.array = (uint8 *)in_stack_ffffffffffffffc0.tab;
  p_01.len = (int)in_stack_ffffffffffffffc0.data;
  err_01.data = b;
  err_01.tab = in_stack_ffffffffffffffd8;
  bytes___Buffer__Write(b,p_01,(int)(d->buf).array,err_01);
  return;
}



void golang_org_x_net_http2_hpack___Decoder__parseHeaderFieldRepr
               (golang_org_x_net_http2_hpack_Decoder *d,error ~r0)

{
  byte bVar1;
  char **extraout_RAX;
  uint8 b;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  error in_stack_ffffffffffffffd0;
  undefined local_18 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  if ((d->buf).len == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  bVar1 = *(d->buf).array;
  if ((bVar1 & 0x80) != 0) {
    golang_org_x_net_http2_hpack___Decoder__parseFieldIndexed(d,in_stack_ffffffffffffffd0);
    return;
  }
  if ((bVar1 & 0xc0) != 0x40) {
    if ((bVar1 & 0xf0) == 0) {
      golang_org_x_net_http2_hpack___Decoder__parseFieldLiteral(d,4,1,in_stack_ffffffffffffffd0);
      return;
    }
    if ((bVar1 & 0xf0) != 0x10) {
      if ((bVar1 & 0xe0) == 0x20) {
        golang_org_x_net_http2_hpack___Decoder__parseDynamicTableSizeUpdate
                  (d,in_stack_ffffffffffffffd0);
        return;
      }
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,in_RBX);
      extraout_RAX[1] = (char *)0x10;
      *extraout_RAX = "invalid encodingregexp: Compile(quoted-printableContent-Language";
      local_18._8_8_ = extraout_RAX;
      local_18._0_8_ = go_itab__errors_errorString_error;
      runtime_convT((internal_abi_Type *)&DAT_0084c680,local_18,go_itab__errors_errorString_error);
      return;
    }
    golang_org_x_net_http2_hpack___Decoder__parseFieldLiteral(d,4,2,in_stack_ffffffffffffffd0);
    return;
  }
  golang_org_x_net_http2_hpack___Decoder__parseFieldLiteral(d,6,0,in_stack_ffffffffffffffd0);
  return;
}



// WARNING: Type propagation algorithm not settling

void golang_org_x_net_http2_hpack___Decoder__parseFieldIndexed
               (golang_org_x_net_http2_hpack_Decoder *d,error ~r0)

{
  uint uVar1;
  golang_org_x_net_http2_hpack_HeaderField *pgVar2;
  golang_org_x_net_http2_hpack_HeaderField hf_00;
  __uint8 remain;
  error ~r0_00;
  error err;
  bool bVar3;
  uint64 val;
  uint64 idx;
  int extraout_RCX;
  uint8 *x;
  uint8 *extraout_RBX;
  uint8 *puVar4;
  bool ok;
  int extraout_RSI;
  int extraout_RDI;
  uint uVar5;
  uint8 **extraout_R11;
  int unaff_R14;
  undefined in_XMM15 [16];
  __uint8 in_stack_ffffffffffffff10;
  undefined in_stack_ffffffffffffff28 [16];
  runtime_itab *in_stack_ffffffffffffff38;
  runtime_itab *in_stack_ffffffffffffff40;
  void *in_stack_ffffffffffffff48;
  uint8 *local_b0;
  undefined4 uStack_a8;
  undefined4 uStack_a4;
  undefined4 uStack_a0;
  undefined4 uStack_9c;
  undefined local_98 [8];
  undefined4 uStack_90;
  undefined4 uStack_8c;
  golang_org_x_net_http2_hpack_HeaderField hf;
  golang_org_x_net_http2_hpack_headerFieldTable dt;
  
  while (&hf.Value.len <= *(undefined **)(unaff_R14 + 0x10)) {
