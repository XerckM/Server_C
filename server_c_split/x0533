          ~r0_01.cap = (int)in_stack_fffffffffffffe90;
          ~r0_01.array = in_stack_fffffffffffffe80._type;
          ~r0_01.len = (int)in_stack_fffffffffffffe80.data;
          runtime_growslice(buf.buf.array,uVar10,buf.buf.cap,1,(internal_abi_Type *)&DAT_00807920,
                            ~r0_01);
          buf.buf.array = extraout_RAX_03;
          uVar10 = extraout_RBX_00;
          puVar8 = extraout_RAX_03;
          buf.buf.cap = extraout_RCX_01;
        }
        buf.buf.len = uVar10;
        puVar8[uVar10 - 1] = 0x26;
      }
      if (buf.addr == (strings_Builder *)0x0) {
        buf.addr = &buf;
      }
      else if (buf.addr != &buf) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffe80);
      }
      uVar10 = __n + buf.buf.len;
      uVar9 = buf.buf.cap;
      iVar7 = buf.buf.len;
      puVar8 = buf.buf.array;
      if ((uint)buf.buf.cap < uVar10) {
        local_f8 = buf.buf.len;
        ~r0_02.cap = (int)in_stack_fffffffffffffe90;
        ~r0_02.array = in_stack_fffffffffffffe80._type;
        ~r0_02.len = (int)in_stack_fffffffffffffe80.data;
        runtime_growslice(buf.buf.array,uVar10,buf.buf.cap,__n,(internal_abi_Type *)&DAT_00807920,
                          ~r0_02);
        uVar9 = extraout_RCX_02;
        iVar7 = local_f8;
        uVar10 = extraout_RBX_01;
        puVar8 = extraout_RAX_04;
      }
      local_100 = uVar10;
      local_f8 = uVar9;
      local_a8 = puVar8;
      runtime_memmove(puVar8 + iVar7,local_d8,__n);
      buf.buf.cap = local_f8;
      buf.buf.len = local_100;
      auVar3 = buf.buf._8_16_;
      buf.buf.array = local_a8;
      buf.buf._8_16_ = auVar3;
      if (buf.addr == (strings_Builder *)0x0) {
        buf.addr = &buf;
      }
      else if (buf.addr != &buf) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffe80);
      }
      uVar10 = local_100 + 1;
      if (local_f8 < uVar10) {
        ~r0_03.cap = (int)in_stack_fffffffffffffe90;
        ~r0_03.array = in_stack_fffffffffffffe80._type;
        ~r0_03.len = (int)in_stack_fffffffffffffe80.data;
        runtime_growslice(local_a8,uVar10,local_f8,1,(internal_abi_Type *)&DAT_00807920,~r0_03);
        uVar10 = extraout_RBX_02;
        buf.buf.array = extraout_RAX_05;
        buf.buf.cap = extraout_RCX_03;
      }
      buf.buf.array[uVar10 - 1] = 0x3d;
      ~r0_06.len = in_stack_fffffffffffffe98;
      ~r0_06.str = in_stack_fffffffffffffe90;
      buf.buf.len = uVar10;
      net_url_escape((string)in_stack_fffffffffffffe80,local_c8,~r0_06);
      if (buf.addr == (strings_Builder *)0x0) {
        buf.addr = &buf;
      }
      else if (buf.addr != &buf) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffe80);
      }
      uVar10 = buf.buf.len + __n_00;
      local_e0 = extraout_RAX_06;
      iVar7 = buf.buf.cap;
      iVar5 = buf.buf.len;
      puVar8 = buf.buf.array;
      if ((uint)buf.buf.cap < uVar10) {
        local_f8 = buf.buf.len;
        ~r0_04.cap = (int)in_stack_fffffffffffffe90;
        ~r0_04.array = in_stack_fffffffffffffe80._type;
        ~r0_04.len = (int)in_stack_fffffffffffffe80.data;
        runtime_growslice(buf.buf.array,uVar10,buf.buf.cap,__n_00,(internal_abi_Type *)&DAT_00807920
                          ,~r0_04);
        iVar7 = extraout_RCX_04;
        iVar5 = local_f8;
        uVar10 = extraout_RBX_03;
        puVar8 = extraout_RAX_07;
      }
      local_100 = uVar10;
      local_f8 = iVar7;
      local_a8 = puVar8;
      runtime_memmove(puVar8 + iVar5,local_e0,__n_00);
      buf.buf.cap = local_f8;
      buf.buf.len = local_100;
      buf.buf.array = local_a8;
      pnVar6 = local_a0 + 2;
      iVar7 = local_f0 + 1;
    }
    local_98 = local_90 + 2;
    iVar7 = local_e8 + 1;
  }
  if ((uint)buf.buf.len <= (uint)-(int)buf.buf.array) {
    return;
  }
  if (buf.buf.array != (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringlen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafestringnilptr();
}



void net_url_resolvePath(string base,string ref,string ~r0)

{
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  runtime_slice ~r0_03;
  runtime_slice ~r0_04;
  runtime_slice ~r0_05;
  string substr;
  string a1;
  string sep;
  bool bVar1;
  bool found;
  char *in_RAX;
  int extraout_RAX;
  int i;
  char *extraout_RAX_00;
  uint8 *extraout_RAX_01;
  uint uVar2;
  short *extraout_RAX_02;
  uint8 *extraout_RAX_03;
  uint8 *extraout_RAX_04;
  uint8 *extraout_RAX_05;
  uint8 *extraout_RAX_06;
  uint8 *extraout_RAX_07;
  char *in_RCX;
  int extraout_RCX;
  char *extraout_RCX_00;
  int extraout_RCX_01;
  int extraout_RCX_02;
  int extraout_RCX_03;
  int extraout_RCX_04;
  int extraout_RCX_05;
  int iVar3;
  int iVar4;
  uint in_RBX;
  uint extraout_RBX;
  uint extraout_RBX_00;
  size_t sVar5;
  size_t __n;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  uint extraout_RBX_03;
  uint extraout_RBX_04;
  uint extraout_RBX_05;
  uint extraout_RSI;
  uint in_RDI;
  int i_1;
  int index;
  uint8 *puVar6;
  uint newLen;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_ffffffffffffff18;
  uint8 *in_stack_ffffffffffffff28;
  int in_stack_ffffffffffffff30;
  string in_stack_ffffffffffffff38;
  string in_stack_ffffffffffffff48;
  bool first;
  uint8 local_70 [8];
  undefined local_68 [24];
  uint8 *local_50;
  char *local_48;
  char *local_40;
  short *local_38;
  uint8 *local_30;
  strings_Builder dst;
  
  while (local_68 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_48 = in_RAX;
  uVar2 = in_RBX;
  if ((in_RDI != 0) && (local_48 = in_RCX, uVar2 = in_RDI, *in_RCX != '/')) {
    substr.len = in_stack_ffffffffffffff30;
    substr.str = in_stack_ffffffffffffff28;
    strings_LastIndex((string)in_stack_ffffffffffffff18,substr,(int)in_RAX);
    if (in_RBX < extraout_RAX + 1U) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    a1.len = in_stack_ffffffffffffff30;
    a1.str = in_stack_ffffffffffffff28;
    runtime_concatstring2
              ((runtime_tmpBuf *)local_70,(string)in_stack_ffffffffffffff18,a1,
               in_stack_ffffffffffffff38);
    local_48 = extraout_RAX_00;
    uVar2 = extraout_RBX;
  }
  if (uVar2 == 0) {
    return;
  }
  dst.buf.cap = in_XMM15._8_8_;
  dst.addr = &dst;
  dst.buf.array = (uint8 *)dst.buf.cap;
  dst.buf.len = in_XMM15._0_8_;
  dst.buf.len = dst.buf.len + 1;
  if ((uint)dst.buf.cap < (uint)dst.buf.len) {
    ~r0_00.cap = (int)in_stack_ffffffffffffff28;
    ~r0_00.array = in_stack_ffffffffffffff18._type;
    ~r0_00.len = (int)in_stack_ffffffffffffff18.data;
    local_40 = local_48;
    runtime_growslice((void *)dst.buf.cap,dst.buf.len,dst.buf.cap,1,
                      (internal_abi_Type *)&DAT_00807920,~r0_00);
    dst.buf.array = extraout_RAX_01;
    local_48 = local_40;
    dst.buf.len = extraout_RBX_00;
    dst.buf.cap = extraout_RCX;
  }
  dst.buf.array[dst.buf.len - 1] = 0x2f;
  uVar2 = 1;
  bVar1 = true;
  sVar5 = 0;
  local_38 = (short *)0x0;
  do {
    found = SUB81(uVar2,0);
    if (found == false) {
      if (((sVar5 == 1) && (*(char *)local_38 == '.')) || ((sVar5 == 2 && (*local_38 == 0x2e2e)))) {
        if (dst.addr == (strings_Builder *)0x0) {
          dst.addr = &dst;
        }
        else if (dst.addr != &dst) {
                    // WARNING: Subroutine does not return
          runtime_gopanic(in_stack_ffffffffffffff18);
        }
        uVar2 = dst.buf.len + 1;
        if ((uint)dst.buf.cap < uVar2) {
          ~r0_03.cap = (int)in_stack_ffffffffffffff28;
          ~r0_03.array = in_stack_ffffffffffffff18._type;
          ~r0_03.len = (int)in_stack_ffffffffffffff18.data;
          runtime_growslice(dst.buf.array,uVar2,dst.buf.cap,1,(internal_abi_Type *)&DAT_00807920,
                            ~r0_03);
          uVar2 = extraout_RBX_03;
          dst.buf.cap = extraout_RCX_03;
          dst.buf.array = extraout_RAX_05;
        }
        dst.buf.array[uVar2 - 1] = 0x2f;
        dst.buf.len = uVar2;
      }
      if ((uint)-(int)dst.buf.array < (uint)dst.buf.len) {
        if (dst.buf.array == (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
          runtime_panicunsafestringnilptr();
        }
                    // WARNING: Subroutine does not return
        runtime_panicunsafestringlen();
      }
      return;
    }
    sep.len = in_stack_ffffffffffffff30;
    sep.str = in_stack_ffffffffffffff28;
    strings_Cut((string)in_stack_ffffffffffffff18,sep,in_stack_ffffffffffffff38,
                in_stack_ffffffffffffff48,SUB81(local_48,0));
    local_38 = extraout_RAX_02;
    local_48 = extraout_RCX_00;
    if ((__n == 1) && (*(char *)extraout_RAX_02 == '.')) {
      bVar1 = false;
      uVar2 = extraout_RSI;
    }
    else {
      if ((__n == 2) && (*extraout_RAX_02 == 0x2e2e)) {
        if ((uint)-(int)dst.buf.array < (uint)dst.buf.len) {
          if (dst.buf.array == (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
            runtime_panicunsafestringnilptr();
          }
                    // WARNING: Subroutine does not return
          runtime_panicunsafestringlen();
        }
        if (dst.buf.len == 0) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        uVar2 = dst.buf.len - 1;
        local_50 = dst.buf.array + ((dword)((int)-uVar2 >> 0x3f) & 1);
        for (index = dst.buf.len + -2; -1 < index; index = index + -1) {
          if (local_50[index] == 0x2f) goto LAB_00684849;
        }
        index = -1;
LAB_00684849:
        dst.buf.cap = in_XMM15._8_8_;
        dst.addr = &dst;
        dst.buf.array = (uint8 *)0x0;
        dst.buf.len = in_XMM15._0_8_;
        newLen = dst.buf.len + 1;
        if ((uint)dst.buf.cap < newLen) {
          ~r0_04.cap = (int)in_stack_ffffffffffffff28;
          ~r0_04.array = in_stack_ffffffffffffff18._type;
          ~r0_04.len = (int)in_stack_ffffffffffffff18.data;
          runtime_growslice((void *)0x0,newLen,dst.buf.cap,1,(internal_abi_Type *)&DAT_00807920,
                            ~r0_04);
          newLen = extraout_RBX_04;
          dst.buf.array = extraout_RAX_06;
          dst.buf.cap = extraout_RCX_04;
        }
        dst.buf.array[newLen - 1] = 0x2f;
        dst.buf.len = newLen;
        if (index == -1) {
          bVar1 = true;
        }
        else {
          if (uVar2 < (uint)index) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceAlen();
          }
          if (dst.addr == (strings_Builder *)0x0) {
            dst.addr = &dst;
          }
          else if (dst.addr != &dst) {
                    // WARNING: Subroutine does not return
            runtime_gopanic(in_stack_ffffffffffffff18);
          }
          uVar2 = index + newLen;
          iVar4 = dst.buf.cap;
          puVar6 = dst.buf.array;
          if ((uint)dst.buf.cap < uVar2) {
            ~r0_05.cap = (int)in_stack_ffffffffffffff28;
            ~r0_05.array = in_stack_ffffffffffffff18._type;
            ~r0_05.len = (int)in_stack_ffffffffffffff18.data;
            runtime_growslice(dst.buf.array,uVar2,dst.buf.cap,index,
                              (internal_abi_Type *)&DAT_00807920,~r0_05);
            iVar4 = extraout_RCX_05;
            uVar2 = extraout_RBX_05;
            puVar6 = extraout_RAX_07;
          }
          local_30 = puVar6;
          runtime_memmove(puVar6 + newLen,local_50,index);
          dst.buf.array = local_30;
          dst.buf.len = uVar2;
          dst.buf.cap = iVar4;
        }
      }
      else {
        if (!bVar1) {
          if (dst.addr == (strings_Builder *)0x0) {
            dst.addr = &dst;
          }
          else if (dst.addr != &dst) {
                    // WARNING: Subroutine does not return
            runtime_gopanic(in_stack_ffffffffffffff18);
          }
          uVar2 = dst.buf.len + 1;
          if ((uint)dst.buf.cap < uVar2) {
            ~r0_01.cap = (int)in_stack_ffffffffffffff28;
            ~r0_01.array = in_stack_ffffffffffffff18._type;
            ~r0_01.len = (int)in_stack_ffffffffffffff18.data;
            runtime_growslice(dst.buf.array,uVar2,dst.buf.cap,1,(internal_abi_Type *)&DAT_00807920,
                              ~r0_01);
            uVar2 = extraout_RBX_01;
            dst.buf.cap = extraout_RCX_01;
            dst.buf.array = extraout_RAX_03;
          }
          dst.buf.array[uVar2 - 1] = 0x2f;
          dst.buf.len = uVar2;
        }
        iVar4 = dst.buf.len;
        if (dst.addr == (strings_Builder *)0x0) {
          dst.addr = &dst;
        }
        else if (dst.addr != &dst) {
                    // WARNING: Subroutine does not return
          runtime_gopanic(in_stack_ffffffffffffff18);
        }
        uVar2 = dst.buf.len + __n;
        iVar3 = dst.buf.cap;
        puVar6 = dst.buf.array;
        if ((uint)dst.buf.cap < uVar2) {
          ~r0_02.cap = (int)in_stack_ffffffffffffff28;
          ~r0_02.array = in_stack_ffffffffffffff18._type;
          ~r0_02.len = (int)in_stack_ffffffffffffff18.data;
          runtime_growslice(dst.buf.array,uVar2,dst.buf.cap,__n,(internal_abi_Type *)&DAT_00807920,
                            ~r0_02);
          iVar3 = extraout_RCX_02;
          uVar2 = extraout_RBX_02;
          puVar6 = extraout_RAX_04;
        }
        local_30 = puVar6;
        runtime_memmove(puVar6 + iVar4,local_38,__n);
        dst.buf.array = local_30;
        bVar1 = false;
        dst.buf.len = uVar2;
        dst.buf.cap = iVar3;
      }
      uVar2 = extraout_RSI & 0xff;
    }
    uVar2 = uVar2 & 0xffffffff;
    sVar5 = __n;
  } while( true );
}



void net_url___URL__IsAbs(net_url_URL *u,bool ~r0)

{
  return;
}



void net_url___URL__Parse(net_url_URL *u,string ref,net_url_URL *~r0,error ~r1)

{
  error ~r1_00;
  net_url_URL *ref_00;
  net_url_URL *refURL;
  net_url_URL *~r0_00;
  int extraout_RBX;
  void *unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r1_00.data = unaff_RBP;
  ~r1_00.tab = (runtime_itab *)u;
  net_url_Parse(in_stack_ffffffffffffffe0,~r0,~r1_00);
  if (extraout_RBX != 0) {
    return;
  }
  net_url___URL__ResolveReference(u,ref_00,~r0_00);
  return;
}



void net_url___URL__ResolveReference(net_url_URL *u,net_url_URL *ref,net_url_URL *~r0)

{
  string ~r0_00;
  string ~r0_01;
  net_url_URL *u_00;
  net_url_URL *_url;
  uint8 **ppuVar1;
  uint8 **extraout_RAX;
  uint8 **extraout_RAX_00;
  uint8 **extraout_RAX_01;
  uint8 **extraout_RAX_02;
  uint8 **extraout_RAX_03;
  uint8 **extraout_RAX_04;
  uint8 **extraout_RAX_05;
  uint8 **extraout_RAX_06;
  uint8 **extraout_RAX_07;
  int extraout_RAX_08;
  net_url_URL *extraout_RCX;
  undefined8 extraout_RCX_00;
  undefined8 extraout_RCX_01;
  undefined8 extraout_RCX_02;
  net_url_URL *extraout_RCX_03;
  net_url_URL *u_01;
  net_url_URL *u_02;
  net_url_Userinfo *extraout_RBX;
  net_url_Userinfo *pnVar2;
  uint8 *extraout_RBX_00;
  uint8 *extraout_RSI;
  uint8 *extraout_RSI_00;
  uint8 *extraout_RSI_01;
  uint8 *extraout_RSI_02;
  uint8 *puVar3;
  uint8 *extraout_RSI_03;
  uint8 **extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  undefined8 *extraout_R11_02;
  uint8 **extraout_R11_03;
  uint8 **extraout_R11_04;
  uint8 **extraout_R11_05;
  uint8 **extraout_R11_06;
  net_url_Userinfo **extraout_R11_07;
  int unaff_R14;
  net_url_URL *pnStack0000000000000008;
  net_url_URL *pnStack0000000000000010;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  uint8 *in_stack_ffffffffffffffe0;
  int in_stack_ffffffffffffffe8;
  int iVar4;
  
  pnStack0000000000000008 = u;
  pnStack0000000000000010 = ref;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_newobject((internal_abi_Type *)&DAT_00895b20,pnStack0000000000000010);
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_wbMove((internal_abi_Type *)&DAT_00895b20,u_00,pnStack0000000000000010);
  }
  ppuVar1 = (uint8 **)FUN_0046d0e2();
  u_01 = pnStack0000000000000010;
  u_02 = pnStack0000000000000008;
  if ((pnStack0000000000000010->Scheme).len == 0) {
    puVar3 = (pnStack0000000000000008->Scheme).str;
    ppuVar1[1] = (uint8 *)(pnStack0000000000000008->Scheme).len;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RSI;
      extraout_R11[1] = *extraout_RAX;
      ppuVar1 = extraout_RAX;
      u_01 = extraout_RCX;
      puVar3 = extraout_RSI;
    }
    *ppuVar1 = puVar3;
  }
  if ((((u_01->Scheme).len == 0) && ((u_01->Host).len == 0)) &&
     (u_01->User == (net_url_Userinfo *)0x0)) {
    if ((u_01->Opaque).len == 0) {
      if ((((u_01->Path).len == 0) && (u_01->ForceQuery == false)) && ((u_01->RawQuery).len == 0)) {
        puVar3 = (u_02->RawQuery).str;
        ppuVar1[0xd] = (uint8 *)(u_02->RawQuery).len;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_03 = extraout_RSI_00;
          extraout_R11_03[1] = extraout_RAX_03[0xc];
          ppuVar1 = extraout_RAX_03;
          u_01 = extraout_RCX_03;
          puVar3 = extraout_RSI_00;
        }
        ppuVar1[0xc] = puVar3;
        if ((u_01->Fragment).len == 0) {
          puVar3 = (u_02->Fragment).str;
          ppuVar1[0xf] = (uint8 *)(u_02->Fragment).len;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_04 = extraout_RSI_01;
            extraout_R11_04[1] = extraout_RAX_04[0xe];
            ppuVar1 = extraout_RAX_04;
            puVar3 = extraout_RSI_01;
          }
          ppuVar1[0xe] = puVar3;
          puVar3 = (u_02->RawFragment).str;
          ppuVar1[0x11] = (uint8 *)(u_02->RawFragment).len;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_05 = extraout_RSI_02;
            extraout_R11_05[1] = extraout_RAX_05[0x10];
            ppuVar1 = extraout_RAX_05;
            puVar3 = extraout_RSI_02;
          }
          ppuVar1[0x10] = puVar3;
        }
      }
      puVar3 = (u_02->Host).str;
      ppuVar1[6] = (uint8 *)(u_02->Host).len;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_06 = extraout_RSI_03;
        extraout_R11_06[1] = extraout_RAX_06[5];
        ppuVar1 = extraout_RAX_06;
        puVar3 = extraout_RSI_03;
      }
      ppuVar1[5] = puVar3;
      pnVar2 = u_02->User;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_07 = extraout_RBX;
        extraout_R11_07[1] = (net_url_Userinfo *)extraout_RAX_07[4];
        ppuVar1 = extraout_RAX_07;
        pnVar2 = extraout_RBX;
      }
      ppuVar1[4] = (uint8 *)pnVar2;
      net_url___URL__EscapedPath(u_02,in_stack_ffffffffffffffc0);
      puVar3 = extraout_RBX_00;
      iVar4 = extraout_RAX_08;
      net_url___URL__EscapedPath(pnStack0000000000000010,in_stack_ffffffffffffffc0);
      ~r0_01.len = iVar4;
      ~r0_01.str = puVar3;
      net_url_resolvePath(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,~r0_01);
      net_url___URL__setPath(u_00,in_stack_ffffffffffffffc0,(error)in_stack_ffffffffffffffd0);
      return;
    }
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = extraout_RCX_00;
      ppuVar1 = extraout_RAX_00;
    }
    ppuVar1[4] = (uint8 *)0x0;
    ppuVar1[6] = (uint8 *)0x0;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_01 = extraout_RCX_01;
      ppuVar1 = extraout_RAX_01;
    }
    ppuVar1[5] = (uint8 *)0x0;
    ppuVar1[8] = (uint8 *)0x0;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_02 = extraout_RCX_02;
      ppuVar1 = extraout_RAX_02;
    }
    ppuVar1[7] = (uint8 *)0x0;
    return;
  }
  net_url___URL__EscapedPath(u_01,in_stack_ffffffffffffffc0);
  ~r0_00.len = in_stack_ffffffffffffffe8;
  ~r0_00.str = in_stack_ffffffffffffffe0;
  net_url_resolvePath(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,~r0_00);
  net_url___URL__setPath(u_00,in_stack_ffffffffffffffc0,(error)in_stack_ffffffffffffffd0);
  return;
}



void net_url___URL__Query(net_url_URL *u,net_url_Values ~r0)

{
  error err;
  net_url_Values m;
  net_url_Values v;
  int unaff_R14;
  string in_stack_ffffffffffffffc8;
  runtime_itab *in_stack_ffffffffffffffd8;
  runtime_hmap *~r0_00;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00 = (runtime_hmap *)(u->RawQuery).len;
  runtime_makemap_small(~r0_00);
  err.data = ~r0_00;
  err.tab = in_stack_ffffffffffffffd8;
  net_url_parseQuery(m,in_stack_ffffffffffffffc8,err);
  return;
}



void net_url___URL__RequestURI(net_url_URL *u,string ~r0)

{
  int iVar1;
  string ~r0_00;
  string ~r0_01;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar1 = (u->Opaque).len;
  if (iVar1 == 0) {
    net_url___URL__EscapedPath(u,in_stack_ffffffffffffffc0);
  }
  else if ((1 < iVar1) && (*(short *)(u->Opaque).str == 0x2f2f)) {
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
               in_stack_ffffffffffffffe0,~r0_00);
  }
  if ((u->ForceQuery != false) || ((u->RawQuery).len != 0)) {
    ~r0_01.len = unaff_RBP;
    ~r0_01.str = in_stack_fffffffffffffff0;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
               in_stack_ffffffffffffffe0,~r0_01);
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void net_url___URL__Hostname(net_url_URL *u,string ~r0)

{
  string port;
  string host;
  uint8 *unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  string in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0.str = (uint8 *)u;
  }
  host.len = unaff_retaddr;
  host.str = unaff_RBP;
  port.len = ~r0.len;
  port.str = ~r0.str;
  net_url_splitHostPort(in_stack_ffffffffffffffe8,host,port);
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void net_url___URL__Port(net_url_URL *u,string ~r0)

{
  string port;
  string host;
  uint8 *unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  string in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0.str = (uint8 *)u;
  }
  host.len = unaff_retaddr;
  host.str = unaff_RBP;
  port.len = ~r0.len;
  port.str = ~r0.str;
  net_url_splitHostPort(in_stack_ffffffffffffffe8,host,port);
  return;
}



void net_url_splitHostPort(string hostPort,string host,string port)

{
  byte bVar1;
  char extraout_AL;
  int32 extraout_EAX;
  char *in_RAX;
  char cVar2;
  int pos;
  uint in_RBX;
  int iVar3;
  int extraout_RBX;
  int i;
  int colon;
  uint uVar4;
  int32 b;
  int unaff_R14;
  bool bVar5;
  string in_stack_ffffffffffffffb8;
  
  while (colon = in_RBX, &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  do {
    colon = colon - 1;
    if (colon < 0) {
      colon = -1;
      break;
    }
  } while (in_RAX[colon] != ':');
  if (colon == -1) {
    bVar5 = false;
  }
  else {
    if (in_RBX < (uint)colon) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    iVar3 = in_RBX - colon;
    uVar4 = -iVar3 >> 0x3f & colon;
    if (iVar3 == 0) {
      bVar5 = true;
    }
    else if (in_RAX[uVar4] == ':') {
      iVar3 = iVar3 + -1;
      pos = 0;
      do {
        if (iVar3 <= pos) {
          bVar5 = true;
          goto LAB_006850b8;
        }
        bVar1 = (in_RAX + ((dword)(-iVar3 >> 0x3f) & 1) + uVar4)[pos];
        b = (int32)bVar1;
        if (bVar1 < 0x80) {
          pos = pos + 1;
        }
        else {
          runtime_decoderune(in_stack_ffffffffffffffb8,
                             (int)(in_RAX + ((dword)(-iVar3 >> 0x3f) & 1) + uVar4),(int32)iVar3,pos)
          ;
          pos = extraout_RBX;
          b = extraout_EAX;
        }
        b = b + -0x30;
      } while ((dword)b < 10);
      bVar5 = false;
    }
    else {
      bVar5 = false;
    }
  }
LAB_006850b8:
  uVar4 = in_RBX;
  if (bVar5) {
    if (in_RBX < (uint)colon) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    uVar4 = colon;
    if (in_RBX < colon + 1U) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
  }
  if (uVar4 == 0) {
    bVar5 = false;
  }
  else {
    bVar5 = *in_RAX == '[';
  }
  if (bVar5) {
    if (uVar4 == 0) {
      cVar2 = '\0';
    }
    else {
      runtime_memequal();
      cVar2 = extraout_AL;
    }
  }
  else {
    cVar2 = '\0';
  }
  if (cVar2 != '\0') {
    if (uVar4 < uVar4 - 1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    if (uVar4 == 1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void net_url___URL__MarshalBinary(net_url_URL *u,__uint8 text,error err)

{
  __uint8 ~r0;
  undefined8 unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  string in_stack_ffffffffffffffe0;
  undefined8 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  net_url___URL__String(u,in_stack_ffffffffffffffe0);
  ~r0.len = unaff_RBP;
  ~r0.array = (uint8 *)in_stack_fffffffffffffff0;
  ~r0.cap = unaff_retaddr;
  runtime_stringtoslicebyte((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffe0,~r0);
  return;
}



void net_url___URL__UnmarshalBinary(net_url_URL *u,__uint8 text,error ~r0)

{
  error ~r1;
  net_url_URL *~r0_00;
  void *src;
  net_url_URL *u1;
  int in_RCX;
  uint8 *in_RBX;
  int extraout_RBX;
  int unaff_R14;
  string in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_ffffffffffffffe8;
  void *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_slicebytetostring((runtime_tmpBuf *)0x0,in_RBX,in_RCX,in_stack_ffffffffffffffd8);
  ~r1.data = in_stack_fffffffffffffff0;
  ~r1.tab = in_stack_ffffffffffffffe8;
  net_url_Parse(in_stack_ffffffffffffffd8,~r0_00,~r1);
  if (extraout_RBX == 0) {
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_wbMove((internal_abi_Type *)&DAT_00895b20,u,src);
    }
    FUN_0046d0e2();
    return;
  }
  return;
}



void net_url___URL__JoinPath(net_url_URL *u,__string elem,net_url_URL *~r0)

{
  int dstLen;
  runtime_slice ~r0_00;
  __string elem_00;
  __string elem_01;
  string a1;
  string a1_00;
  error ~r0_01;
  string ~r0_02;
  string ~r0_03;
  string ~r0_04;
  string ~r0_05;
  char extraout_AL;
  char extraout_AL_00;
  char **extraout_RAX;
  char **ppcVar1;
  char *extraout_RAX_00;
  char *extraout_RAX_01;
  char *pcVar2;
  void *dst;
  net_url_URL *_url;
  net_url_URL *u_00;
  char cVar3;
  int in_RCX;
  int extraout_RCX;
  uint newLen;
  int iVar4;
  char **ppcVar5;
  uint extraout_RBX;
  void *extraout_RBX_00;
  char *extraout_RBX_01;
  int extraout_RBX_02;
  void *~r0_06;
  void *extraout_RBX_03;
  char **extraout_R11;
  int unaff_R14;
  bool bVar6;
  string in_stack_ffffffffffffff88;
  runtime_itab *in_stack_ffffffffffffff98;
  uint8 *in_stack_ffffffffffffffa0;
  uint8 *in_stack_ffffffffffffffa8;
  int in_stack_ffffffffffffffb0;
  char *local_18 [2];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  net_url___URL__EscapedPath(u,in_stack_ffffffffffffff88);
  newLen = in_RCX + 1;
  if (newLen < 2) {
    ppcVar1 = local_18;
    iVar4 = 1;
  }
  else {
    ~r0_00.cap = (int)in_stack_ffffffffffffff98;
    ~r0_00.array = in_stack_ffffffffffffff88.str;
    ~r0_00.len = in_stack_ffffffffffffff88.len;
    runtime_growslice(local_18,newLen,1,in_RCX,(internal_abi_Type *)&DAT_008075e0,~r0_00);
    ppcVar1 = extraout_RAX;
    newLen = extraout_RBX;
    iVar4 = extraout_RCX;
  }
  dstLen = newLen - 1;
  runtime_typedslicecopy
            ((internal_abi_Type *)&DAT_008075e0,
             (void *)((int)ppcVar1 + (uint)((dword)(-(iVar4 + -1) >> 0x3f) & 0x10)),dstLen,~r0,
             in_RCX,dstLen);
  if (newLen != 0) {
    if (ppcVar1[1] == (char *)0x0) {
      bVar6 = false;
    }
    else {
      bVar6 = **ppcVar1 == '/';
    }
    if (bVar6) {
      elem_00.cap = (int)in_stack_ffffffffffffff98;
      elem_00.array = (string *)in_stack_ffffffffffffff88.str;
      elem_00.len = in_stack_ffffffffffffff88.len;
      ~r0_02.len = (int)in_stack_ffffffffffffffa8;
      ~r0_02.str = in_stack_ffffffffffffffa0;
      path_Join(elem_00,~r0_02);
      ~r0_06 = extraout_RBX_00;
    }
    else {
      a1.len = (int)in_stack_ffffffffffffffa0;
      a1.str = (uint8 *)in_stack_ffffffffffffff98;
