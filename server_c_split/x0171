  time_Time **pptVar1;
  error ~r0_00;
  os_File **in_RAX;
  time_Location *in_RCX;
  int64 in_RBX;
  void *unaff_RBP;
  int unaff_R14;
  time_Time in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    t.wall = (uint64)in_RAX;
    t.ext = in_RBX;
    t.loc = in_RCX;
    runtime_morestack_noctxt();
    in_RAX = (os_File **)t.wall;
    in_RCX = t.loc;
    in_RBX = t.ext;
  }
  pptVar1 = *(time_Time ***)(unaff_R14 + 0x20);
  if ((pptVar1 != (time_Time **)0x0) && (*pptVar1 == &t)) {
    *pptVar1 = (time_Time *)&stack0xffffffffffffffd8;
  }
  ~r0_00.data = unaff_RBP;
  ~r0_00.tab = in_stack_fffffffffffffff0;
  os___File__setDeadline(*in_RAX,in_stack_ffffffffffffffd8,~r0_00);
  return;
}



void os_fileWithoutReadFrom_SetReadDeadline(time_Time t,error ~r0)

{
  time_Time **pptVar1;
  error ~r0_00;
  os_File *in_RAX;
  time_Location *in_RCX;
  int64 in_RBX;
  void *unaff_RBP;
  int unaff_R14;
  time_Time in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    t.wall = (uint64)in_RAX;
    t.ext = in_RBX;
    t.loc = in_RCX;
    runtime_morestack_noctxt();
    in_RAX = (os_File *)t.wall;
    in_RCX = t.loc;
    in_RBX = t.ext;
  }
  pptVar1 = *(time_Time ***)(unaff_R14 + 0x20);
  if ((pptVar1 != (time_Time **)0x0) && (*pptVar1 == &t)) {
    *pptVar1 = (time_Time *)&stack0xffffffffffffffd8;
  }
  ~r0_00.data = unaff_RBP;
  ~r0_00.tab = in_stack_fffffffffffffff0;
  os___File__setReadDeadline(in_RAX,in_stack_ffffffffffffffd8,~r0_00);
  return;
}



void os___fileWithoutReadFrom__SetReadDeadline(time_Time t,error ~r0)

{
  time_Time **pptVar1;
  error ~r0_00;
  os_File **in_RAX;
  time_Location *in_RCX;
  int64 in_RBX;
  void *unaff_RBP;
  int unaff_R14;
  time_Time in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    t.wall = (uint64)in_RAX;
    t.ext = in_RBX;
    t.loc = in_RCX;
    runtime_morestack_noctxt();
    in_RAX = (os_File **)t.wall;
    in_RCX = t.loc;
    in_RBX = t.ext;
  }
  pptVar1 = *(time_Time ***)(unaff_R14 + 0x20);
  if ((pptVar1 != (time_Time **)0x0) && (*pptVar1 == &t)) {
    *pptVar1 = (time_Time *)&stack0xffffffffffffffd8;
  }
  ~r0_00.data = unaff_RBP;
  ~r0_00.tab = in_stack_fffffffffffffff0;
  os___File__setReadDeadline(*in_RAX,in_stack_ffffffffffffffd8,~r0_00);
  return;
}



void os_fileWithoutReadFrom_SetWriteDeadline(time_Time t,error ~r0)

{
  time_Time **pptVar1;
  error ~r0_00;
  os_File *in_RAX;
  time_Location *in_RCX;
  int64 in_RBX;
  void *unaff_RBP;
  int unaff_R14;
  time_Time in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    t.wall = (uint64)in_RAX;
    t.ext = in_RBX;
    t.loc = in_RCX;
    runtime_morestack_noctxt();
    in_RAX = (os_File *)t.wall;
    in_RCX = t.loc;
    in_RBX = t.ext;
  }
  pptVar1 = *(time_Time ***)(unaff_R14 + 0x20);
  if ((pptVar1 != (time_Time **)0x0) && (*pptVar1 == &t)) {
    *pptVar1 = (time_Time *)&stack0xffffffffffffffd8;
  }
  ~r0_00.data = unaff_RBP;
  ~r0_00.tab = in_stack_fffffffffffffff0;
  os___File__setWriteDeadline(in_RAX,in_stack_ffffffffffffffd8,~r0_00);
  return;
}



void os___fileWithoutReadFrom__SetWriteDeadline(time_Time t,error ~r0)

{
  time_Time **pptVar1;
  error ~r0_00;
  os_File **in_RAX;
  time_Location *in_RCX;
  int64 in_RBX;
  void *unaff_RBP;
  int unaff_R14;
  time_Time in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    t.wall = (uint64)in_RAX;
    t.ext = in_RBX;
    t.loc = in_RCX;
    runtime_morestack_noctxt();
    in_RAX = (os_File **)t.wall;
    in_RCX = t.loc;
    in_RBX = t.ext;
  }
  pptVar1 = *(time_Time ***)(unaff_R14 + 0x20);
  if ((pptVar1 != (time_Time **)0x0) && (*pptVar1 == &t)) {
    *pptVar1 = (time_Time *)&stack0xffffffffffffffd8;
  }
  ~r0_00.data = unaff_RBP;
  ~r0_00.tab = in_stack_fffffffffffffff0;
  os___File__setWriteDeadline(*in_RAX,in_stack_ffffffffffffffd8,~r0_00);
  return;
}



void os_fileWithoutReadFrom_Stat(io_fs_FileInfo ~r0,error ~r1)

{
  io_fs_FileInfo **ppiVar1;
  error ~r1_00;
  io_fs_FileInfo ~r0_00;
  runtime_itab *in_RAX;
  void *unaff_RBP;
  int unaff_R14;
  runtime_itab *unaff_retaddr;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.tab = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.tab;
  }
  ppiVar1 = *(io_fs_FileInfo ***)(unaff_R14 + 0x20);
  if ((ppiVar1 != (io_fs_FileInfo **)0x0) && (*ppiVar1 == &~r0)) {
    *ppiVar1 = (io_fs_FileInfo *)&stack0xfffffffffffffff0;
  }
  ~r0_00.data = unaff_RBP;
  ~r0_00.tab = in_stack_fffffffffffffff0;
  ~r1_00.data = ~r0.tab;
  ~r1_00.tab = unaff_retaddr;
  os___File__Stat((os_File *)in_RAX,~r0_00,~r1_00);
  return;
}



void os___fileWithoutReadFrom__Stat(io_fs_FileInfo ~r0,error ~r1)

{
  io_fs_FileInfo **ppiVar1;
  error ~r1_00;
  io_fs_FileInfo ~r0_00;
  runtime_itab *in_RAX;
  void *unaff_RBP;
  int unaff_R14;
  runtime_itab *unaff_retaddr;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.tab = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.tab;
  }
  ppiVar1 = *(io_fs_FileInfo ***)(unaff_R14 + 0x20);
  if ((ppiVar1 != (io_fs_FileInfo **)0x0) && (*ppiVar1 == &~r0)) {
    *ppiVar1 = (io_fs_FileInfo *)&stack0xfffffffffffffff0;
  }
  ~r0_00.data = unaff_RBP;
  ~r0_00.tab = in_stack_fffffffffffffff0;
  ~r1_00.data = ~r0.tab;
  ~r1_00.tab = unaff_retaddr;
  os___File__Stat((os_File *)in_RAX->inter,~r0_00,~r1_00);
  return;
}



void os_fileWithoutReadFrom_Sync(error ~r0)

{
  error **ppeVar1;
  error ~r0_00;
  runtime_itab *in_RAX;
  void *unaff_RBP;
  int unaff_R14;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.tab = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.tab;
  }
  ppeVar1 = *(error ***)(unaff_R14 + 0x20);
  if ((ppeVar1 != (error **)0x0) && (*ppeVar1 == &~r0)) {
    *ppeVar1 = (error *)&stack0xfffffffffffffff0;
  }
  ~r0_00.data = unaff_RBP;
  ~r0_00.tab = in_stack_fffffffffffffff0;
  os___File__Sync((os_File *)in_RAX,~r0_00);
  return;
}



void os___fileWithoutReadFrom__Sync(error ~r0)

{
  error **ppeVar1;
  error ~r0_00;
  runtime_itab *in_RAX;
  void *unaff_RBP;
  int unaff_R14;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.tab = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.tab;
  }
  ppeVar1 = *(error ***)(unaff_R14 + 0x20);
  if ((ppeVar1 != (error **)0x0) && (*ppeVar1 == &~r0)) {
    *ppeVar1 = (error *)&stack0xfffffffffffffff0;
  }
  ~r0_00.data = unaff_RBP;
  ~r0_00.tab = in_stack_fffffffffffffff0;
  os___File__Sync((os_File *)in_RAX->inter,~r0_00);
  return;
}



void os_fileWithoutReadFrom_SyscallConn(syscall_RawConn ~r0,error ~r1)

{
  syscall_RawConn **ppsVar1;
  runtime_itab *in_RAX;
  runtime_itab **extraout_RAX;
  runtime_itab **extraout_RAX_00;
  runtime_itab **pprVar2;
  runtime_itab *prVar3;
  void *in_RBX;
  void *extraout_RBX;
  runtime_itab **extraout_R11;
  int unaff_R14;
  syscall_RawConn sStack_20;
  runtime_itab *local_10;
  
  local_10 = in_RAX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.tab = local_10;
    runtime_morestack_noctxt();
    local_10 = ~r0.tab;
    in_RBX = extraout_RBX;
  }
  ppsVar1 = *(syscall_RawConn ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (syscall_RawConn **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = &sStack_20;
  }
  prVar3 = os_ErrInvalid.tab;
  if (local_10 != (runtime_itab *)0x0) {
    prVar3 = (runtime_itab *)0x0;
  }
  if (prVar3 == (runtime_itab *)0x0) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e7e0,in_RBX);
    pprVar2 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = local_10;
      pprVar2 = extraout_RAX_00;
    }
    *pprVar2 = local_10;
  }
  return;
}



void os___fileWithoutReadFrom__SyscallConn(syscall_RawConn ~r0,error ~r1)

{
  syscall_RawConn **ppsVar1;
  runtime_itab *in_RAX;
  internal_abi_InterfaceType **extraout_RAX;
  internal_abi_InterfaceType **extraout_RAX_00;
  internal_abi_InterfaceType **ppiVar2;
  void *in_RBX;
  void *extraout_RBX;
  runtime_itab *prVar3;
  internal_abi_InterfaceType **extraout_R11;
  int unaff_R14;
  syscall_RawConn sStack_20;
  internal_abi_InterfaceType *local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.tab = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.tab;
    in_RBX = extraout_RBX;
  }
  ppsVar1 = *(syscall_RawConn ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (syscall_RawConn **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = &sStack_20;
  }
  local_10 = in_RAX->inter;
  prVar3 = os_ErrInvalid.tab;
  if (local_10 != (internal_abi_InterfaceType *)0x0) {
    prVar3 = (runtime_itab *)0x0;
  }
  if (prVar3 == (runtime_itab *)0x0) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e7e0,in_RBX);
    ppiVar2 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = local_10;
      ppiVar2 = extraout_RAX_00;
    }
    *ppiVar2 = local_10;
  }
  return;
}



void os_fileWithoutReadFrom_Truncate(int64 size,error ~r0)

{
  error **ppeVar1;
  void *in_RBX;
  int unaff_R14;
  error in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.tab = (runtime_itab *)size;
    ~r0.data = in_RBX;
    runtime_morestack_noctxt();
    size = (int64)~r0.tab;
    in_RBX = ~r0.data;
  }
  ppeVar1 = *(error ***)(unaff_R14 + 0x20);
  if ((ppeVar1 != (error **)0x0) && (*ppeVar1 == &~r0)) {
    *ppeVar1 = (error *)&stack0xffffffffffffffe8;
  }
  os___File__Truncate((os_File *)size,(int64)in_RBX,in_stack_ffffffffffffffe8);
  return;
}



void os___fileWithoutReadFrom__Truncate(int64 size,error ~r0)

{
  error **ppeVar1;
  void *in_RBX;
  int unaff_R14;
  error in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.tab = (runtime_itab *)size;
    ~r0.data = in_RBX;
    runtime_morestack_noctxt();
    size = (int64)~r0.tab;
    in_RBX = ~r0.data;
  }
  ppeVar1 = *(error ***)(unaff_R14 + 0x20);
  if ((ppeVar1 != (error **)0x0) && (*ppeVar1 == &~r0)) {
    *ppeVar1 = (error *)&stack0xffffffffffffffe8;
  }
  os___File__Truncate((os_File *)*(internal_abi_InterfaceType **)size,(int64)in_RBX,
                      in_stack_ffffffffffffffe8);
  return;
}



void os_fileWithoutReadFrom_Write(__uint8 b,int n,error err)

{
  __uint8 **pp_Var1;
  error err_00;
  int in_RCX;
  int in_RBX;
  void *unaff_RBP;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_fffffffffffffff0;
  
  b.len = in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    b.array = (uint8 *)n;
    b.cap = in_RCX;
    runtime_morestack_noctxt();
    n = (int)b.array;
    in_RCX = b.cap;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &b)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffd8;
  }
  err_00.data = unaff_RBP;
  err_00.tab = in_stack_fffffffffffffff0;
  os___File__Write((os_File *)n,in_stack_ffffffffffffffd8,b.len,err_00);
  return;
}



void os___fileWithoutReadFrom__Write(__uint8 b,int n,error err)

{
  __uint8 **pp_Var1;
  error err_00;
  int in_RCX;
  int in_RBX;
  void *unaff_RBP;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_fffffffffffffff0;
  
  b.len = in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    b.array = (uint8 *)n;
    b.cap = in_RCX;
    runtime_morestack_noctxt();
    n = (int)b.array;
    in_RCX = b.cap;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &b)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffd8;
  }
  err_00.data = unaff_RBP;
  err_00.tab = in_stack_fffffffffffffff0;
  os___File__Write(*(os_File **)n,in_stack_ffffffffffffffd8,b.len,err_00);
  return;
}



void os_fileWithoutReadFrom_WriteAt(__uint8 b,int64 off,int n,error err)

{
  __uint8 **pp_Var1;
  int in_RCX;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffffd0;
  error in_stack_ffffffffffffffe8;
  
  b.len = n;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    b.array = (uint8 *)off;
    b.cap = in_RCX;
    runtime_morestack_noctxt();
    off = (int64)b.array;
    in_RCX = b.cap;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &b)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffd0;
  }
  os___File__WriteAt((os_File *)off,in_stack_ffffffffffffffd0,b.len,in_RCX,in_stack_ffffffffffffffe8
                    );
  return;
}



void os___fileWithoutReadFrom__WriteAt(__uint8 b,int64 off,int n,error err)

{
  __uint8 **pp_Var1;
  int in_RCX;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffffd0;
  error in_stack_ffffffffffffffe8;
  
  b.len = n;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    b.array = (uint8 *)off;
    b.cap = in_RCX;
    runtime_morestack_noctxt();
    off = (int64)b.array;
    in_RCX = b.cap;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &b)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffd0;
  }
  os___File__WriteAt(*(os_File **)off,in_stack_ffffffffffffffd0,b.len,in_RCX,
                     in_stack_ffffffffffffffe8);
  return;
}



void os_fileWithoutReadFrom_WriteString(string s,int n,error err)

{
  string **ppsVar1;
  error err_00;
  uint in_RCX;
  int in_RBX;
  void *unaff_RBP;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_fffffffffffffff0;
  
  s.len = in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    s.str = (uint8 *)n;
    runtime_morestack_noctxt();
    n = (int)s.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &s)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffd8;
  }
  if (in_RCX <= (uint)-s.len) {
    err_00.data = unaff_RBP;
    err_00.tab = in_stack_fffffffffffffff0;
    os___File__Write((os_File *)n,in_stack_ffffffffffffffd8,s.len,err_00);
    return;
  }
  if (s.len != 0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafeslicelen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafeslicenilptr();
}



void os___fileWithoutReadFrom__WriteString(string s,int n,error err)

{
  string **ppsVar1;
  error err_00;
  uint in_RCX;
  int in_RBX;
  void *unaff_RBP;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_fffffffffffffff0;
  
  s.len = in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    s.str = (uint8 *)n;
    runtime_morestack_noctxt();
    n = (int)s.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &s)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffd8;
  }
  if (in_RCX <= (uint)-s.len) {
    err_00.data = unaff_RBP;
    err_00.tab = in_stack_fffffffffffffff0;
    os___File__Write(*(os_File **)n,in_stack_ffffffffffffffd8,s.len,err_00);
    return;
  }
  if (s.len != 0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafeslicelen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafeslicenilptr();
}



void strconv_special(string s,float64 f,int n,bool ok)

{
  byte bVar1;
  int nsign;
  int n_3;
  uint64 v;
  int sign;
  int i_1;
  int iVar2;
  uint8 c_1;
  undefined7 in_register_00000019;
  uint uVar3;
  char cVar4;
  int n_2;
  int i;
  int n_1;
  uint8 c;
  
  uVar3 = CONCAT71(in_register_00000019,ok);
  if (uVar3 == 0) {
    return;
  }
  bVar1 = *(byte *)n;
  if (bVar1 < 0x4a) {
    if ((bVar1 == 0x2b) || (bVar1 == 0x2d)) {
      uVar3 = uVar3 - 1;
      n = n + (uint)((dword)((int)-uVar3 >> 0x3f) & 1);
    }
    else if (bVar1 != 0x49) {
      return;
    }
LAB_004b76f6:
    n_2 = 8;
    if ((int)uVar3 < 8) {
      n_2 = uVar3;
    }
    for (i = 0; n_1 = n_2, i < n_2; i = i + 1) {
      if (uVar3 <= (uint)i) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      cVar4 = *(char *)(i + n);
      if ((byte)(cVar4 + 0xbfU) < 0x1a) {
        cVar4 = cVar4 + ' ';
      }
      if (7 < (uint)i) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      n_1 = i;
      if ((&DAT_008b1d8e)[i] != cVar4) break;
    }
    if (n_1 - 4U < 4) {
      n_1 = 3;
    }
    if ((n_1 == 3) || (n_1 == 8)) {
      return;
    }
  }
  else {
    if (bVar1 != 0x4e) {
      if (bVar1 == 0x69) goto LAB_004b76f6;
      if (bVar1 != 0x6e) {
        return;
      }
    }
    n_3 = 3;
    if ((int)uVar3 < 3) {
      n_3 = uVar3;
    }
    for (i_1 = 0; iVar2 = n_3, i_1 < n_3; i_1 = i_1 + 1) {
      if (uVar3 <= (uint)i_1) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      cVar4 = *(char *)(i_1 + n);
      if ((byte)(cVar4 + 0xbfU) < 0x1a) {
        cVar4 = cVar4 + ' ';
      }
      if (2 < (uint)i_1) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      iVar2 = i_1;
      if ((&DAT_008ae3cc)[i_1] != cVar4) break;
    }
    if (iVar2 == 3) {
      return;
    }
  }
  return;
}



void strconv___decimal__set(strconv_decimal *b,string s,bool ok)

{
  byte bVar1;
  char cVar2;
  uint uVar3;
  bool bVar4;
  bool bVar5;
  uint in_RCX;
  int i;
  int esign;
  undefined7 in_register_00000019;
  bool sawdigits;
  bool sawdot;
  int e;
  
  b->neg = false;
  b->trunc = false;
  if ((int)in_RCX < 1) {
    return;
  }
  if (*(char *)CONCAT71(in_register_00000019,ok) == '+') {
    i = 1;
  }
  else if (*(char *)CONCAT71(in_register_00000019,ok) == '-') {
    b->neg = true;
    i = 1;
  }
  else {
    i = 0;
  }
  bVar5 = false;
  bVar4 = false;
  for (; i < (int)in_RCX; i = i + 1) {
    bVar1 = *(byte *)(CONCAT71(in_register_00000019,ok) + i);
    if (bVar1 != 0x5f) {
      if (bVar1 == 0x2e) {
        if (bVar4) {
          return;
        }
        b->dp = b->nd;
        bVar4 = true;
      }
      else {
        if ((bVar1 < 0x30) || (0x39 < bVar1)) break;
        if ((bVar1 == 0x30) && (b->nd == 0)) {
          b->dp = b->dp + -1;
          bVar5 = true;
        }
        else {
          uVar3 = b->nd;
          if ((int)uVar3 < 800) {
            if (799 < uVar3) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            b->d[uVar3] = bVar1;
            b->nd = b->nd + 1;
          }
          else if (bVar1 != 0x30) {
            b->trunc = true;
          }
          bVar5 = true;
        }
      }
    }
  }
  if (!bVar5) {
    return;
  }
  if (!bVar4) {
    b->dp = b->nd;
  }
  if (i < (int)in_RCX) {
    if (in_RCX <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((*(byte *)(CONCAT71(in_register_00000019,ok) + i) | 0x20) == 0x65) {
      uVar3 = i + 1;
      if ((int)in_RCX <= (int)uVar3) {
        return;
      }
      if (in_RCX <= uVar3) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      cVar2 = *(char *)(i + 1U + CONCAT71(in_register_00000019,ok));
      if (cVar2 == '+') {
        esign = 1;
        i = i + 2;
      }
      else if (cVar2 == '-') {
        esign = -1;
        i = i + 2;
      }
      else {
        esign = 1;
        i = uVar3;
      }
      if (i < (int)in_RCX) {
        if (in_RCX <= (uint)i) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        bVar1 = *(byte *)(CONCAT71(in_register_00000019,ok) + i);
        if ((0x2f < bVar1) && (bVar1 < 0x3a)) {
          e = 0;
          for (; i < (int)in_RCX; i = i + 1) {
            bVar1 = *(byte *)(CONCAT71(in_register_00000019,ok) + i);
            if (bVar1 < 0x30) break;
            if (bVar1 < 0x3a) {
              if (e < 10000) {
                e = (uint)bVar1 + e * 10 + -0x30;
              }
            }
            else if (bVar1 != 0x5f) break;
          }
          b->dp = b->dp + esign * e;
          goto LAB_004b7a69;
        }
      }
      return;
    }
  }
LAB_004b7a69:
  if (in_RCX == i) {
    return;
  }
  return;
}



void strconv_readFloat(string s,uint64 mantissa,int exp,bool neg,bool trunc,bool hex,int i,bool ok)

{
  uint uVar1;
  byte bVar2;
  char cVar3;
  bool bVar4;
  bool bVar5;
  bool bVar6;
  char extraout_AL;
  uint uVar7;
  int maxMantDigits;
  uint8 c;
  int dp;
  uint64 base;
  int esign;
  uint8 expChar;
  int e;
  bool sawdigits;
  bool underscores;
  bool sawdot;
  int nd;
  int unaff_R14;
  int ndMant;
  string in_stack_ffffffffffffffc0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (exp < 1) {
    return;
  }
  if (*(char *)mantissa == '+') {
    uVar7 = 1;
  }
  else if (*(char *)mantissa == '-') {
    uVar7 = 1;
  }
  else {
    uVar7 = 0;
  }
  if ((int)(uVar7 + 2) < exp) {
    if ((uint)exp <= uVar7) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (*(char *)(uVar7 + mantissa) == '0') {
      if ((uint)exp <= uVar7 + 1) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if ((*(byte *)(uVar7 + 1 + mantissa) | 0x20) == 0x78) {
        maxMantDigits = 0x10;
        base = 0x10;
        expChar = 0x70;
        uVar7 = uVar7 + 2;
      }
      else {
        maxMantDigits = 0x13;
        base = 10;
        expChar = 0x65;
      }
    }
    else {
      maxMantDigits = 0x13;
      base = 10;
      expChar = 0x65;
    }
  }
  else {
    maxMantDigits = 0x13;
    base = 10;
    expChar = 0x65;
  }
  bVar4 = false;
  nd = 0;
  ndMant = 0;
  bVar6 = false;
  bVar5 = false;
  for (; (int)uVar7 < exp; uVar7 = uVar7 + 1) {
    if ((uint)exp <= uVar7) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    bVar2 = *(byte *)(uVar7 + mantissa);
    if (bVar2 == 0x5f) {
      bVar6 = true;
    }
    else if (bVar2 == 0x2e) {
      if (bVar4) break;
      bVar4 = true;
    }
    else if ((byte)(bVar2 - 0x30) < 10) {
      if ((bVar2 == 0x30) && (nd == 0)) {
        bVar5 = true;
      }
      else {
        if (ndMant < maxMantDigits) {
          ndMant = ndMant + 1;
        }
        nd = nd + 1;
        bVar5 = true;
      }
    }
    else {
      if (((base != 0x10) || ((bVar2 | 0x20) < 0x61)) || (0x66 < (bVar2 | 0x20))) break;
      if (ndMant < maxMantDigits) {
        ndMant = ndMant + 1;
      }
      nd = nd + 1;
      bVar5 = true;
    }
  }
  if (!bVar5) {
    return;
  }
  if ((int)uVar7 < exp) {
    if ((uint)exp <= uVar7) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (expChar == (*(byte *)(uVar7 + mantissa) | 0x20)) {
      uVar1 = uVar7 + 1;
      if (exp <= (int)uVar1) {
        return;
      }
      if ((uint)exp <= uVar1) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      cVar3 = *(char *)(uVar7 + 1 + mantissa);
      if (cVar3 == '+') {
        uVar1 = uVar7 + 2;
      }
      else if (cVar3 == '-') {
        uVar1 = uVar7 + 2;
      }
      uVar7 = uVar1;
      if (exp <= (int)uVar7) {
        return;
      }
      if ((uint)exp <= uVar7) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if (*(byte *)(uVar7 + mantissa) < 0x30) {
        return;
      }
