      runtime_panicSliceB();
    }
    iVar5 = (uVar4 & (int)-(i - uVar4) >> 0x3f) + (int)in_RAX;
    if (~r0_01 <= uVar7) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    iVar8 = uVar7 * 0x10;
    *(uint *)(iVar2 + 8 + iVar8) = i - uVar4;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RDI;
      extraout_R11[1] = *(int *)(extraout_RAX_00 + extraout_R9);
      iVar2 = extraout_RAX_00;
      ~r0_01 = extraout_RBX;
      in_RBX = extraout_RSI;
      iVar5 = extraout_RDI;
      puVar6 = extraout_R8;
      iVar8 = extraout_R9;
      i = extraout_R10;
    }
    *(int *)(iVar2 + iVar8) = iVar5;
    do {
      i = i + 1;
      if ((int)in_RBX <= i) break;
      if (in_RBX <= (uint)i) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
    } while (puVar6[*(byte *)((int)in_RAX + i)] != 0);
    uVar7 = uVar7 + 1;
    uVar4 = i;
  } while( true );
}



void strings_FieldsFunc(string s,func_int32__bool **f,__string ~r0)

{
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  char cVar1;
  int32 extraout_EAX;
  func_int32__bool **extraout_RAX;
  func_int32__bool **ppfVar2;
  uint *extraout_RAX_00;
  uint *puVar3;
  uint *extraout_RAX_01;
  int extraout_RAX_02;
  int iVar4;
  int extraout_RAX_03;
  code **in_RCX;
  code **extraout_RCX;
  code **ppcVar5;
  void *extraout_RCX_00;
  void *extraout_RCX_01;
  int end;
  uint in_RBX;
  uint extraout_RBX;
  int extraout_RBX_00;
  void *newLen;
  void *extraout_RBX_01;
  void *extraout_RBX_02;
  uint uVar6;
  int i;
  int iVar7;
  int extraout_RBX_03;
  uint uVar8;
  func_int32__bool **extraout_RSI;
  void *~r0_02;
  uint extraout_RDI;
  int iVar9;
  int extraout_R8;
  int32 rune;
  int extraout_R10;
  int *extraout_R11;
  int unaff_R14;
  string in_stack_fffffffffffffd88;
  int in_stack_fffffffffffffd98;
  int start;
  uint local_210 [3];
  undefined local_1f8 [488];
  uint *local_10;
  
  while (local_1f8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  FUN_0046cd18();
  ~r0_02 = (void *)0x20;
  newLen = (void *)0x0;
  ppfVar2 = extraout_RAX;
  ppcVar5 = extraout_RCX;
  iVar4 = 0;
  uVar6 = extraout_RBX;
  uVar8 = 0xffffffffffffffff;
  puVar3 = local_210;
  while (end = iVar4, end < (int)uVar6) {
    rune = (int32)*(byte *)((int)ppfVar2 + end);
    local_10 = puVar3;
    if (*(byte *)((int)ppfVar2 + end) < 0x80) {
      iVar4 = end + 1;
    }
    else {
      runtime_decoderune(in_stack_fffffffffffffd88,(int)ppfVar2,(int32)uVar6,end);
      ppcVar5 = in_RCX;
      iVar4 = extraout_RBX_00;
      rune = extraout_EAX;
    }
    cVar1 = (**ppcVar5)(rune);
    puVar3 = local_10;
    ppfVar2 = f;
    if (cVar1 == '\0') {
      ppcVar5 = in_RCX;
      uVar6 = in_RBX;
      if ((int)uVar8 < 0) {
        uVar8 = end;
      }
    }
    else {
      ppcVar5 = in_RCX;
      uVar6 = in_RBX;
      if (-1 < (int)uVar8) {
        newLen = (void *)((int)newLen + 1);
        if (~r0_02 < newLen) {
          ~r0_00.cap = in_stack_fffffffffffffd98;
          ~r0_00.array = in_stack_fffffffffffffd88.str;
          ~r0_00.len = in_stack_fffffffffffffd88.len;
          runtime_growslice(local_10,(int)newLen,(int)~r0_02,1,(internal_abi_Type *)&DAT_00851820,
                            ~r0_00);
          puVar3 = extraout_RAX_00;
          ~r0_02 = extraout_RCX_00;
          newLen = extraout_RBX_01;
        }
        puVar3[((int)newLen - 1U) * 2] = uVar8;
        puVar3[((int)newLen - 1U) * 2 + 1] = end;
        uVar8 = ~uVar8;
      }
    }
  }
  if (-1 < (int)uVar8) {
    newLen = (void *)((int)newLen + 1);
    if (~r0_02 < newLen) {
      ~r0_01.cap = in_stack_fffffffffffffd98;
      ~r0_01.array = in_stack_fffffffffffffd88.str;
      ~r0_01.len = in_stack_fffffffffffffd88.len;
      runtime_growslice(puVar3,(int)newLen,(int)~r0_02,1,(internal_abi_Type *)&DAT_00851820,~r0_01);
      newLen = extraout_RBX_02;
      uVar6 = in_RBX;
      puVar3 = extraout_RAX_01;
    }
    iVar4 = (int)newLen - 1;
    ~r0_02 = (void *)(iVar4 * 0x10);
    puVar3[iVar4 * 2] = uVar8;
    (puVar3 + 1)[iVar4 * 2] = uVar6;
  }
  local_10 = puVar3;
  runtime_makeslice((internal_abi_Type *)&DAT_008075e0,(int)newLen,(int)newLen,~r0_02);
  i = 0;
  iVar4 = extraout_RAX_02;
  puVar3 = local_10;
  while( true ) {
    if ((int)newLen <= i) {
      return;
    }
    uVar6 = puVar3[1];
    if (in_RBX < uVar6) break;
    uVar8 = *puVar3;
    if (uVar6 < uVar8) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    iVar7 = i * 0x10;
    *(uint *)(iVar4 + 8 + iVar7) = uVar6 - uVar8;
    iVar9 = (int)f + (uVar8 & (int)-(uVar6 - uVar8) >> 0x3f);
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_R8;
      extraout_R11[1] = *(int *)(extraout_RAX_03 + extraout_RBX_03);
      iVar4 = extraout_RAX_03;
      newLen = extraout_RCX_01;
      iVar7 = extraout_RBX_03;
      f = extraout_RSI;
      in_RBX = extraout_RDI;
      iVar9 = extraout_R8;
      i = extraout_R10;
    }
    *(int *)(iVar4 + iVar7) = iVar9;
    puVar3 = puVar3 + 2;
    i = i + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceAlen();
}



void strings_Join(__string elems,string sep,string ~r0)

{
  void **ppvVar1;
  void *pvVar2;
  void *pvVar3;
  undefined auVar4 [16];
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  void **in_RAX;
  int iVar5;
  int iVar6;
  uint8 *extraout_RAX;
  uint8 *puVar7;
  uint8 *extraout_RAX_00;
  uint8 *extraout_RAX_01;
  int in_RCX;
  int extraout_RCX;
  uint oldCap;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  void **ppvVar8;
  int in_RBX;
  uint extraout_RBX;
  uint newLen;
  uint extraout_RBX_00;
  uint uVar9;
  uint extraout_RBX_01;
  size_t in_RSI;
  void *in_RDI;
  int n;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_ffffffffffffff58;
  int in_stack_ffffffffffffff68;
  strings_Builder b;
  
  while (&b <= *(strings_Builder **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RBX == 0) {
    return;
  }
  if (in_RBX == 1) {
    return;
  }
  if (in_RSI == 0) {
    n = 0;
  }
  else {
    iVar6 = in_RBX + -1;
    if (iVar6 == -1) {
      iVar5 = -0x7fffffffffffffff;
    }
    else {
      auVar4._8_8_ = 0;
      auVar4._0_8_ = SUB168(SEXT816(0x7fffffffffffffff),8);
      iVar5 = SUB168((auVar4 << 0x40 | ZEXT816(0x7fffffffffffffff)) / SEXT816(iVar6),0);
    }
    if (iVar5 <= (int)in_RSI) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff58);
    }
    n = iVar6 * in_RSI;
  }
  ppvVar8 = in_RAX;
  for (iVar6 = 0; iVar6 < in_RBX; iVar6 = iVar6 + 1) {
    ppvVar1 = ppvVar8 + 1;
    if (0x7fffffffffffffff - n < (int)*ppvVar1) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff58);
    }
    ppvVar8 = ppvVar8 + 2;
    n = n + (int)*ppvVar1;
  }
  b._0_16_ = in_XMM15;
  b.buf._8_16_ = in_XMM15;
  strings___Builder__Grow(&b,n);
  pvVar2 = in_RAX[1];
  pvVar3 = *in_RAX;
  if (b.addr == (strings_Builder *)0x0) {
    b.addr = &b;
  }
  else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff58);
  }
  uVar9 = b.buf.len + (int)pvVar2;
  puVar7 = b.buf.array;
  if ((uint)b.buf.cap < uVar9) {
    ~r0_00.cap = in_stack_ffffffffffffff68;
    ~r0_00.array = in_stack_ffffffffffffff58._type;
    ~r0_00.len = (int)in_stack_ffffffffffffff58.data;
    runtime_growslice(b.buf.array,uVar9,b.buf.cap,(int)pvVar2,(internal_abi_Type *)&DAT_00807920,
                      ~r0_00);
    puVar7 = extraout_RAX;
    b.buf.cap = extraout_RCX;
    uVar9 = extraout_RBX;
  }
  ppvVar8 = (void **)((int)in_RAX + (uint)((dword)(-(in_RCX + -1) >> 0x3f) & 0x10));
  runtime_memmove(puVar7 + b.buf.len,pvVar3,(size_t)pvVar2);
  b.buf.len = uVar9;
  b.buf.array = puVar7;
  for (iVar6 = 0; iVar5 = b.buf.len, iVar6 < in_RBX + -1; iVar6 = iVar6 + 1) {
    pvVar2 = ppvVar8[1];
    pvVar3 = *ppvVar8;
    if (b.addr == (strings_Builder *)0x0) {
      b.addr = &b;
    }
    else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff58);
    }
    uVar9 = in_RSI + b.buf.len;
    oldCap = b.buf.cap;
    puVar7 = b.buf.array;
    if ((uint)b.buf.cap < uVar9) {
      ~r0_01.cap = in_stack_ffffffffffffff68;
      ~r0_01.array = in_stack_ffffffffffffff58._type;
      ~r0_01.len = (int)in_stack_ffffffffffffff58.data;
      runtime_growslice(b.buf.array,uVar9,b.buf.cap,in_RSI,(internal_abi_Type *)&DAT_00807920,~r0_01
                       );
      oldCap = extraout_RCX_00;
      uVar9 = extraout_RBX_00;
      puVar7 = extraout_RAX_00;
    }
    runtime_memmove(puVar7 + iVar5,in_RDI,in_RSI);
    b.buf.cap = oldCap;
    b.buf.len = uVar9;
    b.buf.array = puVar7;
    if (b.addr == (strings_Builder *)0x0) {
      b.addr = &b;
    }
    else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff58);
    }
    newLen = uVar9 + (int)pvVar2;
    if (oldCap < newLen) {
      ~r0_02.cap = in_stack_ffffffffffffff68;
      ~r0_02.array = in_stack_ffffffffffffff58._type;
      ~r0_02.len = (int)in_stack_ffffffffffffff58.data;
      runtime_growslice(puVar7,newLen,oldCap,(int)pvVar2,(internal_abi_Type *)&DAT_00807920,~r0_02);
      puVar7 = extraout_RAX_01;
      oldCap = extraout_RCX_01;
      newLen = extraout_RBX_01;
    }
    runtime_memmove(puVar7 + uVar9,pvVar3,(size_t)pvVar2);
    ppvVar8 = ppvVar8 + 2;
    b.buf.len = newLen;
    b.buf.cap = oldCap;
    b.buf.array = puVar7;
  }
  if ((uint)b.buf.len <= (uint)-(int)b.buf.array) {
    return;
  }
  if (b.buf.array != (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringlen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafestringnilptr();
}



void strings_Map(func_int32__int32 **mapping,string s,string ~r0)

{
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  int32 extraout_EAX;
  sdword sVar1;
  int32 r;
  sdword extraout_EAX_00;
  int32 extraout_EAX_01;
  int32 r_1;
  uint8 *extraout_RAX;
  uint8 *puVar2;
  uint8 *extraout_RAX_00;
  uint in_RCX;
  int iVar3;
  int extraout_RCX;
  int ~r0_02;
  int ~r0_03;
  int extraout_RCX_00;
  int i;
  int32 *piVar4;
  int32 *in_RBX;
  int32 *extraout_RBX;
  int extraout_RBX_00;
  int width;
  uint extraout_RBX_01;
  int32 *extraout_RBX_02;
  int32 *piVar5;
  uint uVar6;
  uint extraout_RBX_03;
  int32 c;
  int32 c_1;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_ffffffffffffff58;
  int in_stack_ffffffffffffff68;
  strings_Builder b;
  
  while (&b <= *(strings_Builder **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar4 = (int32 *)0;
  b._0_16_ = in_XMM15;
  b.buf._8_16_ = in_XMM15;
LAB_004fd7e5:
  do {
    i = (int)piVar4;
    if ((int)in_RCX <= i) goto LAB_004fda8d;
    c = (int32)*(byte *)((int)in_RBX + i);
    if (*(byte *)((int)in_RBX + i) < 0x80) {
      piVar4 = (int32 *)(i + 1);
      piVar5 = in_RBX;
    }
    else {
      runtime_decoderune((string)in_stack_ffffffffffffff58,(int)in_RBX,(int32)in_RCX,i);
      piVar5 = extraout_RBX;
      piVar4 = extraout_RBX;
      c = extraout_EAX;
    }
    sVar1 = (**mapping)(c,piVar5);
    if (sVar1 == c) {
      if (c != 0xfffd) goto LAB_004fd7e5;
    }
    else if (c != 0xfffd) {
      if (c < 0) {
        iVar3 = -1;
      }
      else if (c < 0x80) {
        iVar3 = 1;
      }
      else if (c < 0x800) {
        iVar3 = 2;
      }
      else if ((dword)(c - 0xd800U) < 0x800) {
        iVar3 = -1;
      }
      else if (c < 0x10000) {
        iVar3 = 3;
      }
      else if (c < 0x110000) {
        iVar3 = 4;
      }
      else {
        iVar3 = -1;
      }
LAB_004fd92e:
      strings___Builder__Grow(&b,in_RCX + 4);
      if (in_RCX < (uint)i) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAlen();
      }
      if (b.addr == (strings_Builder *)0x0) {
        b.addr = &b;
      }
      else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffff58);
      }
      uVar6 = i + b.buf.len;
      puVar2 = b.buf.array;
      if ((uint)b.buf.cap < uVar6) {
        ~r0_00.cap = in_stack_ffffffffffffff68;
        ~r0_00.array = in_stack_ffffffffffffff58._type;
        ~r0_00.len = (int)in_stack_ffffffffffffff58.data;
        runtime_growslice(b.buf.array,uVar6,b.buf.cap,i,(internal_abi_Type *)&DAT_00807920,~r0_00);
        puVar2 = extraout_RAX;
        uVar6 = extraout_RBX_01;
        b.buf.cap = extraout_RCX;
      }
      runtime_memmove(puVar2 + b.buf.len,in_RBX,i);
      b.buf.len = uVar6;
      b.buf.array = puVar2;
      if (-1 < sVar1) {
        strings___Builder__WriteRune(&b,sVar1,~r0_02,(error)in_stack_ffffffffffffff58);
      }
      uVar6 = iVar3 + i;
      if (in_RCX < uVar6) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      in_RCX = in_RCX - uVar6;
      in_RBX = (int32 *)((int)in_RBX + (uVar6 & (int)-in_RCX >> 0x3f));
LAB_004fda8d:
      if (b.buf.cap == 0) {
        return;
      }
      piVar4 = (int32 *)0x0;
      while ((int)piVar4 < (int)in_RCX) {
        c_1 = (int32)*(byte *)((int)piVar4 + (int)in_RBX);
        if (*(byte *)((int)piVar4 + (int)in_RBX) < 0x80) {
          piVar4 = (int32 *)((int)piVar4 + 1);
          piVar5 = in_RBX;
        }
        else {
          runtime_decoderune((string)in_stack_ffffffffffffff58,(int)in_RBX,(int32)in_RCX,(int)piVar4
                            );
          piVar5 = extraout_RBX_02;
          piVar4 = extraout_RBX_02;
          c_1 = extraout_EAX_01;
        }
        sVar1 = (**mapping)(c_1,piVar5);
        if (-1 < sVar1) {
          if (sVar1 < 0x80) {
            if (b.addr == (strings_Builder *)0x0) {
              b.addr = &b;
            }
            else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
              runtime_gopanic(in_stack_ffffffffffffff58);
            }
            uVar6 = b.buf.len + 1;
            puVar2 = b.buf.array;
            if ((uint)b.buf.cap < uVar6) {
              ~r0_01.cap = in_stack_ffffffffffffff68;
              ~r0_01.array = in_stack_ffffffffffffff58._type;
              ~r0_01.len = (int)in_stack_ffffffffffffff58.data;
              runtime_growslice(b.buf.array,uVar6,b.buf.cap,1,(internal_abi_Type *)&DAT_00807920,
                                ~r0_01);
              b.buf.array = extraout_RAX_00;
              uVar6 = extraout_RBX_03;
              puVar2 = extraout_RAX_00;
              b.buf.cap = extraout_RCX_00;
            }
            b.buf.len = uVar6;
            puVar2[uVar6 - 1] = (uint8)sVar1;
          }
          else {
            strings___Builder__WriteRune(&b,sVar1,~r0_03,(error)in_stack_ffffffffffffff58);
          }
        }
      }
      if ((uint)-(int)b.buf.array < (uint)b.buf.len) {
        if (b.buf.array == (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
          runtime_panicunsafestringnilptr();
        }
                    // WARNING: Subroutine does not return
        runtime_panicunsafestringlen();
      }
      return;
    }
    if (in_RCX < (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    unicode_utf8_DecodeRuneInString
              ((string)in_stack_ffffffffffffff58,
               (sdword)in_RBX + ((dword)((int)-(in_RCX - i) >> 0x3f) & (dword)i),in_RCX - i);
    iVar3 = extraout_RBX_00;
    if ((extraout_RBX_00 == 1) || (extraout_EAX_00 != sVar1)) goto LAB_004fd92e;
  } while( true );
}



void strings_Repeat(string s,int count,string ~r0)

{
  undefined auVar1 [16];
  undefined auVar2 [16];
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  int iVar3;
  int chunk;
  uint8 *extraout_RAX;
  uint8 *puVar4;
  uint8 *puVar5;
  uint8 *extraout_RAX_00;
  int in_RCX;
  int n_00;
  int n;
  int extraout_RCX;
  uint uVar6;
  int extraout_RCX_00;
  size_t in_RBX;
  uint extraout_RBX;
  uint newLen;
  uint extraout_RBX_00;
  int iVar7;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_ffffffffffffff78;
  int in_stack_ffffffffffffff88;
  strings_Builder b;
  
  while (&stack0xfffffffffffffff8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RCX == 0) {
    return;
  }
  if (in_RCX == 1) {
    return;
  }
  if (in_RCX < 0) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff78);
  }
  auVar1._8_8_ = 0;
  auVar1._0_8_ = SUB168(SEXT816(0x7fffffffffffffff),8);
  if (SUB168((auVar1 << 0x40 | ZEXT816(0x7fffffffffffffff)) / SEXT816(in_RCX),0) <= (int)in_RBX) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff78);
  }
  n_00 = in_RCX * in_RBX;
  if (in_RBX == 0) {
    return;
  }
  chunk = n_00;
  if ((0x2000 < n_00) &&
     (auVar2._8_8_ = 0, auVar2._0_8_ = SUB168(SEXT816(0x2000),8),
     chunk = SUB168((auVar2 << 0x40 | ZEXT816(0x2000)) / SEXT816((int)in_RBX),0) * in_RBX,
     chunk == 0)) {
    chunk = in_RBX;
  }
  b._0_16_ = in_XMM15;
  b.buf._8_16_ = in_XMM15;
  strings___Builder__Grow(&b,n_00);
  if (b.addr == (strings_Builder *)0x0) {
    b.addr = &b;
  }
  else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff78);
  }
  uVar6 = in_RBX + b.buf.len;
  puVar4 = b.buf.array;
  if ((uint)b.buf.cap < uVar6) {
    ~r0_00.cap = in_stack_ffffffffffffff88;
    ~r0_00.array = in_stack_ffffffffffffff78._type;
    ~r0_00.len = (int)in_stack_ffffffffffffff78.data;
    runtime_growslice(b.buf.array,uVar6,b.buf.cap,in_RBX,(internal_abi_Type *)&DAT_00807920,~r0_00);
    puVar4 = extraout_RAX;
    b.buf.cap = extraout_RCX;
    uVar6 = extraout_RBX;
  }
  runtime_memmove(puVar4 + b.buf.len,(void *)count,in_RBX);
  b.buf.array = puVar4;
  b.buf.len = uVar6;
  while (iVar3 = b.buf.len, puVar4 = b.buf.array, b.buf.len < n_00) {
    uVar6 = n_00 - b.buf.len;
    if (b.buf.len < n_00 - b.buf.len) {
      uVar6 = b.buf.len;
    }
    if (chunk < (int)uVar6) {
      uVar6 = chunk;
    }
    if ((uint)-(int)b.buf.array < (uint)b.buf.len) {
      if (b.buf.array == (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
        runtime_panicunsafestringnilptr();
      }
                    // WARNING: Subroutine does not return
      runtime_panicunsafestringlen();
    }
    if ((uint)b.buf.len < uVar6) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    if (b.addr == (strings_Builder *)0x0) {
      b.addr = &b;
    }
    else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff78);
    }
    newLen = uVar6 + b.buf.len;
    puVar5 = b.buf.array;
    iVar7 = b.buf.cap;
    if ((uint)b.buf.cap < newLen) {
      ~r0_01.cap = in_stack_ffffffffffffff88;
      ~r0_01.array = in_stack_ffffffffffffff78._type;
      ~r0_01.len = (int)in_stack_ffffffffffffff78.data;
      runtime_growslice(b.buf.array,newLen,b.buf.cap,uVar6,(internal_abi_Type *)&DAT_00807920,~r0_01
                       );
      puVar5 = extraout_RAX_00;
      newLen = extraout_RBX_00;
      iVar7 = extraout_RCX_00;
    }
    runtime_memmove(puVar5 + iVar3,puVar4,uVar6);
    b.buf.array = puVar5;
    b.buf.len = newLen;
    b.buf.cap = iVar7;
  }
  if ((uint)b.buf.len <= (uint)-(int)b.buf.array) {
    return;
  }
  if (b.buf.array == (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringnilptr();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafestringlen();
}



void strings_ToUpper(string s,string ~r0)

{
  byte bVar1;
  char cVar2;
  bool bVar3;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  string ~r0_03;
  int iVar4;
  int in_RAX;
  int i_1;
  uint8 *extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *extraout_RAX_01;
  uint8 *puVar5;
  int i;
  int extraout_RCX;
  int extraout_RCX_00;
  int extraout_RCX_01;
  int iVar6;
  bool hasLower;
  int pos;
  uint in_RBX;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint8 c;
  size_t sVar7;
  uint8 c_1;
  uint uVar8;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_ffffffffffffff58;
  uint8 *in_stack_ffffffffffffff68;
  int in_stack_ffffffffffffff70;
  strings_Builder b;
  
  while (&b <= *(strings_Builder **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  bVar3 = false;
  for (i = 0; i < (int)in_RBX; i = i + 1) {
    bVar1 = *(byte *)(in_RAX + i);
    if (0x7f < bVar1) {
      ~r0_03.len = in_stack_ffffffffffffff70;
      ~r0_03.str = in_stack_ffffffffffffff68;
      strings_Map((func_int32__int32 **)&PTR_unicode_ToUpper_008eb840,
                  (string)in_stack_ffffffffffffff58,~r0_03);
      return;
    }
    if (bVar3) {
      bVar3 = true;
    }
    else if (bVar1 < 0x61) {
      bVar3 = false;
    }
    else {
      bVar3 = bVar1 < 0x7b;
    }
  }
  if (!bVar3) {
    return;
  }
  b._0_16_ = in_XMM15;
  b.buf._8_16_ = in_XMM15;
  strings___Builder__Grow(&b,in_RBX);
  pos = 0;
  for (i_1 = 0; iVar4 = b.buf.len, i_1 < (int)in_RBX; i_1 = i_1 + 1) {
    cVar2 = *(char *)(in_RAX + i_1);
    if ((byte)(cVar2 + 0x9fU) < 0x1a) {
      if (pos < i_1) {
        if ((uint)i_1 < (uint)pos) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        sVar7 = i_1 - pos;
        if (b.addr == (strings_Builder *)0x0) {
          b.addr = &b;
        }
        else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
          runtime_gopanic(in_stack_ffffffffffffff58);
        }
        uVar8 = sVar7 + b.buf.len;
        iVar6 = b.buf.cap;
        puVar5 = b.buf.array;
        if ((uint)b.buf.cap < uVar8) {
          ~r0_00.cap = (int)in_stack_ffffffffffffff68;
          ~r0_00.array = in_stack_ffffffffffffff58._type;
          ~r0_00.len = (int)in_stack_ffffffffffffff58.data;
          runtime_growslice(b.buf.array,uVar8,b.buf.cap,sVar7,(internal_abi_Type *)&DAT_00807920,
                            ~r0_00);
          iVar6 = extraout_RCX;
          uVar8 = extraout_RBX;
          puVar5 = extraout_RAX;
        }
        runtime_memmove(puVar5 + iVar4,(void *)((pos & (int)-sVar7 >> 0x3f) + in_RAX),sVar7);
        b.buf.cap = iVar6;
        b.buf.len = uVar8;
        b.buf.array = puVar5;
      }
      if (b.addr == (strings_Builder *)0x0) {
        b.addr = &b;
      }
      else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffff58);
      }
      uVar8 = b.buf.len + 1;
      puVar5 = b.buf.array;
      if ((uint)b.buf.cap < uVar8) {
        ~r0_01.cap = (int)in_stack_ffffffffffffff68;
        ~r0_01.array = in_stack_ffffffffffffff58._type;
        ~r0_01.len = (int)in_stack_ffffffffffffff58.data;
        runtime_growslice(b.buf.array,uVar8,b.buf.cap,1,(internal_abi_Type *)&DAT_00807920,~r0_01);
        b.buf.array = extraout_RAX_00;
        uVar8 = extraout_RBX_00;
        puVar5 = extraout_RAX_00;
        b.buf.cap = extraout_RCX_00;
      }
      b.buf.len = uVar8;
      puVar5[uVar8 - 1] = cVar2 - 0x20;
      pos = i_1 + 1;
    }
  }
  if (pos < (int)in_RBX) {
    if (in_RBX < (uint)pos) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    sVar7 = in_RBX - pos;
    if (b.addr == (strings_Builder *)0x0) {
      b.addr = &b;
    }
    else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff58);
    }
    uVar8 = b.buf.len + sVar7;
    puVar5 = b.buf.array;
    iVar6 = b.buf.cap;
    if ((uint)b.buf.cap < uVar8) {
      ~r0_02.cap = (int)in_stack_ffffffffffffff68;
      ~r0_02.array = in_stack_ffffffffffffff58._type;
      ~r0_02.len = (int)in_stack_ffffffffffffff58.data;
      runtime_growslice(b.buf.array,uVar8,b.buf.cap,sVar7,(internal_abi_Type *)&DAT_00807920,~r0_02)
      ;
      puVar5 = extraout_RAX_01;
      iVar6 = extraout_RCX_01;
      uVar8 = extraout_RBX_01;
    }
    runtime_memmove(puVar5 + iVar4,(void *)(in_RAX + (pos & (int)-sVar7 >> 0x3f)),sVar7);
    b.buf.cap = iVar6;
    b.buf.len = uVar8;
    b.buf.array = puVar5;
  }
  if ((uint)b.buf.len <= (uint)-(int)b.buf.array) {
    return;
  }
  if (b.buf.array != (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringlen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafestringnilptr();
}



void strings_ToLower(string s,string ~r0)

{
  byte bVar1;
  char cVar2;
  bool bVar3;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  string ~r0_03;
  int iVar4;
  int in_RAX;
  int i_1;
  uint8 *extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *extraout_RAX_01;
  uint8 *puVar5;
  int i;
  int extraout_RCX;
  int extraout_RCX_00;
  int extraout_RCX_01;
  int iVar6;
  bool hasUpper;
  int pos;
  uint in_RBX;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint8 c;
  size_t sVar7;
  uint8 c_1;
  uint uVar8;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_ffffffffffffff58;
  uint8 *in_stack_ffffffffffffff68;
  int in_stack_ffffffffffffff70;
  strings_Builder b;
  
  while (&b <= *(strings_Builder **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  bVar3 = false;
  for (i = 0; i < (int)in_RBX; i = i + 1) {
    bVar1 = *(byte *)(in_RAX + i);
    if (0x7f < bVar1) {
      ~r0_03.len = in_stack_ffffffffffffff70;
      ~r0_03.str = in_stack_ffffffffffffff68;
      strings_Map((func_int32__int32 **)&PTR_unicode_ToLower_008eb838,
                  (string)in_stack_ffffffffffffff58,~r0_03);
      return;
    }
    if (bVar3) {
      bVar3 = true;
    }
    else if (bVar1 < 0x41) {
      bVar3 = false;
    }
    else {
      bVar3 = bVar1 < 0x5b;
    }
  }
  if (!bVar3) {
    return;
  }
  b._0_16_ = in_XMM15;
  b.buf._8_16_ = in_XMM15;
  strings___Builder__Grow(&b,in_RBX);
  pos = 0;
  for (i_1 = 0; iVar4 = b.buf.len, i_1 < (int)in_RBX; i_1 = i_1 + 1) {
    cVar2 = *(char *)(in_RAX + i_1);
    if ((byte)(cVar2 + 0xbfU) < 0x1a) {
      if (pos < i_1) {
        if ((uint)i_1 < (uint)pos) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        sVar7 = i_1 - pos;
        if (b.addr == (strings_Builder *)0x0) {
          b.addr = &b;
        }
        else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
          runtime_gopanic(in_stack_ffffffffffffff58);
        }
        uVar8 = sVar7 + b.buf.len;
        iVar6 = b.buf.cap;
        puVar5 = b.buf.array;
        if ((uint)b.buf.cap < uVar8) {
          ~r0_00.cap = (int)in_stack_ffffffffffffff68;
          ~r0_00.array = in_stack_ffffffffffffff58._type;
          ~r0_00.len = (int)in_stack_ffffffffffffff58.data;
          runtime_growslice(b.buf.array,uVar8,b.buf.cap,sVar7,(internal_abi_Type *)&DAT_00807920,
                            ~r0_00);
          iVar6 = extraout_RCX;
          uVar8 = extraout_RBX;
          puVar5 = extraout_RAX;
        }
        runtime_memmove(puVar5 + iVar4,(void *)((pos & (int)-sVar7 >> 0x3f) + in_RAX),sVar7);
        b.buf.cap = iVar6;
        b.buf.len = uVar8;
        b.buf.array = puVar5;
      }
      if (b.addr == (strings_Builder *)0x0) {
        b.addr = &b;
      }
      else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffff58);
      }
      uVar8 = b.buf.len + 1;
      puVar5 = b.buf.array;
      if ((uint)b.buf.cap < uVar8) {
        ~r0_01.cap = (int)in_stack_ffffffffffffff68;
        ~r0_01.array = in_stack_ffffffffffffff58._type;
        ~r0_01.len = (int)in_stack_ffffffffffffff58.data;
        runtime_growslice(b.buf.array,uVar8,b.buf.cap,1,(internal_abi_Type *)&DAT_00807920,~r0_01);
        b.buf.array = extraout_RAX_00;
        uVar8 = extraout_RBX_00;
        puVar5 = extraout_RAX_00;
        b.buf.cap = extraout_RCX_00;
      }
      b.buf.len = uVar8;
      puVar5[uVar8 - 1] = cVar2 + 0x20;
      pos = i_1 + 1;
    }
  }
