  }
  (**(code **)**(undefined8 **)(in_RDX + 8))(in_RCX,in_RDI,in_RSI,in_R8,in_R9,in_R10);
  return;
}



void net__C2func_getaddrinfo
               (net__Ctype_char *p0,net__Ctype_char *p1,net__Ctype_struct_addrinfo *p2,
               net__Ctype_struct_addrinfo **p3,net__Ctype_int r1,error r2)

{
  sdword extraout_EAX;
  int32 errno;
  undefined8 extraout_RAX;
  void *x;
  int in_FS_OFFSET;
  undefined4 uStack0000000000000028;
  undefined8 uStack0000000000000030;
  undefined8 uStack0000000000000038;
  
  while (&stack0x00000000 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  uStack0000000000000028 = 0;
  _uStack0000000000000030 = ZEXT816(0);
  runtime_cgocall(net__cgo_9c8efe9babca_C2func_getaddrinfo,&r2,(int32)&r2);
  if (extraout_EAX != 0) {
    runtime_convT64((int)extraout_EAX,x);
    uStack0000000000000038 = extraout_RAX;
    uStack0000000000000030 = go_itab_syscall_Errno_error;
  }
  if (runtime_cgoAlwaysFalse != false) {
    runtime_cgoUse();
    runtime_cgoUse();
    runtime_cgoUse();
    runtime_cgoUse();
  }
  return;
}



void net__C2func_getnameinfo
               (net__Ctype_struct_sockaddr *p0,net__Ctype_uint p1,net__Ctype_char *p2,
               net__Ctype_uint p3,net__Ctype_char *p4,net__Ctype_uint p5,net__Ctype_int p6,
               net__Ctype_int r1,error r2)

{
  sdword extraout_EAX;
  int32 errno;
  undefined8 extraout_RAX;
  void *x;
  void *x_00;
  void *x_01;
  void *x_02;
  void *x_03;
  int in_FS_OFFSET;
  uint32 in_stack_00000020;
  uint32 in_stack_00000030;
  uint32 in_stack_00000034;
  undefined4 uStack0000000000000038;
  undefined8 uStack0000000000000040;
  undefined8 uStack0000000000000048;
  
  while (&stack0x00000000 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  uStack0000000000000038 = 0;
  _uStack0000000000000040 = ZEXT816(0);
  runtime_cgocall(net__cgo_9c8efe9babca_C2func_getnameinfo,&r2,(int32)&r2);
  if (extraout_EAX != 0) {
    runtime_convT64((int)extraout_EAX,x);
    uStack0000000000000048 = extraout_RAX;
    uStack0000000000000040 = go_itab_syscall_Errno_error;
  }
  if (runtime_cgoAlwaysFalse != false) {
    runtime_cgoUse();
    runtime_convT32((uint32)r2.data,x_00);
    runtime_cgoUse();
    runtime_cgoUse();
    runtime_convT32(in_stack_00000020,x_01);
    runtime_cgoUse();
    runtime_cgoUse();
    runtime_convT32(in_stack_00000030,x_02);
    runtime_cgoUse();
    runtime_convT32(in_stack_00000034,x_03);
    runtime_cgoUse();
  }
  return;
}



void net__C2func_res_search
               (net__Ctype_char *p0,net__Ctype_int p1,net__Ctype_int p2,net__Ctype_uchar *p3,
               net__Ctype_int p4,net__Ctype_int r1,error r2)

{
  sdword extraout_EAX;
  int32 errno;
  undefined8 extraout_RAX;
  void *x;
  void *x_00;
  void *x_01;
  void *x_02;
  int in_FS_OFFSET;
  uint32 in_stack_00000020;
  undefined4 uStack0000000000000028;
  undefined8 uStack0000000000000030;
  undefined8 uStack0000000000000038;
  
  while (&stack0x00000000 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  uStack0000000000000028 = 0;
  _uStack0000000000000030 = ZEXT816(0);
  runtime_cgocall(net__cgo_9c8efe9babca_C2func_res_search,&r2,(int32)&r2);
  if (extraout_EAX != 0) {
    runtime_convT64((int)extraout_EAX,x);
    uStack0000000000000038 = extraout_RAX;
    uStack0000000000000030 = go_itab_syscall_Errno_error;
  }
  if (runtime_cgoAlwaysFalse != false) {
    runtime_cgoUse();
    runtime_convT32((uint32)r2.data,x_00);
    runtime_cgoUse();
    runtime_convT32(r2.data._4_4_,x_01);
    runtime_cgoUse();
    runtime_cgoUse();
    runtime_convT32(in_stack_00000020,x_02);
    runtime_cgoUse();
  }
  return;
}



void net__Cfunc_free(void *p0,uint8 *r1)

{
  int in_FS_OFFSET;
  
  while (&stack0x00000000 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_cgocall(net__cgo_9c8efe9babca_Cfunc_free,&stack0x00000008,(int32)&stack0x00000008);
  if (runtime_cgoAlwaysFalse != false) {
    runtime_cgoUse();
  }
  return;
}



void net__Cfunc_freeaddrinfo(net__Ctype_struct_addrinfo *p0,uint8 *r1)

{
  int in_FS_OFFSET;
  
  while (&stack0x00000000 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_cgocall(net__cgo_9c8efe9babca_Cfunc_freeaddrinfo,&stack0x00000008,(int32)&stack0x00000008)
  ;
  if (runtime_cgoAlwaysFalse != false) {
    runtime_cgoUse();
  }
  return;
}



void net__Cfunc_gai_strerror(net__Ctype_int p0,net__Ctype_char *r1)

{
  void *x;
  int in_FS_OFFSET;
  uint32 in_stack_00000008;
  undefined8 uStack0000000000000010;
  
  while (&stack0x00000000 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  uStack0000000000000010 = 0;
  runtime_cgocall(net__cgo_9c8efe9babca_Cfunc_gai_strerror,&stack0x00000008,(int32)&stack0x00000008)
  ;
  if (runtime_cgoAlwaysFalse != false) {
    runtime_convT32(in_stack_00000008,x);
    runtime_cgoUse();
  }
  return;
}



void net__cgo_cmalloc(uint64 p0,void *r1)

{
  int in_FS_OFFSET;
  int iStack0000000000000010;
  string in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  iStack0000000000000010 = 0;
  runtime_cgocall(net__cgo_9c8efe9babca_Cfunc__Cmalloc,&stack0x00000008,(int32)&stack0x00000008);
  if (iStack0000000000000010 == 0) {
                    // WARNING: Subroutine does not return
    runtime_throw(in_stack_ffffffffffffffe0);
  }
  return;
}



void net_cgoNameinfoPTR(__uint8 b,net__Ctype_struct_sockaddr *sa,net__Ctype_uint salen,int ~r0,
                       error ~r1)

{
  error r2;
  undefined4 in_register_0000001c;
  net__Ctype_char *in_RSI;
  undefined8 in_RDI;
  net__Ctype_uint in_R8D;
  net__Ctype_uint extraout_R8D;
  net__Ctype_int in_R9D;
  net__Ctype_int extraout_R9D;
  net__Ctype_int in_R10D;
  net__Ctype_int extraout_R10D;
  int unaff_R14;
  undefined4 in_stack_ffffffffffffffbc;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = (net__Ctype_char *)((uint)in_RSI & 0xffffffff);
    in_R8D = extraout_R8D;
    in_R9D = extraout_R9D;
    in_R10D = extraout_R10D;
  }
  if (CONCAT44(in_register_0000001c,salen) != 0) {
    r2.data._0_4_ = (sdword)in_RSI;
    r2.tab = (runtime_itab *)in_RDI;
    r2.data._4_4_ = in_stack_ffffffffffffffbc;
    net__C2func_getnameinfo
              ((net__Ctype_struct_sockaddr *)0x800000000,salen,(net__Ctype_char *)~r0,
               (net__Ctype_uint)in_RDI,in_RSI,in_R8D,in_R9D,in_R10D,r2);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Unknown calling convention

void net__C_free(void *p)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  net__C_free_func1(p);
  return;
}



// WARNING: Unknown calling convention

void net__C_free_func1(void *p)

{
  interface___ ptr;
  void *p0;
  uint8 *r1;
  int unaff_R14;
  internal_abi_Type *in_stack_ffffffffffffffd0;
  void *in_stack_ffffffffffffffd8;
  interface___ in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ptr.data = in_stack_ffffffffffffffd8;
  ptr._type = in_stack_ffffffffffffffd0;
  runtime_cgoCheckPointer(ptr,in_stack_ffffffffffffffe0);
  net__Cfunc_free(p0,r1);
  return;
}



// WARNING: Unknown calling convention

void net__C_freeaddrinfo(net__Ctype_struct_addrinfo *ai)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  net__C_freeaddrinfo_func1(ai);
  return;
}



// WARNING: Unknown calling convention

void net__C_freeaddrinfo_func1(net__Ctype_struct_addrinfo *ai)

{
  interface___ ptr;
  net__Ctype_struct_addrinfo *p0;
  uint8 *r1;
  int unaff_R14;
  internal_abi_Type *in_stack_ffffffffffffffd0;
  void *in_stack_ffffffffffffffd8;
  interface___ in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ptr.data = in_stack_ffffffffffffffd8;
  ptr._type = in_stack_ffffffffffffffd0;
  runtime_cgoCheckPointer(ptr,in_stack_ffffffffffffffe0);
  net__Cfunc_freeaddrinfo(p0,r1);
  return;
}



void net__C_gai_strerror(net__Ctype_int eai,string ~r0)

{
  string ~r0_00;
  net__Ctype_char *in_RBX;
  net__Ctype_char *extraout_RBX;
  int unaff_R14;
  undefined4 in_stack_ffffffffffffffec;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  net__Cfunc_gai_strerror(eai,in_RBX);
  ~r0_00.str._4_4_ = in_stack_ffffffffffffffec;
  ~r0_00.str._0_4_ = eai;
  ~r0_00.len = (int)in_stack_fffffffffffffff0;
  runtime_gostring(in_stack_fffffffffffffff0,~r0_00);
  return;
}



void net__C_getaddrinfo(net__Ctype_char *hostname,net__Ctype_char *servname,
                       net__Ctype_struct_addrinfo *hints,net__Ctype_struct_addrinfo **res,int ~r0,
                       error ~r1)

{
  net__Ctype_int x;
  net__Ctype_int ~r0_00;
  net__Ctype_int extraout_ESI;
  int unaff_R14;
  error in_stack_ffffffffffffffd8;
  
  ~r0_00 = (net__Ctype_int)~r0;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0_00 = extraout_ESI;
  }
  net__C_getaddrinfo_func1(hostname,servname,hints,res,~r0_00,in_stack_ffffffffffffffd8);
  return;
}



void net__C_getaddrinfo_func1
               (net__Ctype_char *hostname,net__Ctype_char *servname,
               net__Ctype_struct_addrinfo *hints,net__Ctype_struct_addrinfo **res,net__Ctype_int ~r0
               ,error ~r1)

{
  interface___ ptr;
  interface___ ptr_00;
  error r2;
  interface___ arg;
  interface___ arg_00;
  net__Ctype_char *p0;
  net__Ctype_struct_addrinfo *p2;
  net__Ctype_char *p1;
  net__Ctype_int r1;
  net__Ctype_struct_addrinfo **p3;
  int unaff_R14;
  internal_abi_Type *in_stack_ffffffffffffffa0;
  void *in_stack_ffffffffffffffa8;
  internal_abi_Type *in_stack_ffffffffffffffb0;
  void *in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ptr.data = in_stack_ffffffffffffffa8;
  ptr._type = in_stack_ffffffffffffffa0;
  arg.data = in_stack_ffffffffffffffb8;
  arg._type = in_stack_ffffffffffffffb0;
  runtime_cgoCheckPointer(ptr,arg);
  ptr_00.data = in_stack_ffffffffffffffa8;
  ptr_00._type = in_stack_ffffffffffffffa0;
  arg_00.data = in_stack_ffffffffffffffb8;
  arg_00._type = in_stack_ffffffffffffffb0;
  runtime_cgoCheckPointer(ptr_00,arg_00);
  r2.data = servname;
  r2.tab = (runtime_itab *)hostname;
  net__C2func_getaddrinfo(p0,p1,p2,p3,r1,r2);
  return;
}



// WARNING: Unknown calling convention

void net__C_res_nclose(struct___ *state)

{
  return;
}



// WARNING: Unknown calling convention

void net_acquireThread_func1(void)

{
  int in_RAX;
  int size;
  chan_struct___ extraout_RAX;
  chan_struct___ extraout_RAX_00;
  chan_struct___ phVar1;
  int extraout_RAX_01;
  runtime_hchan *~r0;
  chan_struct___ *extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RAX = extraout_RAX_01;
  }
  net_concurrentThreadsLimit(in_RAX);
  runtime_makechan((internal_abi_ChanType *)&DAT_00808e20,size,~r0);
  phVar1 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_00;
    extraout_R11[1] = net_threadLimit;
    phVar1 = extraout_RAX_00;
  }
  net_threadLimit = phVar1;
  return;
}



// WARNING: Unknown calling convention

void net_listenerBacklog_func1(void)

{
  int in_RAX;
  int extraout_RAX;
  int extraout_RAX_00;
  int in_RBX;
  int extraout_RBX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RAX = extraout_RAX_00;
    in_RBX = extraout_RBX;
  }
  net_maxListenerBacklog(in_RAX,in_RBX);
  net_listenerBacklogCache.val = extraout_RAX;
  return;
}



// WARNING: Unknown calling convention

void net_initConfVal_func1(void)

{
  bool v;
  bool v_00;
  int unaff_R14;
  string in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (1 < net_confVal->dnsDebugLevel) {
    v = net_confVal->netCgo;
    v_00 = net_confVal->netGo;
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffffe0);
    runtime_printbool(v);
    runtime_printstring(in_stack_ffffffffffffffe0);
    runtime_printbool(v_00);
    runtime_printnl();
    runtime_printunlock();
  }
  if (net_confVal->netGo == false) {
    if ((net_confVal->netCgo == false) && (net_confVal->preferCgo == false)) {
      runtime_printlock();
      runtime_printstring(in_stack_ffffffffffffffe0);
      runtime_printunlock();
    }
    else {
      runtime_printlock();
      runtime_printstring(in_stack_ffffffffffffffe0);
      runtime_printunlock();
    }
  }
  else {
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffffe0);
    runtime_printunlock();
  }
  return;
}



// WARNING: Unknown calling convention

void net___Resolver__lookupIPAddr_func2
               (<_chan_internal_singleflight_Result ch,context_CancelFunc **cancelFn)

{
  int unaff_R14;
  context_CancelFunc **ppcStack0000000000000010;
  
  ppcStack0000000000000010 = cancelFn;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_chanrecv1((runtime_hchan *)ch,(void *)0x0);
  sync___WaitGroup__Add(&net_dnsWaitGroup,-1);
  (**ppcStack0000000000000010)();
  return;
}



// WARNING: Unknown calling convention

void net___Resolver__lookupIPAddr_func3(void)

{
  return;
}



void net___Resolver__goLookupIPCNAMEOrder_func1
               (string fqdn,vendor_golang_org_x_net_dns_dnsmessage_Type qtype)

{
  return;
}



// WARNING: Unknown calling convention

void net_doBlockingWithCtx_go_shape___vendor_golang_org_x_net_dns_dnsmessage_Resource__func1(void)

{
  runtime_hchan *c;
  func____go_shape___vendor_golang_org_x_net_dns_dnsmessage_Resource__error_ **blocking;
  vendor_golang_org_x_net_dns_dnsmessage_Resource *extraout_RAX;
  chan_net_result_go_shape___vendor_golang_org_x_net_dns_dnsmessage_Resource__1 res;
  int extraout_RCX;
  int in_RDX;
  int extraout_RBX;
  void *extraout_RSI;
  runtime_itab *extraout_RDI;
  int unaff_R14;
  undefined in_XMM15 [16];
  _param3 r;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  c = *(runtime_hchan **)(in_RDX + 0x10);
  r.res.array = in_XMM15._0_8_;
  r.res.cap = in_XMM15._8_8_;
  r.res.len = (int)r.res.array;
  (***(code ***)(in_RDX + 8))();
  r.err.data = extraout_RSI;
  r.err.tab = extraout_RDI;
  r.res.array = extraout_RAX;
  r.res.len = extraout_RBX;
  r.res.cap = extraout_RCX;
  runtime_chansend1(c,&r);
  return;
}



// WARNING: Unknown calling convention

void net_doBlockingWithCtx_go_shape___string__func1(void)

{
  runtime_hchan *c;
  func____go_shape___string__error_ **blocking;
  string *extraout_RAX;
  chan_net_result_go_shape___string__1 res;
  int extraout_RCX;
  int in_RDX;
  int extraout_RBX;
  void *extraout_RSI;
  runtime_itab *extraout_RDI;
  int unaff_R14;
  undefined in_XMM15 [16];
  _param3 r;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  c = *(runtime_hchan **)(in_RDX + 0x10);
  r.res.array = in_XMM15._0_8_;
  r.res.cap = in_XMM15._8_8_;
  r.res.len = (int)r.res.array;
  (***(code ***)(in_RDX + 8))();
  r.err.data = extraout_RSI;
  r.err.tab = extraout_RDI;
  r.res.array = extraout_RAX;
  r.res.len = extraout_RBX;
  r.res.cap = extraout_RCX;
  runtime_chansend1(c,&r);
  return;
}



// WARNING: Unknown calling convention

void net_doBlockingWithCtx_go_shape___net_IPAddr__func1(void)

{
  runtime_hchan *c;
  func____go_shape___net_IPAddr__error_ **blocking;
  net_IPAddr *extraout_RAX;
  chan_net_result_go_shape___net_IPAddr__1 res;
  int extraout_RCX;
  int in_RDX;
  int extraout_RBX;
  void *extraout_RSI;
  runtime_itab *extraout_RDI;
  int unaff_R14;
  undefined in_XMM15 [16];
  _param3 r;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  c = *(runtime_hchan **)(in_RDX + 0x10);
  r.res.array = in_XMM15._0_8_;
  r.res.cap = in_XMM15._8_8_;
  r.res.len = (int)r.res.array;
  (***(code ***)(in_RDX + 8))();
  r.err.data = extraout_RSI;
  r.err.tab = extraout_RDI;
  r.res.array = extraout_RAX;
  r.res.len = extraout_RBX;
  r.res.cap = extraout_RCX;
  runtime_chansend1(c,&r);
  return;
}



// WARNING: Unknown calling convention

void net_doBlockingWithCtx_go_shape_int__func1(void)

{
  runtime_hchan *c;
  func____go_shape_int__error_ **blocking;
  go_shape_int extraout_RAX;
  chan_net_result_go_shape_int__1 res;
  void *extraout_RCX;
  int in_RDX;
  runtime_itab *extraout_RBX;
  int unaff_R14;
  _param3 r;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  c = *(runtime_hchan **)(in_RDX + 0x10);
  r.res = 0;
  (***(code ***)(in_RDX + 8))();
  r.err.data = extraout_RCX;
  r.err.tab = extraout_RBX;
  r.res = extraout_RAX;
  runtime_chansend1(c,&r);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

int net_init(EVP_PKEY_CTX *ctx)

{
  net_netip_Addr ~r0;
  net_netip_Addr ~r0_00;
  net_netip_Addr ~r0_01;
  net_netip_Addr ~r0_02;
  net_netip_Addr ~r0_03;
  net_netip_Addr ~r0_04;
  net_netip_Addr ~r0_05;
  net_netip_Addr ~r0_06;
  net_netip_Addr ~r0_07;
  undefined8 extraout_RAX;
  undefined8 extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 extraout_RAX_02;
  undefined8 extraout_RAX_03;
  undefined8 extraout_RAX_04;
  undefined8 extraout_RAX_05;
  undefined8 extraout_RAX_06;
  runtime_hmap *extraout_RAX_07;
  map_net_hostLookupOrder_string h;
  undefined8 *extraout_RAX_08;
  undefined8 *extraout_RAX_09;
  undefined8 *extraout_RAX_10;
  undefined8 *extraout_RAX_11;
  undefined8 *extraout_RAX_12;
  undefined8 *extraout_RAX_13;
  undefined8 *extraout_RAX_14;
  undefined8 *extraout_RAX_15;
  undefined8 *puVar1;
  runtime_hmap *extraout_RAX_16;
  runtime_hmap *extraout_RAX_17;
  map_string_int extraout_RAX_18;
  map_string_int extraout_RAX_19;
  map_string_int phVar2;
  map_int_string extraout_RAX_20;
  map_int_string extraout_RAX_21;
  map_int_string phVar3;
  uint8 *extraout_RAX_22;
  uint8 *extraout_RAX_23;
  uint8 *extraout_RAX_24;
  uint8 *extraout_RAX_25;
  uint8 *extraout_RAX_26;
  uint8 *extraout_RAX_27;
  uint8 *extraout_RAX_28;
  uint8 *extraout_RAX_29;
  uint8 *puVar4;
  undefined4 *extraout_RAX_30;
  undefined4 *extraout_RAX_31;
  undefined4 *extraout_RAX_32;
  undefined4 *extraout_RAX_33;
  undefined4 *puVar5;
  runtime_hmap *extraout_RAX_34;
  runtime_hmap *extraout_RAX_35;
  runtime_hmap *prVar6;
  map_string_int h_00;
  undefined8 *extraout_RAX_36;
  undefined8 *extraout_RAX_37;
  undefined8 *extraout_RAX_38;
  undefined8 *extraout_RAX_39;
  undefined8 *extraout_RAX_40;
  time_Location *extraout_RAX_41;
  time_Location *ptVar7;
  internal_intern_Value *extraout_RCX;
  internal_intern_Value *extraout_RCX_00;
  internal_intern_Value *extraout_RCX_01;
  internal_intern_Value *extraout_RCX_02;
  internal_intern_Value *extraout_RCX_03;
  internal_intern_Value *extraout_RCX_04;
  internal_intern_Value *extraout_RCX_05;
  internal_intern_Value *extraout_RCX_06;
  internal_intern_Value *extraout_RCX_07;
  internal_intern_Value *extraout_RCX_08;
  internal_intern_Value *extraout_RCX_09;
  internal_intern_Value *extraout_RCX_10;
  internal_intern_Value *extraout_RCX_11;
  internal_intern_Value *extraout_RCX_12;
  internal_intern_Value *extraout_RCX_13;
  internal_intern_Value *extraout_RCX_14;
  internal_intern_Value *extraout_RCX_15;
  internal_intern_Value *extraout_RCX_16;
  internal_intern_Value *piVar8;
  undefined8 extraout_RCX_17;
  uint8 bitsPlusOne;
  uint8 bitsPlusOne_1;
  uint8 bitsPlusOne_2;
  uint8 bitsPlusOne_3;
  uint8 bitsPlusOne_4;
  uint8 bitsPlusOne_5;
  uint8 bitsPlusOne_6;
  uint8 bitsPlusOne_7;
  uint8 bitsPlusOne_8;
  undefined8 uVar9;
  undefined8 extraout_RBX;
  undefined8 extraout_RBX_00;
  undefined8 extraout_RBX_01;
  undefined8 extraout_RBX_02;
  undefined8 extraout_RBX_03;
  undefined8 extraout_RBX_04;
  undefined8 extraout_RBX_05;
  undefined8 extraout_RBX_06;
  undefined8 extraout_RBX_07;
  uint uVar10;
  void *extraout_RSI;
  void *extraout_RSI_00;
  void *extraout_RSI_01;
  void *extraout_RSI_02;
  void *extraout_RSI_03;
  void *extraout_RSI_04;
  void *extraout_RSI_05;
  void *extraout_RSI_06;
  void *pvVar11;
  void *~r0_08;
  void *extraout_RDI;
  void *extraout_RDI_00;
  void *extraout_RDI_01;
  void *extraout_RDI_02;
  void *extraout_RDI_03;
  void *extraout_RDI_04;
  void *extraout_RDI_05;
  void *extraout_RDI_06;
  void *extraout_RDI_07;
  void *extraout_RDI_08;
  void *extraout_RDI_09;
  void *extraout_RDI_10;
  void *extraout_RDI_11;
  void *extraout_RDI_12;
  internal_intern_Value **extraout_R11;
  internal_intern_Value **extraout_R11_00;
  internal_intern_Value **extraout_R11_01;
  internal_intern_Value **extraout_R11_02;
  internal_intern_Value **extraout_R11_03;
  internal_intern_Value **extraout_R11_04;
  internal_intern_Value **extraout_R11_05;
  internal_intern_Value **extraout_R11_06;
  internal_intern_Value **extraout_R11_07;
  undefined8 *extraout_R11_08;
  undefined8 *extraout_R11_09;
  undefined8 *extraout_R11_10;
  undefined8 *extraout_R11_11;
  undefined8 *extraout_R11_12;
  map_string_int *extraout_R11_13;
  map_int_string *extraout_R11_14;
  uint8 **extraout_R11_15;
  uint8 **extraout_R11_16;
  uint8 **extraout_R11_17;
  uint8 **extraout_R11_18;
  undefined8 *extraout_R11_19;
  undefined8 *extraout_R11_20;
  runtime_hmap **extraout_R11_21;
  map_string_int *extraout_R11_22;
  time_Location **extraout_R11_23;
  int unaff_R14;
  string in_XMM15;
  net_netip_uint128 in_stack_ffffffffffffffd8;
  internal_intern_Value *in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0.z = in_stack_ffffffffffffffe8;
  ~r0.addr = in_stack_ffffffffffffffd8;
  net_netip_AddrFrom16((uint8  [16])(ZEXT816(0x100000000000000) << 0x40),~r0);
  if (extraout_RCX == net_netip_z0) {
LAB_00606885:
    DAT_00c516f8 = 0;
  }
  else {
    uVar10 = 0x80;
    if (net_netip_z4 == extraout_RCX) {
      uVar10 = 0x20;
    }
    if (uVar10 < 0x80) goto LAB_00606885;
    DAT_00c516f8 = 0x81;
  }
  piVar8 = extraout_RCX;
  if ((extraout_RCX != net_netip_z0) && (piVar8 = extraout_RCX, net_netip_z4 != extraout_RCX)) {
    piVar8 = net_netip_z6noz;
  }
  _DAT_00c516e0 = extraout_RAX;
  _DAT_00c516e8 = extraout_RBX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RCX_00;
    extraout_R11[1] = DAT_00c516f0;
    piVar8 = extraout_RCX_00;
  }
  ~r0_00.z = in_stack_ffffffffffffffe8;
  ~r0_00.addr = in_stack_ffffffffffffffd8;
  DAT_00c516f0 = piVar8;
  net_netip_AddrFrom16((uint8  [16])(ZEXT816(0xffff0000) << 0x40),~r0_00);
  if (extraout_RCX_01 == net_netip_z0) {
LAB_00606925:
    DAT_00c51720 = 0;
  }
  else {
    uVar10 = 0x80;
    if (net_netip_z4 == extraout_RCX_01) {
      uVar10 = 0x20;
    }
    if (uVar10 < 0x60) goto LAB_00606925;
    DAT_00c51720 = 0x61;
  }
  piVar8 = extraout_RCX_01;
  if ((extraout_RCX_01 != net_netip_z0) &&
     (piVar8 = extraout_RCX_01, net_netip_z4 != extraout_RCX_01)) {
    piVar8 = net_netip_z6noz;
  }
  _DAT_00c51708 = extraout_RAX_00;
  _DAT_00c51710 = extraout_RBX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RCX_02;
    extraout_R11_00[1] = DAT_00c51718;
    piVar8 = extraout_RCX_02;
  }
  ~r0_01.z = in_stack_ffffffffffffffe8;
  ~r0_01.addr = in_stack_ffffffffffffffd8;
  DAT_00c51718 = piVar8;
  net_netip_AddrFrom16((uint8  [16])in_XMM15,~r0_01);
  if (extraout_RCX_03 == net_netip_z0) {
LAB_006069b9:
    DAT_00c51748 = 0;
  }
  else {
    uVar10 = 0x80;
    if (net_netip_z4 == extraout_RCX_03) {
      uVar10 = 0x20;
    }
    if (uVar10 < 0x60) goto LAB_006069b9;
    DAT_00c51748 = 0x61;
  }
  piVar8 = extraout_RCX_03;
  if ((extraout_RCX_03 != net_netip_z0) &&
     (piVar8 = extraout_RCX_03, net_netip_z4 != extraout_RCX_03)) {
    piVar8 = net_netip_z6noz;
  }
  _DAT_00c51730 = extraout_RAX_01;
  _DAT_00c51738 = extraout_RBX_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_01 = extraout_RCX_04;
    extraout_R11_01[1] = DAT_00c51740;
    piVar8 = extraout_RCX_04;
  }
  ~r0_02.z = in_stack_ffffffffffffffe8;
  ~r0_02.addr = in_stack_ffffffffffffffd8;
  DAT_00c51740 = piVar8;
  net_netip_AddrFrom16((uint8  [16])ZEXT816(0x120),~r0_02);
  if (extraout_RCX_05 == net_netip_z0) {
LAB_00606a59:
    DAT_00c51770 = 0;
  }
  else {
    uVar10 = 0x80;
    if (net_netip_z4 == extraout_RCX_05) {
      uVar10 = 0x20;
    }
    if (uVar10 < 0x20) goto LAB_00606a59;
    DAT_00c51770 = 0x21;
  }
  piVar8 = extraout_RCX_05;
  if ((extraout_RCX_05 != net_netip_z0) &&
     (piVar8 = extraout_RCX_05, net_netip_z4 != extraout_RCX_05)) {
    piVar8 = net_netip_z6noz;
  }
  _DAT_00c51758 = extraout_RAX_02;
  _DAT_00c51760 = extraout_RBX_02;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_02 = extraout_RCX_06;
    extraout_R11_02[1] = DAT_00c51768;
    piVar8 = extraout_RCX_06;
  }
  ~r0_03.z = in_stack_ffffffffffffffe8;
