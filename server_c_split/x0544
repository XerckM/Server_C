  __io_fs_DirEntry ~r0_03;
  __uint8 ~r0_04;
  string a2;
  __string ~r0_05;
  error ~r1_00;
  __uint8 ~r0_1;
  __uint8 ~r0_1_00;
  string ~r0_06;
  error ~r1_01;
  error ~r1_02;
  error ~r1_1;
  error ~r1_1_00;
  bool ok;
  char extraout_AL;
  char extraout_AL_00;
  bool ok_00;
  map_string___int ~r0_07;
  map_string___int extraout_RAX;
  crypto_x509_CertPool *extraout_RAX_00;
  crypto_x509_CertPool *roots;
  crypto_x509_CertPool *extraout_RAX_01;
  crypto_x509_CertPool *s;
  int sepSave;
  string *extraout_RAX_02;
  undefined8 uVar1;
  string *psVar2;
  int *extraout_RAX_03;
  int *piVar3;
  runtime_hmap *extraout_RAX_04;
  undefined *puVar4;
  int iVar5;
  runtime_itab *prVar6;
  void *~r0_08;
  int extraout_RBX;
  int n;
  runtime_itab *extraout_RBX_00;
  runtime_itab *prVar7;
  int extraout_RBX_01;
  undefined8 extraout_RSI;
  undefined8 extraout_RSI_00;
  runtime_itab *extraout_RDI;
  runtime_itab *extraout_RDI_00;
  int extraout_RDI_01;
  int iVar8;
  map_string___int *extraout_R11;
  int unaff_R14;
  string in_stack_ffffffffffffff20;
  runtime_itab *in_stack_ffffffffffffff30;
  void *in_stack_ffffffffffffff38;
  uint8 *in_stack_ffffffffffffff40;
  runtime_itab *in_stack_ffffffffffffff48;
  uint8 *in_stack_ffffffffffffff50;
  int in_stack_ffffffffffffff58;
  int iVar9;
  runtime_itab *prVar10;
  runtime_itab *in_stack_ffffffffffffff70;
  void *in_stack_ffffffffffffff78;
  void *pvVar11;
  undefined8 local_60;
  string *local_58;
  string *local_50;
  uint8 *local_48;
  int *local_40;
  undefined8 local_38;
  string *local_30;
  map_string___int local_28;
  map_string___int local_20;
  string local_18;
  
  while (&local_60 <= *(undefined8 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0 = (crypto_x509_CertPool *)extraout_RAX_04;
  }
  runtime_makemap_small((runtime_hmap *)~r0);
  local_20 = ~r0_07;
  runtime_makemap_small((runtime_hmap *)~r0_07);
  local_28 = extraout_RAX;
  runtime_newobject((internal_abi_Type *)&DAT_008780e0,~r0_08);
  s = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = local_20;
    extraout_R11[1] = local_28;
    s = extraout_RAX_01;
  }
  s->byName = local_20;
  s->haveSum = (map_crypto_x509_sum224_bool)local_28;
  local_58 = crypto_x509_certFiles.array;
  ~r0_00.len = (int)in_stack_ffffffffffffff38;
  ~r0_00.str = (uint8 *)in_stack_ffffffffffffff30;
  puVar4 = (undefined *)crypto_x509_certFiles.len;
  os_Getenv(in_stack_ffffffffffffff20,~r0_00);
  psVar2 = local_58;
  if (extraout_RBX != 0) {
    puVar4 = &DAT_00000001;
    psVar2 = &local_18;
  }
  iVar8 = 0;
  prVar6 = (runtime_itab *)0x0;
  uVar1 = 0;
  do {
    local_60 = uVar1;
    if ((int)puVar4 <= iVar8) {
LAB_00694258:
      local_50 = crypto_x509_certDirectories.array;
      ~r0_01.len = (int)in_stack_ffffffffffffff38;
      ~r0_01.str = (uint8 *)in_stack_ffffffffffffff30;
      prVar7 = (runtime_itab *)crypto_x509_certDirectories.len;
      os_Getenv(in_stack_ffffffffffffff20,~r0_01);
      psVar2 = local_50;
      if (n != 0) {
        sep.len = (int)in_stack_ffffffffffffff38;
        sep.str = (uint8 *)in_stack_ffffffffffffff30;
        ~r0_05.len = (int)in_stack_ffffffffffffff48;
        ~r0_05.array = (string *)in_stack_ffffffffffffff40;
        ~r0_05.cap = (int)in_stack_ffffffffffffff50;
        strings_genSplit(in_stack_ffffffffffffff20,sep,sepSave,n,~r0_05);
        psVar2 = extraout_RAX_02;
        prVar7 = extraout_RBX_00;
      }
      uVar1 = local_60;
      for (iVar8 = 0; iVar8 < (int)prVar7; iVar8 = iVar8 + 1) {
        local_48 = psVar2->str;
        pvVar11 = (void *)psVar2->len;
        ~r0_03.len = (int)in_stack_ffffffffffffff38;
        ~r0_03.array = (io_fs_DirEntry *)in_stack_ffffffffffffff30;
        ~r0_03.cap = (int)in_stack_ffffffffffffff40;
        ~r1_00.data = in_stack_ffffffffffffff50;
        ~r1_00.tab = in_stack_ffffffffffffff48;
        local_60 = uVar1;
        local_30 = psVar2;
        crypto_x509_readUniqueDirectoryEntries(in_stack_ffffffffffffff20,~r0_03,~r1_00);
        if (extraout_RDI_00 == (runtime_itab *)0x0) {
          piVar3 = extraout_RAX_03;
          iVar9 = extraout_RBX_01;
          for (iVar5 = 0; uVar1 = local_60, iVar5 < iVar9; iVar5 = iVar5 + 1) {
            local_40 = piVar3;
            (**(code **)(*piVar3 + 0x28))(piVar3[1]);
            a1.len = (int)in_stack_ffffffffffffff38;
            a1.str = (uint8 *)in_stack_ffffffffffffff30;
            a2.len = (int)in_stack_ffffffffffffff48;
            a2.str = in_stack_ffffffffffffff40;
            ~r0_06.len = iVar9;
            ~r0_06.str = in_stack_ffffffffffffff50;
            runtime_concatstring3((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff20,a1,a2,~r0_06);
            ~r0_04.len = (int)in_stack_ffffffffffffff38;
            ~r0_04.array = (uint8 *)in_stack_ffffffffffffff30;
            ~r0_04.cap = (int)in_stack_ffffffffffffff40;
            ~r0_1_00.len = (int)in_stack_ffffffffffffff50;
            ~r0_1_00.array = (uint8 *)in_stack_ffffffffffffff48;
            ~r0_1_00.cap = iVar9;
            ~r1_02.data = puVar4;
            ~r1_02.tab = prVar6;
            ~r1_1_00.data = pvVar11;
            ~r1_1_00.tab = prVar7;
            os_ReadFile(in_stack_ffffffffffffff20,~r0_04,~r0_1_00,~r1_02,~r1_1_00);
            if (extraout_RDI_01 == 0) {
              pemCerts_00.cap = (int)in_stack_ffffffffffffff30;
              pemCerts_00.array = in_stack_ffffffffffffff20.str;
              pemCerts_00.len = in_stack_ffffffffffffff20.len;
              crypto_x509___CertPool__AppendCertsFromPEM(s,pemCerts_00,ok_00);
            }
            piVar3 = local_40 + 2;
          }
        }
        else {
          uVar1 = local_60;
          if ((prVar6 == (runtime_itab *)0x0) &&
             (target_00.data = in_stack_ffffffffffffff38, target_00.tab = in_stack_ffffffffffffff30,
             prVar10 = prVar6, local_38 = extraout_RSI_00,
             os_underlyingErrorIs
                       ((error)in_stack_ffffffffffffff20,target_00,SUB81(extraout_RDI_00,0)),
             uVar1 = local_38, prVar6 = extraout_RDI_00, extraout_AL_00 != '\0')) {
            uVar1 = local_60;
            prVar6 = prVar10;
          }
        }
        psVar2 = local_30 + 1;
      }
      if (s == (crypto_x509_CertPool *)0x0) {
        iVar8 = 0;
      }
      else {
        iVar8 = (s->lazyCerts).len;
      }
      if ((iVar8 < 1) && (prVar6 != (runtime_itab *)0x0)) {
        return;
      }
      return;
    }
    ~r0_02.len = (int)in_stack_ffffffffffffff38;
    ~r0_02.array = (uint8 *)in_stack_ffffffffffffff30;
    ~r0_02.cap = (int)in_stack_ffffffffffffff40;
    ~r0_1.len = (int)in_stack_ffffffffffffff50;
    ~r0_1.array = (uint8 *)in_stack_ffffffffffffff48;
    ~r0_1.cap = in_stack_ffffffffffffff58;
    ~r1_01.data = puVar4;
    ~r1_01.tab = prVar6;
    ~r1_1.data = in_stack_ffffffffffffff78;
    ~r1_1.tab = in_stack_ffffffffffffff70;
    local_30 = psVar2;
    os_ReadFile(in_stack_ffffffffffffff20,~r0_02,~r0_1,~r1_01,~r1_1);
    if (extraout_RDI == (runtime_itab *)0x0) {
      pemCerts.cap = (int)in_stack_ffffffffffffff30;
      pemCerts.array = in_stack_ffffffffffffff20.str;
      pemCerts.len = in_stack_ffffffffffffff20.len;
      crypto_x509___CertPool__AppendCertsFromPEM(s,pemCerts,ok);
      goto LAB_00694258;
    }
    uVar1 = local_60;
    if ((prVar6 == (runtime_itab *)0x0) &&
       (target.data = in_stack_ffffffffffffff38, target.tab = in_stack_ffffffffffffff30,
       prVar7 = prVar6, local_38 = extraout_RSI,
       os_underlyingErrorIs((error)in_stack_ffffffffffffff20,target,SUB81(extraout_RDI,0)),
       uVar1 = local_38, prVar6 = extraout_RDI, extraout_AL != '\0')) {
      uVar1 = local_60;
      prVar6 = prVar7;
    }
    psVar2 = local_30 + 1;
    iVar8 = iVar8 + 1;
  } while( true );
}



void crypto_x509_readUniqueDirectoryEntries(string dir,__io_fs_DirEntry ~r0,error ~r1)

{
  undefined8 uVar1;
  runtime_slice ~r0_00;
  string dir_00;
  __io_fs_DirEntry ~r0_01;
  error ~r1_00;
  error ~r1_1;
  char extraout_AL;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *oldPtr;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  uint oldCap;
  undefined8 *puVar2;
  int iVar3;
  int extraout_RBX;
  uint newLen;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  int iVar4;
  int extraout_RDI;
  undefined8 *extraout_R11;
  int unaff_R14;
  string in_stack_ffffffffffffff78;
  uint8 *in_stack_ffffffffffffff88;
  int in_stack_ffffffffffffff90;
  int in_stack_ffffffffffffff98;
  __io_fs_DirEntry in_stack_ffffffffffffffa0;
  runtime_itab *in_stack_ffffffffffffffb8;
  void *in_stack_ffffffffffffffc0;
  runtime_itab *in_stack_ffffffffffffffc8;
  int iVar5;
  void *in_stack_ffffffffffffffd0;
  undefined8 uVar6;
  
  while (&stack0xfffffffffffffff8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_01.len = in_stack_ffffffffffffff90;
  ~r0_01.array = (io_fs_DirEntry *)in_stack_ffffffffffffff88;
  ~r0_01.cap = in_stack_ffffffffffffff98;
  ~r1_00.data = in_stack_ffffffffffffffc0;
  ~r1_00.tab = in_stack_ffffffffffffffb8;
  ~r1_1.data = in_stack_ffffffffffffffd0;
  ~r1_1.tab = in_stack_ffffffffffffffc8;
  os_ReadDir(in_stack_ffffffffffffff78,~r0_01,in_stack_ffffffffffffffa0,~r1_00,~r1_1);
  if (extraout_RDI != 0) {
    return;
  }
  newLen = 0;
  oldPtr = extraout_RAX;
  oldCap = extraout_RCX;
  puVar2 = extraout_RAX;
  iVar5 = extraout_RBX;
  for (iVar4 = 0; iVar4 < iVar5; iVar4 = iVar4 + 1) {
    uVar1 = puVar2[1];
    uVar6 = *puVar2;
    dir_00.len = in_stack_ffffffffffffff90;
    dir_00.str = in_stack_ffffffffffffff88;
    crypto_x509_isSameDirSymlink((io_fs_DirEntry)in_stack_ffffffffffffff78,dir_00,SUB81(uVar6,0));
    if (extraout_AL == '\0') {
      newLen = newLen + 1;
      if (oldCap < newLen) {
        ~r0_00.cap = (int)in_stack_ffffffffffffff88;
        ~r0_00.array = in_stack_ffffffffffffff78.str;
        ~r0_00.len = in_stack_ffffffffffffff78.len;
        runtime_growslice(oldPtr,newLen,oldCap,1,(internal_abi_Type *)&DAT_008463e0,~r0_00);
        oldPtr = extraout_RAX_00;
        oldCap = extraout_RCX_00;
        newLen = extraout_RBX_00;
      }
      iVar3 = (newLen - 1) * 0x10;
      oldPtr[(newLen - 1) * 2] = uVar6;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = uVar1;
        extraout_R11[1] = *(undefined8 *)((int)extraout_RAX_01 + iVar3 + 8);
        oldPtr = extraout_RAX_01;
        oldCap = extraout_RCX_01;
        newLen = extraout_RBX_01;
      }
      *(undefined8 *)((int)oldPtr + iVar3 + 8) = uVar1;
    }
    puVar2 = puVar2 + 2;
  }
  return;
}



void crypto_x509_isSameDirSymlink(io_fs_DirEntry f,string dir,bool ~r0)

{
  __string elem;
  string ~r0_00;
  string substr;
  string ~r0_01;
  error ~r1;
  dword dVar1;
  undefined7 in_register_00000001;
  int ~r0_02;
  runtime_itab *in_RCX;
  int extraout_RCX;
  undefined8 in_RBX;
  void *in_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffffb8;
  uint8 *in_stack_ffffffffffffffc8;
  uint8 *in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  dVar1 = (**(code **)(CONCAT71(in_register_00000001,~r0) + 0x30))(in_RBX);
  if ((dVar1 >> 0x1b & 1) == 0) {
    return;
  }
  (**(code **)(CONCAT71(in_register_00000001,~r0) + 0x28))(in_RBX);
  elem.cap = (int)in_stack_ffffffffffffffc8;
  elem.array = (string *)in_stack_ffffffffffffffb8.str;
  elem.len = in_stack_ffffffffffffffb8.len;
  ~r0_01.len = (int)in_RCX;
  ~r0_01.str = in_stack_ffffffffffffffd0;
  path_filepath_join(elem,~r0_01);
  ~r0_00.len = (int)in_stack_ffffffffffffffd0;
  ~r0_00.str = in_stack_ffffffffffffffc8;
  ~r1.data = in_RDI;
  ~r1.tab = in_RCX;
  os_Readlink(in_stack_ffffffffffffffb8,~r0_00,~r1);
  if (extraout_RCX == 0) {
    substr.len = (int)in_stack_ffffffffffffffd0;
    substr.str = in_stack_ffffffffffffffc8;
    strings_Index(in_stack_ffffffffffffffb8,substr,~r0_02);
  }
  return;
}



void crypto_x509_CertificateInvalidError_Error(crypto_x509_CertificateInvalidError e,string ~r0)

{
  string ~r0_00;
  string ~r0_01;
  string ~r0_02;
  string ~r0_03;
  undefined8 in_RBX;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  switch(in_RBX) {
  case 0:
    return;
  case 1:
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    runtime_concatstring2
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,~r0_00);
    return;
  case 2:
    ~r0_01.len = unaff_RBP;
    ~r0_01.str = in_stack_fffffffffffffff0;
    runtime_concatstring2
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,~r0_01);
    return;
  case 3:
    return;
  case 4:
    return;
  case 5:
    return;
  case 6:
    return;
  case 7:
    ~r0_02.len = unaff_RBP;
    ~r0_02.str = in_stack_fffffffffffffff0;
    runtime_concatstring2
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,~r0_02);
    return;
  default:
    return;
  case 9:
    ~r0_03.len = unaff_RBP;
    ~r0_03.str = in_stack_fffffffffffffff0;
    runtime_concatstring2
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,~r0_03);
    return;
  }
}



void crypto_x509_HostnameError_Error(crypto_x509_HostnameError h,string ~r0)

{
  int iVar1;
  string pattern;
  string s;
  string a0;
  string a0_00;
  string a0_01;
  string a0_02;
  string a0_03;
  __string elems;
  net_IP ip;
  string host;
  uint8 ~r0_00 [16];
  string a1;
  string a1_00;
  string a1_01;
  string a1_02;
  string a1_03;
  string sep;
  string ~r0_01;
  string a2;
  string ~r0_02;
  string a2_00;
  string ~r0_03;
  string ~r0_04;
  string ~r0_05;
  string ~r0_06;
  string a3;
  string ~r0_07;
  int *piVar2;
  char extraout_AL;
  char extraout_AL_00;
  bool valid;
  int in_RAX;
  crypto_x509_Certificate *c;
  undefined *puVar3;
  undefined8 extraout_RAX;
  undefined8 extraout_RAX_00;
  int **ppiVar4;
  undefined8 *puVar5;
  undefined in_BL;
  undefined8 uVar6;
  int extraout_RBX;
  int extraout_RBX_00;
  int extraout_RBX_01;
  int iVar7;
  int iVar8;
  int i;
  int unaff_R14;
  undefined4 in_stack_ffffffffffffff00;
  undefined4 in_stack_ffffffffffffff04;
  undefined4 in_stack_ffffffffffffff08;
  undefined4 in_stack_ffffffffffffff0c;
  uint8 *in_stack_ffffffffffffff10;
  uint8 *in_stack_ffffffffffffff18;
  uint8 *in_stack_ffffffffffffff20;
  uint8 *in_stack_ffffffffffffff28;
  uint8 *in_stack_ffffffffffffff30;
  int in_stack_ffffffffffffff38;
  uint8 *in_stack_ffffffffffffff40;
  int in_stack_ffffffffffffff48;
  undefined local_88 [8];
  undefined auStack_80 [24];
  undefined8 local_68;
  undefined8 local_60;
  undefined8 *local_58;
  undefined local_50;
  int local_48;
  crypto_x509_pkix_Extension e;
  
  while (auStack_80 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ppiVar4 = *(int ***)(in_RAX + 0x2e8);
  for (iVar8 = 0; iVar8 < *(int *)(in_RAX + 0x2f0); iVar8 = iVar8 + 1) {
    e.Id.array = *ppiVar4;
    e.Id.len._0_4_ = *(undefined4 *)(ppiVar4 + 1);
    e.Id.len._4_4_ = *(undefined4 *)((int)ppiVar4 + 0xc);
    piVar2 = ppiVar4[1];
    e.Id.cap._0_4_ = *(undefined4 *)(ppiVar4 + 2);
    e.Id.cap._4_4_ = *(undefined4 *)((int)ppiVar4 + 0x14);
    e._24_4_ = *(undefined4 *)(ppiVar4 + 3);
    e._28_4_ = *(undefined4 *)((int)ppiVar4 + 0x1c);
    e.Value.array._0_4_ = *(undefined4 *)(ppiVar4 + 4);
    e.Value.array._4_4_ = *(undefined4 *)((int)ppiVar4 + 0x24);
    e.Value.len._0_4_ = *(undefined4 *)(ppiVar4 + 5);
    e.Value.len._4_4_ = *(undefined4 *)((int)ppiVar4 + 0x2c);
    e.Value.cap._0_4_ = *(undefined4 *)(ppiVar4 + 6);
    e.Value.cap._4_4_ = *(undefined4 *)((int)ppiVar4 + 0x34);
    if (piVar2 == (int *)crypto_x509_oidExtensionSubjectAltName.len) {
      i = 0;
      while( true ) {
        if ((int)piVar2 <= i) goto LAB_006948e5;
        if (crypto_x509_oidExtensionSubjectAltName.array[i] != e.Id.array[i]) break;
        i = i + 1;
      }
    }
    ppiVar4 = ppiVar4 + 7;
  }
LAB_006948e5:
  local_48 = in_RAX;
  local_50 = in_BL;
  if ((*(int *)(in_RAX + 0x2f0) <= iVar8) &&
     (pattern.str._4_4_ = in_stack_ffffffffffffff04, pattern.str._0_4_ = in_stack_ffffffffffffff00,
     pattern.len._0_4_ = in_stack_ffffffffffffff08, pattern.len._4_4_ = in_stack_ffffffffffffff0c,
     host.len = (int)in_stack_ffffffffffffff18, host.str = in_stack_ffffffffffffff10,
     crypto_x509_matchHostnames(pattern,host,SUB81(*(undefined8 *)(in_RAX + 0x270),0)),
     extraout_AL != '\0')) {
    return;
  }
  s.str._4_4_ = in_stack_ffffffffffffff04;
  s.str._0_4_ = in_stack_ffffffffffffff00;
  s.len._0_4_ = in_stack_ffffffffffffff08;
  s.len._4_4_ = in_stack_ffffffffffffff0c;
  ~r0_00._8_8_ = in_stack_ffffffffffffff18;
  ~r0_00._0_8_ = in_stack_ffffffffffffff10;
  net_parseIP(s,~r0_00,(bool)local_50);
  if (extraout_AL_00 == '\0') {
    puVar3 = (undefined *)0x0;
  }
  else {
    puVar3 = local_88;
  }
  if (puVar3 == (undefined *)0x0) {
    elems.array._4_4_ = in_stack_ffffffffffffff04;
    elems.array._0_4_ = in_stack_ffffffffffffff00;
    elems.len._0_4_ = in_stack_ffffffffffffff08;
    elems.len._4_4_ = in_stack_ffffffffffffff0c;
    elems.cap = (int)in_stack_ffffffffffffff10;
    sep.len = (int)in_stack_ffffffffffffff20;
    sep.str = in_stack_ffffffffffffff18;
    ~r0_05.len = (int)in_stack_ffffffffffffff30;
    ~r0_05.str = in_stack_ffffffffffffff28;
    strings_Join(elems,sep,~r0_05);
    iVar8 = extraout_RBX;
  }
  else {
    iVar1 = *(int *)(local_48 + 0x410);
    if (iVar1 == 0) {
      a0.str._4_4_ = in_stack_ffffffffffffff04;
      a0.str._0_4_ = in_stack_ffffffffffffff00;
      a0.len._0_4_ = in_stack_ffffffffffffff08;
      a0.len._4_4_ = in_stack_ffffffffffffff0c;
      a1.len = (int)in_stack_ffffffffffffff18;
      a1.str = in_stack_ffffffffffffff10;
      a2.len = (int)in_stack_ffffffffffffff28;
      a2.str = in_stack_ffffffffffffff20;
      ~r0_06.len = in_stack_ffffffffffffff38;
      ~r0_06.str = in_stack_ffffffffffffff30;
      runtime_concatstring3((runtime_tmpBuf *)0x0,a0,a1,a2,~r0_06);
      return;
    }
    puVar5 = *(undefined8 **)(local_48 + 0x408);
    iVar8 = 0;
    uVar6 = 0;
    for (iVar7 = 0; iVar7 < iVar1; iVar7 = iVar7 + 1) {
      local_58 = puVar5;
      if (iVar8 != 0) {
        a0_03.str._4_4_ = in_stack_ffffffffffffff04;
        a0_03.str._0_4_ = in_stack_ffffffffffffff00;
        a0_03.len._0_4_ = in_stack_ffffffffffffff08;
        a0_03.len._4_4_ = in_stack_ffffffffffffff0c;
        a1_03.len = (int)in_stack_ffffffffffffff18;
        a1_03.str = in_stack_ffffffffffffff10;
        ~r0_04.len = (int)in_stack_ffffffffffffff28;
        ~r0_04.str = in_stack_ffffffffffffff20;
        local_60 = *puVar5;
        runtime_concatstring2((runtime_tmpBuf *)0x0,a0_03,a1_03,~r0_04);
        iVar8 = extraout_RBX_01;
        uVar6 = extraout_RAX_00;
      }
      ip.array._4_4_ = in_stack_ffffffffffffff04;
      ip.array._0_4_ = in_stack_ffffffffffffff00;
      ip.len._0_4_ = in_stack_ffffffffffffff08;
      ip.len._4_4_ = in_stack_ffffffffffffff0c;
      ip.cap = (int)in_stack_ffffffffffffff10;
      ~r0_01.len = (int)in_stack_ffffffffffffff20;
      ~r0_01.str = in_stack_ffffffffffffff18;
      local_68 = uVar6;
      net_IP_String(ip,~r0_01);
      a0_02.str._4_4_ = in_stack_ffffffffffffff04;
      a0_02.str._0_4_ = in_stack_ffffffffffffff00;
      a0_02.len._0_4_ = in_stack_ffffffffffffff08;
      a0_02.len._4_4_ = in_stack_ffffffffffffff0c;
      a1_02.len = (int)in_stack_ffffffffffffff18;
      a1_02.str = in_stack_ffffffffffffff10;
      ~r0_03.len = (int)in_stack_ffffffffffffff28;
      ~r0_03.str = in_stack_ffffffffffffff20;
      in_stack_ffffffffffffff48 = iVar8;
      runtime_concatstring2((runtime_tmpBuf *)0x0,a0_02,a1_02,~r0_03);
      puVar5 = local_58 + 3;
      iVar8 = extraout_RBX_00;
      uVar6 = extraout_RAX;
    }
  }
  if (iVar8 != 0) {
    a0_01.str._4_4_ = in_stack_ffffffffffffff04;
    a0_01.str._0_4_ = in_stack_ffffffffffffff00;
    a0_01.len._0_4_ = in_stack_ffffffffffffff08;
    a0_01.len._4_4_ = in_stack_ffffffffffffff0c;
    a1_01.len = (int)in_stack_ffffffffffffff18;
    a1_01.str = in_stack_ffffffffffffff10;
    a2_00.len = (int)in_stack_ffffffffffffff28;
    a2_00.str = in_stack_ffffffffffffff20;
    a3.len = in_stack_ffffffffffffff38;
    a3.str = in_stack_ffffffffffffff30;
    ~r0_07.len = in_stack_ffffffffffffff48;
    ~r0_07.str = in_stack_ffffffffffffff40;
    runtime_concatstring4((runtime_tmpBuf *)0x0,a0_01,a1_01,a2_00,a3,~r0_07);
    return;
  }
  a0_00.str._4_4_ = in_stack_ffffffffffffff04;
  a0_00.str._0_4_ = in_stack_ffffffffffffff00;
  a0_00.len._0_4_ = in_stack_ffffffffffffff08;
  a0_00.len._4_4_ = in_stack_ffffffffffffff0c;
  a1_00.len = (int)in_stack_ffffffffffffff18;
  a1_00.str = in_stack_ffffffffffffff10;
  ~r0_02.len = (int)in_stack_ffffffffffffff28;
  ~r0_02.str = in_stack_ffffffffffffff20;
  runtime_concatstring2((runtime_tmpBuf *)0x0,a0_00,a1_00,~r0_02);
  return;
}



void crypto_x509_UnknownAuthorityError_Error(crypto_x509_UnknownAuthorityError e,string ~r0)

{
  int iVar1;
  math_big_nat x;
  string a1;
  string a1_00;
  __interface___ a;
  __uint8 ~r0_00;
  string ~r0_01;
  string ~r0_02;
  string ~r0_03;
  uint8 *ptr;
  void *extraout_RAX;
  void *x_00;
  uint8 *in_RBX;
  int n;
  int in_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffff80;
  uint8 *in_stack_ffffffffffffff90;
  int in_stack_ffffffffffffff98;
  uint8 *in_stack_ffffffffffffffa0;
  uint8 *in_stack_ffffffffffffffa8;
  int in_stack_ffffffffffffffb0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RBX != (uint8 *)0x0) {
    x_00 = *(void **)(in_RDI + 0x270);
    if (*(int *)(in_RDI + 0x278) == 0) {
      if (*(int *)(in_RDI + 0x1d8) == 0) {
        iVar1 = *(int *)(in_RDI + 0xb8);
        in_stack_ffffffffffffffa8 = in_RBX;
        if (iVar1 != 0) {
          x.cap = (int)in_stack_ffffffffffffff90;
          x.array = (math_big_Word *)in_stack_ffffffffffffff80.str;
          x.len = in_stack_ffffffffffffff80.len;
          ~r0_00.len = (int)in_stack_ffffffffffffffa0;
          ~r0_00.array = (uint8 *)in_stack_ffffffffffffff98;
          ~r0_00.cap = (int)in_RBX;
          math_big_nat_itoa(x,SUB81(*(undefined8 *)(iVar1 + 8),0),*(int *)(iVar1 + 0x10),~r0_00);
          runtime_slicebytetostring
                    ((runtime_tmpBuf *)&stack0xffffffffffffffb0,ptr,n,in_stack_ffffffffffffff80);
          in_stack_ffffffffffffffa8 = in_RBX;
        }
        a1.len = in_stack_ffffffffffffff98;
        a1.str = in_stack_ffffffffffffff90;
        ~r0_01.len = (int)in_stack_ffffffffffffffa8;
        ~r0_01.str = in_stack_ffffffffffffffa0;
        runtime_concatstring2((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff80,a1,~r0_01);
        x_00 = extraout_RAX;
      }
      else {
        x_00 = **(void ***)(in_RDI + 0x1d0);
      }
    }
    runtime_convTstring(in_stack_ffffffffffffff80,x_00);
    a.len = in_stack_ffffffffffffff98;
    a.array = (interface___ *)in_stack_ffffffffffffff90;
    a.cap = (int)in_stack_ffffffffffffffa0;
    ~r0_03.len = in_stack_ffffffffffffffb0;
    ~r0_03.str = in_stack_ffffffffffffffa8;
    fmt_Sprintf(in_stack_ffffffffffffff80,a,~r0_03);
    a1_00.len = in_stack_ffffffffffffff98;
    a1_00.str = in_stack_ffffffffffffff90;
    ~r0_02.len = (int)in_stack_ffffffffffffffa8;
    ~r0_02.str = in_stack_ffffffffffffffa0;
    runtime_concatstring2((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff80,a1_00,~r0_02);
  }
  return;
}



void crypto_x509_SystemRootsError_Error(crypto_x509_SystemRootsError se,string ~r0)

{
  string ~r0_00;
  int in_RAX;
  undefined8 in_RBX;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RAX != 0) {
    (**(code **)(in_RAX + 0x18))(in_RBX);
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
               in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
  return;
}



void crypto_x509_SystemRootsError_Unwrap(crypto_x509_SystemRootsError se,error ~r0)

{
  return;
}



void crypto_x509_parseRFC2821Mailbox(string in,crypto_x509_rfc2821Mailbox mailbox,bool ok)

{
  byte bVar1;
  runtime_slice ~r0;
  __uint8 s;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  __string reverseLabels;
  __uint8 sep;
  undefined7 in_register_00000001;
  uint8 *extraout_RAX;
  uint8 *extraout_RAX_00;
  int extraout_RAX_01;
  uint8 *extraout_RAX_02;
  uint8 *puVar2;
  uint8 *extraout_RAX_03;
  uint cap;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  byte *pbVar3;
  byte *pbVar4;
  uint in_RBX;
  uint extraout_RBX;
  uint newLen;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  char extraout_DIL;
  bool ok_1;
  void *in_RDI;
  void *extraout_RDI;
  uint8 c;
  uint8 c_1;
  uint uVar5;
  dword dVar6;
  int unaff_R14;
  bool bVar7;
  string in_stack_ffffffffffffff80;
  string *in_stack_ffffffffffffff90;
  undefined in_stack_ffffffffffffff98 [16];
  int in_stack_ffffffffffffffa8;
  
  pbVar3 = (byte *)CONCAT71(in_register_00000001,ok);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  if (in_RBX == 0) {
    return;
  }
  cap = in_RBX >> 1;
  runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,cap,in_RDI);
  puVar2 = extraout_RAX;
  if (*pbVar3 == 0x22) {
    newLen = 0;
    pbVar4 = pbVar3 + ((dword)((int)-(in_RBX - 1) >> 0x3f) & 1);
    uVar5 = in_RBX - 1;
    while( true ) {
      if (uVar5 == 0) {
        return;
      }
      bVar1 = *pbVar4;
      in_RBX = uVar5 - 1;
      dVar6 = (dword)((int)-in_RBX >> 0x3f) & 1;
      pbVar3 = pbVar4 + dVar6;
      if (bVar1 == 0x22) break;
      if (bVar1 == 0x5c) {
        if (uVar5 == 1) {
          return;
        }
        bVar1 = pbVar4[dVar6];
        if (((bVar1 != 0xb) && (bVar1 != 0xc)) &&
           ((bVar1 == 0 || ((9 < bVar1 && ((bVar1 < 0xe || (0x7f < bVar1)))))))) {
          return;
        }
        newLen = newLen + 1;
        if (cap < newLen) {
          ~r0_00.cap = (int)in_stack_ffffffffffffff90;
          ~r0_00.array = in_stack_ffffffffffffff80.str;
          ~r0_00.len = in_stack_ffffffffffffff80.len;
          runtime_growslice(puVar2,newLen,cap,1,(internal_abi_Type *)&DAT_00807920,~r0_00);
          puVar2 = extraout_RAX_02;
          cap = extraout_RCX_00;
          newLen = extraout_RBX_00;
        }
        puVar2[newLen - 1] = bVar1;
        pbVar4 = pbVar3 + ((dword)((int)-(uVar5 - 2) >> 0x3f) & 1);
        uVar5 = uVar5 - 2;
      }
      else {
        if (((((bVar1 != 0xb) && (bVar1 != 0xc)) && (bVar1 != 0x20)) &&
            ((bVar1 != 0x21 && (bVar1 != 0x7f)))) &&
           (((bVar1 == 0 || (8 < bVar1)) &&
            (((0x11 < (byte)(bVar1 - 0xe) && (0x38 < (byte)(bVar1 - 0x23))) &&
             (0x21 < (byte)(bVar1 + 0xa3))))))) {
          return;
        }
        newLen = newLen + 1;
        if (cap < newLen) {
          ~r0_01.cap = (int)in_stack_ffffffffffffff90;
          ~r0_01.array = in_stack_ffffffffffffff80.str;
          ~r0_01.len = in_stack_ffffffffffffff80.len;
          runtime_growslice(puVar2,newLen,cap,1,(internal_abi_Type *)&DAT_00807920,~r0_01);
          puVar2 = extraout_RAX_03;
          cap = extraout_RCX_01;
          newLen = extraout_RBX_01;
        }
        puVar2[newLen - 1] = bVar1;
        pbVar4 = pbVar3;
        uVar5 = in_RBX;
      }
    }
  }
  else {
    newLen = 0;
    while (in_RBX != 0) {
      bVar1 = *pbVar3;
      if (bVar1 == 0x5c) {
        pbVar3 = pbVar3 + ((dword)((int)-(in_RBX - 1) >> 0x3f) & 1);
        bVar7 = in_RBX == 1;
        in_RBX = in_RBX - 1;
        if (bVar7) {
          return;
        }
      }
      else if (((((((9 < (byte)(bVar1 - 0x30)) && (0x19 < (byte)(bVar1 + 0x9f))) &&
                  (0x19 < (byte)(bVar1 + 0xbf))) && ((bVar1 != 0x21 && (bVar1 != 0x23)))) &&
                ((((bVar1 != 0x24 && ((bVar1 != 0x25 && (bVar1 != 0x26)))) && (bVar1 != 0x27)) &&
                 (((bVar1 != 0x2a && (bVar1 != 0x2b)) && (bVar1 != 0x2d)))))) &&
               (((bVar1 != 0x2f && (bVar1 != 0x3d)) &&
                ((bVar1 != 0x3f && ((bVar1 != 0x5e && (bVar1 != 0x5f)))))))) &&
              ((bVar1 != 0x60 &&
               ((((bVar1 != 0x7b && (bVar1 != 0x7c)) && (bVar1 != 0x7d)) &&
                ((bVar1 != 0x7e && (bVar1 != 0x2e)))))))) break;
      if (in_RBX == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      newLen = newLen + 1;
      bVar1 = *pbVar3;
      if (cap < newLen) {
        ~r0.cap = (int)in_stack_ffffffffffffff90;
        ~r0.array = in_stack_ffffffffffffff80.str;
        ~r0.len = in_stack_ffffffffffffff80.len;
        runtime_growslice(puVar2,newLen,cap,1,(internal_abi_Type *)&DAT_00807920,~r0);
        puVar2 = extraout_RAX_00;
        cap = extraout_RCX;
        newLen = extraout_RBX;
      }
      puVar2[newLen - 1] = bVar1;
      in_RBX = in_RBX - 1;
      pbVar3 = pbVar3 + ((dword)((int)-in_RBX >> 0x3f) & 1);
    }
    if (newLen == 0) {
      return;
    }
    if (((*puVar2 == 0x2e) || (puVar2[newLen - 1] == 0x2e)) ||
       (s.cap = (int)in_stack_ffffffffffffff90, s.array = in_stack_ffffffffffffff80.str,
       s.len = in_stack_ffffffffffffff80.len, sep.cap = in_stack_ffffffffffffffa8,
       sep.array = (uint8 *)in_stack_ffffffffffffff98._0_8_,
       sep.len = in_stack_ffffffffffffff98._8_8_, bytes_Index(s,sep,(int)puVar2),
       extraout_RAX_01 != -1)) {
      return;
    }
  }
  if ((in_RBX != 0) && (*pbVar3 == 0x40)) {
    reverseLabels.len = in_stack_ffffffffffffff98._0_8_;
    reverseLabels.cap = in_stack_ffffffffffffff98._8_8_;
    reverseLabels.array = in_stack_ffffffffffffff90;
    crypto_x509_domainToReverseLabels
              (in_stack_ffffffffffffff80,reverseLabels,
               (bool)(((byte)((int)-(in_RBX - 1) >> 0x3f) & 1) + (char)pbVar3));
    if (extraout_DIL == '\0') {
      return;
    }
    runtime_slicebytetostring((runtime_tmpBuf *)0x0,puVar2,newLen,in_stack_ffffffffffffff80);
    return;
  }
  return;
}



void crypto_x509_domainToReverseLabels(string domain,__string reverseLabels,bool ok)

{
  byte bVar1;
  runtime_slice ~r0;
  runtime_slice ~r0_00;
  int32 extraout_EAX;
  undefined7 in_register_00000001;
  int *extraout_RAX;
  int extraout_RAX_00;
  int *extraout_RAX_01;
  uint oldCap;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  uint extraout_RCX_02;
  int *oldPtr;
  uint in_RBX;
  uint extraout_RBX;
  uint extraout_RBX_00;
  int extraout_RBX_01;
  int iVar2;
  int extraout_RBX_02;
  uint newLen;
  int i_1;
  int i;
  uint extraout_R8;
  uint extraout_R8_00;
  int iVar3;
  int extraout_R9;
  int iVar4;
  int extraout_R9_00;
  int32 c;
  uint extraout_R10;
  int *extraout_R11;
  int iVar5;
  int *extraout_R11_00;
  int unaff_R14;
  string in_stack_ffffffffffffff60;
  int in_stack_ffffffffffffff70;
  int local_20;
  int *local_18;
  int *local_10;
  
  iVar2 = CONCAT71(in_register_00000001,ok);
  while (&local_20 <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
