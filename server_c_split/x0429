                a1.len = (int)in_stack_fffffffffffffec8;
                runtime_concatstring2((runtime_tmpBuf *)0x0,a0,a1,in_stack_fffffffffffffed0);
                local_a8 = extraout_RAX_10;
                runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_04);
                extraout_RAX_11[1] = ~r0_04;
                puVar7 = extraout_RAX_11;
                if (runtime_writeBarrier._0_4_ != 0) {
                  runtime_gcWriteBarrier1();
                  *extraout_R11_02 = local_a8;
                  puVar7 = extraout_RAX_12;
                }
                *puVar7 = local_a8;
                *(undefined1 **)(local_88 + 0x18) = go_itab__errors_errorString_error;
                if (runtime_writeBarrier._0_4_ != 0) {
                  runtime_gcWriteBarrier2();
                  *extraout_R11_03 = (int)extraout_RAX_13;
                  extraout_R11_03[1] = *(int *)(local_88 + 0x20);
                  puVar7 = extraout_RAX_13;
                }
                *(undefined8 **)(local_88 + 0x20) = puVar7;
                return;
              }
              prVar1 = (runtime_hmap *)((int)&local_d0->count + 1);
              if (local_c0 < prVar1) {
                    // WARNING: Subroutine does not return
                runtime_panicSliceB();
              }
              prVar10 = (runtime_hmap *)((int)local_c0 + (-1 - (int)local_d0));
              puVar14 = local_68 + ((uint)prVar1 & -(int)prVar10 >> 0x3f);
              uVar8 = local_40._0_8_;
              uVar13 = local_40._8_8_;
              uVar6 = local_48;
            }
            else {
              uVar8 = 0;
              uVar13 = 0;
              uVar6 = 0;
            }
            puVar5 = puVar11;
            local_70 = puVar14;
            if (*(int *)(local_88 + 0x28) == 0) {
              local_90 = uVar6;
              runtime_makemap_small(prVar10);
              uVar6 = extraout_RAX_05;
              if (runtime_writeBarrier._0_4_ != 0) {
                runtime_gcWriteBarrier2();
                *extraout_R11_00 = extraout_RAX_06;
                extraout_R11_00[1] = *(undefined8 *)(local_88 + 0x28);
                uVar6 = extraout_RAX_06;
              }
              *(undefined8 *)(local_88 + 0x28) = uVar6;
              uVar6 = local_90;
              puVar5 = puVar11;
            }
            local_30 = local_a0;
            uStack_28 = SUB84(prVar9,0);
            uStack_24 = (undefined4)((uint)prVar9 >> 0x20);
            local_20 = (undefined4)uVar6;
            uStack_1c = (undefined4)((uint)uVar6 >> 0x20);
            uStack_10 = uVar13;
            local_18 = (undefined  [8])uVar8;
            s_01.len = (int)prVar16;
            s_01.str = puVar5;
            runtime_mapassign_faststr
                      ((internal_abi_MapType *)&DAT_0082c620,*(runtime_hmap **)(local_88 + 0x28),
                       s_01,local_b0);
            newLen = (void *)((int)extraout_RAX_07[1] + 1);
            oldPtr = *extraout_RAX_07;
            local_78 = extraout_RAX_07;
            if (extraout_RAX_07[2] < newLen) {
              ~r0_00.len = (int)prVar16;
              ~r0_00.array = puVar5;
              ~r0_00.cap._0_1_ = uVar17;
              ~r0_00.cap._1_7_ = in_stack_fffffffffffffec1;
              runtime_growslice(oldPtr,(int)newLen,(int)extraout_RAX_07[2],1,
                                (internal_abi_Type *)&DAT_0085b8a0,~r0_00);
              local_78[2] = extraout_RCX_01;
              oldPtr = extraout_RAX_08;
              newLen = extraout_RBX_02;
              if (runtime_writeBarrier._0_4_ != 0) {
                runtime_gcWriteBarrier2();
                *extraout_R11_01 = extraout_RAX_09;
                extraout_R11_01[1] = *local_78;
                oldPtr = extraout_RAX_09;
                newLen = extraout_RBX_03;
              }
              *local_78 = oldPtr;
            }
            local_78[1] = newLen;
            iVar12 = (int)newLen * 5;
            if (runtime_writeBarrier._0_4_ != 0) {
              local_c8 = (int)newLen * 5;
              local_80 = oldPtr;
              runtime_wbMove((internal_abi_Type *)&DAT_0085b8a0,
                             (void *)((int)oldPtr + (int)newLen * 0x28 + -0x28),&local_30);
              oldPtr = local_80;
              iVar12 = local_c8;
            }
            *(uint8 **)((int)oldPtr + iVar12 * 8 + -0x28) = local_30;
            *(undefined4 *)((int)oldPtr + iVar12 * 8 + -0x20) = uStack_28;
            *(undefined4 *)((int)oldPtr + iVar12 * 8 + -0x1c) = uStack_24;
            *(undefined4 *)((int)oldPtr + iVar12 * 8 + -0x18) = local_20;
            *(undefined4 *)((int)oldPtr + iVar12 * 8 + -0x14) = uStack_1c;
            *(undefined4 *)((int)oldPtr + iVar12 * 8 + -0x10) = local_18._0_4_;
            *(undefined4 *)((int)oldPtr + iVar12 * 8 + -0xc) = local_18._4_4_;
            *(undefined4 *)((int)oldPtr + iVar12 * 8 + -8) = (undefined4)uStack_10;
            *(undefined4 *)((int)oldPtr + iVar12 * 8 + -4) = uStack_10._4_4_;
            puVar11 = local_70;
            prVar9 = prVar10;
          }
        }
        break;
      }
    }
LAB_005f8968:
    s_00.len = (int)prVar16;
    s_00.str = puVar5;
    net___file__readLine(local_60,s_00,SUB81(prVar9,0));
    puVar5 = extraout_RAX_01;
    uVar8 = extraout_RCX_00;
    prVar10 = extraout_RBX_00;
  } while( true );
}



void net_parseNSSConf_parseCriteria_func1(string f,error ~r0)

{
  string s;
  string s_00;
  string ~r0_00;
  string text;
  string text_00;
  __uint8 x;
  runtime_slice ~r0_01;
  error ~r0_02;
  error ~r0_03;
  __uint8 ~r0_04;
  char extraout_AL;
  uint8 *in_RAX;
  int eq;
  uint8 *extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *puVar1;
  void *extraout_RAX_01;
  void *extraout_RAX_02;
  __net_nssCriterion *_c;
  void *extraout_RCX;
  bool not;
  int in_RDX;
  void **ppvVar2;
  void *in_RBX;
  int n;
  void *extraout_RBX;
  void *pvVar3;
  void *extraout_RBX_00;
  void *extraout_RBX_01;
  void **extraout_R11;
  int unaff_R14;
  undefined4 uVar4;
  undefined4 uVar5;
  uint8 *in_stack_ffffffffffffff30;
  int in_stack_ffffffffffffff38;
  void *pvVar6;
  undefined in_stack_ffffffffffffff40;
  undefined uVar7;
  undefined7 in_stack_ffffffffffffff41;
  void *in_stack_ffffffffffffff48;
  int in_stack_ffffffffffffff50;
  uint8 local_70 [32];
  uint8 *local_50;
  void *local_48;
  uint8 *local_40;
  void **local_38;
  undefined local_30;
  undefined7 uStack_2f;
  undefined4 uStack_28;
  undefined4 uStack_24;
  undefined4 local_20;
  undefined4 uStack_1c;
  undefined local_18 [8];
  undefined8 uStack_10;
  
  while (&local_50 <= *(uint8 ***)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  local_38 = *(void ***)(in_RDX + 8);
  if (in_RBX == (void *)0x0) {
    not = false;
  }
  else if (*in_RAX == 0x21) {
    in_RBX = (void *)((int)in_RBX + -1);
    in_RAX = in_RAX + ((dword)(-(int)in_RBX >> 0x3f) & 1);
    not = true;
  }
  else {
    not = false;
  }
  if ((int)in_RBX < 3) {
    text_00.len = in_stack_ffffffffffffff38;
    text_00.str = in_stack_ffffffffffffff30;
    ~r0_03.tab._1_7_ = in_stack_ffffffffffffff41;
    ~r0_03.tab._0_1_ = in_stack_ffffffffffffff40;
    ~r0_03.data = in_stack_ffffffffffffff48;
    errors_New(text_00,~r0_03);
    return;
  }
  uVar7 = 0x3d;
  pvVar6 = in_RBX;
  local_40 = in_RAX;
  internal_bytealg_IndexByteString();
  uVar4 = 0;
  uVar5 = 0;
  if (in_stack_ffffffffffffff48 == (void *)0xffffffffffffffff) {
    text.len = (int)pvVar6;
    text.str = in_RAX;
    ~r0_02.tab._1_7_ = in_stack_ffffffffffffff41;
    ~r0_02.tab._0_1_ = uVar7;
    ~r0_02.data = (void *)0xffffffffffffffff;
    errors_New(text,~r0_02);
    return;
  }
  s.len = (int)pvVar6;
  s.str = in_RAX;
  pvVar3 = in_stack_ffffffffffffff48;
  net_hasUpperCase(s,SUB81(local_40,0));
  puVar1 = local_40;
  if (extraout_AL != '\0') {
    s_00.len = (int)pvVar6;
    s_00.str = in_RAX;
    ~r0_04.array._1_7_ = in_stack_ffffffffffffff41;
    ~r0_04.array._0_1_ = uVar7;
    ~r0_04.len = (int)pvVar3;
    ~r0_04.cap = in_stack_ffffffffffffff50;
    runtime_stringtoslicebyte(&local_70,s_00,~r0_04);
    x.len = (int)pvVar6;
    x.array = in_RAX;
    x.cap._0_1_ = uVar7;
    x.cap._1_7_ = in_stack_ffffffffffffff41;
    local_50 = extraout_RAX;
    net_lowerASCIIBytes(x);
    ~r0_00.len = (int)pvVar6;
    ~r0_00.str = in_RAX;
    runtime_slicebytetostring((runtime_tmpBuf *)0x0,local_50,n,~r0_00);
    puVar1 = extraout_RAX_00;
    in_RBX = extraout_RBX;
  }
  if (in_RBX < in_stack_ffffffffffffff48) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  if (in_RBX < (void *)((int)in_stack_ffffffffffffff48 + 1U)) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  uStack_2f = (undefined7)(CONCAT44(uVar5,uVar4) >> 8);
  uStack_28 = SUB84(puVar1,0);
  uStack_24 = (undefined4)((uint)puVar1 >> 0x20);
  local_20 = SUB84(in_stack_ffffffffffffff48,0);
  uStack_1c = (undefined4)((uint)in_stack_ffffffffffffff48 >> 0x20);
  uStack_10 = (int)in_RBX + (-1 - (int)in_stack_ffffffffffffff48);
  local_18 = (undefined  [8])
             (puVar1 + (-uStack_10 >> 0x3f & (uint)(void *)((int)in_stack_ffffffffffffff48 + 1U)));
  pvVar3 = (void *)((int)local_38[1] + 1);
  local_48 = *local_38;
  ppvVar2 = local_38;
  local_30 = not;
  if (local_38[2] < pvVar3) {
    ~r0_01.len = (int)pvVar6;
    ~r0_01.array = in_RAX;
    ~r0_01.cap._0_1_ = uVar7;
    ~r0_01.cap._1_7_ = in_stack_ffffffffffffff41;
    runtime_growslice(local_48,(int)pvVar3,(int)local_38[2],1,(internal_abi_Type *)&DAT_00871d20,
                      ~r0_01);
    local_38[2] = extraout_RCX;
    local_48 = extraout_RAX_01;
    ppvVar2 = local_38;
    pvVar3 = extraout_RBX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_02;
      extraout_R11[1] = *ppvVar2;
      local_48 = extraout_RAX_02;
      pvVar3 = extraout_RBX_01;
    }
    *ppvVar2 = local_48;
  }
  ppvVar2[1] = pvVar3;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_wbMove((internal_abi_Type *)&DAT_00871d20,
                   (void *)((int)local_48 + (int)pvVar3 * 0x28 + -0x28),&local_30);
  }
  *(uint *)((int)local_48 + (int)pvVar3 * 0x28 + -0x28) = CONCAT71(uStack_2f,local_30);
  *(undefined4 *)((int)local_48 + (int)pvVar3 * 0x28 + -0x20) = uStack_28;
  *(undefined4 *)((int)local_48 + (int)pvVar3 * 0x28 + -0x1c) = uStack_24;
  *(undefined4 *)((int)local_48 + (int)pvVar3 * 0x28 + -0x18) = local_20;
  *(undefined4 *)((int)local_48 + (int)pvVar3 * 0x28 + -0x14) = uStack_1c;
  *(undefined4 *)((int)local_48 + (int)pvVar3 * 0x28 + -0x10) = local_18._0_4_;
  *(undefined4 *)((int)local_48 + (int)pvVar3 * 0x28 + -0xc) = local_18._4_4_;
  *(undefined4 *)((int)local_48 + (int)pvVar3 * 0x28 + -8) = (undefined4)uStack_10;
  *(undefined4 *)((int)local_48 + (int)pvVar3 * 0x28 + -4) = uStack_10._4_4_;
  return;
}



int net___file__close(int __fd)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (*(int **)__fd != (int *)0x0) {
    __fd = os___file__close(**(int **)__fd);
  }
  return __fd;
}



void net___file__getLineFromData(net_file *f,string s,bool ok)

{
  uint uVar1;
  size_t __n;
  int i;
  uint8 *ptr;
  uint uVar2;
  net_file *extraout_RSI;
  uint uVar3;
  int n;
  uint8 **extraout_R11;
  int unaff_R14;
  string in_stack_ffffffffffffffa8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ptr = (f->data).array;
  __n = (f->data).len;
  i = 0;
  while( true ) {
    if ((int)__n <= i) {
      if ((f->atEOF != false) && (__n != 0)) {
        runtime_slicebytetostring((runtime_tmpBuf *)0x0,ptr,__n,in_stack_ffffffffffffffa8);
        (f->data).len = 0;
      }
      return;
    }
    if (ptr[i] == 10) break;
    i = i + 1;
  }
  uVar1 = (f->data).cap;
  runtime_slicebytetostring((runtime_tmpBuf *)0x0,ptr,i,in_stack_ffffffffffffffa8);
  uVar3 = (__n - i) - 1;
  uVar2 = i + 1U & (int)-((uVar1 - i) + -1) >> 0x3f;
  if ((int)uVar3 < (int)__n) {
    __n = uVar3;
  }
  if (uVar2 != 0) {
    runtime_memmove(ptr,ptr + uVar2,__n);
  }
  if (uVar1 < uVar3) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  (f->data).len = uVar3;
  (f->data).cap = uVar1;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = ptr;
    extraout_R11[1] = (extraout_RSI->data).array;
    f = extraout_RSI;
  }
  (f->data).array = ptr;
  return;
}



void net___file__readLine(net_file *f,string s,bool ok)

{
  error err;
  char extraout_AL;
  char cVar1;
  char extraout_AL_00;
  int extraout_RAX;
  int n;
  char extraout_CL;
  void *x;
  undefined extraout_BL;
  runtime_itab *tab;
  runtime_itab *extraout_RBX;
  runtime_itab *prVar2;
  uint extraout_RBX_00;
  undefined uVar3;
  undefined extraout_DIL;
  uint extraout_RDI;
  uint uVar4;
  int unaff_R14;
  string in_stack_ffffffffffffffb0;
  __uint8 in_stack_ffffffffffffffc0;
  runtime_itab *in_stack_ffffffffffffffd8;
  void *pvVar5;
  
  uVar4 = (uint)ok;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    uVar4 = extraout_RBX_00;
  }
  net___file__getLineFromData(f,in_stack_ffffffffffffffb0,SUB81(uVar4,0));
  if (extraout_CL != '\0') {
    return;
  }
  pvVar5 = (void *)(f->data).len;
  uVar3 = extraout_BL;
  if ((int)pvVar5 < (f->data).cap) {
    err.data = pvVar5;
    err.tab = in_stack_ffffffffffffffd8;
    io_ReadAtLeast((io_Reader)in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc0,0x95e260,
                   (int)f->file,err);
    uVar4 = extraout_RDI;
    if (-1 < extraout_RAX) {
      uVar4 = (int)pvVar5 + extraout_RAX;
      if ((uint)(f->data).cap < uVar4) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
      (f->data).len = uVar4;
    }
    uVar3 = (undefined)uVar4;
    if (io_EOF.tab == tab) {
      runtime_ifaceeq(tab,x,io_EOF.data,(bool)uVar3);
      uVar3 = extraout_DIL;
      cVar1 = extraout_AL;
    }
    else {
      cVar1 = '\0';
    }
    prVar2 = tab;
    if (cVar1 == '\0') {
      if (io_ErrUnexpectedEOF.tab == tab) {
        runtime_ifaceeq(tab,x,io_ErrUnexpectedEOF.data,(bool)uVar3);
        prVar2 = extraout_RBX;
        cVar1 = extraout_AL_00;
      }
      else {
        cVar1 = '\0';
      }
      uVar3 = SUB81(prVar2,0);
      if (cVar1 == '\0') goto LAB_005f9775;
    }
    uVar3 = SUB81(prVar2,0);
    f->atEOF = true;
  }
LAB_005f9775:
  net___file__getLineFromData(f,in_stack_ffffffffffffffb0,(bool)uVar3);
  return;
}



int net___file__stat(char *__file,stat *__buf)

{
  io_fs_FileInfo ~r0;
  error ~r1;
  int extraout_RAX;
  int iVar1;
  int extraout_RCX;
  undefined8 extraout_RBX;
  int unaff_R14;
  runtime_itab *in_stack_ffffffffffffffc8;
  void *in_stack_ffffffffffffffd0;
  int iVar2;
  runtime_itab *in_stack_ffffffffffffffd8;
  void *in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0.data = in_stack_ffffffffffffffd0;
  ~r0.tab = in_stack_ffffffffffffffc8;
  ~r1.data = in_stack_ffffffffffffffe0;
  ~r1.tab = in_stack_ffffffffffffffd8;
  os___File__Stat(*(os_File **)__file,~r0,~r1);
  if (extraout_RCX != 0) {
    return 0;
  }
  iVar2 = extraout_RAX;
  iVar1 = (**(code **)(extraout_RAX + 0x20))(extraout_RBX);
  (**(code **)(iVar2 + 0x38))(extraout_RBX);
  return iVar1;
}



int net_open(char *__file,int __oflag,...)

{
  undefined8 extraout_RAX;
  os_File *fd;
  undefined8 extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *puVar1;
  int extraout_RBX;
  void *~r0;
  void *~r0_00;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  char *pcStack0000000000000008;
  string in_stack_ffffffffffffffc8;
  error in_stack_ffffffffffffffd8;
  
  pcStack0000000000000008 = __file;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  os_OpenFile(in_stack_ffffffffffffffc8,(int)pcStack0000000000000008,(io_fs_FileMode)__oflag,
              (os_File *)0x0,in_stack_ffffffffffffffd8);
  if (extraout_RBX != 0) {
    return 0;
  }
  runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,0x10000,~r0_00);
  runtime_newobject((internal_abi_Type *)&DAT_0085df40,~r0);
  puVar1 = extraout_RAX_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RAX;
    puVar1 = extraout_RAX_02;
  }
  *puVar1 = extraout_RAX;
  puVar1[2] = 0;
  puVar1[3] = 0x10000;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = extraout_RAX_00;
    puVar1 = extraout_RAX_03;
  }
  puVar1[1] = extraout_RAX_00;
  *(undefined *)(puVar1 + 4) = 0;
  return (int)puVar1;
}



int net_stat(char *__file,stat *__buf)

{
  io_fs_FileInfo ~r0;
  error ~r1;
  int extraout_RAX;
  int iVar1;
  int extraout_RCX;
  undefined8 extraout_RBX;
  int unaff_R14;
  char *pcStack0000000000000008;
  string in_stack_ffffffffffffffc0;
  runtime_itab *in_stack_ffffffffffffffd0;
  int iVar2;
  void *in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_ffffffffffffffe0;
  void *in_stack_ffffffffffffffe8;
  undefined8 uVar3;
  
  pcStack0000000000000008 = __file;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0.data = in_stack_ffffffffffffffd8;
  ~r0.tab = in_stack_ffffffffffffffd0;
  ~r1.data = in_stack_ffffffffffffffe8;
  ~r1.tab = in_stack_ffffffffffffffe0;
  os_Stat(in_stack_ffffffffffffffc0,~r0,~r1);
  if (extraout_RCX != 0) {
    return 0;
  }
  iVar2 = extraout_RAX;
  uVar3 = extraout_RBX;
  iVar1 = (**(code **)(extraout_RAX + 0x20))(extraout_RBX);
  (**(code **)(iVar2 + 0x38))(uVar3);
  return iVar1;
}



void net_countAnyByte(string s,string t,int ~r0)

{
  int iVar1;
  int in_RBX;
  int unaff_R14;
  int n;
  int i;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  for (iVar1 = 0; iVar1 < in_RBX; iVar1 = iVar1 + 1) {
    internal_bytealg_IndexByteString();
  }
  return;
}



void net_splitAtBytes(string s,string t,__string ~r0)

{
  string s_00;
  string t_00;
  int in_RAX;
  int extraout_RAX;
  int extraout_RAX_00;
  int iVar1;
  int extraout_RAX_01;
  int extraout_RAX_02;
  int iVar2;
  uint extraout_RCX;
  uint len;
  uint uVar3;
  uint in_RBX;
  uint uVar4;
  int extraout_RBX;
  uint uVar5;
  uint extraout_RSI;
  int iVar6;
  int extraout_RSI_00;
  void *~r0_00;
  uint extraout_R8;
  int extraout_R9;
  uint extraout_R10;
  int *extraout_R11;
  int *extraout_R11_00;
  int unaff_R14;
  uint8 *in_stack_ffffffffffffffb0;
  int in_stack_ffffffffffffffb8;
  undefined in_stack_ffffffffffffffc0;
  undefined7 in_stack_ffffffffffffffc1;
  int in_stack_ffffffffffffffc8;
  int n;
  int last;
  int i;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  s_00.len = in_stack_ffffffffffffffb8;
  s_00.str = in_stack_ffffffffffffffb0;
  t_00.str._1_7_ = in_stack_ffffffffffffffc1;
  t_00.str._0_1_ = in_stack_ffffffffffffffc0;
  t_00.len = in_stack_ffffffffffffffc8;
  net_countAnyByte(s_00,t_00,in_RAX);
  len = extraout_RAX + 1;
  runtime_makeslice((internal_abi_Type *)&DAT_008075e0,len,len,~r0_00);
  uVar5 = 0;
  uVar3 = 0;
  uVar4 = 0;
  iVar2 = extraout_RAX_00;
  do {
    if ((int)in_RBX <= (int)uVar5) {
      if ((int)uVar3 < (int)in_RBX) {
        if (in_RBX < uVar3) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        iVar6 = in_RAX + (uVar3 & (int)-(in_RBX - uVar3) >> 0x3f);
        if (len <= uVar4) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        iVar1 = uVar4 * 0x10;
        *(uint *)(iVar2 + 8 + iVar1) = in_RBX - uVar3;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_00 = extraout_RSI_00;
          extraout_R11_00[1] = *(int *)(extraout_RAX_02 + extraout_RBX);
          iVar2 = extraout_RAX_02;
          len = extraout_RCX;
          iVar1 = extraout_RBX;
          iVar6 = extraout_RSI_00;
          uVar4 = extraout_R8;
        }
        *(int *)(iVar2 + iVar1) = iVar6;
        uVar4 = uVar4 + 1;
      }
      if (len < uVar4) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
      return;
    }
    internal_bytealg_IndexByteString();
    iVar2 = extraout_RAX_00;
    if (-1 < in_stack_ffffffffffffffc8) {
      if ((int)uVar3 < (int)uVar5) {
        if (uVar5 < uVar3) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        iVar6 = in_RAX + (uVar3 & (int)-(uVar5 - uVar3) >> 0x3f);
        if (len <= uVar4) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        iVar1 = uVar4 * 0x10;
        *(uint *)(extraout_RAX_00 + 8 + iVar1) = uVar5 - uVar3;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11 = extraout_R9;
          extraout_R11[1] = *(int *)(iVar2 + extraout_RAX_01);
          iVar1 = extraout_RAX_01;
          uVar5 = extraout_RSI;
          iVar6 = extraout_R9;
          uVar4 = extraout_R10;
        }
        *(int *)(iVar2 + iVar1) = iVar6;
        uVar4 = uVar4 + 1;
      }
      uVar3 = uVar5 + 1;
    }
    uVar5 = uVar5 + 1;
  } while( true );
}



void net_hasUpperCase(string s,bool ~r0)

{
  byte *pbVar1;
  undefined7 in_register_00000001;
  int k;
  int i;
  int iVar2;
  uint in_RBX;
  int extraout_RBX;
  int unaff_R14;
  string in_stack_ffffffffffffffd8;
  
  k = CONCAT71(in_register_00000001,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  i = 0;
  while( true ) {
    if ((int)in_RBX <= i) {
      return;
    }
    if (*(byte *)(k + i) < 0x80) {
      iVar2 = i + 1;
    }
    else {
      runtime_decoderune(in_stack_ffffffffffffffd8,k,(int32)in_RBX,i);
      iVar2 = extraout_RBX;
    }
    if (in_RBX <= (uint)i) break;
    pbVar1 = (byte *)(k + i);
    i = iVar2;
    if ((0x40 < *pbVar1) && (*pbVar1 < 0x5b)) {
      return;
    }
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void net_lowerASCIIBytes(__uint8 x)

{
  int in_RAX;
  int i;
  uint8 b;
  int in_RBX;
  
  for (i = 0; i < in_RBX; i = i + 1) {
    if ((byte)(*(char *)(in_RAX + i) + 0xbfU) < 0x1a) {
      *(char *)(in_RAX + i) = *(char *)(in_RAX + i) + ' ';
    }
  }
  return;
}



void net_foreachField(string x,func_string__error **fn,error ~r0)

{
  char cVar1;
  int iVar2;
  func_string__error **ppfVar3;
  code **in_RCX;
  int sp;
  uint uVar4;
  uint in_RBX;
  int unaff_R14;
  uint local_28;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  for (; (in_RBX != 0 &&
         ((((cVar1 = *(char *)fn, cVar1 == ' ' || (cVar1 == '\t')) || (cVar1 == '\n')) ||
          (cVar1 == '\r'))));
      fn = (func_string__error **)((int)fn + (uint)((dword)((int)-in_RBX >> 0x3f) & 1))) {
    in_RBX = in_RBX - 1;
  }
  for (; (in_RBX != 0 &&
         (((cVar1 = *(char *)((int)fn + (in_RBX - 1)), cVar1 == ' ' || (cVar1 == '\t')) ||
          ((cVar1 == '\n' || (cVar1 == '\r')))))); in_RBX = in_RBX - 1) {
  }
  do {
    if (in_RBX == 0) {
      return;
    }
    internal_bytealg_IndexByteString();
    if (local_28 == 0xffffffffffffffff) {
      (**in_RCX)(fn,in_RBX);
      return;
    }
    ppfVar3 = fn;
    uVar4 = local_28;
    if (in_RBX < local_28) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    while ((uVar4 != 0 &&
           (((cVar1 = *(char *)ppfVar3, cVar1 == ' ' || (cVar1 == '\t')) ||
            ((cVar1 == '\n' || (cVar1 == '\r'))))))) {
      ppfVar3 = (func_string__error **)
                ((int)ppfVar3 + (uint)((dword)((int)-(uVar4 - 1) >> 0x3f) & 1));
      uVar4 = uVar4 - 1;
    }
    for (; uVar4 != 0; uVar4 = uVar4 - 1) {
      cVar1 = *(char *)((int)ppfVar3 + (uVar4 - 1));
      if ((((cVar1 != ' ') && (cVar1 != '\t')) && (cVar1 != '\n')) && (cVar1 != '\r')) {
        if ((uVar4 != 0) && (iVar2 = (**in_RCX)(ppfVar3,uVar4), iVar2 != 0)) {
          return;
        }
        break;
      }
    }
    if (in_RBX < local_28 + 1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    in_RBX = (in_RBX - local_28) - 1;
    for (fn = (func_string__error **)(((int)-in_RBX >> 0x3f & local_28 + 1) + (int)fn);
        (in_RBX != 0 &&
        (((cVar1 = *(char *)fn, cVar1 == ' ' || (cVar1 == '\t')) ||
         ((cVar1 == '\n' || (cVar1 == '\r'))))));
        fn = (func_string__error **)((int)fn + (uint)((dword)((int)-in_RBX >> 0x3f) & 1))) {
      in_RBX = in_RBX - 1;
    }
    for (; (in_RBX != 0 &&
           ((((cVar1 = *(char *)((in_RBX - 1) + (int)fn), cVar1 == ' ' || (cVar1 == '\t')) ||
             (cVar1 == '\n')) || (cVar1 == '\r')))); in_RBX = in_RBX - 1) {
    }
  } while( true );
}



void net_stringsHasSuffixFold(string s,string suffix,bool ~r0)

{
  undefined7 in_register_00000001;
  int i;
  int in_RCX;
  int iVar1;
  char cVar2;
  uint in_RBX;
  uint uVar3;
  char cVar4;
  int in_RDI;
  
  if (in_RDI <= (int)in_RBX) {
    uVar3 = in_RBX - in_RDI;
    if (in_RBX < uVar3) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    iVar1 = in_RBX - uVar3;
    if (in_RDI == iVar1) {
      for (i = 0; i < iVar1; i = i + 1) {
        cVar2 = *(char *)(i + CONCAT71(in_register_00000001,~r0) + (uVar3 & -iVar1 >> 0x3f));
        if ((byte)(cVar2 + 0xbfU) < 0x1a) {
          cVar2 = cVar2 + ' ';
        }
        cVar4 = *(char *)(i + in_RCX);
        if ((byte)(cVar4 + 0xbfU) < 0x1a) {
          cVar4 = cVar4 + ' ';
        }
        if (cVar2 != cVar4) {
          return;
        }
      }
    }
  }
  return;
}



void net_parsePort(string service,int port,bool needsLookup)

{
  int32 extraout_EAX;
  int pos;
  dword dVar1;
  dword dVar2;
  undefined7 in_register_00000019;
  int iVar3;
  int extraout_RBX;
  bool neg;
  uint32 n;
  int32 d;
  uint32 nn;
  int unaff_R14;
  string in_stack_ffffffffffffffc8;
  
  iVar3 = CONCAT71(in_register_00000019,needsLookup);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (iVar3 == 0) {
    return;
  }
  if (*(char *)port == '+') {
    iVar3 = iVar3 + -1;
    port = (uint)((dword)(-iVar3 >> 0x3f) & 1) + port;
  }
  else if (*(char *)port == '-') {
    iVar3 = iVar3 + -1;
    port = port + (uint)((dword)(-iVar3 >> 0x3f) & 1);
  }
  pos = 0;
  dVar1 = 0;
  do {
    if (iVar3 <= pos) {
      return;
    }
    d = (int32)*(byte *)(port + pos);
    if (*(byte *)(port + pos) < 0x80) {
      pos = pos + 1;
    }
    else {
      runtime_decoderune(in_stack_ffffffffffffffc8,port,(int32)iVar3,pos);
      pos = extraout_RBX;
      d = extraout_EAX;
    }
    if (9 < (dword)(d - 0x30U)) {
      return;
    }
    if (0x3fffffff < dVar1) {
      return;
    }
    dVar2 = dVar1 * 10;
    dVar1 = (d + dVar1 * 10) - 0x30;
  } while (dVar2 <= dVar1);
  return;
}



// WARNING: Unknown calling convention

void net_readServices(void)

{
  void *~r0;
  byte bVar1;
  string s;
  string s_00;
  string s_01;
  string ky;
  string s_02;
  string s_03;
  string t;
  __string ~r0_00;
  bool bVar2;
  net_file *f;
  net_file *file;
  uint8 *extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *puVar3;
  int extraout_RAX_01;
  runtime_hmap *~r0_01;
  runtime_hmap *extraout_RAX_02;
  runtime_hmap **extraout_RAX_03;
  runtime_hmap **extraout_RAX_04;
