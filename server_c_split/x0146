


void time___Time__ISOWeek(int year,int week)

{
  int *piVar1;
  int unaff_R14;
  int *in_stack_00000008;
  time_Time in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = (int *)year;
    runtime_morestack_noctxt();
    year = (int)in_stack_00000008;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffe0;
  }
  if ((int *)year != (int *)0x0) {
    time_Time_ISOWeek(in_stack_ffffffffffffffe0,*(int *)year,*(int *)(year + 8));
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__In(time_Location *loc,time_Time ~r0)

{
  time_Time **pptVar1;
  int in_RBX;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.wall = (uint64)loc;
    ~r0.ext = in_RBX;
    runtime_morestack_noctxt();
    loc = (time_Location *)~r0.wall;
    in_RBX = ~r0.ext;
  }
  pptVar1 = *(time_Time ***)(unaff_R14 + 0x20);
  if ((pptVar1 != (time_Time **)0x0) && (*pptVar1 == &~r0)) {
    *pptVar1 = (time_Time *)&stack0xffffffffffffffd0;
  }
  if (loc != (time_Location *)0x0) {
    if (in_RBX != 0) {
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffd0);
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__IsDST(bool ~r0)

{
  int *piVar1;
  undefined7 in_register_00000001;
  undefined8 *puVar2;
  int unaff_R14;
  undefined8 *in_stack_00000008;
  time_Time in_stack_ffffffffffffffe0;
  
  puVar2 = (undefined8 *)CONCAT71(in_register_00000001,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = puVar2;
    runtime_morestack_noctxt();
    puVar2 = in_stack_00000008;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined8 **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffe0;
  }
  if (puVar2 != (undefined8 *)0x0) {
    time_Time_IsDST(in_stack_ffffffffffffffe0,SUB81(*puVar2,0));
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__IsZero(bool ~r0)

{
  int *piVar1;
  undefined7 in_register_00000001;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (CONCAT71(in_register_00000001,~r0) != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__Local(time_Time ~r0)

{
  time_Time **pptVar1;
  int in_RAX;
  int unaff_R14;
  time_Time local_20;
  
  pptVar1 = *(time_Time ***)(unaff_R14 + 0x20);
  if ((pptVar1 != (time_Time **)0x0) && (*pptVar1 == &~r0)) {
    *pptVar1 = &local_20;
  }
  if (in_RAX != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__Location(time_Location *~r0)

{
  int *piVar1;
  time_Location *l;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (time_Location *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void time___Time__MarshalBinary(__uint8 ~r0,error ~r1)

{
  __uint8 **pp_Var1;
  __uint8 ~r0_00;
  uint8 *in_RAX;
  uint8 *unaff_RBP;
  int unaff_R14;
  undefined8 unaff_retaddr;
  __uint8 in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.array = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.array;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &~r0)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffe0;
  }
  if (in_RAX != (uint8 *)0x0) {
    ~r0_00.cap = (int)~r0.array;
    ~r0_00.len = unaff_retaddr;
    ~r0_00.array = unaff_RBP;
    time_Time_MarshalBinary((time_Time)in_stack_ffffffffffffffe0,~r0_00,(error)~r0._8_16_);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void time___Time__MarshalJSON(__uint8 ~r0,error ~r1)

{
  __uint8 **pp_Var1;
  __uint8 ~r0_00;
  uint8 *in_RAX;
  uint8 *unaff_RBP;
  int unaff_R14;
  undefined8 unaff_retaddr;
  __uint8 in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.array = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.array;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &~r0)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffe0;
  }
  if (in_RAX != (uint8 *)0x0) {
    ~r0_00.cap = (int)~r0.array;
    ~r0_00.len = unaff_retaddr;
    ~r0_00.array = unaff_RBP;
    time_Time_MarshalJSON((time_Time)in_stack_ffffffffffffffe0,~r0_00,(error)~r0._8_16_);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void time___Time__MarshalText(__uint8 ~r0,error ~r1)

{
  __uint8 **pp_Var1;
  __uint8 ~r0_00;
  uint8 *in_RAX;
  uint8 *unaff_RBP;
  int unaff_R14;
  undefined8 unaff_retaddr;
  __uint8 in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.array = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.array;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &~r0)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffe0;
  }
  if (in_RAX != (uint8 *)0x0) {
    ~r0_00.cap = (int)~r0.array;
    ~r0_00.len = unaff_retaddr;
    ~r0_00.array = unaff_RBP;
    time_Time_MarshalText((time_Time)in_stack_ffffffffffffffe0,~r0_00,(error)~r0._8_16_);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__Minute(int ~r0)

{
  int *piVar1;
  int unaff_R14;
  int *in_stack_00000008;
  undefined auStack_20 [24];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = (int *)~r0;
    runtime_morestack_noctxt();
    ~r0 = (int)in_stack_00000008;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_20;
  }
  if ((int *)~r0 != (int *)0x0) {
    time_Time_abs(*(int *)~r0);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__Month(time_Month ~r0)

{
  int *piVar1;
  time_Month month;
  int in_RSI;
  int extraout_RSI;
  int unaff_R14;
  undefined8 *in_stack_00000008;
  time_Time in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = (undefined8 *)~r0;
    runtime_morestack_noctxt();
    ~r0 = (time_Month)in_stack_00000008;
    in_RSI = extraout_RSI;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined8 **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffd8;
  }
  if ((undefined8 *)~r0 != (undefined8 *)0x0) {
    time_Time_date(in_stack_ffffffffffffffd8,SUB81(*(undefined8 *)~r0,0),*(int *)(~r0 + 8),
                   *(time_Month *)(~r0 + 0x10),1,in_RSI);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__Nanosecond(int ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void time___Time__Round(time_Duration d,time_Time ~r0)

{
  time_Time **pptVar1;
  time_Time ~r0_00;
  int64 in_RBX;
  undefined8 unaff_RBP;
  int unaff_R14;
  time_Location *unaff_retaddr;
  time_Time in_stack_ffffffffffffffd8;
  undefined8 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.wall = d;
    ~r0.ext = in_RBX;
    runtime_morestack_noctxt();
    d = ~r0.wall;
    in_RBX = ~r0.ext;
  }
  pptVar1 = *(time_Time ***)(unaff_R14 + 0x20);
  if ((pptVar1 != (time_Time **)0x0) && (*pptVar1 == &~r0)) {
    *pptVar1 = (time_Time *)&stack0xffffffffffffffd8;
  }
  if ((time_Duration *)d != (time_Duration *)0x0) {
    ~r0_00.ext = unaff_RBP;
    ~r0_00.wall = in_stack_fffffffffffffff0;
    ~r0_00.loc = unaff_retaddr;
    time_Time_Round(in_stack_ffffffffffffffd8,*(time_Duration *)d,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__Second(int ~r0)

{
  int *piVar1;
  int unaff_R14;
  int *in_stack_00000008;
  undefined auStack_20 [24];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = (int *)~r0;
    runtime_morestack_noctxt();
    ~r0 = (int)in_stack_00000008;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_20;
  }
  if ((int *)~r0 != (int *)0x0) {
    time_Time_abs(*(int *)~r0);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void time___Time__String(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  uint8 *in_RAX;
  uint8 *unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  time_Time in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffe0;
  }
  if (in_RAX != (uint8 *)0x0) {
    ~r0_00.len = unaff_retaddr;
    ~r0_00.str = unaff_RBP;
    time_Time_String(in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__Sub(time_Time u,time_Duration ~r0)

{
  time_Time **pptVar1;
  time_Location *in_RCX;
  int64 in_RBX;
  int unaff_R14;
  time_Time in_stack_ffffffffffffffc8;
  time_Time in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    u.wall = ~r0;
    u.ext = in_RBX;
    u.loc = in_RCX;
    runtime_morestack_noctxt();
    ~r0 = u.wall;
    in_RCX = u.loc;
    in_RBX = u.ext;
  }
  pptVar1 = *(time_Time ***)(unaff_R14 + 0x20);
  if ((pptVar1 != (time_Time **)0x0) && (*pptVar1 == &u)) {
    *pptVar1 = (time_Time *)&stack0xffffffffffffffc8;
  }
  if ((time_Duration *)~r0 != (time_Duration *)0x0) {
    time_Time_Sub(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffe0,*(time_Duration *)~r0);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void time___Time__Truncate(time_Duration d,time_Time ~r0)

{
  time_Time **pptVar1;
  time_Time ~r0_00;
  int64 in_RBX;
  undefined8 unaff_RBP;
  int unaff_R14;
  time_Location *unaff_retaddr;
  time_Time in_stack_ffffffffffffffd8;
  undefined8 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.wall = d;
    ~r0.ext = in_RBX;
    runtime_morestack_noctxt();
    d = ~r0.wall;
    in_RBX = ~r0.ext;
  }
  pptVar1 = *(time_Time ***)(unaff_R14 + 0x20);
  if ((pptVar1 != (time_Time **)0x0) && (*pptVar1 == &~r0)) {
    *pptVar1 = (time_Time *)&stack0xffffffffffffffd8;
  }
  if ((time_Duration *)d != (time_Duration *)0x0) {
    ~r0_00.ext = unaff_RBP;
    ~r0_00.wall = in_stack_fffffffffffffff0;
    ~r0_00.loc = unaff_retaddr;
    time_Time_Truncate(in_stack_ffffffffffffffd8,*(time_Duration *)d,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__UTC(time_Time ~r0)

{
  time_Time **pptVar1;
  int in_RAX;
  int unaff_R14;
  time_Time local_20;
  
  pptVar1 = *(time_Time ***)(unaff_R14 + 0x20);
  if ((pptVar1 != (time_Time **)0x0) && (*pptVar1 == &~r0)) {
    *pptVar1 = &local_20;
  }
  if (in_RAX != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__Unix(int64 ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__UnixMicro(int64 ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__UnixMilli(int64 ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__UnixNano(int64 ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__Weekday(time_Weekday ~r0)

{
  int *piVar1;
  uint64 sec;
  int unaff_R14;
  int *in_stack_00000008;
  undefined auStack_20 [24];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = (int *)~r0;
    runtime_morestack_noctxt();
    ~r0 = (time_Weekday)in_stack_00000008;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_20;
  }
  if ((int *)~r0 != (int *)0x0) {
    time_Time_abs(*(int *)~r0);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__Year(int ~r0)

{
  int *piVar1;
  int year;
  int in_RSI;
  int extraout_RSI;
  int unaff_R14;
  undefined8 *in_stack_00000008;
  time_Time in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = (undefined8 *)~r0;
    runtime_morestack_noctxt();
    ~r0 = (int)in_stack_00000008;
    in_RSI = extraout_RSI;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined8 **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffd8;
  }
  if ((undefined8 *)~r0 != (undefined8 *)0x0) {
    time_Time_date(in_stack_ffffffffffffffd8,SUB81(*(undefined8 *)~r0,0),*(int *)(~r0 + 8),
                   *(time_Month *)(~r0 + 0x10),0,in_RSI);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Time__YearDay(int ~r0)

{
  int *piVar1;
  int in_RSI;
  int extraout_RSI;
  int yday;
  int unaff_R14;
  undefined8 *in_stack_00000008;
  time_Time in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = (undefined8 *)~r0;
    runtime_morestack_noctxt();
    ~r0 = (int)in_stack_00000008;
    in_RSI = extraout_RSI;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined8 **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffd8;
  }
  if ((undefined8 *)~r0 != (undefined8 *)0x0) {
    time_Time_date(in_stack_ffffffffffffffd8,SUB81(*(undefined8 *)~r0,0),*(int *)(~r0 + 8),
                   *(time_Month *)(~r0 + 0x10),0,in_RSI);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void time___Time__Zone(string name,int offset)

{
  string **ppsVar1;
  string name_00;
  uint8 *unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  time_Time in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    name.str = (uint8 *)offset;
    runtime_morestack_noctxt();
    offset = (int)name.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &name)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffe0;
  }
  if ((int *)offset != (int *)0x0) {
    name_00.len = unaff_retaddr;
    name_00.str = unaff_RBP;
    time_Time_Zone(in_stack_ffffffffffffffe0,name_00,*(int *)offset);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void time___Time__ZoneBounds(time_Time start,time_Time end)

{
  time_Time **pptVar1;
  time_Time end_00;
  time_Time start_00;
  uint64 in_RAX;
  uint64 unaff_RBP;
  int unaff_R14;
  undefined8 unaff_retaddr;
  time_Time in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    start.wall = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = start.wall;
  }
  pptVar1 = *(time_Time ***)(unaff_R14 + 0x20);
  if ((pptVar1 != (time_Time **)0x0) && (*pptVar1 == &start)) {
    *pptVar1 = (time_Time *)&stack0xffffffffffffffe0;
  }
  if (in_RAX != 0) {
    start_00.loc = (time_Location *)start.wall;
    start_00.ext = unaff_retaddr;
    start_00.wall = unaff_RBP;
    end_00.loc = (time_Location *)end.wall;
    end_00.wall = start.ext;
    end_00.ext = (int64)start.loc;
    time_Time_ZoneBounds(in_stack_ffffffffffffffe0,start_00,end_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Month__String(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  uint *in_RAX;
  int n;
  uint uVar2;
  int unaff_R14;
  undefined in_XMM15 [16];
  string in_stack_ffffffffffffffa8;
  string in_stack_ffffffffffffffb8;
  string in_stack_ffffffffffffffc8;
  undefined in_stack_ffffffffffffffd8 [12];
  undefined4 uVar3;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (uint *)~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffa8;
  }
  if (in_RAX == (uint *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  uVar2 = *in_RAX;
  if (uVar2 - 1 < 0xc) {
    if ((uint)time_longMonthNames.len <= uVar2 - 1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
  }
  else {
    uVar3 = in_XMM15._0_4_;
    if (uVar2 == 0) {
      n = 0x13;
    }
    else {
      n = 0x14;
      while (uVar2 != 0) {
        if (0x13 < n - 1U) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        (&stack0xffffffffffffffe3)[n] = (char)uVar2 + (char)(uVar2 / 10) * -10 + '0';
        uVar2 = uVar2 / 10;
        n = n - 1U;
      }
    }
    if (0x14 < (uint)n) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    ~r0_00.len._4_4_ = uVar3;
    ~r0_00._0_12_ = in_stack_ffffffffffffffd8;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffa8,in_stack_ffffffffffffffb8,
               in_stack_ffffffffffffffc8,~r0_00);
  }
  return;
}



void time___Weekday__String(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  uint *in_RAX;
  int n;
  uint uVar2;
  int unaff_R14;
  undefined in_XMM15 [16];
  string in_stack_ffffffffffffffa8;
  string in_stack_ffffffffffffffb8;
  string in_stack_ffffffffffffffc8;
  undefined in_stack_ffffffffffffffd8 [12];
  undefined4 uVar3;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (uint *)~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffa8;
  }
  if (in_RAX == (uint *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  uVar2 = *in_RAX;
  if (uVar2 < 7) {
    if ((uint)time_longDayNames.len <= uVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
  }
  else {
    uVar3 = in_XMM15._0_4_;
    if (uVar2 == 0) {
      n = 0x13;
    }
    else {
      n = 0x14;
      while (uVar2 != 0) {
        if (0x13 < n - 1U) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        (&stack0xffffffffffffffe3)[n] = (char)uVar2 + (char)(uVar2 / 10) * -10 + '0';
        uVar2 = uVar2 / 10;
        n = n - 1U;
      }
    }
    if (0x14 < (uint)n) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    ~r0_00.len._4_4_ = uVar3;
    ~r0_00._0_12_ = in_stack_ffffffffffffffd8;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffa8,in_stack_ffffffffffffffb8,
               in_stack_ffffffffffffffc8,~r0_00);
  }
  return;
}



void time___Duration__Abs(time_Duration ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  return;
}



void time___Duration__Hours(float64 ~r0)

{
  int *piVar1;
  int in_RAX;
  time_Duration nsec;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (in_RAX != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Duration__Microseconds(int64 ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Duration__Milliseconds(int64 ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void time___Duration__Minutes(float64 ~r0)

{
  int *piVar1;
  int in_RAX;
  time_Duration nsec;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (in_RAX != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}

