  }
  puVar2[7] = pvVar3;
  puVar2[8] = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_02 = ~r0_00;
    puVar2 = extraout_RAX_04;
  }
  puVar2[9] = ~r0_00;
  return;
}



void net___TCPConn__SetKeepAlivePeriod(net_TCPConn *c,time_Duration d,error ~r0)

{
  net_netFD *pnVar1;
  int extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *puVar2;
  net_TCPConn *extraout_RCX;
  net_TCPConn *extraout_RCX_00;
  void *extraout_RCX_01;
  void *pvVar3;
  uint8 *puVar4;
  void *~r0_00;
  uint8 **extraout_R11;
  void **extraout_R11_00;
  void **extraout_R11_01;
  void **extraout_R11_02;
  int unaff_R14;
  error in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((c->conn).fd == (net_netFD *)0x0) {
    return;
  }
  net_setKeepAlivePeriod((c->conn).fd,d,in_stack_ffffffffffffffd8);
  if (extraout_RAX == 0) {
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0087daa0,~r0_00);
  extraout_RAX_00[1] = 3;
  *extraout_RAX_00 = &DAT_008ae336;
  pnVar1 = (c->conn).fd;
  puVar4 = (pnVar1->net).str;
  extraout_RAX_00[3] = (pnVar1->net).len;
  puVar2 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = puVar4;
    puVar2 = extraout_RAX_01;
    c = extraout_RCX;
  }
  puVar2[2] = puVar4;
  pnVar1 = (c->conn).fd;
  pvVar3 = (pnVar1->laddr).data;
  puVar2[4] = (pnVar1->laddr).tab;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = pvVar3;
    puVar2 = extraout_RAX_02;
    c = extraout_RCX_00;
  }
  puVar2[5] = pvVar3;
  pnVar1 = (c->conn).fd;
  pvVar3 = (pnVar1->raddr).data;
  puVar2[6] = (pnVar1->raddr).tab;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_01 = extraout_RCX_01;
    puVar2 = extraout_RAX_03;
    pvVar3 = extraout_RCX_01;
  }
  puVar2[7] = pvVar3;
  puVar2[8] = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_02 = ~r0_00;
    puVar2 = extraout_RAX_04;
  }
  puVar2[9] = ~r0_00;
  return;
}



void net___TCPConn__SetNoDelay(net_TCPConn *c,bool noDelay,error ~r0)

{
  net_netFD *pnVar1;
  int extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *puVar2;
  net_TCPConn *extraout_RCX;
  net_TCPConn *extraout_RCX_00;
  void *extraout_RCX_01;
  void *pvVar3;
  uint8 *puVar4;
  void *~r0_00;
  uint8 **extraout_R11;
  void **extraout_R11_00;
  void **extraout_R11_01;
  void **extraout_R11_02;
  int unaff_R14;
  error in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((c->conn).fd == (net_netFD *)0x0) {
    return;
  }
  net_setNoDelay((c->conn).fd,noDelay,in_stack_ffffffffffffffd8);
  if (extraout_RAX == 0) {
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0087daa0,~r0_00);
  extraout_RAX_00[1] = 3;
  *extraout_RAX_00 = &DAT_008ae336;
  pnVar1 = (c->conn).fd;
  puVar4 = (pnVar1->net).str;
  extraout_RAX_00[3] = (pnVar1->net).len;
  puVar2 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = puVar4;
    puVar2 = extraout_RAX_01;
    c = extraout_RCX;
  }
  puVar2[2] = puVar4;
  pnVar1 = (c->conn).fd;
  pvVar3 = (pnVar1->laddr).data;
  puVar2[4] = (pnVar1->laddr).tab;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = pvVar3;
    puVar2 = extraout_RAX_02;
    c = extraout_RCX_00;
  }
  puVar2[5] = pvVar3;
  pnVar1 = (c->conn).fd;
  pvVar3 = (pnVar1->raddr).data;
  puVar2[6] = (pnVar1->raddr).tab;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_01 = extraout_RCX_01;
    puVar2 = extraout_RAX_03;
    pvVar3 = extraout_RCX_01;
  }
  puVar2[7] = pvVar3;
  puVar2[8] = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_02 = ~r0_00;
    puVar2 = extraout_RAX_04;
  }
  puVar2[9] = ~r0_00;
  return;
}



void net___TCPConn__MultipathTCP(net_TCPConn *c,bool ~r0,error ~r1)

{
  uint uVar1;
  uint extraout_RBX;
  int unaff_R14;
  
  uVar1 = (uint)~r0;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    uVar1 = extraout_RBX;
  }
  if ((c->conn).fd != (net_netFD *)0x0) {
    net_isUsingMultipathTCP((c->conn).fd,SUB81(uVar1,0));
    return;
  }
  return;
}



void net_newTCPConn(net_netFD *fd,time_Duration keepAlive,func_time_Duration_ **keepAliveHook,
                   net_TCPConn *~r0)

{
  net_netFD **extraout_RAX;
  net_netFD **extraout_RAX_00;
  net_netFD **ppnVar1;
  int d;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *extraout_RBX_01;
  void *~r0_00;
  net_netFD **extraout_R11;
  int unaff_R14;
  net_netFD *pnStack0000000000000008;
  time_Duration tStack0000000000000010;
  func_time_Duration_ **ppfStack0000000000000018;
  error in_stack_ffffffffffffffe0;
  
  pnStack0000000000000008 = fd;
  ppfStack0000000000000018 = keepAliveHook;
  tStack0000000000000010 = keepAlive;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  net_setNoDelay(pnStack0000000000000008,true,in_stack_ffffffffffffffe0);
  d = tStack0000000000000010;
  if (tStack0000000000000010 == 0) {
    d = 15000000000;
  }
  ~r0_00 = extraout_RBX;
  if (0 < d) {
    net_setKeepAlive(pnStack0000000000000008,true,in_stack_ffffffffffffffe0);
    net_setKeepAlivePeriod(pnStack0000000000000008,d,in_stack_ffffffffffffffe0);
    ~r0_00 = extraout_RBX_00;
    if (ppfStack0000000000000018 != (func_time_Duration_ **)0x0) {
      (**ppfStack0000000000000018)(d);
      ~r0_00 = extraout_RBX_01;
    }
  }
  runtime_newobject((internal_abi_Type *)&DAT_0083f960,~r0_00);
  ppnVar1 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = pnStack0000000000000008;
    ppnVar1 = extraout_RAX_00;
  }
  *ppnVar1 = pnStack0000000000000008;
  return;
}



void net___TCPListener__SyscallConn(net_TCPListener *l,syscall_RawConn ~r0,error ~r1)

{
  net_netFD *pnVar1;
  net_netFD **extraout_RAX;
  net_netFD **extraout_RAX_00;
  net_netFD **ppnVar2;
  void *in_RBX;
  void *extraout_RBX;
  net_netFD **extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  if ((l != (net_TCPListener *)0x0) && (pnVar1 = l->fd, pnVar1 != (net_netFD *)0x0)) {
    runtime_newobject((internal_abi_Type *)&DAT_0083fe60,in_RBX);
    ppnVar2 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = pnVar1;
      ppnVar2 = extraout_RAX_00;
    }
    *ppnVar2 = pnVar1;
    return;
  }
  return;
}



void net___TCPListener__AcceptTCP(net_TCPListener *l,net_TCPConn *~r0,error ~r1)

{
  net_TCPConn *c;
  char **extraout_RAX;
  char **extraout_RAX_00;
  char **extraout_RAX_01;
  char **extraout_RAX_02;
  char **ppcVar1;
  socklen_t *in_RCX;
  char *extraout_RCX;
  net_TCPListener *extraout_RCX_00;
  socklen_t *extraout_RCX_01;
  uint8 *puVar2;
  char *pcVar3;
  char *~r0_00;
  sockaddr *extraout_RBX;
  uint8 **extraout_R11;
  char **extraout_R11_00;
  char **extraout_R11_01;
  int unaff_R14;
  undefined in_XMM15 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RCX = extraout_RCX_01;
    ~r0 = (net_TCPConn *)extraout_RBX;
  }
  if ((l != (net_TCPListener *)0x0) && (l->fd != (net_netFD *)0x0)) {
    net___TCPListener__accept((int)l,(sockaddr *)~r0,in_RCX);
    if (~r0_00 == (char *)0x0) {
      return;
    }
    runtime_newobject((internal_abi_Type *)&DAT_0087daa0,~r0_00);
    extraout_RAX[1] = (char *)0x6;
    *extraout_RAX =
         "acceptdomaingophertelnet Valuesysmontimersefenceselect, not object next= jobs= goid sweep  B -> % util alloc free  span= prev= list=, i =  code= addr= m->p= p->m=SCHED  curg=], sp= ctxt: min=  max= (...)\n base allow"
    ;
    puVar2 = (l->fd->net).str;
    extraout_RAX[3] = (char *)(l->fd->net).len;
    ppcVar1 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = puVar2;
      ppcVar1 = extraout_RAX_00;
      l = extraout_RCX_00;
    }
    ppcVar1[2] = (char *)puVar2;
    *(undefined (*) [16])(ppcVar1 + 4) = in_XMM15;
    pcVar3 = (char *)(l->fd->laddr).data;
    ppcVar1[6] = (char *)(l->fd->laddr).tab;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = pcVar3;
      ppcVar1 = extraout_RAX_01;
    }
    ppcVar1[7] = pcVar3;
    ppcVar1[8] = ~r0_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_01 = extraout_RCX;
      ppcVar1 = extraout_RAX_02;
    }
    ppcVar1[9] = extraout_RCX;
    return;
  }
  return;
}



void net___TCPListener__Accept(net_TCPListener *l,net_Conn ~r0,error ~r1)

{
  net_TCPConn *c;
  char **extraout_RAX;
  char **extraout_RAX_00;
  char **extraout_RAX_01;
  char **extraout_RAX_02;
  char **ppcVar1;
  socklen_t *in_RCX;
  char *extraout_RCX;
  net_TCPListener *extraout_RCX_00;
  socklen_t *extraout_RCX_01;
  uint8 *puVar2;
  char *pcVar3;
  sockaddr *in_RBX;
  char *~r0_00;
  sockaddr *extraout_RBX;
  uint8 **extraout_R11;
  char **extraout_R11_00;
  char **extraout_R11_01;
  int unaff_R14;
  undefined in_XMM15 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RCX = extraout_RCX_01;
    in_RBX = extraout_RBX;
  }
  if ((l != (net_TCPListener *)0x0) && (l->fd != (net_netFD *)0x0)) {
    net___TCPListener__accept((int)l,in_RBX,in_RCX);
    if (~r0_00 == (char *)0x0) {
      return;
    }
    runtime_newobject((internal_abi_Type *)&DAT_0087daa0,~r0_00);
    extraout_RAX[1] = (char *)0x6;
    *extraout_RAX =
         "acceptdomaingophertelnet Valuesysmontimersefenceselect, not object next= jobs= goid sweep  B -> % util alloc free  span= prev= list=, i =  code= addr= m->p= p->m=SCHED  curg=], sp= ctxt: min=  max= (...)\n base allow"
    ;
    puVar2 = (l->fd->net).str;
    extraout_RAX[3] = (char *)(l->fd->net).len;
    ppcVar1 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = puVar2;
      ppcVar1 = extraout_RAX_00;
      l = extraout_RCX_00;
    }
    ppcVar1[2] = (char *)puVar2;
    *(undefined (*) [16])(ppcVar1 + 4) = in_XMM15;
    pcVar3 = (char *)(l->fd->laddr).data;
    ppcVar1[6] = (char *)(l->fd->laddr).tab;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = pcVar3;
      ppcVar1 = extraout_RAX_01;
    }
    ppcVar1[7] = pcVar3;
    ppcVar1[8] = ~r0_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_01 = extraout_RCX;
      ppcVar1 = extraout_RAX_02;
    }
    ppcVar1[9] = extraout_RCX;
    return;
  }
  return;
}



void net___TCPListener__Close(net_TCPListener *l,error ~r0)

{
  int extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *puVar1;
  net_TCPListener *extraout_RCX;
  void *extraout_RCX_00;
  void *pvVar2;
  uint8 *puVar3;
  void *~r0_00;
  uint8 **extraout_R11;
  void **extraout_R11_00;
  void **extraout_R11_01;
  int unaff_R14;
  undefined in_XMM15 [16];
  error in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((l != (net_TCPListener *)0x0) && (l->fd != (net_netFD *)0x0)) {
    net___netFD__Close(l->fd,in_stack_ffffffffffffffd8);
    if (extraout_RAX == 0) {
      return;
    }
    runtime_newobject((internal_abi_Type *)&DAT_0087daa0,~r0_00);
    extraout_RAX_00[1] = 5;
    *extraout_RAX_00 = &DAT_008aec73;
    puVar3 = (l->fd->net).str;
    extraout_RAX_00[3] = (l->fd->net).len;
    puVar1 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = puVar3;
      puVar1 = extraout_RAX_01;
      l = extraout_RCX;
    }
    puVar1[2] = puVar3;
    *(undefined (*) [16])(puVar1 + 4) = in_XMM15;
    pvVar2 = (l->fd->laddr).data;
    puVar1[6] = (l->fd->laddr).tab;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = extraout_RCX_00;
      puVar1 = extraout_RAX_02;
      pvVar2 = extraout_RCX_00;
    }
    puVar1[7] = pvVar2;
    puVar1[8] = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_01 = ~r0_00;
      puVar1 = extraout_RAX_03;
    }
    puVar1[9] = ~r0_00;
    return;
  }
  return;
}



void net___TCPListener__Addr(net_TCPListener *l,net_Addr ~r0)

{
  return;
}



void net___TCPListener__SetDeadline(net_TCPListener *l,time_Time t,error ~r0)

{
  error ~r0_1;
  int extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *puVar1;
  net_TCPListener *extraout_RCX;
  void *extraout_RCX_00;
  void *pvVar2;
  void *pvVar3;
  uint8 *puVar4;
  int in_RBX;
  void *~r0_00;
  uint8 **extraout_R11;
  void **extraout_R11_00;
  void **extraout_R11_01;
  int unaff_R14;
  undefined in_XMM15 [16];
  time_Time in_stack_ffffffffffffffc0;
  error in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_ffffffffffffffe8;
  int iVar5;
  void *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((l != (net_TCPListener *)0x0) && (l->fd != (net_netFD *)0x0)) {
    ~r0_1.data = in_stack_fffffffffffffff0;
    ~r0_1.tab = in_stack_ffffffffffffffe8;
    internal_poll_setDeadlineImpl
              (&l->fd->pfd,in_stack_ffffffffffffffc0,in_RBX,in_stack_ffffffffffffffd8,~r0_1);
    if (extraout_RAX == 0) {
      return;
    }
    iVar5 = extraout_RAX;
    pvVar3 = ~r0_00;
    runtime_newobject((internal_abi_Type *)&DAT_0087daa0,~r0_00);
    extraout_RAX_00[1] = 3;
    *extraout_RAX_00 = &DAT_008ae336;
    puVar4 = (l->fd->net).str;
    extraout_RAX_00[3] = (l->fd->net).len;
    puVar1 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = puVar4;
      puVar1 = extraout_RAX_01;
      l = extraout_RCX;
    }
    puVar1[2] = puVar4;
    *(undefined (*) [16])(puVar1 + 4) = in_XMM15;
    pvVar2 = (l->fd->laddr).data;
    puVar1[6] = (l->fd->laddr).tab;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = extraout_RCX_00;
      puVar1 = extraout_RAX_02;
      pvVar2 = extraout_RCX_00;
    }
    puVar1[7] = pvVar2;
    puVar1[8] = iVar5;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_01 = pvVar3;
      puVar1 = extraout_RAX_03;
    }
    puVar1[9] = pvVar3;
    return;
  }
  return;
}



void net___TCPListener__File(net_TCPListener *l,os_File *f,error err)

{
  os_File *f_1;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *puVar1;
  undefined8 extraout_RCX;
  undefined8 uVar2;
  net_TCPListener *extraout_RCX_00;
  uint8 *puVar3;
  void *pvVar4;
  void *extraout_RBX;
  void *~r0;
  uint8 **extraout_R11;
  void **extraout_R11_00;
  undefined8 *extraout_R11_01;
  int unaff_R14;
  undefined in_XMM15 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((l == (net_TCPListener *)0x0) || (l->fd == (net_netFD *)0x0)) {
    return;
  }
  net___netFD__dup((int)l->fd);
  uVar2 = extraout_RCX;
  ~r0 = extraout_RBX;
  if (extraout_RBX == (void *)0x0) {
    ~r0 = (void *)0x0;
    uVar2 = 0;
  }
  if (~r0 == (void *)0x0) {
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0087daa0,~r0);
  extraout_RAX[1] = 4;
  *extraout_RAX = &DAT_008ae59b;
  puVar3 = (l->fd->net).str;
  extraout_RAX[3] = (l->fd->net).len;
  puVar1 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = puVar3;
    puVar1 = extraout_RAX_00;
    l = extraout_RCX_00;
  }
  puVar1[2] = puVar3;
  *(undefined (*) [16])(puVar1 + 4) = in_XMM15;
  pvVar4 = (l->fd->laddr).data;
  puVar1[6] = (l->fd->laddr).tab;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = pvVar4;
    puVar1 = extraout_RAX_01;
  }
  puVar1[7] = pvVar4;
  puVar1[8] = ~r0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_01 = uVar2;
    puVar1 = extraout_RAX_02;
  }
  puVar1[9] = uVar2;
  return;
}



void net_sockaddrToTCP(syscall_Sockaddr sa,net_Addr ~r0)

{
  undefined1 *in_RAX;
  int **extraout_RAX;
  int **extraout_RAX_00;
  int **ppiVar1;
  int extraout_RAX_01;
  int *extraout_RAX_02;
  int *extraout_RAX_03;
  int *extraout_RAX_04;
  int *piVar2;
  int **extraout_RCX;
  int **extraout_RCX_00;
  int **ppiVar3;
  int iVar4;
  int **in_RBX;
  syscall_SockaddrInet4 *sa_1;
  void *~r0_00;
  int **extraout_R11;
  int *extraout_R11_00;
  int *extraout_R11_01;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RAX != (undefined1 *)0x0) {
    if (in_RAX == go_itab__syscall_SockaddrInet4_syscall_Sockaddr) {
      runtime_newobject((internal_abi_Type *)&DAT_0085dd00,in_RBX);
      extraout_RAX[1] = (int *)0x4;
      extraout_RAX[2] = (int *)0x4;
      ppiVar3 = in_RBX + 1;
      ppiVar1 = extraout_RAX;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11 = (int *)ppiVar3;
        ppiVar1 = extraout_RAX_00;
        in_RBX = extraout_RCX;
      }
      *ppiVar1 = (int *)ppiVar3;
      ppiVar1[3] = *in_RBX;
      return;
    }
    if (in_RAX == go_itab__syscall_SockaddrInet6_syscall_Sockaddr) {
      net___ipv6ZoneCache__name
                (&net_zoneCache,(uint)*(dword *)(in_RBX + 1),in_stack_ffffffffffffffd0);
      runtime_newobject((internal_abi_Type *)&DAT_0085dd00,~r0_00);
      extraout_RAX_02[1] = 0x10;
      extraout_RAX_02[2] = 0x10;
      iVar4 = (int)in_RBX + 0xc;
      piVar2 = extraout_RAX_02;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_00 = iVar4;
        piVar2 = extraout_RAX_03;
        in_RBX = extraout_RCX_00;
      }
      *piVar2 = iVar4;
      piVar2[3] = (int)*in_RBX;
      piVar2[5] = (int)~r0_00;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_01 = extraout_RAX_01;
        piVar2 = extraout_RAX_04;
      }
      piVar2[4] = extraout_RAX_01;
      return;
    }
  }
  return;
}



void net___TCPAddr__family(net_TCPAddr *a,int ~r0)

{
  int iVar1;
  uint8 *puVar2;
  int i;
  
  if ((a == (net_TCPAddr *)0x0) || (iVar1 = (a->IP).len, iVar1 < 5)) {
    return;
  }
  if (iVar1 == 0x10) {
    puVar2 = (a->IP).array;
    for (i = 0; i < 10; i = i + 1) {
      if (puVar2[i] != 0) goto LAB_005fed82;
    }
    if ((puVar2[10] == 0xff) && (puVar2[0xb] == 0xff)) {
      puVar2 = puVar2 + 0xc;
      goto LAB_005fed84;
    }
  }
LAB_005fed82:
  puVar2 = (uint8 *)0x0;
LAB_005fed84:
  if (puVar2 == (uint8 *)0x0) {
    return;
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void net___TCPAddr__sockaddr(net_TCPAddr *a,int family,syscall_Sockaddr ~r0,error ~r1)

{
  error ~r1_00;
  runtime_itab *unaff_RBP;
  int unaff_R14;
  void *unaff_retaddr;
  net_IP in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd8;
  syscall_Sockaddr in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (a != (net_TCPAddr *)0x0) {
    ~r1_00.data = unaff_retaddr;
    ~r1_00.tab = unaff_RBP;
    net_ipToSockaddr(family,in_stack_ffffffffffffffc0,(int)(a->IP).array,in_stack_ffffffffffffffd8,
                     in_stack_ffffffffffffffe8,~r1_00);
    return;
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void net___TCPConn__readFrom(net_TCPConn *c,io_Reader r,int64 ~r0,error ~r1)

{
  error err;
  int64 n;
  int64 n_1;
  int in_RCX;
  runtime_itab *unaff_RBP;
  size_t in_RSI;
  size_t extraout_RSI;
  char extraout_DIL;
  bool handled;
  char extraout_DIL_00;
  bool handled_1;
  __off64_t *in_RDI;
  __off64_t *extraout_RDI;
  uint in_R8;
  uint extraout_R8;
  int unaff_R14;
  void *unaff_retaddr;
  io_Writer in_stack_ffffffffffffffd8;
  io_Reader in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_RDI = extraout_RDI;
    in_R8 = extraout_R8;
  }
  net_splice((int)(c->conn).fd,(__off64_t *)~r0,in_RCX,in_RDI,in_RSI,in_R8);
  if (extraout_DIL == '\0') {
    net_sendFile((c->conn).fd,in_stack_ffffffffffffffd8,~r0,in_stack_ffffffffffffffe8,
                 SUB81(in_RCX,0));
    if (extraout_DIL_00 != '\0') {
      return;
    }
    err.data = unaff_retaddr;
    err.tab = unaff_RBP;
    net_genericReadFrom(in_stack_ffffffffffffffd8,in_stack_ffffffffffffffe8,0x95eb80,err);
    return;
  }
  return;
}



void net___sysDialer__dialTCP
               (net_sysDialer *sd,context_Context ctx,net_TCPAddr *laddr,net_TCPAddr *raddr,
               net_TCPConn *~r0,error ~r1)

{
  func_context_Context__string___net_TCPAddr___net_TCPAddr____net_TCPConn__error_ **h;
  func_context_Context__string___net_TCPAddr___net_TCPAddr____net_TCPConn__error_ **h_1;
  net_TCPConn *in_RSI;
  int unaff_R14;
  context_Context in_stack_ffffffffffffffc8;
  string in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (sd->testHookDialTCP ==
      (func_context_Context__string___net_TCPAddr___net_TCPAddr____net_TCPConn__error_ **)0x0) {
    if (net_testHookDialTCP !=
        (func_context_Context__string___net_TCPAddr___net_TCPAddr____net_TCPConn__error_ **)0x0) {
      (**net_testHookDialTCP)
                (in_stack_ffffffffffffffc8,in_stack_ffffffffffffffd8,laddr,raddr,
                 (net_TCPConn **)(sd->network).str,(error *)(sd->network).len);
      return;
    }
    net___sysDialer__doDialTCPProto
              (sd,in_stack_ffffffffffffffc8,laddr,raddr,(int)~r0,in_RSI,
               (error)in_stack_ffffffffffffffd8);
    return;
  }
  (**sd->testHookDialTCP)
            (in_stack_ffffffffffffffc8,in_stack_ffffffffffffffd8,laddr,raddr,
             (net_TCPConn **)(sd->network).str,(error *)(sd->network).len);
  return;
}



void net___sysDialer__doDialTCPProto
               (net_sysDialer *sd,context_Context ctx,net_TCPAddr *laddr,net_TCPAddr *raddr,
               int proto,net_TCPConn *~r0,error ~r1)

{
  undefined8 *puVar1;
  context_Context ctx_00;
  context_Context ctx_01;
  error err;
  error ~r0_00;
  string net;
  string net_00;
  char extraout_AL;
  char extraout_AL_00;
  net_netFD *extraout_RAX;
  net_netFD *fd;
  net_netFD *extraout_RAX_00;
  void *extraout_RCX;
  void *extraout_RCX_00;
  func_context_Context__string__string__syscall_RawConn__error **ctrlCtxFn;
  undefined1 *extraout_RBX;
  undefined1 *extraout_RBX_00;
  undefined1 *puVar2;
  bool ~r0_01;
  net_TCPConn *~r0_02;
  runtime_itab *in_R8;
  char cVar3;
  undefined1 *puVar4;
  int unaff_R14;
  runtime_itab *prVar5;
  undefined *puVar6;
  net_sockaddr in_stack_ffffffffffffff68;
  net_sockaddr in_stack_ffffffffffffff78;
  string in_stack_ffffffffffffff88;
  error in_stack_ffffffffffffff98;
  int i;
  net_netFD *local_38;
  void *local_30;
  func_context_Context__string__string__syscall_RawConn__error **local_28;
  net_TCPConn *local_20;
  undefined local_18 [16];
  
  while (&local_38 <= *(net_netFD ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_28 = (sd->Dialer).ControlContext;
  if ((local_28 == (func_context_Context__string__string__syscall_RawConn__error **)0x0) &&
     ((sd->Dialer).Control != (func_string__string__syscall_RawConn__error **)0x0)) {
    local_18._8_8_ = sd;
    local_18._0_8_ = net___sysDialer__doDialTCPProto_func1;
    local_28 = (func_context_Context__string__string__syscall_RawConn__error **)local_18;
  }
  puVar6 = &DAT_008ae5f7;
  ctx_00.data = &DAT_008ae5f7;
  ctx_00.tab = in_R8;
  net.len = (int)local_28;
  net.str = (uint8 *)0x4;
  prVar5 = in_R8;
  local_20 = ~r0;
  net_internetSocket(ctx_00,net,in_stack_ffffffffffffff68,in_stack_ffffffffffffff78,(int)laddr,
                     (int)raddr,in_stack_ffffffffffffff88,
                     (func_context_Context__string__string__syscall_RawConn__error **)
                     (sd->network).str,(net_netFD *)(sd->network).len,in_stack_ffffffffffffff98);
  ~r0_02 = (net_TCPConn *)0x0;
  local_38 = extraout_RAX;
  local_30 = extraout_RCX;
  puVar2 = extraout_RBX;
  while( true ) {
    if ((int)~r0_02 < 2) {
      if ((proto == 0) || (*(int *)(proto + 0x18) == 0)) {
        err.data = puVar6;
        err.tab = prVar5;
        net_selfConnect(local_38,err,SUB81(puVar2,0));
        if (extraout_AL == '\0') {
          puVar4 = puVar2;
          if (puVar2 == go_itab__net_OpError_error) {
            puVar1 = (undefined8 *)((int)local_30 + 0x40);
            local_30 = *(void **)((int)local_30 + 0x48);
            puVar4 = (undefined1 *)*puVar1;
          }
          if (puVar4 == go_itab__os_SyscallError_error) {
            puVar4 = *(undefined1 **)((int)local_30 + 0x10);
            local_30 = *(void **)((int)local_30 + 0x18);
          }
          if (puVar4 == go_itab_syscall_Errno_error) {
            runtime_ifaceeq((runtime_itab *)go_itab_syscall_Errno_error,local_30,&DAT_0095c688,
                            ~r0_01);
            cVar3 = extraout_AL_00;
          }
          else {
            cVar3 = '\0';
          }
        }
        else {
          cVar3 = '\x01';
        }
      }
      else {
        cVar3 = '\0';
      }
    }
    else {
      cVar3 = '\0';
    }
    if (cVar3 == '\0') break;
    if (puVar2 == (undefined1 *)0x0) {
      ~r0_00.data = puVar6;
      ~r0_00.tab = prVar5;
      net___netFD__Close(local_38,~r0_00);
    }
    puVar6 = &DAT_008ae5f7;
    ctx_01.data = &DAT_008ae5f7;
    ctx_01.tab = in_R8;
    net_00.len = (int)local_28;
    net_00.str = (uint8 *)0x4;
    prVar5 = in_R8;
    net_internetSocket(ctx_01,net_00,in_stack_ffffffffffffff68,in_stack_ffffffffffffff78,(int)laddr,
                       (int)raddr,in_stack_ffffffffffffff88,
                       (func_context_Context__string__string__syscall_RawConn__error **)
                       (sd->network).str,(net_netFD *)(sd->network).len,in_stack_ffffffffffffff98);
    ~r0_02 = (net_TCPConn *)((int)&(~r0_02->conn).fd + 1);
    local_38 = extraout_RAX_00;
    local_30 = extraout_RCX_00;
    puVar2 = extraout_RBX_00;
  }
  if (puVar2 == (undefined1 *)0x0) {
    net_newTCPConn(local_38,(sd->Dialer).KeepAlive,net_testHookSetKeepAlive,~r0_02);
    return;
  }
  return;
}


