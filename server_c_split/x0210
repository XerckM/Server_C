    return;
  }
  if (a <= b) {
    return;
  }
  return;
}



void internal_fmtsort_nilCompare(reflect_Value aVal,reflect_Value bVal,int ~r0,bool ~r1)

{
  undefined8 *puVar1;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  dword in_ECX;
  uint uVar2;
  reflect_Kind k;
  undefined7 in_register_00000019;
  undefined8 *~r0_00;
  undefined8 *in_RSI;
  void *ptr_1;
  dword in_R8D;
  reflect_Kind k_1;
  reflect_Kind k_2;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe0;
  
  ~r0_00 = (undefined8 *)CONCAT71(in_register_00000019,~r1);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar2 = (uint)(in_ECX & 0x1f);
  if (uVar2 < 0x15) {
    if (uVar2 - 0x12 < 2) goto LAB_004e9690;
    if (uVar2 != 0x14) {
LAB_004e980f:
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_00);
      extraout_RAX_01[1] = 0x13;
      *extraout_RAX_01 = &DAT_008b814d;
      extraout_RAX_01[2] = uVar2;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffe0);
    }
LAB_004e967d:
    puVar1 = (undefined8 *)*~r0_00;
LAB_004e96a5:
    if (puVar1 == (undefined8 *)0x0) {
      uVar2 = (uint)(in_R8D & 0x1f);
      if (uVar2 < 0x15) {
        if (1 < uVar2 - 0x12) {
          if (uVar2 != 0x14) {
LAB_004e97a3:
            runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_00);
            extraout_RAX[1] = 0x13;
            *extraout_RAX = &DAT_008b814d;
            extraout_RAX[2] = uVar2;
                    // WARNING: Subroutine does not return
            runtime_gopanic(in_stack_ffffffffffffffe0);
          }
LAB_004e975a:
          in_RSI = (undefined8 *)*in_RSI;
          goto LAB_004e9780;
        }
      }
      else if (0x16 < uVar2) {
        if (uVar2 == 0x17) goto LAB_004e975a;
        if (uVar2 != 0x1a) goto LAB_004e97a3;
      }
      if ((in_R8D >> 9 & 1) != 0) {
        return;
      }
      if ((in_R8D >> 7 & 1) != 0) {
        in_RSI = (undefined8 *)*in_RSI;
      }
LAB_004e9780:
      if (in_RSI != (undefined8 *)0x0) {
        return;
      }
      return;
    }
  }
  else {
    if (0x16 < uVar2) {
      if (uVar2 == 0x17) goto LAB_004e967d;
      if (uVar2 != 0x1a) goto LAB_004e980f;
    }
LAB_004e9690:
    if ((in_ECX >> 9 & 1) == 0) {
      puVar1 = ~r0_00;
      if ((in_ECX >> 7 & 1) != 0) {
        ~r0_00 = (undefined8 *)*~r0_00;
        puVar1 = ~r0_00;
      }
      goto LAB_004e96a5;
    }
  }
  uVar2 = (uint)(in_R8D & 0x1f);
  if (uVar2 < 0x15) {
    if (1 < uVar2 - 0x12) {
      if (uVar2 != 0x14) {
LAB_004e97d9:
        runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_00);
        extraout_RAX_00[1] = 0x13;
        *extraout_RAX_00 = &DAT_008b814d;
        extraout_RAX_00[2] = uVar2;
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffffe0);
      }
LAB_004e96dd:
      in_RSI = (undefined8 *)*in_RSI;
      goto LAB_004e9705;
    }
  }
  else if (0x16 < uVar2) {
    if (uVar2 == 0x17) goto LAB_004e96dd;
    if (uVar2 != 0x1a) goto LAB_004e97d9;
  }
  if ((in_R8D >> 9 & 1) != 0) {
    return;
  }
  if ((in_R8D >> 7 & 1) != 0) {
    in_RSI = (undefined8 *)*in_RSI;
  }
LAB_004e9705:
  if (in_RSI != (undefined8 *)0x0) {
    return;
  }
  return;
}



void fmt_Errorf(string format,__interface___ a,error ~r0)

{
  undefined *puVar1;
  int iVar2;
  __uint8 val;
  runtime_slice ~r0_00;
  runtime_iface r;
  runtime_iface r_00;
  __interface___ a_00;
  fmt_pp *in_RAX;
  fmt_pp *p_00;
  fmt_pp *p;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  fmt_wrapError *w;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  int extraout_RAX_06;
  void *extraout_RAX_07;
  undefined8 *extraout_RAX_08;
  undefined8 *extraout_RAX_09;
  undefined8 *extraout_RAX_10;
  undefined8 *puVar3;
  fmt_pp *pfVar4;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint oldCap;
  undefined8 uVar5;
  int *piVar6;
  uint newLen;
  void *~r0_01;
  undefined8 extraout_RBX;
  undefined8 extraout_RBX_00;
  undefined8 extraout_RBX_01;
  uint extraout_RBX_02;
  undefined8 extraout_RBX_03;
  void *extraout_RSI;
  void *pvVar7;
  uint in_RDI;
  int i;
  int iVar8;
  int extraout_RDI;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  undefined8 *extraout_R11_02;
  int argNum;
  undefined8 *extraout_R11_03;
  undefined8 *extraout_R11_04;
  void **extraout_R11_05;
  int unaff_R14;
  runtime_eface in_stack_ffffffffffffff40;
  runtime_itab *in_stack_ffffffffffffff50;
  void *in_stack_ffffffffffffff58;
  int in_stack_ffffffffffffff60;
  undefined8 local_40;
  fmt_pp *local_38;
  void *local_30;
  undefined8 local_20;
  int *local_18;
  
  while (&local_40 <= *(undefined8 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  fmt_newPrinter(in_RAX);
  p_00->wrapErrs = true;
  a_00.len = (int)in_stack_ffffffffffffff58;
  a_00.array = (interface___ *)in_stack_ffffffffffffff50;
  a_00.cap = in_stack_ffffffffffffff60;
  local_38 = p_00;
  fmt___pp__doPrintf(p_00,(string)in_stack_ffffffffffffff40,a_00);
  runtime_slicebytetostring
            ((runtime_tmpBuf *)0x0,(local_38->buf).array,(local_38->buf).len,
             (string)in_stack_ffffffffffffff40);
  puVar1 = (undefined *)(local_38->wrappedErrs).len;
  local_40 = extraout_RAX;
  if (puVar1 == (undefined *)0x0) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_01);
    extraout_RAX_04[1] = ~r0_01;
    puVar3 = extraout_RAX_04;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_02 = local_40;
      puVar3 = extraout_RAX_05;
    }
    *puVar3 = local_40;
  }
  else if (puVar1 == &DAT_00000001) {
    runtime_newobject((internal_abi_Type *)&DAT_0084e760,~r0_01);
    extraout_RAX_00[2] = 0;
    puVar3 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      uVar5 = extraout_RAX_00[3];
      runtime_gcWriteBarrier1();
      *extraout_R11 = uVar5;
      puVar3 = extraout_RAX_01;
    }
    puVar3[3] = 0;
    puVar3[1] = ~r0_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = local_40;
      extraout_R11_00[1] = *extraout_RAX_02;
      puVar3 = extraout_RAX_02;
    }
    *puVar3 = local_40;
    if ((local_38->wrappedErrs).len == 0) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (in_RDI <= (uint)*(local_38->wrappedErrs).array) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    r.data = in_stack_ffffffffffffff58;
    r.tab = in_stack_ffffffffffffff50;
    runtime_assertE2I2((internal_abi_InterfaceType *)&DAT_00835ac0,in_stack_ffffffffffffff40,r);
    puVar3[2] = extraout_RAX_03;
    uVar5 = extraout_RBX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_01 = extraout_RBX_00;
      extraout_R11_01[1] = puVar3[3];
      uVar5 = extraout_RBX_00;
    }
    puVar3[3] = uVar5;
  }
  else {
    if (local_38->reordered != false) {
      val.cap = (int)in_stack_ffffffffffffff50;
      val.array = (uint8 *)in_stack_ffffffffffffff40._type;
      val.len = (int)in_stack_ffffffffffffff40.data;
      runtime_convTslice(val,(local_38->wrappedErrs).array);
      sort_Sort((sort_Interface)in_stack_ffffffffffffff40);
    }
    piVar6 = (local_38->wrappedErrs).array;
    iVar2 = (local_38->wrappedErrs).len;
    oldCap = 0;
    local_30 = (void *)0x0;
    newLen = 0;
    pfVar4 = local_38;
    local_18 = piVar6;
    for (i = 0; i < iVar2; i = i + 1) {
      if (i < 1) {
LAB_004e9bba:
        if (in_RDI <= (uint)piVar6[i]) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        r_00.data = in_stack_ffffffffffffff58;
        r_00.tab = in_stack_ffffffffffffff50;
        runtime_assertE2I2((internal_abi_InterfaceType *)&DAT_00835ac0,in_stack_ffffffffffffff40,
                           r_00);
        pfVar4 = local_38;
        piVar6 = local_18;
        if (extraout_RAX_06 != 0) {
          newLen = newLen + 1;
          local_20 = extraout_RBX_01;
          pvVar7 = local_30;
          if (oldCap < newLen) {
            ~r0_00.cap = (int)in_stack_ffffffffffffff50;
            ~r0_00.array = in_stack_ffffffffffffff40._type;
            ~r0_00.len = (int)in_stack_ffffffffffffff40.data;
            runtime_growslice(local_30,newLen,oldCap,1,(internal_abi_Type *)&DAT_00835ac0,~r0_00);
            oldCap = extraout_RCX;
            newLen = extraout_RBX_02;
            pvVar7 = extraout_RAX_07;
          }
          iVar8 = (newLen - 1) * 0x10;
          *(int *)((int)pvVar7 + iVar8) = extraout_RAX_06;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_03 = extraout_RBX_03;
            extraout_R11_03[1] = *(undefined8 *)((int)extraout_RSI + extraout_RDI + 8);
            oldCap = extraout_RCX_00;
            local_20 = extraout_RBX_03;
            pvVar7 = extraout_RSI;
            iVar8 = extraout_RDI;
          }
          *(undefined8 *)((int)pvVar7 + iVar8 + 8) = local_20;
          pfVar4 = local_38;
          piVar6 = local_18;
          local_30 = pvVar7;
        }
      }
      else {
        if ((uint)(pfVar4->wrappedErrs).len <= i - 1U) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        if ((pfVar4->wrappedErrs).array[i + -1] != piVar6[i]) goto LAB_004e9bba;
      }
    }
    runtime_newobject((internal_abi_Type *)&DAT_0084e800,~r0_01);
    extraout_RAX_08[1] = ~r0_01;
    puVar3 = extraout_RAX_08;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_04 = local_40;
      puVar3 = extraout_RAX_09;
    }
    *puVar3 = local_40;
    puVar3[3] = newLen;
    puVar3[4] = oldCap;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_05 = local_30;
      puVar3 = extraout_RAX_10;
    }
    puVar3[2] = local_30;
  }
  fmt___pp__free(local_38);
  return;
}



void fmt___wrapError__Error(fmt_wrapError *e,string ~r0)

{
  return;
}



void fmt___wrapError__Unwrap(fmt_wrapError *e,error ~r0)

{
  return;
}



void fmt___wrapErrors__Error(fmt_wrapErrors *e,string ~r0)

{
  return;
}



void fmt___wrapErrors__Unwrap(fmt_wrapErrors *e,__error ~r0)

{
  return;
}



// WARNING: Unknown calling convention

void fmt___fmt__writePadding(fmt_fmt *f,int n)

{
  void *pvVar1;
  void *~r0;
  uint8 *__src;
  void *pvVar2;
  uint8 *__dest;
  fmt_buffer *extraout_RAX;
  fmt_buffer *pfVar3;
  int newLen;
  uint8 padByte;
  uint8 *extraout_RSI;
  uint8 *puVar4;
  void *__n;
  void *len;
  int i;
  uint8 **extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (n < 1) {
    return;
  }
  pfVar3 = f->buf;
  ~r0 = (void *)pfVar3->len;
  len = (void *)pfVar3->cap;
  pvVar1 = (void *)(n + (int)~r0);
  puVar4 = pfVar3->array;
  if ((int)len < (int)pvVar1) {
    len = (void *)(n + (int)len * 2);
    runtime_makeslice((internal_abi_Type *)&DAT_00807920,(int)len,(int)len,~r0);
    __src = f->buf->array;
    pvVar2 = (void *)f->buf->len;
    __n = len;
    if ((int)pvVar2 < (int)len) {
      __n = pvVar2;
    }
    puVar4 = __dest;
    if (__dest != __src) {
      runtime_memmove(__dest,__src,(size_t)__n);
    }
  }
  if ((f->fmtFlags).zero == false) {
    padByte = 0x20;
  }
  else {
    padByte = 0x30;
  }
  if (len < pvVar1) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  if (pvVar1 < ~r0) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  for (i = 0; i < n; i = i + 1) {
    puVar4[i + ((uint)~r0 & (int)~r0 - (int)len >> 0x3f)] = padByte;
  }
  pfVar3 = f->buf;
  pfVar3->len = (int)pvVar1;
  pfVar3->cap = (int)len;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RSI;
    extraout_R11[1] = extraout_RAX->array;
    pfVar3 = extraout_RAX;
    puVar4 = extraout_RSI;
  }
  pfVar3->array = puVar4;
  return;
}



void fmt___fmt__pad(fmt_fmt *f,__uint8 b)

{
  int iVar1;
  int extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *puVar2;
  uint8 *extraout_RAX_01;
  uint8 *extraout_RAX_02;
  size_t in_RCX;
  uint extraout_RCX;
  uint uVar3;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  void *in_RBX;
  int iVar4;
  int width;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint uVar5;
  uint extraout_RBX_01;
  fmt_buffer *extraout_RSI;
  fmt_buffer *pfVar6;
  fmt_buffer *extraout_RSI_00;
  fmt_buffer *extraout_RSI_01;
  uint8 **extraout_R11;
  uint8 **extraout_R11_00;
  uint8 **extraout_R11_01;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffff98;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((f->fmtFlags).widPresent != false) && (f->wid != 0)) {
    unicode_utf8_RuneCount(in_stack_ffffffffffffff98,(int)in_RBX);
    iVar4 = f->wid - extraout_RAX;
    if ((f->fmtFlags).minus == false) {
      fmt___fmt__writePadding(f,iVar4);
      pfVar6 = f->buf;
      uVar3 = pfVar6->cap;
      iVar4 = pfVar6->len;
      uVar5 = iVar4 + in_RCX;
      puVar2 = pfVar6->array;
      if (uVar3 < uVar5) {
        runtime_growslice(puVar2,uVar5,uVar3,in_RCX,(internal_abi_Type *)&DAT_00807920,
                          (runtime_slice)in_stack_ffffffffffffff98);
        puVar2 = extraout_RAX_01;
        uVar3 = extraout_RCX_00;
        uVar5 = extraout_RBX_00;
      }
      runtime_memmove(puVar2 + iVar4,in_RBX,in_RCX);
      pfVar6->len = uVar5;
      pfVar6->cap = uVar3;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_00 = puVar2;
        extraout_R11_00[1] = extraout_RSI_00->array;
        pfVar6 = extraout_RSI_00;
      }
      pfVar6->array = puVar2;
    }
    else {
      pfVar6 = f->buf;
      uVar3 = pfVar6->cap;
      iVar1 = pfVar6->len;
      uVar5 = in_RCX + iVar1;
      puVar2 = pfVar6->array;
      if (uVar3 < uVar5) {
        runtime_growslice(puVar2,uVar5,uVar3,in_RCX,(internal_abi_Type *)&DAT_00807920,
                          (runtime_slice)in_stack_ffffffffffffff98);
        puVar2 = extraout_RAX_00;
        uVar3 = extraout_RCX;
        uVar5 = extraout_RBX;
      }
      runtime_memmove(puVar2 + iVar1,in_RBX,in_RCX);
      pfVar6->len = uVar5;
      pfVar6->cap = uVar3;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = puVar2;
        extraout_R11[1] = extraout_RSI->array;
        pfVar6 = extraout_RSI;
      }
      pfVar6->array = puVar2;
      fmt___fmt__writePadding(f,iVar4);
    }
    return;
  }
  pfVar6 = f->buf;
  uVar3 = pfVar6->cap;
  iVar4 = pfVar6->len;
  uVar5 = in_RCX + iVar4;
  puVar2 = pfVar6->array;
  if (uVar3 < uVar5) {
    runtime_growslice(puVar2,uVar5,uVar3,in_RCX,(internal_abi_Type *)&DAT_00807920,
                      (runtime_slice)in_stack_ffffffffffffff98);
    puVar2 = extraout_RAX_02;
    uVar3 = extraout_RCX_01;
    uVar5 = extraout_RBX_01;
  }
  runtime_memmove(puVar2 + iVar4,in_RBX,in_RCX);
  pfVar6->len = uVar5;
  pfVar6->cap = uVar3;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_01 = puVar2;
    extraout_R11_01[1] = extraout_RSI_01->array;
    pfVar6 = extraout_RSI_01;
  }
  pfVar6->array = puVar2;
  return;
}



void fmt___fmt__padString(fmt_fmt *f,string s)

{
  int iVar1;
  runtime_slice ~r0;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  int extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *puVar2;
  uint8 *extraout_RAX_01;
  uint8 *extraout_RAX_02;
  size_t in_RCX;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  uint uVar3;
  void *in_RBX;
  int iVar4;
  int width;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint uVar5;
  uint extraout_RBX_01;
  fmt_buffer *extraout_RSI;
  fmt_buffer *pfVar6;
  fmt_buffer *extraout_RSI_00;
  fmt_buffer *extraout_RSI_01;
  uint8 **extraout_R11;
  uint8 **extraout_R11_00;
  uint8 **extraout_R11_01;
  int unaff_R14;
  size_t sStack0000000000000018;
  string in_stack_ffffffffffffff98;
  int in_stack_ffffffffffffffa8;
  
  sStack0000000000000018 = in_RCX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((f->fmtFlags).widPresent != false) && (f->wid != 0)) {
    unicode_utf8_RuneCountInString(in_stack_ffffffffffffff98,(int)in_RBX);
    iVar4 = f->wid - extraout_RAX;
    if ((f->fmtFlags).minus == false) {
      fmt___fmt__writePadding(f,iVar4);
      pfVar6 = f->buf;
      uVar3 = pfVar6->cap;
      iVar4 = pfVar6->len;
      uVar5 = iVar4 + sStack0000000000000018;
      puVar2 = pfVar6->array;
      if (uVar3 < uVar5) {
        ~r0_00.cap = in_stack_ffffffffffffffa8;
        ~r0_00.array = in_stack_ffffffffffffff98.str;
        ~r0_00.len = in_stack_ffffffffffffff98.len;
        runtime_growslice(puVar2,uVar5,uVar3,sStack0000000000000018,
                          (internal_abi_Type *)&DAT_00807920,~r0_00);
        puVar2 = extraout_RAX_01;
        uVar3 = extraout_RCX_00;
        uVar5 = extraout_RBX_00;
      }
      runtime_memmove(puVar2 + iVar4,in_RBX,sStack0000000000000018);
      pfVar6->len = uVar5;
      pfVar6->cap = uVar3;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_00 = puVar2;
        extraout_R11_00[1] = extraout_RSI_00->array;
        pfVar6 = extraout_RSI_00;
      }
      pfVar6->array = puVar2;
    }
    else {
      pfVar6 = f->buf;
      uVar3 = pfVar6->cap;
      iVar1 = pfVar6->len;
      uVar5 = sStack0000000000000018 + iVar1;
      puVar2 = pfVar6->array;
      if (uVar3 < uVar5) {
        ~r0.cap = in_stack_ffffffffffffffa8;
        ~r0.array = in_stack_ffffffffffffff98.str;
        ~r0.len = in_stack_ffffffffffffff98.len;
        runtime_growslice(puVar2,uVar5,uVar3,sStack0000000000000018,
                          (internal_abi_Type *)&DAT_00807920,~r0);
        puVar2 = extraout_RAX_00;
        uVar3 = extraout_RCX;
        uVar5 = extraout_RBX;
      }
      runtime_memmove(puVar2 + iVar1,in_RBX,sStack0000000000000018);
      pfVar6->len = uVar5;
      pfVar6->cap = uVar3;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = puVar2;
        extraout_R11[1] = extraout_RSI->array;
        pfVar6 = extraout_RSI;
      }
      pfVar6->array = puVar2;
      fmt___fmt__writePadding(f,iVar4);
    }
    return;
  }
  pfVar6 = f->buf;
  uVar3 = pfVar6->cap;
  iVar4 = pfVar6->len;
  uVar5 = sStack0000000000000018 + iVar4;
  puVar2 = pfVar6->array;
  if (uVar3 < uVar5) {
    ~r0_01.cap = in_stack_ffffffffffffffa8;
    ~r0_01.array = in_stack_ffffffffffffff98.str;
    ~r0_01.len = in_stack_ffffffffffffff98.len;
    runtime_growslice(puVar2,uVar5,uVar3,sStack0000000000000018,(internal_abi_Type *)&DAT_00807920,
                      ~r0_01);
    puVar2 = extraout_RAX_02;
    uVar3 = extraout_RCX_01;
    uVar5 = extraout_RBX_01;
  }
  runtime_memmove(puVar2 + iVar4,in_RBX,sStack0000000000000018);
  pfVar6->len = uVar5;
  pfVar6->cap = uVar3;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_01 = puVar2;
    extraout_R11_01[1] = extraout_RSI_01->array;
    pfVar6 = extraout_RSI_01;
  }
  pfVar6->array = puVar2;
  return;
}



// WARNING: Unknown calling convention

void fmt___fmt__fmtBoolean(fmt_fmt *f,bool v)

{
  int unaff_R14;
  string in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (v) {
    fmt___fmt__padString(f,in_stack_ffffffffffffffe0);
  }
  else {
    fmt___fmt__padString(f,in_stack_ffffffffffffffe0);
  }
  return;
}



// WARNING: Unknown calling convention

void fmt___fmt__fmtUnicode(fmt_fmt *f,uint64 u)

{
  bool bVar1;
  char extraout_AL;
  uint8 *extraout_RAX;
  fmt_fmt *f_00;
  int prec;
  int ~r0;
  uint8 *puVar2;
  sdword sVar3;
  uint uVar4;
  int width;
  int i;
  uint uVar5;
  char cVar6;
  void *in_RDI;
  int iVar7;
  void *extraout_RDI;
  bool oldZero;
  int unaff_R14;
  fmt_fmt *pfStack0000000000000008;
  uint64 uStack0000000000000010;
  __uint8 in_stack_ffffffffffffffa8;
  
  pfStack0000000000000008 = f;
  uStack0000000000000010 = u;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  puVar2 = pfStack0000000000000008->intbuf;
  if ((pfStack0000000000000008->fmtFlags).precPresent == false) {
    i = 0x44;
    prec = 4;
  }
  else {
    prec = pfStack0000000000000008->prec;
    if (prec < 5) {
      i = 0x44;
      prec = 4;
    }
    else {
      i = prec + 9;
      if (i < 0x45) {
        i = 0x44;
      }
      else {
        runtime_makeslice((internal_abi_Type *)&DAT_00807920,i,i,in_RDI);
        puVar2 = extraout_RAX;
      }
    }
  }
  if ((pfStack0000000000000008->fmtFlags).sharp == false) {
    cVar6 = '\0';
  }
  else if (uStack0000000000000010 < 0x110000) {
    strconv_IsPrint((int32)uStack0000000000000010,SUB81(uStack0000000000000010,0));
    cVar6 = extraout_AL;
  }
  else {
    cVar6 = '\0';
  }
  f_00 = pfStack0000000000000008;
  uVar4 = uStack0000000000000010;
  uVar5 = i;
  if (cVar6 != '\0') {
    if ((uint)i <= i - 1U) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    puVar2[i + -1] = 0x27;
    sVar3 = (sdword)uStack0000000000000010;
    if (sVar3 < 0) {
      iVar7 = -1;
    }
    else if (sVar3 < 0x80) {
      iVar7 = 1;
    }
    else if (sVar3 < 0x800) {
      iVar7 = 2;
    }
    else if ((dword)(sVar3 - 0xd800U) < 0x800) {
      iVar7 = -1;
    }
    else if (sVar3 < 0x10000) {
      iVar7 = 3;
    }
    else if (sVar3 < 0x110000) {
      iVar7 = 4;
    }
    else {
      iVar7 = -1;
    }
    iVar7 = i - iVar7;
    if ((uint)i < iVar7 - 1U) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    ~r0 = (i - iVar7) + 1;
    unicode_utf8_EncodeRune
              (in_stack_ffffffffffffffa8,
               (sdword)puVar2 + ((dword)(iVar7 - 1U) & (dword)(-~r0 >> 0x3f)),~r0);
    if ((uint)i <= iVar7 - 2U) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    puVar2[iVar7 + -2] = 0x27;
    if ((uint)i <= iVar7 - 3U) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    puVar2[iVar7 + -3] = 0x20;
    f_00 = pfStack0000000000000008;
    uVar4 = uStack0000000000000010;
    uVar5 = iVar7 - 3U;
  }
  for (; 0xf < uVar4; uVar4 = uVar4 >> 4) {
    if ((uint)i <= uVar5 - 1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    puVar2[uVar5 - 1] = (&DAT_008b6dc9)[(dword)uVar4 & 0xf];
    prec = prec + -1;
    uVar5 = uVar5 - 1;
  }
  if ((uint)i <= uVar5 - 1) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  puVar2[uVar5 - 1] = (&DAT_008b6dc9)[uVar4];
  uVar4 = uVar5 - 1;
  while (prec = prec + -1, 0 < prec) {
    if ((uint)i <= uVar4 - 1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    puVar2[uVar4 - 1] = 0x30;
    uVar4 = uVar4 - 1;
  }
  if (uVar4 - 1 < (uint)i) {
    puVar2[uVar4 - 1] = 0x2b;
    if ((uint)i <= uVar4 - 2) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    puVar2[uVar4 - 2] = 0x55;
    bVar1 = (f_00->fmtFlags).zero;
    (f_00->fmtFlags).zero = false;
    fmt___fmt__pad(f_00,in_stack_ffffffffffffffa8);
    (pfStack0000000000000008->fmtFlags).zero = bVar1;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void fmt___fmt__fmtInteger(fmt_fmt *f,uint64 u,int base,bool isSigned,int32 verb,string digits)

{
  bool bVar1;
  __uint8 b;
  bool oldZero_1;
  uint8 *extraout_RAX;
  bool negative;
  bool oldZero;
  undefined7 in_register_00000039;
  void *~r0;
  int i;
  uint uVar2;
  int in_R8;
  uint in_R9;
  uint8 *puVar3;
  int width;
  int prec;
  int iVar4;
  uint uVar5;
  int unaff_R14;
  bool bVar6;
  int iStack0000000000000028;
  interface___ in_stack_ffffffffffffffc0;
  int in_stack_ffffffffffffffd0;
  
  ~r0 = (void *)CONCAT71(in_register_00000039,isSigned);
  iStack0000000000000028 = in_R8;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0 = (void *)((uint)~r0 & 0xff);
  }
  bVar6 = (char)~r0 != '\0';
  bVar1 = (int)u < 0;
  negative = bVar6 && bVar1;
  if (bVar6 && bVar1) {
    u = -u;
  }
  puVar3 = f->intbuf;
  if (((f->fmtFlags).widPresent == false) && ((f->fmtFlags).precPresent == false)) {
    i = 0x44;
  }
  else {
    i = f->wid + f->prec + 3;
    if (i < 0x45) {
      i = 0x44;
    }
    else {
      runtime_makeslice((internal_abi_Type *)&DAT_00807920,i,i,~r0);
      puVar3 = extraout_RAX;
    }
  }
  if ((f->fmtFlags).precPresent == false) {
    if (((f->fmtFlags).zero == false) || ((f->fmtFlags).widPresent == false)) {
      iVar4 = 0;
    }
    else {
      iVar4 = f->wid;
      if (((negative) || ((f->fmtFlags).plus != false)) || ((f->fmtFlags).space != false)) {
        iVar4 = iVar4 + -1;
      }
    }
  }
  else {
    iVar4 = f->prec;
    if ((iVar4 == 0) && (u == 0)) {
      bVar1 = (f->fmtFlags).zero;
      (f->fmtFlags).zero = false;
      fmt___fmt__writePadding(f,f->wid);
      (f->fmtFlags).zero = bVar1;
      return;
    }
  }
  uVar2 = i;
  if (base < 9) {
    if (base == 2) {
      for (; 1 < u; u = u >> 1) {
        if ((uint)i <= uVar2 - 1) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        puVar3[uVar2 - 1] = ((byte)u & 1) + 0x30;
        uVar2 = uVar2 - 1;
      }
    }
    else {
      if (base != 8) {
LAB_004ead2a:
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffffc0);
      }
      for (; 7 < u; u = u >> 3) {
        if ((uint)i <= uVar2 - 1) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        puVar3[uVar2 - 1] = ((byte)u & 7) + 0x30;
        uVar2 = uVar2 - 1;
      }
    }
  }
  else if (base == 10) {
