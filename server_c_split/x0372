  *extraout_RAX_07 = 5;
  local_11 = 7;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082f320,(runtime_hmap *)local_10,&local_11,~r0_08)
  ;
  *extraout_RAX_08 = 5;
  local_11 = 2;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082f320,(runtime_hmap *)local_10,&local_11,~r0_09)
  ;
  *extraout_RAX_09 = 5;
  local_11 = 0x10;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082f320,(runtime_hmap *)local_10,&local_11,~r0_10)
  ;
  *extraout_RAX_10 = 1;
  local_11 = 6;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082f320,(runtime_hmap *)local_10,&local_11,~r0_11)
  ;
  *extraout_RAX_11 = 1;
  local_11 = 1;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082f320,(runtime_hmap *)local_10,&local_11,~r0_12)
  ;
  *extraout_RAX_12 = 1;
  local_11 = 9;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082f320,(runtime_hmap *)local_10,&local_11,~r0_13)
  ;
  *extraout_RAX_13 = 2;
  local_11 = 0xc;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082f320,(runtime_hmap *)local_10,&local_11,~r0_14)
  ;
  *extraout_RAX_14 = 2;
  local_11 = 0xb;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082f320,(runtime_hmap *)local_10,&local_11,~r0_15)
  ;
  *extraout_RAX_15 = 2;
  local_11 = 10;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082f320,(runtime_hmap *)local_10,&local_11,~r0_16)
  ;
  *extraout_RAX_16 = 3;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = local_10;
    extraout_R11[1] = google_golang_org_protobuf_internal_impl_wireTypes;
  }
  google_golang_org_protobuf_internal_impl_wireTypes = local_10;
  return;
}



void google_golang_org_protobuf_internal_impl___MessageInfo__makeReflectFuncs___MessageInfo__makeExtensionFieldsFunc_func2
               (google_golang_org_protobuf_internal_impl_extensionMap *~r0)

{
  return;
}



void type__eq_google_golang_org_protobuf_internal_impl_unmarshalOptions
               (google_golang_org_protobuf_internal_impl_unmarshalOptions *p,
               google_golang_org_protobuf_internal_impl_unmarshalOptions *q,bool r)

{
  runtime_itab *tab;
  undefined in_DIL;
  undefined extraout_DIL;
  int unaff_R14;
  google_golang_org_protobuf_internal_impl_unmarshalOptions *pgStack0000000000000008;
  google_golang_org_protobuf_internal_impl_unmarshalOptions *pgStack0000000000000010;
  
  pgStack0000000000000008 = p;
  pgStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  if ((pgStack0000000000000010->flags == pgStack0000000000000008->flags) &&
     (tab = (pgStack0000000000000008->resolver).tab, (pgStack0000000000000010->resolver).tab == tab)
     ) {
    runtime_ifaceeq(tab,(pgStack0000000000000008->resolver).data,
                    (pgStack0000000000000010->resolver).data,(bool)in_DIL);
  }
  return;
}



void type__eq_google_golang_org_protobuf_internal_impl_unmarshalOutput
               (google_golang_org_protobuf_internal_impl_unmarshalOutput *p,
               google_golang_org_protobuf_internal_impl_unmarshalOutput *q,bool r)

{
  if (q->n == p->n) {
    return;
  }
  return;
}



void type__eq_google_golang_org_protobuf_internal_impl_validationInfo
               (google_golang_org_protobuf_internal_impl_validationInfo *p,
               google_golang_org_protobuf_internal_impl_validationInfo *q,bool r)

{
  if ((((q->mi == p->mi) && (q->typ == p->typ)) && (q->keyType == p->keyType)) &&
     (q->valType == p->valType)) {
    return;
  }
  return;
}



void type__eq_google_golang_org_protobuf_internal_impl_legacyEnumWrapper
               (google_golang_org_protobuf_internal_impl_legacyEnumWrapper *p,
               google_golang_org_protobuf_internal_impl_legacyEnumWrapper *q,bool r)

{
  runtime_itab *prVar1;
  char extraout_AL;
  undefined in_DIL;
  bool ~r0;
  undefined extraout_DIL;
  int unaff_R14;
  google_golang_org_protobuf_internal_impl_legacyEnumWrapper *pgStack0000000000000008;
  google_golang_org_protobuf_internal_impl_legacyEnumWrapper *pgStack0000000000000010;
  
  pgStack0000000000000008 = p;
  pgStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  if ((((pgStack0000000000000010->num == pgStack0000000000000008->num) &&
       (prVar1 = (pgStack0000000000000008->pbTyp).tab,
       (pgStack0000000000000010->pbTyp).tab == prVar1)) &&
      (runtime_ifaceeq(prVar1,(pgStack0000000000000008->pbTyp).data,
                       (pgStack0000000000000010->pbTyp).data,(bool)in_DIL), extraout_AL != '\0')) &&
     (prVar1 = (pgStack0000000000000008->goTyp).tab, (pgStack0000000000000010->goTyp).tab == prVar1)
     ) {
    runtime_ifaceeq(prVar1,(pgStack0000000000000008->goTyp).data,
                    (pgStack0000000000000010->goTyp).data,~r0);
  }
  return;
}



void type__eq_google_golang_org_protobuf_internal_impl_placeholderExtension
               (google_golang_org_protobuf_internal_impl_placeholderExtension *p,
               google_golang_org_protobuf_internal_impl_placeholderExtension *q,bool r)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((q->name).len == (p->name).len) && (q->number == p->number)) {
    runtime_memequal();
  }
  return;
}



void type__eq_google_golang_org_protobuf_internal_impl_ExtensionInfo
               (google_golang_org_protobuf_internal_impl_ExtensionInfo *p,
               google_golang_org_protobuf_internal_impl_ExtensionInfo *q,bool r)

{
  runtime_itab *prVar1;
  internal_abi_Type *t;
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  char extraout_AL_02;
  char extraout_AL_03;
  char extraout_AL_04;
  char extraout_AL_05;
  bool ~r0;
  bool ~r0_00;
  undefined8 in_RDI;
  undefined8 extraout_RDI;
  int unaff_R14;
  google_golang_org_protobuf_internal_impl_ExtensionInfo *pgStack0000000000000008;
  google_golang_org_protobuf_internal_impl_ExtensionInfo *pgStack0000000000000010;
  
  pgStack0000000000000008 = p;
  pgStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  if (((((((pgStack0000000000000010->init == pgStack0000000000000008->init) &&
          ((pgStack0000000000000010->mu).state == (pgStack0000000000000008->mu).state)) &&
         ((pgStack0000000000000010->mu).sema == (pgStack0000000000000008->mu).sema)) &&
        (((prVar1 = (pgStack0000000000000008->goType).tab,
          (pgStack0000000000000010->goType).tab == prVar1 &&
          (runtime_ifaceeq(prVar1,(pgStack0000000000000008->goType).data,
                           (pgStack0000000000000010->goType).data,SUB81(in_RDI,0)),
          extraout_AL != '\0')) &&
         ((prVar1 = (pgStack0000000000000008->desc).ExtensionDescriptor.tab,
          (pgStack0000000000000010->desc).ExtensionDescriptor.tab == prVar1 &&
          ((runtime_ifaceeq(prVar1,(pgStack0000000000000008->desc).ExtensionDescriptor.data,
                            (pgStack0000000000000010->desc).ExtensionDescriptor.data,~r0),
           extraout_AL_00 != '\0' &&
           ((pgStack0000000000000010->desc).xi == (pgStack0000000000000008->desc).xi)))))))) &&
       ((prVar1 = (pgStack0000000000000008->conv).tab, (pgStack0000000000000010->conv).tab == prVar1
        && (((runtime_ifaceeq(prVar1,(pgStack0000000000000008->conv).data,
                              (pgStack0000000000000010->conv).data,SUB81(pgStack0000000000000010,0))
             , extraout_AL_01 != '\0' &&
             (pgStack0000000000000010->info == pgStack0000000000000008->info)) &&
            (prVar1 = (pgStack0000000000000008->ExtendedType).tab,
            (pgStack0000000000000010->ExtendedType).tab == prVar1)))))) &&
      (((runtime_ifaceeq(prVar1,(pgStack0000000000000008->ExtendedType).data,
                         (pgStack0000000000000010->ExtendedType).data,
                         SUB81(pgStack0000000000000010,0)), extraout_AL_02 != '\0' &&
        (t = (pgStack0000000000000008->ExtensionType)._type,
        (pgStack0000000000000010->ExtensionType)._type == t)) &&
       (((runtime_efaceeq(t,(pgStack0000000000000008->ExtensionType).data,
                          (pgStack0000000000000010->ExtensionType).data,~r0_00),
         extraout_AL_03 != '\0' &&
         ((pgStack0000000000000010->Field == pgStack0000000000000008->Field &&
          ((pgStack0000000000000010->Name).len == (pgStack0000000000000008->Name).len)))) &&
        ((pgStack0000000000000008->Tag).len == (pgStack0000000000000010->Tag).len)))))) &&
     ((((pgStack0000000000000008->Filename).len == (pgStack0000000000000010->Filename).len &&
       (runtime_memequal(), extraout_AL_04 != '\0')) && (runtime_memequal(), extraout_AL_05 != '\0')
      ))) {
    runtime_memequal();
  }
  return;
}



void type__eq_google_golang_org_protobuf_internal_impl_extensionTypeDescriptor
               (google_golang_org_protobuf_internal_impl_extensionTypeDescriptor *p,
               google_golang_org_protobuf_internal_impl_extensionTypeDescriptor *q,bool r)

{
  runtime_itab *tab;
  undefined in_DIL;
  undefined extraout_DIL;
  int unaff_R14;
  google_golang_org_protobuf_internal_impl_extensionTypeDescriptor *pgStack0000000000000008;
  google_golang_org_protobuf_internal_impl_extensionTypeDescriptor *pgStack0000000000000010;
  
  pgStack0000000000000008 = p;
  pgStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  tab = (pgStack0000000000000008->ExtensionDescriptor).tab;
  if ((pgStack0000000000000010->ExtensionDescriptor).tab == tab) {
    runtime_ifaceeq(tab,(pgStack0000000000000008->ExtensionDescriptor).data,
                    (pgStack0000000000000010->ExtensionDescriptor).data,(bool)in_DIL);
  }
  return;
}



void type__eq_google_golang_org_protobuf_internal_impl_listReflect
               (google_golang_org_protobuf_internal_impl_listReflect *p,
               google_golang_org_protobuf_internal_impl_listReflect *q,bool r)

{
  runtime_itab *tab;
  undefined in_DIL;
  undefined extraout_DIL;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  if (((((q->v).typ_ == (p->v).typ_) && ((q->v).ptr == (p->v).ptr)) && ((q->v).flag == (p->v).flag))
     && (tab = (p->conv).tab, (q->conv).tab == tab)) {
    runtime_ifaceeq(tab,(p->conv).data,(q->conv).data,(bool)in_DIL);
  }
  return;
}



void type__eq_google_golang_org_protobuf_internal_impl_listPtrConverter
               (google_golang_org_protobuf_internal_impl_listPtrConverter *p,
               google_golang_org_protobuf_internal_impl_listPtrConverter *q,bool r)

{
  runtime_itab *prVar1;
  char extraout_AL;
  undefined in_DIL;
  bool ~r0;
  undefined extraout_DIL;
  int unaff_R14;
  google_golang_org_protobuf_internal_impl_listPtrConverter *pgStack0000000000000008;
  google_golang_org_protobuf_internal_impl_listPtrConverter *pgStack0000000000000010;
  
  pgStack0000000000000008 = p;
  pgStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  prVar1 = (pgStack0000000000000008->goType).tab;
  if ((((pgStack0000000000000010->goType).tab == prVar1) &&
      (runtime_ifaceeq(prVar1,(pgStack0000000000000008->goType).data,
                       (pgStack0000000000000010->goType).data,(bool)in_DIL), extraout_AL != '\0'))
     && (prVar1 = (pgStack0000000000000008->c).tab, (pgStack0000000000000010->c).tab == prVar1)) {
    runtime_ifaceeq(prVar1,(pgStack0000000000000008->c).data,(pgStack0000000000000010->c).data,~r0);
  }
  return;
}



void type__eq_google_golang_org_protobuf_internal_impl_listConverter
               (google_golang_org_protobuf_internal_impl_listConverter *p,
               google_golang_org_protobuf_internal_impl_listConverter *q,bool r)

{
  runtime_itab *prVar1;
  char extraout_AL;
  undefined in_DIL;
  bool ~r0;
  undefined extraout_DIL;
  int unaff_R14;
  google_golang_org_protobuf_internal_impl_listConverter *pgStack0000000000000008;
  google_golang_org_protobuf_internal_impl_listConverter *pgStack0000000000000010;
  
  pgStack0000000000000008 = p;
  pgStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  prVar1 = (pgStack0000000000000008->goType).tab;
  if ((((pgStack0000000000000010->goType).tab == prVar1) &&
      (runtime_ifaceeq(prVar1,(pgStack0000000000000008->goType).data,
                       (pgStack0000000000000010->goType).data,(bool)in_DIL), extraout_AL != '\0'))
     && (prVar1 = (pgStack0000000000000008->c).tab, (pgStack0000000000000010->c).tab == prVar1)) {
    runtime_ifaceeq(prVar1,(pgStack0000000000000008->c).data,(pgStack0000000000000010->c).data,~r0);
  }
  return;
}



void type__eq_google_golang_org_protobuf_internal_impl_mapConverter
               (google_golang_org_protobuf_internal_impl_mapConverter *p,
               google_golang_org_protobuf_internal_impl_mapConverter *q,bool r)

{
  runtime_itab *prVar1;
  char extraout_AL;
  char extraout_AL_00;
  undefined in_DIL;
  bool ~r0;
  bool ~r0_00;
  undefined extraout_DIL;
  int unaff_R14;
  google_golang_org_protobuf_internal_impl_mapConverter *pgStack0000000000000008;
  google_golang_org_protobuf_internal_impl_mapConverter *pgStack0000000000000010;
  
  pgStack0000000000000008 = p;
  pgStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  prVar1 = (pgStack0000000000000008->goType).tab;
  if (((((pgStack0000000000000010->goType).tab == prVar1) &&
       (runtime_ifaceeq(prVar1,(pgStack0000000000000008->goType).data,
                        (pgStack0000000000000010->goType).data,(bool)in_DIL), extraout_AL != '\0'))
      && (prVar1 = (pgStack0000000000000008->keyConv).tab,
         (pgStack0000000000000010->keyConv).tab == prVar1)) &&
     ((runtime_ifaceeq(prVar1,(pgStack0000000000000008->keyConv).data,
                       (pgStack0000000000000010->keyConv).data,~r0), extraout_AL_00 != '\0' &&
      (prVar1 = (pgStack0000000000000008->valConv).tab,
      (pgStack0000000000000010->valConv).tab == prVar1)))) {
    runtime_ifaceeq(prVar1,(pgStack0000000000000008->valConv).data,
                    (pgStack0000000000000010->valConv).data,~r0_00);
  }
  return;
}



void type__eq_google_golang_org_protobuf_internal_impl_mapReflect
               (google_golang_org_protobuf_internal_impl_mapReflect *p,
               google_golang_org_protobuf_internal_impl_mapReflect *q,bool r)

{
  runtime_itab *prVar1;
  char extraout_AL;
  undefined in_DIL;
  bool ~r0;
  undefined extraout_DIL;
  int unaff_R14;
  google_golang_org_protobuf_internal_impl_mapReflect *pgStack0000000000000008;
  google_golang_org_protobuf_internal_impl_mapReflect *pgStack0000000000000010;
  
  pgStack0000000000000008 = p;
  pgStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  if (((((pgStack0000000000000010->v).typ_ == (pgStack0000000000000008->v).typ_) &&
       ((pgStack0000000000000010->v).ptr == (pgStack0000000000000008->v).ptr)) &&
      ((pgStack0000000000000010->v).flag == (pgStack0000000000000008->v).flag)) &&
     (((prVar1 = (pgStack0000000000000008->keyConv).tab,
       (pgStack0000000000000010->keyConv).tab == prVar1 &&
       (runtime_ifaceeq(prVar1,(pgStack0000000000000008->keyConv).data,
                        (pgStack0000000000000010->keyConv).data,(bool)in_DIL), extraout_AL != '\0'))
      && (prVar1 = (pgStack0000000000000008->valConv).tab,
         (pgStack0000000000000010->valConv).tab == prVar1)))) {
    runtime_ifaceeq(prVar1,(pgStack0000000000000008->valConv).data,
                    (pgStack0000000000000010->valConv).data,~r0);
  }
  return;
}



void type__eq_google_golang_org_protobuf_internal_impl_mapEntryType
               (google_golang_org_protobuf_internal_impl_mapEntryType *p,
               google_golang_org_protobuf_internal_impl_mapEntryType *q,bool r)

{
  runtime_itab *tab;
  internal_abi_Type *t;
  char extraout_AL;
  undefined in_DIL;
  bool ~r0;
  undefined extraout_DIL;
  int unaff_R14;
  google_golang_org_protobuf_internal_impl_mapEntryType *pgStack0000000000000008;
  google_golang_org_protobuf_internal_impl_mapEntryType *pgStack0000000000000010;
  
  pgStack0000000000000008 = p;
  pgStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  tab = (pgStack0000000000000008->desc).tab;
  if ((((pgStack0000000000000010->desc).tab == tab) &&
      (runtime_ifaceeq(tab,(pgStack0000000000000008->desc).data,(pgStack0000000000000010->desc).data
                       ,(bool)in_DIL), extraout_AL != '\0')) &&
     (t = (pgStack0000000000000008->valType)._type, (pgStack0000000000000010->valType)._type == t))
  {
    runtime_efaceeq(t,(pgStack0000000000000008->valType).data,
                    (pgStack0000000000000010->valType).data,~r0);
  }
  return;
}



// WARNING: Unknown calling convention

void google_golang_org_protobuf_internal_impl___pointer__AppendPointerSlice
               (google_golang_org_protobuf_internal_impl_pointer v)

{
  int *piVar1;
  int *in_RAX;
  void *extraout_RAX;
  void *extraout_RAX_00;
  void *extraout_RAX_01;
  void *oldPtr;
  void *extraout_RCX;
  void *extraout_RCX_00;
  void *oldCap;
  void **ppvVar2;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *newLen;
  void *extraout_R8;
  void **extraout_R11;
  void **extraout_R11_00;
  int unaff_R14;
  int *piStack0000000000000008;
  void *in_stack_00000010;
  runtime_slice in_stack_ffffffffffffffa8;
  
  piStack0000000000000008 = in_RAX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000010 = v.p;
    runtime_morestack_noctxt();
    v.p = in_stack_00000010;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffa8;
  }
  if (piStack0000000000000008 != (int *)0x0) {
    ppvVar2 = (void **)*piStack0000000000000008;
    oldCap = ppvVar2[2];
    newLen = (void *)((int)ppvVar2[1] + 1);
    oldPtr = *ppvVar2;
    if (oldCap < newLen) {
      runtime_growslice(oldPtr,(int)newLen,(int)oldCap,1,(internal_abi_Type *)&DAT_008a73a0,
                        in_stack_ffffffffffffffa8);
      oldPtr = extraout_RAX;
      oldCap = extraout_RCX;
      newLen = extraout_RBX;
    }
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RBX_00;
      extraout_R11[1] = *(void **)((int)extraout_RAX_00 + (int)extraout_R8 * 8 + -8);
      oldPtr = extraout_RAX_00;
      oldCap = extraout_RCX_00;
      v.p = extraout_RBX_00;
      newLen = extraout_R8;
    }
    *(void **)((int)oldPtr + (int)newLen * 8 + -8) = v.p;
    ppvVar2[1] = newLen;
    ppvVar2[2] = oldCap;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RAX_01;
      extraout_R11_00[1] = *ppvVar2;
      oldPtr = extraout_RAX_01;
    }
    *ppvVar2 = oldPtr;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__Apply
               (google_golang_org_protobuf_internal_impl_offset f,
               google_golang_org_protobuf_internal_impl_pointer ~r0)

{
  int *piVar1;
  int unaff_R14;
  int *in_stack_00000008;
  void *in_stack_00000010;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = (int *)f;
    in_stack_00000010 = ~r0.p;
    runtime_morestack_noctxt();
    f = (google_golang_org_protobuf_internal_impl_offset)in_stack_00000008;
    ~r0.p = in_stack_00000010;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffe8;
  }
  if ((int *)f != (int *)0x0) {
    if (*(int *)f != 0) {
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe8);
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__AsIfaceOf(reflect_Type t,interface___ ~r0)

{
  reflect_Type **pprVar1;
  interface___ ~r0_00;
  runtime_itab *in_RAX;
  void *unaff_RBP;
  int unaff_R14;
  reflect_Type in_stack_ffffffffffffffe0;
  internal_abi_Type *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    t.tab = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = t.tab;
  }
  pprVar1 = *(reflect_Type ***)(unaff_R14 + 0x20);
  if ((pprVar1 != (reflect_Type **)0x0) && (*pprVar1 == &t)) {
    *pprVar1 = (reflect_Type *)&stack0xffffffffffffffe0;
  }
  if (in_RAX != (runtime_itab *)0x0) {
    ~r0_00.data = unaff_RBP;
    ~r0_00._type = in_stack_fffffffffffffff0;
    google_golang_org_protobuf_internal_impl_pointer_AsIfaceOf
              ((google_golang_org_protobuf_internal_impl_pointer)in_RAX->inter,
               in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void google_golang_org_protobuf_internal_impl___pointer__AsValueOf(reflect_Type t,reflect_Value ~r0)

{
  reflect_Type **pprVar1;
  reflect_Value ~r0_00;
  runtime_itab *in_RAX;
  void *in_RBX;
  undefined8 unaff_RBP;
  int unaff_R14;
  reflect_flag unaff_retaddr;
  reflect_Type in_stack_ffffffffffffffe0;
  undefined8 in_stack_fffffffffffffff0;
  
  t.data = in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    t.tab = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = t.tab;
  }
  pprVar1 = *(reflect_Type ***)(unaff_R14 + 0x20);
  if ((pprVar1 != (reflect_Type **)0x0) && (*pprVar1 == &t)) {
    *pprVar1 = (reflect_Type *)&stack0xffffffffffffffe0;
  }
  if (in_RAX != (runtime_itab *)0x0) {
    ~r0_00.ptr = (void *)unaff_RBP;
    ~r0_00.typ_ = (internal_abi_Type *)in_stack_fffffffffffffff0;
    ~r0_00.flag = unaff_retaddr;
    reflect_NewAt(in_stack_ffffffffffffffe0,t.data,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__Bool(bool *~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (bool *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__BoolPtr(bool **~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (bool **)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__BoolSlice(__bool *~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (__bool *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__Bytes(__uint8 *~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (__uint8 *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__BytesPtr(__uint8 **~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (__uint8 **)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__BytesSlice(____uint8 *~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (____uint8 *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__Elem
               (google_golang_org_protobuf_internal_impl_pointer ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0.p != (void *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__Extensions
               (map_int32_google_golang_org_protobuf_internal_impl_ExtensionField *~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (map_int32_google_golang_org_protobuf_internal_impl_ExtensionField *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__Float32(float32 *~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (float32 *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__Float32Ptr(float32 **~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (float32 **)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__Float32Slice(__float32 *~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (__float32 *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__Float64(float64 *~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (float64 *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__Float64Ptr(float64 **~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (float64 **)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__Float64Slice(__float64 *~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (__float64 *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__Int32(int32 *~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (int32 *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__Int32Ptr(int32 **~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (int32 **)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__Int32Slice(__int32 *~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (__int32 *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__Int64(int64 *~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != (int64 *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void google_golang_org_protobuf_internal_impl___pointer__Int64Ptr(int64 **~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
