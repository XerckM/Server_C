    }
    iVar3 = *(int *)(i + 0x40);
    i = *(int *)(i + 0x38);
    pvVar4 = (void *)j;
  }
  else {
    if (uVar2 != 0x17) {
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,(void *)j);
      extraout_RAX_02[1] = 0x14;
      *extraout_RAX_02 = &DAT_008b903b;
      extraout_RAX_02[2] = uVar2;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffd0);
    }
    pvVar4 = *(void **)j;
    iVar3 = *(int *)(j + 0x10);
  }
  if ((((-1 < in_RDI) && (in_RDI <= in_RSI)) && (in_RSI <= in_R8)) && (in_R8 <= iVar3)) {
    runtime_newobject((internal_abi_Type *)&DAT_00801de0,pvVar4);
    *extraout_RAX = (void *)0x0;
    extraout_RAX[1] = (void *)(in_RSI - in_RDI);
    extraout_RAX[2] = (void *)(in_R8 - in_RDI);
    if ((int)(void *)(in_R8 - in_RDI) < 1) {
      ppvVar1 = extraout_RAX;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_00 = pvVar4;
        extraout_R11_00[1] = *extraout_RAX_01;
        ppvVar1 = extraout_RAX_01;
      }
      *ppvVar1 = pvVar4;
    }
    else {
      pvVar4 = (void *)(in_RDI * **(int **)(i + 0x30) + (int)pvVar4);
      ppvVar1 = extraout_RAX;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = pvVar4;
        extraout_R11[1] = *extraout_RAX_00;
        ppvVar1 = extraout_RAX_00;
      }
      *ppvVar1 = pvVar4;
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffd0);
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void reflect_Value_String(reflect_Value v,string ~r0)

{
  string ~r0_00;
  dword in_ECX;
  uint8 *unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  reflect_Value in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_ECX & 0x1f) == 0x18) {
    return;
  }
  ~r0_00.len = unaff_retaddr;
  ~r0_00.str = unaff_RBP;
  reflect_Value_stringNonString(in_stack_ffffffffffffffe0,~r0_00);
  return;
}



void reflect_Value_stringNonString(reflect_Value v,string ~r0)

{
  reflect_Value v_00;
  string a1;
  reflect_Type ~r0_00;
  string a2;
  string ~r0_01;
  undefined8 in_RAX;
  undefined1 *puVar1;
  undefined1 *extraout_RAX;
  uint in_RCX;
  undefined8 extraout_RBX;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  uint8 *in_stack_ffffffffffffffd0;
  runtime_itab *in_stack_ffffffffffffffd8;
  uint8 *in_stack_ffffffffffffffe0;
  int in_stack_ffffffffffffffe8;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_RCX & 0x1f) != 0) {
    if ((in_RCX == 0) || (((dword)in_RCX >> 9 & 1) != 0)) {
      v_00.flag = (reflect_flag)in_stack_ffffffffffffffd0;
      v_00.typ_ = (internal_abi_Type *)in_stack_ffffffffffffffc0.str;
      v_00.ptr = (void *)in_stack_ffffffffffffffc0.len;
      ~r0_00.data = in_stack_ffffffffffffffe0;
      ~r0_00.tab = in_stack_ffffffffffffffd8;
      reflect_Value_typeSlow(v_00,~r0_00);
      puVar1 = extraout_RAX;
      in_RAX = extraout_RBX;
    }
    else {
      puVar1 = go_itab__reflect_rtype_reflect_Type;
    }
    (**(code **)(puVar1 + 0xf8))(in_RAX);
    a1.len = (int)in_stack_ffffffffffffffd8;
    a1.str = in_stack_ffffffffffffffd0;
    a2.len = in_stack_ffffffffffffffe8;
    a2.str = in_stack_ffffffffffffffe0;
    ~r0_01.len = unaff_RBP;
    ~r0_01.str = in_stack_fffffffffffffff0;
    runtime_concatstring3((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,a1,a2,~r0_01);
    return;
  }
  return;
}



void reflect_Value_TryRecv(reflect_Value v,reflect_Value x,bool ok)

{
  undefined7 in_register_00000001;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  uint in_RCX;
  uint uVar2;
  void *in_RBX;
  void *~r0;
  undefined8 *extraout_R11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffb0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar2 = (uint)((dword)in_RCX & 0x1f);
  if (uVar2 == 0x12) {
    if ((in_RCX & 0x60) != 0) {
      reflect_flag_mustBeExportedSlow(in_RCX);
    }
    reflect_Value_recv(CONCAT71(in_register_00000001,ok),in_RBX,in_RCX,1);
    return;
  }
  reflect_valueMethodName((string)in_stack_ffffffffffffffb0);
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0);
  extraout_RAX_00[1] = ~r0;
  puVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RAX;
    puVar1 = extraout_RAX_01;
  }
  *puVar1 = extraout_RAX;
  puVar1[2] = uVar2;
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffb0);
}



void reflect_Value_TrySend(reflect_Value v,reflect_Value x,bool ~r0)

{
  undefined7 in_register_00000001;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  uint in_RCX;
  uint uVar2;
  void *in_RBX;
  void *~r0_00;
  int in_RDI;
  undefined8 *extraout_R11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff80;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar2 = (uint)((dword)in_RCX & 0x1f);
  if (uVar2 == 0x12) {
    if ((in_RCX & 0x60) != 0) {
      reflect_flag_mustBeExportedSlow(in_RCX);
    }
    reflect_Value_send(CONCAT71(in_register_00000001,~r0),in_RBX,in_RCX,in_RDI);
    return;
  }
  reflect_valueMethodName((string)in_stack_ffffffffffffff80);
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_00);
  extraout_RAX_00[1] = ~r0_00;
  puVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RAX;
    puVar1 = extraout_RAX_01;
  }
  *puVar1 = extraout_RAX;
  puVar1[2] = uVar2;
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffff80);
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void reflect_Value_Type(reflect_Value v,reflect_Type ~r0)

{
  reflect_Type ~r0_00;
  int in_RCX;
  runtime_itab *unaff_RBP;
  int unaff_R14;
  void *unaff_retaddr;
  reflect_Value in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_RCX != 0) && (((dword)in_RCX >> 9 & 1) == 0)) {
    return;
  }
  ~r0_00.data = unaff_retaddr;
  ~r0_00.tab = unaff_RBP;
  reflect_Value_typeSlow(in_stack_ffffffffffffffe0,~r0_00);
  return;
}



void reflect_Value_typeSlow(reflect_Value v,reflect_Type ~r0)

{
  __internal_abi_Method ~r0_00;
  internal_abi_Type *in_RAX;
  int extraout_RAX;
  undefined8 *extraout_RAX_00;
  int in_RCX;
  void *~r0_01;
  int i;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RCX == 0) {
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
    extraout_RAX_00[1] = 0x12;
    *extraout_RAX_00 = &DAT_008b7bb9;
    extraout_RAX_00[2] = 0;
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffd8);
  }
  if (((dword)in_RCX >> 9 & 1) == 0) {
    return;
  }
  ~r0_01 = (void *)(in_RCX >> 10);
  if ((in_RAX->Kind_ & 0x1f) == 0x14) {
    if (~r0_01 < *(void **)&in_RAX[1].Hash) {
      reflect_resolveTypeOff(in_RAX,*(int32 *)(in_RAX[1].PtrBytes + 4 + (int)~r0_01 * 8),~r0_01);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffd8);
  }
  ~r0_00.cap = (int)~r0_01;
  ~r0_00.array = (internal_abi_Method *)in_stack_ffffffffffffffd8._type;
  ~r0_00.len = (int)in_stack_ffffffffffffffd8.data;
  internal_abi___Type__ExportedMethods(in_RAX,~r0_00);
  if (~r0_01 < extraout_RBX) {
    reflect_resolveTypeOff
              (in_RAX,*(int32 *)(extraout_RAX + 4 + (int)(void *)((int)~r0_01 * 0x10)),
               (void *)((int)~r0_01 * 0x10));
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffd8);
}



void reflect_Value_CanUint(reflect_Value v,bool ~r0)

{
  dword in_ECX;
  
  if ((in_ECX & 0x1f) - 7 < 6) {
    return;
  }
  return;
}



void reflect_Value_Uint(reflect_Value v,uint64 ~r0)

{
  undefined8 *extraout_RAX;
  dword in_ECX;
  uint uVar1;
  reflect_Kind k;
  void *in_RBX;
  void *p;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar1 = (uint)(in_ECX & 0x1f);
  if (uVar1 < 10) {
    if (uVar1 == 7) {
      return;
    }
    if (uVar1 == 8) {
      return;
    }
    if (uVar1 == 9) {
      return;
    }
  }
  else {
    if (uVar1 == 10) {
      return;
    }
    if (uVar1 == 0xb) {
      return;
    }
    if (uVar1 == 0xc) {
      return;
    }
  }
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
  extraout_RAX[1] = 0x12;
  *extraout_RAX = &DAT_008b7823;
  extraout_RAX[2] = uVar1;
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe0);
}



void reflect_Value_UnsafeAddr(reflect_Value v,uintptr ~r0)

{
  void *pvVar1;
  undefined8 *extraout_RAX;
  dword in_ECX;
  void *in_RBX;
  void *extraout_RBX;
  void **extraout_R11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (~r0 == 0) {
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
    extraout_RAX[1] = 0x18;
    *extraout_RAX = &DAT_008bb505;
    extraout_RAX[2] = 0;
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe8);
  }
  if ((in_ECX >> 8 & 1) == 0) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe8);
  }
  pvVar1 = reflect_dummy.x.data;
  if ((reflect_dummy.b != false) &&
     (reflect_dummy.x._type = (internal_abi_Type *)&DAT_008079a0, pvVar1 = in_RBX,
     runtime_writeBarrier._0_4_ != 0)) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RBX;
    extraout_R11[1] = reflect_dummy.x.data;
    pvVar1 = extraout_RBX;
  }
  reflect_dummy.x.data = pvVar1;
  return;
}



void reflect_Value_UnsafePointer(reflect_Value v,void *~r0)

{
  char extraout_AL;
  undefined8 *extraout_RAX;
  dword in_ECX;
  uint uVar1;
  reflect_Kind k;
  uintptr *in_RBX;
  void *p;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar1 = (uint)(in_ECX & 0x1f);
  if (uVar1 < 0x16) {
    if (uVar1 != 0x12) {
      if (uVar1 == 0x13) {
        if ((in_ECX >> 9 & 1) != 0) {
          return;
        }
                    // WARNING: Load size is inaccurate
        if ((*~r0 == 8) && (*(int *)((int)~r0 + 8) != 0)) {
          return;
        }
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffffd8);
      }
      if (uVar1 != 0x15) {
LAB_004df3c7:
        runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
        extraout_RAX[1] = 0x1b;
        *extraout_RAX = &DAT_008bd132;
        extraout_RAX[2] = uVar1;
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffffd8);
      }
    }
  }
  else if (uVar1 == 0x16) {
    if (*(int *)((int)~r0 + 8) == 0) {
      reflect_verifyNotInHeapPtr(*in_RBX,SUB81(in_RBX,0));
      if (extraout_AL != '\0') {
        return;
      }
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffd8);
    }
  }
  else {
    if (uVar1 == 0x17) {
      return;
    }
    if (uVar1 != 0x1a) goto LAB_004df3c7;
  }
                    // WARNING: Load size is inaccurate
  if ((*~r0 == 8) && (*(int *)((int)~r0 + 8) != 0)) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffd8);
}



void reflect_typesMustMatch(string what,reflect_Type t1,reflect_Type t2)

{
  string ~r0;
  char extraout_AL;
  void *x;
  runtime_itab *in_RCX;
  int extraout_RBX;
  runtime_itab *in_RSI;
  void *in_RDI;
  void *in_R8;
  int unaff_R14;
  interface___ e;
  string in_stack_ffffffffffffff90;
  string in_stack_ffffffffffffffa0;
  string in_stack_ffffffffffffffb0;
  string in_stack_ffffffffffffffc0;
  uint8 *in_stack_ffffffffffffffd0;
  int iVar1;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RSI == in_RCX) {
    runtime_ifaceeq(in_RCX,in_RDI,in_R8,SUB81(in_RDI,0));
    if (extraout_AL != '\0') {
      return;
    }
  }
  (*(code *)in_RCX[7].fun[0])(in_RDI);
  iVar1 = extraout_RBX;
  e = (interface___)(*(code *)in_RSI[7].fun[0])(in_R8);
  ~r0.len = iVar1;
  ~r0.str = in_stack_ffffffffffffffd0;
  runtime_concatstring5
            ((runtime_tmpBuf *)0x0,(string)e,in_stack_ffffffffffffff90,in_stack_ffffffffffffffa0,
             in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc0,~r0);
  runtime_convTstring((string)e,x);
                    // WARNING: Subroutine does not return
  runtime_gopanic(e);
}



void reflect_Value_Grow(reflect_Value v,int n)

{
  reflect_Value v_00;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  uint in_RCX;
  uint uVar2;
  void *~r0;
  undefined8 *extraout_R11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffb0;
  reflect_flag in_stack_ffffffffffffffc0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((in_RCX & 0x60) != 0) || (((dword)in_RCX >> 8 & 1) == 0)) {
    reflect_flag_mustBeAssignableSlow(in_RCX);
  }
  uVar2 = (uint)((dword)in_RCX & 0x1f);
  if (uVar2 == 0x17) {
    v_00.flag = in_stack_ffffffffffffffc0;
    v_00.typ_ = in_stack_ffffffffffffffb0._type;
    v_00.ptr = in_stack_ffffffffffffffb0.data;
    reflect_Value_grow(v_00,n);
    return;
  }
  reflect_valueMethodName((string)in_stack_ffffffffffffffb0);
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0);
  extraout_RAX_00[1] = ~r0;
  puVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RAX;
    puVar1 = extraout_RAX_01;
  }
  *puVar1 = extraout_RAX;
  puVar1[2] = uVar2;
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffb0);
}



void reflect_Value_grow(reflect_Value v,int n)

{
  runtime_slice old;
  runtime_slice ~r0;
  int extraout_RAX;
  int extraout_RAX_00;
  int iVar1;
  int extraout_RCX;
  byte bVar2;
  internal_abi_Type *t;
  int *in_RBX;
  internal_unsafeheader_Slice *p;
  int extraout_RBX;
  int in_RDI;
  int *extraout_R11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffc8;
  int in_stack_ffffffffffffffd8;
  undefined in_stack_ffffffffffffffe0 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RDI < 0) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffc8);
  }
  if (in_RDI + in_RBX[1] < 0) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffc8);
  }
  if (in_RDI + in_RBX[1] <= in_RBX[2]) {
    return;
  }
  bVar2 = *(byte *)(n + 0x17) & 0x1f;
  if (bVar2 < 0x13) {
    if (bVar2 == 0x11) {
      t = *(internal_abi_Type **)(n + 0x30);
      goto LAB_004df77a;
    }
    if (bVar2 == 0x12) {
      t = *(internal_abi_Type **)(n + 0x30);
      goto LAB_004df77a;
    }
  }
  else {
    if (bVar2 == 0x15) {
      t = *(internal_abi_Type **)(n + 0x38);
      goto LAB_004df77a;
    }
    if (bVar2 == 0x16) {
      t = *(internal_abi_Type **)(n + 0x30);
      goto LAB_004df77a;
    }
    if (bVar2 == 0x17) {
      t = *(internal_abi_Type **)(n + 0x30);
      goto LAB_004df77a;
    }
  }
  t = (internal_abi_Type *)0x0;
LAB_004df77a:
  old.cap = in_stack_ffffffffffffffd8;
  old.array = in_stack_ffffffffffffffc8._type;
  old.len = (int)in_stack_ffffffffffffffc8.data;
  ~r0.cap = (int)in_RBX;
  ~r0.array = (void *)in_stack_ffffffffffffffe0._0_8_;
  ~r0.len = in_stack_ffffffffffffffe0._8_8_;
  reflect_growslice(t,old,*in_RBX,~r0);
  in_RBX[1] = extraout_RBX;
  in_RBX[2] = extraout_RCX;
  iVar1 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_00;
    extraout_R11[1] = *in_RBX;
    iVar1 = extraout_RAX_00;
  }
  *in_RBX = iVar1;
  return;
}



void reflect_Value_extendSlice(reflect_Value v,int n,reflect_Value ~r0)

{
  undefined8 uVar1;
  reflect_Value v_00;
  undefined8 *extraout_RAX;
  internal_unsafeheader_Slice *_sh;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar2;
  undefined8 extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  uint in_RCX;
  uint uVar3;
  undefined8 extraout_RCX;
  undefined8 uVar4;
  undefined8 *in_RBX;
  void *~r0_00;
  int in_RDI;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffb0;
  reflect_flag in_stack_ffffffffffffffc0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_RCX == 0) || ((in_RCX & 0x60) != 0)) {
    reflect_flag_mustBeExportedSlow(in_RCX);
  }
  uVar3 = (uint)((dword)in_RCX & 0x1f);
  if (uVar3 == 0x17) {
    runtime_newobject((internal_abi_Type *)&DAT_00861600,in_RBX);
    uVar1 = in_RBX[2];
    uVar4 = *in_RBX;
    extraout_RAX[1] = in_RBX[1];
    extraout_RAX[2] = uVar1;
    puVar2 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = extraout_RCX;
      puVar2 = extraout_RAX_00;
      uVar4 = extraout_RCX;
    }
    *puVar2 = uVar4;
    v_00.flag = in_stack_ffffffffffffffc0;
    v_00.typ_ = in_stack_ffffffffffffffb0._type;
    v_00.ptr = in_stack_ffffffffffffffb0.data;
    reflect_Value_grow(v_00,n);
    puVar2[1] = puVar2[1] + in_RDI;
    return;
  }
  reflect_valueMethodName((string)in_stack_ffffffffffffffb0);
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_00);
  extraout_RAX_02[1] = ~r0_00;
  puVar2 = extraout_RAX_02;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = extraout_RAX_01;
    puVar2 = extraout_RAX_03;
  }
  *puVar2 = extraout_RAX_01;
  puVar2[2] = uVar3;
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffb0);
}



void reflect_Value_Clear(reflect_Value v)

{
  int len;
  internal_abi_MapType *in_RAX;
  undefined8 *extraout_RAX;
  dword in_ECX;
  uint uVar1;
  runtime_hmap *in_RBX;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar1 = (uint)(in_ECX & 0x1f);
  if (uVar1 == 0x15) {
    if (((in_RAX->Type).Size_ != 8) || ((in_RAX->Type).PtrBytes == 0)) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffd8);
    }
    if ((in_ECX >> 7 & 1) != 0) {
      in_RBX = (runtime_hmap *)in_RBX->count;
    }
    reflect_mapclear(in_RAX,in_RBX);
  }
  else {
    if (uVar1 != 0x17) {
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
      extraout_RAX[1] = 0x13;
      *extraout_RAX = &DAT_008b85d4;
      extraout_RAX[2] = uVar1;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffd8);
    }
    len._0_1_ = in_RBX->flags;
    len._1_1_ = in_RBX->B;
    len._2_2_ = in_RBX->noverflow;
    len._4_4_ = in_RBX->hash0;
    reflect_typedarrayclear(in_RAX->Key,(void *)in_RBX->count,len);
  }
  return;
}



void reflect_Append(reflect_Value s,__reflect_Value x,reflect_Value ~r0)

{
  reflect_Value v;
  reflect_Value v_00;
  reflect_Value v_01;
  int in_RAX;
  int extraout_RAX;
  undefined8 extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_02;
  dword in_ECX;
  int n;
  void *~r0_00;
  int in_RSI;
  int iVar2;
  undefined8 *extraout_R11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff70;
  reflect_flag in_stack_ffffffffffffff80;
  reflect_Value in_stack_ffffffffffffff88;
  int i;
  int local_10;
  
  while (&local_10 <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_ECX & 0x1f) == 0x17) {
    v.flag = in_stack_ffffffffffffff80;
    v.typ_ = in_stack_ffffffffffffff70._type;
    v.ptr = in_stack_ffffffffffffff70.data;
    reflect_Value_extendSlice(v,in_RAX,in_stack_ffffffffffffff88);
    local_10 = extraout_RAX;
    for (iVar2 = 0; iVar2 < in_RSI; iVar2 = iVar2 + 1) {
      v_00.flag = in_stack_ffffffffffffff80;
      v_00.typ_ = in_stack_ffffffffffffff70._type;
      v_00.ptr = in_stack_ffffffffffffff70.data;
      reflect_Value_Index(v_00,local_10,in_stack_ffffffffffffff88);
      v_01.flag = in_stack_ffffffffffffff80;
      v_01.typ_ = in_stack_ffffffffffffff70._type;
      v_01.ptr = in_stack_ffffffffffffff70.data;
      reflect_Value_Set(v_01,in_stack_ffffffffffffff88);
    }
    return;
  }
  reflect_valueMethodName((string)in_stack_ffffffffffffff70);
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_00);
  extraout_RAX_01[1] = ~r0_00;
  puVar1 = extraout_RAX_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RAX_00;
    puVar1 = extraout_RAX_02;
  }
  *puVar1 = extraout_RAX_00;
  puVar1[2] = (uint)(in_ECX & 0x1f);
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffff70);
}



void reflect_Copy(reflect_Value dst,reflect_Value src,int ~r0)

{
  reflect_Value v;
  reflect_Value v_00;
  runtime_slice dst_00;
  reflect_Type t1;
  runtime_slice src_00;
  char **extraout_RAX;
  char **extraout_RAX_00;
  uint in_RCX;
  char *pcVar1;
  reflect_Kind dk;
  undefined8 *in_RBX;
  int in_RDI;
  uint in_R8;
  char *pcVar2;
  reflect_Kind sk;
  internal_abi_Type *se;
  byte bVar3;
  bool stringCopy;
  int iVar4;
  internal_abi_Type *de;
  int unaff_R14;
  bool bVar5;
  interface___ in_stack_ffffffffffffff58;
  runtime_itab *in_stack_ffffffffffffff68;
  void *in_stack_ffffffffffffff70;
  reflect_Type in_stack_ffffffffffffff78;
  int local_28;
  int local_20;
  undefined8 *local_10;
  
  while (&local_28 <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  pcVar1 = (char *)(uint)((dword)in_RCX & 0x1f);
  if ((pcVar1 != (char *)0x11) && (pcVar1 != (char *)0x17)) {
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
    extraout_RAX_00[1] = (char *)0xc;
    *extraout_RAX_00 =
         "reflect.CopyOUT_OF_RANGENormalSocketgrpc-messageContent-Typegrpc-timeoutGrpc-MessageAddr: \'%s\', Cookie.Valuemax-forwardshttp2debug=1http2debug=2status code Multi-StatusNot ModifiedUnauthorizedI\'m a teapotNot ExtendedPUSH_PROMISECONTINUATION152587890625762939453125Cypro_MinoanMeetei_MayekPahawh_HmongSora_SompengSyloti_NagriRCodeSuccessRCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen , not pointer != sweepgen  MB globals,  work.nproc=  work.nwait=  nStackRoots= flushedWork double unlock s.spanclass= MB) workers=min too large-byte block (runtime: val=runtime: seq= failed with timer_settimefatal error:  idlethreads= syscalltick=load64 failedxadd64 failedxchg64 failedmp.g0 stack [nil stackbase}\n\tsched={pc:, gp->status= pluginpath= : unknown pc  called from level 3 resetexchange fulltimer expiredsrmount errorreserved_namedefault_valuephp_namespace<unknown: %T>AlreadyExistsUnimplementedUNIMPLEMENTED..." /* TRUNCATED STRING LITERAL */
    ;
    extraout_RAX_00[2] = pcVar1;
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff58);
  }
  local_28 = ~r0;
  local_20 = in_RDI;
  local_10 = in_RBX;
  if ((pcVar1 == (char *)0x11) && (((in_RCX & 0x60) != 0 || (((dword)in_RCX >> 8 & 1) == 0)))) {
    reflect_flag_mustBeAssignableSlow(in_RCX);
  }
  if ((in_RCX == 0) || ((in_RCX & 0x60) != 0)) {
    reflect_flag_mustBeExportedSlow(in_RCX);
  }
  pcVar2 = (char *)(uint)((dword)in_R8 & 0x1f);
  if ((pcVar2 == (char *)0x11) || (pcVar2 == (char *)0x17)) {
    bVar5 = false;
  }
  else {
    if (pcVar2 == (char *)0x18) {
      bVar3 = *(byte *)(local_28 + 0x17) & 0x1f;
      if (bVar3 < 0x13) {
        if (bVar3 == 0x11) {
          iVar4 = *(int *)(local_28 + 0x30);
        }
        else if (bVar3 == 0x12) {
          iVar4 = *(int *)(local_28 + 0x30);
        }
        else {
LAB_004dfde4:
          iVar4 = 0;
        }
      }
      else if (bVar3 == 0x15) {
        iVar4 = *(int *)(local_28 + 0x38);
      }
      else if (bVar3 == 0x16) {
        iVar4 = *(int *)(local_28 + 0x30);
      }
      else {
        if (bVar3 != 0x17) goto LAB_004dfde4;
        iVar4 = *(int *)(local_28 + 0x30);
      }
      bVar5 = (*(byte *)(iVar4 + 0x17) & 0x1f) == 8;
    }
    else {
      bVar5 = false;
    }
    if (!bVar5) {
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,local_10);
      extraout_RAX[1] = (char *)0xc;
      *extraout_RAX =
           "reflect.CopyOUT_OF_RANGENormalSocketgrpc-messageContent-Typegrpc-timeoutGrpc-MessageAddr: \'%s\', Cookie.Valuemax-forwardshttp2debug=1http2debug=2status code Multi-StatusNot ModifiedUnauthorizedI\'m a teapotNot ExtendedPUSH_PROMISECONTINUATION152587890625762939453125Cypro_MinoanMeetei_MayekPahawh_HmongSora_SompengSyloti_NagriRCodeSuccessRCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen , not pointer != sweepgen  MB globals,  work.nproc=  work.nwait=  nStackRoots= flushedWork double unlock s.spanclass= MB) workers=min too large-byte block (runtime: val=runtime: seq= failed with timer_settimefatal error:  idlethreads= syscalltick=load64 failedxadd64 failedxchg64 failedmp.g0 stack [nil stackbase}\n\tsched={pc:, gp->status= pluginpath= : unknown pc  called from level 3 resetexchange fulltimer expiredsrmount errorreserved_namedefault_valuephp_namespace<unknown: %T>AlreadyExistsUnimplementedUNIMPLEMENTED..." /* TRUNCATED STRING LITERAL */
      ;
      extraout_RAX[2] = pcVar2;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff58);
    }
  }
  if ((in_R8 == 0) || ((in_R8 & 0x60) != 0)) {
    reflect_flag_mustBeExportedSlow(in_R8);
  }
  bVar3 = *(byte *)(local_28 + 0x17) & 0x1f;
  if (bVar3 < 0x13) {
    if (bVar3 == 0x11) {
      de = *(internal_abi_Type **)(local_28 + 0x30);
      goto LAB_004dfebf;
    }
    if (bVar3 == 0x12) {
      de = *(internal_abi_Type **)(local_28 + 0x30);
      goto LAB_004dfebf;
    }
  }
  else {
    if (bVar3 == 0x15) {
      de = *(internal_abi_Type **)(local_28 + 0x38);
      goto LAB_004dfebf;
    }
    if (bVar3 == 0x16) {
      de = *(internal_abi_Type **)(local_28 + 0x30);
      goto LAB_004dfebf;
    }
    if (bVar3 == 0x17) {
      de = *(internal_abi_Type **)(local_28 + 0x30);
      goto LAB_004dfebf;
    }
  }
  de = (internal_abi_Type *)0x0;
LAB_004dfebf:
  if (!bVar5) {
    t1.data = in_stack_ffffffffffffff70;
    t1.tab = in_stack_ffffffffffffff68;
    reflect_typesMustMatch((string)in_stack_ffffffffffffff58,t1,in_stack_ffffffffffffff78);
  }
  if (pcVar1 == (char *)0x11) {
    v.flag = (reflect_flag)in_stack_ffffffffffffff68;
    v.typ_ = in_stack_ffffffffffffff58._type;
    v.ptr = in_stack_ffffffffffffff58.data;
    reflect_Value_lenNonSlice(v,local_28);
  }
  else {
    local_10 = (undefined8 *)*local_10;
  }
  if (pcVar2 == (char *)0x11) {
    v_00.flag = (reflect_flag)in_stack_ffffffffffffff68;
    v_00.typ_ = in_stack_ffffffffffffff58._type;
    v_00.ptr = in_stack_ffffffffffffff58.data;
    reflect_Value_lenNonSlice(v_00,local_20);
  }
  dst_00.cap = (int)in_stack_ffffffffffffff68;
  dst_00.array = in_stack_ffffffffffffff58._type;
  dst_00.len = (int)in_stack_ffffffffffffff58.data;
  src_00.len = (int)in_stack_ffffffffffffff78.tab;
  src_00.cap = (int)in_stack_ffffffffffffff78.data;
  src_00.array = in_stack_ffffffffffffff70;
  reflect_typedslicecopy(de,dst_00,src_00,(int)local_10);
  return;
}



void reflect_MakeSlice(reflect_Type typ,int len,int cap,reflect_Value ~r0)

{
  undefined8 *extraout_RAX;
  internal_unsafeheader_Slice *_s;
  undefined8 extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 uVar1;
  int in_RCX;
  undefined8 *extraout_RBX;
  undefined8 *puVar2;
  int in_RDI;
  undefined8 *extraout_R11;
