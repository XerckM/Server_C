    uint32 baseSpans;
    uint32 baseStacks;
    uint32 baseEnd;
    struct []*runtime.g stackRoots;
    uint32 startSema;
    uint32 markDoneSema;
    struct runtime.note bgMarkReady;
    uint32 bgMarkDone;
    runtime.gcMode mode;
    bool userForced;
    uint64 initialHeapLive;
    struct struct_{_runtime.lock_runtime.mutex;_runtime.q_runtime.gQueue_} assistQueue;
    struct struct_{_runtime.lock_runtime.mutex;_runtime.list_runtime.gList_} sweepWaiters;
    struct runtime/internal/atomic.Uint32 cycles;
    int32 stwprocs;
    int32 maxprocs;
    int64 tSweepTerm;
    int64 tMark;
    int64 tMarkTerm;
    int64 tEnd;
    int64 pauseNS;
    int64 pauseStart;
    uint64 heap0;
    uint64 heap1;
    uint64 heap2;
    struct runtime.cpuStats cpuStats;
};

typedef struct noalg.map.iter[interface_{}]*sync.entry noalg.map.iter[interface_{}]*sync.entry, *Pnoalg.map.iter[interface_{}]*sync.entry;

struct noalg.map.iter[interface_{}]*sync.entry { // Original name: noalg.map.iter[interface {}]*sync.entry
    interface_{} *key;
    struct sync.entry **elem;
    void *t;
    struct noalg.map.hdr[interface_{}]*sync.entry *h;
    struct noalg.map.bucket[interface_{}]*sync.entry *buckets;
    struct noalg.map.bucket[interface_{}]*sync.entry *bptr;
    void *overflow;
    void *oldoverflow;
    uintptr startBucket;
    uint8 offset;
    bool wrapped;
    uint8 B;
    uint8 i;
    uintptr bucket;
    uintptr checkBucket;
};

typedef struct runtime.iface fmt.State;

typedef struct noalg.struct_{_F_uintptr;_X0_*net.nsswitchConfig_} noalg.struct_{_F_uintptr;_X0_*net.nsswitchConfig_}, *Pnoalg.struct_{_F_uintptr;_X0_*net.nsswitchConfig_};

struct noalg.struct_{_F_uintptr;_X0_*net.nsswitchConfig_} { // Original name: noalg.struct { F uintptr; X0 *net.nsswitchConfig }
    uintptr F;
    struct net.nsswitchConfig *X0;
};

typedef struct []google.golang.org/protobuf/internal/filedesc.Edition []google.golang.org/protobuf/internal/filedesc.Edition, *P[]google.golang.org/protobuf/internal/filedesc.Edition;

struct []google.golang.org/protobuf/internal/filedesc.Edition {
    google.golang.org/protobuf/internal/filedesc.Edition *array;
    int len;
    int cap;
};

typedef struct golang.org/x/text/unicode/norm.sparseBlocks golang.org/x/text/unicode/norm.sparseBlocks, *Pgolang.org/x/text/unicode/norm.sparseBlocks;

struct golang.org/x/text/unicode/norm.sparseBlocks {
    struct []golang.org/x/text/unicode/norm.valueRange values;
    struct []uint16 offset;
};

typedef struct html/template.Srcset html/template.Srcset, *Phtml/template.Srcset;

struct html/template.Srcset {
    uint8 *str;
    int len;
};

typedef struct []google.golang.org/protobuf/runtime/protoiface.MessageV1 []google.golang.org/protobuf/runtime/protoiface.MessageV1, *P[]google.golang.org/protobuf/runtime/protoiface.MessageV1;

struct []google.golang.org/protobuf/runtime/protoiface.MessageV1 {
    google.golang.org/protobuf/runtime/protoiface.MessageV1 *array;
    int len;
    int cap;
};

typedef struct hash<string,google.golang.org/grpc/encoding.Compressor> *map[string]google.golang.org/grpc/encoding.Compressor;

typedef struct hash<string,google.golang.org/grpc.ServiceInfo> *map[string]google.golang.org/grpc.ServiceInfo;

typedef struct noalg.struct_{_F_uintptr;_X0_[][]uint8_} noalg.struct_{_F_uintptr;_X0_[][]uint8_}, *Pnoalg.struct_{_F_uintptr;_X0_[][]uint8_};

struct noalg.struct_{_F_uintptr;_X0_[][]uint8_} { // Original name: noalg.struct { F uintptr; X0 [][]uint8 }
    uintptr F;
    struct [][]uint8 X0;
};

typedef struct noalg.struct_{_F_uintptr;_X0_*sync.Pool;_X1_interface_{}_} noalg.struct_{_F_uintptr;_X0_*sync.Pool;_X1_interface_{}_}, *Pnoalg.struct_{_F_uintptr;_X0_*sync.Pool;_X1_interface_{}_};

struct noalg.struct_{_F_uintptr;_X0_*sync.Pool;_X1_interface_{}_} { // Original name: noalg.struct { F uintptr; X0 *sync.Pool; X1 interface {} }
    uintptr F;
    struct sync.Pool *X0;
    interface_{} X1;
};

typedef struct noalg.struct_{_F_uintptr;_X0_*[][]int_} noalg.struct_{_F_uintptr;_X0_*[][]int_}, *Pnoalg.struct_{_F_uintptr;_X0_*[][]int_};

struct noalg.struct_{_F_uintptr;_X0_*[][]int_} { // Original name: noalg.struct { F uintptr; X0 *[][]int }
    uintptr F;
    struct [][]int *X0;
};

typedef struct internal/reflectlite.name internal/reflectlite.name, *Pinternal/reflectlite.name;

struct internal/reflectlite.name {
    uint8 *bytes;
};

typedef struct []*time.Location []*time.Location, *P[]*time.Location;

struct []*time.Location {
    struct time.Location **array;
    int len;
    int cap;
};

typedef struct noalg.struct_{_F_uintptr;_R_*net.resolverConfig_} noalg.struct_{_F_uintptr;_R_*net.resolverConfig_}, *Pnoalg.struct_{_F_uintptr;_R_*net.resolverConfig_};

struct noalg.struct_{_F_uintptr;_R_*net.resolverConfig_} { // Original name: noalg.struct { F uintptr; R *net.resolverConfig }
    uintptr F;
    struct net.resolverConfig *R;
};

typedef struct noalg.struct_{_F_uintptr;_X0_*[]net/http.muxEntry;_X1_net/http.muxEntry_} noalg.struct_{_F_uintptr;_X0_*[]net/http.muxEntry;_X1_net/http.muxEntry_}, *Pnoalg.struct_{_F_uintptr;_X0_*[]net/http.muxEntry;_X1_net/http.muxEntry_};

struct noalg.struct_{_F_uintptr;_X0_*[]net/http.muxEntry;_X1_net/http.muxEntry_} { // Original name: noalg.struct { F uintptr; X0 *[]net/http.muxEntry; X1 net/http.muxEntry }
    uintptr F;
    struct []net/http.muxEntry *X0;
    struct net/http.muxEntry X1;
};

typedef struct hash<string,[2]int32> *map[string][2]int32;

typedef struct noalg.map.iter[google.golang.org/protobuf/reflect/protoreflect.FullName]interface_{} noalg.map.iter[google.golang.org/protobuf/reflect/protoreflect.FullName]interface_{}, *Pnoalg.map.iter[google.golang.org/protobuf/reflect/protoreflect.FullName]interface_{};

struct noalg.map.iter[google.golang.org/protobuf/reflect/protoreflect.FullName]interface_{} { // Original name: noalg.map.iter[google.golang.org/protobuf/reflect/protoreflect.FullName]interface {}
    struct google.golang.org/protobuf/reflect/protoreflect.FullName *key;
    interface_{} *elem;
    void *t;
    struct noalg.map.hdr[google.golang.org/protobuf/reflect/protoreflect.FullName]interface_{} *h;
    struct noalg.map.bucket[google.golang.org/protobuf/reflect/protoreflect.FullName]interface_{} *buckets;
    struct noalg.map.bucket[google.golang.org/protobuf/reflect/protoreflect.FullName]interface_{} *bptr;
    void *overflow;
    void *oldoverflow;
    uintptr startBucket;
    uint8 offset;
    bool wrapped;
    uint8 B;
    uint8 i;
    uintptr bucket;
    uintptr checkBucket;
};

typedef struct noalg.struct_{_F_uintptr;_X0_*google.golang.org/protobuf/internal/strs.Builder_} noalg.struct_{_F_uintptr;_X0_*google.golang.org/protobuf/internal/strs.Builder_}, *Pnoalg.struct_{_F_uintptr;_X0_*google.golang.org/protobuf/internal/strs.Builder_};

struct noalg.struct_{_F_uintptr;_X0_*google.golang.org/protobuf/internal/strs.Builder_} { // Original name: noalg.struct { F uintptr; X0 *google.golang.org/protobuf/internal/strs.Builder }
    uintptr F;
    struct google.golang.org/protobuf/internal/strs.Builder *X0;
};

typedef struct noalg.struct_{_F_uintptr;_X0_*[][][]uint8;_X1_[]uint8_} noalg.struct_{_F_uintptr;_X0_*[][][]uint8;_X1_[]uint8_}, *Pnoalg.struct_{_F_uintptr;_X0_*[][][]uint8;_X1_[]uint8_};

struct noalg.struct_{_F_uintptr;_X0_*[][][]uint8;_X1_[]uint8_} { // Original name: noalg.struct { F uintptr; X0 *[][][]uint8; X1 []uint8 }
    uintptr F;
    struct [][][]uint8 *X0;
    struct []uint8 X1;
};

typedef struct noalg.struct_{_F_uintptr;_X0_context.CancelFunc;_X1_*google.golang.org/grpc/internal/grpcsync.Event_} noalg.struct_{_F_uintptr;_X0_context.CancelFunc;_X1_*google.golang.org/grpc/internal/grpcsync.Event_}, *Pnoalg.struct_{_F_uintptr;_X0_context.CancelFunc;_X1_*google.golang.org/grpc/internal/grpcsync.Event_};

struct noalg.struct_{_F_uintptr;_X0_context.CancelFunc;_X1_*google.golang.org/grpc/internal/grpcsync.Event_} { // Original name: noalg.struct { F uintptr; X0 context.CancelFunc; X1 *google.golang.org/grpc/internal/grpcsync.Event }
    uintptr F;
    void (**X0)(void);
    struct google.golang.org/grpc/internal/grpcsync.Event *X1;
};

typedef struct struct_{_vendor/golang.org/x/sys/cpu.__vendor/golang.org/x/sys/cpu.CacheLinePad;_HasAES_bool;_HasADX_bool;_HasAVX_bool;_HasAVX2_bool;_HasAVX512_bool;_HasAVX512F_bool;_HasAVX512CD_bool;_HasAVX512ER_bool;_HasAVX512PF_bool;_HasAVX512VL_bool;_HasAVX512BW_bool;_HasAVX512DQ_bool;_HasAVX512IFMA_bool;_HasAVX512VBMI_bool;_HasAVX5124VNNIW_bool;_HasAVX5124FMAPS_bool;_HasAVX512VPOPCNTDQ_bool;_HasAVX512VPCLMULQDQ_bool;_HasAVX512VNNI_bool;_HasAVX512GFNI_bool;_HasAVX512VAES_bool;_HasAVX512VBMI2_bool;_HasAVX512BITALG_bool;_HasAVX512BF16_bool;_HasBMI1_bool;_HasBMI2_bool;_HasCX16_bool;_HasERMS_bool;_HasFMA_bool;_HasOSXSAVE_bool;_HasPCLMULQDQ_bool;_HasPOPCNT_bool;_HasRDRAND_bool;_HasRDSEED_bool;_HasSSE2_bool;_HasSSE3_bool;_HasSSSE3_bool;_HasSSE41_bool;_HasSSE42_bool;_vendor/golang.org/x/sys/cpu.__vendor/golang.org/x/sys/cpu.CacheLinePad_} struct_{_vendor/golang.org/x/sys/cpu.__vendor/golang.org/x/sys/cpu.CacheLinePad;_HasAES_bool;_HasADX_bool;_HasAVX_bool;_HasAVX2_bool;_HasAVX512_bool;_HasAVX512F_bool;_HasAVX512CD_bool;_HasAVX512ER_bool;_HasAVX512PF_bool;_HasAVX512VL_bool;_HasAVX512BW_bool;_HasAVX512DQ_bool;_HasAVX512IFMA_bool;_HasAVX512VBMI_bool;_HasAVX5124VNNIW_bool;_HasAVX5124FMAPS_bool;_HasAVX512VPOPCNTDQ_bool;_HasAVX512VPCLMULQDQ_bool;_HasAVX512VNNI_bool;_HasAVX512GFNI_bool;_HasAVX512VAES_bool;_HasAVX512VBMI2_bool;_HasAVX512BITALG_bool;_HasAVX512BF16_bool;_HasBMI1_bool;_HasBMI2_bool;_HasCX16_bool;_HasERMS_bool;_HasFMA_bool;_HasOSXSAVE_bool;_HasPCLMULQDQ_bool;_HasPOPCNT_bool;_HasRDRAND_bool;_HasRDSEED_bool;_HasSSE2_bool;_HasSSE3_bool;_HasSSSE3_bool;_HasSSE41_bool;_HasSSE42_bool;_vendor/golang.org/x/sys/cpu.__vendor/golang.org/x/sys/cpu.CacheLinePad_}, *Pstruct_{_vendor/golang.org/x/sys/cpu.__vendor/golang.org/x/sys/cpu.CacheLinePad;_HasAES_bool;_HasADX_bool;_HasAVX_bool;_HasAVX2_bool;_HasAVX512_bool;_HasAVX512F_bool;_HasAVX512CD_bool;_HasAVX512ER_bool;_HasAVX512PF_bool;_HasAVX512VL_bool;_HasAVX512BW_bool;_HasAVX512DQ_bool;_HasAVX512IFMA_bool;_HasAVX512VBMI_bool;_HasAVX5124VNNIW_bool;_HasAVX5124FMAPS_bool;_HasAVX512VPOPCNTDQ_bool;_HasAVX512VPCLMULQDQ_bool;_HasAVX512VNNI_bool;_HasAVX512GFNI_bool;_HasAVX512VAES_bool;_HasAVX512VBMI2_bool;_HasAVX512BITALG_bool;_HasAVX512BF16_bool;_HasBMI1_bool;_HasBMI2_bool;_HasCX16_bool;_HasERMS_bool;_HasFMA_bool;_HasOSXSAVE_bool;_HasPCLMULQDQ_bool;_HasPOPCNT_bool;_HasRDRAND_bool;_HasRDSEED_bool;_HasSSE2_bool;_HasSSE3_bool;_HasSSSE3_bool;_HasSSE41_bool;_HasSSE42_bool;_vendor/golang.org/x/sys/cpu.__vendor/golang.org/x/sys/cpu.CacheLinePad_};

struct struct_{_vendor/golang.org/x/sys/cpu.__vendor/golang.org/x/sys/cpu.CacheLinePad;_HasAES_bool;_HasADX_bool;_HasAVX_bool;_HasAVX2_bool;_HasAVX512_bool;_HasAVX512F_bool;_HasAVX512CD_bool;_HasAVX512ER_bool;_HasAVX512PF_bool;_HasAVX512VL_bool;_HasAVX512BW_bool;_HasAVX512DQ_bool;_HasAVX512IFMA_bool;_HasAVX512VBMI_bool;_HasAVX5124VNNIW_bool;_HasAVX5124FMAPS_bool;_HasAVX512VPOPCNTDQ_bool;_HasAVX512VPCLMULQDQ_bool;_HasAVX512VNNI_bool;_HasAVX512GFNI_bool;_HasAVX512VAES_bool;_HasAVX512VBMI2_bool;_HasAVX512BITALG_bool;_HasAVX512BF16_bool;_HasBMI1_bool;_HasBMI2_bool;_HasCX16_bool;_HasERMS_bool;_HasFMA_bool;_HasOSXSAVE_bool;_HasPCLMULQDQ_bool;_HasPOPCNT_bool;_HasRDRAND_bool;_HasRDSEED_bool;_HasSSE2_bool;_HasSSE3_bool;_HasSSSE3_bool;_HasSSE41_bool;_HasSSE42_bool;_vendor/golang.org/x/sys/cpu.__vendor/golang.org/x/sys/cpu.CacheLinePad_} { // Original name: struct { vendor/golang.org/x/sys/cpu._ vendor/golang.org/x/sys/cpu.CacheLinePad; HasAES bool; HasADX bool; HasAVX bool; HasAVX2 bool; HasAVX512 bool; HasAVX512F bool; HasAVX512CD bool; HasAVX512ER bool; HasAVX512PF bool; HasAVX512VL bool; HasAVX512BW bool; HasAVX512DQ bool; HasAVX512IFMA bool; HasAVX512VBMI bool; HasAVX5124VNNIW bool; HasAVX5124FMAPS bool; HasAVX512VPOPCNTDQ bool; HasAVX512VPCLMULQDQ bool; HasAVX512VNNI bool; HasAVX512GFNI bool; HasAVX512VAES bool; HasAVX512VBMI2 bool; HasAVX512BITALG bool; HasAVX512BF16 bool; HasBMI1 bool; HasBMI2 bool; HasCX16 bool; HasERMS bool; HasFMA bool; HasOSXSAVE bool; HasPCLMULQDQ bool; HasPOPCNT bool; HasRDRAND bool; HasRDSEED bool; HasSSE2 bool; HasSSE3 bool; HasSSSE3 bool; HasSSE41 bool; HasSSE42 bool; vendor/golang.org/x/sys/cpu._ vendor/golang.org/x/sys/cpu.CacheLinePad }
    struct vendor/golang.org/x/sys/cpu.CacheLinePad _;
    bool HasAES;
    bool HasADX;
    bool HasAVX;
    bool HasAVX2;
    bool HasAVX512;
    bool HasAVX512F;
    bool HasAVX512CD;
    bool HasAVX512ER;
    bool HasAVX512PF;
    bool HasAVX512VL;
    bool HasAVX512BW;
    bool HasAVX512DQ;
    bool HasAVX512IFMA;
    bool HasAVX512VBMI;
    bool HasAVX5124VNNIW;
    bool HasAVX5124FMAPS;
    bool HasAVX512VPOPCNTDQ;
    bool HasAVX512VPCLMULQDQ;
    bool HasAVX512VNNI;
    bool HasAVX512GFNI;
    bool HasAVX512VAES;
    bool HasAVX512VBMI2;
    bool HasAVX512BITALG;
    bool HasAVX512BF16;
    bool HasBMI1;
    bool HasBMI2;
    bool HasCX16;
    bool HasERMS;
    bool HasFMA;
    bool HasOSXSAVE;
    bool HasPCLMULQDQ;
    bool HasPOPCNT;
    bool HasRDRAND;
    bool HasRDSEED;
    bool HasSSE2;
    bool HasSSE3;
    bool HasSSSE3;
    bool HasSSE41;
    bool HasSSE42;
    struct vendor/golang.org/x/sys/cpu.CacheLinePad _;
};

typedef struct noalg.struct_{_F_uintptr;_X0_*google.golang.org/grpc/internal/transport.http2Server_} noalg.struct_{_F_uintptr;_X0_*google.golang.org/grpc/internal/transport.http2Server_}, *Pnoalg.struct_{_F_uintptr;_X0_*google.golang.org/grpc/internal/transport.http2Server_};

struct noalg.struct_{_F_uintptr;_X0_*google.golang.org/grpc/internal/transport.http2Server_} { // Original name: noalg.struct { F uintptr; X0 *google.golang.org/grpc/internal/transport.http2Server }
    uintptr F;
    struct google.golang.org/grpc/internal/transport.http2Server *X0;
};

typedef struct runtime.iface fmt.GoStringer;

typedef struct struct_{_sync.Once;_net.val_int_} struct_{_sync.Once;_net.val_int_}, *Pstruct_{_sync.Once;_net.val_int_};

struct struct_{_sync.Once;_net.val_int_} { // Original name: struct { sync.Once; net.val int }
    struct sync.Once Once;
    int val;
};

typedef struct noalg.struct_{_F_uintptr;_X0_unsafe.Pointer;_X1_func(uint8,_uint8)_bool_} noalg.struct_{_F_uintptr;_X0_unsafe.Pointer;_X1_func(uint8,_uint8)_bool_}, *Pnoalg.struct_{_F_uintptr;_X0_unsafe.Pointer;_X1_func(uint8,_uint8)_bool_};

struct noalg.struct_{_F_uintptr;_X0_unsafe.Pointer;_X1_func(uint8,_uint8)_bool_} { // Original name: noalg.struct { F uintptr; X0 unsafe.Pointer; X1 func(uint8, uint8) bool }
    uintptr F;
    void *X0;
    void (**X1)(uint8, uint8, bool *);
};

typedef struct time.Location *log/slog.timeLocation;

typedef struct noalg.map.iter[string]map[string]string noalg.map.iter[string]map[string]string, *Pnoalg.map.iter[string]map[string]string;

struct noalg.map.iter[string]map[string]string {
    struct string *key;
    map[string]string *elem;
    void *t;
    struct noalg.map.hdr[string]map[string]string *h;
    struct noalg.map.bucket[string]map[string]string *buckets;
    struct noalg.map.bucket[string]map[string]string *bptr;
    void *overflow;
    void *oldoverflow;
    uintptr startBucket;
    uint8 offset;
    bool wrapped;
    uint8 B;
    uint8 i;
    uintptr bucket;
    uintptr checkBucket;
};

typedef struct noalg.struct_{_F_uintptr;_X0_uintptr;_X1_uintptr;_X2_*runtime.g;_X3_*int;_X4_int;_X5_[]uintptr_} noalg.struct_{_F_uintptr;_X0_uintptr;_X1_uintptr;_X2_*runtime.g;_X3_*int;_X4_int;_X5_[]uintptr_}, *Pnoalg.struct_{_F_uintptr;_X0_uintptr;_X1_uintptr;_X2_*runtime.g;_X3_*int;_X4_int;_X5_[]uintptr_};

struct noalg.struct_{_F_uintptr;_X0_uintptr;_X1_uintptr;_X2_*runtime.g;_X3_*int;_X4_int;_X5_[]uintptr_} { // Original name: noalg.struct { F uintptr; X0 uintptr; X1 uintptr; X2 *runtime.g; X3 *int; X4 int; X5 []uintptr }
    uintptr F;
    uintptr X0;
    uintptr X1;
    struct runtime.g *X2;
    int *X3;
    int X4;
    struct []uintptr X5;
};

typedef struct runtime.iface net.timeout;

typedef struct noalg.struct_{_F_uintptr;_X0_uintptr;_X1_uintptr;_X2_uintptr;_X3_*runtime.g_} noalg.struct_{_F_uintptr;_X0_uintptr;_X1_uintptr;_X2_uintptr;_X3_*runtime.g_}, *Pnoalg.struct_{_F_uintptr;_X0_uintptr;_X1_uintptr;_X2_uintptr;_X3_*runtime.g_};

struct noalg.struct_{_F_uintptr;_X0_uintptr;_X1_uintptr;_X2_uintptr;_X3_*runtime.g_} { // Original name: noalg.struct { F uintptr; X0 uintptr; X1 uintptr; X2 uintptr; X3 *runtime.g }
    uintptr F;
    uintptr X0;
    uintptr X1;
    uintptr X2;
    struct runtime.g *X3;
};

typedef struct noalg.struct_{_F_uintptr;_X0_*sync.RWMutex_} noalg.struct_{_F_uintptr;_X0_*sync.RWMutex_}, *Pnoalg.struct_{_F_uintptr;_X0_*sync.RWMutex_};

struct noalg.struct_{_F_uintptr;_X0_*sync.RWMutex_} { // Original name: noalg.struct { F uintptr; X0 *sync.RWMutex }
    uintptr F;
    struct sync.RWMutex *X0;
};

typedef struct noalg.struct_{_F_uintptr;_X0_*error;_X1_*google.golang.org/grpc.clientStream_} noalg.struct_{_F_uintptr;_X0_*error;_X1_*google.golang.org/grpc.clientStream_}, *Pnoalg.struct_{_F_uintptr;_X0_*error;_X1_*google.golang.org/grpc.clientStream_};

struct noalg.struct_{_F_uintptr;_X0_*error;_X1_*google.golang.org/grpc.clientStream_} { // Original name: noalg.struct { F uintptr; X0 *error; X1 *google.golang.org/grpc.clientStream }
    uintptr F;
    error *X0;
    struct google.golang.org/grpc.clientStream *X1;
};

typedef struct noalg.struct_{_F_uintptr;_X0_*google.golang.org/grpc.clientStream;_X1_func(*google.golang.org/grpc.csAttempt)_error_} noalg.struct_{_F_uintptr;_X0_*google.golang.org/grpc.clientStream;_X1_func(*google.golang.org/grpc.csAttempt)_error_}, *Pnoalg.struct_{_F_uintptr;_X0_*google.golang.org/grpc.clientStream;_X1_func(*google.golang.org/grpc.csAttempt)_error_};

struct noalg.struct_{_F_uintptr;_X0_*google.golang.org/grpc.clientStream;_X1_func(*google.golang.org/grpc.csAttempt)_error_} { // Original name: noalg.struct { F uintptr; X0 *google.golang.org/grpc.clientStream; X1 func(*google.golang.org/grpc.csAttempt) error }
    uintptr F;
    struct google.golang.org/grpc.clientStream *X0;
    void (**X1)(struct google.golang.org/grpc.csAttempt *, error *);
};

typedef struct struct_{_runtime.hooks_[]runtime.exitHook;_runtime.runningExitHooks_bool_} struct_{_runtime.hooks_[]runtime.exitHook;_runtime.runningExitHooks_bool_}, *Pstruct_{_runtime.hooks_[]runtime.exitHook;_runtime.runningExitHooks_bool_};

struct struct_{_runtime.hooks_[]runtime.exitHook;_runtime.runningExitHooks_bool_} { // Original name: struct { runtime.hooks []runtime.exitHook; runtime.runningExitHooks bool }
    struct []runtime.exitHook hooks;
    bool runningExitHooks;
};

typedef struct runtime.iface net.sockaddr;

typedef struct runtime.iface runtime.Error;

typedef struct hash<int,*sync.Pool> *map[int]*sync.Pool;

typedef struct noalg.struct_{_fmt.started_bool;_fmt.heap_bool;_fmt.openDefer_bool;_fmt.sp_uintptr;_fmt.pc_uintptr;_fmt.fn_uintptr;_fmt._panic_uintptr;_fmt.link_uintptr;_fmt.fd_uintptr;_fmt.varp_uintptr;_fmt.framepc_uintptr_} noalg.struct_{_fmt.started_bool;_fmt.heap_bool;_fmt.openDefer_bool;_fmt.sp_uintptr;_fmt.pc_uintptr;_fmt.fn_uintptr;_fmt._panic_uintptr;_fmt.link_uintptr;_fmt.fd_uintptr;_fmt.varp_uintptr;_fmt.framepc_uintptr_}, *Pnoalg.struct_{_fmt.started_bool;_fmt.heap_bool;_fmt.openDefer_bool;_fmt.sp_uintptr;_fmt.pc_uintptr;_fmt.fn_uintptr;_fmt._panic_uintptr;_fmt.link_uintptr;_fmt.fd_uintptr;_fmt.varp_uintptr;_fmt.framepc_uintptr_};

struct noalg.struct_{_fmt.started_bool;_fmt.heap_bool;_fmt.openDefer_bool;_fmt.sp_uintptr;_fmt.pc_uintptr;_fmt.fn_uintptr;_fmt._panic_uintptr;_fmt.link_uintptr;_fmt.fd_uintptr;_fmt.varp_uintptr;_fmt.framepc_uintptr_} { // Original name: noalg.struct { fmt.started bool; fmt.heap bool; fmt.openDefer bool; fmt.sp uintptr; fmt.pc uintptr; fmt.fn uintptr; fmt._panic uintptr; fmt.link uintptr; fmt.fd uintptr; fmt.varp uintptr; fmt.framepc uintptr }
    bool started;
    bool heap;
    bool openDefer;
    uintptr sp;
    uintptr pc;
    uintptr fn;
    uintptr _panic;
    uintptr link;
    uintptr fd;
    uintptr varp;
    uintptr framepc;
};

typedef struct runtime.iface fmt.Stringer;

typedef struct hash<reflect.visit,bool> *map[reflect.visit]bool;

typedef struct noalg.struct_{_F_uintptr;_X0_*bool;_X1_*net/http.transferWriter;_X2_*error_} noalg.struct_{_F_uintptr;_X0_*bool;_X1_*net/http.transferWriter;_X2_*error_}, *Pnoalg.struct_{_F_uintptr;_X0_*bool;_X1_*net/http.transferWriter;_X2_*error_};

struct noalg.struct_{_F_uintptr;_X0_*bool;_X1_*net/http.transferWriter;_X2_*error_} { // Original name: noalg.struct { F uintptr; X0 *bool; X1 *net/http.transferWriter; X2 *error }
    uintptr F;
    bool *X0;
    struct net/http.transferWriter *X1;
    error *X2;
};

typedef struct noalg.struct_{_F_uintptr;_X0_*google.golang.org/protobuf/internal/filedesc.Methods_} noalg.struct_{_F_uintptr;_X0_*google.golang.org/protobuf/internal/filedesc.Methods_}, *Pnoalg.struct_{_F_uintptr;_X0_*google.golang.org/protobuf/internal/filedesc.Methods_};

struct noalg.struct_{_F_uintptr;_X0_*google.golang.org/protobuf/internal/filedesc.Methods_} { // Original name: noalg.struct { F uintptr; X0 *google.golang.org/protobuf/internal/filedesc.Methods }
    uintptr F;
    struct google.golang.org/protobuf/internal/filedesc.Methods *X0;
};

typedef struct html/template.URL html/template.URL, *Phtml/template.URL;

struct html/template.URL {
    uint8 *str;
    int len;
};

typedef struct noalg.struct_{_F_uintptr;_X0_*google.golang.org/protobuf/reflect/protoregistry.Files;_X1_*bool;_X2_*error;_X3_google.golang.org/protobuf/reflect/protoreflect.FileDescriptor_} noalg.struct_{_F_uintptr;_X0_*google.golang.org/protobuf/reflect/protoregistry.Files;_X1_*bool;_X2_*error;_X3_google.golang.org/protobuf/reflect/protoreflect.FileDescriptor_}, *Pnoalg.struct_{_F_uintptr;_X0_*google.golang.org/protobuf/reflect/protoregistry.Files;_X1_*bool;_X2_*error;_X3_google.golang.org/protobuf/reflect/protoreflect.FileDescriptor_};

struct noalg.struct_{_F_uintptr;_X0_*google.golang.org/protobuf/reflect/protoregistry.Files;_X1_*bool;_X2_*error;_X3_google.golang.org/protobuf/reflect/protoreflect.FileDescriptor_} { // Original name: noalg.struct { F uintptr; X0 *google.golang.org/protobuf/reflect/protoregistry.Files; X1 *bool; X2 *error; X3 google.golang.org/protobuf/reflect/protoreflect.FileDescriptor }
    uintptr F;
    struct google.golang.org/protobuf/reflect/protoregistry.Files *X0;
    bool *X1;
    error *X2;
    google.golang.org/protobuf/reflect/protoreflect.FileDescriptor X3;
};

typedef struct crypto/elliptic.nistCurve[*crypto/internal/nistec.P256Point] *.param30;

typedef go.shape.*uint8 .param25;

typedef struct crypto/elliptic.nistCurve[go.shape.*uint8] *.param24;

typedef struct sync/atomic.Pointer[interface_{}] *.param0;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Load/.param1 - /DWARF/.param1

typedef struct crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point] *.param13;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/time.atoi[go.shape.[]uint8]/.param1 - /DWARF/.param1

typedef struct crypto/elliptic.nistCurve[*crypto/internal/nistec.P384Point] *.param14;

typedef struct crypto/elliptic.nistCurve[go.shape.*uint8] *.param15;

typedef go.shape.*uint8 .param16;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/time.parseNanoseconds[go.shape.[]uint8]/.param1 - /DWARF/.param1

typedef struct crypto/ecdh.nistCurve[*crypto/internal/nistec.P256Point] *.param11;

typedef go.shape.*uint8 .param29;

typedef struct crypto/elliptic.nistCurve[go.shape.*uint8] *.param28;

typedef struct crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point] *.param21;

typedef struct crypto/ecdh.nistCurve[*crypto/internal/nistec.P384Point] *.param8;

typedef struct internal/godebug.value *.param4;

typedef struct sync/atomic.Pointer[internal/godebug.value] *.param3;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[google.golang.org\/grpc\/connectivity.State]).Load/.param0 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Load/.param0


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[google.golang.org\/grpc\/connectivity.State]).Load/.param1 - /DWARF/.param1

typedef struct sync.readOnly *.param10;

typedef struct sync/atomic.Pointer[sync.readOnly] *.param9;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.[]net.IPAddr].func1/.param3 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param3

typedef struct crypto/elliptic.nistCurve[*crypto/internal/nistec.P521Point] *.param26;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P384Point]).Unmarshal/.param30 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P256Point]).Unmarshal/.param30


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[go.shape.*uint8]).privateKeyToPublicKey/.param10 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).CompareAndSwap/.param10


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[go.shape.*uint8]).privateKeyToPublicKey/.param9 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).CompareAndSwap/.param9


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Store/.param4 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param4


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Store/.param3 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param3


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdsa.hashToNat[go.shape.*uint8]/.param0 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Load/.param0


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).IsOnCurve/.param14 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P384Point]).IsOnCurve/.param14


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P521Point]).NewPrivateKey/.param8 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).NewPrivateKey/.param8


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).ScalarMult/.param24 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).ScalarMult/.param24

typedef struct crypto/ecdh.nistCurve[*crypto/internal/nistec.P384Point] *.param7;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).Swap/.param7 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).GenerateKey/.param7

typedef struct sync.readOnly *.param6;

typedef struct sync/atomic.Pointer[sync.readOnly] *.param5;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P256Point]).NewPrivateKey/.param8 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).NewPrivateKey/.param8

typedef struct go.shape.[]uint8 .param2;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[go.shape.*uint8]).NewPrivateKey/.param8 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).NewPrivateKey/.param8

typedef struct crypto/elliptic.nistCurve[*crypto/internal/nistec.P224Point] *.param19;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P256Point]).ScalarMult/.param24 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).ScalarMult/.param24


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P384Point]).ScalarBaseMult/.param26 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).ScalarBaseMult/.param26

typedef go.shape.*uint8 .param32;

typedef struct crypto/elliptic.nistCurve[go.shape.*uint8] *.param31;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).ScalarBaseMult/.param26 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).ScalarBaseMult/.param26

typedef go.shape.*uint8 .param27;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P224Point]).IsOnCurve/.param14 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P384Point]).IsOnCurve/.param14


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).Unmarshal/.param30 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P256Point]).Unmarshal/.param30


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P384Point]).Add/.param19 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P224Point]).Add/.param19


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Swap/.param7 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).GenerateKey/.param7


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Swap/.param6 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).Swap/.param6


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Swap/.param5 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).Swap/.param5


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).Load/.param0 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Load/.param0


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).Load/.param1 - /DWARF/.param1


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[string]).Swap/.param7 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).GenerateKey/.param7


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[string]).Swap/.param6 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).Swap/.param6


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[string]).Swap/.param5 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).Swap/.param5


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P384Point]).Double/.param21 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).Double/.param21


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[string]).Load/.param0 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Load/.param0


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[string]).Load/.param1 - /DWARF/.param1


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/encoding\/json.appendString[go.shape.string]/.param0 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Load/.param0


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P521Point]).privateKeyToPublicKey/.param9 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).CompareAndSwap/.param9


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/time.atoi[go.shape.string]/.param1 - /DWARF/.param1


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P224Point]).Unmarshal/.param30 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P256Point]).Unmarshal/.param30


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).privateKeyToPublicKey/.param9 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).CompareAndSwap/.param9


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).CombinedMult/.param28 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).CombinedMult/.param28


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).CompareAndSwap/.param10 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).CompareAndSwap/.param10


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).CompareAndSwap/.param9 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).CompareAndSwap/.param9


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P256Point]).Double/.param21 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).Double/.param21


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P224Point]).CombinedMult/.param28 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).CombinedMult/.param28


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdsa.verifyNISTEC[go.shape.*uint8]/.param8 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).NewPrivateKey/.param8


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdsa.verifyNISTEC[go.shape.*uint8]/.param7 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).GenerateKey/.param7


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P224Point]).Params/.param13 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).Params/.param13


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[string]).Store/.param4 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param4


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[string]).Store/.param3 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param3


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.[]vendor\/golang.org\/x\/net\/dns\/dnsmessage.Resource].func1/.param3 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param3


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[google.golang.org\/grpc\/connectivity.State]).CompareAndSwap/.param10 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).CompareAndSwap/.param10


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[google.golang.org\/grpc\/connectivity.State]).CompareAndSwap/.param9 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).CompareAndSwap/.param9


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[go.shape.*uint8]).NewPublicKey/.param11 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P256Point]).NewPublicKey/.param11


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).Unmarshal/.param30 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P256Point]).Unmarshal/.param30


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).Add/.param19 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P224Point]).Add/.param19

typedef go.shape.*uint8 .param20;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).CompareAndSwap/.param10 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).CompareAndSwap/.param10


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).CompareAndSwap/.param9 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).CompareAndSwap/.param9


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P256Point]).UnmarshalCompressed/.param31 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).UnmarshalCompressed/.param31


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/encoding\/json.appendString[go.shape.[]uint8]/.param0 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Load/.param0


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P256Point]).ScalarBaseMult/.param26 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).ScalarBaseMult/.param26


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/time.parseRFC3339[go.shape.string]/.param2 - /DWARF/_UNCATEGORIZED_/time.parseRFC3339[go.shape.[]uint8]/.param2

typedef struct crypto/ecdh.nistCurve[*crypto/internal/nistec.P256Point] *.param12;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.[]string].func1/.param3 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param3


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Load/.param0 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Load/.param0


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Load/.param1 - /DWARF/.param1


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).NewPublicKey/.param11 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P256Point]).NewPublicKey/.param11

typedef go.shape.*uint8 .param18;

typedef struct crypto/elliptic.nistCurve[go.shape.*uint8] *.param17;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P521Point]).ecdh/.param12 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P256Point]).ecdh/.param12


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P256Point]).privateKeyToPublicKey/.param9 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).CompareAndSwap/.param9


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.int]/.param0 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Load/.param0


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.int]/.param2 - /DWARF/_UNCATEGORIZED_/time.parseRFC3339[go.shape.[]uint8]/.param2


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P521Point]).String/.param6 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).Swap/.param6


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P384Point]).UnmarshalCompressed/.param31 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).UnmarshalCompressed/.param31


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdsa.(*nistCurve[go.shape.*uint8]).pointFromAffine/.param3 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param3


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdsa.(*nistCurve[go.shape.*uint8]).pointFromAffine/.param2 - /DWARF/_UNCATEGORIZED_/time.parseRFC3339[go.shape.[]uint8]/.param2


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).Double/.param21 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).Double/.param21

typedef go.shape.*uint8 .param22;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[go.shape.*uint8]).GenerateKey/.param7 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).GenerateKey/.param7


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P521Point]).NewPublicKey/.param11 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P256Point]).NewPublicKey/.param11


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[google.golang.org\/grpc\/connectivity.State]).Store/.param4 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param4


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[google.golang.org\/grpc\/connectivity.State]).Store/.param3 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param3


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P224Point]).ScalarMult/.param24 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).ScalarMult/.param24


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P224Point]).UnmarshalCompressed/.param31 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).UnmarshalCompressed/.param31


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.[]string]/.param0 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Load/.param0


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.[]string]/.param2 - /DWARF/_UNCATEGORIZED_/time.parseRFC3339[go.shape.[]uint8]/.param2


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.[]string]/.param1 - /DWARF/.param1


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.[]string]/.param3 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param3


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdsa.inverse[go.shape.*uint8]/.param0 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Load/.param0


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[string]).CompareAndSwap/.param10 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).CompareAndSwap/.param10


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[string]).CompareAndSwap/.param9 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).CompareAndSwap/.param9


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P256Point]).String/.param6 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).Swap/.param6


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).IsOnCurve/.param14 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P384Point]).IsOnCurve/.param14


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P384Point]).ScalarMult/.param24 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).ScalarMult/.param24


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P384Point]).Params/.param13 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).Params/.param13


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[go.shape.*uint8]).ecdh/.param12 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P256Point]).ecdh/.param12


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[go.shape.*uint8]).ecdh/.param13 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).Params/.param13


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[google.golang.org\/grpc\/connectivity.State]).Swap/.param7 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).GenerateKey/.param7


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[google.golang.org\/grpc\/connectivity.State]).Swap/.param6 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).Swap/.param6


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[google.golang.org\/grpc\/connectivity.State]).Swap/.param5 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).Swap/.param5

typedef struct crypto/elliptic.nistCurve[go.shape.*uint8] *.param23;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P256Point]).CombinedMult/.param28 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).CombinedMult/.param28


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.int].func1/.param3 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param3


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P384Point]).CombinedMult/.param28 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).CombinedMult/.param28


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P256Point]).Add/.param19 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P224Point]).Add/.param19


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/time.parseNanoseconds[go.shape.string]/.param1 - /DWARF/.param1


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P256Point]).GenerateKey/.param7 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).GenerateKey/.param7


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdsa.precomputeParams[go.shape.*uint8]/.param0 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Load/.param0


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P224Point]).ScalarBaseMult/.param26 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).ScalarBaseMult/.param26


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).ecdh/.param12 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P256Point]).ecdh/.param12


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.[]vendor\/golang.org\/x\/net\/dns\/dnsmessage.Resource]/.param0 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Load/.param0


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.[]vendor\/golang.org\/x\/net\/dns\/dnsmessage.Resource]/.param2 - /DWARF/_UNCATEGORIZED_/time.parseRFC3339[go.shape.[]uint8]/.param2


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.[]vendor\/golang.org\/x\/net\/dns\/dnsmessage.Resource]/.param1 - /DWARF/.param1


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.[]vendor\/golang.org\/x\/net\/dns\/dnsmessage.Resource]/.param3 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param3


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).Store/.param4 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param4


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).Store/.param3 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param3


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P224Point]).Double/.param21 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).Double/.param21


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Swap/.param7 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).GenerateKey/.param7


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Swap/.param6 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).Swap/.param6


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Swap/.param5 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).Swap/.param5


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P256Point]).Params/.param13 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).Params/.param13


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P521Point]).GenerateKey/.param7 - /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).GenerateKey/.param7


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P256Point]).IsOnCurve/.param14 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P384Point]).IsOnCurve/.param14


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.[]net.IPAddr]/.param0 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Load/.param0


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.[]net.IPAddr]/.param2 - /DWARF/_UNCATEGORIZED_/time.parseRFC3339[go.shape.[]uint8]/.param2


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.[]net.IPAddr]/.param1 - /DWARF/.param1


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/net.doBlockingWithCtx[go.shape.[]net.IPAddr]/.param3 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param3


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).UnmarshalCompressed/.param31 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[go.shape.*uint8]).UnmarshalCompressed/.param31


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/ecdh.(*nistCurve[*crypto\/internal\/nistec.P384Point]).String/.param6 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[sync.readOnly]).Swap/.param6


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P521Point]).Add/.param19 - /DWARF/_UNCATEGORIZED_/crypto\/elliptic.(*nistCurve[*crypto\/internal\/nistec.P224Point]).Add/.param19


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/slices.EqualFunc[go.shape.[]log\/slog.Attr,go.shape.[]log\/slog.Attr,go.shape.struct_{_Key_string;_Value_log\/slog.Value_},go.shape.struct_{_Key_string;_Value_log\/slog.Value_}]/.param0 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[interface_{}]).Load/.param0


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/slices.EqualFunc[go.shape.[]log\/slog.Attr,go.shape.[]log\/slog.Attr,go.shape.struct_{_Key_string;_Value_log\/slog.Value_},go.shape.struct_{_Key_string;_Value_log\/slog.Value_}]/.param2 - /DWARF/_UNCATEGORIZED_/time.parseRFC3339[go.shape.[]uint8]/.param2


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/slices.EqualFunc[go.shape.[]log\/slog.Attr,go.shape.[]log\/slog.Attr,go.shape.struct_{_Key_string;_Value_log\/slog.Value_},go.shape.struct_{_Key_string;_Value_log\/slog.Value_}]/.param1 - /DWARF/.param1


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/slices.EqualFunc[go.shape.[]log\/slog.Attr,go.shape.[]log\/slog.Attr,go.shape.struct_{_Key_string;_Value_log\/slog.Value_},go.shape.struct_{_Key_string;_Value_log\/slog.Value_}]/.param4 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param4


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/slices.EqualFunc[go.shape.[]log\/slog.Attr,go.shape.[]log\/slog.Attr,go.shape.struct_{_Key_string;_Value_log\/slog.Value_},go.shape.struct_{_Key_string;_Value_log\/slog.Value_}]/.param3 - /DWARF/_UNCATEGORIZED_/sync\/atomic.(*Pointer[internal\/godebug.value]).Store/.param3

typedef void *__gnuc_va_list;

typedef union _union_1457 _union_1457, *P_union_1457;

typedef void (*__sighandler_t)(int);

union _union_1457 {
    __sighandler_t sa_handler;
    void (*sa_sigaction)(int, siginfo_t *, void *);
};

typedef struct sigaction sigaction, *Psigaction;

typedef struct __sigset_t __sigset_t, *P__sigset_t;

struct __sigset_t {
    ulong __val[16];
};

struct sigaction {
    union _union_1457 __sigaction_handler;
    struct __sigset_t sa_mask;
    int sa_flags;
    void (*sa_restorer)(void);
};

typedef ulong __cpu_mask;

typedef struct cpu_set_t cpu_set_t, *Pcpu_set_t;

struct cpu_set_t {
    __cpu_mask __bits[16];
};

typedef struct iovec iovec, *Piovec;

struct iovec {
    void *iov_base;
    size_t iov_len;
};

typedef struct ui_string_st ui_string_st, *Pui_string_st;

struct ui_string_st {
};

typedef struct ui_string_st UI_STRING;

typedef struct div_t div_t, *Pdiv_t;

struct div_t {
    int quot;
    int rem;
};

typedef ushort sa_family_t;

typedef void _IO_lock_t;

typedef struct _IO_marker _IO_marker, *P_IO_marker;

typedef struct _IO_FILE _IO_FILE, *P_IO_FILE;

struct _IO_marker {
    struct _IO_marker *_next;
    struct _IO_FILE *_sbuf;
    int _pos;
};

struct _IO_FILE {
    int _flags;
    char *_IO_read_ptr;
    char *_IO_read_end;
    char *_IO_read_base;
    char *_IO_write_base;
    char *_IO_write_ptr;
    char *_IO_write_end;
    char *_IO_buf_base;
    char *_IO_buf_end;
    char *_IO_save_base;
    char *_IO_backup_base;
    char *_IO_save_end;
    struct _IO_marker *_markers;
    struct _IO_FILE *_chain;
    int _fileno;
    int _flags2;
    __off_t _old_offset;
    ushort _cur_column;
    char _vtable_offset;
    char _shortbuf[1];
    _IO_lock_t *_lock;
    __off64_t _offset;
    void *__pad1;
    void *__pad2;
    void *__pad3;
    void *__pad4;
    size_t __pad5;
    int _mode;
    char _unused2[20];
};

typedef __rlim_t rlim_t;

typedef struct rlimit rlimit, *Prlimit;

struct rlimit {
    rlim_t rlim_cur;
    rlim_t rlim_max;
};

typedef enum __rlimit_resource {
    RLIMIT_CPU=0,
    RLIMIT_FSIZE=1,
    RLIMIT_DATA=2,
    RLIMIT_STACK=3,
    RLIMIT_CORE=4,
    __RLIMIT_RSS=5,
    __RLIMIT_NPROC=6,
    RLIMIT_NOFILE=7,
    __RLIMIT_MEMLOCK=8,
    __RLIMIT_OFILE=8,
    RLIMIT_AS=9,
    __RLIMIT_LOCKS=10,
    __RLIMIT_SIGPENDING=11,
    __RLIMIT_MSGQUEUE=12,
    __RLIMIT_NICE=13,
    __RLIMIT_RTPRIO=14,
    __RLIMIT_NLIMITS=15,
    __RLIM_NLIMITS=16
} __rlimit_resource;

typedef enum __rlimit_resource __rlimit_resource_t;

typedef struct GoBuildInfo_inline_1_9_2_879 GoBuildInfo_inline_1_9_2_879, *PGoBuildInfo_inline_1_9_2_879;

struct GoBuildInfo_inline_1_9_2_879 {
    char magic[14]; // \xff Go buildinf:
    byte ptrSize;
    byte flags;
    byte padding[16];
    byte versionlen[1];
    char version[9];
    byte modulelen[2];
    byte sentinelstart[16];
    char moduleinfo[847];
    byte sentinelend[16];
};

typedef struct NoteGoBuildId_83 NoteGoBuildId_83, *PNoteGoBuildId_83;

struct NoteGoBuildId_83 {
