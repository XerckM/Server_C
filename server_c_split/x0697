      }
      local_68._8_8_ = extraout_RDI;
      args_00.cap = (int)in_stack_fffffffffffffee0;
      args_00.array = (interface___ *)in_stack_fffffffffffffed0.str;
      args_00.len = in_stack_fffffffffffffed0.len;
      text_template_parse___Tree__errorf(t,in_stack_fffffffffffffec0,args_00);
    }
    uVar2 = CONCAT44(token.pos._4_4_,(undefined4)token.pos);
    local_90 = CONCAT44(token.val.str._4_4_,token.val.str._0_4_);
    ~r0_01 = (void *)CONCAT44(token.val.len._4_4_,(undefined4)token.val.len);
    runtime_newobject((internal_abi_Type *)&DAT_00888820,~r0_01);
    puVar3 = extraout_RAX_07;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_02 = t;
      puVar3 = extraout_RAX_08;
    }
    puVar3[2] = t;
    *puVar3 = 0x10;
    puVar3[1] = uVar2;
    puVar3[4] = ~r0_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_03 = local_90;
      puVar3 = extraout_RAX_09;
    }
    puVar3[3] = local_90;
    puVar3[6] = extraout_RBX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_04 = local_98;
      puVar3 = extraout_RAX_10;
    }
    puVar3[5] = local_98;
    return;
  case 0x15:
    text_template_parse___Tree__useVar
              (t,(text_template_parse_Pos)~r0_03,in_stack_fffffffffffffec0,
               (text_template_parse_Node)in_stack_fffffffffffffed0);
    return;
  case 0x1a:
    runtime_newobject((internal_abi_Type *)&DAT_00873b20,~r0_03);
    puVar3 = extraout_RAX_11;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_05 = t;
      puVar3 = extraout_RAX_12;
    }
    puVar3[2] = t;
    *puVar3 = 5;
    puVar3[1] = ~r0_03;
    return;
  case 0x1f:
    runtime_newobject((internal_abi_Type *)&DAT_00873be0,~r0_03);
    puVar3 = extraout_RAX_13;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_06 = t;
      puVar3 = extraout_RAX_14;
    }
    puVar3[2] = t;
    *puVar3 = 0xc;
    puVar3[1] = ~r0_03;
    return;
  }
  phVar5 = ~r0_03;
  if (((dword)t->Mode >> 1 & 1) == 0) {
    iVar6 = (t->funcs).len;
    pphVar7 = (t->funcs).array;
    iVar4 = 0;
    ~r0_02 = typ;
    local_a8 = iVar6;
    local_80 = typ;
    local_70 = pphVar7;
    while( true ) {
      bVar9 = SBORROW8(iVar4,iVar6);
      iVar1 = iVar4 - iVar6;
      if (iVar6 <= iVar4) break;
      phVar5 = pphVar7[iVar4];
      if ((phVar5 != (map_string_interface___)0x0) &&
         (local_b0 = iVar4,
         runtime_mapaccess1_faststr
                   ((internal_abi_MapType *)&DAT_0082b4e0,(runtime_hmap *)phVar5,
                    in_stack_fffffffffffffec0,~r0_02), iVar4 = local_b0, ~r0_02 = local_80,
         phVar5 = extraout_RBX_02, iVar6 = local_a8, pphVar7 = local_70, *extraout_RAX_19 != 0)) {
        bVar9 = SBORROW8(local_b0,local_a8);
        iVar1 = local_b0 - local_a8;
        break;
      }
      iVar4 = iVar4 + 1;
    }
    bVar9 = bVar9 == iVar1 < 0;
  }
  else {
    bVar9 = false;
  }
  if (bVar9) {
    runtime_convTstring(in_stack_fffffffffffffec0,
                        (void *)CONCAT44(token.val.str._4_4_,token.val.str._0_4_));
    local_68._8_8_ = extraout_RAX_15;
    local_68._0_8_ = &DAT_008075e0;
    args_01.cap = (int)in_stack_fffffffffffffee0;
    args_01.array = (interface___ *)in_stack_fffffffffffffed0.str;
    args_01.len = in_stack_fffffffffffffed0.len;
    text_template_parse___Tree__errorf(t,in_stack_fffffffffffffec0,args_01);
    phVar5 = extraout_RBX_01;
  }
  local_b8 = CONCAT44(token.val.len._4_4_,(undefined4)token.val.len);
  local_78 = CONCAT44(token.val.str._4_4_,token.val.str._0_4_);
  runtime_newobject((internal_abi_Type *)&DAT_00883140,phVar5);
  *extraout_RAX_16 = 9;
  extraout_RAX_16[4] = local_b8;
  puVar3 = extraout_RAX_16;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_07 = local_78;
    puVar3 = extraout_RAX_17;
  }
  puVar3[3] = local_78;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_08 = t;
    puVar3 = extraout_RAX_18;
  }
  puVar3[2] = t;
  puVar3[1] = CONCAT44(token.pos._4_4_,(undefined4)token.pos);
  return;
}



// WARNING: Unknown calling convention

void text_template_parse___Tree__popVars(text_template_parse_Tree *t,int n)

{
  if ((uint)n <= (uint)(t->vars).cap) {
    (t->vars).len = n;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceAcap();
}



void text_template_parse___Tree__useVar
               (text_template_parse_Tree *t,text_template_parse_Pos pos,string name,
               text_template_parse_Node ~r0)

{
  int iVar1;
  __interface___ args;
  __string ~r0_00;
  char extraout_AL;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  text_template_parse_VariableNode *v;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *puVar2;
  int in_RCX;
  undefined8 extraout_RCX;
  int iVar3;
  text_template_parse_Tree *ptVar4;
  void *~r0_01;
  string *psVar5;
  int in_RDI;
  text_template_parse_Tree **extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  string in_stack_ffffffffffffff80;
  string in_stack_ffffffffffffff90;
  int in_stack_ffffffffffffffa0;
  undefined8 in_stack_ffffffffffffffa8;
  int in_stack_ffffffffffffffb0;
  void *pvVar6;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.len = in_stack_ffffffffffffffa8;
  ~r0_00.array = (string *)in_stack_ffffffffffffffa0;
  ~r0_00.cap = in_stack_ffffffffffffffb0;
  strings_genSplit(in_stack_ffffffffffffff80,in_stack_ffffffffffffff90,in_RCX,in_RDI,~r0_00);
  pvVar6 = ~r0_01;
  runtime_newobject((internal_abi_Type *)&DAT_00882a40,~r0_01);
  puVar2 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = t;
    puVar2 = extraout_RAX_01;
  }
  puVar2[2] = t;
  *puVar2 = 0x12;
  puVar2[1] = pos;
  puVar2[4] = pvVar6;
  puVar2[5] = extraout_RCX;
  ptVar4 = t;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = extraout_RAX;
    puVar2 = extraout_RAX_02;
  }
  puVar2[3] = extraout_RAX;
  psVar5 = (ptVar4->vars).array;
  iVar1 = (ptVar4->vars).len;
  iVar3 = 0;
  while( true ) {
    if (iVar1 <= iVar3) {
      if (puVar2[4] == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      runtime_convTstring(in_stack_ffffffffffffff80,*(void **)puVar2[3]);
      args.cap = in_stack_ffffffffffffffa0;
      args.array = (interface___ *)in_stack_ffffffffffffff90.str;
      args.len = in_stack_ffffffffffffff90.len;
      text_template_parse___Tree__errorf(t,in_stack_ffffffffffffff80,args);
      return;
    }
    if (puVar2[4] == 0) break;
    if ((*(int *)(puVar2[3] + 8) == psVar5->len) && (runtime_memequal(), extraout_AL != '\0')) {
      return;
    }
    psVar5 = psVar5 + 1;
    iVar3 = iVar3 + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



int text_template_parse_init(EVP_PKEY_CTX *ctx)

{
  int extraout_RAX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  text_template_parse_map_init_0();
  return extraout_RAX;
}



// WARNING: Unknown calling convention

void text_template_parse_map_init_0(void)

{
  map_string_text_template_parse_itemType h;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  undefined8 *extraout_RAX_07;
  undefined8 *extraout_RAX_08;
  undefined8 *extraout_RAX_09;
  undefined8 *extraout_RAX_10;
  runtime_hmap *in_RDI;
  runtime_hmap *extraout_RDI;
  map_string_text_template_parse_itemType *extraout_R11;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  runtime_makemap((internal_abi_MapType *)&DAT_00830700,0xc,(runtime_hmap *)0x0,in_RDI);
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_00830700,(runtime_hmap *)h,in_stack_ffffffffffffffd0,
             &DAT_0095a710);
  *extraout_RAX = 0x1a;
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_00830700,(runtime_hmap *)h,in_stack_ffffffffffffffd0,
             "blockAopf;Ascr;Auml;Barv;Beta;Bopf;Bscr;CHcy;COPY;Cdot;Copf;Cscr;DJcy;DScy;DZcy;Darr;Dopf;Dscr;Edot;Eopf;Escr;Esim;Euml;Fopf;Fscr;GJcy;Gdot;Gopf;Gscr;Hopf;Hscr;IEcy;IOcy;Idot;Iopf;Iota;Iscr;Iuml;Jopf;Jscr;KHcy;KJcy;Kopf;Kscr;LJcy;Lang;Larr;Lopf;Lscr;Mopf;Mscr;NJcy;Nopf;Nscr;Oopf;Oscr;Ouml;Popf;Pscr;QUOT;Qopf;Qscr;Rang;Rarr;Ropf;Rscr;SHcy;Sopf;Sqrt;Sscr;Star;TScy;Topf;Tscr;Uarr;Uopf;Upsi;Uscr;Uuml;Vbar;Vert;Vopf;Vscr;Wopf;Wscr;Xopf;Xscr;YAcy;YIcy;YUcy;Yopf;Yscr;Yuml;ZHcy;Zdot;Zeta;Zopf;Zscr;andd;andv;ange;aopf;apid;apos;ascr;auml;bNot;bbrk;beta;beth;bnot;bopf;boxH;boxV;boxh;boxv;bscr;bsim;bsol;bull;bump;cdot;cent;chcy;cirE;circ;cire;comp;cong;copf;copy;cscr;csub;csup;dArr;dHar;darr;dash;diam;djcy;dopf;dscr;dscy;dsol;dtri;dzcy;eDot;ecir;edot;emsp;ensp;eopf;epar;epsi;escr;esim;euml;euro;excl;flat;fnof;fopf;fork;fscr;gdot;geqq;gjcy;gnap;gneq;gopf;gscr;gsim;gtcc;hArr;half;harr;hbar;hopf;hscr;iecy;imof;iocy;iopf;iota;iscr;isin;iuml;jopf;jscr;khcy;kjcy;kopf;kscr;lArr;lHar;lang;larr;late;lcub;ldca;ldsh;leqq;ljcy;lnap;lneq;lopf;lozf;lpar;lscr;lsim;lsqb;ltcc;ltri;macr;male;malt;mlcp;mldr;mopf;mscr;nbsp;ncap;ncup;ngeq;ngtr;nisd;njcy;nldr;nleq;nmid;nopf;npar;nscr;nsim;nsub;nsup;ntgl;ntlg;oast;ocir;odiv;odot;ogon;oint;omid;oopf;opar;ordf;ordm;oror;oscr;osol;ouml;para;part;perp;phiv;plus;popf;prap;prec;prnE;prod;prop;pscr;qint;qopf;qscr;quot;rArr;rHar;rang;rarr;rcub;rdca;rdsh;real;rect;rhov;ring;ropf;rpar;rscr;rsqb;rtri;scap;scnE;sdot;sect;semi;sext;shcy;sime;simg;siml;smid;smte;solb;sopf;spar;squf;sscr;star;subE;sube;succ;sung;sup1;sup2;sup3;supE;supe;tbrk;tdot;tint;toea;topf;tosa;trie;tscr;tscy;uArr;uHar;uarr;uopf;upsi;uscr;utri;uuml;vArr;vBar;varr;vert;vopf;vscr;wopf;wscr;xcap;xcup;xmap;xnis;xopf;xscr;xvee;yacy;yicy;yopf;yscr;yucy;yuml;zdot;zeta;zhcy;zopf;zscr;zwnj;AEligAcircAringEcircIcircOcircTHORNUcircacircacuteaeligaringcedilecircicirciexcllaquomicroocircpoundraquoszligthorntimesucirccaps;cups;gesl;gvnE;lesg;lvnE;nGtv;nLtv;nang;napE;nges;nles;npre;nsce;nvap;nvge;nvgt;nvle;nvlt;race;indexprintFalseIDENTFLOATconst:50051, ..." /* TRUNCATED STRING LITERAL */
            );
  *extraout_RAX_00 = 0x17;
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_00830700,(runtime_hmap *)h,in_stack_ffffffffffffffd0,
             "breakthrowFlushWriteNames%d:%dIsMapOneofEnumsInput\\%03oname=enum=json=weak=oneofSHA-1P-224P-256P-384P-521matchrune .eEpPinputblockAopf;Ascr;Auml;Barv;Beta;Bopf;Bscr;CHcy;COPY;Cdot;Copf;Cscr;DJcy;DScy;DZcy;Darr;Dopf;Dscr;Edot;Eopf;Escr;Esim;Euml;Fopf;Fscr;GJcy;Gdot;Gopf;Gscr;Hopf;Hscr;IEcy;IOcy;Idot;Iopf;Iota;Iscr;Iuml;Jopf;Jscr;KHcy;KJcy;Kopf;Kscr;LJcy;Lang;Larr;Lopf;Lscr;Mopf;Mscr;NJcy;Nopf;Nscr;Oopf;Oscr;Ouml;Popf;Pscr;QUOT;Qopf;Qscr;Rang;Rarr;Ropf;Rscr;SHcy;Sopf;Sqrt;Sscr;Star;TScy;Topf;Tscr;Uarr;Uopf;Upsi;Uscr;Uuml;Vbar;Vert;Vopf;Vscr;Wopf;Wscr;Xopf;Xscr;YAcy;YIcy;YUcy;Yopf;Yscr;Yuml;ZHcy;Zdot;Zeta;Zopf;Zscr;andd;andv;ange;aopf;apid;apos;ascr;auml;bNot;bbrk;beta;beth;bnot;bopf;boxH;boxV;boxh;boxv;bscr;bsim;bsol;bull;bump;cdot;cent;chcy;cirE;circ;cire;comp;cong;copf;copy;cscr;csub;csup;dArr;dHar;darr;dash;diam;djcy;dopf;dscr;dscy;dsol;dtri;dzcy;eDot;ecir;edot;emsp;ensp;eopf;epar;epsi;escr;esim;euml;euro;excl;flat;fnof;fopf;fork;fscr;gdot;geqq;gjcy;gnap;gneq;gopf;gscr;gsim;gtcc;hArr;half;harr;hbar;hopf;hscr;iecy;imof;iocy;iopf;iota;iscr;isin;iuml;jopf;jscr;khcy;kjcy;kopf;kscr;lArr;lHar;lang;larr;late;lcub;ldca;ldsh;leqq;ljcy;lnap;lneq;lopf;lozf;lpar;lscr;lsim;lsqb;ltcc;ltri;macr;male;malt;mlcp;mldr;mopf;mscr;nbsp;ncap;ncup;ngeq;ngtr;nisd;njcy;nldr;nleq;nmid;nopf;npar;nscr;nsim;nsub;nsup;ntgl;ntlg;oast;ocir;odiv;odot;ogon;oint;omid;oopf;opar;ordf;ordm;oror;oscr;osol;ouml;para;part;perp;phiv;plus;popf;prap;prec;prnE;prod;prop;pscr;qint;qopf;qscr;quot;rArr;rHar;rang;rarr;rcub;rdca;rdsh;real;rect;rhov;ring;ropf;rpar;rscr;rsqb;rtri;scap;scnE;sdot;sect;semi;sext;shcy;sime;simg;siml;smid;smte;solb;sopf;spar;squf;sscr;star;subE;sube;succ;sung;sup1;sup2;sup3;supE;supe;tbrk;tdot;tint;toea;topf;tosa;trie;tscr;tscy;uArr;uHar;uarr;uopf;upsi;uscr;utri;uuml;vArr;vBar;varr;vert;vopf;vscr;wopf;wscr;xcap;xcup;xmap;xnis;xopf;xscr;xvee;yacy;yicy;yopf;yscr;yucy;yuml;zdot;zeta;zhcy;zopf;zscr;zwnj;AEligAcircAringEcircIcircOcircTHORNUcircacircacuteaeligaringcedilecircicirciexcllaquomicroocircpoundraquoszligthorntimesucirccaps;cups;ges..." /* TRUNCATED STRING LITERAL */
            );
  *extraout_RAX_01 = 0x18;
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_00830700,(runtime_hmap *)h,in_stack_ffffffffffffffd0,
             &DAT_008b1abe);
  *extraout_RAX_02 = 0x19;
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_00830700,(runtime_hmap *)h,in_stack_ffffffffffffffd0,
             "defineAElig;Acirc;Alpha;Amacr;Aogon;Aring;Breve;Ccirc;Colon;Cross;Dashv;Delta;Ecirc;Emacr;Eogon;Equal;Gamma;Gcirc;Hacek;Hcirc;IJlig;Icirc;Imacr;Iogon;Iukcy;Jcirc;Jukcy;Kappa;OElig;Ocirc;Omacr;Omega;Prime;RBarr;Scirc;Sigma;THORN;TRADE;TSHcy;Theta;Tilde;Ubrcy;Ucirc;Umacr;Union;Uogon;UpTee;Uring;VDash;Vdash;Wcirc;Wedge;Ycirc;acirc;acute;aelig;aleph;alpha;amacr;amalg;angle;angrt;angst;aogon;aring;asymp;awint;bcong;bdquo;bepsi;blank;blk12;blk14;blk34;block;boxDL;boxDR;boxDl;boxDr;boxHD;boxHU;boxHd;boxHu;boxUL;boxUR;boxUl;boxUr;boxVH;boxVL;boxVR;boxVh;boxVl;boxVr;boxdL;boxdR;boxdl;boxdr;boxhD;boxhU;boxhd;boxhu;boxuL;boxuR;boxul;boxur;boxvH;boxvL;boxvR;boxvh;boxvl;boxvr;breve;bsemi;bsime;bsolb;bumpE;bumpe;caret;caron;ccaps;ccirc;ccups;cedil;check;clubs;colon;comma;crarr;cross;csube;csupe;ctdot;cuepr;cuesc;cupor;cuvee;cuwed;cwint;dashv;dblac;ddarr;delta;dharl;dharr;diams;disin;doteq;dtdot;dtrif;duarr;duhar;eDDot;ecirc;efDot;emacr;empty;eogon;eplus;epsiv;eqsim;equiv;erDot;erarr;esdot;exist;fflig;filig;fllig;fltns;forkv;frasl;frown;gamma;gcirc;gescc;gimel;gneqq;gnsim;grave;gsime;gsiml;gtcir;gtdot;harrw;hcirc;hoarr;icirc;iexcl;iiint;iiota;ijlig;imacr;image;imath;imped;infin;iogon;iprod;isinE;isins;isinv;iukcy;jcirc;jmath;jukcy;kappa;lAarr;lBarr;langd;laquo;larrb;lbarr;lbbrk;lbrke;lceil;ldquo;lescc;lhard;lharu;lhblk;llarr;lltri;lneqq;lnsim;loang;loarr;lobrk;lopar;lrarr;lrhar;lrtri;lsime;lsimg;lsquo;ltcir;ltdot;ltrie;ltrif;mDDot;mdash;micro;minus;mumap;nabla;napos;natur;ncong;ndash;neArr;nearr;ngsim;nhArr;nharr;nhpar;nlArr;nlarr;nless;nlsim;nltri;notin;notni;nprec;nrArr;nrarr;nrtri;nsime;nsmid;nspar;nsube;nsucc;nsupe;numsp;nwArr;nwarr;ocirc;odash;oelig;ofcir;ohbar;olarr;olcir;oline;omacr;omega;operp;oplus;orarr;order;ovbar;parsl;phone;plusb;pluse;pound;prcue;prime;prnap;prsim;quest;rAarr;rBarr;radic;rangd;range;raquo;rarrb;rarrc;rarrw;ratio;rbarr;rbbrk;rbrke;rceil;rdquo;reals;rhard;rharu;rlarr;rlhar;rnmid;roang;roarr;robrk;ropar;rrarr;rsquo;rtrie;rtrif;sbquo;sccue;scirc;scnap;scsim;sdotb;sdote;seArr;searr;setmn;sharp;sigma;si..." /* TRUNCATED STRING LITERAL */
            );
  *extraout_RAX_03 = 0x1b;
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_00830700,(runtime_hmap *)h,in_stack_ffffffffffffffd0,
             &DAT_008ae82b);
  *extraout_RAX_04 = 0x1c;
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_00830700,(runtime_hmap *)h,in_stack_ffffffffffffffd0,
             &DAT_008ae372);
  *extraout_RAX_05 = 0x1d;
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_00830700,(runtime_hmap *)h,in_stack_ffffffffffffffd0,
             &DAT_008ae258);
  *extraout_RAX_06 = 0x1e;
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_00830700,(runtime_hmap *)h,in_stack_ffffffffffffffd0,
             &DAT_008aee1c);
  *extraout_RAX_07 = 0x20;
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_00830700,(runtime_hmap *)h,in_stack_ffffffffffffffd0,
             &DAT_008ae32a);
  *extraout_RAX_08 = 0x1f;
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_00830700,(runtime_hmap *)h,in_stack_ffffffffffffffd0,
             &DAT_008b2116);
  *extraout_RAX_09 = 0x21;
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_00830700,(runtime_hmap *)h,in_stack_ffffffffffffffd0,
             &DAT_008ae7df);
  *extraout_RAX_10 = 0x22;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = h;
    extraout_R11[1] = text_template_parse_key;
  }
  text_template_parse_key = h;
  return;
}



void type__eq_text_template_parse_item
               (text_template_parse_item *p,text_template_parse_item *q,bool r)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((q->typ == p->typ) && (q->pos == p->pos)) && ((q->val).len == (p->val).len)) &&
     (q->line == p->line)) {
    runtime_memequal();
  }
  return;
}



void type__eq_text_template_parse_lexer
               (text_template_parse_lexer *p,text_template_parse_lexer *q,bool r)

{
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  char extraout_AL_02;
  int unaff_R14;
  text_template_parse_lexer *ptStack0000000000000008;
  text_template_parse_lexer *ptStack0000000000000010;
  
  ptStack0000000000000008 = p;
  ptStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((((((ptStack0000000000000008->name).len == (ptStack0000000000000010->name).len) &&
          ((ptStack0000000000000008->input).len == (ptStack0000000000000010->input).len)) &&
         ((ptStack0000000000000008->leftDelim).len == (ptStack0000000000000010->leftDelim).len)) &&
        (((ptStack0000000000000010->rightDelim).len == (ptStack0000000000000008->rightDelim).len &&
         (ptStack0000000000000010->pos == ptStack0000000000000008->pos)))) &&
       ((ptStack0000000000000010->start == ptStack0000000000000008->start &&
        ((ptStack0000000000000010->atEOF == ptStack0000000000000008->atEOF &&
         (ptStack0000000000000010->parenDepth == ptStack0000000000000008->parenDepth)))))) &&
      (ptStack0000000000000010->line == ptStack0000000000000008->line)) &&
     (((((ptStack0000000000000010->startLine == ptStack0000000000000008->startLine &&
         (type__eq_text_template_parse_item
                    (&ptStack0000000000000008->item,&ptStack0000000000000010->item,
                     SUB81(&ptStack0000000000000008->item,0)), extraout_AL != '\0')) &&
        (ptStack0000000000000010->insideAction == ptStack0000000000000008->insideAction)) &&
       ((((ptStack0000000000000010->options).emitComment ==
          (ptStack0000000000000008->options).emitComment &&
         ((ptStack0000000000000010->options).breakOK == (ptStack0000000000000008->options).breakOK))
        && (((ptStack0000000000000010->options).continueOK ==
             (ptStack0000000000000008->options).continueOK &&
            ((runtime_memequal(), extraout_AL_00 != '\0' &&
             (runtime_memequal(), extraout_AL_01 != '\0')))))))) &&
      (runtime_memequal(), extraout_AL_02 != '\0')))) {
    runtime_memequal();
  }
  return;
}



void type__eq__3_text_template_parse_item
               (text_template_parse_item (*p) [3],text_template_parse_item (*q) [3],bool r)

{
  char extraout_AL;
  char extraout_AL_00;
  int unaff_R14;
  text_template_parse_item (*patStack0000000000000008) [3];
  text_template_parse_item (*patStack0000000000000010) [3];
  
  patStack0000000000000008 = p;
  patStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((((*patStack0000000000000010)[0].typ == (*patStack0000000000000008)[0].typ) &&
        ((*patStack0000000000000010)[0].pos == (*patStack0000000000000008)[0].pos)) &&
       ((*patStack0000000000000010)[0].val.len == (*patStack0000000000000008)[0].val.len)) &&
      (((((*patStack0000000000000010)[0].line == (*patStack0000000000000008)[0].line &&
         ((*patStack0000000000000010)[1].typ == (*patStack0000000000000008)[1].typ)) &&
        (((*patStack0000000000000010)[1].pos == (*patStack0000000000000008)[1].pos &&
         (((*patStack0000000000000008)[1].val.len == (*patStack0000000000000010)[1].val.len &&
          ((*patStack0000000000000010)[1].line == (*patStack0000000000000008)[1].line)))))) &&
       ((*patStack0000000000000010)[2].typ == (*patStack0000000000000008)[2].typ)))) &&
     (((((*patStack0000000000000010)[2].pos == (*patStack0000000000000008)[2].pos &&
        ((*patStack0000000000000010)[2].val.len == (*patStack0000000000000008)[2].val.len)) &&
       ((*patStack0000000000000010)[2].line == (*patStack0000000000000008)[2].line)) &&
      ((runtime_memequal(), extraout_AL != '\0' && (runtime_memequal(), extraout_AL_00 != '\0'))))))
  {
    runtime_memequal();
  }
  return;
}



void type__eq_text_template_parse_BoolNode
               (text_template_parse_BoolNode *p,text_template_parse_BoolNode *q,bool r)

{
  if (((q->NodeType == p->NodeType) && (q->Pos == p->Pos)) && (q->tr == p->tr)) {
    return;
  }
  return;
}



void type__eq_text_template_parse_CommentNode
               (text_template_parse_CommentNode *p,text_template_parse_CommentNode *q,bool r)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((q->NodeType == p->NodeType) && (q->Pos == p->Pos)) && (q->tr == p->tr)) &&
     ((q->Text).len == (p->Text).len)) {
    runtime_memequal();
  }
  return;
}



void type__eq_text_template_parse_NumberNode
               (text_template_parse_NumberNode *p,text_template_parse_NumberNode *q,bool r)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((((q->NodeType == p->NodeType) && (q->Pos == p->Pos)) && (q->tr == p->tr)) &&
      (((q->IsInt == p->IsInt && (q->IsUint == p->IsUint)) &&
       ((q->IsFloat == p->IsFloat && ((q->IsComplex == p->IsComplex && (q->Int64 == p->Int64))))))))
     && ((q->Uint64 == p->Uint64 &&
         (((((double)p->Float64 == (double)q->Float64 &&
            (!NAN((double)p->Float64) && !NAN((double)q->Float64))) &&
           (*(double *)p->Complex128 == *(double *)q->Complex128 &&
            *(double *)(p->Complex128 + 8) == *(double *)(q->Complex128 + 8))) &&
          ((q->Text).len == (p->Text).len)))))) {
    runtime_memequal();
  }
  return;
}



void type__eq_text_template_parse_StringNode
               (text_template_parse_StringNode *p,text_template_parse_StringNode *q,bool r)

{
  char extraout_AL;
  int unaff_R14;
  text_template_parse_StringNode *ptStack0000000000000008;
  text_template_parse_StringNode *ptStack0000000000000010;
  
  ptStack0000000000000008 = p;
  ptStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((ptStack0000000000000010->NodeType == ptStack0000000000000008->NodeType) &&
       (ptStack0000000000000010->Pos == ptStack0000000000000008->Pos)) &&
      (ptStack0000000000000010->tr == ptStack0000000000000008->tr)) &&
     ((((ptStack0000000000000010->Quoted).len == (ptStack0000000000000008->Quoted).len &&
       ((ptStack0000000000000010->Text).len == (ptStack0000000000000008->Text).len)) &&
      (runtime_memequal(), extraout_AL != '\0')))) {
    runtime_memequal();
  }
  return;
}



void type__eq_text_template_parse_TemplateNode
               (text_template_parse_TemplateNode *p,text_template_parse_TemplateNode *q,bool r)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((q->NodeType == p->NodeType) && (q->Pos == p->Pos)) && (q->tr == p->tr)) &&
     (((q->Line == p->Line && ((q->Name).len == (p->Name).len)) && (q->Pipe == p->Pipe)))) {
    runtime_memequal();
  }
  return;
}



void type__eq_text_template_parse_IdentifierNode
               (text_template_parse_IdentifierNode *p,text_template_parse_IdentifierNode *q,bool r)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((q->NodeType == p->NodeType) && (q->Pos == p->Pos)) && (q->tr == p->tr)) &&
     ((q->Ident).len == (p->Ident).len)) {
    runtime_memequal();
  }
  return;
}



void text_template_parse___Pos__Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void text_template_parse___item__String(string ~r0)

{
  string **ppsVar1;
  string *in_RAX;
  int unaff_R14;
  text_template_parse_item in_stack_ffffffffffffffa8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (string *)~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffa8;
  }
  if (in_RAX != (string *)0x0) {
    text_template_parse_item_String(in_stack_ffffffffffffffa8,*in_RAX);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void text_template_parse___NodeType__Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void text_template_parse_ListNode_Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___ListNode__Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse_ListNode_Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___ListNode__Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse_TextNode_Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___TextNode__Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse_TextNode_Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___TextNode__Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse_CommentNode_Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___CommentNode__Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse_CommentNode_Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___CommentNode__Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse_VariableNode_Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___VariableNode__Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse_VariableNode_Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___VariableNode__Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse_CommandNode_Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___CommandNode__Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse_CommandNode_Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___CommandNode__Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse_PipeNode_Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___PipeNode__Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse_PipeNode_Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___PipeNode__Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse_ActionNode_Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___ActionNode__Position(text_template_parse_Pos ~r0)

