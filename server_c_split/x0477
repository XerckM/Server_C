void crypto_internal_edwards25519_field___Element__SetBytes
               (crypto_internal_edwards25519_field_Element *v,__uint8 x,
               crypto_internal_edwards25519_field_Element *~r0,error ~r1)

{
  undefined8 *extraout_RAX;
  int in_RCX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RCX != 0x20) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0);
    extraout_RAX[1] = 0x2e;
    *extraout_RAX = &DAT_008c7997;
    return;
  }
  v->l0 = ~r0->l0 & 0x7ffffffffffff;
  v->l1 = *(uint *)((int)&~r0->l0 + 6) >> 3 & 0x7ffffffffffff;
  v->l2 = *(uint *)((int)&~r0->l1 + 4) >> 6 & 0x7ffffffffffff;
  v->l3 = *(uint *)((int)&~r0->l2 + 3) >> 1 & 0x7ffffffffffff;
  v->l4 = ~r0->l3 >> 0xc & 0x7ffffffffffff;
  return;
}



void crypto_internal_edwards25519_field___Element__bytes
               (crypto_internal_edwards25519_field_Element *v,uint8 (*out) [32],__uint8 ~r0)

{
  uint uVar1;
  int i;
  int i_1;
  uint64 l;
  int iVar2;
  int bitsOffset;
  int off;
  uint8 bb;
  int unaff_R14;
  uint local_60;
  undefined local_58 [12];
  undefined4 uStack_4c;
  undefined4 uStack_48;
  undefined4 uStack_44;
  undefined4 local_40;
  undefined4 uStack_3c;
  undefined4 uStack_38;
  undefined4 uStack_34;
  uint64 local_30 [3];
  undefined local_18 [8];
  undefined8 uStack_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_58._0_8_ = v->l0;
  local_58._8_4_ = *(undefined4 *)&v->l1;
  uStack_4c = *(undefined4 *)((int)&v->l1 + 4);
  uStack_48 = *(undefined4 *)&v->l2;
  uStack_44 = *(undefined4 *)((int)&v->l2 + 4);
  local_40 = *(undefined4 *)&v->l3;
  uStack_3c = *(undefined4 *)((int)&v->l3 + 4);
  uStack_38 = *(undefined4 *)&v->l4;
  uStack_34 = *(undefined4 *)((int)&v->l4 + 4);
  crypto_internal_edwards25519_field___Element__reduce
            ((crypto_internal_edwards25519_field_Element *)local_58,
             (crypto_internal_edwards25519_field_Element *)out);
  local_30[0] = local_58._0_8_;
  local_30[1] = CONCAT44(uStack_4c,local_58._8_4_);
  local_30[2] = CONCAT44(uStack_44,uStack_48);
  local_18._4_4_ = uStack_3c;
  local_18._0_4_ = local_40;
  uStack_10._4_4_ = uStack_34;
  uStack_10._0_4_ = uStack_38;
  i = 0;
  do {
    if (4 < i) {
      return;
    }
    iVar2 = i * 0x33;
    local_60 = local_30[i] << ((byte)(iVar2 % 8) & 0x3f) & -(uint)((uint)(iVar2 % 8) < 0x40);
    for (i_1 = 0; i_1 < 8; i_1 = i_1 + 1) {
      uVar1 = ((int)(((uint)(iVar2 >> 0x3f) >> 0x3d) + iVar2) >> 3) + i_1;
      if (0x1f < (int)uVar1) break;
      if (0x1f < uVar1) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      (*out)[uVar1] = (*out)[uVar1] | *(byte *)((int)&local_60 + i_1);
    }
    i = i + 1;
  } while( true );
}



void crypto_internal_edwards25519_field___Element__Equal
               (crypto_internal_edwards25519_field_Element *v,
               crypto_internal_edwards25519_field_Element *u,int ~r0)

{
  __uint8 ~r0_00;
  __uint8 ~r0_01;
  int extraout_RBX;
  int extraout_RBX_00;
  int iVar1;
  int i;
  uint8 v_1;
  int unaff_R14;
  undefined in_stack_ffffffffffffff90 [16];
  int in_stack_ffffffffffffffa0;
  int iVar2;
  uint8 local_58 [32];
  uint8 local_38 [40];
  crypto_internal_edwards25519_field_Element *local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.cap = in_stack_ffffffffffffffa0;
  ~r0_00.array = (uint8 *)in_stack_ffffffffffffff90._0_8_;
  ~r0_00.len = in_stack_ffffffffffffff90._8_8_;
  local_10 = v;
  crypto_internal_edwards25519_field___Element__bytes(u,(uint8 (*) [32])local_38,~r0_00);
  ~r0_01.cap = extraout_RBX;
  ~r0_01.array = (uint8 *)in_stack_ffffffffffffff90._0_8_;
  ~r0_01.len = in_stack_ffffffffffffff90._8_8_;
  iVar2 = extraout_RBX;
  crypto_internal_edwards25519_field___Element__bytes(local_10,&local_58,~r0_01);
  if (extraout_RBX_00 == iVar2) {
    for (iVar1 = 0; iVar1 < iVar2; iVar1 = iVar1 + 1) {
    }
  }
  return;
}



// WARNING: Unknown calling convention

void crypto_internal_edwards25519_field___Element__Swap
               (crypto_internal_edwards25519_field_Element *v,
               crypto_internal_edwards25519_field_Element *u,int cond)

{
  uint uVar1;
  uint64 m;
  uint uVar2;
  uint64 t;
  
  uVar1 = -cond;
  uVar2 = (u->l0 ^ v->l0) & uVar1;
  v->l0 = v->l0 ^ uVar2;
  u->l0 = u->l0 ^ uVar2;
  uVar2 = (u->l1 ^ v->l1) & uVar1;
  v->l1 = v->l1 ^ uVar2;
  u->l1 = u->l1 ^ uVar2;
  uVar2 = (u->l2 ^ v->l2) & uVar1;
  v->l2 = v->l2 ^ uVar2;
  u->l2 = u->l2 ^ uVar2;
  uVar2 = (u->l3 ^ v->l3) & uVar1;
  v->l3 = v->l3 ^ uVar2;
  u->l3 = u->l3 ^ uVar2;
  uVar1 = (u->l4 ^ v->l4) & uVar1;
  v->l4 = v->l4 ^ uVar1;
  u->l4 = u->l4 ^ uVar1;
  return;
}



void crypto_internal_edwards25519_field___Element__Absolute
               (crypto_internal_edwards25519_field_Element *v,
               crypto_internal_edwards25519_field_Element *u,
               crypto_internal_edwards25519_field_Element *~r0)

{
  uint *extraout_RAX;
  byte *extraout_RAX_00;
  uint uVar1;
  uint64 m;
  uint uVar2;
  int extraout_RBX;
  crypto_internal_edwards25519_field_Element *in_RDI;
  crypto_internal_edwards25519_field_Element *extraout_RDI;
  int unaff_R14;
  undefined in_XMM15 [16];
  crypto_internal_edwards25519_field_Element *pcStack0000000000000008;
  crypto_internal_edwards25519_field_Element *pcStack0000000000000010;
  __uint8 in_stack_ffffffffffffff90;
  uint8 local_58 [32];
  crypto_internal_edwards25519_field_Element local_38;
  uint *local_10;
  
  pcStack0000000000000008 = v;
  pcStack0000000000000010 = u;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  local_38.l0 = in_XMM15._0_8_;
  local_38.l2 = in_XMM15._8_8_;
  local_38.l1 = local_38.l0;
  crypto_internal_edwards25519_field___Element__Subtract
            (&local_38,crypto_internal_edwards25519_field_feZero,pcStack0000000000000010,in_RDI);
  local_10 = extraout_RAX;
  crypto_internal_edwards25519_field___Element__bytes
            (pcStack0000000000000010,&local_58,in_stack_ffffffffffffff90);
  if (extraout_RBX != 0) {
    uVar1 = -(uint)(*extraout_RAX_00 & 1);
    uVar2 = ~uVar1;
    pcStack0000000000000008->l0 = pcStack0000000000000010->l0 & uVar2 | *local_10 & uVar1;
    pcStack0000000000000008->l1 = pcStack0000000000000010->l1 & uVar2 | local_10[1] & uVar1;
    pcStack0000000000000008->l2 = pcStack0000000000000010->l2 & uVar2 | local_10[2] & uVar1;
    pcStack0000000000000008->l3 = pcStack0000000000000010->l3 & uVar2 | local_10[3] & uVar1;
    pcStack0000000000000008->l4 = uVar2 & pcStack0000000000000010->l4 | uVar1 & local_10[4];
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void crypto_internal_edwards25519_field___Element__Mult32
               (crypto_internal_edwards25519_field_Element *v,
               crypto_internal_edwards25519_field_Element *x,uint32 y,
               crypto_internal_edwards25519_field_Element *~r0)

{
  undefined auVar1 [16];
  undefined auVar2 [16];
  undefined auVar3 [16];
  undefined auVar4 [16];
  undefined auVar5 [16];
  undefined auVar6 [16];
  undefined auVar7 [16];
  undefined auVar8 [16];
  undefined auVar9 [16];
  undefined auVar10 [16];
  uint uVar11;
  uint64 ml_1;
  uint uVar12;
  uint64 ml_2;
  uint uVar13;
  uint64 ml_3;
  uint uVar14;
  uint uVar15;
  uint64 ml;
  uint64 x0hi;
  uint64 x4hi;
  uint64 mh;
  uint64 x1hi;
  uint64 x0lo;
  uint64 x3hi;
  uint64 x1lo;
  uint64 x2lo;
  uint64 x4lo;
  uint64 x2hi;
  uint64 x3lo;
  uint64 ml_4;
  
  uVar15 = CONCAT44(0,y);
  auVar1._8_8_ = 0;
  auVar1._0_8_ = x->l1;
  auVar6._8_8_ = 0;
  auVar6._0_8_ = uVar15;
  uVar11 = SUB168(auVar1 * auVar6,0);
  auVar2._8_8_ = 0;
  auVar2._0_8_ = x->l2;
  auVar7._8_8_ = 0;
  auVar7._0_8_ = uVar15;
  uVar12 = SUB168(auVar2 * auVar7,0);
  auVar3._8_8_ = 0;
  auVar3._0_8_ = x->l3;
  auVar8._8_8_ = 0;
  auVar8._0_8_ = uVar15;
  uVar13 = SUB168(auVar3 * auVar8,0);
  auVar4._8_8_ = 0;
  auVar4._0_8_ = x->l4;
  auVar9._8_8_ = 0;
  auVar9._0_8_ = uVar15;
  uVar14 = SUB168(auVar4 * auVar9,0);
  auVar5._8_8_ = 0;
  auVar5._0_8_ = uVar15;
  auVar10._8_8_ = 0;
  auVar10._0_8_ = x->l0;
  uVar15 = SUB168(auVar5 * auVar10,0);
  mh = SUB168(auVar5 * auVar10,8) << 0xd;
  v->l0 = (SUB168(auVar4 * auVar9,8) << 0xd | uVar14 >> 0x33) * 0x13 + (uVar15 & 0x7ffffffffffff);
  v->l1 = (uVar11 & 0x7ffffffffffff) + (uVar15 >> 0x33 | mh);
  v->l2 = (SUB168(auVar1 * auVar6,8) << 0xd | uVar11 >> 0x33) + (uVar12 & 0x7ffffffffffff);
  v->l3 = (uVar13 & 0x7ffffffffffff) + (uVar12 >> 0x33 | SUB168(auVar2 * auVar7,8) << 0xd);
  v->l4 = (uVar14 & 0x7ffffffffffff) + (SUB168(auVar3 * auVar8,8) << 0xd | uVar13 >> 0x33);
  return;
}



void crypto_internal_edwards25519_field___Element__Pow22523
               (crypto_internal_edwards25519_field_Element *v,
               crypto_internal_edwards25519_field_Element *x,
               crypto_internal_edwards25519_field_Element *~r0)

{
  int iVar1;
  int i;
  int i_1;
  int i_2;
  int i_3;
  int i_4;
  int i_5;
  int i_6;
  int unaff_R14;
  undefined auStack_60 [72];
  crypto_internal_edwards25519_field_Element *local_18;
  crypto_internal_edwards25519_field_Element *local_10;
  
  while (auStack_60 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_18 = x;
  local_10 = v;
  crypto_internal_edwards25519_field_feSquare();
  crypto_internal_edwards25519_field_feSquare();
  crypto_internal_edwards25519_field_feSquare();
  crypto_internal_edwards25519_field_feMul();
  crypto_internal_edwards25519_field_feMul();
  crypto_internal_edwards25519_field_feSquare();
  crypto_internal_edwards25519_field_feMul();
  crypto_internal_edwards25519_field_feSquare();
  for (iVar1 = 1; iVar1 < 5; iVar1 = iVar1 + 1) {
    crypto_internal_edwards25519_field_feSquare();
  }
  crypto_internal_edwards25519_field_feMul();
  crypto_internal_edwards25519_field_feSquare();
  for (iVar1 = 1; iVar1 < 10; iVar1 = iVar1 + 1) {
    crypto_internal_edwards25519_field_feSquare();
  }
  crypto_internal_edwards25519_field_feMul();
  crypto_internal_edwards25519_field_feSquare();
  for (iVar1 = 1; iVar1 < 0x14; iVar1 = iVar1 + 1) {
    crypto_internal_edwards25519_field_feSquare();
  }
  crypto_internal_edwards25519_field_feMul();
  crypto_internal_edwards25519_field_feSquare();
  for (iVar1 = 1; iVar1 < 10; iVar1 = iVar1 + 1) {
    crypto_internal_edwards25519_field_feSquare();
  }
  crypto_internal_edwards25519_field_feMul();
  crypto_internal_edwards25519_field_feSquare();
  for (iVar1 = 1; iVar1 < 0x32; iVar1 = iVar1 + 1) {
    crypto_internal_edwards25519_field_feSquare();
  }
  crypto_internal_edwards25519_field_feMul();
  crypto_internal_edwards25519_field_feSquare();
  for (iVar1 = 1; iVar1 < 100; iVar1 = iVar1 + 1) {
    crypto_internal_edwards25519_field_feSquare();
  }
  crypto_internal_edwards25519_field_feMul();
  crypto_internal_edwards25519_field_feSquare();
  for (iVar1 = 1; iVar1 < 0x32; iVar1 = iVar1 + 1) {
    crypto_internal_edwards25519_field_feSquare();
  }
  crypto_internal_edwards25519_field_feMul();
  crypto_internal_edwards25519_field_feSquare();
  crypto_internal_edwards25519_field_feSquare();
  crypto_internal_edwards25519_field_feMul();
  return;
}



void crypto_internal_edwards25519_field___Element__SqrtRatio
               (crypto_internal_edwards25519_field_Element *r,
               crypto_internal_edwards25519_field_Element *u,
               crypto_internal_edwards25519_field_Element *v,
               crypto_internal_edwards25519_field_Element *R,int wasSquare)

{
  undefined auVar1 [16];
  undefined auVar2 [16];
  crypto_internal_edwards25519_field_Element *extraout_RAX;
  crypto_internal_edwards25519_field_Element *uNeg;
  int correctSignSqrt;
  uint extraout_RAX_00;
  int flippedSignSqrt;
  uint extraout_RAX_01;
  int flippedSignSqrtI;
  uint uVar3;
  uint64 m;
  uint uVar4;
  crypto_internal_edwards25519_field_Element *~r0;
  int ~r0_00;
  int ~r0_01;
  int ~r0_02;
  crypto_internal_edwards25519_field_Element *~r0_03;
  int unaff_R14;
  undefined4 uVar5;
  undefined4 uVar6;
  undefined4 uVar7;
  undefined4 uVar8;
  uint local_158;
  uint uStack_148;
  undefined local_140 [24];
  undefined local_128 [16];
  undefined local_118 [40];
  undefined local_f0 [32];
  crypto_internal_edwards25519_field_Element *pcStack_d0;
  undefined local_c8 [40];
  undefined8 local_a0;
  undefined8 uStack_98;
  undefined8 uStack_90;
  undefined local_88 [16];
  crypto_internal_edwards25519_field_Element local_50;
  crypto_internal_edwards25519_field_Element *local_28;
  crypto_internal_edwards25519_field_Element *local_20;
  crypto_internal_edwards25519_field_Element *local_18;
  crypto_internal_edwards25519_field_Element *local_10;
  
  while (local_128 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_20 = u;
  local_18 = v;
  local_10 = r;
  crypto_internal_edwards25519_field_feSquare();
  local_a0 = 0;
  uStack_98 = 0;
  uStack_90 = 0;
  local_88 = ZEXT816(0);
  crypto_internal_edwards25519_field_feMul();
  crypto_internal_edwards25519_field_feMul();
  local_c8._0_8_ = 0;
  local_c8._8_8_ = 0;
  local_c8._16_8_ = 0;
  local_c8._24_16_ = ZEXT816(0);
  crypto_internal_edwards25519_field_feSquare();
  crypto_internal_edwards25519_field_feMul();
  local_f0._0_8_ = 0;
  local_f0._8_8_ = 0;
  local_f0._16_8_ = 0;
  unique0x10000291 = ZEXT816(0);
  crypto_internal_edwards25519_field___Element__Pow22523
            (&local_50,(crypto_internal_edwards25519_field_Element *)local_c8,~r0);
  crypto_internal_edwards25519_field_feMul();
  local_118._0_8_ = 0;
  local_118._8_8_ = 0;
  local_118._16_8_ = 0;
  local_118._24_16_ = ZEXT816(0);
  crypto_internal_edwards25519_field_feSquare();
  crypto_internal_edwards25519_field_feMul();
  local_140._0_8_ = 0;
  local_140._8_8_ = 0;
  local_140._16_8_ = 0;
  local_128 = ZEXT816(0);
  crypto_internal_edwards25519_field___Element__Subtract
            ((crypto_internal_edwards25519_field_Element *)local_140,
             crypto_internal_edwards25519_field_feZero,local_20,~r0_03);
  local_28 = extraout_RAX;
  crypto_internal_edwards25519_field___Element__Equal
            ((crypto_internal_edwards25519_field_Element *)local_118,local_20,~r0_00);
  crypto_internal_edwards25519_field___Element__Equal
            ((crypto_internal_edwards25519_field_Element *)local_118,local_28,~r0_01);
  crypto_internal_edwards25519_field_feMul();
  uVar5 = 0;
  uVar6 = 0;
  uVar7 = 0;
  uVar8 = 0;
  crypto_internal_edwards25519_field___Element__Equal
            ((crypto_internal_edwards25519_field_Element *)local_118,&local_50,~r0_02);
  auVar1._8_4_ = uVar7;
  auVar1._0_8_ = CONCAT44(uVar6,uVar5);
  auVar1._12_4_ = uVar8;
  local_158 = auVar1._8_8_;
  auVar2._8_4_ = uVar7;
  auVar2._0_8_ = CONCAT44(uVar6,uVar5);
  auVar2._12_4_ = uVar8;
  uVar3 = -(extraout_RAX_01 | extraout_RAX_00);
  uVar4 = ~uVar3;
  crypto_internal_edwards25519_field_feMul();
  local_f0._0_8_ = local_f0._0_8_ & uVar4 | CONCAT44(uVar6,uVar5) & uVar3;
  local_f0._8_8_ = local_f0._8_8_ & uVar4 | CONCAT44(uVar6,uVar5) & uVar3;
  local_f0._16_8_ = local_f0._16_8_ & uVar4 | local_158 & uVar3;
  uStack_148 = auVar2._8_8_;
  pcStack_d0 = (crypto_internal_edwards25519_field_Element *)
               ((uint)pcStack_d0 & uVar4 | uStack_148 & uVar3);
  local_f0._24_8_ = local_f0._24_8_ & uVar4 | CONCAT44(uVar6,uVar5) & uVar3;
  crypto_internal_edwards25519_field___Element__Absolute
            (local_10,(crypto_internal_edwards25519_field_Element *)local_f0,pcStack_d0);
  return;
}



void crypto_internal_edwards25519_field___Element__carryPropagateGeneric
               (crypto_internal_edwards25519_field_Element *v,
               crypto_internal_edwards25519_field_Element *~r0)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  
  uVar1 = v->l0;
  uVar2 = v->l1;
  uVar3 = v->l2;
  uVar4 = v->l3;
  v->l0 = (v->l4 >> 0x33) * 0x13 + (uVar1 & 0x7ffffffffffff);
  v->l1 = (uVar1 >> 0x33) + (v->l1 & 0x7ffffffffffff);
  v->l2 = (v->l2 & 0x7ffffffffffff) + (uVar2 >> 0x33);
  v->l3 = (v->l3 & 0x7ffffffffffff) + (uVar3 >> 0x33);
  v->l4 = (v->l4 & 0x7ffffffffffff) + (uVar4 >> 0x33);
  return;
}



// WARNING: Unknown calling convention

void crypto_internal_edwards25519_field_feMul(void)

{
  undefined auVar1 [16];
  undefined auVar2 [16];
  undefined auVar3 [16];
  undefined auVar4 [16];
  undefined auVar5 [16];
  undefined auVar6 [16];
  undefined auVar7 [16];
  undefined auVar8 [16];
  undefined auVar9 [16];
  undefined auVar10 [16];
  undefined auVar11 [16];
  undefined auVar12 [16];
  undefined auVar13 [16];
  undefined auVar14 [16];
  undefined auVar15 [16];
  undefined auVar16 [16];
  undefined auVar17 [16];
  undefined auVar18 [16];
  undefined auVar19 [16];
  undefined auVar20 [16];
  undefined auVar21 [16];
  undefined auVar22 [16];
  undefined auVar23 [16];
  undefined auVar24 [16];
  undefined auVar25 [16];
  undefined auVar26 [16];
  undefined auVar27 [16];
  undefined auVar28 [16];
  undefined auVar29 [16];
  undefined auVar30 [16];
  undefined auVar31 [16];
  undefined auVar32 [16];
  undefined auVar33 [16];
  undefined auVar34 [16];
  undefined auVar35 [16];
  undefined auVar36 [16];
  undefined auVar37 [16];
  undefined auVar38 [16];
  undefined auVar39 [16];
  undefined auVar40 [16];
  undefined auVar41 [16];
  undefined auVar42 [16];
  undefined auVar43 [16];
  undefined auVar44 [16];
  undefined auVar45 [16];
  undefined auVar46 [16];
  undefined auVar47 [16];
  undefined auVar48 [16];
  undefined auVar49 [16];
  undefined auVar50 [16];
  uint uVar51;
  uint uVar52;
  uint uVar53;
  uint uVar54;
  uint uVar55;
  uint uVar56;
  int *in_stack_00000008;
  uint *in_stack_00000010;
  uint *in_stack_00000018;
  
  auVar1._8_8_ = 0;
  auVar1._0_8_ = *in_stack_00000010;
  auVar26._8_8_ = 0;
  auVar26._0_8_ = *in_stack_00000018;
  auVar2._8_8_ = 0;
  auVar2._0_8_ = in_stack_00000010[1] * 0x13;
  auVar27._8_8_ = 0;
  auVar27._0_8_ = in_stack_00000018[4];
  auVar3._8_8_ = 0;
  auVar3._0_8_ = in_stack_00000010[2] * 0x13;
  auVar28._8_8_ = 0;
  auVar28._0_8_ = in_stack_00000018[3];
  auVar4._8_8_ = 0;
  auVar4._0_8_ = in_stack_00000010[3] * 0x13;
  auVar29._8_8_ = 0;
  auVar29._0_8_ = in_stack_00000018[2];
  auVar5._8_8_ = 0;
  auVar5._0_8_ = in_stack_00000010[4] * 0x13;
  auVar30._8_8_ = 0;
  auVar30._0_8_ = in_stack_00000018[1];
  auVar1 = auVar2 * auVar27 + auVar1 * auVar26 + auVar3 * auVar28 + auVar4 * auVar29 +
           auVar5 * auVar30;
  uVar51 = auVar1._0_8_;
  auVar6._8_8_ = 0;
  auVar6._0_8_ = *in_stack_00000010;
  auVar31._8_8_ = 0;
  auVar31._0_8_ = in_stack_00000018[1];
  auVar7._8_8_ = 0;
  auVar7._0_8_ = in_stack_00000010[1];
  auVar32._8_8_ = 0;
  auVar32._0_8_ = *in_stack_00000018;
  auVar8._8_8_ = 0;
  auVar8._0_8_ = in_stack_00000010[2] * 0x13;
  auVar33._8_8_ = 0;
  auVar33._0_8_ = in_stack_00000018[4];
  auVar9._8_8_ = 0;
  auVar9._0_8_ = in_stack_00000010[3] * 0x13;
  auVar34._8_8_ = 0;
  auVar34._0_8_ = in_stack_00000018[3];
  auVar10._8_8_ = 0;
  auVar10._0_8_ = in_stack_00000010[4] * 0x13;
  auVar35._8_8_ = 0;
  auVar35._0_8_ = in_stack_00000018[2];
  auVar2 = auVar7 * auVar32 + auVar6 * auVar31 + auVar8 * auVar33 + auVar9 * auVar34 +
           auVar10 * auVar35;
  uVar53 = auVar2._0_8_;
  auVar11._8_8_ = 0;
  auVar11._0_8_ = *in_stack_00000010;
  auVar36._8_8_ = 0;
  auVar36._0_8_ = in_stack_00000018[2];
  auVar12._8_8_ = 0;
  auVar12._0_8_ = in_stack_00000010[1];
  auVar37._8_8_ = 0;
  auVar37._0_8_ = in_stack_00000018[1];
  auVar13._8_8_ = 0;
  auVar13._0_8_ = in_stack_00000010[2];
  auVar38._8_8_ = 0;
  auVar38._0_8_ = *in_stack_00000018;
  auVar14._8_8_ = 0;
  auVar14._0_8_ = in_stack_00000010[3] * 0x13;
  auVar39._8_8_ = 0;
  auVar39._0_8_ = in_stack_00000018[4];
  auVar15._8_8_ = 0;
  auVar15._0_8_ = in_stack_00000010[4] * 0x13;
  auVar40._8_8_ = 0;
  auVar40._0_8_ = in_stack_00000018[3];
  auVar3 = auVar12 * auVar37 + auVar11 * auVar36 + auVar13 * auVar38 + auVar14 * auVar39 +
           auVar15 * auVar40;
  uVar54 = auVar3._0_8_;
  auVar16._8_8_ = 0;
  auVar16._0_8_ = *in_stack_00000010;
  auVar41._8_8_ = 0;
  auVar41._0_8_ = in_stack_00000018[3];
  auVar17._8_8_ = 0;
  auVar17._0_8_ = in_stack_00000010[1];
  auVar42._8_8_ = 0;
  auVar42._0_8_ = in_stack_00000018[2];
  auVar18._8_8_ = 0;
  auVar18._0_8_ = in_stack_00000010[2];
  auVar43._8_8_ = 0;
  auVar43._0_8_ = in_stack_00000018[1];
  auVar19._8_8_ = 0;
  auVar19._0_8_ = in_stack_00000010[3];
  auVar44._8_8_ = 0;
  auVar44._0_8_ = *in_stack_00000018;
  auVar20._8_8_ = 0;
  auVar20._0_8_ = in_stack_00000010[4] * 0x13;
  auVar45._8_8_ = 0;
  auVar45._0_8_ = in_stack_00000018[4];
  auVar4 = auVar17 * auVar42 + auVar16 * auVar41 + auVar18 * auVar43 + auVar19 * auVar44 +
           auVar20 * auVar45;
  uVar55 = auVar4._0_8_;
  auVar21._8_8_ = 0;
  auVar21._0_8_ = *in_stack_00000010;
  auVar46._8_8_ = 0;
  auVar46._0_8_ = in_stack_00000018[4];
  auVar22._8_8_ = 0;
  auVar22._0_8_ = in_stack_00000010[1];
  auVar47._8_8_ = 0;
  auVar47._0_8_ = in_stack_00000018[3];
  auVar23._8_8_ = 0;
  auVar23._0_8_ = in_stack_00000010[2];
  auVar48._8_8_ = 0;
  auVar48._0_8_ = in_stack_00000018[2];
  auVar24._8_8_ = 0;
  auVar24._0_8_ = in_stack_00000010[3];
  auVar49._8_8_ = 0;
  auVar49._0_8_ = in_stack_00000018[1];
  auVar25._8_8_ = 0;
  auVar25._0_8_ = in_stack_00000010[4];
  auVar50._8_8_ = 0;
  auVar50._0_8_ = *in_stack_00000018;
  auVar5 = auVar22 * auVar47 + auVar21 * auVar46 + auVar23 * auVar48 + auVar24 * auVar49 +
           auVar25 * auVar50;
  uVar56 = auVar5._0_8_;
  uVar52 = (uVar51 & 0x7ffffffffffff) + (auVar5._8_8_ << 0xd | uVar56 >> 0x33) * 0x13;
  uVar51 = (uVar53 & 0x7ffffffffffff) + (auVar1._8_8_ << 0xd | uVar51 >> 0x33);
  uVar53 = (uVar54 & 0x7ffffffffffff) + (auVar2._8_8_ << 0xd | uVar53 >> 0x33);
  uVar54 = (uVar55 & 0x7ffffffffffff) + (auVar3._8_8_ << 0xd | uVar54 >> 0x33);
  uVar55 = (uVar56 & 0x7ffffffffffff) + (auVar4._8_8_ << 0xd | uVar55 >> 0x33);
  *in_stack_00000008 = (uVar52 & 0x7ffffffffffff) + (uVar55 >> 0x33) * 0x13;
  in_stack_00000008[1] = (uVar51 & 0x7ffffffffffff) + (uVar52 >> 0x33);
  in_stack_00000008[2] = (uVar53 & 0x7ffffffffffff) + (uVar51 >> 0x33);
  in_stack_00000008[3] = (uVar54 & 0x7ffffffffffff) + (uVar53 >> 0x33);
  in_stack_00000008[4] = (uVar55 & 0x7ffffffffffff) + (uVar54 >> 0x33);
  return;
}



// WARNING: Unknown calling convention

void crypto_internal_edwards25519_field_feSquare(void)

{
  undefined auVar1 [16];
  undefined auVar2 [16];
  undefined auVar3 [16];
  undefined auVar4 [16];
  undefined auVar5 [16];
  undefined auVar6 [16];
  undefined auVar7 [16];
  undefined auVar8 [16];
  undefined auVar9 [16];
  undefined auVar10 [16];
  undefined auVar11 [16];
  undefined auVar12 [16];
  undefined auVar13 [16];
  undefined auVar14 [16];
  undefined auVar15 [16];
  undefined auVar16 [16];
  undefined auVar17 [16];
  undefined auVar18 [16];
  undefined auVar19 [16];
  undefined auVar20 [16];
  undefined auVar21 [16];
  undefined auVar22 [16];
  undefined auVar23 [16];
  undefined auVar24 [16];
  undefined auVar25 [16];
  undefined auVar26 [16];
  undefined auVar27 [16];
  undefined auVar28 [16];
  undefined auVar29 [16];
  undefined auVar30 [16];
  uint uVar31;
  uint uVar32;
  uint uVar33;
  uint uVar34;
  uint uVar35;
  uint uVar36;
  int *in_stack_00000008;
  uint *in_stack_00000010;
  
  auVar1._8_8_ = 0;
  auVar1._0_8_ = *in_stack_00000010;
  auVar16._8_8_ = 0;
  auVar16._0_8_ = *in_stack_00000010;
  auVar2._8_8_ = 0;
  auVar2._0_8_ = in_stack_00000010[1] * 0x26;
  auVar17._8_8_ = 0;
  auVar17._0_8_ = in_stack_00000010[4];
  auVar3._8_8_ = 0;
  auVar3._0_8_ = in_stack_00000010[2] * 0x26;
  auVar18._8_8_ = 0;
  auVar18._0_8_ = in_stack_00000010[3];
  auVar1 = auVar2 * auVar17 + auVar1 * auVar16 + auVar3 * auVar18;
  uVar31 = auVar1._0_8_;
  auVar4._8_8_ = 0;
  auVar4._0_8_ = *in_stack_00000010 << 1;
  auVar19._8_8_ = 0;
  auVar19._0_8_ = in_stack_00000010[1];
  auVar5._8_8_ = 0;
  auVar5._0_8_ = in_stack_00000010[2] * 0x26;
  auVar20._8_8_ = 0;
  auVar20._0_8_ = in_stack_00000010[4];
  auVar6._8_8_ = 0;
  auVar6._0_8_ = in_stack_00000010[3] * 0x13;
  auVar21._8_8_ = 0;
  auVar21._0_8_ = in_stack_00000010[3];
  auVar2 = auVar5 * auVar20 + auVar4 * auVar19 + auVar6 * auVar21;
  uVar33 = auVar2._0_8_;
  auVar7._8_8_ = 0;
  auVar7._0_8_ = *in_stack_00000010 << 1;
  auVar22._8_8_ = 0;
  auVar22._0_8_ = in_stack_00000010[2];
  auVar8._8_8_ = 0;
  auVar8._0_8_ = in_stack_00000010[1];
  auVar23._8_8_ = 0;
  auVar23._0_8_ = in_stack_00000010[1];
  auVar9._8_8_ = 0;
  auVar9._0_8_ = in_stack_00000010[3] * 0x26;
  auVar24._8_8_ = 0;
  auVar24._0_8_ = in_stack_00000010[4];
  auVar3 = auVar8 * auVar23 + auVar7 * auVar22 + auVar9 * auVar24;
  uVar34 = auVar3._0_8_;
  auVar10._8_8_ = 0;
  auVar10._0_8_ = *in_stack_00000010 << 1;
  auVar25._8_8_ = 0;
  auVar25._0_8_ = in_stack_00000010[3];
  auVar11._8_8_ = 0;
  auVar11._0_8_ = in_stack_00000010[1] * 2;
  auVar26._8_8_ = 0;
  auVar26._0_8_ = in_stack_00000010[2];
  auVar12._8_8_ = 0;
  auVar12._0_8_ = in_stack_00000010[4] * 0x13;
  auVar27._8_8_ = 0;
  auVar27._0_8_ = in_stack_00000010[4];
  auVar4 = auVar11 * auVar26 + auVar10 * auVar25 + auVar12 * auVar27;
  uVar35 = auVar4._0_8_;
  auVar13._8_8_ = 0;
  auVar13._0_8_ = *in_stack_00000010 << 1;
  auVar28._8_8_ = 0;
  auVar28._0_8_ = in_stack_00000010[4];
  auVar14._8_8_ = 0;
  auVar14._0_8_ = in_stack_00000010[1] * 2;
  auVar29._8_8_ = 0;
  auVar29._0_8_ = in_stack_00000010[3];
  auVar15._8_8_ = 0;
  auVar15._0_8_ = in_stack_00000010[2];
  auVar30._8_8_ = 0;
  auVar30._0_8_ = in_stack_00000010[2];
  auVar5 = auVar14 * auVar29 + auVar13 * auVar28 + auVar15 * auVar30;
  uVar36 = auVar5._0_8_;
  uVar32 = (uVar31 & 0x7ffffffffffff) + (auVar5._8_8_ << 0xd | uVar36 >> 0x33) * 0x13;
  uVar31 = (uVar33 & 0x7ffffffffffff) + (auVar1._8_8_ << 0xd | uVar31 >> 0x33);
  uVar33 = (uVar34 & 0x7ffffffffffff) + (auVar2._8_8_ << 0xd | uVar33 >> 0x33);
  uVar34 = (uVar35 & 0x7ffffffffffff) + (auVar3._8_8_ << 0xd | uVar34 >> 0x33);
  uVar35 = (uVar36 & 0x7ffffffffffff) + (auVar4._8_8_ << 0xd | uVar35 >> 0x33);
  *in_stack_00000008 = (uVar32 & 0x7ffffffffffff) + (uVar35 >> 0x33) * 0x13;
  in_stack_00000008[1] = (uVar31 & 0x7ffffffffffff) + (uVar32 >> 0x33);
  in_stack_00000008[2] = (uVar33 & 0x7ffffffffffff) + (uVar31 >> 0x33);
  in_stack_00000008[3] = (uVar34 & 0x7ffffffffffff) + (uVar33 >> 0x33);
  in_stack_00000008[4] = (uVar35 & 0x7ffffffffffff) + (uVar34 >> 0x33);
  return;
}



void crypto_ecdh___PublicKey__Bytes(crypto_ecdh_PublicKey *k,__uint8 ~r0)

{
  uint __n;
  uint8 *__src;
  void *oldPtr;
  uint8 (*_buf) [133];
  void *extraout_RAX;
  void *__dest;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0081b1e0,in_RBX);
  __n = (k->publicKey).len;
  __src = (k->publicKey).array;
  __dest = oldPtr;
  if (0x85 < __n) {
    runtime_growslice(oldPtr,__n,0x85,__n,(internal_abi_Type *)&DAT_00807920,
                      in_stack_ffffffffffffffb8);
    __dest = extraout_RAX;
  }
  runtime_memmove(__dest,__src,__n);
  return;
}



void crypto_ecdh___PublicKey__Equal(crypto_ecdh_PublicKey *k,crypto_PublicKey x,bool ~r0)

{
  runtime_itab *tab;
  int iVar1;
  char extraout_AL;
  int iVar2;
  int i;
  crypto_ecdh_PublicKey *in_RCX;
  crypto_ecdh_PublicKey *xx;
  char cVar3;
  undefined7 in_register_00000019;
  uint8 v;
  undefined8 in_RDI;
  undefined8 extraout_RDI;
  int unaff_R14;
  
  xx = in_RCX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  if ((undefined *)CONCAT71(in_register_00000019,~r0) != &DAT_008454e0) {
    return;
  }
  tab = (k->curve).tab;
  if ((xx->curve).tab == tab) {
    runtime_ifaceeq(tab,(k->curve).data,(xx->curve).data,SUB81(in_RDI,0));
    cVar3 = extraout_AL;
  }
  else {
    cVar3 = '\0';
  }
  if ((cVar3 != '\0') && (iVar1 = (k->publicKey).len, (xx->publicKey).len == iVar1)) {
    for (iVar2 = 0; iVar2 < iVar1; iVar2 = iVar2 + 1) {
    }
  }
  return;
}



void crypto_ecdh___PublicKey__Curve(crypto_ecdh_PublicKey *k,crypto_ecdh_Curve ~r0)

{
  return;
}



void crypto_ecdh___PrivateKey__ECDH
               (crypto_ecdh_PrivateKey *k,crypto_ecdh_PublicKey *remote,__uint8 ~r0,error ~r1)

{
  runtime_itab *tab;
  char extraout_AL;
  undefined8 *extraout_RAX;
  crypto_ecdh_PublicKey *extraout_RBX;
  crypto_ecdh_PublicKey *~r0_00;
  undefined8 in_RDI;
  undefined8 extraout_RDI;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  tab = (k->curve).tab;
  ~r0_00 = remote;
  if ((remote->curve).tab == tab) {
    runtime_ifaceeq(tab,(k->curve).data,(remote->curve).data,SUB81(in_RDI,0));
    ~r0_00 = extraout_RBX;
    if (extraout_AL != '\0') {
      (**(code **)&(k->curve).tab[1].hash)((k->curve).data,k,remote);
      return;
    }
  }
  runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_00);
  extraout_RAX[1] = 0x3b;
  *extraout_RAX = &DAT_008cafcb;
  return;
}



void crypto_ecdh___PrivateKey__Bytes(crypto_ecdh_PrivateKey *k,__uint8 ~r0)

{
  uint __n;
  uint8 *__src;
  void *oldPtr;
  uint8 (*_buf) [66];
  void *extraout_RAX;
  void *__dest;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0081b5a0,in_RBX);
  __n = (k->privateKey).len;
  __src = (k->privateKey).array;
  __dest = oldPtr;
  if (0x42 < __n) {
    runtime_growslice(oldPtr,__n,0x42,__n,(internal_abi_Type *)&DAT_00807920,
                      in_stack_ffffffffffffffb8);
    __dest = extraout_RAX;
  }
  runtime_memmove(__dest,__src,__n);
  return;
}



void crypto_ecdh___PrivateKey__Equal(crypto_ecdh_PrivateKey *k,crypto_PrivateKey x,bool ~r0)

{
  runtime_itab *tab;
