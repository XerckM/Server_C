        if (local_10->openDefer == false) {
                    // WARNING: Subroutine does not return
          runtime_throw(in_stack_fffffffffffffe38);
        }
        if (local_10->started != false) {
          return;
        }
      }
    }
    runtime___unwinder__next((runtime_unwinder *)local_198);
  } while( true );
}



void runtime_runOpenDeferFrame(runtime__defer *d,bool ~r0)

{
  uint uVar1;
  byte bVar2;
  runtime__panic *p_00;
  bool done;
  runtime__defer *extraout_RAX;
  runtime__defer *prVar3;
  uint32 r;
  uint32 r_1;
  uint32 r_2;
  func__ **closure;
  func__ **extraout_RCX;
  func__ **ppfVar4;
  runtime__panic *p;
  void *fd;
  byte *pbVar5;
  uint uVar6;
  uint8 b;
  dword dVar7;
  uint32 deferBitsOffset;
  uint extraout_RSI;
  uint uVar8;
  undefined8 extraout_RSI_00;
  uint8 b_1;
  uint32 nDefers;
  int i;
  uint8 deferBits;
  byte bVar10;
  byte extraout_R8B;
  int shift;
  uint32 closureOffset;
  uint8 b_2;
  int shift_1;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int shift_2;
  byte bVar11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffc8;
  uint uVar9;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  pbVar5 = (byte *)d->fd;
  r = 0;
  uVar9 = 0;
  do {
    bVar2 = *pbVar5;
    pbVar5 = pbVar5 + 1;
    if (bVar2 < 0x80) {
      if ((int)uVar9 < 0) {
                    // WARNING: Subroutine does not return
        runtime_panicshift();
      }
      dVar7 = ((dword)bVar2 << ((byte)uVar9 & 0x1f) & -(dword)(uVar9 < 0x20)) + r;
      r_1 = 0;
      uVar9 = 0;
      do {
        bVar2 = *pbVar5;
        pbVar5 = pbVar5 + 1;
        if (bVar2 < 0x80) {
          if ((int)uVar9 < 0) {
                    // WARNING: Subroutine does not return
            runtime_panicshift();
          }
          bVar10 = *(byte *)(d->varp - (uint)dVar7);
          uVar9 = (uint)(dword)(((dword)bVar2 << ((byte)uVar9 & 0x1f) & -(dword)(uVar9 < 0x20)) +
                               r_1);
          prVar3 = d;
          do {
            do {
              uVar8 = (uint)dVar7;
              uVar9 = uVar9 - 1;
              if ((int)uVar9 < 0) {
                return;
              }
              r_2 = 0;
              uVar6 = 0;
              while( true ) {
                bVar2 = *pbVar5;
                pbVar5 = pbVar5 + 1;
                if (bVar2 < 0x80) break;
                if ((int)uVar6 < 0) {
                    // WARNING: Subroutine does not return
                  runtime_panicshift();
                }
                uVar1 = uVar6 + 7;
                r_2 = ((bVar2 & 0xffffff7f) << ((byte)uVar6 & 0x1f) & -(dword)(uVar6 < 0x20)) + r_2;
                uVar6 = uVar1;
                if (0x1c < (int)uVar1) {
                    // WARNING: Subroutine does not return
                  runtime_gopanic(in_stack_ffffffffffffffc8);
                }
              }
              if ((int)uVar6 < 0) {
                    // WARNING: Subroutine does not return
                runtime_panicshift();
              }
              bVar11 = -(uVar9 < 0x20) & (byte)(1 << ((byte)uVar9 & 0x1f));
            } while ((bVar11 & bVar10) == 0);
            ppfVar4 = *(func__ ***)
                       (prVar3->varp -
                       (uint)(dword)(((dword)bVar2 << ((byte)uVar6 & 0x1f) & -(dword)(uVar6 < 0x20))
                                    + r_2));
            bVar10 = bVar10 & ~bVar11;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier2();
              *extraout_R11 = extraout_RCX;
              extraout_R11[1] = extraout_RAX->fn;
              prVar3 = extraout_RAX;
              ppfVar4 = extraout_RCX;
              uVar8 = extraout_RSI;
              bVar10 = extraout_R8B;
            }
            prVar3->fn = ppfVar4;
            *(byte *)(prVar3->varp - uVar8) = bVar10;
            p_00 = prVar3->_panic;
            runtime_deferCallSave(p_00,prVar3->fn);
            if ((p_00 != (runtime__panic *)0x0) && (p_00->aborted != false)) {
              return;
            }
            prVar3 = d;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier1();
              *extraout_R11_00 = extraout_RSI_00;
            }
            prVar3->fn = (func__ **)0x0;
          } while ((prVar3->_panic == (runtime__panic *)0x0) || (prVar3->_panic->recovered == false)
                  );
          return;
        }
        if ((int)uVar9 < 0) {
                    // WARNING: Subroutine does not return
          runtime_panicshift();
        }
        uVar8 = uVar9 + 7;
        r_1 = ((bVar2 & 0xffffff7f) << ((byte)uVar9 & 0x1f) & -(dword)(uVar9 < 0x20)) + r_1;
        uVar9 = uVar8;
      } while ((int)uVar8 < 0x1d);
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffc8);
    }
    if ((int)uVar9 < 0) {
                    // WARNING: Subroutine does not return
      runtime_panicshift();
    }
    uVar8 = uVar9 + 7;
    r = ((bVar2 & 0xffffff7f) << ((byte)uVar9 & 0x1f) & -(dword)(uVar9 < 0x20)) + r;
    uVar9 = uVar8;
  } while ((int)uVar8 < 0x1d);
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffc8);
}



// WARNING: Unknown calling convention

void runtime_deferCallSave(runtime__panic *p,func__ **fn)

{
  void *extraout_RAX;
  void *extraout_RAX_00;
  void *pvVar1;
  undefined *extraout_RAX_01;
  undefined *puVar2;
  runtime__panic *extraout_RAX_02;
  runtime__panic *extraout_RCX;
  runtime__panic *prVar3;
  undefined8 extraout_RCX_00;
  void **extraout_R11;
  void **extraout_R11_00;
  undefined8 *extraout_R11_01;
  int unaff_R14;
  uintptr unaff_retaddr;
  runtime__panic *prStack0000000000000008;
  func__ **in_stack_00000010;
  
  prStack0000000000000008 = p;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000010 = fn;
    runtime_morestack_noctxt();
    fn = in_stack_00000010;
  }
  if (prStack0000000000000008 != (runtime__panic *)0x0) {
    in_stack_00000010 = fn;
    runtime_getargp((uintptr)prStack0000000000000008);
    pvVar1 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_00;
      extraout_R11[1] = prStack0000000000000008->argp;
      pvVar1 = extraout_RAX_00;
    }
    prStack0000000000000008->argp = pvVar1;
    prStack0000000000000008->pc = unaff_retaddr;
    puVar2 = (undefined *)&stack0x00000008;
    prVar3 = prStack0000000000000008;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RAX_01;
      extraout_R11_00[1] = extraout_RCX->sp;
      puVar2 = extraout_RAX_01;
      prVar3 = extraout_RCX;
    }
    prVar3->sp = puVar2;
    fn = in_stack_00000010;
  }
  (**fn)();
  if (prStack0000000000000008 != (runtime__panic *)0x0) {
    prStack0000000000000008->pc = 0;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_01 = extraout_RCX_00;
      prStack0000000000000008 = extraout_RAX_02;
    }
    prStack0000000000000008->sp = (void *)0x0;
  }
  return;
}



void runtime___PanicNilError__Error(string ~r0)

{
  return;
}



// WARNING: Unknown calling convention

void runtime___PanicNilError__RuntimeError(void)

{
  return;
}



// DWARF original prototype: void runtime.gopanic(interface_{} e)

void runtime_gopanic(interface___ e)

{
  runtime_m *prVar1;
  uintptr uVar2;
  char extraout_AL;
  bool done;
  char extraout_AL_00;
  char extraout_AL_01;
  char cVar3;
  char extraout_AL_02;
  internal_abi_Type *in_RAX;
  runtime__defer *d;
  runtime__defer *extraout_RAX;
  runtime__defer *extraout_RAX_00;
  runtime__defer *extraout_RAX_01;
  runtime__defer *prVar4;
  runtime__defer *extraout_RAX_02;
  runtime__defer *prVar5;
  runtime__defer *extraout_RAX_03;
  runtime__defer *prVar6;
  runtime_g *extraout_RCX;
  runtime_g *extraout_RCX_00;
  runtime_g *extraout_RCX_01;
  runtime_g *extraout_RCX_02;
  runtime_g *extraout_RCX_03;
  runtime_g *extraout_RCX_04;
  runtime_g *extraout_RCX_05;
  runtime_g *extraout_RCX_06;
  runtime__defer *newd;
  runtime_g *extraout_RCX_07;
  runtime_g *prVar7;
  runtime_g *extraout_RCX_08;
  runtime__panic *prVar8;
  func__ **ppfVar9;
  runtime__panic *prVar10;
  runtime__defer *d_1;
  uintptr *in_RBX;
  runtime__panic *extraout_RBX;
  runtime__panic *extraout_RBX_00;
  runtime__panic *extraout_RBX_01;
  undefined8 extraout_RBX_02;
  runtime__panic *extraout_RBX_03;
  runtime__panic *extraout_RBX_04;
  runtime__panic *prVar11;
  runtime__panic *extraout_RBX_05;
  runtime_g *extraout_RSI;
  uintptr pc;
  uintptr extraout_RSI_00;
  uintptr extraout_RSI_01;
  uintptr uVar12;
  uintptr extraout_RSI_02;
  undefined8 extraout_RDI;
  runtime__defer *extraout_RDI_00;
  runtime__defer *extraout_RDI_01;
  runtime__defer *prVar13;
  runtime__defer *extraout_RDI_02;
  runtime__panic **extraout_R11;
  runtime__panic **extraout_R11_00;
  undefined8 *extraout_R11_01;
  runtime__defer **extraout_R11_02;
  runtime__panic **extraout_R11_03;
  undefined8 *extraout_R11_04;
  undefined8 *extraout_R11_05;
  runtime__defer **extraout_R11_06;
  runtime__panic **extraout_R11_07;
  runtime__defer **extraout_R11_08;
  runtime__defer **extraout_R11_09;
  runtime__panic **extraout_R11_10;
  runtime__panic **extraout_R11_11;
  runtime_g *unaff_R14;
  runtime_g *gp;
  undefined in_XMM15 [16];
  uintptr unaff_retaddr;
  interface___ in_stack_ffffffffffffff58;
  void *sp;
  runtime__panic p;
  
  e._type = in_RAX;
  while (e.data = in_RBX, &p.link <= (undefined *)unaff_R14->stackguard0) {
    runtime_morestack_noctxt();
    in_RBX = (uintptr *)e.data;
  }
  if (e._type == (internal_abi_Type *)0x0) {
    if (runtime_debug.panicnil.value == 1) {
      runtime___godebugInc__IncNonDefault(runtime_panicnil);
      in_RBX = (uintptr *)e.data;
    }
    else {
      e._type = (internal_abi_Type *)&DAT_00835c40;
      in_RBX = &runtime_zerobase;
    }
  }
  prVar1 = unaff_R14->m;
  if (prVar1->curg != unaff_R14) {
    runtime_printlock();
    runtime_printstring((string)in_stack_ffffffffffffff58);
    runtime_printunlock();
    runtime_printany(in_stack_ffffffffffffff58);
    runtime_printlock();
    runtime_printnl();
    runtime_printunlock();
                    // WARNING: Subroutine does not return
    runtime_throw((string)in_stack_ffffffffffffff58);
  }
  if (prVar1->mallocing != 0) {
    runtime_printlock();
    runtime_printstring((string)in_stack_ffffffffffffff58);
    runtime_printunlock();
    runtime_printany(in_stack_ffffffffffffff58);
    runtime_printlock();
    runtime_printnl();
    runtime_printunlock();
                    // WARNING: Subroutine does not return
    runtime_throw((string)in_stack_ffffffffffffff58);
  }
  if ((prVar1->preemptoff).len != 0) {
    runtime_printlock();
    runtime_printstring((string)in_stack_ffffffffffffff58);
    runtime_printunlock();
    runtime_printany(in_stack_ffffffffffffff58);
    runtime_printlock();
    runtime_printnl();
    runtime_printunlock();
    runtime_printlock();
    runtime_printstring((string)in_stack_ffffffffffffff58);
    runtime_printunlock();
    runtime_printlock();
    runtime_printstring((string)in_stack_ffffffffffffff58);
    runtime_printunlock();
    runtime_printlock();
    runtime_printnl();
    runtime_printunlock();
                    // WARNING: Subroutine does not return
    runtime_throw((string)in_stack_ffffffffffffff58);
  }
  if (prVar1->locks != 0) {
    runtime_printlock();
    runtime_printstring((string)in_stack_ffffffffffffff58);
    runtime_printunlock();
    runtime_printany(in_stack_ffffffffffffff58);
    runtime_printlock();
    runtime_printnl();
    runtime_printunlock();
                    // WARNING: Subroutine does not return
    runtime_throw((string)in_stack_ffffffffffffff58);
  }
  p.argp = in_XMM15._0_8_;
  p.pc = in_XMM15._8_8_;
  p.link = unaff_R14->_panic;
  prVar7 = unaff_R14;
  p.arg._type = e._type;
  p.arg.data = in_RBX;
  p._40_16_ = in_XMM15;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = &p;
    extraout_R11[1] = extraout_RSI->_panic;
    prVar7 = extraout_RSI;
  }
  prVar7->_panic = &p;
  LOCK();
  runtime_runningPanicDefers.value = runtime_runningPanicDefers.value + 1;
  UNLOCK();
  runtime_addOneOpenDeferFrame(prVar7,unaff_retaddr,&e);
  prVar8 = extraout_RBX;
LAB_0043a5aa:
  do {
    prVar4 = unaff_R14->_defer;
    if (prVar4 == (runtime__defer *)0x0) {
      runtime_preprintpanics(unaff_R14->_panic);
                    // WARNING: Subroutine does not return
      runtime_fatalpanic(unaff_R14->_panic);
    }
    if (prVar4->started != false) {
      if (prVar4->_panic != (runtime__panic *)0x0) {
        prVar4->_panic->aborted = true;
      }
      prVar7 = unaff_R14;
      if (runtime_writeBarrier._0_4_ != 0) {
        prVar8 = prVar4->_panic;
        runtime_gcWriteBarrier1();
        *extraout_R11_00 = prVar8;
        prVar4 = extraout_RAX;
        prVar7 = extraout_RCX;
        prVar8 = extraout_RBX_00;
      }
      prVar4->_panic = (runtime__panic *)0x0;
      if (prVar4->openDefer == false) {
        if (runtime_writeBarrier._0_4_ != 0) {
          ppfVar9 = prVar4->fn;
          runtime_gcWriteBarrier1();
          *extraout_R11_01 = ppfVar9;
          prVar4 = extraout_RAX_00;
          prVar7 = extraout_RCX_00;
        }
        prVar4->fn = (func__ **)0x0;
        prVar5 = prVar4->link;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_02 = prVar5;
          extraout_R11_02[1] = extraout_RCX_01->_defer;
          prVar4 = extraout_RAX_01;
          prVar7 = extraout_RCX_01;
        }
        prVar7->_defer = prVar5;
        runtime_freedefer(prVar4);
        prVar8 = extraout_RBX_01;
        goto LAB_0043a5aa;
      }
    }
    prVar4->started = true;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_03 = &p;
      prVar8 = extraout_RAX_02->_panic;
      extraout_R11_03[1] = prVar8;
      prVar4 = extraout_RAX_02;
    }
    prVar4->_panic = &p;
    if (prVar4->openDefer == false) {
      runtime_getargp((uintptr)prVar4);
      (**prVar4->fn)();
      cVar3 = '\x01';
    }
    else {
      runtime_runOpenDeferFrame(prVar4,SUB81(prVar8,0));
      cVar3 = extraout_AL;
      if ((extraout_AL != '\0') && (prVar4->_panic->recovered == false)) {
        runtime_addOneOpenDeferFrame(unaff_R14,0,(void *)0x0);
      }
    }
    p.argp = (void *)0x0;
    if (unaff_R14->_defer != prVar4) {
                    // WARNING: Subroutine does not return
      runtime_throw((string)in_stack_ffffffffffffff58);
    }
    prVar7 = unaff_R14;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_04 = extraout_RBX_02;
      prVar7 = extraout_RCX_02;
      cVar3 = extraout_AL_00;
    }
    prVar4->_panic = (runtime__panic *)0x0;
    prVar8 = (runtime__panic *)prVar4->sp;
    uVar2 = prVar4->pc;
    if (cVar3 != '\0') {
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_05 = extraout_RDI;
        prVar7 = extraout_RCX_03;
        cVar3 = extraout_AL_01;
      }
      prVar4->fn = (func__ **)0x0;
      prVar5 = prVar4->link;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_06 = extraout_RDI_00;
        extraout_R11_06[1] = extraout_RCX_04->_defer;
        prVar7 = extraout_RCX_04;
        prVar5 = extraout_RDI_00;
      }
      prVar7->_defer = prVar5;
      runtime_freedefer(prVar4);
      prVar7 = unaff_R14;
    }
  } while (p.recovered == false);
  prVar10 = p.link;
  prVar11 = prVar8;
  uVar12 = uVar2;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_07 = prVar10;
    extraout_R11_07[1] = extraout_RCX_05->_panic;
    prVar7 = extraout_RCX_05;
    prVar11 = extraout_RBX_03;
    uVar12 = extraout_RSI_00;
    cVar3 = extraout_AL_02;
  }
  prVar7->_panic = prVar10;
  if (((prVar10 != (runtime__panic *)0x0) && (prVar10->goexit != false)) &&
     (prVar10->aborted != false)) {
    prVar7->sigcode0 = (uintptr)prVar10->sp;
    prVar7->sigcode1 = prVar10->pc;
    runtime_mcall();
                    // WARNING: Subroutine does not return
    runtime_throw((string)in_stack_ffffffffffffff58);
  }
  LOCK();
  runtime_runningPanicDefers.value = runtime_runningPanicDefers.value - 1;
  UNLOCK();
  prVar4 = prVar7->_defer;
  if (cVar3 == '\0') {
    prVar5 = prVar4;
    prVar4 = prVar4->link;
  }
  else {
    prVar5 = (runtime__defer *)0x0;
  }
  while ((prVar4 != (runtime__defer *)0x0 && (prVar4->started == false))) {
    if (prVar4->openDefer == false) {
      prVar5 = prVar4;
      prVar4 = prVar4->link;
    }
    else {
      if (prVar5 == (runtime__defer *)0x0) {
        prVar13 = prVar4->link;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_09 = extraout_RDI_02;
          extraout_R11_09[1] = extraout_RCX_06->_defer;
          prVar7 = extraout_RCX_06;
          prVar13 = extraout_RDI_02;
        }
        prVar7->_defer = prVar13;
      }
      else {
        prVar13 = prVar4->link;
        prVar6 = prVar5;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_08 = extraout_RDI_01;
          extraout_R11_08[1] = extraout_RAX_03->link;
          prVar6 = extraout_RAX_03;
          prVar13 = extraout_RDI_01;
        }
        prVar6->link = prVar13;
      }
      prVar13 = prVar4->link;
      runtime_freedefer(prVar4);
      prVar7 = unaff_R14;
      prVar4 = prVar13;
      prVar11 = prVar8;
      uVar12 = uVar2;
    }
  }
  prVar8 = p.link;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_10 = prVar8;
    extraout_R11_10[1] = extraout_RCX_07->_panic;
    prVar7 = extraout_RCX_07;
    prVar11 = extraout_RBX_04;
    uVar12 = extraout_RSI_01;
  }
  prVar7->_panic = prVar8;
  do {
    prVar8 = prVar7->_panic;
    if (prVar8 == (runtime__panic *)0x0) {
LAB_0043a950:
      prVar7->sig = 0;
LAB_0043a925:
      prVar7->sigcode0 = (uintptr)prVar11;
      prVar7->sigcode1 = uVar12;
      runtime_mcall();
                    // WARNING: Subroutine does not return
      runtime_throw((string)in_stack_ffffffffffffff58);
    }
    if (prVar8->aborted == false) {
      if (prVar8 != (runtime__panic *)0x0) goto LAB_0043a925;
      goto LAB_0043a950;
    }
    prVar8 = prVar8->link;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_11 = prVar8;
      extraout_R11_11[1] = extraout_RCX_08->_panic;
      prVar7 = extraout_RCX_08;
      prVar11 = extraout_RBX_05;
      uVar12 = extraout_RSI_02;
    }
    prVar7->_panic = prVar8;
  } while( true );
}



void runtime_getargp(uintptr ~r0)

{
  return;
}



void runtime_gorecover(uintptr argp,interface___ ~r0)

{
  uintptr *puVar1;
  runtime__panic *p;
  int unaff_R14;
  runtime_g *gp;
  
  puVar1 = *(uintptr **)(unaff_R14 + 0x20);
  if ((((puVar1 != (uintptr *)0x0) && (*(char *)((int)puVar1 + 0x32) == '\0')) &&
      (*(char *)(puVar1 + 6) == '\0')) && (argp == *puVar1)) {
    *(undefined *)(puVar1 + 6) = 1;
    return;
  }
  return;
}



// DWARF original prototype: void runtime.throw(string s)

void runtime_throw(string s)

{
  runtime_systemstack();
                    // WARNING: Subroutine does not return
  runtime_fatalthrow(2);
}



// WARNING: Unknown calling convention

void runtime_throw_func1(void)

{
  int unaff_R14;
  string in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffffd8);
  runtime_printstring(in_stack_ffffffffffffffd8);
  runtime_printnl();
  runtime_printunlock();
  return;
}



// DWARF original prototype: void runtime.fatal(string s)

void runtime_fatal(string s)

{
  runtime_systemstack();
                    // WARNING: Subroutine does not return
  runtime_fatalthrow(1);
}



// WARNING: Unknown calling convention

void runtime_fatal_func1(void)

{
  int unaff_R14;
  string in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffffd8);
  runtime_printstring(in_stack_ffffffffffffffd8);
  runtime_printnl();
  runtime_printunlock();
  return;
}



// WARNING: Unknown calling convention

void runtime_recovery(runtime_g *gp)

{
  uint v;
  uint v_00;
  uintptr uVar1;
  uint64 v_01;
  string s;
  string s_00;
  string s_01;
  string s_02;
  string s_03;
  uintptr sp;
  uintptr pc;
  int unaff_R14;
  uint8 *in_stack_ffffffffffffffd0;
  int in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  v = gp->sigcode0;
  if (v != 0) {
    v_00 = (gp->stack).lo;
    if ((v < v_00) || ((gp->stack).hi < v)) {
      v_01 = (gp->stack).hi;
      runtime_printlock();
      s.len = in_stack_ffffffffffffffd8;
      s.str = in_stack_ffffffffffffffd0;
      runtime_printstring(s);
      runtime_printhex(v);
      s_00.len = in_stack_ffffffffffffffd8;
      s_00.str = in_stack_ffffffffffffffd0;
      runtime_printstring(s_00);
      runtime_printhex(v_00);
      s_01.len = in_stack_ffffffffffffffd8;
      s_01.str = in_stack_ffffffffffffffd0;
      runtime_printstring(s_01);
      runtime_printhex(v_01);
      s_02.len = in_stack_ffffffffffffffd8;
      s_02.str = in_stack_ffffffffffffffd0;
      runtime_printstring(s_02);
      runtime_printunlock();
      s_03.len = in_stack_ffffffffffffffd8;
      s_03.str = in_stack_ffffffffffffffd0;
                    // WARNING: Subroutine does not return
      runtime_throw(s_03);
    }
  }
  uVar1 = gp->sigcode1;
  (gp->sched).sp = v;
  (gp->sched).pc = uVar1;
  (gp->sched).lr = 0;
  (gp->sched).bp = *(uintptr *)(v - 0x10);
  (gp->sched).ret = 1;
  runtime_gogo();
  return;
}



// WARNING: Variable defined which should be unmapped: gp
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// WARNING: Unknown calling convention
// DWARF original prototype: void runtime.fatalthrow(runtime.throwType t)

void runtime_fatalthrow(runtime_throwType t)

{
  uintptr sp;
  int unaff_R14;
  runtime_g *gp;
  
  if (*(sdword *)(*(int *)(unaff_R14 + 0x30) + 0xf4) == 0) {
    *(runtime_throwType *)(*(int *)(unaff_R14 + 0x30) + 0xf4) = t;
  }
  runtime_systemstack();
  _DAT_00000000 = 0;
  return;
}



// WARNING: Unknown calling convention

void runtime_fatalthrow_func1(void)

{
  runtime_g *gp_00;
  uintptr pc_00;
  uintptr sp_00;
  runtime_g *gp;
  int __status;
  uintptr pc;
  int in_RDX;
  uintptr sp;
  bool ~r0;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  gp_00 = *(runtime_g **)(in_RDX + 8);
  pc_00 = *(uintptr *)(in_RDX + 0x10);
  sp_00 = *(uintptr *)(in_RDX + 0x18);
  if (runtime_secureMode != false) {
                    // WARNING: Subroutine does not return
    runtime_exit((int)gp_00);
  }
  runtime_startpanic_m(SUB81(gp_00,0));
  runtime_dopanic_m(gp_00,pc_00,sp_00,~r0);
  if ((char)__status != '\0') {
                    // WARNING: Subroutine does not return
    runtime_dieFromSignal(6);
  }
                    // WARNING: Subroutine does not return
  runtime_exit(__status);
}



// WARNING: Removing unreachable block (ram,0x0043b0ba)
// WARNING: Globals starting with '_' overlap smaller symbols at the same address
// WARNING: Unknown calling convention
// DWARF original prototype: void runtime.fatalpanic(runtime._panic * msgs)

void runtime_fatalpanic(runtime__panic *msgs)

{
  uintptr sp;
  runtime_g *gp;
  
  runtime_systemstack();
  runtime_systemstack();
  _DAT_00000000 = 0;
  return;
}



// WARNING: Unknown calling convention

void runtime_fatalpanic_func1(void)

{
  runtime__panic *p;
  undefined *puVar1;
  runtime_g *gp_00;
  uintptr pc_00;
  uintptr sp_00;
  char extraout_AL;
  undefined extraout_AL_00;
  runtime__panic *msgs;
  bool *_docrash;
  int in_RDX;
  uintptr sp;
  runtime_g *gp;
  uintptr pc;
  undefined extraout_DIL;
  undefined extraout_DIL_00;
  undefined ~r0;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  p = *(runtime__panic **)(in_RDX + 8);
  puVar1 = *(undefined **)(in_RDX + 0x10);
  gp_00 = *(runtime_g **)(in_RDX + 0x18);
  pc_00 = *(uintptr *)(in_RDX + 0x20);
  sp_00 = *(uintptr *)(in_RDX + 0x28);
  runtime_startpanic_m(SUB81(p,0));
  ~r0 = extraout_DIL;
  if ((extraout_AL != '\0') && (p != (runtime__panic *)0x0)) {
    LOCK();
    runtime_runningPanicDefers.value = runtime_runningPanicDefers.value - 1;
    UNLOCK();
    runtime_printpanics(p);
    ~r0 = extraout_DIL_00;
  }
  runtime_dopanic_m(gp_00,pc_00,sp_00,(bool)~r0);
  *puVar1 = extraout_AL_00;
  return;
}



// WARNING: Variable defined which should be unmapped: gp

void runtime_startpanic_m(bool ~r0)

{
  sdword *psVar1;
  sdword sVar2;
  int iVar3;
  string s;
  string s_00;
  string s_01;
  undefined7 in_register_00000001;
  int __status;
  int extraout_RAX;
  int __status_00;
  int extraout_RAX_00;
  int unaff_R14;
  undefined4 in_stack_ffffffffffffffe0;
  undefined in_stack_ffffffffffffffe4 [12];
  runtime_g *gp;
  
  __status = CONCAT71(in_register_00000001,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    __status = extraout_RAX_00;
  }
  if (runtime_mheap_.cachealloc.size == 0) {
    runtime_printlock();
    s._4_12_ = in_stack_ffffffffffffffe4;
    s.str._0_4_ = in_stack_ffffffffffffffe0;
    runtime_printstring(s);
    runtime_printunlock();
    __status = extraout_RAX;
  }
  psVar1 = (sdword *)(*(int *)(unaff_R14 + 0x30) + 0xf0);
  *psVar1 = *psVar1 + 1;
  if (*(sdword *)(*(int *)(unaff_R14 + 0x30) + 0x108) < 0) {
    *(undefined4 *)(*(int *)(unaff_R14 + 0x30) + 0x108) = 1;
  }
  iVar3 = *(int *)(unaff_R14 + 0x30);
  sVar2 = *(sdword *)(iVar3 + 0x10c);
  if (sVar2 == 0) {
    *(undefined4 *)(iVar3 + 0x10c) = 1;
    LOCK();
    runtime_panicking.value = runtime_panicking.value + 1;
    UNLOCK();
    runtime_lock2(&runtime_paniclk);
    if ((0 < runtime_debug.schedtrace) || (0 < runtime_debug.scheddetail)) {
      runtime_schedtrace(true);
    }
    runtime_freezetheworld();
    return;
  }
  if (sVar2 == 1) {
    *(undefined4 *)(iVar3 + 0x10c) = 2;
    runtime_printlock();
    s_01._4_12_ = in_stack_ffffffffffffffe4;
    s_01.str._0_4_ = in_stack_ffffffffffffffe0;
    runtime_printstring(s_01);
    runtime_printunlock();
    return;
  }
  if (sVar2 == 2) {
    *(undefined4 *)(iVar3 + 0x10c) = 3;
    runtime_printlock();
    s_00._4_12_ = in_stack_ffffffffffffffe4;
    s_00.str._0_4_ = in_stack_ffffffffffffffe0;
    runtime_printstring(s_00);
    runtime_printunlock();
                    // WARNING: Subroutine does not return
    runtime_exit(__status_00);
  }
                    // WARNING: Subroutine does not return
  runtime_exit(__status);
}



void runtime_dopanic_m(runtime_g *gp,uintptr pc,uintptr sp,bool ~r0)
