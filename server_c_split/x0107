  if (et->PtrBytes == 0) {
    runtime_memclrNoHeapPointers();
  }
  return;
}



void internal_bytealg_MakeNoZero(int len,__uint8 ~r0)

{
  int extraout_RAX;
  void *in_RDI;
  void *extraout_RDI;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  if (0x1000000000000 < (uint)len) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe0);
  }
  runtime_mallocgc(len,(internal_abi_Type *)0x0,false,in_RDI);
  if (len < 0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafeslicelen();
  }
  if ((uint)len <= (uint)-extraout_RAX) {
    return;
  }
  if (extraout_RAX != 0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafeslicelen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafeslicenilptr();
}



// WARNING: Unknown calling convention

void runtime_morestackc(void)

{
  string in_stack_ffffffffffffffe8;
  
                    // WARNING: Subroutine does not return
  runtime_throw(in_stack_ffffffffffffffe8);
}



void runtime_gostring(uint8 *p,string ~r0)

{
  uintptr size;
  int l;
  void *__dest;
  void *p_1;
  int in_RBX;
  int extraout_RBX;
  void *~r0_00;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_findnull(p,in_RBX);
  if (size == 0) {
    return;
  }
  runtime_mallocgc(size,(internal_abi_Type *)0x0,false,~r0_00);
  if ((int)size < 0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringlen();
  }
  if (size <= (uint)-(int)__dest) {
    runtime_memmove(__dest,p,size);
    return;
  }
  if (__dest != (void *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringlen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafestringnilptr();
}



void * reflect_memmove(void *__dest,void *__src,size_t __n)

{
  void *pvVar1;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  pvVar1 = runtime_memmove(__dest,__src,__n);
  return pvVar1;
}



void math_rand_fastrand64(uint64 ~r0)

{
  runtime_m *mp;
  uint64 hi;
  int unaff_R14;
  
  *(int *)(*(int *)(unaff_R14 + 0x30) + 0x120) =
       *(int *)(*(int *)(unaff_R14 + 0x30) + 0x120) + -0x5f89e29b87429bd1;
  return;
}



void net_fastrandu(uint ~r0)

{
  runtime_m *mp;
  uint64 hi;
  int unaff_R14;
  
  *(int *)(*(int *)(unaff_R14 + 0x30) + 0x120) =
       *(int *)(*(int *)(unaff_R14 + 0x30) + 0x120) + -0x5f89e29b87429bd1;
  return;
}



void os_fastrand(uint32 ~r0)

{
  runtime_m *mp;
  uint64 hi;
  int unaff_R14;
  
  *(int *)(*(int *)(unaff_R14 + 0x30) + 0x120) =
       *(int *)(*(int *)(unaff_R14 + 0x30) + 0x120) + -0x5f89e29b87429bd1;
  return;
}



// WARNING: Unknown calling convention

void time_startTimer(runtime_timer *t)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_addtimer(t);
  return;
}



void time_stopTimer(runtime_timer *t,bool ~r0)

{
  undefined extraout_BL;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0 = (bool)extraout_BL;
  }
  runtime_deltimer(t,~r0);
  return;
}



void time_resetTimer(runtime_timer *t,int64 when,bool ~r0)

{
  int unaff_R14;
  interface___ in_stack_ffffffffffffffc0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_modtimer(t,when,t->period,t->f,in_stack_ffffffffffffffc0,(uintptr)(t->arg)._type,
                   SUB81((t->arg).data,0));
  return;
}



// WARNING: Unknown calling convention

void runtime_mapinitnoop(void)

{
  return;
}



// WARNING: Unknown calling convention

void gogo(void)

{
  undefined8 uVar1;
  undefined8 in_RDX;
  undefined8 *in_RBX;
  int in_FS_OFFSET;
  
  *(undefined8 *)(in_FS_OFFSET + -8) = in_RDX;
  uVar1 = in_RBX[4];
  *in_RBX = 0;
  in_RBX[4] = 0;
  in_RBX[3] = 0;
  in_RBX[6] = 0;
                    // WARNING: Could not recover jumptable at 0x0046985e. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)in_RBX[1])(uVar1,(code *)in_RBX[1]);
  return;
}



// WARNING: Unknown calling convention

void callRet(void)

{
  uintptr in_RCX;
  internal_abi_Type *in_RDX;
  void *in_RSI;
  void *in_RDI;
  internal_abi_RegArgs *in_R12;
  
  runtime_reflectcallmove(in_RDX,in_RDI,in_RSI,in_RCX,in_R12);
  return;
}



// WARNING: Unknown calling convention

void gosave_systemstack_switch(void)

{
  undefined8 unaff_RBP;
  int unaff_R14;
  
  *(undefined **)(unaff_R14 + 0x40) = &DAT_0046a6c8;
  *(undefined **)(unaff_R14 + 0x38) = &stack0x00000008;
  *(undefined8 *)(unaff_R14 + 0x58) = 0;
  *(undefined8 *)(unaff_R14 + 0x68) = unaff_RBP;
  if (*(int *)(unaff_R14 + 0x50) != 0) {
                    // WARNING: Subroutine does not return
    runtime_abort();
  }
  return;
}



// WARNING: Unknown calling convention

void setg_gcc(void)

{
  undefined8 in_RDI;
  int in_FS_OFFSET;
  
  *(undefined8 *)(in_FS_OFFSET + -8) = in_RDI;
  return;
}



// WARNING: Unknown calling convention

void aeshashbody(void)

{
  undefined (*in_RAX) [16];
  uint in_RCX;
  uint uVar1;
  undefined8 in_RBX;
  undefined auVar2 [16];
  undefined auVar3 [16];
  undefined auVar4 [16];
  undefined auVar5 [16];
  undefined auVar6 [16];
  undefined auVar7 [16];
  undefined auVar8 [16];
  undefined auVar9 [16];
  undefined auVar10 [16];
  
  auVar2._8_8_ = in_RCX & 0xffff;
  auVar2._0_8_ = in_RBX;
  auVar2 = pshufhw(auVar2,auVar2,0);
  auVar3 = aesenc(auVar2 ^ runtime_aeskeysched._0_16_,auVar2 ^ runtime_aeskeysched._0_16_);
  if (in_RCX < 0x10) {
    if (in_RCX == 0) {
      aesenc(auVar3,auVar3);
      return;
    }
    if (((uint)(in_RAX + 1) & 0xff0) == 0) {
      auVar2 = pshufb(*(undefined (*) [16])(in_RAX[-1] + in_RCX),
                      *(undefined (*) [16])(shifts + in_RCX * 0x10));
    }
    else {
      auVar2 = *in_RAX & *(undefined (*) [16])(masks + in_RCX * 0x10);
    }
  }
  else {
    if (in_RCX != 0x10) {
      if (in_RCX < 0x21) {
        auVar2 = aesenc(auVar2 ^ runtime_aeskeysched._16_16_,auVar2 ^ runtime_aeskeysched._16_16_);
        auVar2 = *(undefined (*) [16])(in_RAX[-1] + in_RCX) ^ auVar2;
        auVar3 = aesenc(*in_RAX ^ auVar3,*in_RAX ^ auVar3);
        auVar4 = aesenc(auVar2,auVar2);
        auVar2 = aesenc(auVar3,auVar3);
        auVar3 = aesenc(auVar4,auVar4);
        aesenc(auVar2,auVar2);
        aesenc(auVar3,auVar3);
        return;
      }
      if (0x40 < in_RCX) {
        if (0x80 < in_RCX) {
          auVar4 = aesenc(auVar2 ^ runtime_aeskeysched._16_16_,auVar2 ^ runtime_aeskeysched._16_16_)
          ;
          auVar5 = aesenc(auVar2 ^ runtime_aeskeysched._32_16_,auVar2 ^ runtime_aeskeysched._32_16_)
          ;
          auVar6 = aesenc(auVar2 ^ runtime_aeskeysched._48_16_,auVar2 ^ runtime_aeskeysched._48_16_)
          ;
          auVar7 = aesenc(auVar2 ^ runtime_aeskeysched._64_16_,auVar2 ^ runtime_aeskeysched._64_16_)
          ;
          auVar8 = aesenc(auVar2 ^ runtime_aeskeysched._80_16_,auVar2 ^ runtime_aeskeysched._80_16_)
          ;
          auVar9 = aesenc(auVar2 ^ runtime_aeskeysched._96_16_,auVar2 ^ runtime_aeskeysched._96_16_)
          ;
          auVar2 = aesenc(auVar2 ^ runtime_aeskeysched._112_16_,
                          auVar2 ^ runtime_aeskeysched._112_16_);
          auVar3 = *(undefined (*) [16])(in_RAX[-8] + in_RCX) ^ auVar3;
          auVar4 = *(undefined (*) [16])(in_RAX[-7] + in_RCX) ^ auVar4;
          auVar5 = *(undefined (*) [16])(in_RAX[-6] + in_RCX) ^ auVar5;
          auVar6 = *(undefined (*) [16])(in_RAX[-5] + in_RCX) ^ auVar6;
          auVar7 = *(undefined (*) [16])(in_RAX[-4] + in_RCX) ^ auVar7;
          auVar8 = *(undefined (*) [16])(in_RAX[-3] + in_RCX) ^ auVar8;
          auVar9 = *(undefined (*) [16])(in_RAX[-2] + in_RCX) ^ auVar9;
          auVar2 = *(undefined (*) [16])(in_RAX[-1] + in_RCX) ^ auVar2;
          uVar1 = in_RCX - 1 >> 7;
          do {
            auVar3 = aesenc(auVar3,auVar3);
            auVar4 = aesenc(auVar4,auVar4);
            auVar5 = aesenc(auVar5,auVar5);
            auVar6 = aesenc(auVar6,auVar6);
            auVar7 = aesenc(auVar7,auVar7);
            auVar8 = aesenc(auVar8,auVar8);
            auVar9 = aesenc(auVar9,auVar9);
            auVar2 = aesenc(auVar2,auVar2);
            auVar3 = aesenc(auVar3,*in_RAX);
            auVar4 = aesenc(auVar4,in_RAX[1]);
            auVar5 = aesenc(auVar5,in_RAX[2]);
            auVar6 = aesenc(auVar6,in_RAX[3]);
            auVar7 = aesenc(auVar7,in_RAX[4]);
            auVar8 = aesenc(auVar8,in_RAX[5]);
            auVar9 = aesenc(auVar9,in_RAX[6]);
            auVar2 = aesenc(auVar2,in_RAX[7]);
            in_RAX = in_RAX + 8;
            uVar1 = uVar1 - 1;
          } while (uVar1 != 0);
          auVar3 = aesenc(auVar3,auVar3);
          auVar4 = aesenc(auVar4,auVar4);
          auVar5 = aesenc(auVar5,auVar5);
          auVar6 = aesenc(auVar6,auVar6);
          auVar7 = aesenc(auVar7,auVar7);
          auVar8 = aesenc(auVar8,auVar8);
          auVar9 = aesenc(auVar9,auVar9);
          auVar10 = aesenc(auVar2,auVar2);
          auVar2 = aesenc(auVar3,auVar3);
          auVar3 = aesenc(auVar4,auVar4);
          auVar4 = aesenc(auVar5,auVar5);
          auVar5 = aesenc(auVar6,auVar6);
          auVar6 = aesenc(auVar7,auVar7);
          auVar7 = aesenc(auVar8,auVar8);
          auVar8 = aesenc(auVar9,auVar9);
          auVar9 = aesenc(auVar10,auVar10);
          aesenc(auVar2,auVar2);
          aesenc(auVar3,auVar3);
          aesenc(auVar4,auVar4);
          aesenc(auVar5,auVar5);
          aesenc(auVar6,auVar6);
          aesenc(auVar7,auVar7);
          aesenc(auVar8,auVar8);
          aesenc(auVar9,auVar9);
          return;
        }
        auVar4 = aesenc(auVar2 ^ runtime_aeskeysched._16_16_,auVar2 ^ runtime_aeskeysched._16_16_);
        auVar5 = aesenc(auVar2 ^ runtime_aeskeysched._32_16_,auVar2 ^ runtime_aeskeysched._32_16_);
        auVar6 = aesenc(auVar2 ^ runtime_aeskeysched._48_16_,auVar2 ^ runtime_aeskeysched._48_16_);
        auVar7 = aesenc(auVar2 ^ runtime_aeskeysched._64_16_,auVar2 ^ runtime_aeskeysched._64_16_);
        auVar8 = aesenc(auVar2 ^ runtime_aeskeysched._80_16_,auVar2 ^ runtime_aeskeysched._80_16_);
        auVar9 = aesenc(auVar2 ^ runtime_aeskeysched._96_16_,auVar2 ^ runtime_aeskeysched._96_16_);
        auVar2 = aesenc(auVar2 ^ runtime_aeskeysched._112_16_,auVar2 ^ runtime_aeskeysched._112_16_)
        ;
        auVar7 = *(undefined (*) [16])(in_RAX[-4] + in_RCX) ^ auVar7;
        auVar8 = *(undefined (*) [16])(in_RAX[-3] + in_RCX) ^ auVar8;
        auVar9 = *(undefined (*) [16])(in_RAX[-2] + in_RCX) ^ auVar9;
        auVar2 = *(undefined (*) [16])(in_RAX[-1] + in_RCX) ^ auVar2;
        auVar3 = aesenc(*in_RAX ^ auVar3,*in_RAX ^ auVar3);
        auVar4 = aesenc(in_RAX[1] ^ auVar4,in_RAX[1] ^ auVar4);
        auVar5 = aesenc(in_RAX[2] ^ auVar5,in_RAX[2] ^ auVar5);
        auVar6 = aesenc(in_RAX[3] ^ auVar6,in_RAX[3] ^ auVar6);
        auVar7 = aesenc(auVar7,auVar7);
        auVar8 = aesenc(auVar8,auVar8);
        auVar9 = aesenc(auVar9,auVar9);
        auVar10 = aesenc(auVar2,auVar2);
        auVar2 = aesenc(auVar3,auVar3);
        auVar3 = aesenc(auVar4,auVar4);
        auVar4 = aesenc(auVar5,auVar5);
        auVar5 = aesenc(auVar6,auVar6);
        auVar6 = aesenc(auVar7,auVar7);
        auVar7 = aesenc(auVar8,auVar8);
        auVar8 = aesenc(auVar9,auVar9);
        auVar9 = aesenc(auVar10,auVar10);
        aesenc(auVar2,auVar2);
        aesenc(auVar3,auVar3);
        aesenc(auVar4,auVar4);
        aesenc(auVar5,auVar5);
        aesenc(auVar6,auVar6);
        aesenc(auVar7,auVar7);
        aesenc(auVar8,auVar8);
        aesenc(auVar9,auVar9);
        return;
      }
      auVar4 = aesenc(auVar2 ^ runtime_aeskeysched._16_16_,auVar2 ^ runtime_aeskeysched._16_16_);
      auVar5 = aesenc(auVar2 ^ runtime_aeskeysched._32_16_,auVar2 ^ runtime_aeskeysched._32_16_);
      auVar2 = aesenc(auVar2 ^ runtime_aeskeysched._48_16_,auVar2 ^ runtime_aeskeysched._48_16_);
      auVar5 = *(undefined (*) [16])(in_RAX[-2] + in_RCX) ^ auVar5;
      auVar2 = *(undefined (*) [16])(in_RAX[-1] + in_RCX) ^ auVar2;
      auVar3 = aesenc(*in_RAX ^ auVar3,*in_RAX ^ auVar3);
      auVar4 = aesenc(in_RAX[1] ^ auVar4,in_RAX[1] ^ auVar4);
      auVar5 = aesenc(auVar5,auVar5);
      auVar6 = aesenc(auVar2,auVar2);
      auVar2 = aesenc(auVar3,auVar3);
      auVar3 = aesenc(auVar4,auVar4);
      auVar4 = aesenc(auVar5,auVar5);
      auVar5 = aesenc(auVar6,auVar6);
      aesenc(auVar2,auVar2);
      aesenc(auVar3,auVar3);
      aesenc(auVar4,auVar4);
      aesenc(auVar5,auVar5);
      return;
    }
    auVar2 = *in_RAX;
  }
  auVar2 = aesenc(auVar2 ^ auVar3,auVar2 ^ auVar3);
  auVar2 = aesenc(auVar2,auVar2);
  aesenc(auVar2,auVar2);
  return;
}



// WARNING: Unknown calling convention

void gcWriteBarrier(void)

{
  int iVar1;
  int in_R11;
  uint uVar2;
  int unaff_R14;
  
  while( true ) {
    iVar1 = *(int *)(*(int *)(unaff_R14 + 0x30) + 0xd0);
    uVar2 = *(int *)(iVar1 + 0x1268) + in_R11;
    if (uVar2 <= *(uint *)(iVar1 + 0x1270)) break;
    runtime_wbBufFlush();
  }
  *(uint *)(iVar1 + 0x1268) = uVar2;
  return;
}



// WARNING: Unknown calling convention

void debugCall32(void)

{
  int *piVar1;
  code *pcVar2;
  int in_FS_OFFSET;
  undefined auStack_28 [32];
  
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_28;
  }
  pcVar2 = (code *)swi(3);
  (*pcVar2)();
  return;
}



// WARNING: Unknown calling convention

void debugCall64(void)

{
  int *piVar1;
  code *pcVar2;
  int in_FS_OFFSET;
  undefined auStack_48 [64];
  
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_48;
  }
  pcVar2 = (code *)swi(3);
  (*pcVar2)();
  return;
}



// WARNING: Unknown calling convention

void debugCall128(void)

{
  int *piVar1;
  code *pcVar2;
  int in_FS_OFFSET;
  undefined auStack_88 [128];
  
  while (&stack0xfffffffffffffff8 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_88;
  }
  pcVar2 = (code *)swi(3);
  (*pcVar2)();
  return;
}



// WARNING: Unknown calling convention

void debugCall256(void)

{
  int *piVar1;
  code *pcVar2;
  int in_FS_OFFSET;
  undefined auStack_108 [128];
  undefined local_88 [128];
  
  while (local_88 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_108;
  }
  pcVar2 = (code *)swi(3);
  (*pcVar2)();
  return;
}



// WARNING: Unknown calling convention

void debugCall512(void)

{
  int *piVar1;
  code *pcVar2;
  int in_FS_OFFSET;
  undefined auStack_208 [128];
  undefined local_188 [384];
  
  while (local_188 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_208;
  }
  pcVar2 = (code *)swi(3);
  (*pcVar2)();
  return;
}



// WARNING: Unknown calling convention

void debugCall1024(void)

{
  int *piVar1;
  code *pcVar2;
  int in_FS_OFFSET;
  undefined auStack_408 [128];
  undefined local_388 [896];
  
  while (local_388 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_408;
  }
  pcVar2 = (code *)swi(3);
  (*pcVar2)();
  return;
}



// WARNING: Unknown calling convention

void debugCall2048(void)

{
  int *piVar1;
  code *pcVar2;
  int in_FS_OFFSET;
  undefined auStack_808 [128];
  undefined local_788 [1920];
  
  while (local_788 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_808;
  }
  pcVar2 = (code *)swi(3);
  (*pcVar2)();
  return;
}



// WARNING: Unknown calling convention

void debugCall4096(void)

{
  int *piVar1;
  code *pcVar2;
  int in_FS_OFFSET;
  undefined auStack_1008 [128];
  undefined auStack_f88 [3968];
  
  while( true ) {
    if (((undefined *)0xf87 < &stack0x00000000) &&
       (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < auStack_f88)) break;
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_1008;
  }
  pcVar2 = (code *)swi(3);
  (*pcVar2)();
  return;
}



// WARNING: Unknown calling convention

void debugCall8192(void)

{
  int *piVar1;
  code *pcVar2;
  int in_FS_OFFSET;
  undefined auStack_2008 [128];
  undefined auStack_1f88 [8064];
  
  while( true ) {
    if (((undefined *)0x1f87 < &stack0x00000000) &&
       (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < auStack_1f88)) break;
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_2008;
  }
  pcVar2 = (code *)swi(3);
  (*pcVar2)();
  return;
}



// WARNING: Unknown calling convention

void debugCall16384(void)

{
  int *piVar1;
  code *pcVar2;
  int in_FS_OFFSET;
  undefined auStack_4008 [128];
  undefined auStack_3f88 [16256];
  
  while( true ) {
    if (((undefined *)0x3f87 < &stack0x00000000) &&
       (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < auStack_3f88)) break;
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_4008;
  }
  pcVar2 = (code *)swi(3);
  (*pcVar2)();
  return;
}



// WARNING: Unknown calling convention

void debugCall32768(void)

{
  int *piVar1;
  code *pcVar2;
  int in_FS_OFFSET;
  undefined auStack_8008 [128];
  undefined auStack_7f88 [32640];
  
  while( true ) {
    if (((undefined *)0x7f87 < &stack0x00000000) &&
       (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < auStack_7f88)) break;
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_8008;
  }
  pcVar2 = (code *)swi(3);
  (*pcVar2)();
  return;
}



// WARNING: Unknown calling convention

void debugCall65536(void)

{
  int *piVar1;
  code *pcVar2;
  int in_FS_OFFSET;
  undefined auStack_10008 [128];
  undefined auStack_ff88 [65408];
  
  while( true ) {
    if (((undefined *)0xff87 < &stack0x00000000) &&
       (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < auStack_ff88)) break;
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10008;
  }
  pcVar2 = (code *)swi(3);
  (*pcVar2)();
  return;
}



// WARNING: Unknown calling convention

void _rt0_amd64(void)

{
  runtime_rt0_go();
  return;
}



// WARNING: Removing unreachable block (ram,0x0046a4e6)
// WARNING: Removing unreachable block (ram,0x0046a4bb)
// WARNING: Unknown calling convention

void runtime_rt0_go(void)

{
  sdword *psVar1;
  uint32 *puVar2;
  uint32 uVar3;
  uint8 **in_RSI;
  int32 in_EDI;
  int in_FS_OFFSET;
  undefined auStackY_10030 [65520];
  undefined8 uStackY_40;
  
  runtime_g0.stack.hi = (uintptr)&stack0xffffffffffffffd0;
  runtime_g0.stack.lo = (uintptr)auStackY_10030;
  psVar1 = (sdword *)cpuid_basic_info(0);
  uVar3 = psVar1[1];
  if (*psVar1 != 0) {
    if (((uVar3 == 0x756e6547) && (psVar1[2] == 0x49656e69)) && (psVar1[3] == 0x6c65746e)) {
      runtime_isIntel = true;
    }
    puVar2 = (uint32 *)cpuid_Version_info(1);
    runtime_processorVersionInfo = *puVar2;
    uVar3 = puVar2[1];
  }
  runtime_g0.stackguard0 = runtime_g0.stack.lo;
  runtime_g0.stackguard1 = runtime_g0.stack.lo;
  if (_cgo_init == (uint8 *)0x0) {
    runtime_settls();
    *(undefined8 *)(in_FS_OFFSET + -8) = 0x123;
    if (runtime_m0.tls[0] != 0x123) {
                    // WARNING: Subroutine does not return
      runtime_abort();
    }
  }
  else {
    runtime_g0.stack.hi = (uintptr)&stack0xffffffffffffffd0;
    (*(code *)_cgo_init)(_cgo_init,uVar3,0,&runtime_g0,setg_gcc);
    runtime_g0.stackguard0 = runtime_g0.stack.lo + 0x3a0;
    runtime_g0.stackguard1 = runtime_g0.stackguard0;
  }
  *(runtime_g **)(in_FS_OFFSET + -8) = &runtime_g0;
  runtime_m0.g0 = &runtime_g0;
  runtime_g0.m = &runtime_m0;
  runtime_check();
  runtime_args(in_EDI,in_RSI);
  runtime_osinit();
  runtime_schedinit();
  uStackY_40 = 0x46a5a9;
  runtime_newproc((runtime_funcval *)&runtime_mainPC);
  runtime_mstart();
                    // WARNING: Subroutine does not return
  runtime_abort();
}



// WARNING: Unknown calling convention

void runtime_asminit(void)

{
  return;
}



// WARNING: Unknown calling convention

void runtime_mstart(void)

{
  runtime_mstart0();
  return;
}



// WARNING: Unknown calling convention

void runtime_gogo(void)

{
  gogo();
  return;
}



// WARNING: Unknown calling convention

void runtime_mcall(void)

{
  int iVar1;
  code *pcVar2;
  code **in_RAX;
  undefined8 unaff_RBP;
  int unaff_R14;
  int in_FS_OFFSET;
  func__runtime_g_ **unaff_retaddr;
  
  *(func__runtime_g_ ***)(unaff_R14 + 0x40) = unaff_retaddr;
  *(undefined **)(unaff_R14 + 0x38) = &stack0x00000008;
  *(undefined8 *)(unaff_R14 + 0x68) = unaff_RBP;
  iVar1 = **(int **)(unaff_R14 + 0x30);
  if (iVar1 == unaff_R14) {
    runtime_badmcall(unaff_retaddr);
    return;
  }
  *(int *)(in_FS_OFFSET + -8) = iVar1;
  iVar1 = *(int *)(iVar1 + 0x38);
  *(int *)(iVar1 + -8) = unaff_R14;
  pcVar2 = *in_RAX;
  *(undefined8 *)(iVar1 + -0x10) = 0x46a6ae;
  (*pcVar2)();
  runtime_badmcall2(*(func__runtime_g_ ***)(iVar1 + 8));
  return;
}



// WARNING: Unknown calling convention

void runtime_systemstack_switch(void)

{
  do {
    invalidInstructionException();
  } while( true );
}



// WARNING: Unknown calling convention

void runtime_systemstack(void)

{
  int iVar1;
  int *piVar2;
  code *pcVar3;
  int iVar4;
  code **extraout_RDI;
  int in_FS_OFFSET;
  code **in_stack_00000008;
  
  iVar1 = *(int *)(in_FS_OFFSET + -8);
  piVar2 = *(int **)(iVar1 + 0x30);
  if ((iVar1 != piVar2[10]) && (iVar4 = *piVar2, iVar1 != iVar4)) {
    if (iVar1 == piVar2[0x18]) {
      gosave_systemstack_switch();
      *(int *)(in_FS_OFFSET + -8) = iVar4;
      pcVar3 = *extraout_RDI;
      *(undefined8 *)(*(int *)(iVar4 + 0x38) + -8) = 0x46a72a;
      (*pcVar3)();
      iVar1 = *(int *)(*(int *)(*(int *)(in_FS_OFFSET + -8) + 0x30) + 0xc0);
      *(int *)(in_FS_OFFSET + -8) = iVar1;
      *(undefined8 *)(iVar1 + 0x38) = 0;
      *(undefined8 *)(iVar1 + 0x68) = 0;
      return;
    }
    runtime_badsystemstack();
    pcVar3 = (code *)swi(3);
    (*pcVar3)();
    pcVar3 = (code *)swi(3);
    (*pcVar3)();
    return;
  }
                    // WARNING: Could not recover jumptable at 0x0046a768. Too many branches
                    // WARNING: Treating indirect jump as call
  (**in_stack_00000008)();
  return;
}



// WARNING: Unknown calling convention

void runtime_morestack(void)

{
  int *piVar1;
  int iVar2;
  undefined8 in_RDX;
  undefined8 unaff_RBP;
  int in_FS_OFFSET;
  undefined8 unaff_retaddr;
  int in_stack_00000008;
  
