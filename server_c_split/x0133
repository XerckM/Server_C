        return extraout_RAX;
      }
    }
    runtime_convT64(val,x);
  }
  return extraout_RAX;
}



void * syscall_mmap(void *__addr,size_t __len,int __prot,int __flags,int __fd,__off_t __offset)

{
  void *extraout_RAX;
  uintptr r0;
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_R10;
  uintptr extraout_R10;
  uintptr in_R11;
  uintptr extraout_R11;
  int unaff_R14;
  syscall_Errno in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_R10 = extraout_R10;
    in_R11 = extraout_R11;
  }
  syscall_Syscall6(9,(uintptr)__addr,__len,__prot,__flags,__fd,__offset,in_R10,in_R11,
                   in_stack_ffffffffffffffb8);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return extraout_RAX;
      }
    }
    else {
      if (val == 0xb) {
        return extraout_RAX;
      }
      if (val == 0x16) {
        return extraout_RAX;
      }
    }
    runtime_convT64(val,x);
  }
  return extraout_RAX;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

int syscall_init(EVP_PKEY_CTX *ctx)

{
  __string ~r0;
  runtime_hmap *extraout_RAX;
  runtime_hmap *extraout_RAX_00;
  runtime_hmap *~r0_00;
  int extraout_RAX_01;
  int extraout_RAX_02;
  int iVar1;
  int extraout_RCX;
  int extraout_RBX;
  string *unaff_RBP;
  runtime_hmap **extraout_R11;
  int *extraout_R11_00;
  int unaff_R14;
  undefined in_stack_00000000 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0._8_16_ = in_stack_00000000;
  ~r0.array = unaff_RBP;
  syscall_runtime_envs(~r0);
  ~r0_00 = extraout_RAX;
  syscall_envs.len = extraout_RBX;
  syscall_envs.cap = extraout_RCX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_00;
    extraout_R11[1] = (runtime_hmap *)syscall_envs.array;
    ~r0_00 = extraout_RAX_00;
  }
  syscall_envs.array = (string *)~r0_00;
  runtime_makemap_small(~r0_00);
  iVar1 = extraout_RAX_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_02;
    extraout_R11_00[1] = DAT_00c49d68;
    iVar1 = extraout_RAX_02;
  }
  DAT_00c49d68 = iVar1;
  return iVar1;
}



void syscall_RawSyscall(uintptr trap,uintptr a1,uintptr a2,uintptr a3,uintptr r1,uintptr r2,
                       syscall_Errno err)

{
  uintptr in_R10;
  uintptr in_R11;
  uintptr in_stack_ffffffffffffffc0;
  
  syscall_RawSyscall6(trap,a1,a2,a3,0,0,0,in_R10,in_R11,in_stack_ffffffffffffffc0);
  return;
}



void syscall_Syscall(uintptr trap,uintptr a1,uintptr a2,uintptr a3,uintptr r1,uintptr r2,
                    syscall_Errno err)

{
  uintptr r1_00;
  uintptr r2_00;
  uintptr in_stack_ffffffffffffff98;
  
  runtime_entersyscall();
  syscall_RawSyscall6(trap,a1,a2,a3,0,0,0,r1_00,r2_00,in_stack_ffffffffffffff98);
  runtime_exitsyscall();
  return;
}



void syscall_Syscall6(uintptr trap,uintptr a1,uintptr a2,uintptr a3,uintptr a4,uintptr a5,uintptr a6
                     ,uintptr r1,uintptr r2,syscall_Errno err)

{
  uintptr r1_00;
  uintptr r2_00;
  uintptr in_stack_ffffffffffffff80;
  
  runtime_entersyscall();
  syscall_RawSyscall6(trap,a1,a2,a3,a4,a5,a6,r1_00,r2_00,in_stack_ffffffffffffff80);
  runtime_exitsyscall();
  return;
}



void type__eq_syscall_SockaddrLinklayer
               (syscall_SockaddrLinklayer *p,syscall_SockaddrLinklayer *q,bool r)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (q->Protocol == p->Protocol) {
    runtime_memequal();
  }
  return;
}



void type__eq_syscall_SockaddrUnix(syscall_SockaddrUnix *p,syscall_SockaddrUnix *q,bool r)

{
  char extraout_AL;
  int unaff_R14;
  syscall_SockaddrUnix *psStack0000000000000008;
  syscall_SockaddrUnix *psStack0000000000000010;
  
  psStack0000000000000008 = p;
  psStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((psStack0000000000000010->Name).len == (psStack0000000000000008->Name).len) &&
     (runtime_memequal(), extraout_AL != '\0')) {
    runtime_memequal();
  }
  return;
}



void type__eq_syscall_SockaddrInet4(syscall_SockaddrInet4 *p,syscall_SockaddrInet4 *q,bool r)

{
  if ((q->Port == p->Port) && (*(sdword *)q->Addr == *(sdword *)p->Addr)) {
    return;
  }
  return;
}



void syscall___Errno__Error(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  syscall_Errno *in_RAX;
  int unaff_RBP;
  int unaff_R14;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (syscall_Errno *)~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xfffffffffffffff0;
  }
  if (in_RAX != (syscall_Errno *)0x0) {
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    syscall_Errno_Error(*in_RAX,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void syscall___Errno__Is(error target,bool ~r0)

{
  error **ppeVar1;
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  undefined7 in_register_00000001;
  runtime_itab *prVar2;
  void *in_RCX;
  runtime_itab *in_RBX;
  undefined in_DIL;
  undefined extraout_DIL;
  undefined extraout_DIL_00;
  undefined extraout_DIL_01;
  undefined extraout_DIL_02;
  int unaff_R14;
  void *pvStack0000000000000018;
  error eStack_30;
  internal_abi_InterfaceType *local_18;
  runtime_itab *local_10;
  
  prVar2 = (runtime_itab *)CONCAT71(in_register_00000001,~r0);
  pvStack0000000000000018 = in_RCX;
  target.data = in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    target.tab = prVar2;
    runtime_morestack_noctxt();
    prVar2 = target.tab;
    in_DIL = extraout_DIL_02;
  }
  ppeVar1 = *(error ***)(unaff_R14 + 0x20);
  if ((ppeVar1 != (error **)0x0) && (*ppeVar1 == &target)) {
    *ppeVar1 = &eStack_30;
  }
  if (prVar2 != (runtime_itab *)0x0) {
    local_18 = prVar2->inter;
    local_10 = (runtime_itab *)target.data;
    if ((((internal_oserror_ErrPermission.tab != (runtime_itab *)target.data) ||
         (runtime_ifaceeq((runtime_itab *)target.data,pvStack0000000000000018,
                          internal_oserror_ErrPermission.data,(bool)in_DIL), in_DIL = extraout_DIL,
         extraout_AL == '\0')) &&
        ((internal_oserror_ErrExist.tab != local_10 ||
         (runtime_ifaceeq(local_10,pvStack0000000000000018,internal_oserror_ErrExist.data,
                          (bool)in_DIL), in_DIL = extraout_DIL_00, extraout_AL_00 == '\0')))) &&
       (((internal_oserror_ErrNotExist.tab != local_10 ||
         (runtime_ifaceeq(local_10,pvStack0000000000000018,internal_oserror_ErrNotExist.data,
                          (bool)in_DIL), in_DIL = extraout_DIL_01, extraout_AL_01 == '\0')) &&
        (errors_ErrUnsupported.tab == local_10)))) {
      runtime_ifaceeq(local_10,pvStack0000000000000018,errors_ErrUnsupported.data,(bool)in_DIL);
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void syscall___Errno__Temporary(bool ~r0)

{
  int *piVar1;
  undefined7 in_register_00000001;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (CONCAT71(in_register_00000001,~r0) == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  return;
}



void syscall___Errno__Timeout(bool ~r0)

{
  int *piVar1;
  undefined7 in_register_00000001;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (CONCAT71(in_register_00000001,~r0) != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void syscall_Syscall(uintptr trap,uintptr a1,uintptr a2,uintptr a3,uintptr r1,uintptr r2,
                    syscall_Errno err)

{
  uintptr in_stack_00000008;
  uintptr in_stack_00000010;
  uintptr in_stack_00000018;
  uintptr in_stack_00000020;
  
  syscall_Syscall(in_stack_00000008,in_stack_00000010,in_stack_00000018,in_stack_00000020,r1,r2,err)
  ;
  return;
}



void syscall_Syscall6(uintptr trap,uintptr a1,uintptr a2,uintptr a3,uintptr a4,uintptr a5,uintptr a6
                     ,uintptr r1,uintptr r2,syscall_Errno err)

{
  uintptr in_stack_00000010;
  uintptr in_stack_00000018;
  uintptr in_stack_00000020;
  uintptr in_stack_00000028;
  uintptr in_stack_00000030;
  uintptr in_stack_00000038;
  syscall_Errno in_stack_ffffffffffffffc0;
  
  syscall_Syscall6(err,in_stack_00000010,in_stack_00000018,in_stack_00000020,in_stack_00000028,
                   in_stack_00000030,in_stack_00000038,r1,r2,in_stack_ffffffffffffffc0);
  return;
}



void time_nextStdChunk(string layout,string prefix,int std,string suffix)

{
  uint uVar1;
  uint uVar2;
  byte bVar3;
  char cVar4;
  int i;
  uint in_RBX;
  uint8 c;
  int j;
  uint8 c_1;
  int code;
  int std_1;
  uint8 c_2;
  
  i = 0;
  do {
    if ((int)in_RBX <= i) {
      return;
    }
    bVar3 = *(byte *)(std + i);
    if (bVar3 < 0x34) {
      if (bVar3 < 0x2f) {
        if (bVar3 == 0x2c) {
LAB_0047f40f:
          j = i + 1;
          if (j < (int)in_RBX) {
            if (in_RBX <= (uint)j) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            cVar4 = *(char *)(i + 1 + std);
            if ((cVar4 == '0') || (cVar4 == '9')) {
              for (; (j < (int)in_RBX && (*(char *)(j + std) == cVar4)); j = j + 1) {
              }
              if ((int)in_RBX <= j) {
code_r0x004800c6:
                if ((uint)j <= in_RBX) {
                  return;
                }
                    // WARNING: Subroutine does not return
                runtime_panicSliceB();
              }
              if (in_RBX <= (uint)j) {
                    // WARNING: Subroutine does not return
                runtime_panicIndex();
              }
              c_2 = *(char *)(j + std) - 0x30;
              if (9 < c_2) goto code_r0x004800c6;
            }
          }
        }
        else if (bVar3 == 0x2d) {
          uVar1 = i + 7;
          if ((int)uVar1 <= (int)in_RBX) {
            if (in_RBX < uVar1) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceAlen();
            }
            if (uVar1 < (uint)i) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            if (((*(sdword *)(i + std) == 0x3037302d) && (*(short *)(i + 4 + std) == 0x3030)) &&
               (*(char *)(i + 6 + std) == '0')) {
              return;
            }
          }
          uVar1 = i + 9;
          if ((int)uVar1 <= (int)in_RBX) {
            if (in_RBX < uVar1) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceAlen();
            }
            if (uVar1 < (uint)i) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            if ((*(int *)(i + std) == 0x303a30303a37302d) && (*(char *)(i + 8 + std) == '0')) {
              return;
            }
          }
          uVar1 = i + 5;
          if ((int)uVar1 <= (int)in_RBX) {
            if (in_RBX < uVar1) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceAlen();
            }
            if (uVar1 < (uint)i) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            if ((*(sdword *)(i + std) == 0x3037302d) && (*(char *)(i + 4 + std) == '0')) {
              return;
            }
          }
          uVar1 = i + 6;
          if ((int)uVar1 <= (int)in_RBX) {
            if (in_RBX < uVar1) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceAlen();
            }
            if (uVar1 < (uint)i) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            if ((*(sdword *)(i + std) == 0x3a37302d) && (*(short *)(i + 4 + std) == 0x3030)) {
              return;
            }
          }
          uVar1 = i + 3;
          if ((int)uVar1 <= (int)in_RBX) {
            if (in_RBX < uVar1) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceAlen();
            }
            if (uVar1 < (uint)i) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            if ((*(short *)(i + std) == 0x302d) && (*(char *)(i + 2 + std) == '7')) {
              return;
            }
          }
        }
        else if (bVar3 == 0x2e) goto LAB_0047f40f;
      }
      else {
        if (0x31 < bVar3) {
          if (bVar3 != 0x32) {
            return;
          }
          uVar1 = i + 4;
          if ((int)uVar1 <= (int)in_RBX) {
            if (in_RBX < uVar1) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceAlen();
            }
            if (uVar1 < (uint)i) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            if (*(sdword *)(i + std) == 0x36303032) {
              return;
            }
          }
          return;
        }
        if (bVar3 == 0x30) {
          uVar1 = i + 2;
          if ((int)uVar1 <= (int)in_RBX) {
            if (in_RBX <= i + 1U) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            bVar3 = *(byte *)(i + 1 + std);
            if ((0x30 < bVar3) && (bVar3 < 0x37)) {
              if (in_RBX < uVar1) {
                    // WARNING: Subroutine does not return
                runtime_panicSliceB();
              }
              if ((byte)(bVar3 - 0x31) < 6) {
                return;
              }
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
          }
          if ((int)(i + 3U) <= (int)in_RBX) {
            if (in_RBX <= i + 1U) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            if (*(char *)(i + 1 + std) == '0') {
              if (in_RBX <= uVar1) {
                    // WARNING: Subroutine does not return
                runtime_panicIndex();
              }
              if (*(char *)(i + 2 + std) == '2') {
                if (i + 3U <= in_RBX) {
                  return;
                }
                    // WARNING: Subroutine does not return
                runtime_panicSliceB();
              }
            }
          }
        }
        else if (bVar3 == 0x31) {
          if ((int)(i + 2U) <= (int)in_RBX) {
            if (in_RBX <= i + 1U) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            if (*(char *)(i + 1 + std) == '5') {
              if (i + 2U <= in_RBX) {
                return;
              }
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
          }
          return;
        }
      }
    }
    else if (bVar3 < 0x4e) {
      if (bVar3 < 0x36) {
        if (bVar3 == 0x34) {
          return;
        }
        return;
      }
      if (bVar3 == 0x4a) {
        uVar1 = i + 3;
        if ((int)uVar1 <= (int)in_RBX) {
          if (in_RBX < uVar1) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceAlen();
          }
          if (uVar1 < (uint)i) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          if ((*(short *)(i + std) == 0x614a) && (*(char *)(i + 2 + std) == 'n')) {
            uVar2 = i + 7;
            if ((int)uVar2 <= (int)in_RBX) {
              if (in_RBX < uVar2) {
                    // WARNING: Subroutine does not return
                runtime_panicSliceAlen();
              }
              if (uVar2 < (uint)i) {
                    // WARNING: Subroutine does not return
                runtime_panicSliceB();
              }
              if (((*(sdword *)(i + std) == 0x756e614a) && (*(short *)(i + 4 + std) == 0x7261)) &&
                 (*(char *)(i + 6 + std) == 'y')) {
                return;
              }
            }
            if ((in_RBX - i == 3) ||
               (c = *(char *)(std + (uVar1 & (int)-((in_RBX - i) + -3) >> 0x3f)) + 0x9f, 0x19 < c))
            {
              return;
            }
          }
        }
      }
      else if (bVar3 == 0x4d) {
        uVar1 = i + 3;
        if ((int)uVar1 <= (int)in_RBX) {
          if (in_RBX < uVar1) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceAlen();
          }
          if (uVar1 < (uint)i) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          if ((*(short *)(i + std) == 0x6f4d) && (*(char *)(i + 2 + std) == 'n')) {
            uVar2 = i + 6;
            if ((int)uVar2 <= (int)in_RBX) {
              if (in_RBX < uVar2) {
                    // WARNING: Subroutine does not return
                runtime_panicSliceAlen();
              }
              if (uVar2 < (uint)i) {
                    // WARNING: Subroutine does not return
                runtime_panicSliceB();
              }
              if ((*(sdword *)(i + std) == 0x646e6f4d) && (*(short *)(i + 4 + std) == 0x7961)) {
                return;
              }
            }
            if ((in_RBX - i == 3) ||
               (c_1 = *(char *)(std + ((int)-((in_RBX - i) + -3) >> 0x3f & uVar1)) + 0x9f,
               0x19 < c_1)) {
              return;
            }
          }
          if ((*(short *)(i + std) == 0x534d) && (*(char *)(i + 2 + std) == 'T')) {
            return;
          }
        }
      }
    }
    else if (bVar3 < 0x5b) {
      if (bVar3 == 0x50) {
        if ((int)(i + 2U) <= (int)in_RBX) {
          if (in_RBX <= i + 1U) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          if (*(char *)(i + 1 + std) == 'M') {
            if (i + 2U <= in_RBX) {
              return;
            }
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
        }
      }
      else if (bVar3 == 0x5a) {
        uVar1 = i + 7;
        if ((int)uVar1 <= (int)in_RBX) {
          if (in_RBX < uVar1) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceAlen();
          }
          if (uVar1 < (uint)i) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          if (((*(sdword *)(i + std) == 0x3037305a) && (*(short *)(i + 4 + std) == 0x3030)) &&
             (*(char *)(i + 6 + std) == '0')) {
            return;
          }
        }
        uVar1 = i + 9;
        if ((int)uVar1 <= (int)in_RBX) {
          if (in_RBX < uVar1) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceAlen();
          }
          if (uVar1 < (uint)i) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          if ((*(int *)(i + std) == 0x303a30303a37305a) && (*(char *)(i + 8 + std) == '0')) {
            return;
          }
        }
        uVar1 = i + 5;
        if ((int)uVar1 <= (int)in_RBX) {
          if (in_RBX < uVar1) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceAlen();
          }
          if (uVar1 < (uint)i) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          if ((*(sdword *)(i + std) == 0x3037305a) && (*(char *)(i + 4 + std) == '0')) {
            return;
          }
        }
        uVar1 = i + 6;
        if ((int)uVar1 <= (int)in_RBX) {
          if (in_RBX < uVar1) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceAlen();
          }
          if (uVar1 < (uint)i) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          if ((*(sdword *)(i + std) == 0x3a37305a) && (*(short *)(i + 4 + std) == 0x3030)) {
            return;
          }
        }
        uVar1 = i + 3;
        if ((int)uVar1 <= (int)in_RBX) {
          if (in_RBX < uVar1) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceAlen();
          }
          if (uVar1 < (uint)i) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          if ((*(short *)(i + std) == 0x305a) && (*(char *)(i + 2 + std) == '7')) {
            return;
          }
        }
      }
    }
    else if (bVar3 == 0x5f) {
      uVar1 = i + 2;
      if ((int)uVar1 <= (int)in_RBX) {
        if (in_RBX <= i + 1U) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        if (*(char *)(i + 1 + std) == '2') {
          uVar2 = i + 5;
          if ((int)uVar2 <= (int)in_RBX) {
            if (in_RBX < uVar2) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceAlen();
            }
            if (uVar2 < i + 1U) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            if (*(sdword *)(i + 1 + std) == 0x36303032) {
              return;
            }
          }
          if (uVar1 <= in_RBX) {
            return;
          }
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
      }
      if ((int)(i + 3U) <= (int)in_RBX) {
        if (in_RBX <= i + 1U) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        if (*(char *)(i + 1 + std) == '_') {
          if (in_RBX <= uVar1) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          if (*(char *)(i + 2 + std) == '2') {
            if (i + 3U <= in_RBX) {
              return;
            }
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
        }
      }
    }
    else if ((bVar3 == 0x70) && ((int)(i + 2U) <= (int)in_RBX)) {
      if (in_RBX <= i + 1U) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if (*(char *)(i + 1 + std) == 'm') {
        if (i + 2U <= in_RBX) {
          return;
        }
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
    }
    i = i + 1;
  } while( true );
}



void time_lookup(__string tab,string val,int ~r0,string ~r1,error ~r2)

{
  uint uVar1;
  int i_1;
  int i;
  int in_RBX;
  int in_RSI;
  int in_RDI;
  uint8 c1;
  byte bVar2;
  uint8 c2;
  
  i = 0;
  do {
    if (in_RBX <= i) {
      return;
    }
    uVar1 = *(uint *)(~r0 + 8);
    if ((int)uVar1 <= in_RSI) {
      i_1 = 0;
      while( true ) {
        if ((int)uVar1 <= i_1) {
          return;
        }
        if (uVar1 <= (uint)i_1) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        if ((*(byte *)(*(int *)~r0 + i_1) != *(byte *)(in_RDI + i_1)) &&
           ((bVar2 = *(byte *)(in_RDI + i_1) | 0x20, (*(byte *)(*(int *)~r0 + i_1) | 0x20) != bVar2
            || (0x19 < (byte)(bVar2 + 0x9f))))) break;
        i_1 = i_1 + 1;
      }
    }
    ~r0 = ~r0 + 0x10;
    i = i + 1;
  } while( true );
}



// Local variable u:uint[RDI:8] conflicts with parameter, skipped.

void time_appendInt(__uint8 b,int x,int width,__uint8 ~r0)

{
  undefined auVar1 [16];
  void *extraout_RAX;
  void *extraout_RAX_00;
  void *extraout_RAX_01;
  void *extraout_RAX_02;
  void *extraout_RAX_03;
  uint in_RCX;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint uVar2;
  uint extraout_RBX;
  uint uVar3;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  uint newLen;
  uint extraout_RBX_03;
  int in_RSI;
  int iVar4;
  int pad;
  int i;
  uint u2;
  int n;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffff60;
  uint local_20;
  uint local_18;
  void *local_10;
  
  while (&local_20 <= *(uint **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((int)u2 < 0) {
    width = width + 1;
    if (in_RCX < (uint)width) {
      runtime_growslice((void *)x,width,in_RCX,1,(internal_abi_Type *)&DAT_00807920,
                        in_stack_ffffffffffffff60);
      x = (int)extraout_RAX;
      in_RCX = extraout_RCX;
      width = extraout_RBX;
    }
    *(undefined *)((width - 1U) + x) = 0x2d;
    u2 = -u2;
  }
  if ((in_RSI == 2) && (u2 < 100)) {
    uVar3 = width + 2;
    local_18 = u2 / 10;
    if (in_RCX < uVar3) {
      runtime_growslice((void *)x,uVar3,in_RCX,2,(internal_abi_Type *)&DAT_00807920,
                        in_stack_ffffffffffffff60);
      uVar3 = extraout_RBX_00;
      x = (int)extraout_RAX_00;
    }
    *(char *)((uVar3 - 2) + x) = (char)local_18 + '0';
    *(char *)((uVar3 - 1) + x) = (char)(u2 % 10) + '0';
    return;
  }
  if ((in_RSI == 4) && (u2 < 10000)) {
    uVar3 = width + 4;
    auVar1._8_8_ = 0;
    auVar1._0_8_ = u2 >> 1;
    local_18 = SUB168(ZEXT816(0x83126e978d4fdf3c) * auVar1,8);
    if (in_RCX < uVar3) {
      runtime_growslice((void *)x,uVar3,in_RCX,4,(internal_abi_Type *)&DAT_00807920,
                        in_stack_ffffffffffffff60);
      uVar3 = extraout_RBX_01;
      x = (int)extraout_RAX_01;
    }
    *(char *)((uVar3 - 4) + x) = (char)(local_18 >> 8) + '0';
    *(char *)((uVar3 - 3) + x) = (char)(((u2 >> 1) / 0x32) % 10) + '0';
    *(char *)((uVar3 - 2) + x) = (char)((u2 / 10) % 10) + '0';
    *(char *)((uVar3 - 1) + x) = (char)(u2 % 10) + '0';
    return;
  }
  uVar3 = (uint)(u2 == 0);
  for (uVar2 = u2; uVar2 != 0; uVar2 = uVar2 / 10) {
    uVar3 = uVar3 + 1;
  }
  local_20 = u2;
  for (iVar4 = in_RSI - uVar3; 0 < iVar4; iVar4 = iVar4 + -1) {
    width = width + 1;
    if (in_RCX < (uint)width) {
      runtime_growslice((void *)x,width,in_RCX,1,(internal_abi_Type *)&DAT_00807920,
                        in_stack_ffffffffffffff60);
      x = (int)extraout_RAX_02;
      in_RCX = extraout_RCX_00;
      u2 = local_20;
      width = extraout_RBX_02;
    }
    *(undefined *)((width - 1U) + x) = 0x30;
  }
  newLen = width + uVar3;
  if ((int)in_RCX < (int)newLen) {
    if ((int)uVar3 < 0) {
                    // WARNING: Subroutine does not return
      runtime_panicmakeslicelen();
    }
    if (in_RCX < newLen) {
      runtime_growslice((void *)x,newLen,in_RCX,uVar3,(internal_abi_Type *)&DAT_00807920,
                        in_stack_ffffffffffffff60);
      x = (int)extraout_RAX_03;
      newLen = extraout_RBX_03;
    }
    local_10 = (void *)x;
    runtime_memclrNoHeapPointers();
    u2 = local_20;
    uVar3 = newLen;
    x = (int)local_10;
  }
  else {
    uVar3 = newLen;
    if (in_RCX < newLen) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
  }
  while( true ) {
    newLen = newLen - 1;
    if ((u2 < 10) || ((int)newLen < 1)) break;
    if (uVar3 <= newLen) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(char *)(x + newLen) = (char)u2 + (char)(u2 / 10) * -10 + '0';
    u2 = u2 / 10;
  }
  if (uVar3 <= newLen) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  *(char *)(x + newLen) = (char)u2 + '0';
  return;
}



void time_appendNano(__uint8 b,int nanosec,int std,__uint8 ~r0)

{
  int iVar1;
  int extraout_RAX;
  int extraout_RAX_00;
  uint in_RCX;
  uint extraout_RCX;
