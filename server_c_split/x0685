    ~r0_00.str._0_7_ = in_stack_ffffffffffffff98;
    ~r0_00.len = iVar2;
    strings_TrimLeft(in_stack_ffffffffffffff78,in_stack_ffffffffffffff88,~r0_00);
    uVar3 = (iVar2 - extraout_RBX) + ptStack0000000000000008->pos;
    ptStack0000000000000008->pos = uVar3;
    if ((uint)(ptStack0000000000000008->input).len < uVar3) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    uVar1 = ptStack0000000000000008->start;
    if (uVar3 < uVar1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    strings_Count(in_stack_ffffffffffffff78,in_stack_ffffffffffffff88,
                  (int)((ptStack0000000000000008->input).str +
                       ((int)-(uVar3 - uVar1) >> 0x3f & uVar1)));
    iVar2 = extraout_RAX_00 + ptStack0000000000000008->line;
    ptStack0000000000000008->line = iVar2;
    ptStack0000000000000008->start = ptStack0000000000000008->pos;
    ptStack0000000000000008->startLine = iVar2;
  }
  ptStack0000000000000008->insideAction = false;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i);
  }
  (ptStack0000000000000008->item).typ = i.typ;
  *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i.pos;
  *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i.pos._4_4_;
  (ptStack0000000000000008->item).val.str = i.val.str;
  (ptStack0000000000000008->item).val.len = i.val.len;
  *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i.line;
  *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i.line._4_4_;
  return;
}



void text_template_parse_lexInsideAction
               (text_template_parse_lexer *l,text_template_parse_stateFn **~r0)

{
  uint uVar1;
  uint uVar2;
  char extraout_AL;
  bool delim;
  uint32 val;
  int32 r;
  char extraout_AL_00;
  char extraout_AL_01;
  sdword extraout_EAX;
  uint8 r_1;
  char cVar3;
  undefined8 in_RCX;
  undefined8 extraout_RCX;
  int32 ~r0_00;
  int32 ~r0_01;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *x;
  text_template_parse_stateFn **extraout_RBX_01;
  int iVar4;
  int unaff_R14;
  text_template_parse_lexer *ptStack0000000000000008;
  string in_stack_fffffffffffffec0;
  __interface___ in_stack_fffffffffffffed0;
  text_template_parse_item i_4;
  text_template_parse_item i_3;
  text_template_parse_item i_2;
  text_template_parse_item i_1;
  text_template_parse_item i_5;
  text_template_parse_item i;
  
  ptStack0000000000000008 = l;
  while (&i_3.val <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RCX = extraout_RCX;
    ~r0 = extraout_RBX_01;
  }
  text_template_parse___lexer__atRightDelim(ptStack0000000000000008,SUB81(~r0,0),SUB81(in_RCX,0));
  if (extraout_AL != '\0') {
    if (ptStack0000000000000008->parenDepth != 0) {
      text_template_parse___lexer__errorf
                (ptStack0000000000000008,in_stack_fffffffffffffec0,in_stack_fffffffffffffed0,
                 (text_template_parse_stateFn **)&DAT_008b89fc);
      return;
    }
    return;
  }
  text_template_parse___lexer__next(ptStack0000000000000008,~r0_00);
  if (val == 0xffffffff) {
    text_template_parse___lexer__errorf
              (ptStack0000000000000008,in_stack_fffffffffffffec0,in_stack_fffffffffffffed0,
               (text_template_parse_stateFn **)0x8b60c5);
    return;
  }
  if ((((val == 0x20) || (val == 9)) || (val == 0xd)) || (val == 10)) {
    text_template_parse___lexer__backup(ptStack0000000000000008);
    return;
  }
  if (val == 0x3d) {
    uVar1 = ptStack0000000000000008->pos;
    if ((uint)(ptStack0000000000000008->input).len < uVar1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    uVar2 = ptStack0000000000000008->start;
    if (uVar1 < uVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    i.typ = 6;
    i.pos._0_4_ = (undefined4)ptStack0000000000000008->start;
    i.pos._4_4_ = (undefined4)((uint)ptStack0000000000000008->start >> 0x20);
    i.val.str = (ptStack0000000000000008->input).str +
                (uVar2 & -(int)(uint8 *)(uVar1 - uVar2) >> 0x3f);
    i.line = ptStack0000000000000008->startLine;
    i.val.len = (int)(uint8 *)(uVar1 - uVar2);
    ptStack0000000000000008->start = ptStack0000000000000008->pos;
    ptStack0000000000000008->startLine = ptStack0000000000000008->line;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i);
    }
    (ptStack0000000000000008->item).typ = i.typ;
    *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i.pos;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i.pos._4_4_;
    (ptStack0000000000000008->item).val.str = i.val.str;
    *(undefined4 *)&(ptStack0000000000000008->item).val.len = (undefined4)i.val.len;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).val.len + 4) = i.val.len._4_4_;
    *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i.line;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i.line._4_4_;
    return;
  }
  if (val != 0x3a) {
    if (val == 0x7c) {
      uVar1 = ptStack0000000000000008->pos;
      if ((uint)(ptStack0000000000000008->input).len < uVar1) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAlen();
      }
      uVar2 = ptStack0000000000000008->start;
      if (uVar1 < uVar2) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      i_1.typ = 0xe;
      i_1.pos._0_4_ = (undefined4)ptStack0000000000000008->start;
      i_1.pos._4_4_ = (undefined4)((uint)ptStack0000000000000008->start >> 0x20);
      i_1.val.str = (ptStack0000000000000008->input).str +
                    (uVar2 & -(int)(uint8 *)(uVar1 - uVar2) >> 0x3f);
      i_1.line = ptStack0000000000000008->startLine;
      i_1.val.len = (int)(uint8 *)(uVar1 - uVar2);
      ptStack0000000000000008->start = ptStack0000000000000008->pos;
      ptStack0000000000000008->startLine = ptStack0000000000000008->line;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i_1);
      }
      (ptStack0000000000000008->item).typ = i_1.typ;
      *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i_1.pos;
      *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i_1.pos._4_4_;
      (ptStack0000000000000008->item).val.str = i_1.val.str;
      *(undefined4 *)&(ptStack0000000000000008->item).val.len = (undefined4)i_1.val.len;
      *(undefined4 *)((int)&(ptStack0000000000000008->item).val.len + 4) = i_1.val.len._4_4_;
      *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i_1.line;
      *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i_1.line._4_4_;
      return;
    }
    if (val == 0x22) {
      return;
    }
    if (val == 0x60) {
      return;
    }
    if (val == 0x24) {
      return;
    }
    if (val == 0x27) {
      return;
    }
    if (val == 0x2e) {
      uVar1 = ptStack0000000000000008->pos;
      uVar2 = (ptStack0000000000000008->input).len;
      if ((int)uVar1 < (int)uVar2) {
        if (uVar2 <= uVar1) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        r_1 = (ptStack0000000000000008->input).str[uVar1] - 0x30;
        if (9 < r_1) {
          return;
        }
      }
    }
    else if (((val != 0x2b) && (val != 0x2d)) && (9 < (dword)(val - 0x30))) {
      text_template_parse_isAlphaNumeric(val,SUB41(~r0_01,0));
      if (extraout_AL_00 != '\0') {
        text_template_parse___lexer__backup(ptStack0000000000000008);
        return;
      }
      if (val == 0x28) {
        ptStack0000000000000008->parenDepth = ptStack0000000000000008->parenDepth + 1;
        uVar1 = ptStack0000000000000008->pos;
        if ((uint)(ptStack0000000000000008->input).len < uVar1) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAlen();
        }
        uVar2 = ptStack0000000000000008->start;
        if (uVar1 < uVar2) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        i_2.typ = 0xc;
        i_2.pos._0_4_ = (undefined4)ptStack0000000000000008->start;
        i_2.pos._4_4_ = (undefined4)((uint)ptStack0000000000000008->start >> 0x20);
        i_2.val.str = (ptStack0000000000000008->input).str +
                      (uVar2 & -(int)(uint8 *)(uVar1 - uVar2) >> 0x3f);
        i_2.line = ptStack0000000000000008->startLine;
        i_2.val.len = (int)(uint8 *)(uVar1 - uVar2);
        ptStack0000000000000008->start = ptStack0000000000000008->pos;
        ptStack0000000000000008->startLine = ptStack0000000000000008->line;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i_2);
        }
        (ptStack0000000000000008->item).typ = i_2.typ;
        *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i_2.pos;
        *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i_2.pos._4_4_;
        (ptStack0000000000000008->item).val.str = i_2.val.str;
        *(undefined4 *)&(ptStack0000000000000008->item).val.len = (undefined4)i_2.val.len;
        *(undefined4 *)((int)&(ptStack0000000000000008->item).val.len + 4) = i_2.val.len._4_4_;
        *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i_2.line;
        *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i_2.line._4_4_;
        return;
      }
      if (val != 0x29) {
        if ((sdword)val < 0x80) {
          unicode_IsPrint(val,SUB81(extraout_RBX,0));
          x = extraout_RBX_00;
          cVar3 = extraout_AL_01;
        }
        else {
          cVar3 = '\0';
          x = extraout_RBX;
        }
        if (cVar3 == '\0') {
          runtime_convT32(val,x);
          text_template_parse___lexer__errorf
                    (ptStack0000000000000008,in_stack_fffffffffffffec0,in_stack_fffffffffffffed0,
                     (text_template_parse_stateFn **)&DAT_008c350e);
          return;
        }
        uVar1 = ptStack0000000000000008->pos;
        if ((uint)(ptStack0000000000000008->input).len < uVar1) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAlen();
        }
        uVar2 = ptStack0000000000000008->start;
        if (uVar1 < uVar2) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        i_4.typ = 2;
        i_4.pos._0_4_ = (undefined4)ptStack0000000000000008->start;
        i_4.pos._4_4_ = (undefined4)((uint)ptStack0000000000000008->start >> 0x20);
        i_4.val.str = (ptStack0000000000000008->input).str +
                      (uVar2 & -(int)(uint8 *)(uVar1 - uVar2) >> 0x3f);
        i_4.line = ptStack0000000000000008->startLine;
        i_4.val.len = (int)(uint8 *)(uVar1 - uVar2);
        ptStack0000000000000008->start = ptStack0000000000000008->pos;
        ptStack0000000000000008->startLine = ptStack0000000000000008->line;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i_4);
        }
        (ptStack0000000000000008->item).typ = i_4.typ;
        *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i_4.pos;
        *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i_4.pos._4_4_;
        (ptStack0000000000000008->item).val.str = i_4.val.str;
        *(undefined4 *)&(ptStack0000000000000008->item).val.len = (undefined4)i_4.val.len;
        *(undefined4 *)((int)&(ptStack0000000000000008->item).val.len + 4) = i_4.val.len._4_4_;
        *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i_4.line;
        *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i_4.line._4_4_;
        return;
      }
      iVar4 = ptStack0000000000000008->parenDepth + -1;
      ptStack0000000000000008->parenDepth = iVar4;
      if (iVar4 < 0) {
        text_template_parse___lexer__errorf
                  (ptStack0000000000000008,in_stack_fffffffffffffec0,in_stack_fffffffffffffed0,
                   (text_template_parse_stateFn **)&DAT_008ba5bd);
        return;
      }
      uVar1 = ptStack0000000000000008->pos;
      if ((uint)(ptStack0000000000000008->input).len < uVar1) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAlen();
      }
      uVar2 = ptStack0000000000000008->start;
      if (uVar1 < uVar2) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      i_3.typ = 0x11;
      i_3.pos._0_4_ = (undefined4)ptStack0000000000000008->start;
      i_3.pos._4_4_ = (undefined4)((uint)ptStack0000000000000008->start >> 0x20);
      i_3.val.str = (ptStack0000000000000008->input).str +
                    (uVar2 & -(int)(uint8 *)(uVar1 - uVar2) >> 0x3f);
      i_3.line = ptStack0000000000000008->startLine;
      i_3.val.len = (int)(uint8 *)(uVar1 - uVar2);
      ptStack0000000000000008->start = ptStack0000000000000008->pos;
      ptStack0000000000000008->startLine = ptStack0000000000000008->line;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i_3);
      }
      (ptStack0000000000000008->item).typ = i_3.typ;
      *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i_3.pos;
      *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i_3.pos._4_4_;
      (ptStack0000000000000008->item).val.str = i_3.val.str;
      *(undefined4 *)&(ptStack0000000000000008->item).val.len = (undefined4)i_3.val.len;
      *(undefined4 *)((int)&(ptStack0000000000000008->item).val.len + 4) = i_3.val.len._4_4_;
      *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i_3.line;
      *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i_3.line._4_4_;
      return;
    }
    text_template_parse___lexer__backup(ptStack0000000000000008);
    return;
  }
  text_template_parse___lexer__next(ptStack0000000000000008,~r0_01);
  if (extraout_EAX != 0x3d) {
    text_template_parse___lexer__errorf
              (ptStack0000000000000008,in_stack_fffffffffffffec0,in_stack_fffffffffffffed0,
               (text_template_parse_stateFn **)&DAT_008b4079);
    return;
  }
  uVar1 = ptStack0000000000000008->pos;
  if ((uint)(ptStack0000000000000008->input).len < uVar1) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  uVar2 = ptStack0000000000000008->start;
  if (uVar1 < uVar2) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  i_5.typ = 7;
  i_5.pos._0_4_ = (undefined4)ptStack0000000000000008->start;
  i_5.pos._4_4_ = (undefined4)((uint)ptStack0000000000000008->start >> 0x20);
  i_5.val.str = (ptStack0000000000000008->input).str +
                (uVar2 & -(int)(uint8 *)(uVar1 - uVar2) >> 0x3f);
  i_5.line = ptStack0000000000000008->startLine;
  i_5.val.len = (int)(uint8 *)(uVar1 - uVar2);
  ptStack0000000000000008->start = ptStack0000000000000008->pos;
  ptStack0000000000000008->startLine = ptStack0000000000000008->line;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i_5);
  }
  (ptStack0000000000000008->item).typ = i_5.typ;
  *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i_5.pos;
  *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i_5.pos._4_4_;
  (ptStack0000000000000008->item).val.str = i_5.val.str;
  *(undefined4 *)&(ptStack0000000000000008->item).val.len = (undefined4)i_5.val.len;
  *(undefined4 *)((int)&(ptStack0000000000000008->item).val.len + 4) = i_5.val.len._4_4_;
  *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i_5.line;
  *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i_5.line._4_4_;
  return;
}



void text_template_parse_lexSpace(text_template_parse_lexer *l,text_template_parse_stateFn **~r0)

{
  int iVar1;
  uint8 uVar2;
  uint uVar3;
  int iVar4;
  uint8 *puVar5;
  sdword extraout_EAX;
  int32 r;
  char cVar6;
  char extraout_AL;
  int iVar7;
  int32 ~r0_00;
  text_template_parse_stateFn **extraout_RBX;
  text_template_parse_stateFn **extraout_RBX_00;
  uint uVar8;
  int unaff_R14;
  text_template_parse_lexer *ptStack0000000000000008;
  int numSpaces;
  text_template_parse_item i;
  
  ptStack0000000000000008 = l;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0 = extraout_RBX_00;
  }
  iVar7 = 0;
  while ((((text_template_parse___lexer__peek(ptStack0000000000000008,(int32)~r0),
           extraout_EAX == 0x20 || (extraout_EAX == 9)) || (extraout_EAX == 0xd)) ||
         (extraout_EAX == 10))) {
    text_template_parse___lexer__next(ptStack0000000000000008,~r0_00);
    iVar7 = iVar7 + 1;
    ~r0 = extraout_RBX;
  }
  uVar3 = (ptStack0000000000000008->input).len;
  iVar4 = ptStack0000000000000008->pos;
  if (uVar3 < iVar4 - 1U) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  iVar1 = (uVar3 - iVar4) + 1;
  uVar8 = -iVar1 >> 0x3f & iVar4 - 1U;
  if (iVar1 < 2) {
    cVar6 = '\0';
  }
  else {
    puVar5 = (ptStack0000000000000008->input).str;
    uVar2 = puVar5[uVar8];
    if (((uVar2 == 0x20) || (uVar2 == 9)) || ((uVar2 == 0xd || (uVar2 == 10)))) {
      if (puVar5[uVar8 + 1] == 0x2d) {
        if (uVar3 < iVar4 + 1U) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        if ((int)((uVar3 - iVar4) + -1) < (ptStack0000000000000008->rightDelim).len) {
          cVar6 = '\0';
        }
        else {
          runtime_memequal();
          cVar6 = extraout_AL;
        }
      }
      else {
        cVar6 = '\0';
      }
    }
    else {
      cVar6 = '\0';
    }
  }
  if ((cVar6 != '\0') && (text_template_parse___lexer__backup(ptStack0000000000000008), iVar7 == 1))
  {
    return;
  }
  uVar3 = ptStack0000000000000008->pos;
  if ((uint)(ptStack0000000000000008->input).len < uVar3) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  uVar8 = ptStack0000000000000008->start;
  if (uVar3 < uVar8) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  i.typ = 0x12;
  i.pos._0_4_ = (undefined4)ptStack0000000000000008->start;
  i.pos._4_4_ = (undefined4)((uint)ptStack0000000000000008->start >> 0x20);
  i.val.str = (ptStack0000000000000008->input).str +
              (-(int)(uint8 *)(uVar3 - uVar8) >> 0x3f & uVar8);
  i.line = ptStack0000000000000008->startLine;
  i.val.len = (int)(uint8 *)(uVar3 - uVar8);
  ptStack0000000000000008->start = ptStack0000000000000008->pos;
  ptStack0000000000000008->startLine = ptStack0000000000000008->line;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i);
  }
  (ptStack0000000000000008->item).typ = i.typ;
  *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i.pos;
  *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i.pos._4_4_;
  (ptStack0000000000000008->item).val.str = i.val.str;
  *(undefined4 *)&(ptStack0000000000000008->item).val.len = (undefined4)i.val.len;
  *(undefined4 *)((int)&(ptStack0000000000000008->item).val.len + 4) = i.val.len._4_4_;
  *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i.line;
  *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i.line._4_4_;
  return;
}



void text_template_parse_lexIdentifier
               (text_template_parse_lexer *l,text_template_parse_stateFn **~r0)

{
  uint8 *x;
  uint8 uVar1;
  uint uVar2;
  uint8 *puVar3;
  uint32 val;
  int32 r;
  char extraout_AL;
  char extraout_AL_00;
  int *extraout_RAX;
  int *extraout_RAX_00;
  uint uVar4;
  text_template_parse_itemType item;
  bool ~r0_00;
  bool ~r0_01;
  text_template_parse_stateFn **extraout_RBX;
  text_template_parse_stateFn **extraout_RBX_00;
  int iVar5;
  int unaff_R14;
  text_template_parse_lexer *ptStack0000000000000008;
  string in_stack_fffffffffffffeb8;
  __interface___ in_stack_fffffffffffffec8;
  text_template_parse_item i_2;
  text_template_parse_item i_1;
  text_template_parse_item i;
  text_template_parse_item i_4;
  text_template_parse_item i_3;
  
  ptStack0000000000000008 = l;
  while (&i_2.pos <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0 = extraout_RBX_00;
  }
  do {
    text_template_parse___lexer__next(ptStack0000000000000008,(int32)~r0);
    text_template_parse_isAlphaNumeric(val,~r0_00);
    ~r0 = extraout_RBX;
  } while (extraout_AL != '\0');
  text_template_parse___lexer__backup(ptStack0000000000000008);
  uVar2 = ptStack0000000000000008->pos;
  if ((uint)(ptStack0000000000000008->input).len < uVar2) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  uVar4 = ptStack0000000000000008->start;
  if (uVar2 < uVar4) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  puVar3 = (ptStack0000000000000008->input).str;
  text_template_parse___lexer__atTerminator(ptStack0000000000000008,~r0_01);
  iVar5 = uVar2 - uVar4;
  uVar4 = uVar4 & -iVar5 >> 0x3f;
  x = puVar3 + uVar4;
  if (extraout_AL_00 == '\0') {
    runtime_convT32(val,x);
    text_template_parse___lexer__errorf
              (ptStack0000000000000008,in_stack_fffffffffffffeb8,in_stack_fffffffffffffec8,
               (text_template_parse_stateFn **)&DAT_008b7517);
    return;
  }
  runtime_mapaccess1_faststr
            ((internal_abi_MapType *)&DAT_00830700,(runtime_hmap *)text_template_parse_key,
             in_stack_fffffffffffffeb8,x);
  if (0x16 < *extraout_RAX) {
    runtime_mapaccess1_faststr
              ((internal_abi_MapType *)&DAT_00830700,(runtime_hmap *)text_template_parse_key,
               in_stack_fffffffffffffeb8,x);
    i_4.typ = *extraout_RAX_00;
    if (((i_4.typ != 0x18) || ((ptStack0000000000000008->options).breakOK != false)) &&
       ((i_4.typ != 0x19 || ((ptStack0000000000000008->options).continueOK != false)))) {
      uVar2 = ptStack0000000000000008->pos;
      if ((uint)(ptStack0000000000000008->input).len < uVar2) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAlen();
      }
      uVar4 = ptStack0000000000000008->start;
      if (uVar2 < uVar4) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      i_4.pos._0_4_ = (undefined4)ptStack0000000000000008->start;
      i_4.pos._4_4_ = (undefined4)((uint)ptStack0000000000000008->start >> 0x20);
      i_4.val.str = (ptStack0000000000000008->input).str +
                    (uVar4 & -(int)(uint8 *)(uVar2 - uVar4) >> 0x3f);
      i_4.line = ptStack0000000000000008->startLine;
      i_4.val.len = (int)(uint8 *)(uVar2 - uVar4);
      ptStack0000000000000008->start = ptStack0000000000000008->pos;
      ptStack0000000000000008->startLine = ptStack0000000000000008->line;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i_4);
      }
      (ptStack0000000000000008->item).typ = i_4.typ;
      *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i_4.pos;
      *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i_4.pos._4_4_;
      (ptStack0000000000000008->item).val.str = i_4.val.str;
      *(undefined4 *)&(ptStack0000000000000008->item).val.len = (undefined4)i_4.val.len;
      *(undefined4 *)((int)&(ptStack0000000000000008->item).val.len + 4) = i_4.val.len._4_4_;
      *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i_4.line;
      *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i_4.line._4_4_;
      return;
    }
    uVar2 = ptStack0000000000000008->pos;
    if ((uint)(ptStack0000000000000008->input).len < uVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    uVar4 = ptStack0000000000000008->start;
    if (uVar2 < uVar4) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    i_3.typ = 10;
    i_3.pos._0_4_ = (undefined4)ptStack0000000000000008->start;
    i_3.pos._4_4_ = (undefined4)((uint)ptStack0000000000000008->start >> 0x20);
    i_3.val.str = (ptStack0000000000000008->input).str +
                  (uVar4 & -(int)(uint8 *)(uVar2 - uVar4) >> 0x3f);
    i_3.line = ptStack0000000000000008->startLine;
    i_3.val.len = (int)(uint8 *)(uVar2 - uVar4);
    ptStack0000000000000008->start = ptStack0000000000000008->pos;
    ptStack0000000000000008->startLine = ptStack0000000000000008->line;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i_3);
    }
    (ptStack0000000000000008->item).typ = i_3.typ;
    *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i_3.pos;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i_3.pos._4_4_;
    (ptStack0000000000000008->item).val.str = i_3.val.str;
    *(undefined4 *)&(ptStack0000000000000008->item).val.len = (undefined4)i_3.val.len;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).val.len + 4) = i_3.val.len._4_4_;
    *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i_3.line;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i_3.line._4_4_;
    return;
  }
  if (iVar5 == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  uVar1 = puVar3[uVar4];
  if (uVar1 == 0x2e) {
    uVar2 = ptStack0000000000000008->pos;
    if ((uint)(ptStack0000000000000008->input).len < uVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    uVar4 = ptStack0000000000000008->start;
    if (uVar2 < uVar4) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    i.typ = 9;
    i.pos._0_4_ = (undefined4)ptStack0000000000000008->start;
    i.pos._4_4_ = (undefined4)((uint)ptStack0000000000000008->start >> 0x20);
    i.val.str = (ptStack0000000000000008->input).str +
                (uVar4 & -(int)(uint8 *)(uVar2 - uVar4) >> 0x3f);
    i.line = ptStack0000000000000008->startLine;
    i.val.len = (int)(uint8 *)(uVar2 - uVar4);
    ptStack0000000000000008->start = ptStack0000000000000008->pos;
    ptStack0000000000000008->startLine = ptStack0000000000000008->line;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i);
    }
    (ptStack0000000000000008->item).typ = i.typ;
    *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i.pos;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i.pos._4_4_;
    (ptStack0000000000000008->item).val.str = i.val.str;
    *(undefined4 *)&(ptStack0000000000000008->item).val.len = (undefined4)i.val.len;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).val.len + 4) = i.val.len._4_4_;
    *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i.line;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i.line._4_4_;
    return;
  }
  if (((iVar5 != 4) ||
      (CONCAT13(puVar3[uVar4 + 3],CONCAT12(puVar3[uVar4 + 2],CONCAT11(puVar3[uVar4 + 1],uVar1))) !=
       0x65757274)) &&
     ((iVar5 != 5 ||
      ((CONCAT13(puVar3[uVar4 + 3],CONCAT12(puVar3[uVar4 + 2],CONCAT11(puVar3[uVar4 + 1],uVar1))) !=
        0x736c6166 || (puVar3[uVar4 + 4] != 0x65)))))) {
    uVar2 = ptStack0000000000000008->pos;
    if ((uint)(ptStack0000000000000008->input).len < uVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    uVar4 = ptStack0000000000000008->start;
    if (uVar2 < uVar4) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    i_2.typ = 10;
    i_2.pos._0_4_ = (undefined4)ptStack0000000000000008->start;
    i_2.pos._4_4_ = (undefined4)((uint)ptStack0000000000000008->start >> 0x20);
    i_2.val.str = (ptStack0000000000000008->input).str +
                  (uVar4 & -(int)(uint8 *)(uVar2 - uVar4) >> 0x3f);
    i_2.line = ptStack0000000000000008->startLine;
    i_2.val.len = (int)(uint8 *)(uVar2 - uVar4);
    ptStack0000000000000008->start = ptStack0000000000000008->pos;
    ptStack0000000000000008->startLine = ptStack0000000000000008->line;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i_2);
    }
    (ptStack0000000000000008->item).typ = i_2.typ;
    *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i_2.pos;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i_2.pos._4_4_;
    (ptStack0000000000000008->item).val.str = i_2.val.str;
    *(undefined4 *)&(ptStack0000000000000008->item).val.len = (undefined4)i_2.val.len;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).val.len + 4) = i_2.val.len._4_4_;
    *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i_2.line;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i_2.line._4_4_;
    return;
  }
  uVar2 = ptStack0000000000000008->pos;
  if ((uint)(ptStack0000000000000008->input).len < uVar2) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  uVar4 = ptStack0000000000000008->start;
  if (uVar2 < uVar4) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  i_1.typ = 1;
  i_1.pos._0_4_ = (undefined4)ptStack0000000000000008->start;
  i_1.pos._4_4_ = (undefined4)((uint)ptStack0000000000000008->start >> 0x20);
  i_1.val.str = (ptStack0000000000000008->input).str +
                (uVar4 & -(int)(uint8 *)(uVar2 - uVar4) >> 0x3f);
  i_1.line = ptStack0000000000000008->startLine;
  i_1.val.len = (int)(uint8 *)(uVar2 - uVar4);
  ptStack0000000000000008->start = ptStack0000000000000008->pos;
  ptStack0000000000000008->startLine = ptStack0000000000000008->line;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i_1);
  }
  (ptStack0000000000000008->item).typ = i_1.typ;
  *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i_1.pos;
  *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i_1.pos._4_4_;
  (ptStack0000000000000008->item).val.str = i_1.val.str;
  *(undefined4 *)&(ptStack0000000000000008->item).val.len = (undefined4)i_1.val.len;
  *(undefined4 *)((int)&(ptStack0000000000000008->item).val.len + 4) = i_1.val.len._4_4_;
  *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i_1.line;
  *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i_1.line._4_4_;
  return;
}



void text_template_parse_lexField(text_template_parse_lexer *l,text_template_parse_stateFn **~r0)

{
  text_template_parse_stateFn **in_RCX;
  text_template_parse_stateFn **extraout_RCX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RCX = extraout_RCX;
  }
  text_template_parse_lexFieldOrVariable(l,9,in_RCX);
  return;
}



void text_template_parse_lexVariable(text_template_parse_lexer *l,text_template_parse_stateFn **~r0)

{
  uint uVar1;
  uint uVar2;
  char extraout_AL;
  text_template_parse_stateFn **~r0_00;
  text_template_parse_stateFn **extraout_RBX;
  int unaff_R14;
  text_template_parse_lexer *ptStack0000000000000008;
  text_template_parse_item i;
  
  ptStack0000000000000008 = l;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0 = extraout_RBX;
  }
  text_template_parse___lexer__atTerminator(ptStack0000000000000008,SUB81(~r0,0));
  if (extraout_AL == '\0') {
    text_template_parse_lexFieldOrVariable(ptStack0000000000000008,0x15,~r0_00);
    return;
  }
  uVar1 = ptStack0000000000000008->pos;
  if ((uint)(ptStack0000000000000008->input).len < uVar1) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  uVar2 = ptStack0000000000000008->start;
  if (uVar2 <= uVar1) {
    i.typ = 0x15;
    i.pos._0_4_ = (undefined4)ptStack0000000000000008->start;
    i.pos._4_4_ = (undefined4)((uint)ptStack0000000000000008->start >> 0x20);
    i.val.str = (ptStack0000000000000008->input).str +
                (uVar2 & -(int)(uint8 *)(uVar1 - uVar2) >> 0x3f);
    i.line = ptStack0000000000000008->startLine;
    i.val.len = (int)(uint8 *)(uVar1 - uVar2);
    ptStack0000000000000008->start = ptStack0000000000000008->pos;
    ptStack0000000000000008->startLine = ptStack0000000000000008->line;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i);
    }
    (ptStack0000000000000008->item).typ = i.typ;
    *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i.pos;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i.pos._4_4_;
    (ptStack0000000000000008->item).val.str = i.val.str;
    *(undefined4 *)&(ptStack0000000000000008->item).val.len = (undefined4)i.val.len;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).val.len + 4) = i.val.len._4_4_;
    *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i.line;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i.line._4_4_;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceB();
}



void text_template_parse_lexFieldOrVariable
               (text_template_parse_lexer *l,text_template_parse_itemType typ,
               text_template_parse_stateFn **~r0)

{
  uint uVar1;
  uint uVar2;
  uint32 val;
  int32 r;
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  bool ~r0_00;
  bool ~r0_01;
  undefined8 extraout_RBX;
  undefined8 uVar3;
  undefined8 extraout_RBX_00;
  void *x;
  int unaff_R14;
  text_template_parse_lexer *ptStack0000000000000008;
  text_template_parse_itemType tStack0000000000000010;
  string in_stack_ffffffffffffff38;
  __interface___ in_stack_ffffffffffffff48;
  text_template_parse_item i_2;
  text_template_parse_item i_1;
  text_template_parse_item i;
  
  ptStack0000000000000008 = l;
  tStack0000000000000010 = typ;
  while (&i_1.val <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  text_template_parse___lexer__atTerminator(ptStack0000000000000008,SUB81(tStack0000000000000010,0))
  ;
  uVar3 = extraout_RBX;
  if (extraout_AL == '\0') {
    do {
      text_template_parse___lexer__next(ptStack0000000000000008,(int32)uVar3);
      text_template_parse_isAlphaNumeric(val,~r0_00);
      uVar3 = extraout_RBX_00;
    } while (extraout_AL_00 != '\0');
    text_template_parse___lexer__backup(ptStack0000000000000008);
    text_template_parse___lexer__atTerminator(ptStack0000000000000008,~r0_01);
    if (extraout_AL_01 == '\0') {
      runtime_convT32(val,x);
      text_template_parse___lexer__errorf
                (ptStack0000000000000008,in_stack_ffffffffffffff38,in_stack_ffffffffffffff48,
                 (text_template_parse_stateFn **)&DAT_008b7517);
      return;
    }
    uVar1 = ptStack0000000000000008->pos;
    if ((uint)(ptStack0000000000000008->input).len < uVar1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    uVar2 = ptStack0000000000000008->start;
    if (uVar2 <= uVar1) {
      i_2.typ = tStack0000000000000010;
      i_2.pos._0_4_ = (undefined4)ptStack0000000000000008->start;
      i_2.pos._4_4_ = (undefined4)((uint)ptStack0000000000000008->start >> 0x20);
      i_2.val.str = (ptStack0000000000000008->input).str +
                    (uVar2 & -(int)(uint8 *)(uVar1 - uVar2) >> 0x3f);
      i_2.line = ptStack0000000000000008->startLine;
      i_2.val.len = (int)(uint8 *)(uVar1 - uVar2);
      ptStack0000000000000008->start = ptStack0000000000000008->pos;
      ptStack0000000000000008->startLine = ptStack0000000000000008->line;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i_2);
      }
      (ptStack0000000000000008->item).typ = i_2.typ;
      *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i_2.pos;
      *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i_2.pos._4_4_;
      (ptStack0000000000000008->item).val.str = i_2.val.str;
      *(undefined4 *)&(ptStack0000000000000008->item).val.len = (undefined4)i_2.val.len;
      *(undefined4 *)((int)&(ptStack0000000000000008->item).val.len + 4) = i_2.val.len._4_4_;
      *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i_2.line;
      *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i_2.line._4_4_;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  if (tStack0000000000000010 != 0x15) {
    uVar1 = ptStack0000000000000008->pos;
    if ((uint)(ptStack0000000000000008->input).len < uVar1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    uVar2 = ptStack0000000000000008->start;
    if (uVar2 <= uVar1) {
      i_1.typ = 0x1a;
      i_1.pos._0_4_ = (undefined4)ptStack0000000000000008->start;
      i_1.pos._4_4_ = (undefined4)((uint)ptStack0000000000000008->start >> 0x20);
      i_1.val.str = (ptStack0000000000000008->input).str +
                    (uVar2 & -(int)(uint8 *)(uVar1 - uVar2) >> 0x3f);
      i_1.line = ptStack0000000000000008->startLine;
      i_1.val.len = (int)(uint8 *)(uVar1 - uVar2);
      ptStack0000000000000008->start = ptStack0000000000000008->pos;
      ptStack0000000000000008->startLine = ptStack0000000000000008->line;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i_1);
      }
      (ptStack0000000000000008->item).typ = i_1.typ;
      *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i_1.pos;
      *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i_1.pos._4_4_;
      (ptStack0000000000000008->item).val.str = i_1.val.str;
      *(undefined4 *)&(ptStack0000000000000008->item).val.len = (undefined4)i_1.val.len;
      *(undefined4 *)((int)&(ptStack0000000000000008->item).val.len + 4) = i_1.val.len._4_4_;
      *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i_1.line;
      *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i_1.line._4_4_;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  uVar1 = ptStack0000000000000008->pos;
  if ((uint)(ptStack0000000000000008->input).len < uVar1) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  uVar2 = ptStack0000000000000008->start;
  if (uVar2 <= uVar1) {
    i.typ = 0x15;
    i.pos._0_4_ = (undefined4)ptStack0000000000000008->start;
    i.pos._4_4_ = (undefined4)((uint)ptStack0000000000000008->start >> 0x20);
    i.val.str = (ptStack0000000000000008->input).str +
                (uVar2 & -(int)(uint8 *)(uVar1 - uVar2) >> 0x3f);
    i.line = ptStack0000000000000008->startLine;
    i.val.len = (int)(uint8 *)(uVar1 - uVar2);
    ptStack0000000000000008->start = ptStack0000000000000008->pos;
    ptStack0000000000000008->startLine = ptStack0000000000000008->line;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_wbMove((internal_abi_Type *)&DAT_0087c840,&ptStack0000000000000008->item,&i);
    }
    (ptStack0000000000000008->item).typ = i.typ;
    *(undefined4 *)&(ptStack0000000000000008->item).pos = (undefined4)i.pos;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).pos + 4) = i.pos._4_4_;
    (ptStack0000000000000008->item).val.str = i.val.str;
    *(undefined4 *)&(ptStack0000000000000008->item).val.len = (undefined4)i.val.len;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).val.len + 4) = i.val.len._4_4_;
    *(undefined4 *)&(ptStack0000000000000008->item).line = (undefined4)i.line;
    *(undefined4 *)((int)&(ptStack0000000000000008->item).line + 4) = i.line._4_4_;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceB();
}



void text_template_parse___lexer__atTerminator(text_template_parse_lexer *l,bool ~r0)

{
  uint uVar1;
  sdword extraout_EAX;
  int32 r;
  undefined7 in_register_00000019;
  undefined8 uVar2;
  undefined8 extraout_RBX;
  int unaff_R14;
  text_template_parse_lexer *ptStack0000000000000008;
  
  uVar2 = CONCAT71(in_register_00000019,~r0);
  ptStack0000000000000008 = l;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    uVar2 = extraout_RBX;
  }
  text_template_parse___lexer__peek(ptStack0000000000000008,(int32)uVar2);
  if ((((extraout_EAX == 0x20) || (extraout_EAX == 9)) || (extraout_EAX == 0xd)) ||
     (extraout_EAX == 10)) {
    return;
  }
  if (extraout_EAX < 0x2d) {
    if (((extraout_EAX == -1) || ((dword)(extraout_EAX - 0x28U) < 2)) || (extraout_EAX == 0x2c)) {
      return;
    }
  }
  else {
    if (extraout_EAX == 0x2e) {
      return;
    }
    if (extraout_EAX == 0x3a) {
      return;
    }
    if (extraout_EAX == 0x7c) {
      return;
    }
  }
  uVar1 = (ptStack0000000000000008->input).len;
  if ((uint)ptStack0000000000000008->pos <= uVar1) {
    if ((ptStack0000000000000008->rightDelim).len <= (int)(uVar1 - ptStack0000000000000008->pos)) {
      runtime_memequal();
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceB();
}


