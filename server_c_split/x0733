
void golang_org_x_net_trace_minCond_String(golang_org_x_net_trace_minCond m,string ~r0)

{
  int extraout_RAX;
  time_Duration nsec;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  __interface___ in_stack_ffffffffffffffd0;
  string ~r0_00;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_convT64((uint64)((double)(m / 1000000000) + (double)(m % 1000000000) / 1000000000.0),
                  (void *)((m / 1000000000) * 1000000000));
  ~r0_00.len = extraout_RAX;
  ~r0_00.str = &DAT_00807720;
  fmt_Sprintf(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,~r0_00);
  return;
}



void golang_org_x_net_trace_errorCond_match
               (golang_org_x_net_trace_errorCond e,golang_org_x_net_trace_trace *t,bool ~r0)

{
  return;
}



void golang_org_x_net_trace_errorCond_String(golang_org_x_net_trace_errorCond e,string ~r0)

{
  return;
}



void golang_org_x_net_trace_traceList_Free(golang_org_x_net_trace_traceList trl)

{
  int in_RAX;
  int iVar1;
  golang_org_x_net_trace_trace *t;
  int in_RBX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  for (iVar1 = 0; iVar1 < in_RBX; iVar1 = iVar1 + 1) {
    golang_org_x_net_trace___trace__unref(*(golang_org_x_net_trace_trace **)(in_RAX + iVar1 * 8));
  }
  return;
}



void golang_org_x_net_trace_traceList_Len(golang_org_x_net_trace_traceList trl,int ~r0)

{
  return;
}



void golang_org_x_net_trace_traceList_Less
               (golang_org_x_net_trace_traceList trl,int i,int j,bool ~r0)

{
  uint in_RSI;
  uint in_RDI;
  int unaff_R14;
  time_Time in_stack_ffffffffffffffc8;
  time_Time in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RDI < (uint)j) {
    if (in_RSI < (uint)j) {
      time_Time_After(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffe0,
                      SUB81(*(undefined8 *)(*(int *)(i + in_RDI * 8) + 0x20),0));
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void golang_org_x_net_trace_traceList_Swap(golang_org_x_net_trace_traceList trl,int i,int j)

{
  int extraout_RAX;
  undefined8 extraout_RCX;
  undefined8 uVar1;
  undefined8 uVar2;
  uint in_RSI;
  uint extraout_RSI;
  uint in_RDI;
  uint extraout_RDI;
  undefined8 *extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RDI < (uint)j) {
    uVar2 = *(undefined8 *)(i + in_RDI * 8);
    if (in_RSI < (uint)j) {
      uVar1 = *(undefined8 *)(i + in_RSI * 8);
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier4();
        *extraout_R11 = extraout_RCX;
        extraout_R11[1] = *(undefined8 *)(extraout_RAX + extraout_RDI * 8);
        extraout_R11[2] = uVar2;
        extraout_R11[3] = *(undefined8 *)(extraout_RAX + extraout_RSI * 8);
        i = extraout_RAX;
        uVar1 = extraout_RCX;
        in_RSI = extraout_RSI;
        in_RDI = extraout_RDI;
      }
      *(undefined8 *)(i + in_RDI * 8) = uVar1;
      *(undefined8 *)(i + in_RSI * 8) = uVar2;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void golang_org_x_net_trace_event_WhenString(golang_org_x_net_trace_event e,string ~r0)

{
  string ~r0_00;
  string ~r0_01;
  uint8 *unaff_RBP;
  char in_SIL;
  int unaff_R14;
  int unaff_retaddr;
  time_Time in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_SIL != '\0') {
    ~r0_00.len = unaff_retaddr;
    ~r0_00.str = unaff_RBP;
    time_Time_Format(in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe8,~r0_00);
    return;
  }
  ~r0_01.len = unaff_retaddr;
  ~r0_01.str = unaff_RBP;
  time_Time_Format(in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe8,~r0_01);
  return;
}



void golang_org_x_net_trace___discarded__String(golang_org_x_net_trace_discarded *d,string ~r0)

{
  int extraout_RAX;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  __interface___ in_stack_ffffffffffffffd0;
  string ~r0_00;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_convT64(*d,in_RBX);
  ~r0_00.len = extraout_RAX;
  ~r0_00.str = &DAT_00807760;
  fmt_Sprintf(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,~r0_00);
  return;
}



// WARNING: Unknown calling convention

void golang_org_x_net_trace___trace__reset(golang_org_x_net_trace_trace *tr)

{
  golang_org_x_net_trace_trace *extraout_RAX;
  golang_org_x_net_trace_trace *extraout_RAX_00;
  golang_org_x_net_trace_trace *extraout_RAX_01;
  golang_org_x_net_trace_trace *extraout_RAX_02;
  undefined8 extraout_RCX;
  undefined8 extraout_RCX_00;
  undefined8 extraout_RCX_01;
  golang_org_x_net_trace_trace *extraout_RCX_02;
  golang_org_x_net_trace_trace *pgVar1;
  undefined8 extraout_RCX_03;
  golang_org_x_net_trace_event *pgVar2;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  golang_org_x_net_trace_event **extraout_R11_02;
  undefined8 *extraout_R11_03;
  int unaff_R14;
  undefined in_XMM15 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  (tr->Family).len = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RCX;
    tr = extraout_RAX;
  }
  (tr->Family).str = (uint8 *)0x0;
  (tr->Title).len = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = extraout_RCX_00;
    tr = extraout_RAX_00;
  }
  (tr->Title).str = (uint8 *)0x0;
  (tr->Start).wall = in_XMM15._0_8_;
  (tr->Start).ext = in_XMM15._8_8_;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_01 = extraout_RCX_01;
    tr = extraout_RAX_01;
  }
  (tr->Start).loc = (time_Location *)0x0;
  sync___RWMutex__Lock(&tr->mu);
  tr->Elapsed = in_XMM15._0_8_;
  tr->traceID = in_XMM15._8_8_;
  tr->spanID = 0;
  tr->IsError = false;
  tr->maxEvents = 0;
  (tr->events).len = in_XMM15._0_8_;
  (tr->events).cap = in_XMM15._8_8_;
  pgVar1 = tr;
  if (runtime_writeBarrier._0_4_ != 0) {
    pgVar2 = (tr->events).array;
    runtime_gcWriteBarrier2();
    *extraout_R11_02 = pgVar2;
    extraout_R11_02[1] = (golang_org_x_net_trace_event *)extraout_RCX_02->recycler;
    pgVar1 = extraout_RCX_02;
  }
  (pgVar1->events).array = (golang_org_x_net_trace_event *)0x0;
  pgVar1->recycler = (func_interface____ **)0x0;
  sync___RWMutex__Unlock(&tr->mu);
  tr->refs = 0;
  tr->disc = 0;
  (tr->finishStack).len = in_XMM15._0_8_;
  (tr->finishStack).cap = in_XMM15._8_8_;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_03 = extraout_RCX_03;
    tr = extraout_RAX_02;
  }
  (tr->finishStack).array = (uint8 *)0x0;
  runtime_memclrHasPointers(tr->eventsBuf,0xe0);
  return;
}



void golang_org_x_net_trace___trace__delta
               (golang_org_x_net_trace_trace *tr,time_Time t,time_Duration ~r0,bool ~r1)

{
  int iVar1;
  golang_org_x_net_trace_event *pgVar2;
  int year;
  time_Location *month;
  uint64 uVar3;
  undefined7 in_register_00000009;
  int day;
  int day_1;
  int yday;
  int yday_00;
  time_Month in_RDI;
  int unaff_R14;
  time_Month tStack0000000000000020;
  time_Time in_stack_ffffffffffffff88;
  time_Time in_stack_ffffffffffffffa0;
  
  tStack0000000000000020 = in_RDI;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar1 = (tr->events).len;
  if (iVar1 == 0) {
    time_Time_Sub(in_stack_ffffffffffffff88,in_stack_ffffffffffffffa0,~r0);
    return;
  }
  pgVar2 = (tr->events).array;
  year = pgVar2[iVar1 + -1].When.ext;
  month = pgVar2[iVar1 + -1].When.loc;
  uVar3 = pgVar2[iVar1 + -1].When.wall;
  time_Time_Sub(in_stack_ffffffffffffff88,in_stack_ffffffffffffffa0,~r0);
  time_Time_date(in_stack_ffffffffffffff88,SUB81(uVar3,0),year,(time_Month)month,1,yday);
  time_Time_date(in_stack_ffffffffffffff88,SUB81(~r0,0),CONCAT71(in_register_00000009,~r1),
                 tStack0000000000000020,1,yday_00);
  return;
}



void golang_org_x_net_trace___trace__addEvent
               (golang_org_x_net_trace_trace *tr,interface___ x,bool recyclable,bool sensitive)

{
  int *piVar1;
  void *pvVar2;
  internal_abi_Type *piVar3;
  uint uVar4;
  undefined8 uVar5;
  func_interface____ **ppfVar6;
  uintptr uVar7;
  uintptr uVar8;
  __uint8 buf;
  __uint8 val;
  __uint8 val_00;
  time_Time ~r0;
  time_Time t;
  runtime_slice ~r0_00;
  error ~r0_1;
  undefined auVar9 [16];
  void *extraout_RAX;
  uint extraout_RAX_00;
  int n;
  undefined8 extraout_RAX_01;
  undefined8 extraout_RAX_02;
  uint64 extraout_RAX_03;
  time_Duration extraout_RAX_04;
  golang_org_x_net_trace_event *extraout_RAX_05;
  golang_org_x_net_trace_event *extraout_RAX_06;
  golang_org_x_net_trace_event *pgVar10;
  runtime_funcval *extraout_RAX_07;
  runtime_funcval *extraout_RAX_08;
  runtime_funcval *extraout_RAX_09;
  golang_org_x_net_trace_trace *extraout_RAX_10;
  golang_org_x_net_trace_trace *extraout_RAX_11;
  runtime_funcval *extraout_RAX_12;
  runtime_funcval *extraout_RAX_13;
  runtime_funcval *extraout_RAX_14;
  runtime_funcval *prVar11;
  golang_org_x_net_trace_trace *pgVar12;
  undefined7 in_register_00000009;
  undefined8 extraout_RCX;
  int extraout_RCX_00;
  undefined8 extraout_RCX_01;
  uint uVar13;
  int di;
  uint uVar14;
  bool extraout_BL;
  undefined7 in_register_00000019;
  undefined8 extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  golang_org_x_net_trace_event *extraout_RBX_02;
  golang_org_x_net_trace_event *extraout_RBX_03;
  golang_org_x_net_trace_event *extraout_RBX_04;
  undefined in_SIL;
  void *in_RDI;
  int iVar15;
  int extraout_R8;
  int extraout_R8_00;
  int iVar16;
  golang_org_x_net_trace_event *extraout_R9;
  golang_org_x_net_trace_event *pgVar17;
  uint extraout_R9_00;
  uint uVar18;
  golang_org_x_net_trace_discarded *d;
  golang_org_x_net_trace_discarded *extraout_R10;
  golang_org_x_net_trace_discarded *pgVar19;
  golang_org_x_net_trace_event *extraout_R10_00;
  golang_org_x_net_trace_event **extraout_R11;
  int *extraout_R11_00;
  void **extraout_R11_01;
  golang_org_x_net_trace_discarded **extraout_R11_02;
  undefined8 *extraout_R11_03;
  undefined8 uVar20;
  int *extraout_R11_04;
  uintptr *extraout_R11_05;
  int unaff_R14;
  undefined in_XMM15 [16];
  void *pvStack0000000000000018;
  byte bStack0000000000000020;
  undefined uStack0000000000000021;
  error in_stack_fffffffffffffee0;
  time_Location *in_stack_fffffffffffffef0;
  void *in_stack_fffffffffffffef8;
  sync_RWMutex *local_a0;
  void *local_98;
  undefined local_90 [16];
  undefined local_80 [16];
  undefined local_70 [16];
  undefined local_60 [16];
  undefined local_50 [16];
  golang_org_x_net_trace_event e;
  
  e.What._type._1_7_ = in_register_00000019;
  e.What._type._0_1_ = recyclable;
  pvStack0000000000000018 = (void *)CONCAT71(in_register_00000009,sensitive);
  uStack0000000000000021 = in_SIL;
  while (bStack0000000000000020 = (byte)in_RDI, &local_a0 <= *(sync_RWMutex ***)(unaff_R14 + 0x10))
  {
    runtime_morestack_noctxt();
    in_RDI = (void *)(uint)bStack0000000000000020;
  }
  if ((golang_org_x_net_trace_DebugUseAfterFinish != false) &&
     ((tr->finishStack).array != (uint8 *)0x0)) {
    runtime_makeslice((internal_abi_Type *)&DAT_00807920,0x1000,0x1000,in_RDI);
    buf.cap = (int)in_stack_fffffffffffffef0;
    buf.array = (uint8 *)in_stack_fffffffffffffee0.tab;
    buf.len = (int)in_stack_fffffffffffffee0.data;
    local_98 = extraout_RAX;
    runtime_Stack(buf,SUB81(extraout_RAX,0),0x1000);
    if (0x1000 < extraout_RAX_00) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    val.cap = (int)in_stack_fffffffffffffef0;
    val.array = (uint8 *)in_stack_fffffffffffffee0.tab;
    val.len = (int)in_stack_fffffffffffffee0.data;
    runtime_convTslice(val,(tr->finishStack).array);
    local_90._8_8_ = extraout_RAX_01;
    local_90._0_8_ = &DAT_00801a20;
    val_00.cap = (int)in_stack_fffffffffffffef0;
    val_00.array = (uint8 *)in_stack_fffffffffffffee0.tab;
    val_00.len = (int)in_stack_fffffffffffffee0.data;
    runtime_convTslice(val_00,local_98);
    local_80._8_8_ = extraout_RAX_02;
    local_80._0_8_ = &DAT_00801a20;
    local_70._8_8_ =
         "net/trace: trace used after finish:\nFinished at:\n%s\nUsed at:\n%selementNoneelementScriptelementStyleelementTextareaelementTitleecdsa: internal error: P256OrdInverse produced an invalid valuegrpc: Compressor is not installed for requested grpc-encoding %qgrpc: client streaming protocol violation: get <nil>, want <EOF>runtime.SetFinalizer: first argument was allocated into an arenareflect.StructOf: struct size would exceed virtual address spacethe stream is rejected because server is draining the connectionjson: invalid number literal, trying to unmarshal %q into Numberheader key %q contains value with non-printable ASCII charactersextension %v has mismatching containing message: got %v, want %vABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credentialsruntime: unexpected error while checking standard file descriptor reflect: indirection through nil pointer to embedded struct field base.baseBalancer: UpdateSubConnState(%v, %+v) called unexpectedlyreceived goaway with non-zero even-numbered numbered stream id: %vmetadata: Pairs got the odd number of input pairs for metadata: %dDescriptor.Options called without importing th..." /* TRUNCATED STRING LITERAL */
    ;
    local_70._0_8_ = golang_org_x_net_trace___trace__addEvent_Printf_func1;
    local_50._8_8_ = 2;
    local_50._0_8_ = 2;
    local_60._8_8_ = local_90;
    local_60._0_8_ = 0x3f;
    ~r0_1.data = in_stack_fffffffffffffef8;
    ~r0_1.tab = (runtime_itab *)in_stack_fffffffffffffef0;
    log___Logger__output
              (log_std,0,2,(func___uint8____uint8 **)local_70,in_stack_fffffffffffffee0,~r0_1);
  }
  ~r0.loc = in_stack_fffffffffffffef0;
  ~r0.wall = (uint64)in_stack_fffffffffffffee0.tab;
  ~r0.ext = (int64)in_stack_fffffffffffffee0.data;
  time_Now(~r0);
  e.When.ext._0_4_ = (undefined4)extraout_RBX;
  e.When.ext._4_4_ = (undefined4)((uint)extraout_RBX >> 0x20);
  e.When.loc._0_4_ = (undefined4)extraout_RCX;
  e.When.loc._4_4_ = (undefined4)((uint)extraout_RCX >> 0x20);
  e.What.data = pvStack0000000000000018;
  e._24_9_ = in_XMM15._0_9_;
  e._24_10_ = CONCAT19(bStack0000000000000020,e._24_9_);
  e._35_5_ = in_XMM15._11_5_;
  e._24_11_ = CONCAT110(uStack0000000000000021,e._24_10_);
  local_a0 = &tr->mu;
  e.When.wall = extraout_RAX_03;
  sync___RWMutex__Lock(local_a0);
  t.loc = in_stack_fffffffffffffef0;
  t.wall = (uint64)in_stack_fffffffffffffee0.tab;
  t.ext = (int64)in_stack_fffffffffffffee0.data;
  golang_org_x_net_trace___trace__delta(tr,t,e.When.wall,SUB41((undefined4)e.When.ext,0));
  e._24_9_ = CONCAT18(extraout_BL,extraout_RAX_04);
  uVar14 = (tr->events).len;
  iVar16 = tr->maxEvents;
  pgVar10 = (tr->events).array;
  if ((int)uVar14 < iVar16) {
    uVar13 = (tr->events).cap;
    uVar14 = uVar14 + 1;
    if (uVar13 < uVar14) {
      ~r0_00.cap = (int)in_stack_fffffffffffffef0;
      ~r0_00.array = in_stack_fffffffffffffee0.tab;
      ~r0_00.len = (int)in_stack_fffffffffffffee0.data;
      runtime_growslice(pgVar10,uVar14,uVar13,1,(internal_abi_Type *)&DAT_00889320,~r0_00);
      (tr->events).cap = extraout_RCX_00;
      pgVar10 = extraout_RAX_05;
      uVar14 = extraout_RBX_00;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_RAX_06;
        extraout_R11[1] = (tr->events).array;
        pgVar10 = extraout_RAX_06;
        uVar14 = extraout_RBX_01;
      }
      (tr->events).array = pgVar10;
    }
    (tr->events).len = uVar14;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_wbMove((internal_abi_Type *)&DAT_00889320,pgVar10 + (uVar14 - 1),&e);
    }
    auVar9 = e._24_16_;
    pgVar10[uVar14 - 1].When.wall = e.When.wall;
    *(undefined4 *)&pgVar10[uVar14 - 1].When.ext = (undefined4)e.When.ext;
    *(undefined4 *)((int)&pgVar10[uVar14 - 1].When.ext + 4) = e.When.ext._4_4_;
    *(undefined4 *)&pgVar10[uVar14 - 1].When.loc = e.When.loc._0_4_;
    *(undefined4 *)((int)&pgVar10[uVar14 - 1].When.loc + 4) = e.When.loc._4_4_;
    *(undefined4 *)&pgVar10[uVar14 - 1].Elapsed = (undefined4)e.Elapsed;
    *(undefined4 *)((int)&pgVar10[uVar14 - 1].Elapsed + 4) = e.Elapsed._4_4_;
    pgVar17 = pgVar10 + (uVar14 - 1);
    pgVar17->NewDay = e.NewDay;
    pgVar17->Recyclable = e.Recyclable;
    pgVar17->Sensitive = e.Sensitive;
    pgVar17->field_0x23 = e._35_1_;
    *(undefined4 *)&pgVar10[uVar14 - 1].field_0x24 = e._36_4_;
    *(undefined4 *)&pgVar10[uVar14 - 1].What._type = e.What._type._0_4_;
    *(undefined4 *)((int)&pgVar10[uVar14 - 1].What._type + 4) = e.What._type._4_4_;
    *(undefined4 *)&pgVar10[uVar14 - 1].What.data = e.What.data._0_4_;
    *(undefined4 *)((int)&pgVar10[uVar14 - 1].What.data + 4) = e.What.data._4_4_;
    e._24_16_ = auVar9;
  }
  else {
    uVar13 = (iVar16 - (iVar16 + -1 >> 0x3f)) + -1 >> 1;
    if (uVar14 <= uVar13) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    iVar15 = uVar13 * 0x38;
    piVar1 = (int *)pgVar10[uVar13].What.data;
    pgVar12 = tr;
    uVar14 = uVar13;
    iVar16 = iVar15;
    if (pgVar10[uVar13].What._type == (internal_abi_Type *)&DAT_00828240) {
      *piVar1 = *piVar1 + 1;
    }
    else {
      tr->disc = 2;
      ppfVar6 = tr->recycler;
      if (ppfVar6 != (func_interface____ **)0x0) {
        if ((uint)(tr->events).len <= uVar13) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        pgVar17 = (tr->events).array;
        if (pgVar17[uVar13].Recyclable != false) {
          pvVar2 = pgVar17[uVar13].What.data;
          piVar3 = pgVar17[uVar13].What._type;
          runtime_newobject((internal_abi_Type *)&DAT_0085aa40,pgVar10);
          extraout_RAX_07->fn = (uintptr)golang_org_x_net_trace___trace__addEvent_func2;
          prVar11 = extraout_RAX_07;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier1();
            *extraout_R11_00 = (int)ppfVar6;
            prVar11 = extraout_RAX_08;
          }
          prVar11[1].fn = (uintptr)ppfVar6;
          prVar11[2].fn = (uintptr)piVar3;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier1();
            *extraout_R11_01 = pvVar2;
            prVar11 = extraout_RAX_09;
          }
          prVar11[3].fn = (uintptr)pvVar2;
          runtime_newproc(prVar11);
          pgVar10 = extraout_RBX_02;
        }
      }
      if ((uint)(tr->events).len <= uVar13) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      pgVar17 = (tr->events).array;
      pgVar17[uVar13].What._type = (internal_abi_Type *)&DAT_00828240;
      pgVar19 = &tr->disc;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_02 = extraout_R10;
        extraout_R11_02[1] =
             *(golang_org_x_net_trace_discarded **)((int)&(extraout_R9->What).data + extraout_R8);
        pgVar12 = extraout_RAX_10;
        pgVar10 = extraout_RBX_03;
        iVar16 = extraout_R8;
        pgVar17 = extraout_R9;
        pgVar19 = extraout_R10;
      }
      *(golang_org_x_net_trace_discarded **)((int)&(pgVar17->What).data + iVar16) = pgVar19;
    }
    uVar4 = (pgVar12->events).len;
    uVar18 = uVar14 + 1;
    if (uVar4 <= uVar18) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    pgVar17 = (pgVar12->events).array;
    uVar20 = *(undefined8 *)((int)&pgVar17[1].When.loc + iVar16);
    uVar5 = *(undefined8 *)((int)&pgVar17[1].When.ext + iVar16);
    if (uVar4 <= uVar14) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(undefined8 *)((int)&(pgVar17->When).wall + iVar16) =
         *(undefined8 *)((int)&pgVar17[1].When.wall + iVar16);
    *(undefined8 *)((int)&(pgVar17->When).ext + iVar16) = uVar5;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_03 = extraout_RCX_01;
      extraout_R11_03[1] = *(undefined8 *)((int)&(extraout_R10_00->When).loc + extraout_R8_00);
      pgVar12 = extraout_RAX_11;
      pgVar10 = extraout_RBX_04;
      iVar16 = extraout_R8_00;
      uVar18 = extraout_R9_00;
      pgVar17 = extraout_R10_00;
      uVar20 = extraout_RCX_01;
    }
    *(undefined8 *)((int)&(pgVar17->When).loc + iVar16) = uVar20;
    ppfVar6 = pgVar12->recycler;
    if (ppfVar6 != (func_interface____ **)0x0) {
      if ((uint)(pgVar12->events).len <= uVar18) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      pgVar17 = (pgVar12->events).array;
      if ((&pgVar17[1].Recyclable)[iVar16] != false) {
        uVar7 = *(uintptr *)((int)&pgVar17[1].What.data + iVar16);
        uVar8 = *(uintptr *)((int)&pgVar17[1].What._type + iVar16);
        runtime_newobject((internal_abi_Type *)&DAT_0085aa40,pgVar10);
        extraout_RAX_12->fn = (uintptr)golang_org_x_net_trace___trace__addEvent_func3;
        prVar11 = extraout_RAX_12;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_04 = (int)ppfVar6;
          prVar11 = extraout_RAX_13;
        }
        prVar11[1].fn = (uintptr)ppfVar6;
        prVar11[2].fn = uVar8;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_05 = uVar7;
          prVar11 = extraout_RAX_14;
        }
        prVar11[3].fn = uVar7;
        runtime_newproc(prVar11);
        pgVar12 = tr;
        uVar14 = uVar13;
        iVar16 = iVar15;
      }
    }
    uVar13 = (pgVar12->events).len;
    if (uVar13 < uVar18) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    pgVar10 = (pgVar12->events).array;
    iVar15 = (pgVar12->events).cap - uVar14;
    if (uVar13 < uVar14 + 2) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    runtime_typedslicecopy
              ((internal_abi_Type *)&DAT_00889320,
               (void *)((int)&(pgVar10->When).wall + (-(iVar15 + -1) >> 0x3f & iVar16 + 0x38U)),
               (uVar13 - uVar14) + -1,
               (void *)((int)&(pgVar10->When).wall + (-(iVar15 + -2) >> 0x3f & iVar16 + 0x70U)),
               (uVar13 - uVar14) + -2,iVar16 + 0x70U);
    iVar16 = tr->maxEvents;
    if ((uint)(tr->events).len <= iVar16 - 1U) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    pgVar10 = (tr->events).array;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_wbMove((internal_abi_Type *)&DAT_00889320,pgVar10 + iVar16 + -1,&e);
    }
    auVar9 = e._24_16_;
    pgVar10[iVar16 + -1].When.wall = e.When.wall;
    *(undefined4 *)&pgVar10[iVar16 + -1].When.ext = (undefined4)e.When.ext;
    *(undefined4 *)((int)&pgVar10[iVar16 + -1].When.ext + 4) = e.When.ext._4_4_;
    *(undefined4 *)&pgVar10[iVar16 + -1].When.loc = e.When.loc._0_4_;
    *(undefined4 *)((int)&pgVar10[iVar16 + -1].When.loc + 4) = e.When.loc._4_4_;
    *(undefined4 *)&pgVar10[iVar16 + -1].Elapsed = (undefined4)e.Elapsed;
    *(undefined4 *)((int)&pgVar10[iVar16 + -1].Elapsed + 4) = e.Elapsed._4_4_;
    pgVar17 = pgVar10 + iVar16 + -1;
    pgVar17->NewDay = e.NewDay;
    pgVar17->Recyclable = e.Recyclable;
    pgVar17->Sensitive = e.Sensitive;
    pgVar17->field_0x23 = e._35_1_;
    *(undefined4 *)&pgVar10[iVar16 + -1].field_0x24 = e._36_4_;
    *(undefined4 *)&pgVar10[iVar16 + -1].What._type = e.What._type._0_4_;
    *(undefined4 *)((int)&pgVar10[iVar16 + -1].What._type + 4) = e.What._type._4_4_;
    *(undefined4 *)&pgVar10[iVar16 + -1].What.data = e.What.data._0_4_;
    *(undefined4 *)((int)&pgVar10[iVar16 + -1].What.data + 4) = e.What.data._4_4_;
    e._24_16_ = auVar9;
  }
  sync___RWMutex__Unlock(local_a0);
  return;
}



// WARNING: Unknown calling convention

void golang_org_x_net_trace___trace__addEvent_func3(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_18 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_18;
  }
  (***(code ***)(in_RDX + 8))(*(undefined8 *)(in_RDX + 0x10),*(undefined8 *)(in_RDX + 0x18));
  return;
}



// WARNING: Unknown calling convention

void golang_org_x_net_trace___trace__addEvent_func2(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_18 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_18;
  }
  (***(code ***)(in_RDX + 8))(*(undefined8 *)(in_RDX + 0x10),*(undefined8 *)(in_RDX + 0x18));
  return;
}


/*
Unable to decompile 'golang.org/x/net/trace.(*trace).addEvent.Printf.func1'
Cause: 
Low-level Error: Overlapping input varnodes
*/


void golang_org_x_net_trace___trace__LazyLog
               (golang_org_x_net_trace_trace *tr,fmt_Stringer x,bool sensitive)

{
  undefined8 in_RCX;
  undefined7 in_register_00000019;
  int iVar1;
  int unaff_R14;
  undefined8 uStack0000000000000018;
  interface___ in_stack_ffffffffffffffd8;
  
  iVar1 = CONCAT71(in_register_00000019,sensitive);
  uStack0000000000000018 = in_RCX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (iVar1 != 0) {
    iVar1 = *(int *)(iVar1 + 8);
  }
  golang_org_x_net_trace___trace__addEvent
            (tr,in_stack_ffffffffffffffd8,SUB81(iVar1,0),SUB81(uStack0000000000000018,0));
  return;
}



void golang_org_x_net_trace___trace__LazyPrintf
               (golang_org_x_net_trace_trace *tr,string format,__interface___ a)

{
  void **extraout_RAX;
  void **extraout_RAX_00;
  void **extraout_RAX_01;
  void **ppvVar1;
  void *in_RCX;
  void *in_RBX;
  void *in_RSI;
  void *in_RDI;
  void *in_R8;
  void **extraout_R11;
  void **extraout_R11_00;
  int unaff_R14;
  void *pvStack0000000000000030;
  interface___ in_stack_ffffffffffffffd0;
  
  pvStack0000000000000030 = in_R8;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_newobject((internal_abi_Type *)&DAT_00852fe0,in_RBX);
  extraout_RAX[1] = in_RCX;
  ppvVar1 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = in_RBX;
    ppvVar1 = extraout_RAX_00;
  }
  *ppvVar1 = in_RBX;
  ppvVar1[3] = in_RSI;
  ppvVar1[4] = pvStack0000000000000030;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = in_RDI;
    ppvVar1 = extraout_RAX_01;
  }
  ppvVar1[2] = in_RDI;
  golang_org_x_net_trace___trace__addEvent(tr,in_stack_ffffffffffffffd0,false,SUB81(ppvVar1,0));
  return;
}



// WARNING: Unknown calling convention

void golang_org_x_net_trace___trace__SetError(golang_org_x_net_trace_trace *tr)

{
  sync_RWMutex *rw;
  int unaff_R14;
  golang_org_x_net_trace_trace *pgStack0000000000000008;
  
  pgStack0000000000000008 = tr;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  rw = &pgStack0000000000000008->mu;
  sync___RWMutex__Lock(rw);
  pgStack0000000000000008->IsError = true;
  sync___RWMutex__Unlock(rw);
  return;
}



// WARNING: Unknown calling convention

void golang_org_x_net_trace___trace__SetRecycler
               (golang_org_x_net_trace_trace *tr,func_interface____ **f)

{
  sync_RWMutex *rw;
  undefined8 *extraout_R11;
  int unaff_R14;
  golang_org_x_net_trace_trace *pgStack0000000000000008;
  func_interface____ **ppfStack0000000000000010;
  
  pgStack0000000000000008 = tr;
  ppfStack0000000000000010 = f;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  rw = &pgStack0000000000000008->mu;
  sync___RWMutex__Lock(rw);
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = ppfStack0000000000000010;
    extraout_R11[1] = pgStack0000000000000008->recycler;
  }
  pgStack0000000000000008->recycler = ppfStack0000000000000010;
  sync___RWMutex__Unlock(rw);
  return;
}



// WARNING: Unknown calling convention

void golang_org_x_net_trace___trace__SetTraceInfo
               (golang_org_x_net_trace_trace *tr,uint64 traceID,uint64 spanID)

{
  sync_RWMutex *rw;
  int unaff_R14;
  golang_org_x_net_trace_trace *pgStack0000000000000008;
  uint64 uStack0000000000000010;
  uint64 uStack0000000000000018;
  
  pgStack0000000000000008 = tr;
  uStack0000000000000018 = spanID;
  uStack0000000000000010 = traceID;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  rw = &pgStack0000000000000008->mu;
  sync___RWMutex__Lock(rw);
  pgStack0000000000000008->traceID = uStack0000000000000010;
  pgStack0000000000000008->spanID = uStack0000000000000018;
  sync___RWMutex__Unlock(rw);
  return;
}



// WARNING: Unknown calling convention

void golang_org_x_net_trace___trace__SetMaxEvents(golang_org_x_net_trace_trace *tr,int m)

{
  sync_RWMutex *rw;
  int unaff_R14;
  golang_org_x_net_trace_trace *pgStack0000000000000008;
  int iStack0000000000000010;
  
  pgStack0000000000000008 = tr;
  iStack0000000000000010 = m;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  rw = &pgStack0000000000000008->mu;
  sync___RWMutex__Lock(rw);
  if (((pgStack0000000000000008->events).len == 0) && (3 < iStack0000000000000010)) {
    pgStack0000000000000008->maxEvents = iStack0000000000000010;
  }
  sync___RWMutex__Unlock(rw);
  return;
}



// WARNING: Unknown calling convention

void golang_org_x_net_trace___trace__unref(golang_org_x_net_trace_trace *tr)

{
  sync_atomic_Int32 *psVar1;
  int32 *piVar2;
  func_interface____ **ppfVar3;
  uintptr uVar4;
  uintptr uVar5;
  golang_org_x_net_trace_event *~r0;
  runtime_funcval *extraout_RAX;
  runtime_funcval *extraout_RAX_00;
  runtime_funcval *extraout_RAX_01;
  runtime_funcval *fn;
  sdword sVar6;
  int32 r;
  int *extraout_R11;
  golang_org_x_net_trace_event **extraout_R11_00;
  int unaff_R14;
  golang_org_x_net_trace_trace *pgStack0000000000000008;
  golang_org_x_net_trace_trace *local_10;
  
  pgStack0000000000000008 = tr;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  LOCK();
  piVar2 = &pgStack0000000000000008->refs;
  sVar6 = *piVar2;
  *piVar2 = *piVar2 + -1;
  UNLOCK();
  if (sVar6 == 1) {
    LOCK();
    psVar1 = &(pgStack0000000000000008->mu).readerCount;
    sVar6 = psVar1->v;
    psVar1->v = psVar1->v + 1;
    UNLOCK();
    if ((sdword)(sVar6 + 1) < 0) {
      sync_runtime_SemacquireRWMutexR(&(pgStack0000000000000008->mu).readerSem,false,0);
    }
    ppfVar3 = pgStack0000000000000008->recycler;
    if (ppfVar3 != (func_interface____ **)0x0) {
      uVar4 = (pgStack0000000000000008->events).len;
      uVar5 = (pgStack0000000000000008->events).cap;
      ~r0 = (pgStack0000000000000008->events).array;
      runtime_newobject((internal_abi_Type *)&DAT_0086ce60,~r0);
      extraout_RAX->fn = (uintptr)golang_org_x_net_trace___trace__unref_func2;
      extraout_RAX[1].fn = (uintptr)&PTR_golang_org_x_net_trace___trace__unref_func1_008ebab0;
      fn = extraout_RAX;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11 = (int)ppfVar3;
        fn = extraout_RAX_00;
      }
      fn[2].fn = (uintptr)ppfVar3;
      fn[4].fn = uVar4;
      fn[5].fn = uVar5;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
