    if (uVar1 == 5) {
      return;
    }
    if (uVar1 == 6) {
      return;
    }
  }
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
  extraout_RAX[1] = 0x11;
  *extraout_RAX = &DAT_008b6deb;
  extraout_RAX[2] = uVar1;
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe0);
}



void reflect_Value_CanInterface(reflect_Value v,bool ~r0)

{
  undefined8 *extraout_RAX;
  int in_RCX;
  void *in_RBX;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RCX != 0) {
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
  extraout_RAX[1] = 0x1a;
  *extraout_RAX = &DAT_008bc313;
  extraout_RAX[2] = 0;
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe8);
}



void reflect_Value_Interface(reflect_Value v,interface___ i)

{
  interface___ ~r0;
  bool in_AL;
  void *unaff_RBP;
  int unaff_R14;
  reflect_Value in_stack_ffffffffffffffd8;
  internal_abi_Type *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0.data = unaff_RBP;
  ~r0._type = in_stack_fffffffffffffff0;
  reflect_valueInterface(in_stack_ffffffffffffffd8,in_AL,~r0);
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void reflect_valueInterface(reflect_Value v,bool safe,interface___ ~r0)

{
  reflect_Value v_00;
  reflect_Value v_01;
  reflect_Value v_02;
  reflect_Value ~r0_00;
  undefined7 in_register_00000001;
  int ~r0_01;
  int extraout_RAX;
  int extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  uint in_RCX;
  uint extraout_RCX;
  void *in_RBX;
  undefined8 unaff_RBP;
  char in_DIL;
  int unaff_R14;
  reflect_flag unaff_retaddr;
  interface___ in_stack_ffffffffffffffc8;
  internal_abi_Type *in_stack_ffffffffffffffd8;
  interface___ in_stack_ffffffffffffffe0;
  undefined8 in_stack_fffffffffffffff0;
  
  ~r0_01 = CONCAT71(in_register_00000001,safe);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RCX == 0) {
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
    extraout_RAX_01[1] = 0x17;
    *extraout_RAX_01 = &DAT_008bab86;
    extraout_RAX_01[2] = 0;
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffc8);
  }
  if ((in_DIL != '\0') && ((in_RCX & 0x60) != 0)) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffc8);
  }
  if (((dword)in_RCX >> 9 & 1) != 0) {
    v_02.ptr = in_stack_ffffffffffffffe0._type;
    v_02.flag = (reflect_flag)in_stack_ffffffffffffffe0.data;
    v_02.typ_ = in_stack_ffffffffffffffd8;
    ~r0_00.ptr = (void *)unaff_RBP;
    ~r0_00.typ_ = (internal_abi_Type *)in_stack_fffffffffffffff0;
    ~r0_00.flag = unaff_retaddr;
    reflect_makeMethodValue((string)in_stack_ffffffffffffffc8,v_02,~r0_00);
    ~r0_01 = extraout_RAX;
    in_RCX = extraout_RCX;
  }
  if (((dword)in_RCX & 0x1f) == 0x14) {
    v_00.flag = (reflect_flag)in_stack_ffffffffffffffd8;
    v_00.typ_ = in_stack_ffffffffffffffc8._type;
    v_00.ptr = in_stack_ffffffffffffffc8.data;
    reflect_Value_NumMethod(v_00,~r0_01);
    if (extraout_RAX_00 != 0) {
      return;
    }
    return;
  }
  v_01.flag = (reflect_flag)in_stack_ffffffffffffffd8;
  v_01.typ_ = in_stack_ffffffffffffffc8._type;
  v_01.ptr = in_stack_ffffffffffffffc8.data;
  reflect_packEface(v_01,in_stack_ffffffffffffffe0);
  return;
}



void reflect_Value_InterfaceData(reflect_Value v,uintptr ~r0 [2])

{
  void *pvVar1;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar2;
  undefined8 *extraout_RAX_01;
  dword in_ECX;
  void *in_RBX;
  void *extraout_RBX;
  void *~r0_00;
  void **extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_ECX & 0x1f) != 0x14) {
    reflect_valueMethodName((string)in_stack_ffffffffffffffd0);
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_00);
    extraout_RAX_00[1] = ~r0_00;
    puVar2 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = extraout_RAX;
      puVar2 = extraout_RAX_01;
    }
    *puVar2 = extraout_RAX;
    puVar2[2] = (uint)(in_ECX & 0x1f);
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffd0);
  }
  pvVar1 = reflect_dummy.x.data;
  if ((reflect_dummy.b != false) &&
     (reflect_dummy.x._type = (internal_abi_Type *)&DAT_008079a0, pvVar1 = in_RBX,
     runtime_writeBarrier._0_4_ != 0)) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RBX;
    extraout_R11[1] = reflect_dummy.x.data;
    pvVar1 = extraout_RBX;
  }
  reflect_dummy.x.data = pvVar1;
  return;
}



void reflect_Value_IsNil(reflect_Value v,bool ~r0)

{
  undefined8 *extraout_RAX;
  dword in_ECX;
  uint uVar1;
  reflect_Kind k;
  void *in_RBX;
  void *ptr;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar1 = (uint)(in_ECX & 0x1f);
  if (uVar1 < 0x15) {
    if (1 < uVar1 - 0x12) {
      if (uVar1 == 0x14) {
        return;
      }
LAB_004da929:
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
      extraout_RAX[1] = 0x13;
      *extraout_RAX = &DAT_008b814d;
      extraout_RAX[2] = uVar1;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffe0);
    }
  }
  else if (0x16 < uVar1) {
    if (uVar1 == 0x17) {
      return;
    }
    if (uVar1 != 0x1a) goto LAB_004da929;
  }
  if ((in_ECX >> 9 & 1) != 0) {
    return;
  }
  return;
}



void reflect_Value_IsValid(reflect_Value v,bool ~r0)

{
  return;
}



void reflect_Value_IsZero(reflect_Value v,bool ~r0)

{
  reflect_Value v_00;
  reflect_Value v_01;
  reflect_Value v_02;
  reflect_Value v_03;
  reflect_Value v_04;
  reflect_Value v_05;
  reflect_Value v_06;
  reflect_Value ~r0_00;
  reflect_Value ~r0_01;
  bool ~r0_02;
  char extraout_AL;
  bool ~r0_03;
  char extraout_AL_00;
  undefined7 in_register_00000001;
  uint *~r0_04;
  int extraout_RAX;
  int n;
  reflect_flag extraout_RAX_00;
  int n_1;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  dword in_ECX;
  int iVar1;
  int iVar2;
  void *in_RBX;
  void *p;
  uint uVar3;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff98;
  reflect_flag in_stack_ffffffffffffffa8;
  undefined8 in_stack_ffffffffffffffb0;
  undefined8 in_stack_ffffffffffffffb8;
  reflect_flag in_stack_ffffffffffffffc0;
  reflect_flag rVar4;
  int i_1;
  int i;
  
  ~r0_04 = (uint *)CONCAT71(in_register_00000001,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar3 = (uint)(in_ECX & 0x1f);
  switch(uVar3) {
  case 1:
    return;
  case 2:
  case 3:
  case 4:
  case 5:
  case 6:
    break;
  case 7:
  case 8:
  case 9:
  case 10:
  case 0xb:
  case 0xc:
    if (uVar3 < 10) {
      if (((uVar3 != 7) && (uVar3 != 8)) && (uVar3 != 9)) {
LAB_004dad9b:
        runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
        extraout_RAX_04[1] = 0x12;
        *extraout_RAX_04 = &DAT_008b7823;
        extraout_RAX_04[2] = uVar3;
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffff98);
      }
    }
    else if (((uVar3 != 10) && (uVar3 != 0xb)) && (uVar3 != 0xc)) goto LAB_004dad9b;
    return;
  case 0xd:
  case 0xe:
    if ((uVar3 != 0xd) && (uVar3 != 0xe)) {
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
      extraout_RAX_03[1] = 0x13;
      *extraout_RAX_03 = &DAT_008b8160;
      extraout_RAX_03[2] = uVar3;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff98);
    }
    return;
  case 0xf:
  case 0x10:
    if ((uVar3 != 0xf) && (uVar3 != 0x10)) {
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
      extraout_RAX_02[1] = 0x15;
      *extraout_RAX_02 = &DAT_008b95a7;
      extraout_RAX_02[2] = uVar3;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff98);
    }
    return;
  case 0x11:
    if (((code **)~r0_04[3] != (code **)0x0) && (*~r0_04 < 0x401)) {
      if ((in_ECX >> 7 & 1) == 0) {
        return;
      }
      (**(code **)~r0_04[3])(in_RBX,runtime_zeroVal);
      return;
    }
    v_00.flag = in_stack_ffffffffffffffa8;
    v_00.typ_ = in_stack_ffffffffffffff98._type;
    v_00.ptr = in_stack_ffffffffffffff98.data;
    reflect_Value_lenNonSlice(v_00,(int)~r0_04);
    iVar2 = 0;
    iVar1 = extraout_RAX;
    while( true ) {
      if (iVar1 <= iVar2) {
        return;
      }
      v_05.flag = in_stack_ffffffffffffffa8;
      v_05.typ_ = in_stack_ffffffffffffff98._type;
      v_05.ptr = in_stack_ffffffffffffff98.data;
      ~r0_01.ptr = (void *)iVar1;
      ~r0_01.typ_ = (internal_abi_Type *)in_stack_ffffffffffffffb0;
      ~r0_01.flag = in_stack_ffffffffffffffc0;
      reflect_Value_Index(v_05,(int)~r0_04,~r0_01);
      v_06.flag = in_stack_ffffffffffffffa8;
      v_06.typ_ = in_stack_ffffffffffffff98._type;
      v_06.ptr = in_stack_ffffffffffffff98.data;
      reflect_Value_IsZero(v_06,~r0_03);
      if (extraout_AL_00 == '\0') break;
      iVar2 = iVar2 + 1;
    }
    return;
  case 0x12:
  case 0x13:
  case 0x14:
  case 0x15:
  case 0x16:
  case 0x17:
  case 0x1a:
    if (uVar3 < 0x15) {
      if ((1 < uVar3 - 0x12) && (uVar3 != 0x14)) {
LAB_004dac5d:
        runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
        extraout_RAX_01[1] = 0x13;
        *extraout_RAX_01 = &DAT_008b814d;
        extraout_RAX_01[2] = uVar3;
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffff98);
      }
    }
    else if (((0x16 < uVar3) && (uVar3 != 0x17)) && (uVar3 != 0x1a)) goto LAB_004dac5d;
    return;
  case 0x18:
    v_01.flag = in_stack_ffffffffffffffa8;
    v_01.typ_ = in_stack_ffffffffffffff98._type;
    v_01.ptr = in_stack_ffffffffffffff98.data;
    reflect_Value_lenNonSlice(v_01,(int)~r0_04);
    return;
  case 0x19:
    if (((code **)~r0_04[3] != (code **)0x0) && (*~r0_04 < 0x401)) {
      if ((in_ECX >> 7 & 1) == 0) {
        return;
      }
      (**(code **)~r0_04[3])(in_RBX,runtime_zeroVal);
      return;
    }
    v_02.flag = in_stack_ffffffffffffffa8;
    v_02.typ_ = in_stack_ffffffffffffff98._type;
    v_02.ptr = in_stack_ffffffffffffff98.data;
    reflect_Value_NumField(v_02,(int)~r0_04);
    iVar1 = 0;
    rVar4 = extraout_RAX_00;
    while( true ) {
      if ((int)rVar4 <= iVar1) {
        return;
      }
      v_03.flag = in_stack_ffffffffffffffa8;
      v_03.typ_ = in_stack_ffffffffffffff98._type;
      v_03.ptr = in_stack_ffffffffffffff98.data;
      ~r0_00.ptr = (void *)in_stack_ffffffffffffffb8;
      ~r0_00.typ_ = (internal_abi_Type *)in_stack_ffffffffffffffb0;
      ~r0_00.flag = rVar4;
      reflect_Value_Field(v_03,(int)~r0_04,~r0_00);
      v_04.flag = in_stack_ffffffffffffffa8;
      v_04.typ_ = in_stack_ffffffffffffff98._type;
      v_04.ptr = in_stack_ffffffffffffff98.data;
      reflect_Value_IsZero(v_04,~r0_02);
      if (extraout_AL == '\0') break;
      iVar1 = iVar1 + 1;
    }
    return;
  default:
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
    extraout_RAX_06[1] = 0x14;
    *extraout_RAX_06 = &DAT_008b8fff;
    extraout_RAX_06[2] = uVar3;
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff98);
  }
  if (uVar3 < 4) {
    if ((uVar3 != 2) && (uVar3 != 3)) {
LAB_004dadd1:
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
      extraout_RAX_05[1] = 0x11;
      *extraout_RAX_05 = &DAT_008b6deb;
      extraout_RAX_05[2] = uVar3;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff98);
    }
  }
  else if (((uVar3 != 4) && (uVar3 != 5)) && (uVar3 != 6)) goto LAB_004dadd1;
  return;
}



void reflect_Value_SetZero(reflect_Value v)

{
  internal_abi_Type *in_RAX;
  undefined8 extraout_RAX;
  undefined8 extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  uint in_RCX;
  uint uVar1;
  undefined (*in_RBX) [16];
  undefined (*extraout_RBX) [16];
  undefined (*extraout_RBX_00) [16];
  undefined (*extraout_RBX_01) [16];
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((in_RCX & 0x60) != 0) || (((dword)in_RCX >> 8 & 1) == 0)) {
    reflect_flag_mustBeAssignableSlow(in_RCX);
  }
  uVar1 = (uint)((dword)in_RCX & 0x1f);
  switch(uVar1) {
  case 1:
    (*in_RBX)[0] = 0;
    break;
  case 2:
    *(undefined8 *)*in_RBX = 0;
    break;
  case 3:
    (*in_RBX)[0] = 0;
    break;
  case 4:
    *(undefined2 *)*in_RBX = 0;
    break;
  case 5:
    *(undefined4 *)*in_RBX = 0;
    break;
  case 6:
    *(undefined8 *)*in_RBX = 0;
    break;
  case 7:
    *(undefined8 *)*in_RBX = 0;
    break;
  case 8:
    (*in_RBX)[0] = 0;
    break;
  case 9:
    *(undefined2 *)*in_RBX = 0;
    break;
  case 10:
    *(undefined4 *)*in_RBX = 0;
    break;
  case 0xb:
    *(undefined8 *)*in_RBX = 0;
    break;
  case 0xc:
    *(undefined8 *)*in_RBX = 0;
    break;
  case 0xd:
    *(undefined4 *)*in_RBX = 0;
    break;
  case 0xe:
    *(undefined8 *)*in_RBX = 0;
    break;
  case 0xf:
    *(undefined4 *)*in_RBX = 0;
    *(undefined4 *)((int)*in_RBX + 4) = 0;
    break;
  case 0x10:
    *(undefined8 *)*in_RBX = 0;
    *(undefined8 *)((int)*in_RBX + 8) = 0;
    break;
  case 0x11:
  case 0x19:
    reflect_typedmemclr(in_RAX,in_RBX);
    break;
  case 0x12:
  case 0x13:
  case 0x15:
  case 0x16:
  case 0x1a:
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_01 = extraout_RAX_01;
      in_RBX = extraout_RBX_01;
    }
    *(undefined8 *)*in_RBX = 0;
    break;
  case 0x14:
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_wbZero((internal_abi_Type *)&DAT_00814200,in_RBX);
    }
    *in_RBX = in_XMM15;
    break;
  case 0x17:
    *(undefined (*) [16])((int)*in_RBX + 8) = in_XMM15;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = extraout_RAX;
      in_RBX = extraout_RBX;
    }
    *(undefined8 *)*in_RBX = 0;
    break;
  case 0x18:
    *(undefined8 *)((int)*in_RBX + 8) = 0;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = extraout_RAX_00;
      in_RBX = extraout_RBX_00;
    }
    *(undefined8 *)*in_RBX = 0;
    break;
  default:
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
    extraout_RAX_02[1] = 0x15;
    *extraout_RAX_02 = &DAT_008b989b;
    extraout_RAX_02[2] = uVar1;
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffd0);
  }
  return;
}



void reflect_Value_Kind(reflect_Value v,reflect_Kind ~r0)

{
  return;
}



void reflect_Value_Len(reflect_Value v,int ~r0)

{
  dword in_ECX;
  int unaff_R14;
  reflect_Value in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_ECX & 0x1f) == 0x17) {
    return;
  }
  reflect_Value_lenNonSlice(in_stack_ffffffffffffffe0,~r0);
  return;
}



void reflect_Value_lenNonSlice(reflect_Value v,int ~r0)

{
  undefined8 *extraout_RAX;
  byte bVar1;
  dword in_ECX;
  uint uVar2;
  reflect_Kind k;
  int iVar3;
  runtime_hchan *in_RBX;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar2 = (uint)(in_ECX & 0x1f);
  if (uVar2 < 0x13) {
    if (uVar2 == 0x11) {
      return;
    }
    if (uVar2 == 0x12) {
      if ((*(int *)~r0 == 8) && (*(int *)(~r0 + 8) != 0)) {
        if ((in_ECX >> 7 & 1) != 0) {
          in_RBX = (runtime_hchan *)in_RBX->qcount;
        }
        reflect_chanlen(in_RBX,(int)in_RBX);
        return;
      }
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffe0);
    }
LAB_004db2f0:
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
    extraout_RAX[1] = 0x11;
    *extraout_RAX = &DAT_008b6e2f;
    extraout_RAX[2] = uVar2;
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe0);
  }
  if (uVar2 == 0x15) {
    if ((*(int *)~r0 == 8) && (*(int *)(~r0 + 8) != 0)) {
      if ((in_ECX >> 7 & 1) != 0) {
        in_RBX = (runtime_hchan *)in_RBX->qcount;
      }
      reflect_maplen((runtime_hmap *)in_RBX,(int)in_RBX);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe0);
  }
  if (uVar2 != 0x16) {
    if (uVar2 == 0x18) {
      return;
    }
    goto LAB_004db2f0;
  }
  bVar1 = *(byte *)(~r0 + 0x17) & 0x1f;
  if (bVar1 < 0x13) {
    if (bVar1 == 0x11) {
      iVar3 = *(int *)(~r0 + 0x30);
      goto LAB_004db266;
    }
    if (bVar1 == 0x12) {
      iVar3 = *(int *)(~r0 + 0x30);
      goto LAB_004db266;
    }
  }
  else {
    if (bVar1 == 0x15) {
      iVar3 = *(int *)(~r0 + 0x38);
      goto LAB_004db266;
    }
    if (bVar1 == 0x16) {
      iVar3 = *(int *)(~r0 + 0x30);
      goto LAB_004db266;
    }
    if (bVar1 == 0x17) {
      iVar3 = *(int *)(~r0 + 0x30);
      goto LAB_004db266;
    }
  }
  iVar3 = 0;
LAB_004db266:
  if ((*(byte *)(iVar3 + 0x17) & 0x1f) == 0x11) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe0);
}



void reflect_Value_MapIndex(reflect_Value v,reflect_Value key,reflect_Value ~r0)

{
  reflect_Value v_00;
  reflect_Value ~r0_00;
  reflect_Value ~r0_01;
  internal_abi_MapType *in_RAX;
  void *extraout_RAX;
  void *e;
  void *extraout_RAX_00;
  void *pvVar1;
  undefined8 extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *puVar2;
  undefined8 *extraout_RAX_03;
  dword dVar3;
  uint in_RCX;
  reflect_flag extraout_RCX;
  internal_abi_Type *typ;
  runtime_hmap *in_RBX;
  void *extraout_RBX;
  void *k;
  void *~r0_02;
  void **in_RSI;
  reflect_flag fl;
  internal_abi_Type *in_RDI;
  void *~r0_03;
  reflect_flag in_R8;
  undefined8 *extraout_R11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff98;
  reflect_flag in_stack_ffffffffffffffa8;
  string in_stack_ffffffffffffffb0;
  undefined in_stack_ffffffffffffffc0 [16];
  reflect_flag in_stack_ffffffffffffffd0;
  
  key.ptr = in_RSI;
  key.typ_ = in_RDI;
  key.flag = in_R8;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  dVar3 = (dword)in_RCX;
  if ((dVar3 & 0x1f) != 0x15) {
    reflect_valueMethodName((string)in_stack_ffffffffffffff98);
    pvVar1 = ~r0_02;
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_02);
    extraout_RAX_02[1] = pvVar1;
    puVar2 = extraout_RAX_02;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = extraout_RAX_01;
      puVar2 = extraout_RAX_03;
    }
    *puVar2 = extraout_RAX_01;
    puVar2[2] = (uint)(dVar3 & 0x1f);
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff98);
  }
  if ((((reflect_stringType == in_RAX->Key) || (((dword)key.flag & 0x1f) == 0x18)) &&
      (key.typ_ == in_RAX->Key)) && (in_RAX->Elem->Size_ < 0x81)) {
    if (((in_RAX->Type).Size_ != 8) || ((in_RAX->Type).PtrBytes == 0)) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff98);
    }
    if ((dVar3 >> 7 & 1) != 0) {
      in_RBX = (runtime_hmap *)in_RBX->count;
    }
                    // WARNING: Load size is inaccurate
    reflect_mapaccess_faststr(in_RAX,in_RBX,(string)in_stack_ffffffffffffff98,*key.ptr);
    pvVar1 = extraout_RAX;
  }
  else {
    v_00.flag = in_stack_ffffffffffffffa8;
    v_00.typ_ = in_stack_ffffffffffffff98._type;
    v_00.ptr = in_stack_ffffffffffffff98.data;
    ~r0_01.flag = in_stack_ffffffffffffffd0;
    ~r0_01.typ_ = (internal_abi_Type *)in_stack_ffffffffffffffc0._0_8_;
    ~r0_01.ptr = (void *)in_stack_ffffffffffffffc0._8_8_;
    reflect_Value_assignTo(v_00,in_stack_ffffffffffffffb0,key.typ_,key.ptr,~r0_01);
    k = extraout_RBX;
    if (((dword)extraout_RCX >> 7 & 1) == 0) {
      k = &key.ptr;
    }
    if (((in_RAX->Type).Size_ != 8) || ((in_RAX->Type).PtrBytes == 0)) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff98);
    }
    if ((dVar3 >> 7 & 1) != 0) {
      in_RBX = (runtime_hmap *)in_RBX->count;
    }
    key.flag = extraout_RCX;
    reflect_mapaccess(in_RAX,in_RBX,k,~r0_03);
    pvVar1 = extraout_RAX_00;
  }
  if (pvVar1 == (void *)0x0) {
    return;
  }
  fl = 0;
  if (((key.flag | in_RCX) & 0x60) != 0) {
    fl = 0x20;
  }
  ~r0_00.flag = in_stack_ffffffffffffffa8;
  ~r0_00.typ_ = in_stack_ffffffffffffff98._type;
  ~r0_00.ptr = in_stack_ffffffffffffff98.data;
  reflect_copyVal(in_RAX->Elem,in_RAX->Elem->Kind_ & 0x1f | fl,pvVar1,~r0_00);
  return;
}



void reflect_Value_MapKeys(reflect_Value v,__reflect_Value ~r0)

{
  byte bVar1;
  internal_abi_Type *typ;
  reflect_Value ~r0_00;
  int *in_RAX;
  uint extraout_RAX;
  int mlen;
  int extraout_RAX_00;
  undefined8 uVar2;
  void *ptr;
  void *key;
  undefined8 extraout_RAX_01;
  undefined8 extraout_RAX_02;
  undefined8 extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *puVar3;
  undefined8 *extraout_RAX_05;
  dword in_ECX;
  uint len;
  uint uVar4;
  undefined8 extraout_RCX;
  void *m;
  void *extraout_RBX;
  undefined8 uVar5;
  void *extraout_RBX_00;
  void *~r0_01;
  undefined8 extraout_RBX_01;
  undefined8 extraout_RBX_02;
  void *~r0_02;
  internal_abi_Type *keyType;
  int iVar6;
  int extraout_RSI;
  void *~r0_03;
  int iVar7;
  int extraout_RDI;
  uint uVar8;
  reflect_flag fl;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  undefined auVar9 [16];
  interface___ in_stack_ffffffffffffff30;
  reflect_flag in_stack_ffffffffffffff40;
  int i;
  reflect_hiter it;
  
  while (&it.h <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_ECX & 0x1f) != 0x15) {
    reflect_valueMethodName((string)in_stack_ffffffffffffff30);
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_02);
    extraout_RAX_04[1] = ~r0_02;
    puVar3 = extraout_RAX_04;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = extraout_RAX_03;
      puVar3 = extraout_RAX_05;
    }
    *puVar3 = extraout_RAX_03;
    puVar3[2] = (uint)(in_ECX & 0x1f);
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff30);
  }
  typ = (internal_abi_Type *)in_RAX[6];
  bVar1 = typ->Kind_;
  uVar8 = 0;
  if ((in_ECX & 0x60) != 0) {
    uVar8 = 0x20;
  }
  if ((*in_RAX == 8) && (in_RAX[1] != 0)) {
    if ((in_ECX >> 7 & 1) != 0) {
                    // WARNING: Load size is inaccurate
      m = *m;
    }
    if (m == (void *)0x0) {
      len = 0;
    }
    else {
      reflect_maplen((runtime_hmap *)m,(int)m);
      len = extraout_RAX;
    }
    auVar9 = FUN_0046cdab();
    reflect_mapiterinit(auVar9._0_8_,auVar9._8_8_,(runtime_hiter *)&it);
    runtime_makeslice((internal_abi_Type *)&DAT_008ada60,len,len,~r0_03);
    uVar4 = 0;
    ~r0_01 = extraout_RBX;
    while (((int)uVar4 < (int)len &&
           (reflect_mapiterkey((runtime_hiter *)&it,~r0_01), ptr != (void *)0x0))) {
      ~r0_00.flag = in_stack_ffffffffffffff40;
      ~r0_00.typ_ = in_stack_ffffffffffffff30._type;
      ~r0_00.ptr = in_stack_ffffffffffffff30.data;
      reflect_copyVal(typ,uVar8 | bVar1 & 0x1f,ptr,~r0_00);
      iVar6 = uVar4 * 3;
      *(undefined8 *)(extraout_RAX_00 + 0x10 + uVar4 * 0x18) = extraout_RCX;
      uVar2 = extraout_RAX_01;
      uVar5 = extraout_RBX_01;
      iVar7 = extraout_RAX_00;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier4();
        *extraout_R11 = extraout_RAX_02;
        extraout_R11[1] = *(undefined8 *)(extraout_RDI + extraout_RSI * 8);
        extraout_R11[2] = extraout_RBX_02;
        extraout_R11[3] = *(undefined8 *)(extraout_RDI + 8 + extraout_RSI * 8);
        uVar2 = extraout_RAX_02;
        uVar5 = extraout_RBX_02;
        iVar6 = extraout_RSI;
        iVar7 = extraout_RDI;
      }
      *(undefined8 *)(iVar7 + iVar6 * 8) = uVar2;
      *(undefined8 *)(iVar7 + 8 + iVar6 * 8) = uVar5;
      reflect_mapiternext((runtime_hiter *)&it);
      uVar4 = uVar4 + 1;
      ~r0_01 = extraout_RBX_00;
    }
    if (len < uVar4) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffff30);
}



void reflect___MapIter__Key(reflect_MapIter *iter,reflect_Value ~r0)

{
  internal_abi_Type *typ;
  reflect_Value ~r0_00;
  void *ptr;
  void *iterkey;
  uint uVar1;
  void *in_RBX;
  void *extraout_RBX;
  internal_abi_Type *ktype;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe0;
  reflect_flag in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  if ((iter->hiter).t != (void *)0x0) {
    reflect_mapiterkey((runtime_hiter *)&iter->hiter,in_RBX);
    if (ptr != (void *)0x0) {
      typ = (internal_abi_Type *)(iter->m).typ_[1].Size_;
      uVar1 = 0;
      if (((iter->m).flag & 0x60) != 0) {
        uVar1 = 0x20;
      }
      ~r0_00.flag = in_stack_fffffffffffffff0;
      ~r0_00.typ_ = in_stack_ffffffffffffffe0._type;
      ~r0_00.ptr = in_stack_ffffffffffffffe0.data;
      reflect_copyVal(typ,typ->Kind_ & 0x1f | uVar1,ptr,~r0_00);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe0);
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe0);
}



void reflect_Value_SetIterKey(reflect_Value v,reflect_MapIter *iter)

{
  uint f;
  internal_abi_Type *dst;
  reflect_Value v_00;
  reflect_Value ~r0;
  void *target_00;
  void *iterkey;
  uint in_RCX;
  void *in_RBX;
  void *target;
  void *src;
