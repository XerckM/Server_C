        return;
      }
      if (out.buf.array == (uint8 *)0x0) {
        if (in_RBX < (uint)out.w) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAlen();
        }
      }
      else {
        if ((uint)out.buf.cap < (uint)out.w) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAcap();
        }
        runtime_slicebytetostring
                  ((runtime_tmpBuf *)0x0,out.buf.array,out.w,in_stack_ffffffffffffff80);
      }
      return;
    }
    if (in_RBX <= puVar5) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (in_RAX[(int)puVar5] != 0x2f) break;
    puVar6 = puVar5 + 1;
  }
  if (in_RAX[(int)puVar5] == 0x2e) goto code_r0x0049ebd9;
  goto LAB_0049eefb;
code_r0x0049ebd9:
  puVar6 = puVar5 + 1;
  if (in_RBX == puVar6) goto LAB_0049ebaa;
  if (in_RBX <= puVar6) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if ((in_RAX + 1)[(int)puVar5] == 0x2f) goto LAB_0049ebaa;
  if (in_RBX <= puVar6) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if ((in_RAX + 1)[(int)puVar5] != 0x2e) {
LAB_0049eefb:
    if (uVar1 == 0x2f) {
      if (out.w == 1) goto LAB_0049f079;
    }
    else if (out.w == 0) goto LAB_0049f079;
    if (out.buf.array == (uint8 *)0x0) {
      if (out.w < (int)in_RBX) {
        if (in_RBX <= (uint)out.w) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        if (in_RAX[out.w] == 0x2f) {
          out.w = out.w + 1;
          goto LAB_0049f079;
        }
      }
      runtime_makeslice((internal_abi_Type *)&DAT_00807920,(int)in_RBX,(int)in_RBX,(void *)out.w);
      out.buf.cap = (int)in_RBX;
      out.buf.len = (int)in_RBX;
      out.buf.array = __dest_03;
      if (in_RBX < (uint)out.w) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAlen();
      }
      puVar6 = in_RBX;
      if (out.w < (int)in_RBX) {
        puVar6 = (undefined *)out.w;
      }
      if (__dest_03 != in_RAX) {
        runtime_memmove(__dest_03,in_RAX,(size_t)puVar6);
      }
    }
    if ((uint)out.buf.len <= (uint)out.w) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    out.buf.array[out.w] = 0x2f;
    out.w = out.w + 1;
LAB_0049f079:
    for (; puVar6 = puVar5, (int)puVar5 < (int)in_RBX; puVar5 = puVar5 + 1) {
      bVar2 = in_RAX[(int)puVar5];
      if (bVar2 == 0x2f) break;
      if (out.buf.array == (uint8 *)0x0) {
        if ((int)in_RBX <= out.w) {
LAB_0049f0d0:
          runtime_makeslice((internal_abi_Type *)&DAT_00807920,(int)in_RBX,(int)in_RBX,
                            (void *)(uint)bVar2);
          out.buf.cap = (int)in_RBX;
          out.buf.len = (int)in_RBX;
          out.buf.array = __dest_04;
          if (in_RBX < (uint)out.w) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceAlen();
          }
          puVar6 = in_RBX;
          if (out.w < (int)in_RBX) {
            puVar6 = (undefined *)out.w;
          }
          if (__dest_04 != in_RAX) {
            runtime_memmove(__dest_04,in_RAX,(size_t)puVar6);
          }
          goto LAB_0049f149;
        }
        if (in_RBX <= (uint)out.w) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        if (in_RAX[out.w] != bVar2) goto LAB_0049f0d0;
        out.w = out.w + 1;
      }
      else {
LAB_0049f149:
        if ((uint)out.buf.len <= (uint)out.w) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        out.buf.array[out.w] = bVar2;
        out.w = out.w + 1;
      }
    }
    goto LAB_0049ebaa;
  }
  puVar6 = puVar5 + 2;
  if (in_RBX != puVar6) {
    if (in_RBX <= puVar6) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (in_RAX[(int)(puVar5 + 2)] != 0x2f) goto LAB_0049eefb;
  }
  if ((int)puVar4 < out.w) {
    out.w = out.w + -1;
    while ((int)puVar4 < out.w) {
      if (out.buf.array == (uint8 *)0x0) {
        if (in_RBX <= (uint)out.w) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        uVar7 = in_RAX[out.w];
      }
      else {
        if ((uint)out.buf.len <= (uint)out.w) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        uVar7 = out.buf.array[out.w];
      }
      if (uVar7 == 0x2f) break;
      out.w = out.w + -1;
    }
    goto LAB_0049ebaa;
  }
  if (uVar1 == 0x2f) goto LAB_0049ebaa;
  if (0 < out.w) {
    if (out.buf.array == (uint8 *)0x0) {
      if (out.w < (int)in_RBX) {
        if (in_RBX <= (uint)out.w) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        if (in_RAX[out.w] == 0x2f) {
          out.w = out.w + 1;
          goto LAB_0049ed3b;
        }
      }
      runtime_makeslice((internal_abi_Type *)&DAT_00807920,(int)in_RBX,(int)in_RBX,puVar6);
      out.buf.cap = (int)in_RBX;
      out.buf.len = (int)in_RBX;
      out.buf.array = __dest_00;
      if (in_RBX < (uint)out.w) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAlen();
      }
      puVar4 = in_RBX;
      if (out.w < (int)in_RBX) {
        puVar4 = (undefined *)out.w;
      }
      if (__dest_00 != in_RAX) {
        runtime_memmove(__dest_00,in_RAX,(size_t)puVar4);
      }
    }
    if ((uint)out.buf.len <= (uint)out.w) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    out.buf.array[out.w] = 0x2f;
    out.w = out.w + 1;
  }
LAB_0049ed3b:
  if (out.buf.array == (uint8 *)0x0) {
    if ((int)in_RBX <= out.w) {
LAB_0049ed79:
      runtime_makeslice((internal_abi_Type *)&DAT_00807920,(int)in_RBX,(int)in_RBX,puVar6);
      out.buf.cap = (int)in_RBX;
      out.buf.len = (int)in_RBX;
      out.buf.array = __dest_01;
      if (in_RBX < (uint)out.w) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAlen();
      }
      puVar4 = in_RBX;
      if (out.w < (int)in_RBX) {
        puVar4 = (undefined *)out.w;
      }
      if (__dest_01 != in_RAX) {
        runtime_memmove(__dest_01,in_RAX,(size_t)puVar4);
      }
      goto LAB_0049ede4;
    }
    if (in_RBX <= (uint)out.w) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (in_RAX[out.w] != 0x2e) goto LAB_0049ed79;
    iVar3 = out.w;
  }
  else {
LAB_0049ede4:
    if ((uint)out.buf.len <= (uint)out.w) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    out.buf.array[out.w] = 0x2e;
    iVar3 = out.w;
  }
  out.w = iVar3 + 1;
  if (out.buf.array == (uint8 *)0x0) {
    if (out.w < (int)in_RBX) {
      if (in_RBX <= (uint)out.w) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if (in_RAX[out.w] == 0x2e) {
        out.w = iVar3 + 2;
        goto LAB_0049eedb;
      }
    }
    runtime_makeslice((internal_abi_Type *)&DAT_00807920,(int)in_RBX,(int)in_RBX,puVar6);
    out.buf.len = (int)in_RBX;
    out.buf.array = __dest_02;
    if (in_RBX < (uint)out.w) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    puVar4 = in_RBX;
    if (out.w < (int)in_RBX) {
      puVar4 = (undefined *)out.w;
    }
    out.buf.cap = (int)in_RBX;
    if (__dest_02 != in_RAX) {
      runtime_memmove(__dest_02,in_RAX,(size_t)puVar4);
    }
  }
  if ((uint)out.buf.len <= (uint)out.w) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  out.buf.array[out.w] = 0x2e;
  out.w = iVar3 + 2;
LAB_0049eedb:
  puVar4 = (undefined *)out.w;
  goto LAB_0049ebaa;
}



void path_Join(__string elem,string ~r0)

{
  void *__n;
  void *__src;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  string ~r0_02;
  void **in_RAX;
  void **ppvVar1;
  uint8 *extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *extraout_RAX_01;
  uint8 *ptr;
  int iVar2;
  uint extraout_RCX;
  uint extraout_RCX_00;
  int in_RBX;
  uint n;
  uint newLen;
  uint extraout_RBX;
  uint extraout_RBX_00;
  int size;
  void *in_RDI;
  uint cap;
  void *extraout_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffff78;
  uint8 *in_stack_ffffffffffffff88;
  int in_stack_ffffffffffffff90;
  
  while (&stack0xfffffffffffffff8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  size = 0;
  ppvVar1 = in_RAX;
  for (iVar2 = 0; iVar2 < in_RBX; iVar2 = iVar2 + 1) {
    in_RDI = ppvVar1[1];
    ppvVar1 = ppvVar1 + 2;
    size = size + (int)in_RDI;
  }
  if (size == 0) {
    return;
  }
  cap = (size + in_RBX) - 1;
  runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,cap,in_RDI);
  iVar2 = 0;
  n = 0;
  ptr = extraout_RAX;
  do {
    if (in_RBX <= iVar2) {
      runtime_slicebytetostring((runtime_tmpBuf *)0x0,ptr,n,in_stack_ffffffffffffff78);
      ~r0_02.len = in_stack_ffffffffffffff90;
      ~r0_02.str = in_stack_ffffffffffffff88;
      path_Clean(in_stack_ffffffffffffff78,~r0_02);
      return;
    }
    __n = in_RAX[1];
    __src = *in_RAX;
    if (n == 0) {
      if (__n != (void *)0x0) {
        newLen = 0;
        goto LAB_0049f3ca;
      }
    }
    else {
      newLen = n + 1;
      if (cap < newLen) {
        ~r0_00.cap = (int)in_stack_ffffffffffffff88;
        ~r0_00.array = in_stack_ffffffffffffff78.str;
        ~r0_00.len = in_stack_ffffffffffffff78.len;
        runtime_growslice(ptr,newLen,cap,1,(internal_abi_Type *)&DAT_00807920,~r0_00);
        ptr = extraout_RAX_00;
        newLen = extraout_RBX;
        cap = extraout_RCX;
      }
      ptr[newLen - 1] = 0x2f;
LAB_0049f3ca:
      n = (int)__n + newLen;
      if (cap < n) {
        ~r0_01.cap = (int)in_stack_ffffffffffffff88;
        ~r0_01.array = in_stack_ffffffffffffff78.str;
        ~r0_01.len = in_stack_ffffffffffffff78.len;
        runtime_growslice(ptr,n,cap,(int)__n,(internal_abi_Type *)&DAT_00807920,~r0_01);
        ptr = extraout_RAX_01;
        cap = extraout_RCX_00;
        n = extraout_RBX_00;
      }
      runtime_memmove(ptr + newLen,__src,(size_t)__n);
    }
    in_RAX = in_RAX + 2;
    iVar2 = iVar2 + 1;
  } while( true );
}



// Local variable j:int[RAX:8] conflicts with parameter, skipped.

void sort_Search(int n,func_int__bool **f,int ~r0)

{
  char cVar1;
  uint uVar2;
  int iVar3;
  int unaff_R14;
  func_int__bool **ppfStack0000000000000010;
  int i;
  
  ppfStack0000000000000010 = f;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar3 = 0;
  while (uVar2 = n, iVar3 < (int)uVar2) {
    n = iVar3 + uVar2 >> 1;
    cVar1 = (**ppfStack0000000000000010)(n,(bool *)ppfStack0000000000000010);
    if (cVar1 == '\0') {
      iVar3 = n + 1;
      n = uVar2;
    }
  }
  return;
}



void sort_IntSlice_Search(sort_IntSlice p,int x,int ~r0)

{
  int in_RCX;
  int unaff_R14;
  func_int__bool *local_30;
  int iStack_28;
  int local_20;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_30 = sort_IntSlice_Search_SearchInts_func1;
  iStack_28 = x;
  local_20 = ~r0;
  sort_Search(~r0,&local_30,in_RCX);
  return;
}



void sort_IntSlice_Search_SearchInts_func1(int i,bool ~r0)

{
  int in_RDX;
  int x;
  
  if ((uint)i < *(uint *)(in_RDX + 0x10)) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void sort_StringSlice_Search(sort_StringSlice p,string x,int ~r0)

{
  int in_RCX;
  int in_RBX;
  int unaff_R14;
  undefined local_38 [48];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_38._8_8_ = ~r0;
  local_38._0_8_ = sort_StringSlice_Search_SearchStrings_func1;
  sort_Search(in_RBX,(func_int__bool **)local_38,in_RCX);
  return;
}



void sort_StringSlice_Search_SearchStrings_func1(int i,bool ~r0)

{
  int in_RDX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  if ((uint)i < *(uint *)(in_RDX + 0x10)) {
    runtime_cmpstring();
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void sort_Slice(interface___ x,func_int__int__bool **less)

{
  int iVar1;
  internal_reflectlite_Value v;
  void *pvVar2;
  func_int__int__bool **extraout_RAX;
  int b;
  func_int__int_ **swap;
  uint extraout_RAX_00;
  int length;
  int in_RCX;
  internal_abi_Type *t;
  func_int__int__bool **~r0;
  void *in_RBX;
  void *extraout_RBX;
  internal_reflectlite_flag f;
  int limit;
  void **extraout_R11;
  int unaff_R14;
  sort_lessSwap in_stack_ffffffffffffff98;
  internal_reflectlite_flag in_stack_ffffffffffffffa8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (less == (func_int__int__bool **)0x0) {
    ~r0 = (func_int__int__bool **)0x0;
  }
  else {
    pvVar2 = internal_reflectlite_dummy.x.data;
    if ((internal_reflectlite_dummy.b != false) &&
       (internal_reflectlite_dummy.x._type = (internal_abi_Type *)less, pvVar2 = in_RBX,
       runtime_writeBarrier._0_4_ != 0)) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RBX;
      extraout_R11[1] = internal_reflectlite_dummy.x.data;
      less = extraout_RAX;
      pvVar2 = extraout_RBX;
    }
    internal_reflectlite_dummy.x.data = pvVar2;
    ~r0 = less;
    if (less == (func_int__int__bool **)0x0) {
      ~r0 = (func_int__int__bool **)0x0;
    }
  }
  internal_reflectlite_Swapper((interface___)in_stack_ffffffffffffff98,(func_int__int_ **)less);
  v.flag = in_stack_ffffffffffffffa8;
  v.typ = (internal_abi_Type *)in_stack_ffffffffffffff98.Less;
  v.ptr = in_stack_ffffffffffffff98.Swap;
  internal_reflectlite_Value_Len(v,(int)~r0);
  iVar1 = 0x3f;
  if (extraout_RAX_00 != 0) {
    for (; extraout_RAX_00 >> iVar1 == 0; iVar1 = iVar1 + -1) {
    }
  }
  sort_pdqsort_func(in_stack_ffffffffffffff98,in_RCX,b,0);
  return;
}



void sort_Sort(sort_Interface data)

{
  int iVar1;
  int in_RAX;
  uint uVar2;
  int n;
  int in_RBX;
  int limit;
  int unaff_R14;
  sort_Interface in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar2 = (**(code **)(in_RAX + 0x18))(in_RBX);
  if ((int)uVar2 < 2) {
    return;
  }
  iVar1 = 0x3f;
  if (uVar2 != 0) {
    for (; uVar2 >> iVar1 == 0; iVar1 = iVar1 + -1) {
    }
  }
  sort_pdqsort(in_stack_ffffffffffffffd0,in_RAX,in_RBX,0);
  return;
}



void sort_IntSlice_Len(sort_IntSlice x,int ~r0)

{
  return;
}



void sort_IntSlice_Less(sort_IntSlice x,int i,int j,bool ~r0)

{
  uint in_RSI;
  uint in_RDI;
  
  if ((uint)j <= in_RDI) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if (in_RSI < (uint)j) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void sort_IntSlice_Swap(sort_IntSlice x,int i,int j)

{
  undefined8 uVar1;
  uint in_RSI;
  uint in_RDI;
  
  if ((uint)j <= in_RDI) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  uVar1 = *(undefined8 *)(i + in_RDI * 8);
  if (in_RSI < (uint)j) {
    *(undefined8 *)(i + in_RDI * 8) = *(undefined8 *)(i + in_RSI * 8);
    *(undefined8 *)(i + in_RSI * 8) = uVar1;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void sort_IntSlice_Sort(sort_IntSlice x)

{
  __uint8 val;
  void *in_RAX;
  int unaff_R14;
  sort_Interface in_stack_ffffffffffffffe0;
  int in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  val.cap = in_stack_fffffffffffffff0;
  val.array = (uint8 *)in_stack_ffffffffffffffe0.tab;
  val.len = (int)in_stack_ffffffffffffffe0.data;
  runtime_convTslice(val,in_RAX);
  sort_Sort(in_stack_ffffffffffffffe0);
  return;
}



void sort_StringSlice_Len(sort_StringSlice x,int ~r0)

{
  return;
}



void sort_StringSlice_Less(sort_StringSlice x,int i,int j,bool ~r0)

{
  uint in_RSI;
  uint in_RDI;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RDI < (uint)j) {
    if (in_RSI < (uint)j) {
      runtime_cmpstring();
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void sort_StringSlice_Swap(sort_StringSlice x,int i,int j)

{
  int extraout_RAX;
  int extraout_RAX_00;
  undefined8 uVar1;
  undefined8 extraout_RBX;
  undefined8 uVar2;
  uint in_RSI;
  int iVar3;
  int extraout_RSI;
  int extraout_RSI_00;
  uint in_RDI;
  int iVar4;
  int extraout_RDI;
  undefined8 extraout_R8;
  undefined8 uVar5;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RDI < (uint)j) {
    iVar4 = in_RDI * 0x10;
    uVar1 = *(undefined8 *)(iVar4 + i);
    uVar5 = *(undefined8 *)(iVar4 + 8 + i);
    if (in_RSI < (uint)j) {
      iVar3 = in_RSI * 0x10;
      uVar2 = *(undefined8 *)(iVar3 + i);
      *(undefined8 *)(i + 8 + iVar4) = *(undefined8 *)(iVar3 + 8 + i);
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_RBX;
        extraout_R11[1] = *(undefined8 *)(extraout_RDI + extraout_RAX);
        i = extraout_RAX;
        uVar2 = extraout_RBX;
        iVar3 = extraout_RSI;
        iVar4 = extraout_RDI;
        uVar5 = extraout_R8;
      }
      *(undefined8 *)(i + iVar4) = uVar2;
      *(undefined8 *)(i + 8 + iVar3) = uVar5;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_00 = uVar1;
        extraout_R11_00[1] = *(undefined8 *)(extraout_RSI_00 + extraout_RAX_00);
        i = extraout_RAX_00;
        iVar3 = extraout_RSI_00;
      }
      *(undefined8 *)(i + iVar3) = uVar1;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void sort_StringSlice_Sort(sort_StringSlice x)

{
  __uint8 val;
  void *in_RAX;
  int unaff_R14;
  sort_Interface in_stack_ffffffffffffffe0;
  int in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  val.cap = in_stack_fffffffffffffff0;
  val.array = (uint8 *)in_stack_ffffffffffffffe0.tab;
  val.len = (int)in_stack_ffffffffffffffe0.data;
  runtime_convTslice(val,in_RAX);
  sort_Sort(in_stack_ffffffffffffffe0);
  return;
}



void sort_Stable(sort_Interface data)

{
  int in_RAX;
  undefined8 in_RBX;
  int unaff_R14;
  sort_Interface in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  (**(code **)(in_RAX + 0x18))(in_RBX);
  sort_stable(in_stack_ffffffffffffffe0,in_RAX);
  return;
}



void sort_insertionSort_func(sort_lessSwap data,int a,int b)

{
  char cVar1;
  int in_RCX;
  int i;
  int j;
  int iVar2;
  int in_RDI;
  int unaff_R14;
  int iStack0000000000000018;
  int iStack0000000000000020;
  
  while (j = in_RCX, iStack0000000000000018 = in_RCX, iStack0000000000000020 = in_RDI,
        &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RCX = iStack0000000000000018;
    in_RDI = iStack0000000000000020;
  }
  while (j = j + 1, iVar2 = j, j < in_RDI) {
    while( true ) {
      if (in_RCX < iVar2) {
        cVar1 = (**(code **)a)(iVar2,iVar2 + -1);
        in_RCX = iStack0000000000000018;
        in_RDI = iStack0000000000000020;
      }
      else {
        cVar1 = '\0';
      }
      if (cVar1 == '\0') break;
      (**(code **)b)(iVar2,iVar2 + -1);
      in_RCX = iStack0000000000000018;
      iVar2 = iVar2 + -1;
      in_RDI = iStack0000000000000020;
    }
  }
  return;
}



// Local variable root:int[RCX:8] conflicts with parameter, skipped.

void sort_siftDown_func(sort_lessSwap data,int lo,int hi,int first)

{
  int iVar1;
  char cVar2;
  int iVar3;
  int in_RSI;
  int in_RDI;
  int iVar4;
  int unaff_R14;
  int iStack0000000000000020;
  int iStack0000000000000028;
  int child;
  
  iStack0000000000000028 = in_RSI;
  iStack0000000000000020 = in_RDI;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  while( true ) {
    iVar4 = first * 2 + 1;
    if (iStack0000000000000020 <= iVar4) {
      return;
    }
    iVar1 = first * 2 + 2;
    if ((iVar1 < iStack0000000000000020) &&
       (cVar2 = (**(code **)lo)(iStack0000000000000028 + first * 2 + 1,
                                iStack0000000000000028 + first * 2 + 2), cVar2 != '\0')) {
      iVar4 = iVar1;
    }
    iVar3 = first + iStack0000000000000028;
    iVar1 = iVar4 + iStack0000000000000028;
    cVar2 = (**(code **)lo)(iVar3);
    if (cVar2 == '\0') break;
    (**(code **)hi)(iVar3,iVar1);
    first = iVar4;
  }
  return;
}



// Local variable first:int[RCX:8] conflicts with parameter, skipped.

void sort_heapSort_func(sort_lessSwap data,int a,int b)

{
  int in_RCX;
  int in_RDI;
  int hi;
  int first;
  int i;
  int iVar1;
  int unaff_R14;
  int iStack0000000000000018;
  sort_lessSwap in_stack_ffffffffffffffa0;
  int i_1;
  
  iStack0000000000000018 = in_RCX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar1 = (in_RDI - iStack0000000000000018) + -1;
  for (first = ((in_RDI - iStack0000000000000018) - (iVar1 >> 0x3f)) + -1 >> 1; -1 < first;
      first = first + -1) {
    sort_siftDown_func(in_stack_ffffffffffffffa0,a,b,first);
  }
  for (; -1 < iVar1; iVar1 = iVar1 + -1) {
    (**(code **)b)(iStack0000000000000018,iVar1 + iStack0000000000000018);
    sort_siftDown_func(in_stack_ffffffffffffffa0,a,b,0);
  }
  return;
}



void sort_pdqsort_func(sort_lessSwap data,int a,int b,int limit)

{
  bool bVar1;
  char extraout_AL;
  int extraout_RAX;
  int pivot;
  byte bVar2;
  int extraout_RAX_00;
  int mid_1;
  int extraout_RAX_01;
  int mid;
  int iVar3;
  int leftLen;
  char extraout_BL;
  bool alreadyPartitioned;
  int iVar4;
  int rightLen;
  int extraout_RBX;
  sort_sortedHint hint;
  int in_RSI;
  int in_RDI;
  char cVar5;
  int iVar6;
  int length;
  int balanceThreshold;
  int unaff_R14;
  sort_lessSwap in_stack_ffffffffffffff60;
  bool wasPartitioned;
  bool wasBalanced;
  int local_20;
  int local_18;
  code **local_10;
  
  while (&local_20 <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  bVar1 = true;
  cVar5 = '\x01';
  local_18 = b;
  local_10 = (code **)a;
  while( true ) {
    iVar6 = in_RDI - limit;
    if (iVar6 < 0xd) {
      sort_insertionSort_func(in_stack_ffffffffffffff60,(int)local_10,local_18);
      return;
    }
    if (in_RSI == 0) break;
    local_20 = limit;
    if (!bVar1) {
      sort_breakPatterns_func(in_stack_ffffffffffffff60,(int)local_10,local_18);
      in_RSI = in_RSI + -1;
    }
    sort_choosePivot_func(in_stack_ffffffffffffff60,(int)local_10,local_18,local_20,in_RDI);
    iVar4 = extraout_RAX;
    iVar3 = extraout_RBX;
    if (extraout_RBX == 2) {
      sort_reverseRange_func(in_stack_ffffffffffffff60,(int)local_10,local_18);
      iVar4 = (in_RDI - (extraout_RAX - local_20)) + -1;
      iVar3 = 1;
    }
    if ((((bVar1) && (cVar5 != '\0')) && (iVar3 == 1)) &&
       (sort_partialInsertionSort_func
                  (in_stack_ffffffffffffff60,(int)local_10,local_18,SUB81(local_20,0)),
       extraout_AL != '\0')) {
      return;
    }
    if (local_20 < 1) {
      bVar2 = 0;
    }
    else {
      bVar2 = (**local_10)(local_20 + -1,iVar4);
      bVar2 = bVar2 ^ 1;
    }
    if (bVar2 == 0) {
      sort_partition_func(in_stack_ffffffffffffff60,(int)local_10,local_18,local_20,in_RDI,
                          SUB81(iVar4,0));
      iVar3 = extraout_RAX_01 - local_20;
      iVar4 = in_RDI - extraout_RAX_01;
      if (iVar3 < iVar4) {
        sort_pdqsort_func(in_stack_ffffffffffffff60,(int)local_10,local_18,local_20);
        limit = extraout_RAX_01 + 1;
        iVar4 = iVar3;
      }
      else {
        sort_pdqsort_func(in_stack_ffffffffffffff60,(int)local_10,local_18,extraout_RAX_01 + 1);
        in_RDI = extraout_RAX_01;
        limit = local_20;
      }
      bVar1 = iVar6 >> 3 <= iVar4;
      cVar5 = extraout_BL;
    }
    else {
      sort_partitionEqual_func(in_stack_ffffffffffffff60,(int)local_10,local_18,local_20,in_RDI);
      limit = extraout_RAX_00;
    }
  }
  sort_heapSort_func(in_stack_ffffffffffffff60,(int)local_10,local_18);
  return;
}



void sort_partition_func(sort_lessSwap data,int a,int b,int pivot,int newpivot,
                        bool alreadyPartitioned)

{
  char cVar1;
  byte bVar2;
  int iVar3;
  int i;
  int iVar4;
  undefined7 in_register_00000031;
  int iVar5;
