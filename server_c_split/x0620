        if (nextLo <= (sdword)(dVar10 - 1)) {
          ~r0_04.len._0_4_ = in_stack_ffffffffffffffc8;
          ~r0_04.array = (int32 *)in_stack_ffffffffffffffc0;
          ~r0_04.len._4_4_ = dVar10;
          ~r0_04.cap._0_4_ = in_stack_ffffffffffffffd0;
          ~r0_04.cap._4_4_ = in_stack_ffffffffffffffd4;
          regexp_syntax_appendRange(in_stack_ffffffffffffffa8,(int32)x,(int32)in_RBX,~r0_04);
          x = extraout_RAX_02;
          in_RBX = extraout_RBX_02;
          in_stack_ffffffffffffffcc = dVar10;
        }
        nextLo = dVar10 + 1;
      }
    }
    puVar4 = puVar4 + 3;
  }
  psVar5 = (sdword *)in_RDI[3];
  puVar4 = in_RDI[4];
  iVar6 = 0;
  while( true ) {
    if ((int)puVar4 <= iVar6) break;
    sVar7 = psVar5[2];
    sVar8 = *psVar5;
    sVar9 = psVar5[1];
    sVar11 = sVar7;
    in_stack_ffffffffffffffd4 = sVar9;
    if (sVar7 == 1) {
      sVar11 = in_stack_ffffffffffffffd0;
      if (nextLo <= (sdword)(sVar8 + -1)) {
        ~r0_01.len._0_4_ = in_stack_ffffffffffffffc8;
        ~r0_01.array = (int32 *)in_stack_ffffffffffffffc0;
        ~r0_01.len._4_4_ = in_stack_ffffffffffffffcc;
        ~r0_01.cap._0_4_ = in_stack_ffffffffffffffd0;
        ~r0_01.cap._4_4_ = sVar9;
        regexp_syntax_appendRange(in_stack_ffffffffffffffa8,(int32)x,(int32)in_RBX,~r0_01);
        x = extraout_RAX_00;
        in_RBX = extraout_RBX_00;
        sVar11 = in_stack_ffffffffffffffd0;
        in_stack_ffffffffffffffd4 = sVar9;
      }
      nextLo = in_stack_ffffffffffffffd4 + 1;
    }
    else {
      for (; sVar8 <= sVar9; sVar8 = sVar7 + sVar8) {
        if (nextLo <= (sdword)(sVar8 + -1)) {
          ~r0_03.len._0_4_ = sVar8;
          ~r0_03.array = (int32 *)in_stack_ffffffffffffffc0;
          ~r0_03.len._4_4_ = in_stack_ffffffffffffffcc;
          ~r0_03.cap._0_4_ = sVar11;
          ~r0_03.cap._4_4_ = in_stack_ffffffffffffffd4;
          sVar7 = sVar11;
          sVar9 = in_stack_ffffffffffffffd4;
          regexp_syntax_appendRange(in_stack_ffffffffffffffa8,(int32)x,(int32)in_RBX,~r0_03);
          x = extraout_RAX_01;
          in_RBX = extraout_RBX_01;
          in_stack_ffffffffffffffc8 = sVar8;
          sVar11 = sVar7;
          in_stack_ffffffffffffffd4 = sVar9;
        }
        nextLo = sVar8 + 1;
      }
    }
    psVar5 = psVar5 + 3;
    iVar6 = iVar6 + 1;
    in_stack_ffffffffffffffd0 = sVar11;
  }
  if (nextLo < 0x110000) {
    ~r0_02.len._0_4_ = in_stack_ffffffffffffffc8;
    ~r0_02.array = (int32 *)in_stack_ffffffffffffffc0;
    ~r0_02.len._4_4_ = in_stack_ffffffffffffffcc;
    ~r0_02.cap._0_4_ = in_stack_ffffffffffffffd0;
    ~r0_02.cap._4_4_ = in_stack_ffffffffffffffd4;
    regexp_syntax_appendRange(in_stack_ffffffffffffffa8,(int32)x,(int32)in_RBX,~r0_02);
  }
  return;
}



void regexp_syntax_negateClass(__int32 r,__int32 ~r0)

{
  sdword sVar1;
  sdword sVar2;
  void *in_RAX;
  void *extraout_RAX;
  uint in_RCX;
  uint uVar3;
  int i;
  uint in_RBX;
  uint extraout_RBX;
  int w;
  int32 nextLo;
  int32 lo;
  int32 hi;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffffb0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar3 = 0;
  w = 0;
  nextLo = 0;
  do {
    if ((int)in_RBX <= (int)uVar3) {
      if (in_RCX < (uint)w) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
      if (nextLo < 0x110000) {
        uVar3 = w + 2;
        if (in_RCX < uVar3) {
          runtime_growslice(in_RAX,uVar3,in_RCX,2,(internal_abi_Type *)&DAT_008077e0,
                            in_stack_ffffffffffffffb0);
          in_RAX = extraout_RAX;
          uVar3 = extraout_RBX;
        }
        *(int32 *)((int)in_RAX + uVar3 * 4 + -8) = nextLo;
        *(undefined4 *)((int)in_RAX + uVar3 * 4 + -4) = 0x10ffff;
      }
      return;
    }
    if (in_RBX <= uVar3) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (in_RBX <= uVar3 + 1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    sVar1 = *(sdword *)((int)in_RAX + uVar3 * 4) + -1;
    sVar2 = *(sdword *)((int)in_RAX + uVar3 * 4 + 4);
    if (nextLo <= sVar1) {
      if (in_RBX <= (uint)w) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      *(int32 *)((int)in_RAX + w * 4) = nextLo;
      if (in_RBX <= w + 1U) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      *(sdword *)((int)in_RAX + w * 4 + 4) = sVar1;
      w = w + 2;
    }
    uVar3 = uVar3 + 2;
    nextLo = sVar2 + 1;
  } while( true );
}



void regexp_syntax_ranges_Less(regexp_syntax_ranges ra,int i,int j,bool ~r0)

{
  sdword sVar1;
  sdword sVar2;
  uint uVar3;
  
  uVar3 = (ra.p)->len;
  if (uVar3 <= (uint)(i * 2)) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  sVar1 = (ra.p)->array[i * 2];
  if (uVar3 <= (uint)(j * 2)) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  sVar2 = (ra.p)->array[j * 2];
  if ((sVar2 <= sVar1) && (sVar2 == sVar1)) {
    if (uVar3 <= i * 2 + 1U) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (uVar3 <= j * 2 + 1U) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
  }
  return;
}



void regexp_syntax_ranges_Len(regexp_syntax_ranges ra,int ~r0)

{
  return;
}



// WARNING: Unknown calling convention

void regexp_syntax_ranges_Swap(regexp_syntax_ranges ra,int i,int j)

{
  int32 iVar1;
  int32 iVar2;
  int32 iVar3;
  uint uVar4;
  int32 *piVar5;
  
  uVar4 = (ra.p)->len;
  if (uVar4 <= j * 2 + 1U) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  piVar5 = (ra.p)->array;
  iVar1 = piVar5[j * 2 + 1];
  if (uVar4 <= (uint)(i * 2)) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  iVar2 = piVar5[i * 2];
  if (uVar4 <= i * 2 + 1U) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  iVar3 = piVar5[i * 2 + 1];
  if ((uint)(j * 2) < uVar4) {
    piVar5[i * 2] = piVar5[j * 2];
    piVar5[i * 2 + 1] = iVar1;
    piVar5[j * 2] = iVar2;
    piVar5[j * 2 + 1] = iVar3;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void regexp_syntax_checkUTF8(string s,error ~r0)

{
  sdword extraout_EAX;
  int32 rune;
  char *in_RAX;
  char **extraout_RAX;
  char **extraout_RAX_00;
  char **ppcVar1;
  char *in_RBX;
  char *extraout_RBX;
  int size;
  char **extraout_R11;
  int unaff_R14;
  string in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  while( true ) {
    if (in_RBX == (char *)0x0) {
      return;
    }
    unicode_utf8_DecodeRuneInString(in_stack_ffffffffffffffd8,(int32)in_RAX,(int)in_RBX);
    if ((extraout_EAX == 0xfffd) && (extraout_RBX == (char *)0x1)) break;
    if (in_RBX < extraout_RBX) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    in_RBX = in_RBX + -(int)extraout_RBX;
    in_RAX = in_RAX + ((uint)extraout_RBX & -(int)in_RBX >> 0x3f);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855c40,&DAT_00000001);
  extraout_RAX[1] = (char *)0xd;
  *extraout_RAX =
       "invalid UTF-8unexpected %sdefine clauseempty commandDownArrowBar;DownTeeArrow;ExponentialE;GreaterEqual;GreaterTilde;HilbertSpace;HumpDownHump;Intersection;LeftArrowBar;LeftTeeArrow;LeftTriangle;LeftUpVector;NotCongruent;NotLessEqual;NotLessTilde;Proportional;RightCeiling;RoundImplies;ShortUpArrow;SquareSubset;UnderBracket;VerticalLine;blacklozenge;exponentiale;risingdotseq;triangledown;triangleleft;NotHumpEqual;varsubsetneq;varsupsetneq;Authenticating.WithDeadline(<not Stringer>/proc/self/exeSubConn(id:%d)grpc-go/1.64.0Server createdunexpected EOF: extra text: internal error.in-addr.arpa./etc/protocolsunknown mode:  on zero Valueunknown methoduserArenaStateread mem statsallocfreetracegcstoptheworldGC assist waitfinalizer waitsync.Cond.WaitSIGABRT: aborts.allocCount= key size wrongruntime: mmap(nil elem type! to finalizer GC worker initruntime: full=runtime: want=MB; allocated bad restart PC-thread limit\nstopm spinning nmidlelocked= needspinning=store64 failedsemaRoot queuebad allocCountbad span statestack overflow untyped args  out of range no module data in goroutine no such deviceis a directorytext file busyfile too largetoo many linkslevel 3 haltedlevel 2 haltedprotocol errortoo many usersunreachable:  reserved_rangefield_presenceunsafe.PointerALREADY_EXISTS\"OUT_OF_RANGE\"%s Channel #%dgrpc-trace-binunknown ID: %vAuthInfo: \'%s\'Content-Lengthaccept-charsetcontent-lengthNot AcceptableMAX_FRAME_SIZEPROTOCOL_ERRORINTERNAL_ERRORREFUSED_STREAMinvalid syntax1907348632812595367431640625show_sensitiveprefix length not an ip:portinvalid PrefixResourceHeaderRCodeNameErrormime/multipartinvalid kind: protobuf_oneofXXX_OneofFuncsneed more data/etc/ssl/certs\\.+*?()|[]{}^$LOGGER_UNKNOWNAccept-CharsetDkim-SignatureREQUEST_METHOD$htmltemplate_ /* %s */null formnovalidateprotobuf errorReservedRangesdata truncatedInstEmptyWidthunknown node: ApplyFunction;DifferentialD;DoubleLeftTee;DoubleUpArrow;LeftTeeVector;LeftVectorBar;LessFullEqual;LongLeftArrow;Longleftarrow;NotTildeEqual;NotTildeTilde;Poincareplane;PrecedesEqual;PrecedesTi..." /* TRUNCATED STRING LITERAL */
  ;
  extraout_RAX[3] = in_RBX;
  ppcVar1 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = in_RAX;
    ppcVar1 = extraout_RAX_00;
  }
  ppcVar1[2] = in_RAX;
  return;
}



void regexp_syntax_nextRune(string s,int32 c,string t,error err)

{
  sdword extraout_EAX;
  undefined4 in_register_00000004;
  char **extraout_RAX;
  char **extraout_RAX_00;
  char **ppcVar1;
  char *in_RBX;
  char *extraout_RBX;
  int size;
  char **extraout_R11;
  int unaff_R14;
  string in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  unicode_utf8_DecodeRuneInString(in_stack_ffffffffffffffe8,c,(int)in_RBX);
  if ((extraout_EAX == 0xfffd) && (extraout_RBX == (char *)0x1)) {
    runtime_newobject((internal_abi_Type *)&DAT_00855c40,&DAT_00000001);
    extraout_RAX[1] = (char *)0xd;
    *extraout_RAX =
         "invalid UTF-8unexpected %sdefine clauseempty commandDownArrowBar;DownTeeArrow;ExponentialE;GreaterEqual;GreaterTilde;HilbertSpace;HumpDownHump;Intersection;LeftArrowBar;LeftTeeArrow;LeftTriangle;LeftUpVector;NotCongruent;NotLessEqual;NotLessTilde;Proportional;RightCeiling;RoundImplies;ShortUpArrow;SquareSubset;UnderBracket;VerticalLine;blacklozenge;exponentiale;risingdotseq;triangledown;triangleleft;NotHumpEqual;varsubsetneq;varsupsetneq;Authenticating.WithDeadline(<not Stringer>/proc/self/exeSubConn(id:%d)grpc-go/1.64.0Server createdunexpected EOF: extra text: internal error.in-addr.arpa./etc/protocolsunknown mode:  on zero Valueunknown methoduserArenaStateread mem statsallocfreetracegcstoptheworldGC assist waitfinalizer waitsync.Cond.WaitSIGABRT: aborts.allocCount= key size wrongruntime: mmap(nil elem type! to finalizer GC worker initruntime: full=runtime: want=MB; allocated bad restart PC-thread limit\nstopm spinning nmidlelocked= needspinning=store64 failedsemaRoot queuebad allocCountbad span statestack overflow untyped args  out of range no module data in goroutine no such deviceis a directorytext file busyfile too largetoo many linkslevel 3 haltedlevel 2 haltedprotocol errortoo many usersunreachable:  reserved_rangefield_presenceunsafe.PointerALREADY_EXISTS\"OUT_OF_RANGE\"%s Channel #%dgrpc-trace-binunknown ID: %vAuthInfo: \'%s\'Content-Lengthaccept-charsetcontent-lengthNot AcceptableMAX_FRAME_SIZEPROTOCOL_ERRORINTERNAL_ERRORREFUSED_STREAMinvalid syntax1907348632812595367431640625show_sensitiveprefix length not an ip:portinvalid PrefixResourceHeaderRCodeNameErrormime/multipartinvalid kind: protobuf_oneofXXX_OneofFuncsneed more data/etc/ssl/certs\\.+*?()|[]{}^$LOGGER_UNKNOWNAccept-CharsetDkim-SignatureREQUEST_METHOD$htmltemplate_ /* %s */null formnovalidateprotobuf errorReservedRangesdata truncatedInstEmptyWidthunknown node: ApplyFunction;DifferentialD;DoubleLeftTee;DoubleUpArrow;LeftTeeVector;LeftVectorBar;LessFullEqual;LongLeftArrow;Longleftarrow;NotTildeEqual;NotTildeTilde;Poincareplane;PrecedesEqual;PrecedesTi..." /* TRUNCATED STRING LITERAL */
    ;
    extraout_RAX[3] = in_RBX;
    ppcVar1 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = (char *)CONCAT44(in_register_00000004,c);
      ppcVar1 = extraout_RAX_00;
    }
    ppcVar1[2] = (char *)CONCAT44(in_register_00000004,c);
    return;
  }
  if (in_RBX < extraout_RBX) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  return;
}



void regexp_syntax_InstOp_String(regexp_syntax_InstOp i,string ~r0)

{
  if ((uint)regexp_syntax_instOpNames.len <= (uint)i) {
    return;
  }
  return;
}



void regexp_syntax___Prog__String(regexp_syntax_Prog *p,string ~r0)

{
  int unaff_R14;
  undefined in_XMM15 [16];
  strings_Builder b;
  
  while (b.buf.len = in_XMM15._0_8_, b.buf.array = in_XMM15._8_8_,
        &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  regexp_syntax_dumpProg(&b,p);
  if ((uint)b.buf.len <= (uint)-(int)b.buf.array) {
    return;
  }
  if (b.buf.array != (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringlen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafestringnilptr();
}



void regexp_syntax___Prog__Prefix(regexp_syntax_Prog *p,string prefix,bool complete)

{
  sdword r;
  regexp_syntax_Inst *prVar1;
  uint uVar2;
  regexp_syntax_InstOp op;
  uint uVar3;
  regexp_syntax_Inst *i_1;
  regexp_syntax_Inst *i;
  regexp_syntax_InstOp op_1;
  regexp_syntax_Inst *i_2;
  int unaff_R14;
  undefined in_XMM15 [16];
  error in_stack_ffffffffffffffc0;
  strings_Builder buf;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  i = (regexp_syntax_Inst *)(uint)*(dword *)&p->Start;
  prVar1 = (regexp_syntax_Inst *)(p->Inst).len;
  if (prVar1 <= i) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  while( true ) {
    i = (p->Inst).array + (int)i;
    op = i->Op;
    if ((op != 6) && (op != 2)) break;
    i = (regexp_syntax_Inst *)(uint)i->Out;
    if (prVar1 <= i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
  }
  if ((byte)(op - 8) < 3) {
    op = 7;
  }
  if ((op == 7) && (buf._0_16_ = in_XMM15, buf.buf._8_16_ = in_XMM15, (i->Rune).len == 1)) {
    while( true ) {
      uVar3 = (uint)i->Op;
      if ((byte)(i->Op - 8) < 3) {
        uVar3 = 7;
      }
      if (((((char)uVar3 != '\a') || ((i->Rune).len != 1)) || ((i->Arg & 1) != 0)) ||
         (r = *(i->Rune).array, r == 0xfffd)) break;
      strings___Builder__WriteRune(&buf,r,uVar3,in_stack_ffffffffffffffc0);
      uVar2 = (uint)i->Out;
      uVar3 = (p->Inst).len;
      if (uVar3 <= uVar2) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      while( true ) {
        i = (p->Inst).array + uVar2;
        if ((i->Op != 6) && (i->Op != 2)) break;
        uVar2 = (uint)i->Out;
        if (uVar3 <= uVar2) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
      }
    }
    if ((uint)buf.buf.len <= (uint)-(int)buf.buf.array) {
      return;
    }
    if (buf.buf.array == (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
      runtime_panicunsafestringnilptr();
    }
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringlen();
  }
  return;
}



void regexp_syntax___Prog__StartCond(regexp_syntax_Prog *p,regexp_syntax_EmptyOp ~r0)

{
  byte bVar1;
  uint uVar2;
  regexp_syntax_EmptyOp flag;
  uint uVar3;
  regexp_syntax_Inst *prVar4;
  regexp_syntax_Inst *i;
  
  uVar3 = (uint)*(dword *)&p->Start;
  uVar2 = (p->Inst).len;
  if (uVar2 <= uVar3) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  do {
    prVar4 = (p->Inst).array + uVar3;
    bVar1 = prVar4->Op;
    if (bVar1 < 4) {
      if ((bVar1 != 2) && (bVar1 != 3)) {
        return;
      }
    }
    else {
      if (bVar1 == 5) {
        return;
      }
      if (bVar1 != 6) {
        return;
      }
    }
    uVar3 = (uint)prVar4->Out;
    if (uVar2 <= uVar3) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
  } while( true );
}



void regexp_syntax___Inst__MatchRune(regexp_syntax_Inst *i,int32 r,bool ~r0)

{
  undefined extraout_CL;
  undefined7 in_register_00000009;
  undefined7 extraout_var;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0 = (bool)extraout_CL;
    in_register_00000009 = extraout_var;
  }
  regexp_syntax___Inst__MatchRunePos(i,r,CONCAT71(in_register_00000009,~r0));
  return;
}



void regexp_syntax___Inst__MatchRunePos(regexp_syntax_Inst *i,int32 r,int ~r0)

{
  uint uVar1;
  int32 r_00;
  uint uVar2;
  int32 *piVar3;
  int32 r1;
  sdword r_01;
  int iVar4;
  undefined8 extraout_RAX;
  undefined8 extraout_RAX_00;
  int lo;
  int j;
  int32 r0;
  undefined8 extraout_RBX;
  undefined8 extraout_RBX_00;
  undefined8 uVar6;
  uint uVar7;
  int iVar8;
  int hi;
  int m;
  int unaff_R14;
  undefined8 uVar5;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar2 = (i->Rune).len;
  piVar3 = (i->Rune).array;
  if ((int)uVar2 < 3) {
    if (uVar2 == 0) {
      return;
    }
    if (uVar2 != 1) {
      if ((*piVar3 <= r) && (r <= piVar3[1])) {
        return;
      }
      return;
    }
    r_00 = *piVar3;
    if (r == r_00) {
      return;
    }
    if ((i->Arg & 1) != 0) {
      unicode_SimpleFold(r_00,r);
      uVar5 = extraout_RAX;
      uVar6 = extraout_RBX;
      while (r_01 = (sdword)uVar5, r_01 != r_00) {
        if (r == r_01) {
          return;
        }
        unicode_SimpleFold(r_01,(int32)uVar6);
        uVar5 = extraout_RAX_00;
        uVar6 = extraout_RBX_00;
      }
    }
    return;
  }
  if (((uVar2 != 4) && (uVar2 != 6)) && (uVar2 != 8)) {
    iVar4 = 0;
    uVar1 = uVar2 >> 1;
    while( true ) {
      do {
        uVar7 = uVar1;
        if ((int)uVar7 <= iVar4) {
          return;
        }
        iVar8 = (int)(uVar7 - iVar4) / 2;
        uVar1 = iVar8 + iVar4;
        if (uVar2 <= uVar1 * 2) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
      } while (r < piVar3[uVar1 * 2]);
      if (uVar2 <= uVar1 * 2 + 1) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if (r <= piVar3[uVar1 * 2 + 1]) break;
      iVar4 = iVar4 + iVar8 + 1;
      uVar1 = uVar7;
    }
    return;
  }
  j = 0;
  while( true ) {
    if ((int)uVar2 <= j) {
      return;
    }
    if (uVar2 <= (uint)j) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (r < piVar3[j]) {
      return;
    }
    if (uVar2 <= j + 1U) break;
    if (r <= piVar3[j + 1]) {
      return;
    }
    j = j + 2;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void regexp_syntax___Inst__MatchEmptyWidth(regexp_syntax_Inst *i,int32 before,int32 after,bool ~r0)

{
  byte bVar1;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  bVar1 = (byte)i->Arg;
  if (bVar1 < 5) {
    if (bVar1 == 1) {
      return;
    }
    if (bVar1 == 2) {
      return;
    }
    if (bVar1 == 4) {
      return;
    }
  }
  else {
    if (bVar1 == 8) {
      return;
    }
    if (bVar1 == 0x10) {
      return;
    }
    if (bVar1 == 0x20) {
      return;
    }
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe8);
}



void regexp_syntax___Inst__String(regexp_syntax_Inst *i,string ~r0)

{
  int unaff_R14;
  undefined in_XMM15 [16];
  strings_Builder b;
  
  while (b.buf.len = in_XMM15._0_8_, b.buf.array = in_XMM15._8_8_,
        &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  regexp_syntax_dumpInst(&b,i);
  if ((uint)b.buf.len <= (uint)-(int)b.buf.array) {
    return;
  }
  if (b.buf.array != (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringlen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafestringnilptr();
}



// WARNING: Unknown calling convention

void regexp_syntax_dumpProg(strings_Builder *b,regexp_syntax_Prog *p)

{
  int iVar1;
  int iVar2;
  runtime_slice ~r0;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  string a1;
  string ~r0_02;
  bool bVar3;
  uint8 *extraout_RAX;
  strings_Builder *extraout_RAX_00;
  strings_Builder *extraout_RAX_01;
  uint8 *extraout_RAX_02;
  strings_Builder *extraout_RAX_03;
  strings_Builder *psVar4;
  strings_Builder *extraout_RAX_04;
  uint8 *extraout_RAX_05;
  uint i_00;
  int extraout_RCX;
  uint extraout_RCX_00;
  int iVar5;
  int extraout_RCX_01;
  uint extraout_RCX_02;
  void **ppvVar6;
  void **extraout_RCX_03;
  uint extraout_RCX_04;
  regexp_syntax_Inst *i;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  void *extraout_RBX_02;
  uint extraout_RBX_03;
  void *extraout_RBX_04;
  void *pvVar7;
  uint extraout_RBX_05;
  strings_Builder *extraout_RSI;
  void *extraout_RDI;
  void *extraout_RDI_00;
  void *pvVar8;
  uint uVar9;
  undefined *__src;
  undefined *extraout_R9;
  void **extraout_R9_00;
  uint uVar10;
  uint8 *puVar11;
  strings_Builder **extraout_R11;
  uint8 **extraout_R11_00;
  strings_Builder **extraout_R11_01;
  uint8 **extraout_R11_02;
  strings_Builder **extraout_R11_03;
  uint8 **extraout_R11_04;
  int unaff_R14;
  strings_Builder *psStack0000000000000008;
  regexp_syntax_Prog *prStack0000000000000010;
  interface___ in_stack_ffffffffffffff20;
  uint8 *in_stack_ffffffffffffff30;
  int in_stack_ffffffffffffff38;
  uint8 *in_stack_ffffffffffffff40;
  uint in_stack_ffffffffffffff48;
  int j;
  void *local_60;
  undefined *local_58;
  regexp_syntax_Inst *local_50;
  void **local_48;
  uint8 *local_40;
  undefined local_38 [16];
  void *local_28 [2];
  undefined local_18 [16];
  
  psStack0000000000000008 = b;
  prStack0000000000000010 = p;
  while (&local_60 <= *(void ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar1 = (prStack0000000000000010->Inst).len;
  i_00 = 0;
  while( true ) {
    if (iVar1 <= (int)i_00) {
      return;
    }
    if ((uint)(prStack0000000000000010->Inst).len <= i_00) break;
    local_50 = (prStack0000000000000010->Inst).array + i_00;
    strconv_FormatInt(i_00,10,(string)in_stack_ffffffffffffff20);
    if ((int)extraout_RBX < 3) {
      iVar5 = extraout_RBX - 3;
      __src = &DAT_008ae4a1 + (iVar5 >> 0x3f & extraout_RBX);
      psVar4 = psStack0000000000000008;
      in_stack_ffffffffffffff48 = extraout_RBX;
      if (psStack0000000000000008->addr == (strings_Builder *)0x0) {
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11 = psVar4;
          extraout_R11[1] = psVar4->addr;
          iVar5 = extraout_RCX;
          in_stack_ffffffffffffff48 = extraout_RBX_00;
          __src = extraout_R9;
        }
        psVar4->addr = psVar4;
      }
      else if (psStack0000000000000008 != psStack0000000000000008->addr) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffff20);
      }
      uVar9 = (psVar4->buf).cap;
      iVar2 = (psVar4->buf).len;
      uVar10 = iVar2 + (3 - in_stack_ffffffffffffff48);
      puVar11 = (psVar4->buf).array;
      if (uVar9 < uVar10) {
        ~r0.cap = (int)in_stack_ffffffffffffff30;
        ~r0.array = in_stack_ffffffffffffff20._type;
        ~r0.len = (int)in_stack_ffffffffffffff20.data;
        local_58 = __src;
        runtime_growslice(puVar11,uVar10,uVar9,-iVar5,(internal_abi_Type *)&DAT_00807920,~r0);
        uVar9 = extraout_RCX_00;
        __src = local_58;
        uVar10 = extraout_RBX_01;
        puVar11 = extraout_RAX;
      }
      local_40 = puVar11;
      runtime_memmove(puVar11 + iVar2,__src,-iVar5);
      (psStack0000000000000008->buf).len = uVar10;
      (psStack0000000000000008->buf).cap = uVar9;
      psVar4 = psStack0000000000000008;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_00 = local_40;
        extraout_R11_00[1] = (extraout_RAX_00->buf).array;
        psVar4 = extraout_RAX_00;
      }
      (psVar4->buf).array = local_40;
    }
    if (prStack0000000000000010->Start == i_00) {
      a1.len = in_stack_ffffffffffffff38;
      a1.str = in_stack_ffffffffffffff30;
      ~r0_02.len = in_stack_ffffffffffffff48;
      ~r0_02.str = in_stack_ffffffffffffff40;
      runtime_concatstring2((runtime_tmpBuf *)0x0,(string)in_stack_ffffffffffffff20,a1,~r0_02);
    }
    local_18._8_8_ = 1;
    local_18._0_8_ = &DAT_0095a708;
    ppvVar6 = local_28;
    psVar4 = psStack0000000000000008;
    for (iVar5 = 0; iVar5 < 2; iVar5 = iVar5 + 1) {
      pvVar8 = ppvVar6[1];
      pvVar7 = *ppvVar6;
      if (psVar4->addr == (strings_Builder *)0x0) {
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_01 = extraout_RAX_01;
          extraout_R11_01[1] = extraout_RAX_01->addr;
          psVar4 = extraout_RAX_01;
          iVar5 = extraout_RCX_01;
          pvVar7 = extraout_RBX_02;
          pvVar8 = extraout_RDI;
          ppvVar6 = extraout_R9_00;
        }
        psVar4->addr = psVar4;
      }
      else if (psVar4 != psVar4->addr) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffff20);
      }
      uVar10 = (psVar4->buf).cap;
      iVar2 = (psVar4->buf).len;
      uVar9 = (int)pvVar8 + iVar2;
      puVar11 = (psVar4->buf).array;
      local_48 = ppvVar6;
      if (uVar10 < uVar9) {
        ~r0_00.cap = (int)in_stack_ffffffffffffff30;
        ~r0_00.array = in_stack_ffffffffffffff20._type;
        ~r0_00.len = (int)in_stack_ffffffffffffff20.data;
        local_60 = pvVar7;
        runtime_growslice(puVar11,uVar9,uVar10,(int)pvVar8,(internal_abi_Type *)&DAT_00807920,~r0_00
                         );
        pvVar7 = local_60;
        uVar10 = extraout_RCX_02;
        uVar9 = extraout_RBX_03;
        puVar11 = extraout_RAX_02;
      }
      local_40 = puVar11;
      runtime_memmove(puVar11 + iVar2,pvVar7,(size_t)pvVar8);
      (psStack0000000000000008->buf).len = uVar9;
      (psStack0000000000000008->buf).cap = uVar10;
      psVar4 = psStack0000000000000008;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_02 = local_40;
        extraout_R11_02[1] = (extraout_RAX_03->buf).array;
        psVar4 = extraout_RAX_03;
      }
      (psVar4->buf).array = local_40;
      ppvVar6 = local_48 + 2;
    }
    regexp_syntax_dumpInst(psVar4,local_50);
    local_38._8_8_ = 1;
    local_38._0_8_ = &DAT_0095a658;
    ppvVar6 = (void **)local_38;
    bVar3 = false;
    psVar4 = psStack0000000000000008;
    while (!bVar3) {
      pvVar8 = ppvVar6[1];
      pvVar7 = *ppvVar6;
      if (psVar4->addr == (strings_Builder *)0x0) {
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_03 = extraout_RAX_04;
          extraout_R11_03[1] = extraout_RAX_04->addr;
          psVar4 = extraout_RAX_04;
          ppvVar6 = extraout_RCX_03;
          pvVar7 = extraout_RBX_04;
          pvVar8 = extraout_RDI_00;
        }
        psVar4->addr = psVar4;
      }
      else if (psVar4 != psVar4->addr) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffff20);
      }
      uVar10 = (psVar4->buf).cap;
      iVar5 = (psVar4->buf).len;
      uVar9 = iVar5 + (int)pvVar8;
      puVar11 = (psVar4->buf).array;
      local_48 = ppvVar6;
      if (uVar10 < uVar9) {
        ~r0_01.cap = (int)in_stack_ffffffffffffff30;
        ~r0_01.array = in_stack_ffffffffffffff20._type;
        ~r0_01.len = (int)in_stack_ffffffffffffff20.data;
        runtime_growslice(puVar11,uVar9,uVar10,(int)pvVar8,(internal_abi_Type *)&DAT_00807920,~r0_01
                         );
        uVar10 = extraout_RCX_04;
        uVar9 = extraout_RBX_05;
        puVar11 = extraout_RAX_05;
      }
      local_40 = puVar11;
      runtime_memmove(puVar11 + iVar5,pvVar7,(size_t)pvVar8);
      (psStack0000000000000008->buf).len = uVar9;
      (psStack0000000000000008->buf).cap = uVar10;
      psVar4 = psStack0000000000000008;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_04 = local_40;
        extraout_R11_04[1] = (extraout_RSI->buf).array;
        psVar4 = extraout_RSI;
      }
      (psVar4->buf).array = local_40;
      ppvVar6 = local_48 + 2;
      bVar3 = true;
    }
    i_00 = i_00 + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Unknown calling convention

void regexp_syntax_dumpInst(strings_Builder *b,regexp_syntax_Inst *i)

{
  uint8 *puVar1;
  __int32 a;
  __uint8 buf;
  runtime_slice ~r0;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  __int32 a_00;
  __uint8 buf_00;
  runtime_slice ~r0_03;
  runtime_slice ~r0_04;
  runtime_slice ~r0_05;
  runtime_slice ~r0_06;
  runtime_slice ~r0_07;
  runtime_slice ~r0_08;
  runtime_slice ~r0_09;
  runtime_slice ~r0_10;
  runtime_slice ~r0_11;
  runtime_slice ~r0_12;
  __uint8 ~r0_13;
  __uint8 ~r0_14;
  bool bVar2;
  uint8 quote;
  uint8 quote_00;
  uint8 *ptr;
  uint uVar3;
  uint extraout_RAX;
  uint8 *extraout_RAX_00;
  uint extraout_RAX_01;
  uint8 *extraout_RAX_02;
  int iVar4;
  int extraout_RAX_03;
  uint8 *extraout_RAX_04;
  strings_Builder *extraout_RAX_05;
  uint8 *extraout_RAX_06;
  uint8 *ptr_00;
  uint extraout_RAX_07;
  uint8 *extraout_RAX_08;
  uint extraout_RAX_09;
  uint8 *extraout_RAX_10;
  uint8 *extraout_RAX_11;
  uint8 *puVar5;
  uint extraout_RAX_12;
  uint8 *extraout_RAX_13;
  strings_Builder *extraout_RAX_14;
  uint8 *extraout_RAX_15;
  strings_Builder *extraout_RAX_16;
  uint8 *extraout_RAX_17;
  uint extraout_RAX_18;
  uint8 *extraout_RAX_19;
  uint extraout_RAX_20;
  uint8 *extraout_RAX_21;
  uint extraout_RAX_22;
  uint8 *extraout_RAX_23;
  uint extraout_RAX_24;
  uint8 *extraout_RAX_25;
  void **extraout_RCX;
