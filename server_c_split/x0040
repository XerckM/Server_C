          uVar8 = -uVar8;
        }
        local_90 = in_XMM15._0_4_;
        auStack_8c = in_XMM15._0_12_;
        uStack_80 = in_XMM15._12_4_;
        uVar4 = 0x13;
        while (cVar2 = (char)uVar8, 9 < uVar8) {
          uVar8 = uVar8 / 10;
          if (0x13 < uVar4) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          auStack_8c[uVar4 - 4] = cVar2 + (char)uVar8 * -10 + '0';
          uVar4 = uVar4 - 1;
        }
        if (0x13 < uVar4) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        newLen = (uVar3 - uVar4) + 0x14;
        auStack_8c[uVar4 - 4] = cVar2 + '0';
        uVar8 = uVar4 & (int)(uVar4 - 0x14) >> 0x3f;
        sVar10 = -(uVar4 - 0x14);
        if (oldCap < newLen) {
          ~r0_04.cap = in_stack_fffffffffffffec8;
          ~r0_04.array = in_stack_fffffffffffffeb8.str;
          ~r0_04.len = in_stack_fffffffffffffeb8.len;
          local_c8 = uVar8;
          runtime_growslice(ptr,newLen,oldCap,sVar10,(internal_abi_Type *)&DAT_00807920,~r0_04);
          newLen = extraout_RBX_04;
          oldCap = extraout_RCX_04;
          ptr = extraout_RAX_04;
          uVar8 = local_c8;
        }
        local_10 = ptr;
        runtime_memmove(ptr + uVar3,auStack_8c + (uVar8 - 4),sVar10);
        uVar4 = (uint)in_CL;
        uVar8 = local_b8;
        i = local_c0;
        uVar9 = local_b0;
        ptr = local_10;
        uVar6 = uVar5;
        puVar7 = local_18;
      }
      else {
        newLen = uVar3;
        if (puVar7[i + 1] == 0x79) {
          if ((int)uVar9 < 0) {
            uVar3 = uVar3 + 1;
            if (oldCap < uVar3) {
              ~r0_02.cap = in_stack_fffffffffffffec8;
              ~r0_02.array = in_stack_fffffffffffffeb8.str;
              ~r0_02.len = in_stack_fffffffffffffeb8.len;
              runtime_growslice(ptr,uVar3,oldCap,1,(internal_abi_Type *)&DAT_00807920,~r0_02);
              uVar3 = extraout_RBX_02;
              uVar9 = local_b0;
              oldCap = extraout_RCX_02;
              ptr = extraout_RAX_02;
            }
            ptr[uVar3 - 1] = 0x2d;
            uVar9 = -uVar9;
          }
          local_a4 = in_XMM15._0_4_;
          auStack_a0 = in_XMM15._0_12_;
          uStack_94 = in_XMM15._12_4_;
          uVar8 = 0x13;
          while (cVar2 = (char)uVar9, 9 < uVar9) {
            uVar9 = uVar9 / 10;
            if (0x13 < uVar8) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            auStack_a0[uVar8 - 4] = cVar2 + (char)uVar9 * -10 + '0';
            uVar8 = uVar8 - 1;
          }
          if (0x13 < uVar8) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          newLen = (uVar3 - uVar8) + 0x14;
          auStack_a0[uVar8 - 4] = cVar2 + '0';
          sVar10 = -(uVar8 - 0x14);
          if (oldCap < newLen) {
            ~r0_03.cap = in_stack_fffffffffffffec8;
            ~r0_03.array = in_stack_fffffffffffffeb8.str;
            ~r0_03.len = in_stack_fffffffffffffeb8.len;
            local_c8 = uVar3;
            runtime_growslice(ptr,newLen,oldCap,sVar10,(internal_abi_Type *)&DAT_00807920,~r0_03);
            newLen = extraout_RBX_03;
            oldCap = extraout_RCX_03;
            ptr = extraout_RAX_03;
            uVar3 = local_c8;
          }
          local_10 = ptr;
          runtime_memmove(ptr + uVar3,auStack_a0 + ((uVar8 & (int)(uVar8 - 0x14) >> 0x3f) - 4),
                          sVar10);
          uVar4 = (uint)in_CL;
          uVar8 = local_b8;
          i = local_c0;
          uVar9 = local_b0;
          ptr = local_10;
          uVar6 = uVar5;
          puVar7 = local_18;
        }
      }
    }
    else {
      newLen = uVar3 + 1;
      if (oldCap < newLen) {
        ~r0_00.cap = in_stack_fffffffffffffec8;
        ~r0_00.array = in_stack_fffffffffffffeb8.str;
        ~r0_00.len = in_stack_fffffffffffffeb8.len;
        runtime_growslice(ptr,newLen,oldCap,1,(internal_abi_Type *)&DAT_00807920,~r0_00);
        uVar4 = (uint)in_CL;
        uVar8 = local_b8;
        uVar9 = local_b0;
        oldCap = extraout_RCX_00;
        ptr = extraout_RAX_00;
        newLen = extraout_RBX_00;
        uVar6 = uVar5;
        puVar7 = local_18;
      }
      ptr[newLen - 1] = uVar1;
      i = i;
    }
    i = i + 1;
    uVar3 = newLen;
  } while( true );
}



void runtime_printany(interface___ i)

{
  char cVar1;
  byte bVar2;
  bool v_00;
  short sVar3;
  ushort uVar4;
  dword dVar5;
  float fVar6;
  float64 fVar7;
  bool v;
  undefined *in_RAX;
  uintptr v_5;
  uint v_3;
  uint64 v_4;
  int64 v_2;
  int v_1;
  float64 *in_RBX;
  int unaff_R14;
  float32 v_6;
  float64 v_7;
  interface___ in_stack_ffffffffffffff78;
  
  while (&stack0xfffffffffffffff8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RAX != (undefined *)0x0) {
    dVar5 = *(dword *)(in_RAX + 0x10);
    if (dVar5 < 0x8d826c96) {
      if (dVar5 < 0x5272f85d) {
        if (dVar5 < 0x3e2307d5) {
          if (dVar5 == 0x778cdb8) {
            if (in_RAX == &DAT_008075e0) {
              runtime_printlock();
              runtime_printstring((string)in_stack_ffffffffffffff78);
              runtime_printunlock();
              return;
            }
          }
          else if ((dVar5 == 0x3e2307d4) && (in_RAX == &DAT_008077a0)) {
            sVar3 = *(short *)in_RBX;
            runtime_printlock();
            runtime_printint((int)sVar3);
            runtime_printunlock();
            return;
          }
        }
        else if (dVar5 == 0x43daea34) {
          if (in_RAX == &DAT_00807860) {
            cVar1 = *(char *)in_RBX;
            runtime_printlock();
            runtime_printint((int)cVar1);
            runtime_printunlock();
            return;
          }
        }
        else if ((dVar5 == 0x5272f85c) && (in_RAX == &DAT_008078a0)) {
          fVar7 = *in_RBX;
          runtime_printlock();
          runtime_printuint((uint64)fVar7);
          runtime_printunlock();
          return;
        }
      }
      else if (dVar5 < 0x6bed3cfb) {
        if (dVar5 == 0x64fd0d3c) {
          if (in_RAX == &DAT_00807960) {
            fVar7 = *in_RBX;
            runtime_printlock();
            runtime_printuint((uint64)fVar7);
            runtime_printunlock();
            return;
          }
        }
        else if ((dVar5 == 0x6bed3cfa) && (in_RAX == &DAT_008077e0)) {
          fVar6 = *(float *)in_RBX;
          runtime_printlock();
          runtime_printint((int)(sdword)fVar6);
          runtime_printunlock();
          return;
        }
      }
      else if (dVar5 == 0x7688f20c) {
        if (in_RAX == &DAT_00807660) {
          runtime_printlock();
          runtime_printcomplex((complex128)in_stack_ffffffffffffff78);
          runtime_printunlock();
          return;
        }
      }
      else if ((dVar5 == 0x8d826c95) && (in_RAX == &DAT_008076e0)) {
        fVar6 = *(float *)in_RBX;
        runtime_printlock();
        runtime_printfloat((float64)(double)fVar6);
        runtime_printunlock();
        return;
      }
    }
    else if (dVar5 < 0x99d6dd44) {
      if (dVar5 < 0x93592d95) {
        if (dVar5 == 0x8fc52ddb) {
          if (in_RAX == &DAT_008079e0) {
            fVar7 = *in_RBX;
            runtime_printlock();
            runtime_printuint((uint64)fVar7);
            runtime_printunlock();
            return;
          }
        }
        else if ((dVar5 == 0x93592d94) && (in_RAX == &DAT_00807720)) {
          fVar7 = *in_RBX;
          runtime_printlock();
          runtime_printfloat(fVar7);
          runtime_printunlock();
          return;
        }
      }
      else if (dVar5 == 0x95738979) {
        if (in_RAX == &DAT_00807920) {
          bVar2 = *(byte *)in_RBX;
          runtime_printlock();
          runtime_printuint((uint)bVar2);
          runtime_printunlock();
          return;
        }
      }
      else if ((dVar5 == 0x99d6dd43) && (in_RAX == &DAT_00807820)) {
        fVar7 = *in_RBX;
        runtime_printlock();
        runtime_printint((int64)fVar7);
        runtime_printunlock();
        return;
      }
    }
    else if (dVar5 < 0xc1efe3a3) {
      if (dVar5 == 0xb00b9f48) {
        if (in_RAX == &DAT_00807620) {
          v_00 = *(bool *)in_RBX;
          runtime_printlock();
          runtime_printbool(v_00);
          runtime_printunlock();
          return;
        }
      }
      else if ((dVar5 == 0xc1efe3a2) && (in_RAX == &DAT_008076a0)) {
        runtime_printlock();
        runtime_printcomplex((complex128)in_stack_ffffffffffffff78);
        runtime_printunlock();
        return;
      }
    }
    else if (dVar5 == 0xcb735792) {
      if (in_RAX == &DAT_00807760) {
        fVar7 = *in_RBX;
        runtime_printlock();
        runtime_printint((int64)fVar7);
        runtime_printunlock();
        return;
      }
    }
    else if (dVar5 == 0xd9632893) {
      if (in_RAX == &DAT_00807a20) {
        uVar4 = *(ushort *)in_RBX;
        runtime_printlock();
        runtime_printuint((uint)uVar4);
        runtime_printunlock();
        return;
      }
    }
    else if ((dVar5 == 0xe927f9e3) && (in_RAX == &DAT_008078e0)) {
      fVar6 = *(float *)in_RBX;
      runtime_printlock();
      runtime_printuint((uint)(dword)fVar6);
      runtime_printunlock();
      return;
    }
    runtime_printanycustomtype(in_stack_ffffffffffffff78);
    return;
  }
  runtime_printlock();
  runtime_printstring((string)in_stack_ffffffffffffff78);
  runtime_printunlock();
  return;
}



void runtime_printanycustomtype(interface___ i)

{
  float fVar1;
  float64 fVar2;
  bool v;
  char cVar3;
  byte bVar4;
  short sVar5;
  ushort uVar6;
  runtime_rtype in_RAX;
  float64 *in_RBX;
  int unaff_R14;
  string in_stack_ffffffffffffff88;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_rtype_string(in_RAX,in_stack_ffffffffffffff88);
  switch((in_RAX.Type)->Kind_) {
  case 1:
    v = *(bool *)in_RBX;
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printbool(v);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printunlock();
    break;
  case 2:
    fVar2 = *in_RBX;
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printint((int64)fVar2);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printunlock();
    break;
  case 3:
    cVar3 = *(char *)in_RBX;
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printint((int)cVar3);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printunlock();
    break;
  case 4:
    sVar5 = *(short *)in_RBX;
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printint((int)sVar5);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printunlock();
    break;
  case 5:
    fVar1 = *(float *)in_RBX;
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printint((int)(sdword)fVar1);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printunlock();
    break;
  case 6:
    fVar2 = *in_RBX;
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printint((int64)fVar2);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printunlock();
    break;
  case 7:
    fVar2 = *in_RBX;
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printuint((uint64)fVar2);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printunlock();
    break;
  case 8:
    bVar4 = *(byte *)in_RBX;
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printuint((uint)bVar4);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printunlock();
    break;
  case 9:
    uVar6 = *(ushort *)in_RBX;
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printuint((uint)uVar6);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printunlock();
    break;
  case 10:
    fVar1 = *(float *)in_RBX;
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printuint((uint)(dword)fVar1);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printunlock();
    break;
  case 0xb:
    fVar2 = *in_RBX;
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printuint((uint64)fVar2);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printunlock();
    break;
  case 0xc:
    fVar2 = *in_RBX;
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printuint((uint64)fVar2);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printunlock();
    break;
  case 0xd:
    fVar1 = *(float *)in_RBX;
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printfloat((float64)(double)fVar1);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printunlock();
    break;
  case 0xe:
    fVar2 = *in_RBX;
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printfloat(fVar2);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printunlock();
    break;
  case 0xf:
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printcomplex((complex128)in_stack_ffffffffffffff88);
    runtime_printunlock();
    break;
  case 0x10:
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printcomplex((complex128)in_stack_ffffffffffffff88);
    runtime_printunlock();
    break;
  default:
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printpointer(in_RBX);
    runtime_printunlock();
    break;
  case 0x18:
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printstring(in_stack_ffffffffffffff88);
    runtime_printunlock();
  }
  return;
}



// WARNING: Unknown calling convention
// DWARF original prototype: void runtime.panicwrap(void)

void runtime_panicwrap(void)

{
  uint8 *puVar1;
  uint8 *puVar2;
  runtime_funcInfo ~r0;
  string name;
  string a0;
  string a0_00;
  string s;
  string a0_01;
  string s_00;
  string val;
  interface___ e;
  string a0_02;
  string s_01;
  string a0_03;
  string s_02;
  string ~r0_00;
  __string a;
  string ~r0_01;
  string a1;
  string a1_00;
  string a1_01;
  string a1_02;
  string a1_03;
  string ~r0_02;
  string ~r1;
  string a2;
  string ~r0_03;
  string ~r0_04;
  string ~r0_05;
  string ~r0_06;
  string ~r2;
  string ~r0_07;
  int extraout_RAX;
  uint8 *extraout_RAX_00;
  internal_abi_Type *piVar3;
  void *x;
  int i;
  undefined8 extraout_RCX;
  uint8 *puVar4;
  runtime_moduledata *md;
  uint8 *extraout_RBX;
  undefined8 extraout_RSI;
  int unaff_R14;
  uintptr unaff_retaddr;
  runtime__func *in_stack_fffffffffffffea0;
  runtime_moduledata *in_stack_fffffffffffffea8;
  uint8 *puVar5;
  undefined in_stack_fffffffffffffeb0;
  undefined uVar6;
  undefined7 in_stack_fffffffffffffeb1;
  uint8 *in_stack_fffffffffffffeb8;
  uint8 *puVar7;
  uint8 *in_stack_fffffffffffffec0;
  int in_stack_fffffffffffffec8;
  uint8 *in_stack_fffffffffffffed0;
  int in_stack_fffffffffffffed8;
  uint8 *puVar8;
  uint8 local_108 [32];
  uint8 local_e8 [8];
  undefined local_e0 [24];
  uint8 local_c8 [32];
  uint8 *local_a8;
  internal_abi_Type *local_a0;
  char *local_98;
  undefined8 local_90;
  uint8 *local_88;
  uint8 *local_80;
  undefined *local_78;
  undefined8 local_70;
  undefined8 local_68;
  undefined8 local_60;
  undefined *local_58;
  undefined8 local_50;
  uint8 *local_48;
  undefined8 local_40;
  undefined *local_38;
  undefined8 local_30;
  undefined8 local_28;
  undefined8 local_20;
  undefined *local_18;
  undefined8 local_10;
  
  while (local_e0 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0.datap = in_stack_fffffffffffffea8;
  ~r0._func = in_stack_fffffffffffffea0;
  runtime_findfunc(unaff_retaddr,~r0);
  if (extraout_RAX != 0) {
    ~r0_00.len = (int)in_stack_fffffffffffffea8;
    ~r0_00.str = (uint8 *)in_stack_fffffffffffffea0;
    runtime___moduledata__funcName(md,*(int32 *)(extraout_RAX + 4),~r0_00);
  }
  name.len = (int)in_stack_fffffffffffffea8;
  name.str = (uint8 *)in_stack_fffffffffffffea0;
  ~r0_01.str._1_7_ = in_stack_fffffffffffffeb1;
  ~r0_01.str._0_1_ = in_stack_fffffffffffffeb0;
  ~r0_01.len = (int)in_stack_fffffffffffffeb8;
  ~r1.len = in_stack_fffffffffffffec8;
  ~r1.str = in_stack_fffffffffffffec0;
  ~r2.len = in_stack_fffffffffffffed8;
  ~r2.str = in_stack_fffffffffffffed0;
  runtime_funcNamePiecesForPrint(name,~r0_01,~r1,~r2);
  a0.len = (int)in_stack_fffffffffffffea8;
  a0.str = (uint8 *)in_stack_fffffffffffffea0;
  a1.str._1_7_ = in_stack_fffffffffffffeb1;
  a1.str._0_1_ = in_stack_fffffffffffffeb0;
  a1.len = (int)in_stack_fffffffffffffeb8;
  a2.len = in_stack_fffffffffffffec8;
  a2.str = in_stack_fffffffffffffec0;
  ~r0_07.len = in_stack_fffffffffffffed8;
  ~r0_07.str = in_stack_fffffffffffffed0;
  runtime_concatstring3(&local_c8,a0,a1,a2,~r0_07);
  uVar6 = 0x28;
  puVar4 = extraout_RAX_00;
  puVar5 = extraout_RBX;
  puVar8 = extraout_RBX;
  local_a8 = extraout_RAX_00;
  internal_bytealg_IndexByteString();
  if ((int)in_stack_fffffffffffffeb8 < 0) {
    a0_03.len = (int)puVar5;
    a0_03.str = puVar4;
    a1_03.str._1_7_ = in_stack_fffffffffffffeb1;
    a1_03.str._0_1_ = uVar6;
    a1_03.len = (int)in_stack_fffffffffffffeb8;
    ~r0_06.len = in_stack_fffffffffffffec8;
    ~r0_06.str = in_stack_fffffffffffffec0;
    runtime_concatstring2((runtime_tmpBuf *)local_e8,a0_03,a1_03,~r0_06);
    s_02.len = (int)puVar5;
    s_02.str = puVar4;
                    // WARNING: Subroutine does not return
    runtime_throw(s_02);
  }
  puVar1 = in_stack_fffffffffffffeb8 + -1;
  if (puVar8 < puVar1) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  puVar7 = in_stack_fffffffffffffeb8 + 2;
  if ((int)puVar7 < (int)puVar8) {
    if (puVar8 < puVar7) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    if (puVar7 < puVar1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    if ((*(short *)(in_stack_fffffffffffffeb8 + -1 + (int)local_a8) == 0x282e) &&
       ((in_stack_fffffffffffffeb8 + 1)[(int)local_a8] == 0x2a)) {
      puVar4 = puVar8 + (-2 - (int)in_stack_fffffffffffffeb8);
      piVar3 = (internal_abi_Type *)(local_a8 + (-(int)puVar4 >> 0x3f & (uint)puVar7));
      uVar6 = 0x29;
      puVar5 = puVar4;
      puVar7 = in_stack_fffffffffffffeb8;
      local_a0 = piVar3;
      internal_bytealg_IndexByteString();
      if ((int)puVar7 < 0) {
        a0_02.len = (int)puVar5;
        a0_02.str = (uint8 *)piVar3;
        a1_02.str._1_7_ = in_stack_fffffffffffffeb1;
        a1_02.str._0_1_ = uVar6;
        a1_02.len = (int)puVar7;
        ~r0_05.len = in_stack_fffffffffffffec8;
        ~r0_05.str = in_stack_fffffffffffffec0;
        runtime_concatstring2(&local_108,a0_02,a1_02,~r0_05);
        s_01.len = (int)puVar5;
        s_01.str = (uint8 *)piVar3;
                    // WARNING: Subroutine does not return
        runtime_throw(s_01);
      }
      puVar2 = puVar7 + 2;
      if ((int)puVar2 < (int)puVar4) {
        if (puVar4 < puVar2) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAlen();
        }
        if (puVar2 < puVar7) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        if (*(short *)(puVar7 + (int)&local_a0->Size_) == 0x2e29) {
          puVar4 = (uint8 *)((int)&local_a0->Size_ +
                            (-(int)(puVar8 + (-(int)puVar7 - (int)in_stack_fffffffffffffeb8) + -4)
                             >> 0x3f & (uint)puVar2));
          local_68 = FUN_0046cd99();
          local_90 = 0xd;
          local_98 = 
          "value method bad map state span.base()=bad flushGen , not pointer != sweepgen  MB globals,  work.nproc=  work.nwait=  nStackRoots= flushedWork double unlock s.spanclass= MB) workers=min too large-byte block (runtime: val=runtime: seq= failed with timer_settimefatal error:  idlethreads= syscalltick=load64 failedxadd64 failedxchg64 failedmp.g0 stack [nil stackbase}\n\tsched={pc:, gp->status= pluginpath= : unknown pc  called from level 3 resetexchange fulltimer expiredsrmount errorreserved_namedefault_valuephp_namespace<unknown: %T>AlreadyExistsUnimplementedUNIMPLEMENTED\"UNAVAILABLE\"INVALID_STATE in host nameGrpc-Encodinggrpc-encodinggrpc-tags-bintransport: %vunix-abstractIntegrityOnlyAddr: <nil>, AuthorizationAccept-RangesIf-None-MatchLast-Modified[FrameHeader invalid base accept-rangesauthorizationcache-controlcontent-rangeif-none-matchlast-modifiedCache-ControlReset ContentLoop DetectedSTREAM_CLOSEDCONNECT_ERRORWINDOW_UPDATE3814697265625#   %s\t%s:%d\n/debug/eventsGunjala_GondiMasaram_GondiMende_KikakuiOld_Hungarianinvalid port name too longData: []byte{gocacheverifyinstallgoroothtml/templatetlsmaxrsasize for message gzip, deflate_grpc_config.SHA256-RSAPSSSHA384-RSAPSSSHA512-RSAPSSSSL_CERT_FILEemail addressLOGGER_CLIENTLOGGER_SERVERnot availableIsPlaceholderReservedNamesinvalid ASN.1empty integerunsupported: invalid UTF-8unexpected %sdefine clauseempty commandDownArrowBar;DownTeeArrow;ExponentialE;GreaterEqual;GreaterTilde;HilbertSpace;HumpDownHump;Intersection;LeftArrowBar;LeftTeeArrow;LeftTriangle;LeftUpVector;NotCongruent;NotLessEqual;NotLessTilde;Proportional;RightCeiling;RoundImplies;ShortUpArrow;SquareSubset;UnderBracket;VerticalLine;blacklozenge;exponentiale;risingdotseq;triangledown;triangleleft;NotHumpEqual;varsubsetneq;varsupsetneq;Authenticating.WithDeadline(<not Stringer>/proc/self/exeSubConn(id:%d)grpc-go/1.64.0Server createdunexpected EOF: extra text: internal error.in-addr.arpa./etc/protocolsunknown mode:  on zero Valueunknown methoduserArenaStateread mem statsallocfreetracegcstoptheworldGC assist wait..." /* TRUNCATED STRING LITERAL */
          ;
          local_88 = local_a8;
          local_70 = 1;
          local_78 = &DAT_0095a710;
          local_50 = 1;
          local_58 = &DAT_0095a710;
          local_30 = 0x13;
          local_38 = &DAT_008b8257;
          local_10 = 8;
          local_18 = &DAT_008b1b66;
          a.len = (int)puVar5;
          a.array = (string *)piVar3;
          a.cap._0_1_ = uVar6;
          a.cap._1_7_ = in_stack_fffffffffffffeb1;
          ~r0_02.len = (int)in_stack_fffffffffffffec0;
          ~r0_02.str = puVar7;
          local_80 = puVar1;
          local_60 = extraout_RCX;
          local_48 = puVar4;
          local_40 = extraout_RSI;
          local_28 = local_68;
          local_20 = extraout_RCX;
          runtime_concatstrings((runtime_tmpBuf *)0x0,a,~r0_02);
          val.len = (int)puVar5;
          val.str = (uint8 *)piVar3;
          runtime_convTstring(val,x);
          e.data = puVar5;
          e._type = piVar3;
                    // WARNING: Subroutine does not return
          runtime_gopanic(e);
        }
      }
      a0_01.len = (int)puVar5;
      a0_01.str = (uint8 *)piVar3;
      a1_01.str._1_7_ = in_stack_fffffffffffffeb1;
      a1_01.str._0_1_ = uVar6;
      a1_01.len = (int)puVar7;
      ~r0_04.len = in_stack_fffffffffffffec8;
      ~r0_04.str = in_stack_fffffffffffffec0;
      runtime_concatstring2((runtime_tmpBuf *)0x0,a0_01,a1_01,~r0_04);
      s_00.len = (int)puVar5;
      s_00.str = (uint8 *)piVar3;
                    // WARNING: Subroutine does not return
      runtime_throw(s_00);
    }
  }
  a0_00.len = (int)puVar5;
  a0_00.str = puVar4;
  a1_00.str._1_7_ = in_stack_fffffffffffffeb1;
  a1_00.str._0_1_ = uVar6;
  a1_00.len = (int)in_stack_fffffffffffffeb8;
  ~r0_03.len = in_stack_fffffffffffffec8;
  ~r0_03.str = in_stack_fffffffffffffec0;
  runtime_concatstring2((runtime_tmpBuf *)0x0,a0_00,a1_00,~r0_03);
  s.len = (int)puVar5;
  s.str = puVar4;
                    // WARNING: Subroutine does not return
  runtime_throw(s);
}



// WARNING: Unknown calling convention

void runtime_runExitHooks(int exitCode)

{
  int iVar1;
  undefined auVar2 [16];
  char extraout_AL;
  bool caughtPanic;
  undefined8 extraout_RAX;
  int iVar3;
  uint uVar4;
  undefined8 *extraout_R11;
  int unaff_R14;
  undefined in_XMM15 [16];
  string in_stack_ffffffffffffffd8;
  int i;
  
  while (auVar2 = runtime_exitHooks.hooks._8_16_,
        &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (runtime_exitHooks.runningExitHooks != false) {
                    // WARNING: Subroutine does not return
    runtime_throw(in_stack_ffffffffffffffd8);
  }
  runtime_exitHooks.runningExitHooks = true;
  iVar1 = runtime_exitHooks.hooks.len;
  iVar3 = 0;
  while( true ) {
    if (iVar1 <= iVar3) {
      runtime_exitHooks.hooks._8_16_ = in_XMM15;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11 = extraout_RAX;
      }
      runtime_exitHooks.hooks.array = (runtime_exitHook *)0x0;
      runtime_exitHooks.runningExitHooks = false;
      return;
    }
    uVar4 = (runtime_exitHooks.hooks.len - iVar3) - 1;
    if ((uint)runtime_exitHooks.hooks.len <= uVar4) break;
    if (((exitCode == 0) || (runtime_exitHooks.hooks.array[uVar4].runOnNonZeroExit != false)) &&
       (runtime_runExitHooks_func1(runtime_exitHooks.hooks.array[uVar4].f,auVar2[0],false),
       extraout_AL != '\0')) {
                    // WARNING: Subroutine does not return
      runtime_throw(in_stack_ffffffffffffffd8);
    }
    iVar3 = iVar3 + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void runtime_Caller(int skip,uintptr pc,string file,int line,bool ok)

{
  __uintptr pcbuf;
  runtime_Frame frame_00;
  int ~r0;
  int extraout_RAX;
  int n;
  int *extraout_RAX_00;
  runtime_Frames *f;
  int *extraout_RAX_01;
  int *extraout_RAX_02;
  int *piVar1;
  runtime_Frames *ci;
  int *extraout_RCX;
  int *piVar2;
  bool more;
  void *~r0_00;
  undefined7 in_register_00000039;
  void *~r0_01;
  void *extraout_RDI;
  int *extraout_R11;
  int **extraout_R11_00;
  int unaff_R14;
  uintptr *in_stack_fffffffffffffed8;
  undefined in_stack_fffffffffffffee0 [16];
  undefined in_stack_fffffffffffffef0 [64];
  runtime_Frame frame;
  
  ~r0_01 = (void *)CONCAT71(in_register_00000039,ok);
  while (&frame.Function <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0_01 = extraout_RDI;
  }
  runtime_makeslice((internal_abi_Type *)&DAT_008078a0,1,1,~r0_01);
  pcbuf.len = in_stack_fffffffffffffee0._0_8_;
  pcbuf.cap = in_stack_fffffffffffffee0._8_8_;
  pcbuf.array = in_stack_fffffffffffffed8;
  runtime_callers(skip + 1,pcbuf,~r0);
  if (extraout_RAX < 1) {
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0085e900,~r0_00);
  extraout_RAX_00[1] = 1;
  extraout_RAX_00[2] = 1;
  piVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = ~r0;
    piVar1 = extraout_RAX_01;
  }
  *piVar1 = ~r0;
  piVar1[4] = 0;
  piVar1[5] = 2;
  piVar2 = piVar1 + 6;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = extraout_RCX;
    piVar1 = extraout_RAX_02;
    piVar2 = extraout_RCX;
  }
  piVar1[3] = (int)piVar2;
  ci = (runtime_Frames *)FUN_0046cdb0();
  frame_00.Func = (runtime_Func *)in_stack_fffffffffffffee0._0_8_;
  frame_00.Function.str = (uint8 *)in_stack_fffffffffffffee0._8_8_;
  frame_00.PC = (uintptr)in_stack_fffffffffffffed8;
  frame_00.Function.len = in_stack_fffffffffffffef0._0_8_;
  frame_00.File.str = (uint8 *)SUB168(in_stack_fffffffffffffef0._8_16_,0);
  frame_00.File.len = SUB168(in_stack_fffffffffffffef0._8_16_,8);
  frame_00.Line = in_stack_fffffffffffffef0._24_8_;
  frame_00.startLine = in_stack_fffffffffffffef0._32_8_;
  frame_00.Entry = in_stack_fffffffffffffef0._40_8_;
  frame_00.funcInfo._func = (runtime__func *)SUB168(in_stack_fffffffffffffef0._48_16_,0);
  frame_00.funcInfo.datap = (runtime_moduledata *)SUB168(in_stack_fffffffffffffef0._48_16_,8);
  runtime___Frames__Next(ci,frame_00,more);
  FUN_0046d11a();
  FUN_0046d11a();
  return;
}



// Local variable l:uintptr[RCX:8] conflicts with parameter, skipped.
// Local variable q:uint8[8] *[RAX:8] conflicts with parameter, skipped.
// Local variable q_2:uint8[8] *[RAX:8] conflicts with parameter, skipped.
// Local variable q_3:uint8[4] *[RAX:8] conflicts with parameter, skipped.
// Local variable q_5:uint8[4] *[RAX:8] conflicts with parameter, skipped.

void runtime_memhashFallback(void *p,uintptr seed,uintptr s,uintptr ~r0)

{
  uint64 lo;
  uint8 (*q_6) [8];
  uint64 lo_1;
  uint64 lo_2;
  uint64 lo_3;
  uint8 (*q_9) [8];
  uintptr a;
  uint64 hi;
  uint64 hi_1;
  uint64 hi_2;
  uint64 hi_3;
  uint64 hi_4;
  uint64 hi_5;
  uintptr seed1;
  uint8 (*q_1) [8];
  uintptr b;
  uint8 (*q_4) [4];
  uint8 (*q_7) [8];
  uint8 (*q_8) [8];
  
  if (s == 0) {
    return;
  }
  if ((((3 < s) && (s != 4)) && (7 < s)) && ((s != 8 && (0x10 < s)))) {
    if (0x30 < s) {
      for (; 0x30 < s; s = s - 0x30) {
      }
    }
    for (; 0x10 < s; s = s - 0x10) {
    }
  }
  return;
}



// Local variable q:uint8[4] *[RAX:8] conflicts with parameter, skipped.

void runtime_memhash32Fallback(void *p,uintptr seed,uintptr ~r0)

{
  uint64 hi;
  uint64 hi_1;
  
  return;
}



// Local variable q:uint8[8] *[RAX:8] conflicts with parameter, skipped.

void runtime_memhash64Fallback(void *p,uintptr seed,uintptr ~r0)

{
  uint64 hi;
  uint64 hi_1;
  
  return;
}



// WARNING: Unknown calling convention

void runtime___timeHistogram__record(runtime_timeHistogram *h,int64 duration)

{
  uint uVar1;
  int iVar2;
  uint bucket;
  uint subBucket;
  uint bucketBit;
  int iVar3;
  
  if (duration < 0) {
    LOCK();
    (h->underflow).value = (h->underflow).value + 1;
    UNLOCK();
    return;
  }
  iVar2 = 0x3f;
  if (duration != 0) {
    for (; (uint)duration >> iVar2 == 0; iVar2 = iVar2 + -1) {
    }
  }
  if (duration == 0) {
    iVar2 = -1;
  }
  iVar3 = iVar2 + 1;
  if (iVar3 < 9) {
    bucket = 0;
    iVar3 = 9;
  }
  else {
    bucket = iVar2 - 7;
  }
  if (bucket < 0x28) {
