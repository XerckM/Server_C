    extraout_R11_01[5] = (uint8 *)net_hosts.byAddr;
  }
  net_hosts.path.str = local_c0;
  net_hosts.byName = local_c8;
  net_hosts.byAddr = local_d0;
  net_hosts.mtime.wall = (uint64)local_130;
  net_hosts.mtime.ext = local_138;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_02 = local_80;
    extraout_R11_02[1] = net_hosts.mtime.loc;
  }
  net_hosts.mtime.loc = local_80;
  net_hosts.size = extraout_RDI;
  if (bVar2) {
    (**local_10)();
  }
  return;
}



// WARNING: Unknown calling convention

void net_readHosts_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  net___file__close(*(int *)(in_RDX + 8));
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack
// DWARF original prototype: void net.lookupStaticHost(string host, []string ~r0, []string ~r0,
// string ~r1, string ~r1)

void net_lookupStaticHost(string host,__string ~r0,__string ~r0_1,string ~r1,string ~r1_1)

{
  string s;
  string s_00;
  string a0;
  string ky;
  string ~r0_00;
  string a1;
  __uint8 ~r0_01;
  string ~r0_02;
  undefined auVar1 [12];
  uint8 *in_RAX;
  int i;
  uint8 *ptr;
  uint8 *extraout_RAX;
  string **extraout_RAX_00;
  void *dstPtr;
  uint8 *extraout_RAX_01;
  int i_1;
  uint8 b;
  int iVar2;
  char extraout_BL;
  bool ok;
  uint in_RBX;
  int extraout_RBX;
  int n;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  void *~r0_03;
  int ~r0_04;
  int unaff_R14;
  bool bVar3;
  undefined4 in_XMM15_Da;
  undefined4 in_XMM15_Db;
  undefined4 in_XMM15_Dc;
  undefined4 in_XMM15_Dd;
  uint8 *in_stack_fffffffffffffed0;
  int in_stack_fffffffffffffed8;
  uint uVar4;
  undefined in_stack_fffffffffffffee0;
  undefined uVar5;
  undefined7 in_stack_fffffffffffffee1;
  int in_stack_fffffffffffffee8;
  int in_stack_fffffffffffffef0;
  undefined7 in_stack_fffffffffffffef8;
  undefined uVar6;
  uint8 local_e8 [32];
  uint8 local_c8 [24];
  undefined local_b0 [8];
  uint8 *local_a8;
  void *local_a0;
  undefined local_98 [8];
  undefined8 uStack_90;
  undefined local_88 [16];
  void *local_78;
  undefined local_70 [16];
  net_byName byName;
  undefined4 local_20;
  undefined4 uStack_1c;
  undefined4 uStack_18;
  
  while (local_b0 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_78 = (void *)0x0;
  LOCK();
  bVar3 = net_hosts.Mutex.state == 0;
  if (bVar3) {
    net_hosts.Mutex.state = 1;
  }
  UNLOCK();
  if (!bVar3) {
    sync___Mutex__lockSlow(&net_hosts.Mutex);
  }
  local_88._8_8_ = &net_hosts;
  local_88._0_8_ = net_lookupStaticHost_func1;
  uVar6 = 1;
  net_readHosts();
  if (net_hosts.byName == (map_string_net_byName)0x0) {
    iVar2 = 0;
  }
  else {
    iVar2 = (net_hosts.byName)->count;
  }
  if (iVar2 != 0) {
    iVar2 = 0;
    do {
      i = iVar2;
      if ((int)in_RBX <= i) break;
      if (in_RAX[i] < 0x80) {
        iVar2 = i + 1;
      }
      else {
        s.len = in_stack_fffffffffffffed8;
        s.str = in_stack_fffffffffffffed0;
        runtime_decoderune(s,(int)in_RAX,(int32)in_RBX,i);
        iVar2 = extraout_RBX;
      }
      if (in_RBX <= (uint)i) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
    } while ((in_RAX[i] < 0x41) || (0x5a < in_RAX[i]));
    if (i < (int)in_RBX) {
      s_00.len = in_stack_fffffffffffffed8;
      s_00.str = in_stack_fffffffffffffed0;
      ~r0_01.array._1_7_ = in_stack_fffffffffffffee1;
      ~r0_01.array._0_1_ = in_stack_fffffffffffffee0;
      ~r0_01.len = in_stack_fffffffffffffee8;
      ~r0_01.cap = in_stack_fffffffffffffef0;
      runtime_stringtoslicebyte((runtime_tmpBuf *)local_c8,s_00,~r0_01);
      for (i_1 = 0; i_1 < n; i_1 = i_1 + 1) {
        if ((byte)(ptr[i_1] + 0xbf) < 0x1a) {
          ptr[i_1] = ptr[i_1] + 0x20;
        }
      }
      ~r0_00.len = in_stack_fffffffffffffed8;
      ~r0_00.str = in_stack_fffffffffffffed0;
      runtime_slicebytetostring(&local_e8,ptr,n,~r0_00);
      in_RBX = extraout_RBX_01;
      in_RAX = extraout_RAX_01;
    }
    uVar5 = 0x2e;
    uVar4 = in_RBX;
    local_a8 = in_RAX;
    internal_bytealg_IndexByteString();
    in_XMM15_Da = 0;
    in_XMM15_Db = 0;
    in_XMM15_Dc = 0;
    in_XMM15_Dd = 0;
    if (in_stack_fffffffffffffee8 != -1) {
      if (in_RBX <= in_RBX - 1) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if (local_a8[in_RBX - 1] != 0x2e) {
        a0.len = uVar4;
        a0.str = in_RAX;
        a1.str._1_7_ = in_stack_fffffffffffffee1;
        a1.str._0_1_ = uVar5;
        a1.len = in_stack_fffffffffffffee8;
        ~r0_02.len._0_7_ = in_stack_fffffffffffffef8;
        ~r0_02.str = (uint8 *)in_stack_fffffffffffffef0;
        ~r0_02.len._7_1_ = uVar6;
        runtime_concatstring2((runtime_tmpBuf *)0x0,a0,a1,~r0_02);
        in_RBX = extraout_RBX_00;
        local_a8 = extraout_RAX;
      }
    }
    ky.len = uVar4;
    ky.str = in_RAX;
    runtime_mapaccess2_faststr
              ((internal_abi_MapType *)&DAT_0082c680,(runtime_hmap *)net_hosts.byName,ky,local_a8,
               SUB81(in_RBX,0));
    byName.addrs.array = *extraout_RAX_00;
    byName.addrs.len._0_4_ = *(undefined4 *)(extraout_RAX_00 + 1);
    byName.addrs.len._4_4_ = *(undefined4 *)((int)extraout_RAX_00 + 0xc);
    local_70._8_8_ = extraout_RAX_00[1];
    byName.addrs.cap._0_4_ = *(undefined4 *)(extraout_RAX_00 + 2);
    byName.addrs.cap._4_4_ = *(undefined4 *)((int)extraout_RAX_00 + 0x14);
    auVar1 = *(undefined (*) [12])(extraout_RAX_00 + 3);
    byName.canonicalName.len._4_4_ = *(undefined4 *)((int)extraout_RAX_00 + 0x24);
    local_20 = auVar1._0_4_;
    byName.canonicalName.str._0_4_ = local_20;
    uStack_1c = auVar1._4_4_;
    byName.canonicalName.str._4_4_ = uStack_1c;
    uStack_18 = auVar1._8_4_;
    byName.canonicalName.len._0_4_ = uStack_18;
    if (extraout_BL != '\0') {
      runtime_makeslice((internal_abi_Type *)&DAT_008075e0,local_70._8_8_,local_70._8_8_,~r0_03);
      local_a0 = dstPtr;
      runtime_typedslicecopy
                ((internal_abi_Type *)&DAT_008075e0,dstPtr,local_70._8_8_,byName.addrs.array,
                 CONCAT44(byName.addrs.len._4_4_,(undefined4)byName.addrs.len),~r0_04);
      local_98._4_4_ = byName.canonicalName.str._4_4_;
      local_98._0_4_ = byName.canonicalName.str._0_4_;
      uStack_90._4_4_ = byName.canonicalName.len._4_4_;
      uStack_90._0_4_ = (undefined4)byName.canonicalName.len;
      local_78 = local_a0;
      local_70._0_8_ = local_70._8_8_;
      (*(code *)local_88._0_8_)();
      return;
    }
  }
  local_78 = (void *)0x0;
  local_70._4_4_ = in_XMM15_Db;
  local_70._0_4_ = in_XMM15_Da;
  local_70._8_4_ = in_XMM15_Dc;
  local_70._12_4_ = in_XMM15_Dd;
  local_98._4_4_ = in_XMM15_Db;
  local_98._0_4_ = in_XMM15_Da;
  uStack_90._0_4_ = in_XMM15_Dc;
  uStack_90._4_4_ = in_XMM15_Dd;
  (*(code *)local_88._0_8_)();
  return;
}



// WARNING: Unknown calling convention

void net_lookupStaticHost_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  sync___Mutex__Unlock(*(sync_Mutex **)(in_RDX + 8));
  return;
}



// DWARF original prototype: void net.lookupStaticAddr(string addr, []string ~r0, []string ~r0)

void net_lookupStaticAddr(string addr,__string ~r0,__string ~r0_1)

{
  void *tolen;
  void *~r0_00;
  void **extraout_RAX;
  char extraout_BL;
  bool ok;
  int extraout_RBX;
  void *~r0_01;
  int iVar1;
  int unaff_R14;
  bool bVar2;
  string in_stack_ffffffffffffff98;
  string in_stack_ffffffffffffffa8;
  undefined local_38 [16];
  undefined8 local_28;
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_28 = 0;
  LOCK();
  bVar2 = net_hosts.Mutex.state == 0;
  if (bVar2) {
    net_hosts.Mutex.state = 1;
  }
  UNLOCK();
  if (!bVar2) {
    sync___Mutex__lockSlow(&net_hosts.Mutex);
  }
  local_38._8_8_ = &net_hosts;
  local_38._0_8_ = net_lookupStaticAddr_func1;
  local_10 = (code **)local_38;
  net_readHosts();
  net_parseLiteralIP(in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8);
  if (extraout_RBX == 0) {
    local_28 = 0;
    (**local_10)();
    return;
  }
  if (net_hosts.byAddr == (map_string___string)0x0) {
    iVar1 = 0;
  }
  else {
    iVar1 = (net_hosts.byAddr)->count;
  }
  if ((iVar1 != 0) &&
     (runtime_mapaccess2_faststr
                ((internal_abi_MapType *)&DAT_0082b840,(runtime_hmap *)net_hosts.byAddr,
                 in_stack_ffffffffffffff98,~r0_00,SUB81(extraout_RBX,0)), extraout_BL != '\0')) {
    tolen = extraout_RAX[1];
    runtime_makeslicecopy
              ((internal_abi_Type *)&DAT_008075e0,(int)tolen,(int)tolen,*extraout_RAX,~r0_01);
    local_20._8_8_ = tolen;
    local_20._0_8_ = tolen;
    (**local_10)();
    return;
  }
  local_28 = 0;
  (**local_10)();
  return;
}



// WARNING: Unknown calling convention

void net_lookupStaticAddr_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  sync___Mutex__Unlock(*(sync_Mutex **)(in_RDX + 8));
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack
// DWARF original prototype: void net.(*ipv6ZoneCache).update(net.ipv6ZoneCache * zc,
// []net.Interface ift, bool force, bool updated, bool updated)

void net___ipv6ZoneCache__update
               (net_ipv6ZoneCache *zc,__net_Interface ift,bool force,bool updated,bool updated_1)

{
  time_Time ~r0;
  time_Time t;
  time_Time t_00;
  __net_Interface ~r0_00;
  time_Time ~r0_01;
  time_Time u;
  void *~r0_02;
  void *pvVar1;
  undefined8 uVar2;
  char extraout_AL;
  uint64 d;
  undefined8 *extraout_RAX;
  undefined8 *puVar3;
  map_string_int extraout_RAX_00;
  map_string_int extraout_RAX_01;
  map_string_int phVar4;
  map_int_string extraout_RAX_02;
  map_int_string extraout_RAX_03;
  map_int_string phVar5;
  int iVar6;
  undefined8 *extraout_RAX_04;
  void **extraout_RAX_05;
  void **extraout_RAX_06;
  void **ppvVar7;
  undefined7 in_register_00000009;
  int hint;
  time_Location *extraout_RCX;
  time_Location *extraout_RCX_00;
  time_Location *ptVar8;
  char cVar9;
  net_ipv6ZoneCache *pnVar10;
  char extraout_BL;
  bool ok;
  undefined7 in_register_00000019;
  int64 extraout_RBX;
  int extraout_RBX_00;
  char in_SIL;
  bool ~r1;
  runtime_hmap *extraout_RDI;
  runtime_hmap *extraout_RDI_00;
  runtime_hmap *extraout_RDI_01;
  int extraout_RDI_02;
  runtime_hmap *extraout_RDI_03;
  runtime_hmap *extraout_RDI_04;
  runtime_hmap *prVar11;
  void *~r0_03;
  time_Location **extraout_R11;
  map_string_int *extraout_R11_00;
  map_int_string *extraout_R11_01;
  void **extraout_R11_02;
  int unaff_R14;
  string in_stack_ffffffffffffff20;
  time_Location *in_stack_ffffffffffffff30;
  error in_stack_ffffffffffffff38;
  time_Location *in_stack_ffffffffffffff48;
  undefined local_60 [16];
  net_Interface ifi;
  
  puVar3 = (undefined8 *)CONCAT71(in_register_00000019,force);
  hint = CONCAT71(in_register_00000009,updated);
  while (local_60 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  sync___RWMutex__Lock(&zc->RWMutex);
  local_60._8_8_ = zc;
  local_60._0_8_ = net___ipv6ZoneCache__update_func1;
  ~r0.loc = in_stack_ffffffffffffff30;
  ~r0.wall = (uint64)in_stack_ffffffffffffff20.str;
  ~r0.ext = in_stack_ffffffffffffff20.len;
  time_Now(~r0);
  if (in_SIL == '\0') {
    t.loc = in_stack_ffffffffffffff30;
    t.wall = (uint64)in_stack_ffffffffffffff20.str;
    t.ext = in_stack_ffffffffffffff20.len;
    ~r0_01.loc = in_stack_ffffffffffffff48;
    ~r0_01.wall = (uint64)in_stack_ffffffffffffff38.tab;
    ~r0_01.ext = (int64)in_stack_ffffffffffffff38.data;
    time_Time_Add(t,d,~r0_01);
    t_00.loc = in_stack_ffffffffffffff30;
    t_00.wall = (uint64)in_stack_ffffffffffffff20.str;
    t_00.ext = in_stack_ffffffffffffff20.len;
    u.loc = in_stack_ffffffffffffff48;
    u.wall = (uint64)in_stack_ffffffffffffff38.tab;
    u.ext = (int64)in_stack_ffffffffffffff38.data;
    time_Time_After(t_00,u,SUB81((zc->lastFetched).wall,0));
    prVar11 = extraout_RDI_00;
    cVar9 = extraout_AL;
  }
  else {
    cVar9 = '\0';
    prVar11 = extraout_RDI;
  }
  if (cVar9 != '\0') {
    (*(code *)local_60._0_8_)();
    return;
  }
  (zc->lastFetched).wall = d;
  (zc->lastFetched).ext = extraout_RBX;
  ptVar8 = extraout_RCX;
  pnVar10 = zc;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RCX_00;
    extraout_R11[1] = (pnVar10->lastFetched).loc;
    ptVar8 = extraout_RCX_00;
    prVar11 = extraout_RDI_01;
  }
  (pnVar10->lastFetched).loc = ptVar8;
  if (hint == 0) {
    ~r0_00.cap = (int)in_stack_ffffffffffffff30;
    ~r0_00.array = (net_Interface *)in_stack_ffffffffffffff20.str;
    ~r0_00.len = in_stack_ffffffffffffff20.len;
    net_interfaceTable(0,~r0_00,in_stack_ffffffffffffff38);
    if (extraout_RDI_02 != 0) {
      (*(code *)local_60._0_8_)();
      return;
    }
    prVar11 = (runtime_hmap *)0x0;
    puVar3 = extraout_RAX;
    hint = extraout_RBX_00;
  }
  runtime_makemap((internal_abi_MapType *)&DAT_0082c560,hint,(runtime_hmap *)0x0,prVar11);
  phVar4 = extraout_RAX_00;
  prVar11 = extraout_RDI_03;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_01;
    extraout_R11_00[1] = zc->toIndex;
    phVar4 = extraout_RAX_01;
    prVar11 = extraout_RDI_04;
  }
  zc->toIndex = phVar4;
  runtime_makemap((internal_abi_MapType *)&DAT_0082c5c0,hint,(runtime_hmap *)0x0,prVar11);
  phVar5 = extraout_RAX_02;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_01 = extraout_RAX_03;
    extraout_R11_01[1] = zc->toName;
    phVar5 = extraout_RAX_03;
  }
  zc->toName = phVar5;
  for (iVar6 = 0; iVar6 < hint; iVar6 = iVar6 + 1) {
    ifi.Index._0_4_ = *(undefined4 *)puVar3;
    ifi.Index._4_4_ = *(undefined4 *)((int)puVar3 + 4);
    uVar2 = *puVar3;
    ifi.MTU._0_4_ = *(undefined4 *)(puVar3 + 1);
    ifi.MTU._4_4_ = *(undefined4 *)((int)puVar3 + 0xc);
    ifi.Name.str._0_4_ = *(undefined4 *)(puVar3 + 2);
    ifi.Name.str._4_4_ = *(undefined4 *)((int)puVar3 + 0x14);
    ifi.Name.len._0_4_ = *(undefined4 *)(puVar3 + 3);
    ifi.Name.len._4_4_ = *(undefined4 *)((int)puVar3 + 0x1c);
    ifi.HardwareAddr.array._0_4_ = *(undefined4 *)(puVar3 + 4);
    ifi.HardwareAddr.array._4_4_ = *(undefined4 *)((int)puVar3 + 0x24);
    ifi.HardwareAddr.len._0_4_ = *(undefined4 *)(puVar3 + 5);
    ifi.HardwareAddr.len._4_4_ = *(undefined4 *)((int)puVar3 + 0x2c);
    ifi.HardwareAddr.cap._0_4_ = *(undefined4 *)(puVar3 + 6);
    ifi.HardwareAddr.cap._4_4_ = *(undefined4 *)((int)puVar3 + 0x34);
    ifi.Flags._0_4_ = *(undefined4 *)(puVar3 + 7);
    ifi.Flags._4_4_ = *(undefined4 *)((int)puVar3 + 0x3c);
    runtime_mapassign_faststr
              ((internal_abi_MapType *)&DAT_0082c560,(runtime_hmap *)zc->toIndex,
               in_stack_ffffffffffffff20,(void *)puVar3[2]);
    *extraout_RAX_04 = uVar2;
    runtime_mapaccess2_fast64
              ((internal_abi_MapType *)&DAT_0082c5c0,(runtime_hmap *)zc->toName,
               CONCAT44(ifi.Index._4_4_,(undefined4)ifi.Index),~r0_03,~r1);
    if (extraout_BL == '\0') {
      pvVar1 = (void *)CONCAT44(ifi.Name.len._4_4_,(undefined4)ifi.Name.len);
      ~r0_02 = (void *)CONCAT44(ifi.Name.str._4_4_,ifi.Name.str._0_4_);
      runtime_mapassign_fast64
                ((internal_abi_MapType *)&DAT_0082c5c0,(runtime_hmap *)zc->toName,
                 CONCAT44(ifi.Index._4_4_,(undefined4)ifi.Index),~r0_02);
      extraout_RAX_05[1] = pvVar1;
      ppvVar7 = extraout_RAX_05;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_02 = ~r0_02;
        extraout_R11_02[1] = *extraout_RAX_06;
        ppvVar7 = extraout_RAX_06;
      }
      *ppvVar7 = ~r0_02;
    }
    puVar3 = puVar3 + 8;
  }
  (*(code *)local_60._0_8_)();
  return;
}



// WARNING: Unknown calling convention

void net___ipv6ZoneCache__update_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  sync___RWMutex__Unlock(*(sync_RWMutex **)(in_RDX + 8));
  return;
}



void net___ipv6ZoneCache__name(net_ipv6ZoneCache *zc,int index,string ~r0)

{
  sdword sVar1;
  __net_Interface ift;
  __net_Interface ift_00;
  char extraout_AL;
  bool updated;
  char extraout_BL;
  bool ok;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  uint uVar2;
  int i;
  sdword sVar3;
  char extraout_BL_00;
  char cVar4;
  undefined extraout_SIL;
  undefined extraout_SIL_00;
  undefined uVar5;
  undefined extraout_SIL_01;
  undefined extraout_SIL_02;
  int32 r;
  int32 r_1;
  void *extraout_RDI;
  void *extraout_RDI_00;
  void *extraout_RDI_01;
  void *extraout_RDI_02;
  void *pvVar6;
  int unaff_R14;
  undefined in_XMM15 [16];
  string in_stack_ffffffffffffff90;
  int in_stack_ffffffffffffffa0;
  char cStack_2d;
  undefined4 local_2c;
  undefined auStack_28 [12];
  undefined4 uStack_1c;
  undefined8 local_18;
  undefined8 local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (index != 0) {
    ift.cap = in_stack_ffffffffffffffa0;
    ift.array = (net_Interface *)in_stack_ffffffffffffff90.str;
    ift.len = in_stack_ffffffffffffff90.len;
    net___ipv6ZoneCache__update(&net_zoneCache,ift,false,false,false);
    LOCK();
    sVar1 = net_zoneCache.RWMutex.readerCount.v + 1;
    UNLOCK();
    sVar3 = net_zoneCache.RWMutex.readerCount.v + 1;
    pvVar6 = extraout_RDI;
    uVar5 = extraout_SIL;
    net_zoneCache.RWMutex.readerCount.v = sVar1;
    if (sVar3 < 0) {
      sync_runtime_SemacquireRWMutexR(&net_zoneCache.RWMutex.readerSem,false,0);
      pvVar6 = extraout_RDI_00;
      uVar5 = extraout_SIL_00;
    }
    runtime_mapaccess2_fast64
              ((internal_abi_MapType *)&DAT_0082c5c0,(runtime_hmap *)net_zoneCache.toName,index,
               pvVar6,(bool)uVar5);
    LOCK();
    sVar1 = net_zoneCache.RWMutex.readerCount.v + -1;
    UNLOCK();
    sVar3 = net_zoneCache.RWMutex.readerCount.v + -1;
    net_zoneCache.RWMutex.readerCount.v = sVar1;
    if (sVar3 < 0) {
      local_18 = *extraout_RAX;
      sync___RWMutex__rUnlockSlow(&net_zoneCache.RWMutex,sVar3);
    }
    cVar4 = extraout_BL;
    if ((extraout_BL == '\0') && (extraout_AL == '\0')) {
      ift_00.cap = in_stack_ffffffffffffffa0;
      ift_00.array = (net_Interface *)in_stack_ffffffffffffff90.str;
      ift_00.len = in_stack_ffffffffffffff90.len;
      net___ipv6ZoneCache__update(&net_zoneCache,ift_00,false,false,false);
      LOCK();
      sVar1 = net_zoneCache.RWMutex.readerCount.v + 1;
      UNLOCK();
      sVar3 = net_zoneCache.RWMutex.readerCount.v + 1;
      pvVar6 = extraout_RDI_01;
      uVar5 = extraout_SIL_01;
      net_zoneCache.RWMutex.readerCount.v = sVar1;
      if (sVar3 < 0) {
        sync_runtime_SemacquireRWMutexR(&net_zoneCache.RWMutex.readerSem,false,0);
        pvVar6 = extraout_RDI_02;
        uVar5 = extraout_SIL_02;
      }
      runtime_mapaccess2_fast64
                ((internal_abi_MapType *)&DAT_0082c5c0,(runtime_hmap *)net_zoneCache.toName,index,
                 pvVar6,(bool)uVar5);
      LOCK();
      sVar1 = net_zoneCache.RWMutex.readerCount.v + -1;
      UNLOCK();
      sVar3 = net_zoneCache.RWMutex.readerCount.v + -1;
      cVar4 = extraout_BL_00;
      net_zoneCache.RWMutex.readerCount.v = sVar1;
      if (sVar3 < 0) {
        local_10 = *extraout_RAX_00;
        sync___RWMutex__rUnlockSlow(&net_zoneCache.RWMutex,sVar3);
      }
    }
    if (cVar4 == '\0') {
      local_2c = in_XMM15._0_4_;
      auStack_28 = in_XMM15._0_12_;
      uStack_1c = in_XMM15._12_4_;
      uVar2 = 0x13;
      while (cVar4 = (char)index, 9 < (uint)index) {
        index = (uint)index / 10;
        if (0x13 < uVar2) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        auStack_28[uVar2 - 4] = cVar4 + (char)index * -10 + '0';
        uVar2 = uVar2 - 1;
      }
      if (0x13 < uVar2) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      auStack_28[uVar2 - 4] = cVar4 + '0';
      runtime_slicebytetostring
                ((runtime_tmpBuf *)0x0,auStack_28 + ((uVar2 & (int)(uVar2 - 0x14) >> 0x3f) - 4),
                 -(uVar2 - 0x14),in_stack_ffffffffffffff90);
    }
    return;
  }
  return;
}



char * net___ipv6ZoneCache__index(char *__s,int __c)

{
  byte bVar1;
  sdword sVar2;
  __net_Interface ift;
  __net_Interface ift_00;
  char extraout_AL;
  bool updated;
  char **extraout_RAX;
  char **extraout_RAX_00;
  int iVar3;
  int in_RCX;
  sdword sVar4;
  int index;
  char extraout_BL;
  bool ok;
  char *pcVar5;
  char extraout_BL_00;
  char cVar6;
  int32 r;
  int32 r_1;
  int unaff_R14;
  void *pvStack0000000000000010;
  int iStack0000000000000018;
  string in_stack_ffffffffffffffb8;
  int in_stack_ffffffffffffffc8;
  
  iStack0000000000000018 = in_RCX;
  pvStack0000000000000010 = (void *)__c;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (iStack0000000000000018 != 0) {
    ift.cap = in_stack_ffffffffffffffc8;
    ift.array = (net_Interface *)in_stack_ffffffffffffffb8.str;
    ift.len = in_stack_ffffffffffffffb8.len;
    net___ipv6ZoneCache__update(&net_zoneCache,ift,false,false,false);
    LOCK();
    sVar2 = net_zoneCache.RWMutex.readerCount.v + 1;
    UNLOCK();
    sVar4 = net_zoneCache.RWMutex.readerCount.v + 1;
    net_zoneCache.RWMutex.readerCount.v = sVar2;
    if (sVar4 < 0) {
      sync_runtime_SemacquireRWMutexR(&net_zoneCache.RWMutex.readerSem,false,0);
    }
    runtime_mapaccess2_faststr
              ((internal_abi_MapType *)&DAT_0082c560,(runtime_hmap *)net_zoneCache.toIndex,
               in_stack_ffffffffffffffb8,pvStack0000000000000010,SUB81(iStack0000000000000018,0));
    pcVar5 = *extraout_RAX;
    LOCK();
    sVar2 = net_zoneCache.RWMutex.readerCount.v + -1;
    UNLOCK();
    sVar4 = net_zoneCache.RWMutex.readerCount.v + -1;
    net_zoneCache.RWMutex.readerCount.v = sVar2;
    if (sVar4 < 0) {
      sync___RWMutex__rUnlockSlow(&net_zoneCache.RWMutex,sVar4);
    }
    cVar6 = extraout_BL;
    if ((extraout_BL == '\0') && (extraout_AL == '\0')) {
      ift_00.cap = in_stack_ffffffffffffffc8;
      ift_00.array = (net_Interface *)in_stack_ffffffffffffffb8.str;
      ift_00.len = in_stack_ffffffffffffffb8.len;
      net___ipv6ZoneCache__update(&net_zoneCache,ift_00,false,false,false);
      LOCK();
      sVar2 = net_zoneCache.RWMutex.readerCount.v + 1;
      UNLOCK();
      sVar4 = net_zoneCache.RWMutex.readerCount.v + 1;
      net_zoneCache.RWMutex.readerCount.v = sVar2;
      if (sVar4 < 0) {
        sync_runtime_SemacquireRWMutexR(&net_zoneCache.RWMutex.readerSem,false,0);
      }
      runtime_mapaccess2_faststr
                ((internal_abi_MapType *)&DAT_0082c560,(runtime_hmap *)net_zoneCache.toIndex,
                 in_stack_ffffffffffffffb8,pvStack0000000000000010,SUB81(iStack0000000000000018,0));
      pcVar5 = *extraout_RAX_00;
      LOCK();
      sVar2 = net_zoneCache.RWMutex.readerCount.v + -1;
      UNLOCK();
      sVar4 = net_zoneCache.RWMutex.readerCount.v + -1;
      net_zoneCache.RWMutex.readerCount.v = sVar2;
      cVar6 = extraout_BL_00;
      if (sVar4 < 0) {
        sync___RWMutex__rUnlockSlow(&net_zoneCache.RWMutex,sVar4);
      }
    }
    if (cVar6 == '\0') {
      pcVar5 = (char *)0x0;
      for (iVar3 = 0;
          ((iVar3 < iStack0000000000000018 &&
           (bVar1 = *(byte *)((int)pvStack0000000000000010 + iVar3), 0x2f < bVar1)) &&
          (bVar1 < 0x3a)); iVar3 = iVar3 + 1) {
        pcVar5 = (char *)((uint)(byte)(bVar1 - 0x30) + (int)pcVar5 * 10);
        if (0xfffffe < (int)pcVar5) {
          return (char *)0xffffff;
        }
      }
      if (iVar3 == 0) {
        pcVar5 = (char *)0x0;
      }
    }
    return pcVar5;
  }
  return (char *)0x0;
}



void net_interfaceTable(int ifindex,__net_Interface ~r0,error ~r1)

{
  __uint8 ~r0_1;
  __syscall_NetlinkMessage ~r0_00;
  error ~r1_1;
  syscall_IfInfomsg *psVar1;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *puVar2;
  net_Interface *~r0_01;
  undefined4 *extraout_RAX_04;
  void *extraout_RAX_05;
  void *pvVar3;
  undefined8 *extraout_RAX_06;
  undefined8 *extraout_RAX_07;
  uint extraout_RCX;
  uint oldCap;
  int iVar4;
  void *~r0_02;
  void *~r0_03;
  void *pvVar5;
  void *~r0_04;
  uint newLen;
  uint extraout_RBX;
  undefined8 extraout_RSI;
  undefined8 extraout_RSI_00;
  undefined8 extraout_RSI_01;
  int extraout_RDI;
  int extraout_RDI_00;
  int extraout_RDI_01;
  undefined4 *dst;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  int unaff_R14;
  __syscall_NetlinkRouteAttr in_stack_fffffffffffffed0;
  error in_stack_fffffffffffffee8;
  int in_stack_fffffffffffffef8;
  error in_stack_ffffffffffffff00;
  runtime_itab *in_stack_ffffffffffffff10;
  void *pvVar6;
  void *in_stack_ffffffffffffff18;
  int local_b0;
  void *local_a8;
  undefined8 local_a0;
  undefined8 local_98;
  undefined4 *local_90;
  void *local_88;
  syscall_IfInfomsg *local_80;
  undefined8 *local_78;
  syscall_NetlinkMessage m;
  undefined4 local_48;
  undefined4 uStack_44;
  undefined4 uStack_40;
  undefined4 uStack_3c;
  undefined4 local_38;
  undefined4 uStack_34;
  undefined4 uStack_30;
  undefined4 uStack_2c;
  undefined4 local_28;
  undefined4 uStack_24;
  undefined4 uStack_20;
  undefined4 uStack_1c;
  undefined4 local_18;
  undefined4 uStack_14;
  undefined4 uStack_10;
  undefined4 uStack_c;
  
  while (&local_b0 <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_1.cap = in_stack_fffffffffffffef8;
  ~r0_1.array = (uint8 *)in_stack_fffffffffffffee8.tab;
  ~r0_1.len = (int)in_stack_fffffffffffffee8.data;
  ~r1_1.data = in_stack_ffffffffffffff18;
  ~r1_1.tab = in_stack_ffffffffffffff10;
  syscall_NetlinkRIB(0x12,0,(__uint8)in_stack_fffffffffffffed0,~r0_1,in_stack_ffffffffffffff00,~r1_1
                    );
  if (extraout_RDI != 0) {
    local_98 = extraout_RSI;
    runtime_newobject((internal_abi_Type *)&DAT_0084dae0,~r0_02);
    extraout_RAX[1] = 10;
    *extraout_RAX = &DAT_008b3137;
    extraout_RAX[2] = extraout_RDI;
    puVar2 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = local_98;
      puVar2 = extraout_RAX_00;
    }
    puVar2[3] = local_98;
    return;
  }
  ~r0_00.cap = in_stack_fffffffffffffef8;
  ~r0_00.array = (syscall_NetlinkMessage *)in_stack_fffffffffffffee8.tab;
  ~r0_00.len = (int)in_stack_fffffffffffffee8.data;
  syscall_ParseNetlinkMessage((__uint8)in_stack_fffffffffffffed0,~r0_00,in_stack_ffffffffffffff00);
  if (extraout_RDI_00 != 0) {
    local_98 = extraout_RSI_00;
    runtime_newobject((internal_abi_Type *)&DAT_0084dae0,~r0_03);
    extraout_RAX_02[1] = 0x13;
    *extraout_RAX_02 = &DAT_008b8199;
    extraout_RAX_02[2] = extraout_RDI_00;
    puVar2 = extraout_RAX_02;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = local_98;
      puVar2 = extraout_RAX_03;
    }
    puVar2[3] = local_98;
    return;
  }
  iVar4 = 0;
  oldCap = 0;
  pvVar3 = (void *)0x0;
  newLen = 0;
  puVar2 = extraout_RAX_01;
  pvVar5 = ~r0_03;
  pvVar6 = ~r0_03;
  do {
    if ((int)pvVar5 <= iVar4) {
      return;
    }
    m.Header._0_8_ = *puVar2;
    m.Header.Seq = *(uint32 *)(puVar2 + 1);
    m.Header.Pid = *(uint32 *)((int)puVar2 + 0xc);
    m.Data.array._0_4_ = *(undefined4 *)(puVar2 + 2);
    m.Data.array._4_4_ = *(undefined4 *)((int)puVar2 + 0x14);
    psVar1 = (syscall_IfInfomsg *)puVar2[2];
    m.Data.len._0_4_ = *(undefined4 *)(puVar2 + 3);
    m.Data.len._4_4_ = *(undefined4 *)((int)puVar2 + 0x1c);
    m.Data.cap._0_4_ = *(undefined4 *)(puVar2 + 4);
    m.Data.cap._4_4_ = *(undefined4 *)((int)puVar2 + 0x24);
    if (m.Header.Type == 3) {
      return;
    }
    if (m.Header.Type == 0x10) {
      if (puVar2[3] == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      local_b0 = iVar4;
      local_a8 = pvVar3;
      local_80 = psVar1;
      local_78 = puVar2;
      if ((ifindex == 0) || (ifindex == psVar1->Index)) {
        syscall_ParseNetlinkRouteAttr(&m,in_stack_fffffffffffffed0,in_stack_fffffffffffffee8);
        if (extraout_RDI_01 != 0) {
          local_a0 = extraout_RSI_01;
          runtime_newobject((internal_abi_Type *)&DAT_0084dae0,~r0_04);
          extraout_RAX_06[1] = 0x15;
          *extraout_RAX_06 = &DAT_008b95e6;
          extraout_RAX_06[2] = extraout_RDI_01;
          puVar2 = extraout_RAX_06;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier1();
            *extraout_R11_01 = local_a0;
            puVar2 = extraout_RAX_07;
          }
          puVar2[3] = local_a0;
          return;
        }
        net_newLink(local_80,in_stack_fffffffffffffed0,~r0_01);
        local_48 = *extraout_RAX_04;
        uStack_44 = extraout_RAX_04[1];
        uStack_40 = extraout_RAX_04[2];
        uStack_3c = extraout_RAX_04[3];
        local_38 = extraout_RAX_04[4];
