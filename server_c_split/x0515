  undefined8 local_50;
  undefined8 uStack_48;
  undefined8 uStack_40;
  
  while (&local_d8 <= *(undefined ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0081cba0,in_RBX);
  *extraout_RAX = 1;
  local_140 = extraout_RAX;
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0);
  (extraout_RAX_00->abs).len = 1;
  (extraout_RAX_00->abs).cap = 1;
  pmVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier3();
    *extraout_R11 = local_140;
    extraout_R11[1] = (math_big_Word *)extraout_RAX_01;
    extraout_R11[2] = (math_big_Word *)encoding_asn1_bigOne;
    pmVar1 = extraout_RAX_01;
  }
  (pmVar1->abs).array = local_140;
  local_c8 = &DAT_008679a0;
  local_c0 = local_70;
  puVar2 = &DAT_008679a0;
  encoding_asn1_bigOne = pmVar1;
  encoding_asn1_bitStringType.tab = (runtime_itab *)go_itab__reflect_rtype_reflect_Type;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_02;
    extraout_R11_00[1] = encoding_asn1_bitStringType.data;
    puVar2 = extraout_RAX_02;
  }
  local_88[0] = local_148;
  local_d8 = &DAT_0083aac0;
  local_d0 = local_88;
  puVar3 = &DAT_0083aac0;
  encoding_asn1_bitStringType.data = puVar2;
  encoding_asn1_objectIdentifierType.tab = (runtime_itab *)go_itab__reflect_rtype_reflect_Type;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_01 = extraout_RAX_03;
    extraout_R11_01[1] = encoding_asn1_objectIdentifierType.data;
    puVar3 = extraout_RAX_03;
  }
  local_e8 = &DAT_008087e0;
  local_e0 = &DAT_0095c570;
  puVar2 = &DAT_008087e0;
  encoding_asn1_objectIdentifierType.data = puVar3;
  encoding_asn1_enumeratedType.tab = (runtime_itab *)go_itab__reflect_rtype_reflect_Type;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_02 = extraout_RAX_04;
    extraout_R11_02[1] = encoding_asn1_enumeratedType.data;
    puVar2 = extraout_RAX_04;
  }
  local_f8 = &DAT_00808820;
  local_f0 = runtime_staticuint64s;
  puVar3 = &DAT_00808820;
  encoding_asn1_enumeratedType.data = puVar2;
  encoding_asn1_flagType.tab = (runtime_itab *)go_itab__reflect_rtype_reflect_Type;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_03 = extraout_RAX_05;
    extraout_R11_03[1] = encoding_asn1_flagType.data;
    puVar3 = extraout_RAX_05;
  }
  local_90 = 0;
  local_108 = &DAT_008a8120;
  local_100 = local_a0;
  puVar2 = &DAT_008a8120;
  encoding_asn1_flagType.data = puVar3;
  encoding_asn1_timeType.tab = (runtime_itab *)go_itab__reflect_rtype_reflect_Type;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_04 = extraout_RAX_06;
    extraout_R11_04[1] = encoding_asn1_timeType.data;
    puVar2 = extraout_RAX_06;
  }
  local_50 = in_XMM15._0_8_;
  uStack_40 = in_XMM15._8_8_;
  local_118 = &DAT_00881fc0;
  local_110 = &local_50;
  puVar3 = &DAT_00881fc0;
  encoding_asn1_timeType.data = puVar2;
  encoding_asn1_rawValueType.tab = (runtime_itab *)go_itab__reflect_rtype_reflect_Type;
  uStack_48 = local_50;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_05 = extraout_RAX_07;
    extraout_R11_05[1] = encoding_asn1_rawValueType.data;
    puVar3 = extraout_RAX_07;
  }
  local_a8 = 0;
  local_128 = &DAT_0080f640;
  local_120 = local_b8;
  puVar2 = &DAT_0080f640;
  encoding_asn1_rawValueType.data = puVar3;
  encoding_asn1_rawContentsType.tab = (runtime_itab *)go_itab__reflect_rtype_reflect_Type;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_06 = extraout_RAX_08;
    extraout_R11_06[1] = encoding_asn1_rawContentsType.data;
    puVar2 = extraout_RAX_08;
  }
  local_138 = &DAT_008aa500;
  local_130 = 0;
  puVar3 = &DAT_008aa500;
  encoding_asn1_rawContentsType.data = puVar2;
  encoding_asn1_bigIntType.tab = (runtime_itab *)go_itab__reflect_rtype_reflect_Type;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_07 = extraout_RAX_09;
    extraout_R11_07[1] = encoding_asn1_bigIntType.data;
    puVar3 = extraout_RAX_09;
  }
  encoding_asn1_bigIntType.data = puVar3;
  return (int)puVar3;
}



void type__eq_encoding_asn1_taggedEncoder
               (encoding_asn1_taggedEncoder *p,encoding_asn1_taggedEncoder *q,bool r)

{
  runtime_itab *prVar1;
  char extraout_AL;
  undefined in_DIL;
  bool ~r0;
  undefined extraout_DIL;
  int unaff_R14;
  encoding_asn1_taggedEncoder *peStack0000000000000008;
  encoding_asn1_taggedEncoder *peStack0000000000000010;
  
  peStack0000000000000008 = p;
  peStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  if ((((*(int *)peStack0000000000000008->scratch == *(int *)peStack0000000000000010->scratch) &&
       (prVar1 = (peStack0000000000000008->tag).tab, (peStack0000000000000010->tag).tab == prVar1))
      && (runtime_ifaceeq(prVar1,(peStack0000000000000008->tag).data,
                          (peStack0000000000000010->tag).data,(bool)in_DIL), extraout_AL != '\0'))
     && (prVar1 = (peStack0000000000000008->body).tab, (peStack0000000000000010->body).tab == prVar1
        )) {
    runtime_ifaceeq(prVar1,(peStack0000000000000008->body).data,(peStack0000000000000010->body).data
                    ,~r0);
  }
  return;
}



void encoding_asn1___StructuralError__Error(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  uint8 *in_RAX;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffd0;
  }
  if (in_RAX != (uint8 *)0x0) {
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    runtime_concatstring2
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void encoding_asn1___SyntaxError__Error(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  uint8 *in_RAX;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffd0;
  }
  if (in_RAX != (uint8 *)0x0) {
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    runtime_concatstring2
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void encoding_asn1___BitString__At(int i,int ~r0)

{
  int *piVar1;
  uint y;
  int x;
  int unaff_R14;
  undefined auStack_18 [16];
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_18;
  }
  if (i == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  if (((-1 < ~r0) && (~r0 < *(int *)(i + 0x18))) && (*(uint *)(i + 8) <= (uint)(~r0 >> 3))) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void encoding_asn1___BitString__RightAlign(__uint8 ~r0)

{
  __uint8 **pp_Var1;
  __uint8 ~r0_00;
  uint8 *in_RAX;
  uint8 *unaff_RBP;
  int unaff_R14;
  undefined8 unaff_retaddr;
  encoding_asn1_BitString in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.array = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.array;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &~r0)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffd8;
  }
  if (in_RAX != (uint8 *)0x0) {
    ~r0_00.cap = (int)~r0.array;
    ~r0_00.len = unaff_retaddr;
    ~r0_00.array = unaff_RBP;
    encoding_asn1_BitString_RightAlign(in_stack_ffffffffffffffd8,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void encoding_asn1___ObjectIdentifier__Equal(encoding_asn1_ObjectIdentifier other,bool ~r0)

{
  encoding_asn1_ObjectIdentifier **ppeVar1;
  undefined7 in_register_00000001;
  int *piVar2;
  int i;
  int in_RCX;
  int in_RBX;
  int unaff_R14;
  
  piVar2 = (int *)CONCAT71(in_register_00000001,~r0);
  ppeVar1 = *(encoding_asn1_ObjectIdentifier ***)(unaff_R14 + 0x20);
  if ((ppeVar1 != (encoding_asn1_ObjectIdentifier **)0x0) && (*ppeVar1 == &other)) {
    *ppeVar1 = (encoding_asn1_ObjectIdentifier *)&stack0xfffffffffffffff8;
  }
  if (piVar2 != (int *)0x0) {
    if (in_RCX == piVar2[1]) {
      for (i = 0; (i < piVar2[1] && (*(int *)(in_RBX + i * 8) == *(int *)(*piVar2 + i * 8)));
          i = i + 1) {
      }
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void encoding_asn1___ObjectIdentifier__String(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  uint8 *in_RAX;
  uint8 *unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  encoding_asn1_ObjectIdentifier in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffe0;
  }
  if (in_RAX != (uint8 *)0x0) {
    ~r0_00.len = unaff_retaddr;
    ~r0_00.str = unaff_RBP;
    encoding_asn1_ObjectIdentifier_String(in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void encoding_asn1___byteEncoder__Encode(__uint8 dst)

{
  __uint8 **pp_Var1;
  undefined *in_RAX;
  int in_RCX;
  undefined *in_RBX;
  int unaff_R14;
  
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &dst)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffe8;
  }
  if (in_RAX != (undefined *)0x0) {
    if (in_RCX != 0) {
      *in_RBX = *in_RAX;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void encoding_asn1___byteEncoder__Len(int ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void encoding_asn1___bytesEncoder__Encode(__uint8 dst)

{
  __uint8 **pp_Var1;
  void *pvVar2;
  void **in_RAX;
  void *in_RCX;
  void *in_RBX;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffd0;
  
  dst.len = (int)in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    dst.array = (uint8 *)in_RAX;
    dst.cap = (int)in_RCX;
    runtime_morestack_noctxt();
    in_RAX = (void **)dst.array;
    in_RCX = (void *)dst.cap;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &dst)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffd0;
  }
  if (in_RAX == (void **)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  pvVar2 = in_RAX[1];
  if ((int)pvVar2 < (int)in_RCX) {
    in_RCX = pvVar2;
  }
  if ((void *)dst.len != *in_RAX) {
    runtime_memmove((void *)dst.len,*in_RAX,(size_t)in_RCX);
  }
  if (pvVar2 == in_RCX) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffd0);
}



void encoding_asn1___bytesEncoder__Len(int ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void encoding_asn1___stringEncoder__Encode(__uint8 dst)

{
  __uint8 **pp_Var1;
  void *pvVar2;
  void **in_RAX;
  void *in_RCX;
  void *in_RBX;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffd0;
  
  dst.len = (int)in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    dst.array = (uint8 *)in_RAX;
    dst.cap = (int)in_RCX;
    runtime_morestack_noctxt();
    in_RAX = (void **)dst.array;
    in_RCX = (void *)dst.cap;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &dst)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffd0;
  }
  if (in_RAX == (void **)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  pvVar2 = in_RAX[1];
  if ((int)pvVar2 < (int)in_RCX) {
    in_RCX = pvVar2;
  }
  if ((void *)dst.len != *in_RAX) {
    runtime_memmove((void *)dst.len,*in_RAX,(size_t)in_RCX);
  }
  if (pvVar2 == in_RCX) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffd0);
}



void encoding_asn1___stringEncoder__Len(int ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void encoding_asn1___multiEncoder__Encode(__uint8 dst)

{
  __uint8 **pp_Var1;
  uint8 *in_RAX;
  int in_RCX;
  int unaff_R14;
  encoding_asn1_multiEncoder in_stack_ffffffffffffffc8;
  __uint8 in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    dst.array = in_RAX;
    dst.cap = in_RCX;
    runtime_morestack_noctxt();
    in_RAX = dst.array;
    in_RCX = dst.cap;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &dst)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffc8;
  }
  if (in_RAX != (uint8 *)0x0) {
    encoding_asn1_multiEncoder_Encode(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffe0);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void encoding_asn1___multiEncoder__Len(int ~r0)

{
  int *piVar1;
  int iVar2;
  int unaff_R14;
  int **in_stack_00000008;
  undefined auStack_30 [8];
  int size;
  int *local_20;
  int local_18;
  int *local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = (int **)~r0;
    runtime_morestack_noctxt();
    ~r0 = (int)in_stack_00000008;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int ***)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_30;
  }
  if ((int **)~r0 != (int **)0x0) {
    local_10 = *(int **)~r0;
    local_20 = *(int **)(~r0 + 8);
    size = 0;
    for (local_18 = 0; local_18 < (int)local_20; local_18 = local_18 + 1) {
      iVar2 = (**(code **)(*local_10 + 0x20))(local_10[1]);
      local_10 = local_10 + 2;
      size = size + iVar2;
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void encoding_asn1___setEncoder__Encode(__uint8 dst)

{
  __uint8 **pp_Var1;
  uint8 *in_RAX;
  int in_RCX;
  int unaff_R14;
  encoding_asn1_setEncoder in_stack_ffffffffffffffc8;
  __uint8 in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    dst.array = in_RAX;
    dst.cap = in_RCX;
    runtime_morestack_noctxt();
    in_RAX = dst.array;
    in_RCX = dst.cap;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &dst)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffc8;
  }
  if (in_RAX != (uint8 *)0x0) {
    encoding_asn1_setEncoder_Encode(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffe0);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void encoding_asn1___setEncoder__Len(int ~r0)

{
  int *piVar1;
  int iVar2;
  int unaff_R14;
  int **in_stack_00000008;
  undefined auStack_30 [8];
  int size;
  int *local_20;
  int local_18;
  int *local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = (int **)~r0;
    runtime_morestack_noctxt();
    ~r0 = (int)in_stack_00000008;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int ***)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_30;
  }
  if ((int **)~r0 != (int **)0x0) {
    local_10 = *(int **)~r0;
    local_20 = *(int **)(~r0 + 8);
    size = 0;
    for (local_18 = 0; local_18 < (int)local_20; local_18 = local_18 + 1) {
      iVar2 = (**(code **)(*local_10 + 0x20))(local_10[1]);
      local_10 = local_10 + 2;
      size = size + iVar2;
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void encoding_asn1___int64Encoder__Encode(__uint8 dst)

{
  __uint8 **pp_Var1;
  int iVar2;
  int *in_RAX;
  uint in_RCX;
  int iVar3;
  uint uVar4;
  int j;
  int in_RBX;
  int n_1;
  int n;
  uint uVar5;
  int unaff_R14;
  
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &dst)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffe8;
  }
  if (in_RAX == (int *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  n = 1;
  iVar2 = *in_RAX;
  for (iVar3 = iVar2; 0x7f < iVar3; iVar3 = iVar3 >> 8) {
    n = n + 1;
  }
  for (; iVar3 < -0x80; iVar3 = iVar3 >> 8) {
    n = n + 1;
  }
  uVar4 = 0;
  while( true ) {
    if (n <= (int)uVar4) {
      return;
    }
    uVar5 = ((n - uVar4) + -1) * 8;
    if (in_RCX <= uVar4) break;
    *(char *)(in_RBX + uVar4) = (char)(iVar2 >> (((byte)uVar5 | ~-(uVar5 < 0x40)) & 0x3f));
    uVar4 = uVar4 + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void encoding_asn1___int64Encoder__Len(int ~r0)

{
  int *piVar1;
  int n;
  int iVar2;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  for (iVar2 = *(int *)~r0; 0x7f < iVar2; iVar2 = iVar2 >> 8) {
  }
  for (; iVar2 < -0x80; iVar2 = iVar2 >> 8) {
  }
  return;
}



void encoding_asn1___bitStringEncoder__Encode(__uint8 dst)

{
  __uint8 **pp_Var1;
  char *pcVar2;
  char *__src;
  char cVar3;
  char **in_RAX;
  int in_RCX;
  char *__n;
  char *in_RBX;
  int in_RDI;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffd0;
  
  dst.len = (int)in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    dst.array = (uint8 *)in_RAX;
    dst.cap = in_RCX;
    runtime_morestack_noctxt();
    in_RAX = (char **)dst.array;
    in_RCX = dst.cap;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &dst)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffd0;
  }
  if (in_RAX == (char **)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  cVar3 = (char)((int)in_RAX[3] % 8);
  if (in_RCX == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  pcVar2 = in_RAX[1];
  __src = *in_RAX;
  *(byte *)dst.len =
       -(cVar3 + ((((byte)(-((int)in_RAX[3] % 8 + -8) >> 0x3f) >> 5) - cVar3) + 8 & 0xf8) + -8);
  __n = (char *)(in_RCX + -1);
  if ((int)pcVar2 < (int)(char *)(in_RCX + -1)) {
    __n = pcVar2;
  }
  if (__src != (char *)(dst.len + (uint)((dword)(-(in_RDI + -1) >> 0x3f) & 1))) {
    runtime_memmove((char *)(dst.len + (uint)((dword)(-(in_RDI + -1) >> 0x3f) & 1)),__src,
                    (size_t)__n);
  }
  if (pcVar2 == __n) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffd0);
}



void encoding_asn1___bitStringEncoder__Len(int ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void encoding_asn1___oidEncoder__Encode(__uint8 dst)

{
  __uint8 **pp_Var1;
  uint8 *in_RAX;
  int in_RCX;
  int unaff_R14;
  encoding_asn1_oidEncoder in_stack_ffffffffffffffc8;
  __uint8 in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    dst.array = in_RAX;
    dst.cap = in_RCX;
    runtime_morestack_noctxt();
    in_RAX = dst.array;
    in_RCX = dst.cap;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &dst)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffc8;
  }
  if (in_RAX != (uint8 *)0x0) {
    encoding_asn1_oidEncoder_Encode(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffe0);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void encoding_asn1___oidEncoder__Len(int ~r0)

{
  int *piVar1;
  int unaff_R14;
  int *in_stack_00000008;
  encoding_asn1_oidEncoder in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = (int *)~r0;
    runtime_morestack_noctxt();
    ~r0 = (int)in_stack_00000008;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffe0;
  }
  if ((int *)~r0 != (int *)0x0) {
    encoding_asn1_oidEncoder_Len(in_stack_ffffffffffffffe0,*(int *)~r0);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void type__eq_encoding_asn1_fieldParameters
               (encoding_asn1_fieldParameters *p,encoding_asn1_fieldParameters *q,bool r)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((q->optional == p->optional) && (q->explicit == p->explicit)) &&
      (q->application == p->application)) && (q->private == p->private)) {
    runtime_memequal();
  }
  return;
}



void type__eq_encoding_asn1_tagAndLength
               (encoding_asn1_tagAndLength *p,encoding_asn1_tagAndLength *q,bool r)

{
  if (((q->class == p->class) && (q->tag == p->tag)) && (q->length == p->length)) {
    return;
  }
  return;
}



void type__eq__2_encoding_asn1_encoder
               (encoding_asn1_encoder (*p) [2],encoding_asn1_encoder (*q) [2],bool r)

{
  runtime_itab *tab;
  runtime_itab *prVar1;
  char extraout_AL;
  int iVar2;
  int unaff_R14;
  encoding_asn1_encoder (*paeStack0000000000000008) [2];
  encoding_asn1_encoder (*paeStack0000000000000010) [2];
  
  paeStack0000000000000008 = p;
  paeStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar2 = 0;
  while( true ) {
    if (1 < iVar2) {
      return;
    }
    tab = (*paeStack0000000000000008)[iVar2].tab;
    prVar1 = (*paeStack0000000000000010)[iVar2].tab;
    if (prVar1 != tab) break;
    runtime_ifaceeq(tab,(*paeStack0000000000000008)[iVar2].data,
                    (*paeStack0000000000000010)[iVar2].data,SUB81(prVar1,0));
    if (extraout_AL == '\0') {
      return;
    }
    iVar2 = iVar2 + 1;
  }
  return;
}



void vendor_golang_org_x_crypto_cryptobyte_asn1_Tag_Constructed
               (vendor_golang_org_x_crypto_cryptobyte_asn1_Tag t,
               vendor_golang_org_x_crypto_cryptobyte_asn1_Tag ~r0)

{
  return;
}



void vendor_golang_org_x_crypto_cryptobyte_asn1_Tag_ContextSpecific
               (vendor_golang_org_x_crypto_cryptobyte_asn1_Tag t,
               vendor_golang_org_x_crypto_cryptobyte_asn1_Tag ~r0)

{
  return;
}



void vendor_golang_org_x_crypto_cryptobyte_asn1___Tag__Constructed
               (vendor_golang_org_x_crypto_cryptobyte_asn1_Tag ~r0)

{
  int *piVar1;
  undefined7 in_register_00000001;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (CONCAT71(in_register_00000001,~r0) != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void vendor_golang_org_x_crypto_cryptobyte_asn1___Tag__ContextSpecific
               (vendor_golang_org_x_crypto_cryptobyte_asn1_Tag ~r0)

{
  int *piVar1;
  undefined7 in_register_00000001;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (CONCAT71(in_register_00000001,~r0) != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void vendor_golang_org_x_crypto_cryptobyte___String__ReadASN1Boolean
               (vendor_golang_org_x_crypto_cryptobyte_String *s,bool *out,bool ~r0)

{
  char extraout_AL;
