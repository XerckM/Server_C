            internal_cpu_options.array[i_2].Enable = iVar4 == 3;
            goto LAB_00405728;
          }
        }
        runtime_printlock();
        runtime_printstring(in_stack_ffffffffffffff78);
        runtime_printstring(in_stack_ffffffffffffff78);
        runtime_printstring(in_stack_ffffffffffffff78);
        runtime_printunlock();
      }
      goto LAB_00405728;
    }
    runtime_printlock();
    runtime_printstring(in_stack_ffffffffffffff78);
    runtime_printstring(in_stack_ffffffffffffff78);
    runtime_printstring(in_stack_ffffffffffffff78);
    runtime_printunlock();
  } while( true );
}



// WARNING: Unknown calling convention

void internal_cpu_doinit(void)

{
  int iVar1;
  runtime_slice ~r0;
  runtime_slice ~r0_00;
  bool osSupportsAVX;
  int32 level;
  sdword extraout_EAX;
  sdword extraout_EAX_00;
  sdword extraout_EAX_01;
  sdword extraout_EAX_02;
  sdword extraout_EAX_03;
  uint32 maxID;
  uint32 ecx1;
  uint32 eax;
  uint32 ebx7;
  uint32 edxExt1;
  internal_cpu_option *extraout_RAX;
  internal_cpu_option *extraout_RAX_00;
  internal_cpu_option *extraout_RAX_01;
  internal_cpu_option *extraout_RAX_02;
  internal_cpu_option *extraout_RAX_03;
  internal_cpu_option *extraout_RAX_04;
  internal_cpu_option *extraout_RAX_05;
  internal_cpu_option *extraout_RAX_06;
  internal_cpu_option *extraout_RAX_07;
  internal_cpu_option *extraout_RAX_08;
  internal_cpu_option *extraout_RAX_09;
  internal_cpu_option *piVar2;
  int extraout_RCX;
  int extraout_RCX_00;
  int extraout_RCX_01;
  int extraout_RCX_02;
  int extraout_RCX_03;
  int extraout_RCX_04;
  int extraout_RCX_05;
  uint8 *puVar3;
  undefined8 uVar4;
  void *in_RBX;
  uint uVar5;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  void *extraout_RBX_03;
  int iVar6;
  int extraout_R8;
  int extraout_R8_00;
  int extraout_R8_01;
  int extraout_R8_02;
  int extraout_R8_03;
  undefined8 extraout_R9;
  undefined8 extraout_R9_00;
  undefined8 extraout_R9_01;
  undefined8 extraout_R9_02;
  undefined8 extraout_R9_03;
  internal_cpu_option **extraout_R11;
  internal_cpu_option **extraout_R11_00;
  undefined8 *extraout_R11_01;
  undefined8 *extraout_R11_02;
  undefined8 *extraout_R11_03;
  undefined8 *extraout_R11_04;
  undefined8 *extraout_R11_05;
  internal_cpu_option **extraout_R11_06;
  uint8 **extraout_R11_07;
  undefined8 *extraout_R11_08;
  undefined8 *extraout_R11_09;
  undefined8 *extraout_R11_10;
  undefined8 *extraout_R11_11;
  int unaff_R14;
  bool bVar7;
  sdword in_stack_ffffffffffffffa8;
  sdword sVar8;
  dword dVar9;
  undefined4 in_stack_ffffffffffffffac;
  dword in_stack_ffffffffffffffb0;
  uint32 uVar10;
  dword in_stack_ffffffffffffffb4;
  dword in_stack_ffffffffffffffb8;
  dword in_stack_ffffffffffffffbc;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX_03;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00819400,in_RBX);
  (extraout_RAX->Name).len = 3;
  (extraout_RAX->Name).str = &DAT_008ae3ff;
  extraout_RAX->Feature = &internal_cpu_X86.HasADX;
  extraout_RAX[1].Name.len = 3;
  extraout_RAX[1].Name.str = &DAT_008ae402;
  extraout_RAX[1].Feature = &internal_cpu_X86.HasAES;
  extraout_RAX[2].Name.len = 4;
  extraout_RAX[2].Name.str = &DAT_008ae7b7;
  extraout_RAX[2].Feature = &internal_cpu_X86.HasERMS;
  extraout_RAX[3].Name.len = 9;
  extraout_RAX[3].Name.str = &DAT_008b2b73;
  extraout_RAX[3].Feature = &internal_cpu_X86.HasPCLMULQDQ;
  extraout_RAX[4].Name.len = 6;
  extraout_RAX[4].Name.str = &DAT_008afb50;
  extraout_RAX[4].Feature = &internal_cpu_X86.HasRDTSCP;
  extraout_RAX[5].Name.len = 3;
  extraout_RAX[5].Name.str = &DAT_008ae405;
  extraout_RAX[5].Feature = &internal_cpu_X86.HasSHA;
  internal_cpu_options.len = 6;
  internal_cpu_options.cap = 6;
  piVar2 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_00;
    extraout_R11[1] = internal_cpu_options.array;
    piVar2 = extraout_RAX_00;
  }
  internal_cpu_options.array = piVar2;
  internal_cpu_getGOAMD64level();
  sVar8 = in_stack_ffffffffffffffa8;
  if (in_stack_ffffffffffffffa8 < 2) {
    uVar5 = internal_cpu_options.len + 5;
    piVar2 = internal_cpu_options.array;
    if (((uint)internal_cpu_options.cap < uVar5) &&
       (~r0.array._4_4_ = in_stack_ffffffffffffffac, ~r0.array._0_4_ = in_stack_ffffffffffffffa8,
       ~r0.len._0_4_ = in_stack_ffffffffffffffb0, ~r0.len._4_4_ = in_stack_ffffffffffffffb4,
       ~r0.cap._0_4_ = in_stack_ffffffffffffffb8, ~r0.cap._4_4_ = in_stack_ffffffffffffffbc,
       runtime_growslice(internal_cpu_options.array,uVar5,internal_cpu_options.cap,5,
                         (internal_abi_Type *)&DAT_00877060,~r0), uVar5 = extraout_RBX,
       piVar2 = extraout_RAX_01, internal_cpu_options.cap = extraout_RCX,
       runtime_writeBarrier._0_4_ != 0)) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RAX_02;
      extraout_R11_00[1] = internal_cpu_options.array;
      uVar5 = extraout_RBX_00;
      piVar2 = extraout_RAX_02;
    }
    internal_cpu_options.array = piVar2;
    piVar2 = internal_cpu_options.array;
    iVar1 = uVar5 - 5;
    iVar6 = iVar1 * 0x20;
    internal_cpu_options.len = uVar5;
    internal_cpu_options.array[iVar1].Name.len = 6;
    piVar2[iVar1].Specified = false;
    piVar2[iVar1].Enable = false;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_01 = extraout_R9;
      extraout_R11_01[1] = *(undefined8 *)((int)&piVar2->Feature + extraout_R8);
      iVar6 = extraout_R8;
      in_stack_ffffffffffffffa8 = extraout_EAX;
    }
    *(undefined **)((int)&(piVar2->Name).str + iVar6) = &DAT_008afb56;
    *(undefined8 *)((int)&piVar2->Feature + iVar6) = 0xc8be2a;
    *(undefined8 *)((int)&piVar2[1].Name.len + iVar6) = 4;
    (&piVar2[1].Specified)[iVar6] = false;
    (&piVar2[1].Enable)[iVar6] = false;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_02 = extraout_R9_00;
      extraout_R11_02[1] = *(undefined8 *)((int)&piVar2[1].Feature + extraout_R8_00);
      iVar6 = extraout_R8_00;
      in_stack_ffffffffffffffa8 = extraout_EAX_00;
    }
    *(undefined **)((int)&piVar2[1].Name.str + iVar6) = &DAT_008ae7bb;
    *(undefined8 *)((int)&piVar2[1].Feature + iVar6) = 0xc8be2d;
    *(undefined8 *)((int)&piVar2[2].Name.len + iVar6) = 5;
    (&piVar2[2].Specified)[iVar6] = false;
    (&piVar2[2].Enable)[iVar6] = false;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_03 = extraout_R9_01;
      extraout_R11_03[1] = *(undefined8 *)((int)&piVar2[2].Feature + extraout_R8_01);
      iVar6 = extraout_R8_01;
      in_stack_ffffffffffffffa8 = extraout_EAX_01;
    }
    *(undefined **)((int)&piVar2[2].Name.str + iVar6) = &DAT_008aeed0;
    *(undefined8 *)((int)&piVar2[2].Feature + iVar6) = 0xc8be2f;
    *(undefined8 *)((int)&piVar2[3].Name.len + iVar6) = 5;
    (&piVar2[3].Specified)[iVar6] = false;
    (&piVar2[3].Enable)[iVar6] = false;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_04 = extraout_R9_02;
      extraout_R11_04[1] = *(undefined8 *)((int)&piVar2[3].Feature + extraout_R8_02);
      iVar6 = extraout_R8_02;
      in_stack_ffffffffffffffa8 = extraout_EAX_02;
    }
    *(undefined **)((int)&piVar2[3].Name.str + iVar6) = &DAT_008aeed5;
    *(undefined8 *)((int)&piVar2[3].Feature + iVar6) = 0xc8be30;
    *(undefined8 *)((int)&piVar2[4].Name.len + iVar6) = 5;
    (&piVar2[4].Specified)[iVar6] = false;
    (&piVar2[4].Enable)[iVar6] = false;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_05 = extraout_R9_03;
      extraout_R11_05[1] = *(undefined8 *)((int)&piVar2[4].Feature + extraout_R8_03);
      iVar6 = extraout_R8_03;
      in_stack_ffffffffffffffa8 = extraout_EAX_03;
    }
    *(undefined **)((int)&piVar2[4].Name.str + iVar6) = &DAT_008aeeda;
    *(undefined8 *)((int)&piVar2[4].Feature + iVar6) = 0xc8be2e;
  }
  if (in_stack_ffffffffffffffa8 < 3) {
    uVar5 = internal_cpu_options.len + 5;
    piVar2 = internal_cpu_options.array;
    if (((uint)internal_cpu_options.cap < uVar5) &&
       (~r0_00.array._4_4_ = in_stack_ffffffffffffffac, ~r0_00.array._0_4_ = sVar8,
       ~r0_00.len._0_4_ = in_stack_ffffffffffffffb0, ~r0_00.len._4_4_ = in_stack_ffffffffffffffb4,
       ~r0_00.cap._0_4_ = in_stack_ffffffffffffffb8, ~r0_00.cap._4_4_ = in_stack_ffffffffffffffbc,
       runtime_growslice(internal_cpu_options.array,uVar5,internal_cpu_options.cap,5,
                         (internal_abi_Type *)&DAT_00877060,~r0_00), uVar5 = extraout_RBX_01,
       piVar2 = extraout_RAX_03, internal_cpu_options.cap = extraout_RCX_00,
       runtime_writeBarrier._0_4_ != 0)) {
      runtime_gcWriteBarrier2();
      *extraout_R11_06 = extraout_RAX_04;
      extraout_R11_06[1] = internal_cpu_options.array;
      uVar5 = extraout_RBX_02;
      piVar2 = extraout_RAX_04;
    }
    internal_cpu_options.array = piVar2;
    piVar2 = internal_cpu_options.array;
    iVar1 = uVar5 - 5;
    iVar6 = iVar1 * 0x20;
    internal_cpu_options.len = uVar5;
    internal_cpu_options.array[iVar1].Name.len = 3;
    piVar2[iVar1].Specified = false;
    piVar2[iVar1].Enable = false;
    if (runtime_writeBarrier._0_4_ != 0) {
      puVar3 = piVar2[iVar1].Name.str;
      runtime_gcWriteBarrier2();
      *extraout_R11_07 = puVar3;
      extraout_R11_07[1] = *(uint8 **)((int)&extraout_RAX_05->Feature + extraout_RCX_01);
      piVar2 = extraout_RAX_05;
      iVar6 = extraout_RCX_01;
    }
    *(undefined **)((int)&(piVar2->Name).str + iVar6) = &DAT_008ae408;
    *(undefined8 *)((int)&piVar2->Feature + iVar6) = 0xc8be22;
    *(undefined8 *)((int)&piVar2[1].Name.len + iVar6) = 4;
    (&piVar2[1].Specified)[iVar6] = false;
    (&piVar2[1].Enable)[iVar6] = false;
    if (runtime_writeBarrier._0_4_ != 0) {
      uVar4 = *(undefined8 *)((int)&piVar2[1].Name.str + iVar6);
      runtime_gcWriteBarrier2();
      *extraout_R11_08 = uVar4;
      extraout_R11_08[1] = *(undefined8 *)((int)&extraout_RAX_06[1].Feature + extraout_RCX_02);
      piVar2 = extraout_RAX_06;
      iVar6 = extraout_RCX_02;
    }
    *(undefined **)((int)&piVar2[1].Name.str + iVar6) = &DAT_008ae7bf;
    *(undefined8 *)((int)&piVar2[1].Feature + iVar6) = 0xc8be23;
    *(undefined8 *)((int)&piVar2[2].Name.len + iVar6) = 4;
    (&piVar2[2].Specified)[iVar6] = false;
    (&piVar2[2].Enable)[iVar6] = false;
    if (runtime_writeBarrier._0_4_ != 0) {
      uVar4 = *(undefined8 *)((int)&piVar2[2].Name.str + iVar6);
      runtime_gcWriteBarrier2();
      *extraout_R11_09 = uVar4;
      extraout_R11_09[1] = *(undefined8 *)((int)&extraout_RAX_07[2].Feature + extraout_RCX_03);
      piVar2 = extraout_RAX_07;
      iVar6 = extraout_RCX_03;
    }
    *(undefined **)((int)&piVar2[2].Name.str + iVar6) = &DAT_008ae7c3;
    *(undefined8 *)((int)&piVar2[2].Feature + iVar6) = 0xc8be24;
    *(undefined8 *)((int)&piVar2[3].Name.len + iVar6) = 4;
    (&piVar2[3].Specified)[iVar6] = false;
    (&piVar2[3].Enable)[iVar6] = false;
    if (runtime_writeBarrier._0_4_ != 0) {
      uVar4 = *(undefined8 *)((int)&piVar2[3].Name.str + iVar6);
      runtime_gcWriteBarrier2();
      *extraout_R11_10 = uVar4;
      extraout_R11_10[1] = *(undefined8 *)((int)&extraout_RAX_08[3].Feature + extraout_RCX_04);
      piVar2 = extraout_RAX_08;
      iVar6 = extraout_RCX_04;
    }
    *(undefined **)((int)&piVar2[3].Name.str + iVar6) = &DAT_008ae7c7;
    *(undefined8 *)((int)&piVar2[3].Feature + iVar6) = 0xc8be25;
    *(undefined8 *)((int)&piVar2[4].Name.len + iVar6) = 3;
    (&piVar2[4].Specified)[iVar6] = false;
    (&piVar2[4].Enable)[iVar6] = false;
    if (runtime_writeBarrier._0_4_ != 0) {
      uVar4 = *(undefined8 *)((int)&piVar2[4].Name.str + iVar6);
      runtime_gcWriteBarrier2();
      *extraout_R11_11 = uVar4;
      extraout_R11_11[1] = *(undefined8 *)((int)&extraout_RAX_09[4].Feature + extraout_RCX_05);
      piVar2 = extraout_RAX_09;
      iVar6 = extraout_RCX_05;
    }
    *(undefined **)((int)&piVar2[4].Name.str + iVar6) = &DAT_008ae40b;
    *(undefined8 *)((int)&piVar2[4].Feature + iVar6) = 0xc8be27;
  }
  internal_cpu_cpuid();
  if (in_stack_ffffffffffffffb0 == 0) {
    return;
  }
  dVar9 = in_stack_ffffffffffffffb0;
  internal_cpu_cpuid();
  internal_cpu_maxExtendedFunctionInformation = dVar9;
  dVar9 = 0;
  uVar10 = internal_cpu_maxExtendedFunctionInformation;
  internal_cpu_cpuid();
  internal_cpu_X86.HasSSE3 = (in_stack_ffffffffffffffb8 & 1) != 0;
  internal_cpu_X86.HasPCLMULQDQ = (in_stack_ffffffffffffffb8 >> 1 & 1) != 0;
  internal_cpu_X86.HasSSSE3 = (in_stack_ffffffffffffffb8 >> 9 & 1) != 0;
  internal_cpu_X86.HasSSE41 = (in_stack_ffffffffffffffb8 >> 0x13 & 1) != 0;
  internal_cpu_X86.HasSSE42 = (in_stack_ffffffffffffffb8 >> 0x14 & 1) != 0;
  internal_cpu_X86.HasPOPCNT = (in_stack_ffffffffffffffb8 >> 0x17 & 1) != 0;
  internal_cpu_X86.HasAES = (in_stack_ffffffffffffffb8 >> 0x19 & 1) != 0;
  internal_cpu_X86.HasOSXSAVE = (in_stack_ffffffffffffffb8 >> 0x1b & 1) != 0;
  internal_cpu_X86.HasFMA =
       (in_stack_ffffffffffffffb8 >> 0xc & 1) != 0 && internal_cpu_X86.HasOSXSAVE;
  if ((in_stack_ffffffffffffffb8 >> 0x1b & 1) == 0) {
    bVar7 = false;
  }
  else {
    internal_cpu_xgetbv();
    if ((dVar9 >> 1 & 1) == 0) {
      bVar7 = false;
    }
    else {
      bVar7 = (dVar9 >> 2 & 1) != 0;
    }
  }
  internal_cpu_X86.HasAVX = (bool)((in_stack_ffffffffffffffb8 >> 0x1c & 1) != 0 & bVar7);
  if (in_stack_ffffffffffffffb0 < 7) {
    return;
  }
  internal_cpu_cpuid();
  internal_cpu_X86.HasBMI1 = (in_stack_ffffffffffffffb4 >> 3 & 1) != 0;
  internal_cpu_X86.HasAVX2 = (bool)(bVar7 & (in_stack_ffffffffffffffb4 >> 5 & 1) != 0);
  internal_cpu_X86.HasBMI2 = (in_stack_ffffffffffffffb4 >> 8 & 1) != 0;
  internal_cpu_X86.HasERMS = (in_stack_ffffffffffffffb4 >> 9 & 1) != 0;
  internal_cpu_X86.HasADX = (in_stack_ffffffffffffffb4 >> 0x13 & 1) != 0;
  internal_cpu_X86.HasSHA = (in_stack_ffffffffffffffb4 >> 0x1d & 1) != 0;
  internal_cpu_cpuid();
  if (0x80000000 < uVar10) {
    internal_cpu_cpuid();
    internal_cpu_X86.HasRDTSCP = (in_stack_ffffffffffffffbc >> 0x1b & 1) != 0;
    return;
  }
  return;
}



// WARNING: Unknown calling convention

void internal_cpu_cpuid(void)

{
  sdword in_stack_00000008;
  
  if (in_stack_00000008 == 0) {
    cpuid_basic_info(0);
  }
  else if (in_stack_00000008 == 1) {
    cpuid_Version_info(1);
  }
  else if (in_stack_00000008 == 2) {
    cpuid_cache_tlb_info(2);
  }
  else if (in_stack_00000008 == 3) {
    cpuid_serial_info(3);
  }
  else if (in_stack_00000008 == 4) {
    cpuid_Deterministic_Cache_Parameters_info(4);
  }
  else if (in_stack_00000008 == 5) {
    cpuid_MONITOR_MWAIT_Features_info(5);
  }
  else if (in_stack_00000008 == 6) {
    cpuid_Thermal_Power_Management_info(6);
  }
  else if (in_stack_00000008 == 7) {
    cpuid_Extended_Feature_Enumeration_info(7);
  }
  else if (in_stack_00000008 == 9) {
    cpuid_Direct_Cache_Access_info(9);
  }
  else if (in_stack_00000008 == 10) {
    cpuid_Architectural_Performance_Monitoring_info(10);
  }
  else if (in_stack_00000008 == 0xb) {
    cpuid_Extended_Topology_info(0xb);
  }
  else if (in_stack_00000008 == 0xd) {
    cpuid_Processor_Extended_States_info(0xd);
  }
  else if (in_stack_00000008 == 0xf) {
    cpuid_Quality_of_Service_info(0xf);
  }
  else if (in_stack_00000008 == -0x7ffffffe) {
    cpuid_brand_part1_info(0x80000002);
  }
  else if (in_stack_00000008 == -0x7ffffffd) {
    cpuid_brand_part2_info(0x80000003);
  }
  else if (in_stack_00000008 == -0x7ffffffc) {
    cpuid_brand_part3_info(0x80000004);
  }
  else {
    cpuid(in_stack_00000008);
  }
  return;
}



// WARNING: Unknown calling convention

void internal_cpu_xgetbv(void)

{
  return;
}



// WARNING: Unknown calling convention

void internal_cpu_getGOAMD64level(void)

{
  return;
}



void type__eq_internal_cpu_option(internal_cpu_option *p,internal_cpu_option *q,bool r)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((((q->Name).len == (p->Name).len) && (q->Feature == p->Feature)) &&
      (q->Specified == p->Specified)) && (q->Enable == p->Enable)) {
    runtime_memequal();
  }
  return;
}



void type__eq__6_internal_cpu_option
               (internal_cpu_option (*p) [6],internal_cpu_option (*q) [6],bool r)

{
  char extraout_AL;
  char extraout_AL_00;
  int iVar1;
  int unaff_R14;
  internal_cpu_option (*paiStack0000000000000008) [6];
  internal_cpu_option (*paiStack0000000000000010) [6];
  
  paiStack0000000000000008 = p;
  paiStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((((((*paiStack0000000000000008)[0].Name.len == (*paiStack0000000000000010)[0].Name.len) &&
         ((*paiStack0000000000000010)[0].Feature == (*paiStack0000000000000008)[0].Feature)) &&
        ((*paiStack0000000000000010)[0].Specified == (*paiStack0000000000000008)[0].Specified)) &&
       (((*paiStack0000000000000010)[0].Enable == (*paiStack0000000000000008)[0].Enable &&
        ((*paiStack0000000000000008)[1].Name.len == (*paiStack0000000000000010)[1].Name.len)))) &&
      ((*paiStack0000000000000010)[1].Feature == (*paiStack0000000000000008)[1].Feature)) &&
     ((((((*paiStack0000000000000010)[1].Specified == (*paiStack0000000000000008)[1].Specified &&
         ((*paiStack0000000000000010)[1].Enable == (*paiStack0000000000000008)[1].Enable)) &&
        (((*paiStack0000000000000010)[2].Name.len == (*paiStack0000000000000008)[2].Name.len &&
         ((((*paiStack0000000000000010)[2].Feature == (*paiStack0000000000000008)[2].Feature &&
           ((*paiStack0000000000000010)[2].Specified == (*paiStack0000000000000008)[2].Specified))
          && ((*paiStack0000000000000010)[2].Enable == (*paiStack0000000000000008)[2].Enable))))))
       && ((((*paiStack0000000000000010)[3].Name.len == (*paiStack0000000000000008)[3].Name.len &&
            ((*paiStack0000000000000010)[3].Feature == (*paiStack0000000000000008)[3].Feature)) &&
           (((*paiStack0000000000000010)[3].Specified == (*paiStack0000000000000008)[3].Specified &&
            (((((*paiStack0000000000000010)[3].Enable == (*paiStack0000000000000008)[3].Enable &&
               ((*paiStack0000000000000010)[4].Name.len == (*paiStack0000000000000008)[4].Name.len))
              && (((*paiStack0000000000000010)[4].Feature == (*paiStack0000000000000008)[4].Feature
                  && ((((*paiStack0000000000000010)[4].Specified ==
                        (*paiStack0000000000000008)[4].Specified &&
                       ((*paiStack0000000000000010)[4].Enable ==
                        (*paiStack0000000000000008)[4].Enable)) &&
                      ((*paiStack0000000000000008)[5].Name.len ==
                       (*paiStack0000000000000010)[5].Name.len)))))) &&
             (((*paiStack0000000000000010)[5].Feature == (*paiStack0000000000000008)[5].Feature &&
              ((*paiStack0000000000000010)[5].Specified == (*paiStack0000000000000008)[5].Specified)
              ))))))))) &&
      ((*paiStack0000000000000010)[5].Enable == (*paiStack0000000000000008)[5].Enable)))) {
    iVar1 = 0;
    while (((iVar1 < 6 && (runtime_memequal(), extraout_AL != '\0')) &&
           (runtime_memequal(), extraout_AL_00 != '\0'))) {
      iVar1 = iVar1 + 2;
    }
  }
  return;
}



void runtime_internal_atomic___Uint8__Load(runtime_internal_atomic_Uint8 *u,uint8 ~r0)

{
  return;
}



// WARNING: Unknown calling convention

void runtime_internal_atomic___Uint8__Store(runtime_internal_atomic_Uint8 *u,uint8 value)

{
  LOCK();
  u->value = value;
  UNLOCK();
  return;
}



// WARNING: Unknown calling convention

void runtime_internal_atomic___Uint8__And(runtime_internal_atomic_Uint8 *u,uint8 value)

{
  LOCK();
  u->value = u->value & value;
  UNLOCK();
  return;
}



// WARNING: Unknown calling convention

void runtime_internal_atomic___Uint8__Or(runtime_internal_atomic_Uint8 *u,uint8 value)

{
  LOCK();
  u->value = u->value | value;
  UNLOCK();
  return;
}



void runtime_internal_atomic___Bool__Load(runtime_internal_atomic_Bool *b,bool ~r0)

{
  return;
}



// WARNING: Unknown calling convention

void runtime_internal_atomic___Bool__Store(runtime_internal_atomic_Bool *b,bool value)

{
  LOCK();
  (b->u).value = value;
  UNLOCK();
  return;
}



void runtime_internal_atomic___Uint32__Load(runtime_internal_atomic_Uint32 *u,uint32 ~r0)

{
  return;
}



void runtime_internal_atomic___Uint32__LoadAcquire(runtime_internal_atomic_Uint32 *u,uint32 ~r0)

{
  return;
}



// WARNING: Unknown calling convention

void runtime_internal_atomic___Uint32__Store(runtime_internal_atomic_Uint32 *u,uint32 value)

{
  LOCK();
  u->value = value;
  UNLOCK();
  return;
}



// WARNING: Unknown calling convention

void runtime_internal_atomic___Uint32__StoreRelease(runtime_internal_atomic_Uint32 *u,uint32 value)

{
  LOCK();
  u->value = value;
  UNLOCK();
  return;
}



void runtime_internal_atomic___Uint32__CompareAndSwap
               (runtime_internal_atomic_Uint32 *u,uint32 old,uint32 new,bool ~r0)

{
  LOCK();
  if (old == u->value) {
    u->value = new;
  }
  UNLOCK();
  return;
}



void runtime_internal_atomic___Uint32__CompareAndSwapRelease
               (runtime_internal_atomic_Uint32 *u,uint32 old,uint32 new,bool ~r0)

{
  LOCK();
  if (old == u->value) {
    u->value = new;
  }
  UNLOCK();
  return;
}



void runtime_internal_atomic___Uint32__Swap
               (runtime_internal_atomic_Uint32 *u,uint32 value,uint32 ~r0)

{
  LOCK();
  u->value = value;
  UNLOCK();
  return;
}



// WARNING: Unknown calling convention

void runtime_internal_atomic___Uint32__And(runtime_internal_atomic_Uint32 *u,uint32 value)

{
  LOCK();
  u->value = u->value & value;
  UNLOCK();
  return;
}



// WARNING: Unknown calling convention

void runtime_internal_atomic___Uint32__Or(runtime_internal_atomic_Uint32 *u,uint32 value)

{
  LOCK();
  u->value = u->value | value;
  UNLOCK();
  return;
}



void runtime_internal_atomic___Uint32__Add(runtime_internal_atomic_Uint32 *u,int32 delta,uint32 ~r0)

{
  LOCK();
  u->value = u->value + delta;
  UNLOCK();
  return;
}



void runtime_internal_atomic___Uintptr__Load(runtime_internal_atomic_Uintptr *u,uintptr ~r0)

{
  return;
}



void runtime_internal_atomic___Uintptr__LoadAcquire(runtime_internal_atomic_Uintptr *u,uintptr ~r0)

{
  return;
}



// WARNING: Unknown calling convention

void runtime_internal_atomic___Uintptr__Store(runtime_internal_atomic_Uintptr *u,uintptr value)

{
  LOCK();
  u->value = value;
  UNLOCK();
  return;
}



// WARNING: Unknown calling convention

void runtime_internal_atomic___Uintptr__StoreRelease
               (runtime_internal_atomic_Uintptr *u,uintptr value)

{
  LOCK();
  u->value = value;
  UNLOCK();
  return;
}



void runtime_internal_atomic___Uintptr__CompareAndSwap
               (runtime_internal_atomic_Uintptr *u,uintptr old,uintptr new,bool ~r0)

{
  LOCK();
  if (old == u->value) {
    u->value = new;
  }
  UNLOCK();
  return;
}



void runtime_internal_atomic___Uintptr__Swap
               (runtime_internal_atomic_Uintptr *u,uintptr value,uintptr ~r0)

{
  LOCK();
  u->value = value;
  UNLOCK();
  return;
}



void runtime_internal_atomic___Uintptr__Add
               (runtime_internal_atomic_Uintptr *u,uintptr delta,uintptr ~r0)

{
  LOCK();
  u->value = u->value + delta;
  UNLOCK();
  return;
}



// WARNING: Unknown calling convention

void runtime_internal_atomic___noCopy__Lock(void)

{
  return;
}



// WARNING: Unknown calling convention

void runtime_internal_atomic___noCopy__Unlock(void)

{
  return;
}



void type__eq_runtime_internal_atomic_Uint64
               (runtime_internal_atomic_Uint64 *p,runtime_internal_atomic_Uint64 *q,bool r)

{
  return;
}



void type__eq_runtime_internal_atomic_Int64
               (runtime_internal_atomic_Int64 *p,runtime_internal_atomic_Int64 *q,bool r)

{
  return;
}



void runtime_internal_sys_OnesCount64(uint64 x,int ~r0)

{
  return;
}



void type__eq_runtime_internal_sys_NotInHeap
               (runtime_internal_sys_NotInHeap *p,runtime_internal_sys_NotInHeap *q,bool r)

{
  return;
}



void internal_bytealg_IndexRabinKarpBytes(__uint8 s,__uint8 sep,int ~r0)

{
  char extraout_AL;
  char extraout_AL_00;
  char cVar1;
  uint in_RCX;
  int iVar2;
  int i_2;
  int i_1;
  uint uVar3;
  uint in_RBX;
  uint in_RSI;
  int i_3;
  uint uVar4;
  int i;
  int in_RDI;
  uint32 hashsep;
  sdword sVar5;
  uint32 sq;
  uint32 h;
  uint32 pow_1;
  uint32 pow;
  uint32 uVar6;
  uint uVar7;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  hashsep = 0;
  for (iVar2 = 0; iVar2 < (int)in_RSI; iVar2 = iVar2 + 1) {
    hashsep = (dword)*(byte *)(in_RDI + iVar2) + hashsep * 0x1000193;
  }
  sVar5 = 0x1000193;
  uVar4 = in_RSI;
  pow = 1;
  while (0 < (int)uVar4) {
    uVar6 = pow * sVar5;
    uVar7 = (int)uVar4 >> 1;
    sVar5 = sVar5 * sVar5;
    uVar3 = uVar4 & 1;
    uVar4 = uVar7;
    if (uVar3 != 0) {
      pow = uVar6;
    }
  }
  h = 0;
  for (uVar4 = 0; (int)uVar4 < (int)in_RSI; uVar4 = uVar4 + 1) {
    if (in_RBX <= uVar4) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    h = h * 0x1000193 + (dword)*(byte *)(~r0 + uVar4);
  }
  uVar4 = in_RSI;
  if (h == hashsep) {
    if (in_RCX < in_RSI) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    runtime_memequal();
    if (extraout_AL != '\0') {
      return;
    }
  }
  while( true ) {
    do {
      i_1 = uVar4;
      if ((int)in_RBX <= i_1) {
        return;
      }
      uVar3 = i_1 - in_RSI;
      if (in_RBX <= uVar3) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      h = (h * 0x1000193 + (dword)*(byte *)(i_1 + ~r0)) - *(byte *)(~r0 + uVar3) * pow;
      uVar4 = i_1 + 1;
    } while (hashsep != h);
    if (in_RCX < uVar4) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    if (uVar4 < uVar3 + 1) break;
    if (in_RSI == i_1 - uVar3) {
      runtime_memequal();
      cVar1 = extraout_AL_00;
    }
    else {
      cVar1 = '\0';
    }
    if (cVar1 != '\0') {
      return;
    }
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceB();
}



void internal_bytealg_IndexRabinKarp(string s,string substr,int ~r0)

{
  char extraout_AL;
  char extraout_AL_00;
  int in_RCX;
  char cVar1;
  int iVar2;
  int i_2;
  int i_1;
  uint uVar3;
  uint in_RBX;
  uint32 hashss;
  uint in_RDI;
  int i_3;
  uint uVar4;
  int i;
  sdword sVar5;
  uint32 sq;
  uint32 h;
  uint32 pow_1;
  uint32 pow;
  uint32 uVar6;
  uint uVar7;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  hashss = 0;
  for (iVar2 = 0; iVar2 < (int)in_RDI; iVar2 = iVar2 + 1) {
    hashss = hashss * 0x1000193 + (dword)*(byte *)(in_RCX + iVar2);
  }
  sVar5 = 0x1000193;
  uVar4 = in_RDI;
  pow = 1;
  while (0 < (int)uVar4) {
    uVar6 = pow * sVar5;
    uVar7 = (int)uVar4 >> 1;
    sVar5 = sVar5 * sVar5;
    uVar3 = uVar4 & 1;
    uVar4 = uVar7;
    if (uVar3 != 0) {
      pow = uVar6;
    }
  }
  h = 0;
  for (uVar4 = 0; (int)uVar4 < (int)in_RDI; uVar4 = uVar4 + 1) {
    if (in_RBX <= uVar4) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    h = h * 0x1000193 + (dword)*(byte *)(~r0 + uVar4);
  }
