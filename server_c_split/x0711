  int extraout_RAX_02;
  int n;
  uint in_RCX;
  uint extraout_RCX;
  uint uVar4;
  uint extraout_RCX_00;
  uint uVar5;
  uint in_RBX;
  uint extraout_RBX;
  uint newLen;
  size_t __n;
  int n_1;
  uint extraout_RBX_00;
  void *~r0_02;
  uint newLen_00;
  int unaff_R14;
  uint uVar6;
  uint uVar7;
  uint local_98;
  uint local_38;
  void *local_30;
  void *local_28;
  void *local_20;
  int local_18;
  void *local_10;
  
  while (&local_38 <= *(uint **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  internal_bytealg_IndexByte();
  if (local_98 == 0xffffffffffffffff) {
    return;
  }
  runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,in_RBX,~r0_02);
  newLen_00 = 0;
  local_10 = extraout_RAX;
  local_38 = in_RBX;
  do {
    while( true ) {
      do {
        while( true ) {
          if (in_RBX == 0) {
            return;
          }
          uVar6 = in_RBX;
          uVar7 = in_RCX;
          local_30 = in_RAX;
          local_28 = local_10;
          internal_bytealg_IndexByte();
          uVar3 = local_98;
          if (local_98 == 0xffffffffffffffff) {
            uVar3 = in_RBX;
          }
          if (in_RCX < uVar3) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceAcap();
          }
          newLen = uVar3 + newLen_00;
          if (local_38 < newLen) {
            ~r0_00.len = uVar6;
            ~r0_00.array = in_RAX;
            ~r0_00.cap = uVar7;
            runtime_growslice(local_28,newLen,local_38,uVar3,(internal_abi_Type *)&DAT_00807920,
                              ~r0_00);
            local_38 = extraout_RCX;
            newLen = extraout_RBX;
            local_28 = extraout_RAX_00;
          }
          local_10 = local_28;
          runtime_memmove((void *)((int)local_28 + newLen_00),local_30,uVar3);
          if (in_RBX < uVar3) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          uVar4 = in_RBX - uVar3;
          uVar5 = in_RCX - uVar3;
          uVar3 = uVar3 & (int)-uVar5 >> 0x3f;
          local_18 = uVar3 + (int)local_30;
          if ((int)uVar4 < 2) {
            return;
          }
          cVar1 = *(char *)((int)local_30 + uVar3 + 1);
          if ((((byte)(cVar1 - 0x30U) < 10) || ((byte)(cVar1 + 0x9fU) < 6)) ||
             ((byte)(cVar1 + 0xbfU) < 6)) break;
          local_20 = (void *)((int)local_30 + uVar3 + 1);
          p.len = uVar6;
          p.array = (uint8 *)in_RAX;
          p.cap = uVar7;
          unicode_utf8_DecodeRune(p,(int32)local_20,uVar4 - 1);
          uVar3 = __n + 1;
          if (uVar5 < uVar3) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceAcap();
          }
          if (uVar3 == 0) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          newLen_00 = newLen + __n;
          if (local_38 < newLen_00) {
            ~r0_01.len = uVar6;
            ~r0_01.array = in_RAX;
            ~r0_01.cap = uVar7;
            runtime_growslice(local_10,newLen_00,local_38,__n,(internal_abi_Type *)&DAT_00807920,
                              ~r0_01);
            local_10 = extraout_RAX_01;
            newLen_00 = extraout_RBX_00;
            local_38 = extraout_RCX_00;
          }
          runtime_memmove((void *)((int)local_10 + newLen),local_20,__n);
          if (uVar4 < uVar3) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          in_RCX = (uVar5 - __n) - 1;
          in_RAX = (void *)(local_18 + (uVar3 & (int)-in_RCX >> 0x3f));
          in_RBX = (uVar4 - __n) - 1;
        }
        for (j = 2; ((j < (int)uVar4 && (j < 7)) &&
                    ((cVar1 = *(char *)(j + local_18), (byte)(cVar1 - 0x30U) < 10 ||
                     (((byte)(cVar1 + 0x9fU) < 6 || ((byte)(cVar1 + 0xbfU) < 6)))))); j = j + 1) {
        }
        if (uVar5 < (uint)j) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAcap();
        }
        if (j == 0) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        s_00.len = uVar6;
        s_00.array = (uint8 *)in_RAX;
        s_00.cap = uVar7;
        html_template_hexDecode(s_00,((dword)((int)-(uVar5 - 1) >> 0x3f) & 1) + (sdword)local_18);
        if (0x10ffff < extraout_EAX) {
          j = j - 1;
        }
        p_00.len = uVar6;
        p_00.array = (uint8 *)in_RAX;
        p_00.cap = uVar7;
        unicode_utf8_EncodeRune
                  (p_00,((dword)((int)-(local_38 - newLen) >> 0x3f) & (dword)newLen) +
                        (sdword)local_10,local_38 - newLen);
        newLen_00 = newLen + extraout_RAX_02;
        if (local_38 < newLen_00) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAcap();
        }
        if (uVar4 < (uint)j) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        in_RBX = uVar4 - j;
        in_RCX = uVar5 - j;
        uVar3 = j & (int)-in_RCX >> 0x3f;
        in_RAX = (void *)(uVar3 + local_18);
      } while (in_RBX == 0);
      bVar2 = *(byte *)(local_18 + uVar3);
      if (0xc < bVar2) break;
      if (((byte)(bVar2 - 9) < 2) || (bVar2 == 0xc)) {
LAB_0076c38c:
        in_RCX = in_RCX - 1;
        in_RAX = (void *)((int)in_RAX + (uint)((dword)((int)-in_RCX >> 0x3f) & 1));
        in_RBX = in_RBX - 1;
      }
    }
    if (bVar2 == 0xd) {
      if (((int)in_RBX < 2) || (*(char *)(local_18 + 1 + uVar3) != '\n')) {
        in_RCX = in_RCX - 1;
        in_RAX = (void *)((int)in_RAX + (uint)((dword)((int)-in_RCX >> 0x3f) & 1));
        in_RBX = in_RBX - 1;
      }
      else {
        in_RCX = in_RCX - 2;
        in_RAX = (void *)((int)in_RAX + (uint)((dword)((int)-in_RCX >> 0x3f) & 2));
        in_RBX = in_RBX - 2;
      }
    }
    else if (bVar2 == 0x20) goto LAB_0076c38c;
  } while( true );
}



void html_template_hexDecode(__uint8 s,int32 ~r0)

{
  char cVar1;
  __uint8 val;
  __interface___ a;
  undefined4 in_register_00000004;
  int extraout_RAX;
  void *x;
  int iVar2;
  int in_RBX;
  int32 n;
  uint8 c;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffc0;
  interface___ *in_stack_ffffffffffffffd0;
  undefined in_stack_ffffffffffffffd8 [16];
  string ~r0_00;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar2 = 0;
  while( true ) {
    if (in_RBX <= iVar2) {
      return;
    }
    cVar1 = *(char *)((int)(void *)CONCAT44(in_register_00000004,~r0) + iVar2);
    if (((9 < (byte)(cVar1 - 0x30U)) && (5 < (byte)(cVar1 + 0x9fU))) && (5 < (byte)(cVar1 + 0xbfU)))
    break;
    iVar2 = iVar2 + 1;
  }
  val.cap = (int)in_stack_ffffffffffffffd0;
  val.array = (uint8 *)in_stack_ffffffffffffffc0._type;
  val.len = (int)in_stack_ffffffffffffffc0.data;
  runtime_convTslice(val,(void *)CONCAT44(in_register_00000004,~r0));
  ~r0_00.len = extraout_RAX;
  ~r0_00.str = &DAT_00801a20;
  a.len = in_stack_ffffffffffffffd8._0_8_;
  a.cap = in_stack_ffffffffffffffd8._8_8_;
  a.array = in_stack_ffffffffffffffd0;
  fmt_Sprintf((string)in_stack_ffffffffffffffc0,a,~r0_00);
  runtime_convTstring((string)in_stack_ffffffffffffffc0,x);
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffc0);
}



void html_template_cssEscaper(__interface___ args,string ~r0)

{
  char cVar1;
  __interface___ args_00;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  runtime_slice ~r0_03;
  int iVar2;
  sdword extraout_EAX;
  int32 r;
  html_template_contentType in_AL;
  int extraout_RAX;
  int written;
  uint8 *extraout_RAX_00;
  uint8 *extraout_RAX_01;
  uint8 *puVar4;
  uint8 *extraout_RAX_02;
  uint8 *extraout_RAX_03;
  uint uVar5;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint oldCap;
  int extraout_RCX_01;
  size_t extraout_RCX_02;
  size_t sVar6;
  size_t sVar7;
  uint n;
  int extraout_RBX;
  int w;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint uVar8;
  uint extraout_RBX_02;
  uint extraout_RBX_03;
  void *pvVar9;
  size_t sVar10;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_ffffffffffffff20;
  int in_stack_ffffffffffffff30;
  string in_stack_ffffffffffffff38;
  int i;
  size_t local_60;
  void *local_58;
  void *local_50;
  int local_48;
  uint8 *local_40;
  uint8 *local_38;
  short *local_30;
  strings_Builder b;
  uint uVar3;
  
  while (&local_60 <= *(size_t **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  args_00.cap = in_stack_ffffffffffffff30;
  args_00.array = (interface___ *)in_stack_ffffffffffffff20._type;
  args_00.len = (int)in_stack_ffffffffffffff20.data;
  html_template_stringify(args_00,in_stack_ffffffffffffff38,in_AL);
  uVar5 = 0;
  written = 0;
  local_48 = extraout_RAX;
  b._0_16_ = in_XMM15;
  b.buf._8_16_ = in_XMM15;
  do {
    if ((int)n <= (int)uVar5) {
      if (written == 0) {
        return;
      }
      if (n < (uint)written) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      sVar10 = n - written;
      pvVar9 = (void *)((written & (int)-sVar10 >> 0x3f) + local_48);
      if (b.addr == (strings_Builder *)0x0) {
        b.addr = &b;
      }
      else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffff20);
      }
      uVar5 = b.buf.len + sVar10;
      puVar4 = b.buf.array;
      sVar6 = b.buf.cap;
      sVar7 = b.buf.len;
      if ((uint)b.buf.cap < uVar5) {
        local_60 = b.buf.len;
        ~r0_03.cap = in_stack_ffffffffffffff30;
        ~r0_03.array = in_stack_ffffffffffffff20._type;
        ~r0_03.len = (int)in_stack_ffffffffffffff20.data;
        local_58 = pvVar9;
        runtime_growslice(b.buf.array,uVar5,b.buf.cap,sVar10,(internal_abi_Type *)&DAT_00807920,
                          ~r0_03);
        puVar4 = extraout_RAX_03;
        sVar6 = extraout_RCX_02;
        sVar7 = local_60;
        pvVar9 = local_58;
        uVar5 = extraout_RBX_03;
      }
      local_60 = sVar6;
      local_38 = puVar4;
      runtime_memmove(puVar4 + sVar7,pvVar9,sVar10);
      b.buf.cap = local_60;
      b.buf.len = uVar5;
      b.buf.array = local_38;
      if ((uint)-(int)local_38 < uVar5) {
        if (local_38 == (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
          runtime_panicunsafestringnilptr();
        }
                    // WARNING: Subroutine does not return
        runtime_panicunsafestringlen();
      }
      return;
    }
    if (n < uVar5) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    unicode_utf8_DecodeRuneInString
              ((string)in_stack_ffffffffffffff20,
               ((dword)((int)-(n - uVar5) >> 0x3f) & (dword)uVar5) + (sdword)local_48,n - uVar5);
    uVar3 = (uint)extraout_EAX;
    if ((int)uVar3 < html_template_cssReplacementTable.len) {
      if ((uint)html_template_cssReplacementTable.len <= uVar3) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      sVar10 = html_template_cssReplacementTable.array[uVar3].len;
      if (sVar10 != 0) {
        local_60 = sVar10;
        local_30 = (short *)html_template_cssReplacementTable.array[uVar3].str;
        if (written == 0) {
          strings___Builder__Grow(&b,n);
        }
        if (uVar5 < (uint)written) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        sVar10 = uVar5 - written;
        pvVar9 = (void *)((written & (int)-sVar10 >> 0x3f) + local_48);
        if (b.addr == (strings_Builder *)0x0) {
          b.addr = &b;
        }
        else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
          runtime_gopanic(in_stack_ffffffffffffff20);
        }
        iVar2 = b.buf.len;
        uVar3 = b.buf.len + sVar10;
        puVar4 = b.buf.array;
        oldCap = b.buf.cap;
        if ((uint)b.buf.cap < uVar3) {
          ~r0_00.cap = in_stack_ffffffffffffff30;
          ~r0_00.array = in_stack_ffffffffffffff20._type;
          ~r0_00.len = (int)in_stack_ffffffffffffff20.data;
          local_50 = pvVar9;
          runtime_growslice(b.buf.array,uVar3,b.buf.cap,sVar10,(internal_abi_Type *)&DAT_00807920,
                            ~r0_00);
          puVar4 = extraout_RAX_00;
          oldCap = extraout_RCX;
          pvVar9 = local_50;
          uVar3 = extraout_RBX_00;
        }
        local_38 = puVar4;
        runtime_memmove(puVar4 + iVar2,pvVar9,sVar10);
        b.buf.array = local_38;
        b.buf.len = uVar3;
        b.buf.cap = oldCap;
        if (b.addr == (strings_Builder *)0x0) {
          b.addr = &b;
        }
        else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
          runtime_gopanic(in_stack_ffffffffffffff20);
        }
        uVar8 = local_60 + uVar3;
        puVar4 = local_38;
        if (oldCap < uVar8) {
          ~r0_01.cap = in_stack_ffffffffffffff30;
          ~r0_01.array = in_stack_ffffffffffffff20._type;
          ~r0_01.len = (int)in_stack_ffffffffffffff20.data;
          runtime_growslice(local_38,uVar8,oldCap,local_60,(internal_abi_Type *)&DAT_00807920,~r0_01
                           );
          puVar4 = extraout_RAX_01;
          oldCap = extraout_RCX_00;
          uVar8 = extraout_RBX_01;
        }
        local_40 = puVar4;
        runtime_memmove(puVar4 + uVar3,local_30,local_60);
        b.buf.cap = oldCap;
        b.buf.len = uVar8;
        b.buf.array = local_40;
        written = extraout_RBX + uVar5;
        if ((local_60 != 2) || (*local_30 != 0x5c5c)) {
          if (n != written) {
            if (n <= (uint)written) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            cVar1 = *(char *)(local_48 + written);
            if ((((9 < (byte)(cVar1 - 0x30U)) && (5 < (byte)(cVar1 + 0x9fU))) &&
                (5 < (byte)(cVar1 + 0xbfU))) &&
               (((1 < (byte)(cVar1 - 9U) && (1 < (byte)(cVar1 - 0xcU))) && (cVar1 != ' '))))
            goto LAB_0076c58c;
          }
          if (b.addr == (strings_Builder *)0x0) {
            b.addr = &b;
          }
          else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
            runtime_gopanic(in_stack_ffffffffffffff20);
          }
          uVar8 = uVar8 + 1;
          puVar4 = b.buf.array;
          if (oldCap < uVar8) {
            ~r0_02.cap = in_stack_ffffffffffffff30;
            ~r0_02.array = in_stack_ffffffffffffff20._type;
            ~r0_02.len = (int)in_stack_ffffffffffffff20.data;
            runtime_growslice(b.buf.array,uVar8,oldCap,1,(internal_abi_Type *)&DAT_00807920,~r0_02);
            b.buf.array = extraout_RAX_02;
            uVar8 = extraout_RBX_02;
            puVar4 = extraout_RAX_02;
            oldCap = extraout_RCX_01;
          }
          b.buf.cap = oldCap;
          b.buf.len = uVar8;
          puVar4[uVar8 - 1] = 0x20;
        }
      }
    }
LAB_0076c58c:
    uVar5 = extraout_RBX + uVar5;
  } while( true );
}



void html_template_cssValueFilter(__interface___ args,string ~r0)

{
  byte bVar1;
  __interface___ args_00;
  __uint8 s;
  runtime_slice ~r0_00;
  __uint8 s_00;
  __uint8 s_01;
  __uint8 s_02;
  __uint8 ~r0_01;
  __uint8 ~r0_02;
  __uint8 ~r0_03;
  __uint8 sep;
  __uint8 sep_00;
  html_template_contentType in_AL;
  uint8 *extraout_RAX;
  undefined *extraout_RAX_00;
  uint8 *puVar2;
  int ~r0_04;
  int extraout_RAX_01;
  int extraout_RAX_02;
  char extraout_CL;
  html_template_contentType t;
  int i;
  uint extraout_RCX;
  uint oldCap;
  int n;
  uint extraout_RBX;
  undefined *oldPtr;
  uint newLen;
  uint8 c;
  int unaff_R14;
  string in_stack_ffffffffffffff40;
  uint8 *in_stack_ffffffffffffff50;
  string in_stack_ffffffffffffff58;
  int in_stack_ffffffffffffff68;
  undefined local_58 [24];
  undefined auStack_40 [40];
  int local_18;
  uint8 *local_10;
  
  while (auStack_40 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  args_00.cap = (int)in_stack_ffffffffffffff50;
  args_00.array = (interface___ *)in_stack_ffffffffffffff40.str;
  args_00.len = in_stack_ffffffffffffff40.len;
  html_template_stringify(args_00,in_stack_ffffffffffffff58,in_AL);
  if (extraout_CL == '\x01') {
    return;
  }
  ~r0_01.len = (int)in_stack_ffffffffffffff58.str;
  ~r0_01.cap = in_stack_ffffffffffffff58.len;
  ~r0_01.array = in_stack_ffffffffffffff50;
  runtime_stringtoslicebyte((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff40,~r0_01);
  s.cap = (int)in_stack_ffffffffffffff50;
  s.array = in_stack_ffffffffffffff40.str;
  s.len = in_stack_ffffffffffffff40.len;
  ~r0_02.cap = in_stack_ffffffffffffff68;
  ~r0_02.array = in_stack_ffffffffffffff58.str;
  ~r0_02.len = in_stack_ffffffffffffff58.len;
  html_template_decodeCSS(s,~r0_02);
  i = 0;
  oldCap = 0x40;
  oldPtr = local_58;
  newLen = 0;
  puVar2 = extraout_RAX;
  local_10 = extraout_RAX;
  do {
    if (n <= i) {
      s_00.cap = (int)in_stack_ffffffffffffff50;
      s_00.array = in_stack_ffffffffffffff40.str;
      s_00.len = in_stack_ffffffffffffff40.len;
      ~r0_03.cap = in_stack_ffffffffffffff68;
      ~r0_03.array = in_stack_ffffffffffffff58.str;
      ~r0_03.len = in_stack_ffffffffffffff58.len;
      bytes_ToLower(s_00,~r0_03);
      s_01.cap = (int)in_stack_ffffffffffffff50;
      s_01.array = in_stack_ffffffffffffff40.str;
      s_01.len = in_stack_ffffffffffffff40.len;
      sep.cap = in_stack_ffffffffffffff68;
      sep.array = in_stack_ffffffffffffff58.str;
      sep.len = in_stack_ffffffffffffff58.len;
      local_18 = ~r0_04;
      bytes_Index(s_01,sep,~r0_04);
      if ((extraout_RAX_01 == -1) &&
         (s_02.cap = (int)in_stack_ffffffffffffff50, s_02.array = in_stack_ffffffffffffff40.str,
         s_02.len = in_stack_ffffffffffffff40.len, sep_00.cap = in_stack_ffffffffffffff68,
         sep_00.array = in_stack_ffffffffffffff58.str, sep_00.len = in_stack_ffffffffffffff58.len,
         bytes_Index(s_02,sep_00,local_18), extraout_RAX_02 == -1)) {
        runtime_slicebytetostring((runtime_tmpBuf *)0x0,local_10,n,in_stack_ffffffffffffff40);
        return;
      }
      return;
    }
    bVar1 = puVar2[i];
    if (bVar1 < 0x3d) {
      if (bVar1 < 0x2a) {
        if (bVar1 == 0) {
          return;
        }
        if (bVar1 == 0x22) {
          return;
        }
        if (0x26 < bVar1) {
          return;
        }
        goto LAB_0076ccea;
      }
      if (bVar1 != 0x2d) {
        if (bVar1 == 0x2f) {
          return;
        }
        if (0x3a < bVar1) {
          return;
        }
        goto LAB_0076ccea;
      }
      if ((i != 0) && (puVar2[i + -1] == 0x2d)) {
        return;
      }
    }
    else {
      if (bVar1 < 0x5e) {
        if (((bVar1 == 0x3e) || (bVar1 == 0x40)) || (0x5a < bVar1)) {
          return;
        }
      }
      else {
        if (bVar1 == 0x60) {
          return;
        }
        if (bVar1 == 0x7b) {
          return;
        }
        if (bVar1 == 0x7d) {
          return;
        }
      }
LAB_0076ccea:
      if ((bVar1 < 0x80) &&
         ((((dword)(bVar1 - 0x61) < 0x1a || ((dword)(bVar1 - 0x41) < 0x1a)) ||
          (((dword)(bVar1 - 0x30) < 10 || ((bVar1 == 0x2d || (bVar1 == 0x5f)))))))) {
        newLen = newLen + 1;
        if (oldCap < newLen) {
          ~r0_00.cap = (int)in_stack_ffffffffffffff50;
          ~r0_00.array = in_stack_ffffffffffffff40.str;
          ~r0_00.len = in_stack_ffffffffffffff40.len;
          runtime_growslice(oldPtr,newLen,oldCap,1,(internal_abi_Type *)&DAT_00807920,~r0_00);
          puVar2 = local_10;
          oldCap = extraout_RCX;
          oldPtr = extraout_RAX_00;
          newLen = extraout_RBX;
        }
        oldPtr[newLen - 1] = bVar1;
      }
    }
    i = i + 1;
  } while( true );
}



void html_template_delim_String(html_template_delim i,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (3 < i) {
    strconv_FormatInt((uint)i,10,in_stack_ffffffffffffffc0);
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
               in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
  if (4 < (byte)(i + 1)) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if (html_template__delim_index[(byte)(i + 1)] < 0x3c) {
    if (html_template__delim_index[i] <= html_template__delim_index[(byte)(i + 1)]) {
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceAlen();
}



void html_template_element_String(html_template_element i,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (4 < i) {
    strconv_FormatInt((uint)i,10,in_stack_ffffffffffffffc0);
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
               in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
  if (5 < (byte)(i + 1)) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if (html_template__element_index[(byte)(i + 1)] < 0x40) {
    if (html_template__element_index[i] <= html_template__element_index[(byte)(i + 1)]) {
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceAlen();
}



void html_template___Error__Error(html_template_Error *e,string ~r0)

{
  __interface___ a;
  __interface___ a_00;
  __interface___ a_01;
  string ~r0_00;
  string context;
  string ~r0_01;
  string ~r0_02;
  string ~r0_03;
  int extraout_RAX;
  void *x;
  int extraout_RAX_00;
  void *x_00;
  int unaff_R14;
  string in_stack_ffffffffffffff80;
  string in_stack_ffffffffffffff90;
  uint8 *in_stack_ffffffffffffffa0;
  uint8 *in_stack_ffffffffffffffa8;
  uint8 *puVar1;
  int in_stack_ffffffffffffffb0;
  int iVar2;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((e->Node).tab != (runtime_itab *)0x0) {
    context.len = (int)in_stack_ffffffffffffffa8;
    context.str = in_stack_ffffffffffffffa0;
    text_template_parse___Tree__ErrorContext
              ((text_template_parse_Tree *)0x0,(text_template_parse_Node)in_stack_ffffffffffffff80,
               in_stack_ffffffffffffff90,context);
    runtime_convTstring(in_stack_ffffffffffffff80,x);
    puVar1 = &DAT_008075e0;
    iVar2 = extraout_RAX_00;
    runtime_convTstring(in_stack_ffffffffffffff80,(e->Description).str);
    a_01.cap = (int)in_stack_ffffffffffffffa0;
    a_01.array = (interface___ *)in_stack_ffffffffffffff90.str;
    a_01.len = in_stack_ffffffffffffff90.len;
    ~r0_03.len = iVar2;
    ~r0_03.str = puVar1;
    fmt_Sprintf(in_stack_ffffffffffffff80,a_01,~r0_03);
    return;
  }
  if (e->Line != 0) {
    runtime_convTstring(in_stack_ffffffffffffff80,(e->Name).str);
    runtime_convT64(e->Line,x_00);
    runtime_convTstring(in_stack_ffffffffffffff80,(e->Description).str);
    a_00.cap = (int)in_stack_ffffffffffffffa0;
    a_00.array = (interface___ *)in_stack_ffffffffffffff90.str;
    a_00.len = in_stack_ffffffffffffff90.len;
    ~r0_02.len = in_stack_ffffffffffffffb0;
    ~r0_02.str = in_stack_ffffffffffffffa8;
    fmt_Sprintf(in_stack_ffffffffffffff80,a_00,~r0_02);
    return;
  }
  if ((e->Name).len != 0) {
    runtime_convTstring(in_stack_ffffffffffffff80,(e->Name).str);
    puVar1 = &DAT_008075e0;
    iVar2 = extraout_RAX;
    runtime_convTstring(in_stack_ffffffffffffff80,(e->Description).str);
    a.cap = (int)in_stack_ffffffffffffffa0;
    a.array = (interface___ *)in_stack_ffffffffffffff90.str;
    a.len = in_stack_ffffffffffffff90.len;
    ~r0_01.len = iVar2;
    ~r0_01.str = puVar1;
    fmt_Sprintf(in_stack_ffffffffffffff80,a,~r0_01);
    return;
  }
  ~r0_00.len = (int)in_stack_ffffffffffffffa8;
  ~r0_00.str = in_stack_ffffffffffffffa0;
  runtime_concatstring2
            ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff80,in_stack_ffffffffffffff90,~r0_00);
  return;
}



void html_template_escapeTemplate
               (html_template_Template *tmpl,text_template_parse_Node node,string name,error ~r0)

{
  html_template_context c_00;
  __interface___ a;
  text_template_parse_Node node_00;
  string name_00;
  html_template_context ~r0_1;
  char extraout_AL;
  undefined1 *puVar1;
  undefined8 *puVar2;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  int *extraout_RAX_03;
  int *extraout_RAX_04;
  void *~r0_00;
  void *extraout_RCX;
  void *pvVar3;
  int extraout_RCX_00;
  int iVar4;
  html_template_Template *t_1;
  runtime_itab **extraout_RCX_01;
  runtime_itab **extraout_RCX_02;
  runtime_itab **pprVar5;
  html_template_Template *t;
  undefined8 *puVar6;
  runtime_itab *prVar7;
  undefined extraout_BL;
  int in_RBX;
  void *~r0_01;
  undefined extraout_SIL;
  undefined8 in_RSI;
  undefined8 extraout_RSI;
  runtime_itab *extraout_RSI_00;
  html_template_jsCtx extraout_DIL;
  void *in_RDI;
  undefined extraout_R8B;
  undefined8 extraout_R9;
  undefined8 extraout_R10;
  undefined8 *extraout_R11;
  void **extraout_R11_00;
  void **extraout_R11_01;
  undefined8 *extraout_R11_02;
  undefined8 *extraout_R11_03;
  undefined8 *extraout_R11_04;
  runtime_itab **extraout_R11_05;
  runtime_itab **extraout_R11_06;
  int unaff_R14;
  string in_XMM15;
  string format;
  string sVar8;
  runtime_itab *in_stack_ffffffffffffff48;
  uint8 *in_stack_ffffffffffffff50;
  uint8 *in_stack_ffffffffffffff58;
  int in_stack_ffffffffffffff60;
  html_template_context in_stack_ffffffffffffff68;
  undefined8 in_stack_ffffffffffffff88;
  undefined8 in_stack_ffffffffffffff90;
  void *pvVar9;
  undefined8 in_stack_ffffffffffffff98;
  html_template_Error *in_stack_ffffffffffffffa0;
  undefined8 uVar10;
  string in_stack_ffffffffffffffa8;
  html_template_context c;
  undefined4 local_28;
  undefined4 uStack_24;
  undefined4 uStack_20;
  undefined4 uStack_1c;
  undefined4 local_18;
  undefined4 uStack_14;
  undefined4 uStack_10;
  undefined4 uStack_c;
  
  while (&stack0xffffffffffffffa8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  c_00.n.data = (runtime_itab *)in_XMM15.str;
  c_00.err = (void *)in_XMM15.len;
  c_00._0_16_ = (undefined  [16])in_XMM15;
  node_00.data = in_stack_ffffffffffffff50;
  node_00.tab = in_stack_ffffffffffffff48;
  name_00.len = in_stack_ffffffffffffff60;
  name_00.str = in_stack_ffffffffffffff58;
  ~r0_1.n.tab = (runtime_itab *)in_stack_ffffffffffffff90;
  ~r0_1.state = (char)in_stack_ffffffffffffff88;
  ~r0_1.delim = (char)((uint)in_stack_ffffffffffffff88 >> 8);
  ~r0_1.urlPart = (char)((uint)in_stack_ffffffffffffff88 >> 0x10);
  ~r0_1.jsCtx = (char)((uint)in_stack_ffffffffffffff88 >> 0x18);
  ~r0_1.attr = (char)((uint)in_stack_ffffffffffffff88 >> 0x20);
  ~r0_1.element = (char)((uint)in_stack_ffffffffffffff88 >> 0x28);
  ~r0_1._6_2_ = (short)((uint)in_stack_ffffffffffffff88 >> 0x30);
  ~r0_1.n.data = (void *)in_stack_ffffffffffffff98;
  ~r0_1.err = in_stack_ffffffffffffffa0;
  format = in_XMM15;
  sVar8 = in_XMM15;
  html_template___escaper__escapeTree
            (&tmpl->nameSpace->esc,c_00,node_00,name_00,in_RBX,in_stack_ffffffffffffff68,~r0_1,
             in_stack_ffffffffffffffa8);
  local_28._1_1_ = extraout_BL;
  local_28._0_1_ = extraout_AL;
  local_28._2_1_ = (char)~r0_00;
  local_28._3_1_ = extraout_DIL;
  uStack_24._1_1_ = extraout_R8B;
  uStack_24._0_1_ = extraout_SIL;
  uStack_20 = (undefined4)extraout_R9;
  uStack_1c = (undefined4)((uint)extraout_R9 >> 0x20);
  c.state = (html_template_state)local_28;
  c.delim = local_28._1_1_;
  c.urlPart = local_28._2_1_;
  c.jsCtx = local_28._3_1_;
  c.attr = (html_template_attr)uStack_24;
  c.element = uStack_24._1_1_;
  c._6_2_ = uStack_24._2_2_;
  c.n.tab._0_4_ = uStack_20;
  c.n.tab._4_4_ = uStack_1c;
  local_18 = (undefined4)extraout_R10;
  uStack_14 = (undefined4)((uint)extraout_R10 >> 0x20);
  uStack_10 = SUB84(extraout_R11,0);
  uStack_c = (undefined4)((uint)extraout_R11 >> 0x20);
  c.n.data._0_4_ = local_18;
  c.n.data._4_4_ = uStack_14;
  c.err._0_4_ = uStack_10;
  c.err._4_4_ = uStack_c;
  pvVar3 = in_RDI;
  if (extraout_R11 == (undefined8 *)0x0) {
    if (extraout_AL == '\0') {
      puVar1 = (undefined1 *)0x0;
      puVar2 = (undefined8 *)0x0;
    }
    else {
      runtime_convT((internal_abi_Type *)&DAT_00893940,&c,~r0_00);
      a.cap = (int)in_stack_ffffffffffffff48;
      a.array = (interface___ *)sVar8.str;
      a.len = sVar8.len;
      sVar8.len = (int)in_stack_ffffffffffffff58;
      sVar8.str = in_stack_ffffffffffffff50;
      fmt_Sprintf(format,a,sVar8);
      pvVar9 = ~r0_01;
      uVar10 = extraout_RAX;
      runtime_newobject((internal_abi_Type *)&DAT_00881b60,~r0_01);
      *extraout_RAX_00 = 4;
      *(string *)(extraout_RAX_00 + 1) = in_XMM15;
      extraout_RAX_00[4] = in_RSI;
      puVar2 = extraout_RAX_00;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_01 = in_RDI;
        puVar2 = extraout_RAX_01;
      }
      puVar2[3] = in_RDI;
      puVar2[5] = 0;
      puVar2[7] = pvVar9;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_02 = uVar10;
        puVar2 = extraout_RAX_02;
        pvVar3 = extraout_RCX;
      }
      puVar2[6] = uVar10;
      puVar1 = go_itab__html_template_Error_error;
    }
  }
  else {
    extraout_R11[4] = in_RSI;
    puVar2 = extraout_R11;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = in_RDI;
      extraout_R11_00[1] = (void *)puVar2[3];
    }
    puVar2[3] = in_RDI;
    puVar1 = go_itab__html_template_Error_error;
  }
  if (puVar1 == (undefined1 *)0x0) {
    html_template___escaper__commit(&tmpl->nameSpace->esc);
    runtime_mapaccess1_faststr
              ((internal_abi_MapType *)&DAT_0082fc20,(runtime_hmap *)tmpl->nameSpace->set,format,
               in_RDI);
    prVar7 = (runtime_itab *)html_template_escapeOK.data;
    pprVar5 = (runtime_itab **)*extraout_RAX_04;
    if (pprVar5 != (runtime_itab **)0x0) {
      *pprVar5 = html_template_escapeOK.tab;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_05 = extraout_RSI_00;
        extraout_R11_05[1] = extraout_RCX_01[1];
        pprVar5 = extraout_RCX_01;
        prVar7 = extraout_RSI_00;
      }
      pprVar5[1] = prVar7;
      prVar7 = *(runtime_itab **)&pprVar5[2]->hash;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_06 = prVar7;
        extraout_R11_06[1] = extraout_RCX_02[3];
        pprVar5 = extraout_RCX_02;
      }
      pprVar5[3] = prVar7;
    }
    return;
