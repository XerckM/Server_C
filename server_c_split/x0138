        uVar7 = local_428;
        local_3b0 = extraout_RAX_13;
        if (0xc < extraout_RAX_13) {
          local_78 = &DAT_008ae5df;
          prVar6 = extraout_RDI_12;
          iVar8 = 4;
        }
      }
      else {
        ~r1_08.len = (int)in_stack_fffffffffffffae0;
        ~r1_08.str = (uint8 *)in_stack_fffffffffffffad8;
        ~r2_07.data = in_stack_fffffffffffffaf0;
        ~r2_07.tab = in_stack_fffffffffffffae8;
        time_getnum(in_stack_fffffffffffffac8,fixed,(int)~r0_26,~r1_08,~r2_07);
        prVar6 = extraout_RDI_13;
        iVar8 = local_418;
        in_RCX = extraout_RBX_12;
        in_RDI = extraout_RCX_11;
        iVar4 = year;
        iVar15 = month;
        iVar14 = day;
        uVar7 = local_428;
        local_3d8 = extraout_RAX_14;
        if (0x3b < extraout_RAX_14) {
          local_78 = 
          "minutesecondGOROOTstring\n    \tFormat[]byte\' for netdns.localreturnlisten.onionndots:sendtoip+netsocketacceptdomaingophertelnet Valuesysmontimersefenceselect, not object next= jobs= goid sweep  B -> % util alloc free  span= prev= list=, i =  code= addr= m->p= p->m=SCHED  curg=], sp= ctxt: min=  max= (...)\n base allow"
          ;
          prVar6 = extraout_RDI_13;
          iVar8 = 6;
        }
      }
    }
    else if (uVar13 < 0x213) {
      ~r1_06.len = (int)in_stack_fffffffffffffae0;
      ~r1_06.str = (uint8 *)in_stack_fffffffffffffad8;
      ~r2_05.data = in_stack_fffffffffffffaf0;
      ~r2_05.tab = in_stack_fffffffffffffae8;
      time_getnum(in_stack_fffffffffffffac8,fixed,(int)~r0_26,~r1_06,~r2_05);
      prVar6 = extraout_RDI_11;
      iVar8 = local_418;
      in_RCX = extraout_RBX_10;
      in_RDI = extraout_RCX_09;
      iVar4 = year;
      iVar15 = month;
      iVar14 = day;
      uVar7 = extraout_RAX_12;
      if (extraout_RDI_11 == (runtime_itab *)0x0) {
        if (extraout_RAX_12 < 0x3c) {
          prVar6 = extraout_RDI_11;
          uVar7 = extraout_RAX_12;
          if (((1 < (int)extraout_RCX_09) &&
              ((cVar3 = *(char *)&(extraout_RBX_10->name).str, cVar3 == '.' ||
               (prVar6 = extraout_RDI_11, uVar7 = extraout_RAX_12, cVar3 == ',')))) &&
             (c_1 = *(char *)((int)&(extraout_RBX_10->name).str + 1) - 0x30,
             prVar6 = extraout_RDI_11, uVar7 = extraout_RAX_12, c_1 < 10)) {
            prefix_01.len = (int)in_stack_fffffffffffffae0;
            prefix_01.str = (uint8 *)in_stack_fffffffffffffad8;
            suffix_00.len = (int)in_stack_fffffffffffffaf0;
            suffix_00.str = (uint8 *)in_stack_fffffffffffffae8;
            local_420 = extraout_RCX_09;
            local_390 = extraout_RDI_11;
            local_388 = extraout_RAX_12;
            local_80 = extraout_RBX_10;
            time_nextStdChunk(in_stack_fffffffffffffac8,prefix_01,(int)local_98,suffix_00);
            if ((extraout_CX == 0x22) || (extraout_CX == 0x23)) {
              local_428 = local_388;
              prVar6 = local_390;
              iVar8 = local_418;
              in_RCX = local_80;
              in_RDI = local_420;
              iVar4 = year;
              iVar15 = month;
              iVar14 = day;
              uVar7 = local_428;
            }
            else {
              for (local_3f0 = 2;
                  (local_3f0 < (int)local_420 &&
                  (c_2 = *(char *)((int)&(local_80->name).str + local_3f0) - 0x30, c_2 < 10));
                  local_3f0 = local_3f0 + 1) {
              }
              rangeErrString_00.len = (int)in_stack_fffffffffffffae0;
              rangeErrString_00.str = (uint8 *)in_stack_fffffffffffffad8;
              err_03.data = in_stack_fffffffffffffaf0;
              err_03.tab = in_stack_fffffffffffffae8;
              time_parseNanoseconds_go_shape_string_
                        ((_param1)in_stack_fffffffffffffac8,0x95ccb0,(int)local_80,rangeErrString_00
                         ,err_03);
              if (local_420 < (uint)local_3f0) {
                    // WARNING: Subroutine does not return
                runtime_panicSliceB();
              }
              in_RDI = (time_Location *)((int)local_420 - local_3f0);
              in_RCX = (time_Location *)
                       ((int)&(local_80->name).str + (local_3f0 & -(int)in_RDI >> 0x3f));
              prVar6 = extraout_RDI_14;
              iVar8 = extraout_RCX_13;
              iVar4 = year;
              iVar15 = month;
              iVar14 = day;
              uVar7 = local_388;
              nsec = extraout_RAX_74;
              local_78 = extraout_RBX_25;
            }
          }
        }
        else {
          local_78 = 
          "secondGOROOTstring\n    \tFormat[]byte\' for netdns.localreturnlisten.onionndots:sendtoip+netsocketacceptdomaingophertelnet Valuesysmontimersefenceselect, not object next= jobs= goid sweep  B -> % util alloc free  span= prev= list=, i =  code= addr= m->p= p->m=SCHED  curg=], sp= ctxt: min=  max= (...)\n base allow"
          ;
          prVar6 = extraout_RDI_11;
          iVar8 = 6;
          uVar7 = extraout_RAX_12;
        }
      }
    }
    else if (uVar13 == 0x215) {
      prVar6 = time_errBad.tab;
      if (1 < (int)~r0_26) {
        in_RDI = (time_Location *)((int)&~r0_26[-1].cacheZone + 6);
        sVar2 = *(short *)&(ns->name).str;
        in_RCX = (time_Location *)((int)&(ns->name).str + (uint)((dword)(-(int)in_RDI >> 0x3f) & 2))
        ;
        if (sVar2 == 0x4d41) {
          amSet = true;
          prVar6 = extraout_RCX_00;
        }
        else {
          prVar6 = time_errBad.tab;
          if (sVar2 == 0x4d50) {
            pmSet = true;
            prVar6 = extraout_RCX_00;
          }
        }
      }
    }
    else {
      prVar6 = extraout_RCX_00;
      if ((uVar13 == 0x216) && (prVar6 = time_errBad.tab, 1 < (int)~r0_26)) {
        in_RDI = (time_Location *)((int)&~r0_26[-1].cacheZone + 6);
        sVar2 = *(short *)&(ns->name).str;
        in_RCX = (time_Location *)((int)&(ns->name).str + (uint)((dword)(-(int)in_RDI >> 0x3f) & 2))
        ;
        if (sVar2 == 0x6d61) {
          amSet = true;
          prVar6 = extraout_RCX_00;
        }
        else {
          prVar6 = time_errBad.tab;
          if (sVar2 == 0x6d70) {
            pmSet = true;
            prVar6 = extraout_RCX_00;
          }
        }
      }
    }
    local_428 = uVar7;
    if (iVar8 != 0) {
      a1_00.len = (int)in_stack_fffffffffffffae0;
      a1_00.str = (uint8 *)in_stack_fffffffffffffad8;
      a2.len = (int)in_stack_fffffffffffffaf0;
      a2.str = (uint8 *)in_stack_fffffffffffffae8;
      ~r0_25.len = (int)in_stack_fffffffffffffb00;
      ~r0_25.str = (uint8 *)in_stack_fffffffffffffaf8;
      local_448 = in_RDI;
      local_a0 = in_RCX;
      runtime_concatstring3((runtime_tmpBuf *)0x0,in_stack_fffffffffffffac8,a1_00,a2,~r0_25);
      ~r0_21.len = (int)in_stack_fffffffffffffae0;
      ~r0_21.array = (uint8 *)in_stack_fffffffffffffad8;
      ~r0_21.cap = (int)in_stack_fffffffffffffae8;
      local_3d0 = extraout_RBX_23;
      local_60 = extraout_RAX_65;
      runtime_stringtoslicebyte(&local_1d0,in_stack_fffffffffffffac8,~r0_21);
      runtime_slicebytetostring((runtime_tmpBuf *)0x0,ptr_15,n_16,in_stack_fffffffffffffac8);
      ~r0_22.len = (int)in_stack_fffffffffffffae0;
      ~r0_22.array = (uint8 *)in_stack_fffffffffffffad8;
      ~r0_22.cap = (int)in_stack_fffffffffffffae8;
      local_498 = extraout_RBX_24;
      local_d8 = extraout_RAX_66;
      runtime_stringtoslicebyte(&local_1f0,in_stack_fffffffffffffac8,~r0_22);
      runtime_slicebytetostring((runtime_tmpBuf *)0x0,ptr_16,n_17,in_stack_fffffffffffffac8);
      local_4a0 = ~r0_36;
      local_e0 = extraout_RAX_67;
      runtime_newobject((internal_abi_Type *)&DAT_0087d720,~r0_36);
      extraout_RAX_68[1] = local;
      pptVar5 = extraout_RAX_68;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_23 = defaultLocation;
        pptVar5 = extraout_RAX_69;
      }
      *pptVar5 = defaultLocation;
      pptVar5[3] = local_498;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_24 = local_d8;
        pptVar5 = extraout_RAX_70;
      }
      pptVar5[2] = local_d8;
      pptVar5[5] = local_378;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_25 = local_90;
        pptVar5 = extraout_RAX_71;
      }
      pptVar5[4] = local_90;
      pptVar5[7] = local_4a0;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_26 = local_e0;
        pptVar5 = extraout_RAX_72;
      }
      pptVar5[6] = local_e0;
      pptVar5[9] = local_3d0;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_27 = local_60;
        pptVar5 = extraout_RAX_73;
      }
      pptVar5[8] = local_60;
      return;
    }
    if (prVar6 != (runtime_itab *)0x0) {
      ~r0_19.len = (int)in_stack_fffffffffffffae0;
      ~r0_19.array = (uint8 *)in_stack_fffffffffffffad8;
      ~r0_19.cap = (int)in_stack_fffffffffffffae8;
      runtime_stringtoslicebyte(&local_210,in_stack_fffffffffffffac8,~r0_19);
      runtime_slicebytetostring((runtime_tmpBuf *)0x0,ptr_13,n_14,in_stack_fffffffffffffac8);
      ~r0_20.len = (int)in_stack_fffffffffffffae0;
      ~r0_20.array = (uint8 *)in_stack_fffffffffffffad8;
      ~r0_20.cap = (int)in_stack_fffffffffffffae8;
      local_4a8 = extraout_RBX_22;
      local_e8 = extraout_RAX_58;
      runtime_stringtoslicebyte(&local_230,in_stack_fffffffffffffac8,~r0_20);
      runtime_slicebytetostring((runtime_tmpBuf *)0x0,ptr_14,n_15,in_stack_fffffffffffffac8);
      local_4b0 = ~r0_35;
      local_f0 = extraout_RAX_59;
      runtime_newobject((internal_abi_Type *)&DAT_0087d720,~r0_35);
      extraout_RAX_60[1] = local;
      pptVar5 = extraout_RAX_60;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_19 = defaultLocation;
        pptVar5 = extraout_RAX_61;
      }
      *pptVar5 = defaultLocation;
      pptVar5[3] = local_4a8;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_20 = local_e8;
        pptVar5 = extraout_RAX_62;
      }
      pptVar5[2] = local_e8;
      pptVar5[5] = local_378;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_21 = local_90;
        pptVar5 = extraout_RAX_63;
      }
      pptVar5[4] = local_90;
      pptVar5[7] = local_4b0;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_22 = local_f0;
        pptVar5 = extraout_RAX_64;
      }
      pptVar5[6] = local_f0;
      *(undefined (*) [16])(pptVar5 + 8) = in_XMM15;
      return;
    }
  } while( true );
}



void time_parseTimeZone(string value,int length,bool ok)

{
  int nUpper;
  uint8 c;
  bool ok_1;
  undefined7 in_register_00000019;
  uint uVar1;
  int unaff_R14;
  string in_stack_ffffffffffffffe8;
  
  uVar1 = CONCAT71(in_register_00000019,ok);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((int)uVar1 < 3) {
    return;
  }
  if ((3 < (int)uVar1) && ((*(sdword *)length == 0x54536843 || (*(sdword *)length == 0x5453654d))))
  {
    return;
  }
  if ((*(short *)length == 0x4d47) && (*(char *)(length + 2) == 'T')) {
    if (uVar1 != 3) {
      time_parseSignedOffset
                (in_stack_ffffffffffffffe8,length + (uint)((dword)((int)-(uVar1 - 3) >> 0x3f) & 3));
    }
    return;
  }
  if ((*(char *)length == '+') || (*(char *)length == '-')) {
    time_parseSignedOffset(in_stack_ffffffffffffffe8,length);
    return;
  }
  nUpper = 0;
  do {
    if (5 < nUpper) {
LAB_00486dc4:
      if (nUpper != 6) {
        return;
      }
      return;
    }
    if (((int)uVar1 <= nUpper) || (c = *(char *)(length + nUpper) + 0xbf, 0x19 < c)) {
      if (nUpper < 4) {
        if ((uint)nUpper < 3) {
          return;
        }
        if (nUpper != 3) {
          return;
        }
        return;
      }
      if (nUpper == 4) {
        if (uVar1 < 4) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        if ((*(char *)(length + 3) != 'T') && (*(sdword *)length != 0x41544957)) {
          return;
        }
        return;
      }
      if (nUpper == 5) {
        if (uVar1 < 5) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        if (*(char *)(length + 4) != 'T') {
          return;
        }
        return;
      }
      goto LAB_00486dc4;
    }
    nUpper = nUpper + 1;
  } while( true );
}



void time_parseSignedOffset(string value,int ~r0)

{
  uint uVar1;
  byte bVar2;
  char cVar3;
  char extraout_AL;
  uint8 sign;
  int i;
  runtime_itab *prVar4;
  int in_RBX;
  uint64 x;
  uint8 c;
  uint uVar5;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RBX == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if ((*(char *)~r0 != '-') && (*(char *)~r0 != '+')) {
    return;
  }
  uVar1 = in_RBX - 1;
  x = 0;
  for (i = 0; (i < (int)uVar1 &&
              (bVar2 = *(byte *)(~r0 + (uint)((dword)((int)-uVar1 >> 0x3f) & 1) + i),
              (byte)(bVar2 - 0x30) < 10)); i = i + 1) {
    prVar4 = time_errLeadingInt.tab;
    if (0xccccccccccccccc < x) {
      uVar5 = 0;
      x = 0;
      goto LAB_00486f0e;
    }
    x = ((uint)bVar2 + x * 10) - 0x30;
    if (0x8000000000000000 < x) {
      uVar5 = 0;
      x = 0;
      goto LAB_00486f0e;
    }
  }
  if (uVar1 < (uint)i) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  uVar5 = (in_RBX - i) - 1;
  prVar4 = (runtime_itab *)0x0;
LAB_00486f0e:
  if (prVar4 == (runtime_itab *)0x0) {
    if (uVar5 == uVar1) {
      runtime_memequal();
      cVar3 = extraout_AL;
    }
    else {
      cVar3 = '\0';
    }
    if (cVar3 == '\0') {
      if (x < 0x18) {
        return;
      }
      return;
    }
  }
  return;
}



void time_Time_appendFormatRFC3339(time_Time t,__uint8 b,bool nanos,__uint8 ~r0)

{
  __uint8 ~r0_00;
  __uint8 ~r0_01;
  __uint8 ~r0_02;
  __uint8 ~r0_03;
  __uint8 ~r0_04;
  __uint8 ~r0_05;
  __uint8 ~r0_06;
  __uint8 ~r0_07;
  __uint8 ~r0_08;
  undefined7 in_register_00000001;
  int year;
  void *oldPtr;
  void *extraout_RAX;
  void *oldPtr_00;
  void *extraout_RAX_00;
  void *oldPtr_01;
  void *extraout_RAX_01;
  void *oldPtr_02;
  void *extraout_RAX_02;
  void *oldPtr_03;
  void *extraout_RAX_03;
  void *nanosec;
  void *extraout_RAX_04;
  void *extraout_RAX_05;
  void *extraout_RAX_06;
  void *extraout_RAX_07;
  void *oldPtr_04;
  void *extraout_RAX_08;
  void *pvVar1;
  undefined8 in_RCX;
  int year_00;
  int offset;
  int day;
  uint oldCap;
  uint oldCap_00;
  uint oldCap_01;
  uint oldCap_02;
  uint oldCap_03;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint oldCap_04;
  int hour;
  int min;
  int sec;
  int iVar2;
  int iVar3;
  int zone;
  uint64 in_RBX;
  time_Month month;
  int extraout_RBX;
  uint uVar4;
  uint extraout_RBX_00;
  int extraout_RBX_01;
  uint extraout_RBX_02;
  int extraout_RBX_03;
  uint extraout_RBX_04;
  int extraout_RBX_05;
  uint extraout_RBX_06;
  int extraout_RBX_07;
  uint extraout_RBX_08;
  int std;
  int extraout_RBX_09;
  int iVar5;
  uint extraout_RBX_10;
  uint extraout_RBX_11;
  uint extraout_RBX_12;
  int extraout_RBX_13;
  uint extraout_RBX_14;
  int in_RSI;
  int day_00;
  int in_RDI;
  uint64 abs_00;
  uint64 abs;
  uint uVar6;
  int iVar7;
  int yday;
  char in_R9B;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffff40;
  string in_stack_ffffffffffffff58;
  int in_stack_ffffffffffffff68;
  int local_40;
  int local_38;
  uint64 local_30;
  undefined8 local_28;
  int local_20;
  uint64 local_18;
  undefined8 local_10;
  
  while (&local_40 <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_38 = CONCAT71(in_register_00000001,nanos);
  local_30 = in_RBX;
  local_28 = in_RCX;
  time_Time_locabs((time_Time)in_stack_ffffffffffffff40,in_stack_ffffffffffffff58,
                   CONCAT71(in_register_00000001,nanos),in_RBX);
  time_absDate(abs_00,true,year_00,abs_00,day_00,yday);
  ~r0_00.cap = in_stack_ffffffffffffff68;
  ~r0_00.array = in_stack_ffffffffffffff58.str;
  ~r0_00.len = in_stack_ffffffffffffff58.len;
  time_appendInt(in_stack_ffffffffffffff40,in_RDI,in_RSI,~r0_00);
  uVar4 = extraout_RBX + 1;
  pvVar1 = oldPtr;
  if (oldCap < uVar4) {
    runtime_growslice(oldPtr,uVar4,oldCap,1,(internal_abi_Type *)&DAT_00807920,
                      (runtime_slice)in_stack_ffffffffffffff40);
    pvVar1 = extraout_RAX;
    uVar4 = extraout_RBX_00;
  }
  *(undefined *)((uVar4 - 1) + (int)pvVar1) = 0x2d;
  ~r0_01.cap = in_stack_ffffffffffffff68;
  ~r0_01.array = in_stack_ffffffffffffff58.str;
  ~r0_01.len = in_stack_ffffffffffffff58.len;
  time_appendInt(in_stack_ffffffffffffff40,(int)pvVar1,uVar4,~r0_01);
  uVar4 = extraout_RBX_01 + 1;
  pvVar1 = oldPtr_00;
  if (oldCap_00 < uVar4) {
    runtime_growslice(oldPtr_00,uVar4,oldCap_00,1,(internal_abi_Type *)&DAT_00807920,
                      (runtime_slice)in_stack_ffffffffffffff40);
    pvVar1 = extraout_RAX_00;
    uVar4 = extraout_RBX_02;
  }
  *(undefined *)((uVar4 - 1) + (int)pvVar1) = 0x2d;
  ~r0_02.cap = in_stack_ffffffffffffff68;
  ~r0_02.array = in_stack_ffffffffffffff58.str;
  ~r0_02.len = in_stack_ffffffffffffff58.len;
  time_appendInt(in_stack_ffffffffffffff40,(int)pvVar1,uVar4,~r0_02);
  uVar4 = extraout_RBX_03 + 1;
  pvVar1 = oldPtr_01;
  if (oldCap_01 < uVar4) {
    runtime_growslice(oldPtr_01,uVar4,oldCap_01,1,(internal_abi_Type *)&DAT_00807920,
                      (runtime_slice)in_stack_ffffffffffffff40);
    pvVar1 = extraout_RAX_01;
    uVar4 = extraout_RBX_04;
  }
  *(undefined *)((uVar4 - 1) + (int)pvVar1) = 0x54;
  uVar6 = (abs_00 % 0x15180) % 0xe10;
  local_40 = ((int)(SUB168(SEXT816(-0x7777777777777777) * SEXT816((int)uVar6),8) + uVar6) >> 5) *
             0x3c;
  ~r0_03.cap = in_stack_ffffffffffffff68;
  ~r0_03.array = in_stack_ffffffffffffff58.str;
  ~r0_03.len = in_stack_ffffffffffffff58.len;
  time_appendInt(in_stack_ffffffffffffff40,(int)pvVar1,uVar4,~r0_03);
  uVar4 = extraout_RBX_05 + 1;
  pvVar1 = oldPtr_02;
  if (oldCap_02 < uVar4) {
    runtime_growslice(oldPtr_02,uVar4,oldCap_02,1,(internal_abi_Type *)&DAT_00807920,
                      (runtime_slice)in_stack_ffffffffffffff40);
    pvVar1 = extraout_RAX_02;
    uVar4 = extraout_RBX_06;
  }
  *(undefined *)((uVar4 - 1) + (int)pvVar1) = 0x3a;
  ~r0_04.cap = in_stack_ffffffffffffff68;
  ~r0_04.array = in_stack_ffffffffffffff58.str;
  ~r0_04.len = in_stack_ffffffffffffff58.len;
  time_appendInt(in_stack_ffffffffffffff40,(int)pvVar1,uVar4,~r0_04);
  uVar4 = extraout_RBX_07 + 1;
  pvVar1 = oldPtr_03;
  if (oldCap_03 < uVar4) {
    runtime_growslice(oldPtr_03,uVar4,oldCap_03,1,(internal_abi_Type *)&DAT_00807920,
                      (runtime_slice)in_stack_ffffffffffffff40);
    pvVar1 = extraout_RAX_03;
    uVar4 = extraout_RBX_08;
  }
  *(undefined *)((uVar4 - 1) + (int)pvVar1) = 0x3a;
  ~r0_05.cap = in_stack_ffffffffffffff68;
  ~r0_05.array = in_stack_ffffffffffffff58.str;
  ~r0_05.len = in_stack_ffffffffffffff58.len;
  time_appendInt(in_stack_ffffffffffffff40,(int)pvVar1,uVar4,~r0_05);
  pvVar1 = nanosec;
  uVar4 = extraout_RCX;
  iVar5 = std;
  if (in_R9B != '\0') {
    local_20 = local_38;
    local_18 = local_30;
    local_10 = local_28;
    ~r0_06.cap = in_stack_ffffffffffffff68;
    ~r0_06.array = in_stack_ffffffffffffff58.str;
    ~r0_06.len = in_stack_ffffffffffffff58.len;
    time_appendNano(in_stack_ffffffffffffff40,(int)nanosec,std,~r0_06);
    pvVar1 = extraout_RAX_04;
    uVar4 = extraout_RCX_00;
    iVar5 = extraout_RBX_09;
  }
  if (year_00 == 0) {
    uVar6 = iVar5 + 1;
    if (uVar4 < uVar6) {
      runtime_growslice(pvVar1,uVar6,uVar4,1,(internal_abi_Type *)&DAT_00807920,
                        (runtime_slice)in_stack_ffffffffffffff40);
      pvVar1 = extraout_RAX_05;
      uVar6 = extraout_RBX_10;
    }
    *(undefined *)((uVar6 - 1) + (int)pvVar1) = 0x5a;
    return;
  }
  iVar2 = SUB168(SEXT816(-0x7777777777777777) * SEXT816(year_00),8) + year_00 >> 5;
  iVar7 = year_00 >> 0x3f;
  iVar3 = iVar2 - iVar7;
  if (iVar3 < 0) {
    uVar6 = iVar5 + 1;
    local_40 = iVar7;
    if (uVar4 < uVar6) {
      runtime_growslice(pvVar1,uVar6,uVar4,1,(internal_abi_Type *)&DAT_00807920,
                        (runtime_slice)in_stack_ffffffffffffff40);
      uVar6 = extraout_RBX_11;
      pvVar1 = extraout_RAX_06;
    }
    *(undefined *)((uVar6 - 1) + (int)pvVar1) = 0x2d;
    iVar3 = local_40 - iVar2;
  }
  else {
    uVar6 = iVar5 + 1;
    if (uVar4 < uVar6) {
      runtime_growslice(pvVar1,uVar6,uVar4,1,(internal_abi_Type *)&DAT_00807920,
                        (runtime_slice)in_stack_ffffffffffffff40);
      uVar6 = extraout_RBX_12;
      pvVar1 = extraout_RAX_07;
    }
    *(undefined *)((uVar6 - 1) + (int)pvVar1) = 0x2b;
  }
  local_40 = (SUB168(SEXT816(-0x7777777777777777) * SEXT816(iVar3),8) + iVar3 >> 5) -
             (iVar3 >> 0x3f);
  ~r0_07.cap = in_stack_ffffffffffffff68;
  ~r0_07.array = in_stack_ffffffffffffff58.str;
  ~r0_07.len = in_stack_ffffffffffffff58.len;
  time_appendInt(in_stack_ffffffffffffff40,(int)pvVar1,uVar6,~r0_07);
  uVar4 = extraout_RBX_13 + 1;
  pvVar1 = oldPtr_04;
  if (oldCap_04 < uVar4) {
    runtime_growslice(oldPtr_04,uVar4,oldCap_04,1,(internal_abi_Type *)&DAT_00807920,
                      (runtime_slice)in_stack_ffffffffffffff40);
    pvVar1 = extraout_RAX_08;
    uVar4 = extraout_RBX_14;
  }
  *(undefined *)((uVar4 - 1) + (int)pvVar1) = 0x3a;
  ~r0_08.cap = in_stack_ffffffffffffff68;
  ~r0_08.array = in_stack_ffffffffffffff58.str;
  ~r0_08.len = in_stack_ffffffffffffff58.len;
  time_appendInt(in_stack_ffffffffffffff40,(int)pvVar1,uVar4,~r0_08);
  return;
}



void time_Time_appendStrictRFC3339(time_Time t,__uint8 b,__uint8 ~r0,error ~r1)

{
  __uint8 ~r0_00;
  bool in_AL;
  int extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  int extraout_RCX;
  uint8 c;
  void *~r0_01;
  int in_RSI;
  int n0;
  uint uVar1;
  int unaff_R14;
  time_Time in_stack_ffffffffffffffa8;
  __uint8 in_stack_ffffffffffffffc0;
  undefined8 in_stack_ffffffffffffffd8;
  undefined8 in_stack_ffffffffffffffe0;
  void *pvVar2;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  pvVar2 = (void *)(in_RSI + 4);
  ~r0_00.len = in_stack_ffffffffffffffe0;
  ~r0_00.array = (uint8 *)in_stack_ffffffffffffffd8;
  ~r0_00.cap = (int)pvVar2;
  time_Time_appendFormatRFC3339(in_stack_ffffffffffffffa8,in_stack_ffffffffffffffc0,in_AL,~r0_00);
  if (~r0_01 <= pvVar2) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if (*(char *)(in_RSI + 4 + extraout_RAX) != '-') {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_01);
    extraout_RAX_01[1] = 0x1e;
    *extraout_RAX_01 = &DAT_008bea1d;
    return;
  }
  if ((void *)((int)~r0_01 - 1U) < ~r0_01) {
    if (*(char *)((int)~r0_01 + extraout_RAX + -1) != 'Z') {
      if (~r0_01 <= (void *)((int)~r0_01 - 6U)) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      c = *(char *)((int)~r0_01 + extraout_RAX + -6) - 0x30;
      if ((c < 10) ||
         (uVar1 = (int)~r0_01 - 5U & -((extraout_RCX - (int)~r0_01) + 5) >> 0x3f,
         0x17 < (byte)((*(char *)(extraout_RAX + 1 + uVar1) +
                       (*(char *)(extraout_RAX + uVar1) * '\x05' + '\x10') * '\x02') - 0x30U))) {
        runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_01);
        extraout_RAX_00[1] = 0x25;
        *extraout_RAX_00 = &DAT_008c2d40;
        return;
      }
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void time_parseStrictRFC3339(__uint8 b,time_Time ~r0,error ~r1)

{
  _param2 s;
  string value;
  time_Time ~r0_00;
  time_Time ~r0_01;
  uint8 *in_RAX;
  int in_RBX;
  char extraout_DIL;
  bool ok;
  int extraout_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffffb0;
  uint8 *in_stack_ffffffffffffffc0;
  uint64 in_stack_ffffffffffffffc8;
  undefined in_stack_ffffffffffffffd0 [16];
  time_Location *in_stack_ffffffffffffffe0;
  error in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  s.cap = (int)in_stack_ffffffffffffffc0;
  s.array = in_stack_ffffffffffffffb0.str;
  s.len = in_stack_ffffffffffffffb0.len;
  ~r0_00.ext = in_stack_ffffffffffffffd0._0_8_;
  ~r0_00.loc = (time_Location *)in_stack_ffffffffffffffd0._8_8_;
  ~r0_00.wall = in_stack_ffffffffffffffc8;
  time_parseRFC3339_go_shape___uint8_
            (s,(time_Location *)time__dict_parseRFC3339___uint8_,~r0_00,SUB81(in_RAX,0));
  if (extraout_DIL == '\0') {
    runtime_slicebytetostring
              ((runtime_tmpBuf *)&stack0xffffffffffffffd8,in_RAX,in_RBX,in_stack_ffffffffffffffb0);
    value.len = in_stack_ffffffffffffffc8;
    value.str = in_stack_ffffffffffffffc0;
    ~r0_01.loc = in_stack_ffffffffffffffe0;
    ~r0_01.wall = in_stack_ffffffffffffffd0._0_8_;
    ~r0_01.ext = in_stack_ffffffffffffffd0._8_8_;
    time_Parse(in_stack_ffffffffffffffb0,value,~r0_01,in_stack_ffffffffffffffe8);
    if (extraout_RDI != 0) {
      return;
    }
    return;
  }
  return;
}



void time_when(time_Duration d,int64 ~r0)

{
  int64 t;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (d < 1) {
    runtime_nanotime(d);
    return;
  }
  runtime_nanotime(d);
  return;
}



void time___Timer__Stop(time_Timer *t,bool ~r0)

{
  uint uVar1;
  uint extraout_RBX;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  uVar1 = (uint)~r0;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    uVar1 = extraout_RBX;
  }
  if ((t->r).f != (func_interface_____uintptr_ **)0x0) {
    time_stopTimer((runtime_timer *)&t->r,SUB81(uVar1,0));
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe8);
}



void time_NewTimer(time_Duration d,time_Timer *~r0)

{
  undefined8 extraout_RAX;
  chan_time_Time c;
  undefined8 extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  time_Timer *t;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *puVar1;
  runtime_hchan *in_RCX;
  undefined8 extraout_RCX;
  undefined8 uVar2;
  runtime_hchan *extraout_RCX_00;
  int64 ~r0_00;
  void *~r0_01;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RCX = extraout_RCX_00;
  }
  runtime_makechan((internal_abi_ChanType *)&DAT_00809f20,1,in_RCX);
  time_when(d,~r0_00);
  runtime_newobject((internal_abi_Type *)&DAT_0084e620,~r0_01);
  puVar1 = extraout_RAX_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RAX;
    puVar1 = extraout_RAX_02;
  }
  *puVar1 = extraout_RAX;
  puVar1[2] = extraout_RAX_00;
  puVar1[4] = &PTR_time_sendTime_008eb050;
  puVar1[5] = &DAT_00809f20;
  uVar2 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = extraout_RCX;
    puVar1 = extraout_RAX_03;
    uVar2 = extraout_RCX;
  }
  puVar1[6] = uVar2;
  time_startTimer((runtime_timer *)(puVar1 + 1));
  return;
}



void time___Timer__Reset(time_Timer *t,time_Duration d,bool ~r0)

{
  int64 when;
  int64 w;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((t->r).f != (func_interface_____uintptr_ **)0x0) {
    time_when(d,d);
    time_resetTimer((runtime_timer *)&t->r,when,SUB81(&t->r,0));
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe8);
}



void time_sendTime(interface___ c,uintptr seq)

{
  bool selected;
  runtime_hchan *in_RBX;
  int unaff_R14;
  time_Time in_stack_ffffffffffffffc8;
  undefined local_20 [24];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((undefined *)seq == &DAT_00809f20) {
    time_Now(in_stack_ffffffffffffffc8);
    runtime_selectnbsend(in_RBX,local_20,selected);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicdottypeE
            ((internal_abi_Type *)seq,(internal_abi_Type *)&DAT_00809f20,
             (internal_abi_Type *)&DAT_00821120);
}



void time_After(time_Duration d,<_chan_time_Time ~r0)

{
  <_chan_time_Time extraout_RBX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0 = extraout_RBX;
  }
  time_NewTimer(d,(time_Timer *)~r0);
  return;
}



void time_AfterFunc(time_Duration d,func__ **f,time_Timer *~r0)

{
  undefined8 extraout_RAX;
  int extraout_RAX_00;
  time_Timer *t;
  int extraout_RAX_01;
  int iVar1;
  void *~r0_00;
  undefined8 *extraout_R11;
  int unaff_R14;
  func__ **ppfStack0000000000000010;
  
  ppfStack0000000000000010 = f;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  time_when(d,(int64)ppfStack0000000000000010);
  runtime_newobject((internal_abi_Type *)&DAT_0084e620,~r0_00);
  *(undefined8 *)(extraout_RAX_00 + 0x10) = extraout_RAX;
  *(undefined ***)(extraout_RAX_00 + 0x20) = &PTR_time_goFunc_008eb040;
  *(undefined8 **)(extraout_RAX_00 + 0x28) = &DAT_007ffee0;
  iVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = ppfStack0000000000000010;
    iVar1 = extraout_RAX_01;
  }
  *(func__ ***)(iVar1 + 0x30) = ppfStack0000000000000010;
  time_startTimer((runtime_timer *)(iVar1 + 8));
  return;
}



void time_goFunc(interface___ arg,uintptr seq)

{
  runtime_funcval *in_RBX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((undefined8 *)seq == &DAT_007ffee0) {
    runtime_newproc(in_RBX);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicdottypeE
            ((internal_abi_Type *)seq,(internal_abi_Type *)&DAT_007ffee0,
             (internal_abi_Type *)&DAT_00821120);
}


