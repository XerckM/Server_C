  pvVar6 = extraout_RDI_15;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar4 = *extraout_RAX_17;
    runtime_gcWriteBarrier1();
    *extraout_R11_08 = uVar4;
    puVar3 = extraout_RAX_18;
    pvVar6 = extraout_RDI_16;
  }
  *puVar3 = &DAT_008b8834;
  local_24 = 5;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e300,(runtime_hmap *)local_18,&local_24,pvVar6)
  ;
  extraout_RAX_19->flags = 0xc;
  extraout_RAX_19->B = 0;
  extraout_RAX_19->noverflow = 0;
  extraout_RAX_19->hash0 = 0;
  prVar2 = extraout_RAX_19;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier3();
    *extraout_R11_09 = extraout_RCX_00;
    extraout_R11_09[1] = local_18;
    extraout_R11_09[2] = vendor_golang_org_x_net_dns_dnsmessage_rCodeNames;
    prVar2 = extraout_RAX_20;
  }
  prVar2->count =
       (int)
       "RCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen , not pointer != sweepgen  MB globals,  work.nproc=  work.nwait=  nStackRoots= flushedWork double unlock s.spanclass= MB) workers=min too large-byte block (runtime: val=runtime: seq= failed with timer_settimefatal error:  idlethreads= syscalltick=load64 failedxadd64 failedxchg64 failedmp.g0 stack [nil stackbase}\n\tsched={pc:, gp->status= pluginpath= : unknown pc  called from level 3 resetexchange fulltimer expiredsrmount errorreserved_namedefault_valuephp_namespace<unknown: %T>AlreadyExistsUnimplementedUNIMPLEMENTED\"UNAVAILABLE\"INVALID_STATE in host nameGrpc-Encodinggrpc-encodinggrpc-tags-bintransport: %vunix-abstractIntegrityOnlyAddr: <nil>, AuthorizationAccept-RangesIf-None-MatchLast-Modified[FrameHeader invalid base accept-rangesauthorizationcache-controlcontent-rangeif-none-matchlast-modifiedCache-ControlReset ContentLoop DetectedSTREAM_CLOS..." /* TRUNCATED STRING LITERAL */
  ;
  vendor_golang_org_x_net_dns_dnsmessage_rCodeNames = local_18;
  runtime_makemap_small(prVar2);
  local_25 = 1;
  local_20 = h_01;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e3c0,(runtime_hmap *)h_01,&local_25,~r0_02);
  extraout_RAX_21[1] = 6;
  puVar3 = extraout_RAX_21;
  pvVar6 = extraout_RDI_17;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar4 = *extraout_RAX_21;
    runtime_gcWriteBarrier1();
    *extraout_R11_10 = uVar4;
    puVar3 = extraout_RAX_22;
    pvVar6 = extraout_RDI_18;
  }
  *puVar3 = &DAT_008afb38;
  local_25 = 2;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e3c0,(runtime_hmap *)local_20,&local_25,pvVar6)
  ;
  extraout_RAX_23[1] = 8;
  puVar3 = extraout_RAX_23;
  pvVar6 = extraout_RDI_19;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar4 = *extraout_RAX_23;
    runtime_gcWriteBarrier1();
    *extraout_R11_11 = uVar4;
    puVar3 = extraout_RAX_24;
    pvVar6 = extraout_RDI_20;
  }
  *puVar3 = &DAT_008b1ee6;
  local_25 = 3;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e3c0,(runtime_hmap *)local_20,&local_25,pvVar6)
  ;
  extraout_RAX_25[1] = 6;
  puVar3 = extraout_RAX_25;
  pvVar6 = extraout_RDI_21;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar4 = *extraout_RAX_25;
    runtime_gcWriteBarrier1();
    *extraout_R11_12 = uVar4;
    puVar3 = extraout_RAX_26;
    pvVar6 = extraout_RDI_22;
  }
  *puVar3 = &DAT_008afb3e;
  local_25 = 4;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e3c0,(runtime_hmap *)local_20,&local_25,pvVar6)
  ;
  extraout_RAX_27[1] = 9;
  puVar3 = extraout_RAX_27;
  pvVar6 = extraout_RDI_23;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar4 = *extraout_RAX_27;
    runtime_gcWriteBarrier1();
    *extraout_R11_13 = uVar4;
    puVar3 = extraout_RAX_28;
    pvVar6 = extraout_RDI_24;
  }
  *puVar3 = &DAT_008b2b4f;
  local_25 = 5;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e3c0,(runtime_hmap *)local_20,&local_25,pvVar6)
  ;
  extraout_RAX_29[1] = 10;
  puVar3 = extraout_RAX_29;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier3();
    *extraout_R11_14 = extraout_RCX_01;
    extraout_R11_14[1] = local_20;
    extraout_R11_14[2] = vendor_golang_org_x_net_dns_dnsmessage_sectionNames;
    puVar3 = extraout_RAX_30;
  }
  *puVar3 = &DAT_008b3551;
  vendor_golang_org_x_net_dns_dnsmessage_sectionNames = local_20;
  return (int)puVar3;
}



// WARNING: Unknown calling convention

void vendor_golang_org_x_net_dns_dnsmessage_map_init_0(void)

{
  map_vendor_golang_org_x_net_dns_dnsmessage_Type_string h;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  undefined8 *extraout_RAX_07;
  undefined8 *extraout_RAX_08;
  undefined8 *extraout_RAX_09;
  undefined8 *extraout_RAX_10;
  undefined8 *extraout_RAX_11;
  undefined8 *extraout_RAX_12;
  undefined8 *extraout_RAX_13;
  undefined8 *extraout_RAX_14;
  undefined8 *extraout_RAX_15;
  undefined8 *extraout_RAX_16;
  undefined8 *extraout_RAX_17;
  undefined8 *extraout_RAX_18;
  undefined8 *extraout_RAX_19;
  undefined8 *extraout_RAX_20;
  undefined8 *extraout_RAX_21;
  undefined8 *extraout_RAX_22;
  undefined8 *extraout_RAX_23;
  undefined8 *extraout_RAX_24;
  undefined8 *extraout_RAX_25;
  undefined8 *extraout_RAX_26;
  undefined8 *extraout_RAX_27;
  undefined8 *extraout_RAX_28;
  undefined8 *puVar1;
  undefined8 extraout_RCX;
  undefined8 uVar2;
  runtime_hmap *in_RDI;
  void *~r0;
  void *extraout_RDI;
  void *extraout_RDI_00;
  void *extraout_RDI_01;
  void *extraout_RDI_02;
  void *extraout_RDI_03;
  void *extraout_RDI_04;
  void *extraout_RDI_05;
  void *extraout_RDI_06;
  void *extraout_RDI_07;
  void *extraout_RDI_08;
  void *extraout_RDI_09;
  void *extraout_RDI_10;
  void *extraout_RDI_11;
  void *extraout_RDI_12;
  void *extraout_RDI_13;
  void *extraout_RDI_14;
  void *extraout_RDI_15;
  void *extraout_RDI_16;
  void *extraout_RDI_17;
  void *extraout_RDI_18;
  void *extraout_RDI_19;
  void *extraout_RDI_20;
  void *extraout_RDI_21;
  void *extraout_RDI_22;
  void *extraout_RDI_23;
  void *extraout_RDI_24;
  void *extraout_RDI_25;
  void *extraout_RDI_26;
  void *pvVar3;
  runtime_hmap *extraout_RDI_27;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  undefined8 *extraout_R11_02;
  undefined8 *extraout_R11_03;
  undefined8 *extraout_R11_04;
  undefined8 *extraout_R11_05;
  undefined8 *extraout_R11_06;
  undefined8 *extraout_R11_07;
  undefined8 *extraout_R11_08;
  undefined8 *extraout_R11_09;
  undefined8 *extraout_R11_10;
  undefined8 *extraout_R11_11;
  undefined8 *extraout_R11_12;
  undefined8 *extraout_R11_13;
  int unaff_R14;
  undefined2 local_12;
  map_vendor_golang_org_x_net_dns_dnsmessage_Type_string local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI_27;
  }
  runtime_makemap((internal_abi_MapType *)&DAT_0082e360,0xf,(runtime_hmap *)0x0,in_RDI);
  local_12 = 1;
  local_10 = h;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e360,(runtime_hmap *)h,&local_12,~r0);
  extraout_RAX[1] = 5;
  puVar1 = extraout_RAX;
  pvVar3 = extraout_RDI;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar2 = *extraout_RAX;
    runtime_gcWriteBarrier1();
    *extraout_R11 = uVar2;
    puVar1 = extraout_RAX_00;
    pvVar3 = extraout_RDI_00;
  }
  *puVar1 = &DAT_008aeec1;
  local_12 = 2;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e360,(runtime_hmap *)local_10,&local_12,pvVar3)
  ;
  extraout_RAX_01[1] = 6;
  puVar1 = extraout_RAX_01;
  pvVar3 = extraout_RDI_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar2 = *extraout_RAX_01;
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = uVar2;
    puVar1 = extraout_RAX_02;
    pvVar3 = extraout_RDI_02;
  }
  *puVar1 = &DAT_008afb44;
  local_12 = 5;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e360,(runtime_hmap *)local_10,&local_12,pvVar3)
  ;
  extraout_RAX_03[1] = 9;
  puVar1 = extraout_RAX_03;
  pvVar3 = extraout_RDI_03;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar2 = *extraout_RAX_03;
    runtime_gcWriteBarrier1();
    *extraout_R11_01 = uVar2;
    puVar1 = extraout_RAX_04;
    pvVar3 = extraout_RDI_04;
  }
  *puVar1 = &DAT_008b2b58;
  local_12 = 6;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e360,(runtime_hmap *)local_10,&local_12,pvVar3)
  ;
  extraout_RAX_05[1] = 7;
  puVar1 = extraout_RAX_05;
  pvVar3 = extraout_RDI_05;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar2 = *extraout_RAX_05;
    runtime_gcWriteBarrier1();
    *extraout_R11_02 = uVar2;
    puVar1 = extraout_RAX_06;
    pvVar3 = extraout_RDI_06;
  }
  *puVar1 = &DAT_008b0cdf;
  local_12 = 0xc;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e360,(runtime_hmap *)local_10,&local_12,pvVar3)
  ;
  extraout_RAX_07[1] = 7;
  puVar1 = extraout_RAX_07;
  pvVar3 = extraout_RDI_07;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar2 = *extraout_RAX_07;
    runtime_gcWriteBarrier1();
    *extraout_R11_03 = uVar2;
    puVar1 = extraout_RAX_08;
    pvVar3 = extraout_RDI_08;
  }
  *puVar1 = &DAT_008b0ce6;
  local_12 = 0xf;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e360,(runtime_hmap *)local_10,&local_12,pvVar3)
  ;
  extraout_RAX_09[1] = 6;
  puVar1 = extraout_RAX_09;
  pvVar3 = extraout_RDI_09;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar2 = *extraout_RAX_09;
    runtime_gcWriteBarrier1();
    *extraout_R11_04 = uVar2;
    puVar1 = extraout_RAX_10;
    pvVar3 = extraout_RDI_10;
  }
  *puVar1 = &DAT_008afb4a;
  local_12 = 0x10;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e360,(runtime_hmap *)local_10,&local_12,pvVar3)
  ;
  extraout_RAX_11[1] = 7;
  puVar1 = extraout_RAX_11;
  pvVar3 = extraout_RDI_11;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar2 = *extraout_RAX_11;
    runtime_gcWriteBarrier1();
    *extraout_R11_05 = uVar2;
    puVar1 = extraout_RAX_12;
    pvVar3 = extraout_RDI_12;
  }
  *puVar1 = &DAT_008b0ced;
  local_12 = 0x1c;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e360,(runtime_hmap *)local_10,&local_12,pvVar3)
  ;
  extraout_RAX_13[1] = 8;
  puVar1 = extraout_RAX_13;
  pvVar3 = extraout_RDI_13;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar2 = *extraout_RAX_13;
    runtime_gcWriteBarrier1();
    *extraout_R11_06 = uVar2;
    puVar1 = extraout_RAX_14;
    pvVar3 = extraout_RDI_14;
  }
  *puVar1 = &DAT_008b1eee;
  local_12 = 0x21;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e360,(runtime_hmap *)local_10,&local_12,pvVar3)
  ;
  extraout_RAX_15[1] = 7;
  puVar1 = extraout_RAX_15;
  pvVar3 = extraout_RDI_15;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar2 = *extraout_RAX_15;
    runtime_gcWriteBarrier1();
    *extraout_R11_07 = uVar2;
    puVar1 = extraout_RAX_16;
    pvVar3 = extraout_RDI_16;
  }
  *puVar1 = &DAT_008b0cf4;
  local_12 = 0x29;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e360,(runtime_hmap *)local_10,&local_12,pvVar3)
  ;
  extraout_RAX_17[1] = 7;
  puVar1 = extraout_RAX_17;
  pvVar3 = extraout_RDI_17;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar2 = *extraout_RAX_17;
    runtime_gcWriteBarrier1();
    *extraout_R11_08 = uVar2;
    puVar1 = extraout_RAX_18;
    pvVar3 = extraout_RDI_18;
  }
  *puVar1 = &DAT_008b0cfb;
  local_12 = 0xb;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e360,(runtime_hmap *)local_10,&local_12,pvVar3)
  ;
  extraout_RAX_19[1] = 7;
  puVar1 = extraout_RAX_19;
  pvVar3 = extraout_RDI_19;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar2 = *extraout_RAX_19;
    runtime_gcWriteBarrier1();
    *extraout_R11_09 = uVar2;
    puVar1 = extraout_RAX_20;
    pvVar3 = extraout_RDI_20;
  }
  *puVar1 = &DAT_008b0d02;
  local_12 = 0xd;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e360,(runtime_hmap *)local_10,&local_12,pvVar3)
  ;
  extraout_RAX_21[1] = 9;
  puVar1 = extraout_RAX_21;
  pvVar3 = extraout_RDI_21;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar2 = *extraout_RAX_21;
    runtime_gcWriteBarrier1();
    *extraout_R11_10 = uVar2;
    puVar1 = extraout_RAX_22;
    pvVar3 = extraout_RDI_22;
  }
  *puVar1 = &DAT_008b2b61;
  local_12 = 0xe;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e360,(runtime_hmap *)local_10,&local_12,pvVar3)
  ;
  extraout_RAX_23[1] = 9;
  puVar1 = extraout_RAX_23;
  pvVar3 = extraout_RDI_23;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar2 = *extraout_RAX_23;
    runtime_gcWriteBarrier1();
    *extraout_R11_11 = uVar2;
    puVar1 = extraout_RAX_24;
    pvVar3 = extraout_RDI_24;
  }
  *puVar1 = &DAT_008b2b6a;
  local_12 = 0xfc;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e360,(runtime_hmap *)local_10,&local_12,pvVar3)
  ;
  extraout_RAX_25[1] = 8;
  puVar1 = extraout_RAX_25;
  pvVar3 = extraout_RDI_25;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar2 = *extraout_RAX_25;
    runtime_gcWriteBarrier1();
    *extraout_R11_12 = uVar2;
    puVar1 = extraout_RAX_26;
    pvVar3 = extraout_RDI_26;
  }
  *puVar1 = &DAT_008b1ef6;
  local_12 = 0xff;
  runtime_mapassign((internal_abi_MapType *)&DAT_0082e360,(runtime_hmap *)local_10,&local_12,pvVar3)
  ;
  extraout_RAX_27[1] = 7;
  puVar1 = extraout_RAX_27;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier3();
    *extraout_R11_13 = extraout_RCX;
    extraout_R11_13[1] = local_10;
    extraout_R11_13[2] = vendor_golang_org_x_net_dns_dnsmessage_typeNames;
    puVar1 = extraout_RAX_28;
  }
  *puVar1 = &DAT_008b0d09;
  vendor_golang_org_x_net_dns_dnsmessage_typeNames = local_10;
  return;
}



void type__eq_vendor_golang_org_x_net_dns_dnsmessage_nestedError
               (vendor_golang_org_x_net_dns_dnsmessage_nestedError *p,
               vendor_golang_org_x_net_dns_dnsmessage_nestedError *q,bool r)

{
  runtime_itab *tab;
  char extraout_AL;
  bool ~r0;
  int unaff_R14;
  vendor_golang_org_x_net_dns_dnsmessage_nestedError *pvStack0000000000000008;
  vendor_golang_org_x_net_dns_dnsmessage_nestedError *pvStack0000000000000010;
  
  pvStack0000000000000008 = p;
  pvStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((pvStack0000000000000010->s).len == (pvStack0000000000000008->s).len) &&
      (runtime_memequal(), extraout_AL != '\0')) &&
     (tab = (pvStack0000000000000008->err).tab, (pvStack0000000000000010->err).tab == tab)) {
    runtime_ifaceeq(tab,(pvStack0000000000000008->err).data,(pvStack0000000000000010->err).data,~r0)
    ;
  }
  return;
}



void vendor_golang_org_x_net_dns_dnsmessage___Type__GoString(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  vendor_golang_org_x_net_dns_dnsmessage_Type *in_RAX;
  int unaff_RBP;
  int unaff_R14;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (vendor_golang_org_x_net_dns_dnsmessage_Type *)~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xfffffffffffffff0;
  }
  if (in_RAX != (vendor_golang_org_x_net_dns_dnsmessage_Type *)0x0) {
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    vendor_golang_org_x_net_dns_dnsmessage_Type_GoString(*in_RAX,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void vendor_golang_org_x_net_dns_dnsmessage___Type__String(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  vendor_golang_org_x_net_dns_dnsmessage_Type *in_RAX;
  int unaff_RBP;
  int unaff_R14;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (vendor_golang_org_x_net_dns_dnsmessage_Type *)~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xfffffffffffffff0;
  }
  if (in_RAX != (vendor_golang_org_x_net_dns_dnsmessage_Type *)0x0) {
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    vendor_golang_org_x_net_dns_dnsmessage_Type_String(*in_RAX,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void vendor_golang_org_x_net_dns_dnsmessage___Class__GoString(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  vendor_golang_org_x_net_dns_dnsmessage_Class *in_RAX;
  int unaff_RBP;
  int unaff_R14;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (vendor_golang_org_x_net_dns_dnsmessage_Class *)~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xfffffffffffffff0;
  }
  if (in_RAX != (vendor_golang_org_x_net_dns_dnsmessage_Class *)0x0) {
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    vendor_golang_org_x_net_dns_dnsmessage_Class_GoString(*in_RAX,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void vendor_golang_org_x_net_dns_dnsmessage___Class__String(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  vendor_golang_org_x_net_dns_dnsmessage_Class *in_RAX;
  int unaff_RBP;
  int unaff_R14;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (vendor_golang_org_x_net_dns_dnsmessage_Class *)~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xfffffffffffffff0;
  }
  if (in_RAX != (vendor_golang_org_x_net_dns_dnsmessage_Class *)0x0) {
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    vendor_golang_org_x_net_dns_dnsmessage_Class_String(*in_RAX,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void vendor_golang_org_x_net_dns_dnsmessage___RCode__GoString(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  vendor_golang_org_x_net_dns_dnsmessage_RCode *in_RAX;
  int unaff_RBP;
  int unaff_R14;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (vendor_golang_org_x_net_dns_dnsmessage_RCode *)~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xfffffffffffffff0;
  }
  if (in_RAX != (vendor_golang_org_x_net_dns_dnsmessage_RCode *)0x0) {
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    vendor_golang_org_x_net_dns_dnsmessage_RCode_GoString(*in_RAX,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void vendor_golang_org_x_net_dns_dnsmessage___RCode__String(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  vendor_golang_org_x_net_dns_dnsmessage_RCode *in_RAX;
  int unaff_RBP;
  int unaff_R14;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (vendor_golang_org_x_net_dns_dnsmessage_RCode *)~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xfffffffffffffff0;
  }
  if (in_RAX != (vendor_golang_org_x_net_dns_dnsmessage_RCode *)0x0) {
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    vendor_golang_org_x_net_dns_dnsmessage_RCode_String(*in_RAX,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void vendor_golang_org_x_net_dns_dnsmessage___Name__String(string ~r0)

{
  string **ppsVar1;
  uint8 *in_RAX;
  int unaff_R14;
  string in_stack_fffffffffffffee0;
  uint8 local_108 [104];
  undefined local_a0 [151];
  byte local_9;
  
  while (local_a0 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xfffffffffffffee0;
  }
  if (in_RAX != (uint8 *)0x0) {
    FUN_0046d080();
    if (local_9 < 0x100) {
      runtime_slicebytetostring
                ((runtime_tmpBuf *)0x0,local_108,(uint)local_9,in_stack_fffffffffffffee0);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void type__eq_vendor_golang_org_x_net_dns_dnsmessage_ResourceHeader
               (vendor_golang_org_x_net_dns_dnsmessage_ResourceHeader *p,
               vendor_golang_org_x_net_dns_dnsmessage_ResourceHeader *q,bool r)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_memequal();
  return;
}



void type__eq_vendor_golang_org_x_net_dns_dnsmessage_Resource
               (vendor_golang_org_x_net_dns_dnsmessage_Resource *p,
               vendor_golang_org_x_net_dns_dnsmessage_Resource *q,bool r)

{
  runtime_itab *tab;
  char extraout_AL;
  uint uVar1;
  uint extraout_RCX;
  bool ~r0;
  int unaff_R14;
  vendor_golang_org_x_net_dns_dnsmessage_Resource *pvStack0000000000000008;
  vendor_golang_org_x_net_dns_dnsmessage_Resource *pvStack0000000000000010;
  
  uVar1 = (uint)r;
  pvStack0000000000000008 = p;
  pvStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    uVar1 = extraout_RCX;
  }
  type__eq_vendor_golang_org_x_net_dns_dnsmessage_ResourceHeader
            (&pvStack0000000000000008->Header,&pvStack0000000000000010->Header,SUB81(uVar1,0));
  if ((extraout_AL != '\0') &&
     (tab = (pvStack0000000000000008->Body).tab, (pvStack0000000000000010->Body).tab == tab)) {
    runtime_ifaceeq(tab,(pvStack0000000000000008->Body).data,(pvStack0000000000000010->Body).data,
                    ~r0);
  }
  return;
}



void internal_singleflight___Group__Do
               (internal_singleflight_Group *g,string key,func____interface_____error_ **fn,
               interface___ v,error err,bool shared)

{
  sync_WaitGroup *psVar1;
  dword dVar2;
  sync_WaitGroup *wg;
  runtime_hmap *~r0;
  runtime_hmap *extraout_RAX;
  map_string__internal_singleflight_call extraout_RAX_00;
  map_string__internal_singleflight_call extraout_RAX_01;
  map_string__internal_singleflight_call phVar3;
  sync_WaitGroup **extraout_RAX_02;
  internal_singleflight_call *c_1;
  internal_singleflight_call *c_00;
  internal_singleflight_call *c;
  internal_singleflight_call **extraout_RAX_03;
  internal_singleflight_call **extraout_RAX_04;
  internal_singleflight_call **ppiVar4;
  bool ok;
  sdword sVar5;
  int32 new;
  int32 new_1;
  void *~r0_00;
  map_string__internal_singleflight_call *extraout_R11;
  internal_singleflight_call **extraout_R11_00;
  int unaff_R14;
  string in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0 = (runtime_hmap *)0x0;
  LOCK();
  dVar2 = (g->mu).state;
  if (dVar2 == 0) {
    (g->mu).state = 1;
  }
  else {
    ~r0 = (runtime_hmap *)(uint)dVar2;
  }
  UNLOCK();
  if (dVar2 != 0) {
    sync___Mutex__lockSlow(&g->mu);
    ~r0 = extraout_RAX;
  }
  if (g->m == (map_string__internal_singleflight_call)0x0) {
    runtime_makemap_small(~r0);
    phVar3 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_01;
      extraout_R11[1] = g->m;
      phVar3 = extraout_RAX_01;
    }
    g->m = phVar3;
  }
  runtime_mapaccess2_faststr
            ((internal_abi_MapType *)&DAT_0082e420,(runtime_hmap *)g->m,in_stack_ffffffffffffffb8,fn
             ,shared);
  ok = SUB81(~r0_00,0);
  if (ok == false) {
    runtime_newobject((internal_abi_Type *)&DAT_0087fcc0,~r0_00);
    sync___WaitGroup__Add(&c_00->wg,1);
    runtime_mapassign_faststr
              ((internal_abi_MapType *)&DAT_0082e420,(runtime_hmap *)g->m,in_stack_ffffffffffffffb8,
               fn);
    ppiVar4 = extraout_RAX_03;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = c_00;
      extraout_R11_00[1] = *extraout_RAX_04;
      ppiVar4 = extraout_RAX_04;
    }
    *ppiVar4 = c_00;
    LOCK();
    sVar5 = (g->mu).state;
    (g->mu).state = (g->mu).state + -1;
    UNLOCK();
    sVar5 = sVar5 + -1;
    if (sVar5 != 0) {
      sync___Mutex__unlockSlow(&g->mu,sVar5);
    }
    internal_singleflight___Group__doCall(g,c_00,in_stack_ffffffffffffffb8,fn);
    return;
  }
  wg = *extraout_RAX_02;
  psVar1 = wg + 3;
  (psVar1->state).v = (psVar1->state).v + 1;
  LOCK();
  sVar5 = (g->mu).state;
  (g->mu).state = (g->mu).state + -1;
  UNLOCK();
  sVar5 = sVar5 + -1;
  if (sVar5 != 0) {
    sync___Mutex__unlockSlow(&g->mu,sVar5);
  }
  sync___WaitGroup__Wait(wg);
  return;
}



void internal_singleflight___Group__DoChan
               (internal_singleflight_Group *g,string key,func____interface_____error_ **fn,
               <_chan_internal_singleflight_Result ~r0)

{
  runtime_slice ~r0_00;
  bool ok;
  sdword sVar5;
  int32 new;
  dword dVar6;
  int32 new_1;
  int extraout_RAX;
  chan_internal_singleflight_Result ch;
  runtime_hmap *~r0_01;
  runtime_hmap *extraout_RAX_00;
  map_string__internal_singleflight_call extraout_RAX_01;
  map_string__internal_singleflight_call extraout_RAX_02;
  int *extraout_RAX_03;
  void *extraout_RAX_04;
  void *extraout_RAX_05;
  void *extraout_RAX_06;
  void *pvVar1;
  internal_singleflight_Group *extraout_RAX_07;
  internal_singleflight_call *c;
  map_string__internal_singleflight_call extraout_RAX_08;
  map_string__internal_singleflight_call extraout_RAX_09;
  map_string__internal_singleflight_call extraout_RAX_10;
  map_string__internal_singleflight_call phVar2;
  internal_singleflight_Group **extraout_RAX_11;
  internal_singleflight_Group **extraout_RAX_12;
  internal_singleflight_Group **ppiVar3;
  runtime_funcval *extraout_RAX_13;
  runtime_funcval *extraout_RAX_14;
  runtime_funcval *extraout_RAX_15;
  runtime_funcval *fn_00;
  undefined8 extraout_RCX;
  internal_singleflight_call *c_1;
  int iVar4;
  internal_singleflight_Group *wg;
  void *~r0_02;
  uint newLen;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  void *~r0_03;
  void *extraout_RBX_02;
  uintptr in_RDI;
  map_string__internal_singleflight_call *extraout_R11;
  void **extraout_R11_00;
  int *extraout_R11_01;
  int *extraout_R11_02;
  map_string__internal_singleflight_call *extraout_R11_03;
  internal_singleflight_Group **extraout_R11_04;
  internal_singleflight_Group **extraout_R11_05;
  undefined8 *extraout_R11_06;
  int unaff_R14;
  <_chan_internal_singleflight_Result phStack0000000000000018;
  uintptr uStack0000000000000020;
  string in_stack_ffffffffffffffa0;
  int in_stack_ffffffffffffffb0;
  
  phStack0000000000000018 = ~r0;
  uStack0000000000000020 = in_RDI;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_makechan((internal_abi_ChanType *)&DAT_0080c860,1,(runtime_hchan *)phStack0000000000000018
                  );
  ~r0_01 = (runtime_hmap *)0x0;
  LOCK();
  dVar6 = (g->mu).state;
  if (dVar6 == 0) {
    (g->mu).state = 1;
  }
  else {
    ~r0_01 = (runtime_hmap *)(uint)dVar6;
  }
  UNLOCK();
  if (dVar6 != 0) {
    sync___Mutex__lockSlow(&g->mu);
    ~r0_01 = extraout_RAX_00;
  }
  if (g->m == (map_string__internal_singleflight_call)0x0) {
    runtime_makemap_small(~r0_01);
    phVar2 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_02;
      extraout_R11[1] = g->m;
      phVar2 = extraout_RAX_02;
    }
    g->m = phVar2;
  }
  runtime_mapaccess2_faststr
            ((internal_abi_MapType *)&DAT_0082e420,(runtime_hmap *)g->m,in_stack_ffffffffffffffa0,fn
             ,SUB81(phStack0000000000000018,0));
  ok = SUB81(~r0_02,0);
  if (ok == false) {
    runtime_newobject((internal_abi_Type *)&DAT_0087fcc0,~r0_02);
    runtime_newobject((internal_abi_Type *)&DAT_008191c0,~r0_03);
    phVar2 = extraout_RAX_08;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_02 = extraout_RAX;
      phVar2 = extraout_RAX_09;
    }
    phVar2->count = extraout_RAX;
    extraout_RAX_07[4].mu.state = 1;
    extraout_RAX_07[4].mu.sema = 0;
    extraout_RAX_07[4].m = (map_string__internal_singleflight_call)&DAT_00000001;
    wg = extraout_RAX_07;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_03 = extraout_RAX_10;
      extraout_R11_03[1] = wg[3].m;
      phVar2 = extraout_RAX_10;
    }
    wg[3].m = phVar2;
    sync___WaitGroup__Add((sync_WaitGroup *)wg,1);
    runtime_mapassign_faststr
              ((internal_abi_MapType *)&DAT_0082e420,(runtime_hmap *)g->m,in_stack_ffffffffffffffa0,
               fn);
    ppiVar3 = extraout_RAX_11;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_04 = extraout_RAX_07;
      extraout_R11_04[1] = *extraout_RAX_12;
      ppiVar3 = extraout_RAX_12;
    }
    *ppiVar3 = extraout_RAX_07;
    LOCK();
    sVar5 = (g->mu).state;
    (g->mu).state = (g->mu).state + -1;
    UNLOCK();
    dVar6 = sVar5 - 1;
    pvVar1 = (void *)(uint)dVar6;
    if (dVar6 != 0) {
      sync___Mutex__unlockSlow(&g->mu,dVar6);
      pvVar1 = extraout_RBX_02;
    }
    runtime_newobject((internal_abi_Type *)&DAT_0087bb40,pvVar1);
    extraout_RAX_13->fn = (uintptr)internal_singleflight___Group__DoChan_func1;
    fn_00 = extraout_RAX_13;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_05 = g;
      extraout_R11_05[1] = extraout_RAX_07;
      fn_00 = extraout_RAX_14;
    }
    fn_00[1].fn = (uintptr)g;
    fn_00[2].fn = (uintptr)extraout_RAX_07;
    fn_00[4].fn = (uintptr)phStack0000000000000018;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_06 = fn;
      extraout_R11_06[1] = uStack0000000000000020;
      fn_00 = extraout_RAX_15;
    }
    fn_00[3].fn = (uintptr)fn;
    fn_00[5].fn = uStack0000000000000020;
    runtime_newproc(fn_00);
    return;
  }
  iVar4 = *extraout_RAX_03;
  *(int *)(iVar4 + 0x30) = *(int *)(iVar4 + 0x30) + 1;
  newLen = *(int *)(iVar4 + 0x40) + 1;
  pvVar1 = *(void **)(iVar4 + 0x38);
  if (*(uint *)(iVar4 + 0x48) < newLen) {
    ~r0_00.cap = in_stack_ffffffffffffffb0;
    ~r0_00.array = in_stack_ffffffffffffffa0.str;
    ~r0_00.len = in_stack_ffffffffffffffa0.len;
    runtime_growslice(pvVar1,newLen,*(uint *)(iVar4 + 0x48),1,(internal_abi_Type *)&DAT_0080c820,
                      ~r0_00);
    *(undefined8 *)(iVar4 + 0x48) = extraout_RCX;
    pvVar1 = extraout_RAX_04;
    newLen = extraout_RBX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RAX_05;
      extraout_R11_00[1] = *(void **)(iVar4 + 0x38);
      pvVar1 = extraout_RAX_05;
      newLen = extraout_RBX_00;
