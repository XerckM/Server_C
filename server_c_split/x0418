


void net___sysDialer__dialIP
               (net_sysDialer *sd,context_Context ctx,net_IPAddr *laddr,net_IPAddr *raddr,
               net_IPConn *~r0,error ~r1)

{
  context_Context ctx_00;
  context_Context ctx_01;
  string val;
  string network;
  string net;
  func_context_Context__string__string__syscall_RawConn__error **ctrlCtxFn_00;
  undefined8 extraout_RAX;
  net_netFD *fd;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *puVar1;
  runtime_itab *extraout_RCX;
  int proto;
  net_netFD *fd_00;
  int extraout_RBX;
  int extraout_RDI;
  undefined8 *extraout_R11;
  func_context_Context__string__string__syscall_RawConn__error **ctrlCtxFn;
  func_context_Context__string__string__syscall_RawConn__error **ppfVar2;
  int unaff_R14;
  runtime_itab *in_stack_ffffffffffffff68;
  void *in_stack_ffffffffffffff70;
  uint8 *in_stack_ffffffffffffff78;
  int in_stack_ffffffffffffff80;
  string in_stack_ffffffffffffff88;
  net_sockaddr in_stack_ffffffffffffff98;
  string in_stack_ffffffffffffffa8;
  error in_stack_ffffffffffffffb8;
  undefined local_18 [16];
  
  while (local_18 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ctx_00.data = in_stack_ffffffffffffff70;
  ctx_00.tab = in_stack_ffffffffffffff68;
  network.len = in_stack_ffffffffffffff80;
  network.str = in_stack_ffffffffffffff78;
  net_parseNetwork(ctx_00,network,SUB81(laddr,0),in_stack_ffffffffffffff88,(int)raddr,
                   in_stack_ffffffffffffff98);
  if (extraout_RDI != 0) {
    return;
  }
  if (fd_00 == (net_netFD *)0x2) {
    if (*(short *)ctrlCtxFn_00 == 0x7069) {
LAB_005ee6f5:
      ppfVar2 = (sd->Dialer).ControlContext;
      if ((ppfVar2 == (func_context_Context__string__string__syscall_RawConn__error **)0x0) &&
         ((sd->Dialer).Control != (func_string__string__syscall_RawConn__error **)0x0)) {
        local_18._8_8_ = sd;
        local_18._0_8_ = net___sysDialer__dialIP_func1;
        ppfVar2 = (func_context_Context__string__string__syscall_RawConn__error **)local_18;
      }
      ctx_01.data = &DAT_008ae5f7;
      ctx_01.tab = extraout_RCX;
      net.len = (int)ppfVar2;
      net.str = (uint8 *)0x4;
      net_internetSocket(ctx_01,net,(net_sockaddr)in_stack_ffffffffffffff88,
                         in_stack_ffffffffffffff98,(int)laddr,(int)raddr,in_stack_ffffffffffffffa8,
                         ctrlCtxFn_00,fd_00,in_stack_ffffffffffffffb8);
      if (extraout_RBX != 0) {
        return;
      }
      runtime_newobject((internal_abi_Type *)&DAT_0083fc60,(void *)0x0);
      puVar1 = extraout_RAX_00;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11 = extraout_RAX;
        puVar1 = extraout_RAX_01;
      }
      *puVar1 = extraout_RAX;
      return;
    }
  }
  else if ((fd_00 == (net_netFD *)&DAT_00000003) &&
          (((*(short *)ctrlCtxFn_00 == 0x7069 && (*(char *)((int)ctrlCtxFn_00 + 2) == '4')) ||
           ((*(short *)ctrlCtxFn_00 == 0x7069 && (*(char *)((int)ctrlCtxFn_00 + 2) == '6'))))))
  goto LAB_005ee6f5;
  val.len = (int)in_stack_ffffffffffffff70;
  val.str = (uint8 *)in_stack_ffffffffffffff68;
  runtime_convTstring(val,(sd->network).str);
  return;
}



void net___sysDialer__dialIP_func1
               (context_Context cxt,string network,string address,syscall_RawConn c,error ~r0)

{
  undefined8 in_RCX;
  int in_RDX;
  undefined8 in_RSI;
  undefined8 in_RDI;
  undefined8 in_R8;
  undefined8 in_R9;
  undefined8 in_R10;
  net_sysDialer *sd;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  (***(code ***)(*(int *)(in_RDX + 8) + 0x58))(in_RCX,in_RDI,in_RSI,in_R8,in_R9,in_R10);
  return;
}



void net___sysListener__listenIP
               (net_sysListener *sl,context_Context ctx,net_IPAddr *laddr,net_IPConn *~r0,error ~r1)

{
  context_Context ctx_00;
  context_Context ctx_01;
  string val;
  string network;
  string net;
  func_context_Context__string__string__syscall_RawConn__error **ctrlCtxFn_00;
  undefined8 extraout_RAX;
  net_netFD *fd;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *puVar1;
  runtime_itab *extraout_RCX;
  int proto;
  func_context_Context__string__string__syscall_RawConn__error **ctrlCtxFn;
  net_netFD *fd_00;
  int extraout_RBX;
  int extraout_RDI;
  undefined8 *extraout_R11;
  int unaff_R14;
  runtime_itab *in_stack_ffffffffffffff70;
  void *in_stack_ffffffffffffff78;
  uint8 *in_stack_ffffffffffffff80;
  int in_stack_ffffffffffffff88;
  string in_stack_ffffffffffffff90;
  net_sockaddr in_stack_ffffffffffffffa0;
  string in_stack_ffffffffffffffb0;
  error in_stack_ffffffffffffffc0;
  undefined local_18 [16];
  
  while (local_18 + 8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ctx_00.data = in_stack_ffffffffffffff78;
  ctx_00.tab = in_stack_ffffffffffffff70;
  network.len = in_stack_ffffffffffffff88;
  network.str = in_stack_ffffffffffffff80;
  net_parseNetwork(ctx_00,network,SUB81(laddr,0),in_stack_ffffffffffffff90,(int)~r0,
                   in_stack_ffffffffffffffa0);
  if (extraout_RDI != 0) {
    return;
  }
  if (fd_00 == (net_netFD *)0x2) {
    if (*(short *)ctrlCtxFn_00 == 0x7069) {
LAB_005ee9c6:
      if ((sl->ListenConfig).Control == (func_string__string__syscall_RawConn__error **)0x0) {
        ctrlCtxFn = (func_context_Context__string__string__syscall_RawConn__error **)0x0;
      }
      else {
        local_18._8_8_ = sl;
        local_18._0_8_ = net___sysListener__listenIP_func1;
        ctrlCtxFn = (func_context_Context__string__string__syscall_RawConn__error **)local_18;
      }
      ctx_01.data = 
      "listen.onionndots:sendtoip+netsocketacceptdomaingophertelnet Valuesysmontimersefenceselect, not object next= jobs= goid sweep  B -> % util alloc free  span= prev= list=, i =  code= addr= m->p= p->m=SCHED  curg=], sp= ctxt: min=  max= (...)\n base allow"
      ;
      ctx_01.tab = extraout_RCX;
      net.len = (int)ctrlCtxFn;
      net.str = &DAT_00000006;
      net_internetSocket(ctx_01,net,(net_sockaddr)in_stack_ffffffffffffff90,
                         in_stack_ffffffffffffffa0,(int)laddr,(int)~r0,in_stack_ffffffffffffffb0,
                         ctrlCtxFn_00,fd_00,in_stack_ffffffffffffffc0);
      if (extraout_RBX != 0) {
        return;
      }
      runtime_newobject((internal_abi_Type *)&DAT_0083fc60,(void *)0x0);
      puVar1 = extraout_RAX_00;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11 = extraout_RAX;
        puVar1 = extraout_RAX_01;
      }
      *puVar1 = extraout_RAX;
      return;
    }
  }
  else if ((fd_00 == (net_netFD *)&DAT_00000003) &&
          (((*(short *)ctrlCtxFn_00 == 0x7069 && (*(char *)((int)ctrlCtxFn_00 + 2) == '4')) ||
           ((*(short *)ctrlCtxFn_00 == 0x7069 && (*(char *)((int)ctrlCtxFn_00 + 2) == '6'))))))
  goto LAB_005ee9c6;
  val.len = (int)in_stack_ffffffffffffff78;
  val.str = (uint8 *)in_stack_ffffffffffffff70;
  runtime_convTstring(val,(sl->network).str);
  return;
}



void net___sysListener__listenIP_func1
               (context_Context cxt,string network,string address,syscall_RawConn c,error ~r0)

{
  undefined8 in_RCX;
  int in_RDX;
  undefined8 in_RSI;
  undefined8 in_RDI;
  undefined8 in_R8;
  undefined8 in_R9;
  undefined8 in_R10;
  net_sysListener *sl;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  (**(code **)**(undefined8 **)(in_RDX + 8))(in_RCX,in_RDI,in_RSI,in_R8,in_R9,in_R10);
  return;
}



void net_isIPv4(net_Addr addr,bool ~r0)

{
  undefined7 in_register_00000001;
  undefined1 *puVar1;
  int i_2;
  int i_1;
  int i;
  int *in_RBX;
  net_TCPAddr *addr_1;
  
  puVar1 = (undefined1 *)CONCAT71(in_register_00000001,~r0);
  if (puVar1 != (undefined1 *)0x0) {
    if (puVar1 == go_itab__net_TCPAddr_net_Addr) {
      if ((in_RBX[1] != 4) && (in_RBX[1] == 0x10)) {
        for (i = 0; (i < 10 && (*(char *)(i + *in_RBX) == '\0')); i = i + 1) {
        }
      }
      return;
    }
    if (puVar1 == go_itab__net_UDPAddr_net_Addr) {
      if ((in_RBX[1] != 4) && (in_RBX[1] == 0x10)) {
        for (i_1 = 0; (i_1 < 10 && (*(char *)(i_1 + *in_RBX) == '\0')); i_1 = i_1 + 1) {
        }
      }
      return;
    }
    if (puVar1 == go_itab__net_IPAddr_net_Addr) {
      if ((in_RBX[1] != 4) && (in_RBX[1] == 0x10)) {
        for (i_2 = 0; (i_2 < 10 && (*(char *)(i_2 + *in_RBX) == '\0')); i_2 = i_2 + 1) {
        }
      }
      return;
    }
  }
  return;
}



void net_addrList_partition
               (net_addrList addrs,func_net_Addr__bool **strategy,net_addrList primaries,
               net_addrList fallbacks)

{
  func_net_Addr__bool *pfVar1;
  func_net_Addr__bool *pfVar2;
  bool primaryLabel;
  bool label;
  dword dVar3;
  dword extraout_EAX;
  void *extraout_RAX;
  void *extraout_RAX_00;
  void *extraout_RAX_01;
  void *pvVar4;
  int iVar5;
  uint extraout_RCX;
  int extraout_RCX_00;
  uint extraout_RCX_01;
  int extraout_RCX_02;
  dword dVar6;
  int in_RBX;
  uint newLen;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint newLen_00;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  uint oldCap;
  code **in_RDI;
  uint extraout_R9;
  uint oldCap_00;
  int iVar7;
  int extraout_R10;
  uint extraout_R10_00;
  func_net_Addr__bool **extraout_R11;
  func_net_Addr__bool **extraout_R11_00;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffff60;
  int i;
  func_net_Addr__bool **local_20;
  void *local_18;
  void *local_10;
  
  while (&local_20 <= *(func_net_Addr__bool ****)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  oldCap = 0;
  local_18 = (void *)0x0;
  newLen = 0;
  oldCap_00 = 0;
  pvVar4 = (void *)0x0;
  newLen_00 = 0;
  dVar6 = 0;
  for (iVar5 = 0; iVar5 < in_RBX; iVar5 = iVar5 + 1) {
    pfVar1 = strategy[1];
    pfVar2 = *strategy;
    local_20 = strategy;
    local_10 = pvVar4;
    dVar3 = (**in_RDI)(pfVar2);
    if ((iVar5 == 0) || ((char)dVar3 == (char)dVar6)) {
      newLen = newLen + 1;
      pvVar4 = local_18;
      if (oldCap < newLen) {
        runtime_growslice(local_18,newLen,oldCap,1,(internal_abi_Type *)&DAT_0083c720,
                          in_stack_ffffffffffffff60);
        dVar3 = dVar3 & 0xff;
        pvVar4 = extraout_RAX;
        newLen = extraout_RBX;
        oldCap = extraout_RCX;
      }
      iVar7 = (newLen - 1) * 0x10;
      *(func_net_Addr__bool **)((int)pvVar4 + iVar7) = pfVar2;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = pfVar1;
        extraout_R11[1] = *(func_net_Addr__bool **)((int)pvVar4 + extraout_R10 + 8);
        iVar5 = extraout_RCX_00;
        newLen = extraout_RBX_00;
        oldCap = extraout_R9;
        iVar7 = extraout_R10;
        dVar3 = extraout_EAX;
      }
      local_18 = pvVar4;
      *(func_net_Addr__bool **)((int)local_18 + iVar7 + 8) = pfVar1;
      pvVar4 = local_10;
    }
    else {
      newLen_00 = newLen_00 + 1;
      pvVar4 = local_10;
      if (oldCap_00 < newLen_00) {
        runtime_growslice(local_10,newLen_00,oldCap_00,1,(internal_abi_Type *)&DAT_0083c720,
                          in_stack_ffffffffffffff60);
        pvVar4 = extraout_RAX_00;
        newLen_00 = extraout_RBX_01;
        oldCap_00 = extraout_RCX_01;
      }
      iVar7 = (newLen_00 - 1) * 0x10;
      *(func_net_Addr__bool **)((int)pvVar4 + iVar7) = pfVar2;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_00 = pfVar1;
        extraout_R11_00[1] = *(func_net_Addr__bool **)((int)extraout_RAX_01 + iVar7 + 8);
        pvVar4 = extraout_RAX_01;
        iVar5 = extraout_RCX_02;
        newLen_00 = extraout_RBX_02;
        oldCap_00 = extraout_R10_00;
      }
      *(func_net_Addr__bool **)((int)pvVar4 + iVar7 + 8) = pfVar1;
      dVar3 = dVar6 & 0xff;
    }
    strategy = local_20 + 2;
    dVar6 = dVar3;
  }
  return;
}



void net_filterAddrList(func_net_IPAddr__bool **filter,__net_IPAddr ips,
                       func_net_IPAddr__net_Addr **inetaddr,string originalAddr,net_addrList ~r0,
                       error ~r1)

{
  net_IPAddr nVar1;
  char cVar2;
  void *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *puVar3;
  int in_RCX;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint oldCap;
  int iVar4;
  void *oldPtr;
  uint extraout_RBX;
  undefined8 extraout_RBX_00;
  undefined8 uVar5;
  code **in_RSI;
  undefined8 in_R8;
  uint extraout_R8;
  uint newLen;
  undefined8 in_R9;
  int iVar6;
  int extraout_R9;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  int unaff_R14;
  undefined auVar7 [16];
  net_IP in_stack_ffffffffffffff50;
  string in_stack_ffffffffffffff68;
  net_IPAddr ip;
  
  while (&ip <= *(net_IPAddr **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  oldCap = 0;
  newLen = 0;
  oldPtr = (void *)0x0;
  for (iVar4 = 0; iVar4 < in_RCX; iVar4 = iVar4 + 1) {
    ip.IP.array = (uint8 *)*inetaddr;
    ip.IP.len._0_4_ = *(undefined4 *)(inetaddr + 1);
    ip.IP.len._4_4_ = *(undefined4 *)((int)inetaddr + 0xc);
    ip.IP.cap._0_4_ = *(undefined4 *)(inetaddr + 2);
    ip.IP.cap._4_4_ = *(undefined4 *)((int)inetaddr + 0x14);
    ip.Zone.str._0_4_ = *(undefined4 *)(inetaddr + 3);
    ip.Zone.str._4_4_ = *(undefined4 *)((int)inetaddr + 0x1c);
    ip.Zone.len._0_4_ = *(undefined4 *)(inetaddr + 4);
    ip.Zone.len._4_4_ = *(undefined4 *)((int)inetaddr + 0x24);
    if (filter == (func_net_IPAddr__bool **)0x0) {
      cVar2 = '\x01';
    }
    else {
      nVar1.Zone = in_stack_ffffffffffffff68;
      nVar1.IP = in_stack_ffffffffffffff50;
      cVar2 = (**filter)(nVar1,(bool *)ip.IP.array);
    }
    if (cVar2 != '\0') {
      newLen = newLen + 1;
      auVar7 = (**in_RSI)(ip.IP.array,CONCAT44(ip.IP.len._4_4_,(undefined4)ip.IP.len),
                          CONCAT44(ip.IP.cap._4_4_,(undefined4)ip.IP.cap),
                          CONCAT44(ip.Zone.str._4_4_,ip.Zone.str._0_4_),
                          CONCAT44(ip.Zone.len._4_4_,(undefined4)ip.Zone.len));
      uVar5 = auVar7._8_8_;
      if (oldCap < newLen) {
        runtime_growslice(oldPtr,newLen,oldCap,1,(internal_abi_Type *)&DAT_0083c720,
                          (runtime_slice)in_stack_ffffffffffffff50);
        oldCap = extraout_RCX;
        oldPtr = extraout_RAX;
        newLen = extraout_RBX;
      }
      iVar6 = (newLen - 1) * 0x10;
      *(int *)((int)oldPtr + iVar6) = auVar7._0_8_;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_RBX_00;
        extraout_R11[1] = *(undefined8 *)((int)oldPtr + extraout_R9 + 8);
        oldCap = extraout_RCX_00;
        uVar5 = extraout_RBX_00;
        newLen = extraout_R8;
        iVar6 = extraout_R9;
      }
      *(undefined8 *)((int)oldPtr + iVar6 + 8) = uVar5;
    }
    inetaddr = inetaddr + 5;
  }
  if (newLen != 0) {
    return;
  }
  auVar7 = (*(code *)(net_errNoSuitableAddress.tab)->fun[0])(net_errNoSuitableAddress.data);
  runtime_newobject((internal_abi_Type *)&DAT_0084eb20,auVar7._8_8_);
  extraout_RAX_00[1] = auVar7._8_8_;
  puVar3 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = auVar7._0_8_;
    puVar3 = extraout_RAX_01;
  }
  *puVar3 = auVar7._0_8_;
  puVar3[3] = in_R9;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_01 = in_R8;
    puVar3 = extraout_RAX_02;
  }
  puVar3[2] = in_R8;
  return;
}



void net_ipv4only(net_IPAddr addr,bool ~r0)

{
  undefined7 in_register_00000001;
  int i;
  int in_RBX;
  
  if ((in_RBX != 4) && (in_RBX == 0x10)) {
    for (i = 0; (i < 10 && (*(char *)(CONCAT71(in_register_00000001,~r0) + i) == '\0')); i = i + 1)
    {
    }
  }
  return;
}



void net_ipv6only(net_IPAddr addr,bool ~r0)

{
  undefined7 in_register_00000001;
  int i;
  int in_RBX;
  
  if (in_RBX == 0x10) {
    for (i = 0; (i < 10 && (*(char *)(CONCAT71(in_register_00000001,~r0) + i) == '\0')); i = i + 1)
    {
    }
  }
  return;
}



void net_SplitHostPort(string hostport,string host,string port,error err)

{
  byte bVar1;
  void *pvVar2;
  char *in_RAX;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  int end;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  undefined8 *puVar3;
  undefined8 *extraout_RAX_07;
  undefined8 *extraout_RAX_08;
  undefined8 *extraout_RAX_09;
  undefined8 *extraout_RAX_10;
  undefined8 *extraout_RAX_11;
  undefined8 *extraout_RAX_12;
  undefined8 *extraout_RAX_13;
  undefined8 *extraout_RAX_14;
  int j;
  void *in_RBX;
  int i_1;
  void *~r0;
  void *~r0_00;
  int k;
  void *~r0_01;
  void *~r0_02;
  int i;
  char **extraout_R11;
  char **extraout_R11_00;
  char **extraout_R11_01;
  char **extraout_R11_02;
  char **extraout_R11_03;
  char **extraout_R11_04;
  char **extraout_R11_05;
  char **extraout_R11_06;
  int unaff_R14;
  void *local_30;
  
  while (i = (int)in_RBX, &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  do {
    pvVar2 = (void *)i;
    i = (int)pvVar2 - 1;
    if (i < 0) goto LAB_005ef8e1;
  } while (in_RAX[i] != ':');
  if (-1 < i) {
    if (in_RBX == (void *)0x0) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (*in_RAX == '[') {
      internal_bytealg_IndexByteString();
      if ((int)local_30 < 0) {
        runtime_newobject((internal_abi_Type *)&DAT_0084eb20,~r0_00);
        extraout_RAX_11[1] = 0x16;
        *extraout_RAX_11 = &DAT_008b9d51;
        extraout_RAX_11[3] = in_RBX;
        puVar3 = extraout_RAX_11;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_05 = in_RAX;
          puVar3 = extraout_RAX_12;
        }
        puVar3[2] = in_RAX;
        return;
      }
      k = (int)local_30 + 1;
      if (in_RBX == (void *)k) {
        runtime_newobject((internal_abi_Type *)&DAT_0084eb20,(void *)k);
        extraout_RAX_09[1] = 0x17;
        *extraout_RAX_09 = &DAT_008ba7c0;
        extraout_RAX_09[3] = in_RBX;
        puVar3 = extraout_RAX_09;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_04 = in_RAX;
          puVar3 = extraout_RAX_10;
        }
        puVar3[2] = in_RAX;
        return;
      }
      if (i != k) {
        if (in_RBX <= (uint)k) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        bVar1 = in_RAX[(int)local_30 + 1];
        if (bVar1 != 0x3a) {
          runtime_newobject((internal_abi_Type *)&DAT_0084eb20,(void *)(uint)bVar1);
          extraout_RAX_07[1] = 0x17;
          *extraout_RAX_07 = &DAT_008ba7c0;
          extraout_RAX_07[3] = in_RBX;
          puVar3 = extraout_RAX_07;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier1();
            *extraout_R11_03 = in_RAX;
            puVar3 = extraout_RAX_08;
          }
          puVar3[2] = in_RAX;
          return;
        }
        runtime_newobject((internal_abi_Type *)&DAT_0084eb20,(void *)(uint)bVar1);
        extraout_RAX_05[1] = 0x1a;
        *extraout_RAX_05 = &DAT_008bc361;
        extraout_RAX_05[3] = in_RBX;
        puVar3 = extraout_RAX_05;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_02 = in_RAX;
          puVar3 = extraout_RAX_06;
        }
        puVar3[2] = in_RAX;
        return;
      }
      if (in_RBX < local_30) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAlen();
      }
      if (local_30 == (void *)0x0) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      j = 1;
    }
    else {
      if (in_RBX < (uint)i) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAlen();
      }
      internal_bytealg_IndexByteString();
      if (-1 < (int)local_30) {
        runtime_newobject((internal_abi_Type *)&DAT_0084eb20,~r0);
        extraout_RAX[1] = 0x1a;
        *extraout_RAX = &DAT_008bc361;
        extraout_RAX[3] = in_RBX;
        puVar3 = extraout_RAX;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11 = in_RAX;
          puVar3 = extraout_RAX_00;
        }
        puVar3[2] = in_RAX;
        return;
      }
      j = 0;
      k = 0;
    }
    if (in_RBX < (uint)j) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    internal_bytealg_IndexByteString();
    if (-1 < (int)local_30) {
      runtime_newobject((internal_abi_Type *)&DAT_0084eb20,~r0_01);
      extraout_RAX_03[1] = 0x19;
      *extraout_RAX_03 = &DAT_008bb992;
      extraout_RAX_03[3] = in_RBX;
      puVar3 = extraout_RAX_03;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_01 = in_RAX;
        puVar3 = extraout_RAX_04;
      }
      puVar3[2] = in_RAX;
      return;
    }
    if (in_RBX < (uint)k) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    internal_bytealg_IndexByteString();
    if (-1 < (int)local_30) {
      runtime_newobject((internal_abi_Type *)&DAT_0084eb20,~r0_02);
      extraout_RAX_01[1] = 0x19;
      *extraout_RAX_01 = &DAT_008bb9ab;
      extraout_RAX_01[3] = in_RBX;
      puVar3 = extraout_RAX_01;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_00 = in_RAX;
        puVar3 = extraout_RAX_02;
      }
      puVar3[2] = in_RAX;
      return;
    }
    if (in_RBX < pvVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    return;
  }
LAB_005ef8e1:
  runtime_newobject((internal_abi_Type *)&DAT_0084eb20,in_RBX);
  extraout_RAX_13[1] = 0x17;
  *extraout_RAX_13 = &DAT_008ba7c0;
  extraout_RAX_13[3] = in_RBX;
  puVar3 = extraout_RAX_13;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_06 = in_RAX;
    puVar3 = extraout_RAX_14;
  }
  puVar3[2] = in_RAX;
  return;
}



void net___Resolver__internetAddrList
               (net_Resolver *r,context_Context ctx,string net,string addr,net_addrList ~r0,
               error ~r1)

{
  net_IP ip;
  runtime_slice ~r0_00;
  __net_IPAddr ips;
  string host;
  string network;
  string network_00;
  string a1;
  string originalAddr;
  net_IP x;
  string port;
  string service;
  string host_00;
  string ~r0_01;
  net_addrList ~r0_02;
  __net_IPAddr ~r0_03;
  error ~r1_00;
  error ~r1_01;
  char extraout_AL;
  undefined8 extraout_RAX;
  void *extraout_RAX_00;
  int portnum;
  void **extraout_RAX_01;
  void **extraout_RAX_02;
  void **extraout_RAX_03;
  void **extraout_RAX_04;
  void **extraout_RAX_05;
  void **extraout_RAX_06;
  void **extraout_RAX_07;
  void **extraout_RAX_08;
  void **extraout_RAX_09;
  undefined8 *extraout_RAX_10;
  undefined8 *extraout_RAX_11;
  undefined8 *puVar1;
  func_net_IPAddr__net_Addr **extraout_RAX_12;
  func_net_IPAddr__net_Addr **extraout_RAX_13;
  void *x_00;
  undefined1 *puVar2;
  uint oldCap;
  char cVar3;
  void *pvVar4;
  int iVar5;
  void *in_RBX;
  int extraout_RBX;
  int extraout_RBX_00;
  void *extraout_RBX_01;
  void *extraout_RBX_02;
  void *extraout_RBX_03;
  void *extraout_RBX_04;
  void *extraout_RBX_05;
  void *extraout_RBX_06;
  void *~r0_04;
  int extraout_RBX_07;
  uint newLen;
  uint extraout_RBX_08;
  int in_RSI;
  int extraout_RSI;
  func_net_IPAddr__bool **filter;
  sdword *in_RDI;
  int extraout_RDI;
  undefined8 in_R8;
  int in_R9;
  void **extraout_R11;
  void **extraout_R11_00;
  void **extraout_R11_01;
  void **extraout_R11_02;
  void **extraout_R11_03;
  void **extraout_R11_04;
  int *extraout_R11_05;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_fffffffffffffee0;
  uint8 *in_stack_fffffffffffffef0;
  uint8 *in_stack_fffffffffffffef8;
  uint8 *in_stack_ffffffffffffff00;
  net_Addr *in_stack_ffffffffffffff08;
  error in_stack_ffffffffffffff10;
  runtime_itab *in_stack_ffffffffffffff20;
  runtime_itab *in_stack_ffffffffffffff28;
  void *in_stack_ffffffffffffff30;
  void **local_a0;
  func_net_IPAddr__net_Addr **local_98;
  undefined8 local_90;
  func_net_IPAddr__net_Addr **local_88;
  net_Resolver *local_80;
  code *local_78;
  void *local_70;
  void *local_60;
  void *local_58;
  void *pvStack_50;
  void *local_48;
  undefined local_40 [16];
  func_net_IPAddr__net_Addr *local_30;
  undefined4 uStack_28;
  undefined4 uStack_24;
  undefined4 local_20;
  undefined4 uStack_1c;
  undefined local_18 [8];
  undefined4 uStack_10;
  undefined4 uStack_c;
  
  while (&local_a0 <= *(void ****)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RSI == 2) {
    if (*(short *)in_RDI != 0x7069) goto LAB_005f00b7;
LAB_005efa47:
    iVar5 = 0;
    if (in_R9 != 0) {
      iVar5 = in_R9;
    }
    local_90 = 0;
    if (in_R9 != 0) {
      local_90 = in_R8;
    }
    pvVar4 = (void *)0x0;
  }
  else {
    if (in_RSI == 3) {
      if (*(char *)in_RDI < 'j') {
        if (((*(short *)in_RDI != 0x7069) || (*(char *)((int)in_RDI + 2) != '4')) &&
           ((*(short *)in_RDI != 0x7069 || (*(char *)((int)in_RDI + 2) != '6')))) goto LAB_005f00b7;
        goto LAB_005efa47;
      }
      if (((*(short *)in_RDI != 0x6374) || (*(char *)((int)in_RDI + 2) != 'p')) &&
         ((*(short *)in_RDI != 0x6475 || (*(char *)((int)in_RDI + 2) != 'p')))) {
LAB_005f00b7:
        runtime_convTstring((string)in_stack_fffffffffffffee0,in_RDI);
        return;
      }
    }
    else {
      if (in_RSI != 4) goto LAB_005f00b7;
      if (*(char *)in_RDI < 'u') {
        if ((*in_RDI != 0x34706374) && (*in_RDI != 0x36706374)) goto LAB_005f00b7;
      }
      else if ((*in_RDI != 0x34706475) && (*in_RDI != 0x36706475)) goto LAB_005f00b7;
    }
    if (in_R9 == 0) {
      pvVar4 = (void *)0x0;
      iVar5 = 0;
      local_90 = 0;
    }
    else {
      host.len = (int)in_stack_fffffffffffffef8;
      host.str = in_stack_fffffffffffffef0;
      port.len = (int)in_stack_ffffffffffffff08;
      port.str = in_stack_ffffffffffffff00;
      local_80 = r;
      net_SplitHostPort((string)in_stack_fffffffffffffee0,host,port,in_stack_ffffffffffffff10);
      if (extraout_RSI != 0) {
        return;
      }
      network.len = (int)in_stack_fffffffffffffef8;
      network.str = in_stack_fffffffffffffef0;
      service.len = (int)in_stack_ffffffffffffff08;
      service.str = in_stack_ffffffffffffff00;
      local_90 = extraout_RAX;
      net___Resolver__LookupPort
                (local_80,(context_Context)in_stack_fffffffffffffee0,network,service,(int)in_RBX,
                 in_stack_ffffffffffffff10);
      r = local_80;
      iVar5 = extraout_RBX;
      pvVar4 = extraout_RAX_00;
      if (extraout_RBX_00 != 0) {
        return;
      }
    }
  }
  local_78 = net___Resolver__internetAddrList_func1;
  local_70 = in_XMM15._0_8_;
  local_60 = pvVar4;
  if (iVar5 != 0) {
    network_00.len = (int)in_stack_fffffffffffffef8;
    network_00.str = in_stack_fffffffffffffef0;
    host_00.len = (int)in_stack_ffffffffffffff08;
    host_00.str = in_stack_ffffffffffffff00;
    ~r0_03.cap = (int)in_stack_ffffffffffffff20;
    ~r0_03.array = (net_IPAddr *)in_stack_ffffffffffffff10.tab;
    ~r0_03.len = (int)in_stack_ffffffffffffff10.data;
    ~r1_01.data = in_stack_ffffffffffffff30;
    ~r1_01.tab = in_stack_ffffffffffffff28;
    net___Resolver__lookupIPAddr
              (r,(context_Context)in_stack_fffffffffffffee0,network_00,host_00,~r0_03,~r1_01);
    if (extraout_RDI == 0) {
      iVar5 = extraout_RBX_07;
      if (extraout_RBX_07 == 1) {
        ip.cap = (int)in_stack_fffffffffffffef0;
        ip.array = (uint8 *)in_stack_fffffffffffffee0._type;
        ip.len = (int)in_stack_fffffffffffffee0.data;
        x.len = (int)in_stack_ffffffffffffff00;
        x.array = in_stack_fffffffffffffef8;
        x.cap = (int)in_stack_ffffffffffffff08;
        local_98 = extraout_RAX_12;
        net_IP_Equal(ip,x,SUB81(*extraout_RAX_12,0));
        local_88 = local_98;
        cVar3 = extraout_AL;
      }
      else {
        cVar3 = '\0';
        local_88 = extraout_RAX_12;
      }
      if (cVar3 != '\0') {
        newLen = iVar5 + 1;
        local_30 = (func_net_IPAddr__net_Addr *)net_IPv4zero.array;
        uStack_28 = (undefined4)net_IPv4zero.len;
        uStack_24 = (undefined4)((uint)net_IPv4zero.len >> 0x20);
        local_20 = (undefined4)net_IPv4zero.cap;
        uStack_1c = (undefined4)((uint)net_IPv4zero.cap >> 0x20);
        _local_18 = in_XMM15;
        if (oldCap < newLen) {
          ~r0_00.cap = (int)in_stack_fffffffffffffef0;
          ~r0_00.array = in_stack_fffffffffffffee0._type;
          ~r0_00.len = (int)in_stack_fffffffffffffee0.data;
          runtime_growslice(local_88,newLen,oldCap,1,(internal_abi_Type *)&DAT_0084e9e0,~r0_00);
          local_88 = extraout_RAX_13;
          newLen = extraout_RBX_08;
        }
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_wbMove((internal_abi_Type *)&DAT_0084e9e0,local_88 + newLen * 5 + -5,&local_30);
        }
        local_88[newLen * 5 + -5] = local_30;
        *(undefined4 *)(local_88 + newLen * 5 + -4) = uStack_28;
        *(undefined4 *)((int)local_88 + newLen * 0x28 + -0x1c) = uStack_24;
        *(undefined4 *)(local_88 + newLen * 5 + -3) = local_20;
        *(undefined4 *)((int)local_88 + newLen * 0x28 + -0x14) = uStack_1c;
        *(undefined4 *)(local_88 + newLen * 5 + -2) = local_18._0_4_;
        *(undefined4 *)((int)local_88 + newLen * 0x28 + -0xc) = local_18._4_4_;
        *(undefined4 *)(local_88 + newLen * 5 + -1) = uStack_10;
        *(undefined4 *)((int)local_88 + newLen * 0x28 + -4) = uStack_c;
      }
      if ((in_RSI == 0) || (*(char *)(in_RSI + -1 + (int)in_RDI) != '4')) {
        filter = (func_net_IPAddr__bool **)0x0;
      }
      else {
        filter = (func_net_IPAddr__bool **)&PTR_net_ipv4only_008eb138;
      }
      if ((in_RSI != 0) && (*(char *)(in_RSI + -1 + (int)in_RDI) == '6')) {
        filter = (func_net_IPAddr__bool **)&PTR_net_ipv6only_008eb140;
      }
      ips.cap = (int)in_stack_fffffffffffffef0;
      ips.array = (net_IPAddr *)in_stack_fffffffffffffee0._type;
      ips.len = (int)in_stack_fffffffffffffee0.data;
