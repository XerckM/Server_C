    if ((vendor_golang_org_x_net_dns_dnsmessage_ErrSectionDone.tab == tab) &&
       (runtime_ifaceeq(tab,pvVar5,vendor_golang_org_x_net_dns_dnsmessage_ErrSectionDone.data,~r0_09
                       ), pvVar5 = extraout_RBX_00, extraout_AL != '\0')) break;
    if (tab != (runtime_itab *)0x0) {
      runtime_newobject((internal_abi_Type *)&DAT_00885120,pvVar5);
      extraout_RAX_13[1] = 0x1c;
      *extraout_RAX_13 = &DAT_008bd661;
      extraout_RAX_13[3] = in_RSI;
      puVar2 = extraout_RAX_13;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_04 = in_RDI;
        puVar2 = extraout_RAX_14;
      }
      puVar2[2] = in_RDI;
      puVar2[5] = extraout_RBX;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_05 = extraout_RAX;
        puVar2 = extraout_RAX_15;
      }
      puVar2[4] = extraout_RAX;
      return;
    }
    if (local_3f8 == 0x10) {
      ~r0_02.TXT.array._4_4_ = in_stack_fffffffffffff944;
      ~r0_02.TXT.array._0_4_ = in_stack_fffffffffffff940;
      ~r0_02.TXT.len._0_4_ = in_stack_fffffffffffff948;
      ~r0_02.TXT.len._4_4_ = in_stack_fffffffffffff94c;
      ~r0_02.TXT.cap = (int)in_stack_fffffffffffff950;
      ~r1_00.data = in_stack_fffffffffffff960;
      ~r1_00.tab = in_stack_fffffffffffff958;
      vendor_golang_org_x_net_dns_dnsmessage___Parser__TXTResource(&p,~r0_02,~r1_00);
      if (extraout_RDI != 0) {
        runtime_newobject((internal_abi_Type *)&DAT_00885120,~r0_08);
        extraout_RAX_10[1] = 0x1c;
        *extraout_RAX_10 = &DAT_008bd661;
        extraout_RAX_10[3] = in_RSI;
        puVar2 = extraout_RAX_10;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_02 = in_RDI;
          puVar2 = extraout_RAX_11;
        }
        puVar2[2] = in_RDI;
        puVar2[5] = extraout_RBX;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_03 = extraout_RAX;
          puVar2 = extraout_RAX_12;
        }
        puVar2[4] = extraout_RAX;
        return;
      }
      cap = 0;
      pvVar5 = (void *)0x0;
      ppvVar3 = extraout_RAX_01;
      for (iVar4 = 0; iVar4 < (int)~r0_08; iVar4 = iVar4 + 1) {
        pvVar5 = ppvVar3[1];
        ppvVar3 = ppvVar3 + 2;
        cap = cap + (int)pvVar5;
      }
      runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,cap,pvVar5);
      ptr = extraout_RAX_02;
      ppvVar3 = extraout_RAX_01;
      n_00 = 0;
      pvVar5 = extraout_RDI_00;
      for (iVar4 = 0; iVar4 < (int)~r0_08; iVar4 = iVar4 + 1) {
        pvVar5 = ppvVar3[1];
        newLen_00 = (int)pvVar5 + n_00;
        __src = *ppvVar3;
        if (cap < newLen_00) {
          ~r0_04.array._4_4_ = in_stack_fffffffffffff944;
          ~r0_04.array._0_4_ = in_stack_fffffffffffff940;
          ~r0_04.len._0_4_ = in_stack_fffffffffffff948;
          ~r0_04.len._4_4_ = in_stack_fffffffffffff94c;
          ~r0_04.cap = (int)in_stack_fffffffffffff950;
          runtime_growslice(ptr,newLen_00,cap,(int)pvVar5,(internal_abi_Type *)&DAT_00807920,~r0_04)
          ;
          ptr = extraout_RAX_16;
          cap = extraout_RCX_02;
          newLen_00 = extraout_RBX_03;
        }
        runtime_memmove(ptr + n_00,__src,(size_t)pvVar5);
        ppvVar3 = ppvVar3 + 2;
        n_00 = newLen_00;
        pvVar5 = extraout_RDI_02;
      }
      if (newLen == 0) {
        runtime_makeslice((internal_abi_Type *)&DAT_008075e0,0,1,pvVar5);
        oldCap = 1;
        newLen = 0;
        oldPtr = extraout_RAX_03;
      }
      ~r0_01.str._4_4_ = in_stack_fffffffffffff944;
      ~r0_01.str._0_4_ = in_stack_fffffffffffff940;
      ~r0_01.len._0_4_ = in_stack_fffffffffffff948;
      ~r0_01.len._4_4_ = in_stack_fffffffffffff94c;
      runtime_slicebytetostring((runtime_tmpBuf *)0x0,ptr,n_00,~r0_01);
      newLen = newLen + 1;
      if (oldCap < newLen) {
        ~r0_03.array._4_4_ = in_stack_fffffffffffff944;
        ~r0_03.array._0_4_ = in_stack_fffffffffffff940;
        ~r0_03.len._0_4_ = in_stack_fffffffffffff948;
        ~r0_03.len._4_4_ = in_stack_fffffffffffff94c;
        ~r0_03.cap = (int)in_stack_fffffffffffff950;
        runtime_growslice(oldPtr,newLen,oldCap,1,(internal_abi_Type *)&DAT_008075e0,~r0_03);
        oldCap = extraout_RCX_00;
        newLen = extraout_RBX_02;
        oldPtr = extraout_RAX_05;
      }
      iVar4 = (newLen - 1) * 0x10;
      *(undefined8 *)((int)oldPtr + iVar4 + 8) = extraout_RBX_01;
      uVar1 = extraout_RAX_04;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_RAX_06;
        extraout_R11[1] = *(undefined8 *)((int)extraout_RSI + extraout_RDI_01);
        uVar1 = extraout_RAX_06;
        oldCap = extraout_RCX_01;
        oldPtr = extraout_RSI;
        iVar4 = extraout_RDI_01;
      }
      *(undefined8 *)((int)oldPtr + iVar4) = uVar1;
    }
    else {
      ~r0_00.tab._4_4_ = in_stack_fffffffffffff944;
      ~r0_00.tab._0_4_ = in_stack_fffffffffffff940;
      ~r0_00.data._0_4_ = in_stack_fffffffffffff948;
      ~r0_00.data._4_4_ = in_stack_fffffffffffff94c;
      vendor_golang_org_x_net_dns_dnsmessage___Parser__skipResource(&p,3,~r0_00);
      if (extraout_RAX_00 != 0) {
        runtime_newobject((internal_abi_Type *)&DAT_00885120,~r0_07);
        extraout_RAX_07[1] = 0x1c;
        *extraout_RAX_07 = &DAT_008bd661;
        extraout_RAX_07[3] = in_RSI;
        puVar2 = extraout_RAX_07;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_00 = in_RDI;
          puVar2 = extraout_RAX_08;
        }
        puVar2[2] = in_RDI;
        puVar2[5] = extraout_RBX;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_01 = extraout_RAX;
          puVar2 = extraout_RAX_09;
        }
        puVar2[4] = extraout_RAX;
        return;
      }
    }
  }
  return;
}



// WARNING: Unknown calling convention

void net_readProtocols(void)

{
  byte bVar1;
  void *~r0;
  string s;
  string s_00;
  string s_01;
  string ky;
  string s_02;
  string ky_00;
  string s_03;
  string t;
  __string ~r0_00;
  bool bVar2;
  net_file *f;
  net_file *file;
  uint8 *extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *puVar3;
  void **extraout_RAX_01;
  int *extraout_RAX_02;
  int iVar4;
  int *extraout_RAX_03;
  bool ok;
  undefined8 extraout_RCX;
  undefined8 extraout_RCX_00;
  undefined8 uVar5;
  int i;
  int extraout_RCX_01;
  bool ok_1;
  bool ok_2;
  bool ok_3;
  int extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint uVar6;
  int extraout_RBX_02;
  int extraout_RBX_03;
  int extraout_RBX_04;
  int iVar7;
  int extraout_RBX_05;
  int extraout_RBX_06;
  void **ppvVar8;
  int proto;
  int iVar9;
  int unaff_R14;
  uint8 *in_stack_ffffffffffffff58;
  int in_stack_ffffffffffffff60;
  uint uVar10;
  undefined uVar11;
  undefined7 in_stack_ffffffffffffff69;
  uint in_stack_ffffffffffffff70;
  undefined7 in_stack_ffffffffffffff78;
  undefined uVar12;
  int in_stack_ffffffffffffff80;
  int in_stack_ffffffffffffff88;
  void **local_28;
  undefined local_20 [16];
  code **local_10;
  
  while (&local_28 <= *(void ****)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  f = (net_file *)
      net_open("/etc/protocolsunknown mode:  on zero Valueunknown methoduserArenaStateread mem statsallocfreetracegcstoptheworldGC assist waitfinalizer waitsync.Cond.WaitSIGABRT: aborts.allocCount= key size wrongruntime: mmap(nil elem type! to finalizer GC worker initruntime: full=runtime: want=MB; allocated bad restart PC-thread limit\nstopm spinning nmidlelocked= needspinning=store64 failedsemaRoot queuebad allocCountbad span statestack overflow untyped args  out of range no module data in goroutine no such deviceis a directorytext file busyfile too largetoo many linkslevel 3 haltedlevel 2 haltedprotocol errortoo many usersunreachable:  reserved_rangefield_presenceunsafe.PointerALREADY_EXISTS\"OUT_OF_RANGE\"%s Channel #%dgrpc-trace-binunknown ID: %vAuthInfo: \'%s\'Content-Lengthaccept-charsetcontent-lengthNot AcceptableMAX_FRAME_SIZEPROTOCOL_ERRORINTERNAL_ERRORREFUSED_STREAMinvalid syntax1907348632812595367431640625show_sensitiveprefix length not an ip:portinvalid PrefixResourceHeaderRCodeNameErrormime/multipartinvalid kind: protobuf_oneofXXX_OneofFuncsneed more data/etc/ssl/certs\\.+*?()|[]{}^$LOGGER_UNKNOWNAccept-CharsetDkim-SignatureREQUEST_METHOD$htmltemplate_ /* %s */null formnovalidateprotobuf errorReservedRangesdata truncatedInstEmptyWidthunknown node: ApplyFunction;DifferentialD;DoubleLeftTee;DoubleUpArrow;LeftTeeVector;LeftVectorBar;LessFullEqual;LongLeftArrow;Longleftarrow;NotTildeEqual;NotTildeTilde;Poincareplane;PrecedesEqual;PrecedesTilde;RightArrowBar;RightTeeArrow;RightTriangle;RightUpVector;SucceedsEqual;SucceedsTilde;SupersetEqual;UpEquilibrium;VerticalTilde;VeryThinSpace;bigtriangleup;blacktriangle;divideontimes;fallingdotseq;hookleftarrow;leftarrowtail;leftharpoonup;longleftarrow;looparrowleft;measuredangle;ntriangleleft;shortparallel;smallsetminus;triangleright;upharpoonleft;NotEqualTilde;varsubsetneqq;varsupsetneqq;len of type %sFailed to servenegative offsetcopy_file_rangeduplicated nameGroup: bad kind: cannot parse ,M3.2.0,M11.1.0missing addressunknown networkinvalid address/etc/mdns.allowreflectlite.Setallocm..." /* TRUNCATED STRING LITERAL */
               ,0xe);
  if (extraout_RBX != 0) {
    return;
  }
  local_20._8_8_ = f;
  local_20._0_8_ = net_readProtocols_func1;
  local_10 = (code **)local_20;
  uVar12 = 1;
  s.len = in_stack_ffffffffffffff60;
  s.str = in_stack_ffffffffffffff58;
  net___file__readLine(f,s,false);
  puVar3 = extraout_RAX;
  uVar5 = extraout_RCX;
  uVar6 = extraout_RBX_00;
  do {
    if ((char)uVar5 == '\0') {
      (**local_10)();
      return;
    }
    uVar11 = 0x23;
    uVar10 = uVar6;
    internal_bytealg_IndexByteString();
    if ((-1 < (int)in_stack_ffffffffffffff70) && (uVar6 < in_stack_ffffffffffffff70)) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    s_01.len = uVar10;
    s_01.str = puVar3;
    t.str._1_7_ = in_stack_ffffffffffffff69;
    t.str._0_1_ = uVar11;
    t.len = in_stack_ffffffffffffff70;
    ~r0_00.array._7_1_ = uVar12;
    ~r0_00.array._0_7_ = in_stack_ffffffffffffff78;
    ~r0_00.len = in_stack_ffffffffffffff80;
    ~r0_00.cap = in_stack_ffffffffffffff88;
    net_splitAtBytes(s_01,t,~r0_00);
    iVar7 = extraout_RBX_02;
    if (1 < extraout_RBX_02) {
      proto = 0;
      for (iVar4 = 0;
          ((iVar4 < (int)extraout_RAX_01[3] &&
           (bVar1 = *(byte *)((int)extraout_RAX_01[2] + iVar4), 0x2f < bVar1)) && (bVar1 < 0x3a));
          iVar4 = iVar4 + 1) {
        proto = (uint)(byte)(bVar1 - 0x30) + proto * 10;
        if (0xfffffe < proto) {
          bVar2 = false;
          proto = 0xffffff;
          goto LAB_005f5de4;
        }
      }
      if (iVar4 == 0) {
        bVar2 = false;
        proto = 0;
      }
      else {
        bVar2 = true;
      }
LAB_005f5de4:
      if (bVar2) {
        ky.len = uVar10;
        ky.str = puVar3;
        in_stack_ffffffffffffff80 = extraout_RBX_02;
        in_stack_ffffffffffffff88 = extraout_RCX_01;
        runtime_mapaccess2_faststr
                  ((internal_abi_MapType *)&DAT_0082c560,(runtime_hmap *)net_protocols,ky,
                   *extraout_RAX_01,SUB81(extraout_RAX_01[1],0));
        ok_2 = SUB81(extraout_RBX_03,0);
        iVar7 = extraout_RBX_03;
        if (ok_2 == false) {
          s_02.len = uVar10;
          s_02.str = puVar3;
          runtime_mapassign_faststr
                    ((internal_abi_MapType *)&DAT_0082c560,(runtime_hmap *)net_protocols,s_02,
                     *extraout_RAX_01);
          *extraout_RAX_02 = proto;
          iVar7 = extraout_RBX_04;
        }
        ppvVar8 = (void **)((uint)((dword)(-(in_stack_ffffffffffffff88 + -2) >> 0x3f) & 0x20) +
                           (int)extraout_RAX_01);
        iVar9 = in_stack_ffffffffffffff80 + -2;
        for (iVar4 = 0; iVar4 < iVar9; iVar4 = iVar4 + 1) {
          ~r0 = *ppvVar8;
          ky_00.len = uVar10;
          ky_00.str = puVar3;
          local_28 = ppvVar8;
          runtime_mapaccess2_faststr
                    ((internal_abi_MapType *)&DAT_0082c560,(runtime_hmap *)net_protocols,ky_00,~r0,
                     SUB81(ppvVar8[1],0));
          ok_3 = SUB81(extraout_RBX_05,0);
          iVar7 = extraout_RBX_05;
          if (ok_3 == false) {
            s_03.len = uVar10;
            s_03.str = puVar3;
            runtime_mapassign_faststr
                      ((internal_abi_MapType *)&DAT_0082c560,(runtime_hmap *)net_protocols,s_03,~r0)
            ;
            *extraout_RAX_03 = proto;
            iVar7 = extraout_RBX_06;
          }
          ppvVar8 = local_28 + 2;
        }
      }
    }
    s_00.len = uVar10;
    s_00.str = puVar3;
    net___file__readLine(f,s_00,SUB81(iVar7,0));
    puVar3 = extraout_RAX_00;
    uVar5 = extraout_RCX_00;
    uVar6 = extraout_RBX_01;
  } while( true );
}



// WARNING: Unknown calling convention

void net_readProtocols_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  net___file__close(*(int *)(in_RDX + 8));
  return;
}



void net_lookupProtocol(string name,int ~r0,error ~r1)

{
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  unkbyte9 *in_RCX;
  int n;
  int proto;
  bool found;
  int i;
  void *~r0_00;
  uint8 b;
  int in_RDI;
  void **extraout_R11;
  int unaff_R14;
  undefined in_XMM15 [16];
  string in_stack_ffffffffffffffb0;
  unkbyte9 local_21;
  undefined7 uStack_18;
  unkbyte9 Stack_11;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (net_onceReadProtocols.done == 0) {
    sync___Once__doSlow(&net_onceReadProtocols,(func__ **)&PTR_net_readProtocols_008eb158);
  }
  local_21 = in_XMM15._0_9_;
  uStack_18 = in_XMM15._0_7_;
  Stack_11 = in_XMM15._7_9_;
  n = 0x19;
  if (in_RDI < 0x19) {
    n = in_RDI;
  }
  if (in_RCX != &local_21) {
    runtime_memmove(&local_21,in_RCX,n);
  }
  if (0x19 < (uint)n) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  for (i = 0; i < n; i = i + 1) {
    if ((byte)(*(char *)((int)&local_21 + i) + 0xbfU) < 0x1a) {
      *(char *)((int)&local_21 + i) = *(char *)((int)&local_21 + i) + ' ';
    }
  }
  runtime_mapaccess2_faststr
            ((internal_abi_MapType *)&DAT_0082c560,(runtime_hmap *)net_protocols,
             in_stack_ffffffffffffffb0,&local_21,SUB81(n,0));
  found = SUB81(~r0_00,0);
  if ((found == false) || (in_RDI != n)) {
    runtime_newobject((internal_abi_Type *)&DAT_0084eb20,~r0_00);
    extraout_RAX[1] = 0x1d;
    *extraout_RAX = &DAT_008be005;
    extraout_RAX[3] = in_RDI;
    puVar1 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = in_RCX;
      puVar1 = extraout_RAX_00;
    }
    puVar1[2] = in_RCX;
  }
  return;
}



void net___Resolver__lookupHost
               (net_Resolver *r,context_Context ctx,string host,__string addrs,error err)

{
  error err_00;
  error err_01;
  int extraout_RAX;
  net_hostLookupOrder order;
  net_dnsConfig *in_RCX;
  net_hostLookupOrder in_RBX;
  net_dnsConfig *conf;
  void *unaff_RBP;
  net_hostLookupOrder in_RSI;
  net_hostLookupOrder in_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffffb8;
  string in_stack_ffffffffffffffc8;
  __string in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (net_confOnce.done == 0) {
    sync___Once__doSlow(&net_confOnce,(func__ **)&PTR_net_initConfVal_008eb120);
  }
  net___conf__hostLookupOrder
            (net_confVal,r,in_stack_ffffffffffffffb8,in_RDI,in_RSI,(net_dnsConfig *)in_RSI);
  if (extraout_RAX == 0) {
    err_00.data = unaff_RBP;
    err_00.tab = (runtime_itab *)r;
    net_cgoLookupHost((context_Context)in_stack_ffffffffffffffb8,in_stack_ffffffffffffffc8,
                      in_stack_ffffffffffffffd8,err_00);
    return;
  }
  err_01.data = unaff_RBP;
  err_01.tab = (runtime_itab *)r;
  net___Resolver__goLookupHostOrder
            (r,(context_Context)in_stack_ffffffffffffffb8,in_stack_ffffffffffffffc8,in_RBX,in_RCX,
             in_stack_ffffffffffffffd8,err_01);
  return;
}



void net___Resolver__lookupIP
               (net_Resolver *r,context_Context ctx,string network,string host,__net_IPAddr addrs,
               error err)

{
  vendor_golang_org_x_net_dns_dnsmessage_Name cname;
  int extraout_RAX;
  net_hostLookupOrder order;
  net_dnsConfig *in_RCX;
  net_hostLookupOrder in_RBX;
  net_dnsConfig *conf;
  net_dnsConfig *in_RSI;
  net_dnsConfig *extraout_RSI;
  net_hostLookupOrder in_R8;
  net_hostLookupOrder in_R9;
  int unaff_R14;
  string in_stack_fffffffffffffdb0;
  string in_stack_fffffffffffffdc0;
  string in_stack_fffffffffffffdd0;
  __net_IPAddr in_stack_fffffffffffffde0;
  error in_stack_fffffffffffffdf8;
  undefined in_stack_fffffffffffffe08 [240];
  error in_stack_fffffffffffffef8;
  
  while (&stack0xfffffffffffffe30 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((r != (net_Resolver *)0x0) && (r->PreferGo != false)) {
    net___Resolver__goLookupIP
              (r,(context_Context)in_stack_fffffffffffffdb0,in_stack_fffffffffffffdc0,
               in_stack_fffffffffffffdd0,in_stack_fffffffffffffde0,in_stack_fffffffffffffdf8);
    return;
  }
  if (net_confOnce.done == 0) {
    sync___Once__doSlow(&net_confOnce,(func__ **)&PTR_net_initConfVal_008eb120);
    in_RSI = extraout_RSI;
  }
  net___conf__hostLookupOrder(net_confVal,r,in_stack_fffffffffffffdb0,in_R8,in_R9,in_RSI);
  if (extraout_RAX == 0) {
    net_cgoLookupIP((context_Context)in_stack_fffffffffffffdb0,in_stack_fffffffffffffdc0,
                    in_stack_fffffffffffffdd0,in_stack_fffffffffffffde0,in_stack_fffffffffffffdf8);
    return;
  }
  cname.Data[16] = in_stack_fffffffffffffe08[0];
  cname.Data[17] = in_stack_fffffffffffffe08[1];
  cname.Data[18] = in_stack_fffffffffffffe08[2];
  cname.Data[19] = in_stack_fffffffffffffe08[3];
  cname.Data[20] = in_stack_fffffffffffffe08[4];
  cname.Data[21] = in_stack_fffffffffffffe08[5];
  cname.Data[22] = in_stack_fffffffffffffe08[6];
  cname.Data[23] = in_stack_fffffffffffffe08[7];
  cname.Data[24] = in_stack_fffffffffffffe08[8];
  cname.Data[25] = in_stack_fffffffffffffe08[9];
  cname.Data[26] = in_stack_fffffffffffffe08[10];
  cname.Data[27] = in_stack_fffffffffffffe08[11];
  cname.Data[28] = in_stack_fffffffffffffe08[12];
  cname.Data[29] = in_stack_fffffffffffffe08[13];
  cname.Data[30] = in_stack_fffffffffffffe08[14];
  cname.Data[31] = in_stack_fffffffffffffe08[15];
  cname.Data[32] = in_stack_fffffffffffffe08[16];
  cname.Data[33] = in_stack_fffffffffffffe08[17];
  cname.Data[34] = in_stack_fffffffffffffe08[18];
  cname.Data[35] = in_stack_fffffffffffffe08[19];
  cname.Data[36] = in_stack_fffffffffffffe08[20];
  cname.Data[37] = in_stack_fffffffffffffe08[21];
  cname.Data[38] = in_stack_fffffffffffffe08[22];
  cname.Data[39] = in_stack_fffffffffffffe08[23];
  cname.Data[40] = in_stack_fffffffffffffe08[24];
  cname.Data[41] = in_stack_fffffffffffffe08[25];
  cname.Data[42] = in_stack_fffffffffffffe08[26];
  cname.Data[43] = in_stack_fffffffffffffe08[27];
  cname.Data[44] = in_stack_fffffffffffffe08[28];
  cname.Data[45] = in_stack_fffffffffffffe08[29];
  cname.Data[46] = in_stack_fffffffffffffe08[30];
  cname.Data[47] = in_stack_fffffffffffffe08[31];
  cname.Data[48] = in_stack_fffffffffffffe08[32];
  cname.Data[49] = in_stack_fffffffffffffe08[33];
  cname.Data[50] = in_stack_fffffffffffffe08[34];
  cname.Data[51] = in_stack_fffffffffffffe08[35];
  cname.Data[52] = in_stack_fffffffffffffe08[36];
  cname.Data[53] = in_stack_fffffffffffffe08[37];
  cname.Data[54] = in_stack_fffffffffffffe08[38];
  cname.Data[55] = in_stack_fffffffffffffe08[39];
  cname.Data[56] = in_stack_fffffffffffffe08[40];
  cname.Data[57] = in_stack_fffffffffffffe08[41];
  cname.Data[58] = in_stack_fffffffffffffe08[42];
  cname.Data[59] = in_stack_fffffffffffffe08[43];
  cname.Data[60] = in_stack_fffffffffffffe08[44];
  cname.Data[61] = in_stack_fffffffffffffe08[45];
  cname.Data[62] = in_stack_fffffffffffffe08[46];
  cname.Data[63] = in_stack_fffffffffffffe08[47];
  cname.Data[64] = in_stack_fffffffffffffe08[48];
  cname.Data[65] = in_stack_fffffffffffffe08[49];
  cname.Data[66] = in_stack_fffffffffffffe08[50];
  cname.Data[67] = in_stack_fffffffffffffe08[51];
  cname.Data[68] = in_stack_fffffffffffffe08[52];
  cname.Data[69] = in_stack_fffffffffffffe08[53];
  cname.Data[70] = in_stack_fffffffffffffe08[54];
  cname.Data[71] = in_stack_fffffffffffffe08[55];
  cname.Data[72] = in_stack_fffffffffffffe08[56];
  cname.Data[73] = in_stack_fffffffffffffe08[57];
  cname.Data[74] = in_stack_fffffffffffffe08[58];
  cname.Data[75] = in_stack_fffffffffffffe08[59];
  cname.Data[76] = in_stack_fffffffffffffe08[60];
  cname.Data[77] = in_stack_fffffffffffffe08[61];
  cname.Data[78] = in_stack_fffffffffffffe08[62];
  cname.Data[79] = in_stack_fffffffffffffe08[63];
  cname.Data[80] = in_stack_fffffffffffffe08[64];
  cname.Data[81] = in_stack_fffffffffffffe08[65];
  cname.Data[82] = in_stack_fffffffffffffe08[66];
  cname.Data[83] = in_stack_fffffffffffffe08[67];
  cname.Data[84] = in_stack_fffffffffffffe08[68];
  cname.Data[85] = in_stack_fffffffffffffe08[69];
  cname.Data[86] = in_stack_fffffffffffffe08[70];
  cname.Data[87] = in_stack_fffffffffffffe08[71];
  cname.Data[88] = in_stack_fffffffffffffe08[72];
  cname.Data[89] = in_stack_fffffffffffffe08[73];
  cname.Data[90] = in_stack_fffffffffffffe08[74];
  cname.Data[91] = in_stack_fffffffffffffe08[75];
  cname.Data[92] = in_stack_fffffffffffffe08[76];
  cname.Data[93] = in_stack_fffffffffffffe08[77];
  cname.Data[94] = in_stack_fffffffffffffe08[78];
  cname.Data[95] = in_stack_fffffffffffffe08[79];
  cname.Data[96] = in_stack_fffffffffffffe08[80];
  cname.Data[97] = in_stack_fffffffffffffe08[81];
  cname.Data[98] = in_stack_fffffffffffffe08[82];
  cname.Data[99] = in_stack_fffffffffffffe08[83];
  cname.Data[100] = in_stack_fffffffffffffe08[84];
  cname.Data[101] = in_stack_fffffffffffffe08[85];
  cname.Data[102] = in_stack_fffffffffffffe08[86];
  cname.Data[103] = in_stack_fffffffffffffe08[87];
  cname.Data[104] = in_stack_fffffffffffffe08[88];
  cname.Data[105] = in_stack_fffffffffffffe08[89];
  cname.Data[106] = in_stack_fffffffffffffe08[90];
  cname.Data[107] = in_stack_fffffffffffffe08[91];
  cname.Data[108] = in_stack_fffffffffffffe08[92];
  cname.Data[109] = in_stack_fffffffffffffe08[93];
  cname.Data[110] = in_stack_fffffffffffffe08[94];
  cname.Data[111] = in_stack_fffffffffffffe08[95];
  cname.Data[112] = in_stack_fffffffffffffe08[96];
  cname.Data[113] = in_stack_fffffffffffffe08[97];
  cname.Data[114] = in_stack_fffffffffffffe08[98];
  cname.Data[115] = in_stack_fffffffffffffe08[99];
  cname.Data[116] = in_stack_fffffffffffffe08[100];
  cname.Data[117] = in_stack_fffffffffffffe08[101];
  cname.Data[118] = in_stack_fffffffffffffe08[102];
  cname.Data[119] = in_stack_fffffffffffffe08[103];
  cname.Data[120] = in_stack_fffffffffffffe08[104];
  cname.Data[121] = in_stack_fffffffffffffe08[105];
  cname.Data[122] = in_stack_fffffffffffffe08[106];
  cname.Data[123] = in_stack_fffffffffffffe08[107];
  cname.Data[124] = in_stack_fffffffffffffe08[108];
  cname.Data[125] = in_stack_fffffffffffffe08[109];
  cname.Data[126] = in_stack_fffffffffffffe08[110];
  cname.Data[127] = in_stack_fffffffffffffe08[111];
  cname.Data[128] = in_stack_fffffffffffffe08[112];
  cname.Data[129] = in_stack_fffffffffffffe08[113];
  cname.Data[130] = in_stack_fffffffffffffe08[114];
  cname.Data[131] = in_stack_fffffffffffffe08[115];
  cname.Data[132] = in_stack_fffffffffffffe08[116];
  cname.Data[133] = in_stack_fffffffffffffe08[117];
  cname.Data[134] = in_stack_fffffffffffffe08[118];
  cname.Data[135] = in_stack_fffffffffffffe08[119];
  cname.Data[136] = in_stack_fffffffffffffe08[120];
  cname.Data[137] = in_stack_fffffffffffffe08[121];
  cname.Data[138] = in_stack_fffffffffffffe08[122];
  cname.Data[139] = in_stack_fffffffffffffe08[123];
  cname.Data[140] = in_stack_fffffffffffffe08[124];
  cname.Data[141] = in_stack_fffffffffffffe08[125];
  cname.Data[142] = in_stack_fffffffffffffe08[126];
  cname.Data[143] = in_stack_fffffffffffffe08[127];
  cname.Data[144] = in_stack_fffffffffffffe08[128];
  cname.Data[145] = in_stack_fffffffffffffe08[129];
  cname.Data[146] = in_stack_fffffffffffffe08[130];
  cname.Data[147] = in_stack_fffffffffffffe08[131];
  cname.Data[148] = in_stack_fffffffffffffe08[132];
  cname.Data[149] = in_stack_fffffffffffffe08[133];
  cname.Data[150] = in_stack_fffffffffffffe08[134];
  cname.Data[151] = in_stack_fffffffffffffe08[135];
  cname.Data[152] = in_stack_fffffffffffffe08[136];
  cname.Data[153] = in_stack_fffffffffffffe08[137];
  cname.Data[154] = in_stack_fffffffffffffe08[138];
  cname.Data[155] = in_stack_fffffffffffffe08[139];
  cname.Data[156] = in_stack_fffffffffffffe08[140];
  cname.Data[157] = in_stack_fffffffffffffe08[141];
  cname.Data[158] = in_stack_fffffffffffffe08[142];
  cname.Data[159] = in_stack_fffffffffffffe08[143];
  cname.Data[160] = in_stack_fffffffffffffe08[144];
  cname.Data[161] = in_stack_fffffffffffffe08[145];
  cname.Data[162] = in_stack_fffffffffffffe08[146];
  cname.Data[163] = in_stack_fffffffffffffe08[147];
  cname.Data[164] = in_stack_fffffffffffffe08[148];
  cname.Data[165] = in_stack_fffffffffffffe08[149];
  cname.Data[166] = in_stack_fffffffffffffe08[150];
  cname.Data[167] = in_stack_fffffffffffffe08[151];
  cname.Data[168] = in_stack_fffffffffffffe08[152];
  cname.Data[169] = in_stack_fffffffffffffe08[153];
  cname.Data[170] = in_stack_fffffffffffffe08[154];
  cname.Data[171] = in_stack_fffffffffffffe08[155];
  cname.Data[172] = in_stack_fffffffffffffe08[156];
  cname.Data[173] = in_stack_fffffffffffffe08[157];
  cname.Data[174] = in_stack_fffffffffffffe08[158];
  cname.Data[175] = in_stack_fffffffffffffe08[159];
  cname.Data[176] = in_stack_fffffffffffffe08[160];
  cname.Data[177] = in_stack_fffffffffffffe08[161];
  cname.Data[178] = in_stack_fffffffffffffe08[162];
  cname.Data[179] = in_stack_fffffffffffffe08[163];
  cname.Data[180] = in_stack_fffffffffffffe08[164];
  cname.Data[181] = in_stack_fffffffffffffe08[165];
  cname.Data[182] = in_stack_fffffffffffffe08[166];
  cname.Data[183] = in_stack_fffffffffffffe08[167];
  cname.Data[184] = in_stack_fffffffffffffe08[168];
  cname.Data[185] = in_stack_fffffffffffffe08[169];
  cname.Data[186] = in_stack_fffffffffffffe08[170];
  cname.Data[187] = in_stack_fffffffffffffe08[171];
  cname.Data[188] = in_stack_fffffffffffffe08[172];
  cname.Data[189] = in_stack_fffffffffffffe08[173];
  cname.Data[190] = in_stack_fffffffffffffe08[174];
  cname.Data[191] = in_stack_fffffffffffffe08[175];
  cname.Data[192] = in_stack_fffffffffffffe08[176];
  cname.Data[193] = in_stack_fffffffffffffe08[177];
  cname.Data[194] = in_stack_fffffffffffffe08[178];
  cname.Data[195] = in_stack_fffffffffffffe08[179];
  cname.Data[196] = in_stack_fffffffffffffe08[180];
  cname.Data[197] = in_stack_fffffffffffffe08[181];
  cname.Data[198] = in_stack_fffffffffffffe08[182];
  cname.Data[199] = in_stack_fffffffffffffe08[183];
  cname.Data[200] = in_stack_fffffffffffffe08[184];
  cname.Data[201] = in_stack_fffffffffffffe08[185];
  cname.Data[202] = in_stack_fffffffffffffe08[186];
  cname.Data[203] = in_stack_fffffffffffffe08[187];
  cname.Data[204] = in_stack_fffffffffffffe08[188];
  cname.Data[205] = in_stack_fffffffffffffe08[189];
  cname.Data[206] = in_stack_fffffffffffffe08[190];
  cname.Data[207] = in_stack_fffffffffffffe08[191];
  cname.Data[208] = in_stack_fffffffffffffe08[192];
  cname.Data[209] = in_stack_fffffffffffffe08[193];
  cname.Data[210] = in_stack_fffffffffffffe08[194];
  cname.Data[211] = in_stack_fffffffffffffe08[195];
  cname.Data[212] = in_stack_fffffffffffffe08[196];
  cname.Data[213] = in_stack_fffffffffffffe08[197];
  cname.Data[214] = in_stack_fffffffffffffe08[198];
  cname.Data[215] = in_stack_fffffffffffffe08[199];
  cname.Data[216] = in_stack_fffffffffffffe08[200];
  cname.Data[217] = in_stack_fffffffffffffe08[201];
  cname.Data[218] = in_stack_fffffffffffffe08[202];
  cname.Data[219] = in_stack_fffffffffffffe08[203];
  cname.Data[220] = in_stack_fffffffffffffe08[204];
  cname.Data[221] = in_stack_fffffffffffffe08[205];
  cname.Data[222] = in_stack_fffffffffffffe08[206];
  cname.Data[223] = in_stack_fffffffffffffe08[207];
  cname.Data[224] = in_stack_fffffffffffffe08[208];
  cname.Data[225] = in_stack_fffffffffffffe08[209];
  cname.Data[226] = in_stack_fffffffffffffe08[210];
  cname.Data[227] = in_stack_fffffffffffffe08[211];
  cname.Data[228] = in_stack_fffffffffffffe08[212];
  cname.Data[229] = in_stack_fffffffffffffe08[213];
  cname.Data[230] = in_stack_fffffffffffffe08[214];
  cname.Data[231] = in_stack_fffffffffffffe08[215];
  cname.Data[232] = in_stack_fffffffffffffe08[216];
  cname.Data[233] = in_stack_fffffffffffffe08[217];
  cname.Data[234] = in_stack_fffffffffffffe08[218];
  cname.Data[235] = in_stack_fffffffffffffe08[219];
  cname.Data[236] = in_stack_fffffffffffffe08[220];
  cname.Data[237] = in_stack_fffffffffffffe08[221];
  cname.Data[238] = in_stack_fffffffffffffe08[222];
  cname.Data[239] = in_stack_fffffffffffffe08[223];
  cname.Data[240] = in_stack_fffffffffffffe08[224];
  cname.Data[241] = in_stack_fffffffffffffe08[225];
  cname.Data[242] = in_stack_fffffffffffffe08[226];
  cname.Data[243] = in_stack_fffffffffffffe08[227];
  cname.Data[244] = in_stack_fffffffffffffe08[228];
  cname.Data[245] = in_stack_fffffffffffffe08[229];
  cname.Data[246] = in_stack_fffffffffffffe08[230];
  cname.Data[247] = in_stack_fffffffffffffe08[231];
  cname.Data[248] = in_stack_fffffffffffffe08[232];
  cname.Data[249] = in_stack_fffffffffffffe08[233];
  cname.Data[250] = in_stack_fffffffffffffe08[234];
  cname.Data[251] = in_stack_fffffffffffffe08[235];
  cname.Data[252] = in_stack_fffffffffffffe08[236];
  cname.Data[253] = in_stack_fffffffffffffe08[237];
  cname.Data[254] = in_stack_fffffffffffffe08[238];
  cname.Length = in_stack_fffffffffffffe08[239];
  cname.Data._0_16_ = (undefined  [16])in_stack_fffffffffffffdf8;
  net___Resolver__goLookupIPCNAMEOrder
            (r,(context_Context)in_stack_fffffffffffffdb0,in_stack_fffffffffffffdc0,
             in_stack_fffffffffffffdd0,in_RBX,in_RCX,in_stack_fffffffffffffde0,cname,
             in_stack_fffffffffffffef8);
  FUN_0046d080();
  return;
}



void net___Resolver__lookupPort
               (net_Resolver *r,context_Context ctx,string network,string service,int ~r0,error ~r1)

{
  error err;
  int port;
  int port_1;
  int extraout_RBX;
  int extraout_RBX_00;
  int in_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffffb0;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  runtime_itab *in_stack_ffffffffffffffe0;
  void *in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (net_confOnce.done == 0) {
    sync___Once__doSlow(&net_confOnce,(func__ **)&PTR_net_initConfVal_008eb120);
  }
  if ((net_confVal->netGo == false) && ((r == (net_Resolver *)0x0 || (r->PreferGo == false)))) {
    err.data = in_stack_ffffffffffffffe8;
    err.tab = in_stack_ffffffffffffffe0;
    net_cgoLookupPort((context_Context)in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc0,
                      in_stack_ffffffffffffffd0,~r0,err);
    if ((extraout_RBX != 0) &&
       (net_goLookupPort(in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc0,in_RDI,
                         (error)in_stack_ffffffffffffffd0), extraout_RBX_00 == 0)) {
      return;
    }
    return;
  }
  net_goLookupPort(in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc0,in_RDI,
                   (error)in_stack_ffffffffffffffd0);
  return;
}



void net___Resolver__lookupCNAME
               (net_Resolver *r,context_Context ctx,string name,string ~r0,error ~r1)

{
  error err;
  error ~r1_00;
  void *extraout_RAX;
  net_hostLookupOrder order;
  net_dnsConfig *in_RCX;
  net_hostLookupOrder in_RBX;
  net_dnsConfig *conf;
  char extraout_SIL;
  bool ok;
  net_hostLookupOrder in_RSI;
  net_hostLookupOrder in_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffffa8;
  string in_stack_ffffffffffffffb8;
  string in_stack_ffffffffffffffc8;
  runtime_itab *in_stack_ffffffffffffffd8;
  void *in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (net_confOnce.done == 0) {
    sync___Once__doSlow(&net_confOnce,(func__ **)&PTR_net_initConfVal_008eb120);
  }
  net___conf__hostLookupOrder
            (net_confVal,r,in_stack_ffffffffffffffa8,in_RDI,in_RSI,(net_dnsConfig *)in_RSI);
  if ((extraout_RAX == (void *)0x0) &&
     (err.data = (void *)0x0, err.tab = in_stack_ffffffffffffffd8,
     in_stack_ffffffffffffffe0 = extraout_RAX,
     net_cgoLookupCNAME((context_Context)in_stack_ffffffffffffffa8,in_stack_ffffffffffffffb8,
                        in_stack_ffffffffffffffc8,err,SUB81(in_RBX,0)), extraout_SIL != '\0')) {
    return;
  }
  ~r1_00.data = in_stack_ffffffffffffffe0;
  ~r1_00.tab = in_stack_ffffffffffffffd8;
  net___Resolver__goLookupCNAME
            (r,(context_Context)in_stack_ffffffffffffffa8,in_stack_ffffffffffffffb8,in_RBX,in_RCX,
             in_stack_ffffffffffffffc8,~r1_00);
  return;
}



void net___Resolver__lookupAddr
               (net_Resolver *r,context_Context ctx,string addr,__string ~r0,error ~r1)

{
  error err;
  error ~r1_00;
  int extraout_RAX;
  net_hostLookupOrder order;
  net_dnsConfig *in_RCX;
  net_hostLookupOrder in_RBX;
  net_dnsConfig *conf;
  void *unaff_RBP;
  net_hostLookupOrder in_RSI;
  net_hostLookupOrder in_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffffb8;
  string in_stack_ffffffffffffffc8;
  __string in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (net_confOnce.done == 0) {
    sync___Once__doSlow(&net_confOnce,(func__ **)&PTR_net_initConfVal_008eb120);
  }
  net___conf__addrLookupOrder
            (net_confVal,r,in_stack_ffffffffffffffb8,in_RDI,in_RSI,(net_dnsConfig *)in_RSI);
  if (extraout_RAX == 0) {
    err.data = unaff_RBP;
    err.tab = (runtime_itab *)r;
    net_cgoLookupPTR((context_Context)in_stack_ffffffffffffffb8,in_stack_ffffffffffffffc8,
                     in_stack_ffffffffffffffd8,err);
    return;
  }
  ~r1_00.data = unaff_RBP;
  ~r1_00.tab = (runtime_itab *)r;
  net___Resolver__goLookupPTR
            (r,(context_Context)in_stack_ffffffffffffffb8,in_stack_ffffffffffffffc8,in_RBX,in_RCX,
             in_stack_ffffffffffffffd8,~r1_00);
  return;
}



void net_concurrentThreadsLimit(int ~r0)

{
  int extraout_RAX;
  uint64 r;
  int unaff_R14;
  error in_stack_ffffffffffffffd8;
  syscall_Rlimit local_18;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  syscall_Getrlimit(7,&local_18,in_stack_ffffffffffffffd8);
  if (extraout_RAX != 0) {
    return;
  }
  return;
}



// WARNING: Unknown calling convention

void net_initMPTCPavailable(void)

{
  int extraout_RAX;
  int s;
  undefined8 extraout_RAX_00;
  undefined8 extraout_RAX_01;
  int extraout_RAX_02;
  int major;
  int extraout_RBX;
  undefined8 extraout_RBX_00;
  error *extraout_RBX_01;
  int extraout_RBX_02;
  int minor;
  int in_RDI;
  int extraout_RDI;
  int unaff_R14;
  undefined auVar1 [16];
  error in_stack_ffffffffffffffc0;
  error in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  net_sysSocket(2,1,0x106,in_RDI,in_stack_ffffffffffffffc0);
  errors_Is(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,SUB81(extraout_RBX,0));
  auVar1._8_8_ = extraout_RBX_00;
  auVar1._0_8_ = extraout_RAX_00;
  if ((char)extraout_RAX_00 == '\0') {
    errors_Is(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,SUB81(extraout_RBX,0));
    auVar1._8_8_ = extraout_RBX_01;
    auVar1._0_8_ = extraout_RAX_01;
    if ((char)extraout_RAX_01 == '\0') {
      if (extraout_RBX == 0) {
        auVar1 = (**internal_poll_CloseFunc)(extraout_RAX,extraout_RBX_01);
      }
      net_mptcpAvailable = true;
    }
  }
  internal_syscall_unix_KernelVersion(auVar1._0_8_,auVar1._8_8_);
  if (extraout_RAX_02 < 6) {
    if (extraout_RAX_02 == 5) {
      net_hasSOLMPTCP = 0xf < extraout_RBX_02;
    }
    else {
      net_hasSOLMPTCP = false;
    }
  }
  else {
    net_hasSOLMPTCP = true;
  }
  return;
}



void net___sysDialer__dialMPTCP
               (net_sysDialer *sd,context_Context ctx,net_TCPAddr *laddr,net_TCPAddr *raddr,
               net_TCPConn *~r0,error ~r1)

{
  net_TCPConn *conn;
  int extraout_RBX;
  net_TCPConn *in_RSI;
  int unaff_R14;
  context_Context in_stack_ffffffffffffffb0;
  error in_stack_ffffffffffffffc0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (net_mptcpOnce.done == 0) {
