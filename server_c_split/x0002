
typedef qword net._Ctype_ulong;

typedef sbyte google.golang.org/protobuf/reflect/protoreflect.Cardinality;

typedef byte vendor/golang.org/x/text/unicode/norm.qcInfo;

typedef bool encoding/asn1.ampersandFlag;

typedef int net/http.socksCommand;

typedef byte html/template.element;

typedef int runtime.lockRank;

typedef byte runtime.waitReason;

typedef int runtime.profBufReadMode;

typedef sqword golang.org/x/net/trace.minCond;

typedef sqword encoding/base64.CorruptInputError;

typedef int vendor/golang.org/x/text/unicode/norm.ssState;

typedef uint runtime.traceStackPtr;

typedef int runtime.gcTriggerKind;

typedef uint runtime.chunkIdx;

typedef uint crypto/internal/bigmod.choice;

typedef int net/http.socksReply;

typedef uint sync.copyChecker;

typedef sbyte google.golang.org/protobuf/encoding/protowire.Type;

typedef int internal/abi.ChanDir;

typedef byte google.golang.org/protobuf/internal/encoding/text.call;

typedef int vendor/golang.org/x/text/unicode/norm.Form;

typedef qword regexp.lazyFlag;

typedef uint runtime.puintptr;

typedef uint internal/syscall/unix.GetRandomFlag;

typedef int google.golang.org/protobuf/internal/encoding/defval.Format;

typedef int crypto/x509.PublicKeyAlgorithm;

typedef dword golang.org/x/net/http2.ErrCode;

typedef sdword google.golang.org/grpc/binarylog/grpc_binarylog_v1.GrpcLogEntry_EventType;

typedef float4 float32;

typedef int html/template.ErrorCode;

typedef bool encoding/asn1.asteriskFlag;

typedef sqword time.Duration;

typedef word vendor/golang.org/x/net/dns/dnsmessage.Class;

typedef qword uint64;

typedef byte vendor/golang.org/x/crypto/cryptobyte/asn1.Tag;

typedef sdword google.golang.org/protobuf/internal/filedesc.Edition;

typedef int crypto/tls.RenegotiationSupport;

typedef int runtime.selectDir;

typedef int golang.org/x/text/unicode/norm.ssState;

typedef word google.golang.org/protobuf/internal/encoding/json.Kind;

typedef byte golang.org/x/net/http2.FrameType;

typedef dword runtime.sweepClass;

typedef int runtime.gcMarkWorkerMode;

typedef byte net/http.http2Flags;

typedef byte regexp/syntax.InstOp;

typedef byte google.golang.org/protobuf/internal/encoding/json.kind;

typedef qword runtime.hex;

typedef sdword internal/abi.NameOff;

typedef dword golang.org/x/net/http2.ConnectionError;

typedef sdword google.golang.org/protobuf/encoding/protowire.Number;

typedef sqword google.golang.org/grpc/internal/serviceconfig.Duration;

typedef int .param1;

typedef uint crypto.Hash;

typedef uint reflect.flag;

typedef int runtime.gcMode;

typedef word vendor/golang.org/x/net/idna.category;

typedef byte google.golang.org/grpc/internal/transport.GoAwayReason;

typedef dword golang.org/x/sys/unix._Socklen;

typedef int runtime.bucketType;

typedef int go/token.Pos;

typedef byte html/template.state;

typedef int google.golang.org/grpc/connectivity.State;

typedef int golang.org/x/net/http2/hpack.InvalidIndexError;

typedef byte golang.org/x/net/http2.Flags;

typedef sbyte net._Ctype_char;

typedef uint math/big.Word;

typedef int crypto/tls.QUICEncryptionLevel;

typedef int net/http.http2streamState;

typedef int reflect.abiStepKind;

typedef int golang.org/x/net/internal/timeseries.defaultClock;

typedef byte runtime.unwindFlags;

typedef int net/http.condResult;

typedef word regexp/syntax.Flags;

typedef uint runtime.muintptr;

typedef int google.golang.org/grpc/internal/channelz.RefChannelType;

typedef byte html/template.contentType;

typedef int golang.org/x/net/http2.serverMessage;

typedef int reflect.SelectDir;

typedef int crypto/x509.InsecureAlgorithmError;

typedef int log/slog.Kind;

typedef sbyte math/big.Accuracy;

typedef byte encoding/asn1.byteEncoder;

typedef dword syscall._Socklen;

typedef bool encoding/asn1.Flag;

typedef int crypto/x509.ExtKeyUsage;

typedef byte net.mptcpStatus;

typedef byte html/template.delim;

typedef int go.shape.int;

typedef int net/http.http2priorityNodeState;

typedef int text/template/parse.Pos;

typedef dword google.golang.org/grpc/internal/transport.streamState;

typedef int vendor/golang.org/x/net/http2/hpack.indexType;

typedef byte google.golang.org/protobuf/internal/encoding/json.call;

typedef uint vendor/golang.org/x/text/unicode/bidi.Class;

typedef int slices.sortedHint;

typedef int net.addrinfoErrno;

typedef byte runtime.spanAllocType;

typedef byte html/template.attr;

typedef qword runtime.taggedPointer;

typedef byte regexp/syntax.Op;

typedef uint runtime.guintptr;

typedef word crypto/tls.SignatureScheme;

typedef int golang.org/x/text/unicode/bidi.Direction;

typedef byte net._Ctype_uchar;

typedef byte vendor/golang.org/x/text/secure/bidirule.ruleState;

typedef sword int16;

typedef int encoding/asn1.Enumerated;

typedef uint runtime.gclinkptr;

typedef int net.hostLookupOrder;

typedef int google.golang.org/grpc/internal/transport.transportState;

typedef byte golang.org/x/text/secure/bidirule.ruleState;

typedef uint internal/reflectlite.flag;

typedef sdword google.golang.org/grpc/binarylog/grpc_binarylog_v1.Address_Type;

typedef int text/template/parse.itemType;

typedef qword hash/fnv.sum64;

typedef byte google.golang.org/protobuf/internal/encoding/text.NameKind;

typedef int time.ruleKind;

typedef qword runtime.sysMemStat;

typedef uint syscall.Errno;

typedef byte runtime.boundsErrorCode;

typedef int net/http.http2serverMessage;

typedef word vendor/golang.org/x/net/dns/dnsmessage.Type;

typedef byte vendor/golang.org/x/text/unicode/bidi.bracketType;

typedef uint runtime.arenaIdx;

typedef int time.Month;

typedef int crypto/x509.SignatureAlgorithm;

typedef byte crypto/tls.alert;

typedef uint runtime.traceBufPtr;

typedef qword runtime.traceTime;

typedef byte google.golang.org/grpc.payloadFormat;

typedef qword runtime.lfstack;

typedef sdword syscall._C_int;

typedef word vendor/golang.org/x/net/dns/dnsmessage.RCode;

typedef int google.golang.org/grpc/internal/transport.side;

typedef int flag.ErrorHandling;

typedef int text/template/parse.NodeType;

typedef int golang.org/x/net/trace.discarded;

typedef byte internal/abi.FuncFlag;

typedef qword crypto/internal/edwards25519.fiatScalarUint1;

typedef dword net._Ctype_uint;

typedef int golang.org/x/text/unicode/norm.insertErr;

typedef int golang.org/x/net/http2/hpack.indexType;

typedef qword runtime.pallocSum;

typedef dword runtime.pollInfo;

typedef uint text/template/parse.Mode;

typedef sbyte vendor/golang.org/x/text/unicode/bidi.level;

typedef byte internal/abi.FuncID;

typedef qword runtime.profIndex;

typedef qword crypto/internal/nistec/fiat.p224Uint1;

typedef int os.readdirMode;

typedef word net._Ctype_ushort;

typedef byte google.golang.org/grpc/internal/transport.timeoutUnit;

typedef int crypto/dsa.ParameterSizes;

typedef int encoding/json.floatEncoder;

typedef int text/template.missingKeyAction;

typedef int internal/goarch.ArchFamilyType;

typedef int crypto/internal/boring.randReader;

typedef int runtime.gcDrainFlags;

typedef int google.golang.org/protobuf/internal/impl.ValidationStatus;

typedef byte google.golang.org/protobuf/internal/encoding/text.encType;

typedef byte net/http.http2FrameType;

typedef int google.golang.org/grpc/internal/transport.outStreamState;

typedef uint reflect.Kind;

typedef byte regexp/syntax.EmptyOp;

typedef int log/slog.kind;

typedef int reflect.ChanDir;

typedef int golang.org/x/sys/unix.ItimerWhich;

typedef uint net.Flags;

typedef word crypto/tls.CurveID;

typedef sbyte bytes.readOp;

typedef int vendor/golang.org/x/text/unicode/bidi.Direction;

typedef byte runtime.stwReason;

typedef int sort.sortedHint;

typedef byte html/template.jsCtx;

typedef qword runtime.profAtomic;

typedef uint internal/abi.Kind;

typedef int runtime.metricKind;

typedef byte runtime.mSpanState;

typedef uint runtime.traceAllocBlockPtr;

typedef qword complex64;

typedef int google.golang.org/grpc/connectivity.ServingMode;

typedef int syscall.Signal;

typedef int os.newFileKind;

typedef uint golang.org/x/text/unicode/bidi.Class;

typedef byte math/big.form;

typedef qword crypto/internal/nistec/fiat.p384Uint1;

typedef byte golang.org/x/text/unicode/bidi.bracketType;

typedef qword runtime.headTailIndex;

typedef sbyte golang.org/x/text/unicode/bidi.level;

typedef byte google.golang.org/protobuf/internal/encoding/text.Kind;

typedef dword net/http.http2ErrCode;

typedef qword runtime.limiterEventStamp;

typedef byte mime.WordEncoder;

typedef byte runtime.traceBlockReason;

typedef sdword internal/abi.TypeOff;

typedef byte math/big.RoundingMode;

typedef word vendor/golang.org/x/net/dns/dnsmessage.OpCode;

typedef sdword net._Ctype_int;

typedef int crypto/tls.ClientAuthType;

typedef byte crypto/tls.recordType;

typedef int time.Weekday;

typedef int net/http.socksAuthMethod;

typedef int runtime.semaProfileFlags;

typedef word vendor/golang.org/x/net/idna.info;

typedef byte internal/abi.TFlag;

typedef dword runtime.throwType;

typedef int crypto/x509.KeyUsage;

typedef sdword google.golang.org/grpc/binarylog/grpc_binarylog_v1.GrpcLogEntry_Logger;

typedef int crypto/tls.QUICEventKind;

typedef sbyte golang.org/x/net/idna.joinState;

typedef int net/http.SameSite;

typedef int vendor/golang.org/x/text/unicode/norm.insertErr;

typedef int crypto/x509.InvalidReason;

typedef sdword internal/abi.TextOff;

typedef dword runtime.goroutineProfileState;

typedef int crypto/x509.PEMCipher;

typedef struct reflect.StructTag reflect.StructTag, *Preflect.StructTag;

struct reflect.StructTag {
    uint8 *str;
    int len;
};

typedef struct reflect.emptyInterface reflect.emptyInterface, *Preflect.emptyInterface;

typedef struct internal/abi.Type internal/abi.Type, *Pinternal/abi.Type;

struct internal/abi.Type {
    uintptr Size_;
    uintptr PtrBytes;
    uint32 Hash;
    internal/abi.TFlag TFlag;
    uint8 Align_;
    uint8 FieldAlign_;
    uint8 Kind_;
    void (**Equal)(void *, void *, bool *);
    uint8 *GCData;
    internal/abi.NameOff Str;
    internal/abi.TypeOff PtrToThis;
};

struct reflect.emptyInterface {
    struct internal/abi.Type *typ;
    void *word;
};

typedef struct hash<*text/template/parse.TextNode,[]uint8> hash<*text/template/parse.TextNode,[]uint8>, *Phash<*text/template/parse.TextNode,[]uint8>;

typedef struct bucket<*text/template/parse.TextNode,[]uint8> bucket<*text/template/parse.TextNode,[]uint8>, *Pbucket<*text/template/parse.TextNode,[]uint8>;

typedef struct runtime.mapextra runtime.mapextra, *Pruntime.mapextra;

typedef struct text/template/parse.TextNode text/template/parse.TextNode, *Ptext/template/parse.TextNode;

typedef struct []uint8 []uint8, *P[]uint8;

typedef struct []*runtime.bmap []*runtime.bmap, *P[]*runtime.bmap;

typedef struct runtime.bmap runtime.bmap, *Pruntime.bmap;

typedef struct text/template/parse.Tree text/template/parse.Tree, *Ptext/template/parse.Tree;


// WARNING! conflicting data type names: /DWARF/_UNCATEGORIZED_/string - /string

typedef struct text/template/parse.ListNode text/template/parse.ListNode, *Ptext/template/parse.ListNode;

typedef struct []map[string]interface_{} []map[string]interface_{}, *P[]map[string]interface_{};

typedef struct text/template/parse.lexer text/template/parse.lexer, *Ptext/template/parse.lexer;

typedef struct text/template/parse.item text/template/parse.item, *Ptext/template/parse.item;

typedef struct []string []string, *P[]string;

typedef struct hash<string,*text/template/parse.Tree> hash<string,*text/template/parse.Tree>, *Phash<string,*text/template/parse.Tree>;

typedef struct hash<string,*text/template/parse.Tree> *map[string]*text/template/parse.Tree;

typedef struct []text/template/parse.Node []text/template/parse.Node, *P[]text/template/parse.Node;

typedef struct hash<string,interface_{}> hash<string,interface_{}>, *Phash<string,interface_{}>;

typedef struct hash<string,interface_{}> *map[string]interface_{};

typedef struct text/template/parse.lexOptions text/template/parse.lexOptions, *Ptext/template/parse.lexOptions;

typedef struct bucket<string,*text/template/parse.Tree> bucket<string,*text/template/parse.Tree>, *Pbucket<string,*text/template/parse.Tree>;

typedef struct runtime.iface runtime.iface, *Pruntime.iface;

typedef struct runtime.iface text/template/parse.Node;

typedef struct bucket<string,interface_{}> bucket<string,interface_{}>, *Pbucket<string,interface_{}>;

typedef struct runtime.itab runtime.itab, *Pruntime.itab;

typedef struct runtime.eface runtime.eface, *Pruntime.eface;

typedef struct runtime.eface interface_{};

typedef struct internal/abi.InterfaceType internal/abi.InterfaceType, *Pinternal/abi.InterfaceType;

typedef struct internal/abi.Name internal/abi.Name, *Pinternal/abi.Name;

typedef struct []internal/abi.Imethod []internal/abi.Imethod, *P[]internal/abi.Imethod;

typedef struct internal/abi.Imethod internal/abi.Imethod, *Pinternal/abi.Imethod;

struct text/template/parse.item {
    text/template/parse.itemType typ;
    text/template/parse.Pos pos;
    struct string val;
    int line;
};

struct internal/abi.Imethod {
    internal/abi.NameOff Name;
    internal/abi.TypeOff Typ;
};

struct hash<*text/template/parse.TextNode,[]uint8> {
    int count;
    uint8 flags;
    uint8 B;
    uint16 noverflow;
    uint32 hash0;
    struct bucket<*text/template/parse.TextNode,[]uint8> *buckets;
    struct bucket<*text/template/parse.TextNode,[]uint8> *oldbuckets;
    uintptr nevacuate;
    struct runtime.mapextra *extra;
};

struct []*runtime.bmap {
    struct runtime.bmap **array;
    int len;
    int cap;
};

struct []uint8 {
    uint8 *array;
    int len;
    int cap;
};

struct text/template/parse.TextNode {
    text/template/parse.NodeType NodeType;
    text/template/parse.Pos Pos;
    struct text/template/parse.Tree *tr;
    struct []uint8 Text;
};

struct runtime.bmap {
    uint8 tophash[8];
};

struct []text/template/parse.Node {
    text/template/parse.Node *array;
    int len;
    int cap;
};

struct runtime.eface {
    struct internal/abi.Type *_type;
    void *data;
};

struct hash<string,interface_{}> { // Original name: hash<string,interface {}>
    int count;
    uint8 flags;
    uint8 B;
    uint16 noverflow;
    uint32 hash0;
    struct bucket<string,interface_{}> *buckets;
    struct bucket<string,interface_{}> *oldbuckets;
    uintptr nevacuate;
    struct runtime.mapextra *extra;
};

struct text/template/parse.ListNode {
    text/template/parse.NodeType NodeType;
    text/template/parse.Pos Pos;
    struct text/template/parse.Tree *tr;
    struct []text/template/parse.Node Nodes;
};

struct []internal/abi.Imethod {
    struct internal/abi.Imethod *array;
    int len;
    int cap;
};

struct internal/abi.Name {
    uint8 *Bytes;
};

struct internal/abi.InterfaceType {
    struct internal/abi.Type Type;
    struct internal/abi.Name PkgPath;
    struct []internal/abi.Imethod Methods;
};

struct text/template/parse.lexOptions {
    bool emitComment;
    bool breakOK;
    bool continueOK;
};

struct text/template/parse.lexer {
    struct string name;
    struct string input;
    struct string leftDelim;
    struct string rightDelim;
    text/template/parse.Pos pos;
    text/template/parse.Pos start;
    bool atEOF;
    int parenDepth;
    int line;
    int startLine;
    struct text/template/parse.item item;
    bool insideAction;
    struct text/template/parse.lexOptions options;
};

struct runtime.itab {
    struct internal/abi.InterfaceType *inter;
    struct internal/abi.Type *_type;
    uint32 hash;
    uint8 _[4];
    uintptr fun[1];
};

struct hash<string,*text/template/parse.Tree> {
    int count;
    uint8 flags;
    uint8 B;
    uint16 noverflow;
    uint32 hash0;
    struct bucket<string,*text/template/parse.Tree> *buckets;
    struct bucket<string,*text/template/parse.Tree> *oldbuckets;
    uintptr nevacuate;
    struct runtime.mapextra *extra;
};

struct []map[string]interface_{} { // Original name: []map[string]interface {}
    map[string]interface_{} *array;
    int len;
    int cap;
};

struct bucket<string,interface_{}> { // Original name: bucket<string,interface {}>
    uint8 tophash[8];
    struct string keys[8];
    interface_{} values[8];
    struct bucket<string,interface_{}> *overflow;
};

struct []string {
    struct string *array;
    int len;
    int cap;
};

struct text/template/parse.Tree {
    struct string Name;
    struct string ParseName;
    struct text/template/parse.ListNode *Root;
    text/template/parse.Mode Mode;
    struct string text;
    struct []map[string]interface_{} funcs;
    struct text/template/parse.lexer *lex;
    struct text/template/parse.item token[3];
    int peekCount;
    struct []string vars;
    map[string]*text/template/parse.Tree treeSet;
    int actionLine;
    int rangeDepth;
};

struct bucket<*text/template/parse.TextNode,[]uint8> {
    uint8 tophash[8];
    struct text/template/parse.TextNode *keys[8];
    struct []uint8 values[8];
    struct bucket<*text/template/parse.TextNode,[]uint8> *overflow;
};

struct bucket<string,*text/template/parse.Tree> {
    uint8 tophash[8];
    struct string keys[8];
    struct text/template/parse.Tree *values[8];
    struct bucket<string,*text/template/parse.Tree> *overflow;
};

struct runtime.iface {
    struct runtime.itab *tab;
    void *data;
};

struct runtime.mapextra {
    struct []*runtime.bmap *overflow;
    struct []*runtime.bmap *oldoverflow;
    struct runtime.bmap *nextOverflow;
};

typedef struct net/netip.Prefix net/netip.Prefix, *Pnet/netip.Prefix;

typedef struct net/netip.Addr net/netip.Addr, *Pnet/netip.Addr;

typedef struct net/netip.uint128 net/netip.uint128, *Pnet/netip.uint128;

typedef struct internal/intern.Value internal/intern.Value, *Pinternal/intern.Value;

struct net/netip.uint128 {
    uint64 hi;
    uint64 lo;
};

struct net/netip.Addr {
    struct net/netip.uint128 addr;
    struct internal/intern.Value *z;
};

struct net/netip.Prefix {
    struct net/netip.Addr ip;
    uint8 bitsPlusOne;
};

struct internal/intern.Value {
    void (**_[0])(void);
    interface_{} cmpVal;
    bool resurrected;
};

typedef struct crypto/internal/nistec.P521Point crypto/internal/nistec.P521Point, *Pcrypto/internal/nistec.P521Point;

typedef struct crypto/internal/nistec/fiat.P521Element crypto/internal/nistec/fiat.P521Element, *Pcrypto/internal/nistec/fiat.P521Element;

typedef uint64 crypto/internal/nistec/fiat.p521MontgomeryDomainFieldElement[9];

struct crypto/internal/nistec/fiat.P521Element {
    crypto/internal/nistec/fiat.p521MontgomeryDomainFieldElement x;
};

struct crypto/internal/nistec.P521Point {
    struct crypto/internal/nistec/fiat.P521Element *x;
    struct crypto/internal/nistec/fiat.P521Element *y;
    struct crypto/internal/nistec/fiat.P521Element *z;
};

typedef struct noalg.map.iter[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo noalg.map.iter[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo, *Pnoalg.map.iter[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo;

typedef struct runtime.iface google.golang.org/grpc/balancer.SubConn;

typedef struct google.golang.org/grpc/balancer/base.SubConnInfo google.golang.org/grpc/balancer/base.SubConnInfo, *Pgoogle.golang.org/grpc/balancer/base.SubConnInfo;

typedef struct noalg.map.hdr[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo noalg.map.hdr[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo, *Pnoalg.map.hdr[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo;

typedef struct noalg.map.bucket[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo noalg.map.bucket[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo, *Pnoalg.map.bucket[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo;

typedef struct google.golang.org/grpc/resolver.Address google.golang.org/grpc/resolver.Address, *Pgoogle.golang.org/grpc/resolver.Address;

typedef struct google.golang.org/grpc/attributes.Attributes google.golang.org/grpc/attributes.Attributes, *Pgoogle.golang.org/grpc/attributes.Attributes;

typedef struct hash<interface_{},interface_{}> hash<interface_{},interface_{}>, *Phash<interface_{},interface_{}>;

typedef struct hash<interface_{},interface_{}> *map[interface_{}]interface_{};

typedef struct bucket<interface_{},interface_{}> bucket<interface_{},interface_{}>, *Pbucket<interface_{},interface_{}>;

struct bucket<interface_{},interface_{}> { // Original name: bucket<interface {},interface {}>
    uint8 tophash[8];
    interface_{} keys[8];
    interface_{} values[8];
    struct bucket<interface_{},interface_{}> *overflow;
};

struct noalg.map.hdr[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo {
    int count;
    uint8 flags;
    uint8 B;
    uint16 noverflow;
    uint32 hash0;
    struct noalg.map.bucket[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo *buckets;
    struct noalg.map.bucket[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo *oldbuckets;
    uintptr nevacuate;
    void *extra;
};

struct google.golang.org/grpc/resolver.Address {
    struct string Addr;
    struct string ServerName;
    struct google.golang.org/grpc/attributes.Attributes *Attributes;
    struct google.golang.org/grpc/attributes.Attributes *BalancerAttributes;
    interface_{} Metadata;
};

struct google.golang.org/grpc/balancer/base.SubConnInfo {
    struct google.golang.org/grpc/resolver.Address Address;
};

struct noalg.map.iter[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo {
    google.golang.org/grpc/balancer.SubConn *key;
    struct google.golang.org/grpc/balancer/base.SubConnInfo *elem;
    void *t;
    struct noalg.map.hdr[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo *h;
    struct noalg.map.bucket[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo *buckets;
    struct noalg.map.bucket[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo *bptr;
    void *overflow;
    void *oldoverflow;
    uintptr startBucket;
    uint8 offset;
    bool wrapped;
    uint8 B;
    uint8 i;
    uintptr bucket;
    uintptr checkBucket;
};

struct noalg.map.bucket[google.golang.org/grpc/balancer.SubConn]google.golang.org/grpc/balancer/base.SubConnInfo {
    uint8 topbits[8];
    noalg.[8]google.golang.org/grpc/balancer.SubConn keys;
    noalg.[8]google.golang.org/grpc/balancer/base.SubConnInfo elems;
    void *overflow;
};

struct google.golang.org/grpc/attributes.Attributes {
    map[interface_{}]interface_{} m;
};

struct hash<interface_{},interface_{}> { // Original name: hash<interface {},interface {}>
    int count;
    uint8 flags;
    uint8 B;
    uint16 noverflow;
    uint32 hash0;
    struct bucket<interface_{},interface_{}> *buckets;
    struct bucket<interface_{},interface_{}> *oldbuckets;
    uintptr nevacuate;
    struct runtime.mapextra *extra;
};

typedef struct google.golang.org/grpc/balancer/base.SubConnInfo noalg.[8]google.golang.org/grpc/balancer/base.SubConnInfo[8];

typedef google.golang.org/grpc/balancer.SubConn noalg.[8]google.golang.org/grpc/balancer.SubConn[8];

typedef struct google.golang.org/protobuf/internal/impl.extensionFieldInfo google.golang.org/protobuf/internal/impl.extensionFieldInfo, *Pgoogle.golang.org/protobuf/internal/impl.extensionFieldInfo;

typedef struct google.golang.org/protobuf/internal/impl.valueCoderFuncs google.golang.org/protobuf/internal/impl.valueCoderFuncs, *Pgoogle.golang.org/protobuf/internal/impl.valueCoderFuncs;

typedef struct google.golang.org/protobuf/reflect/protoreflect.Value google.golang.org/protobuf/reflect/protoreflect.Value, *Pgoogle.golang.org/protobuf/reflect/protoreflect.Value;

typedef struct google.golang.org/protobuf/internal/impl.marshalOptions google.golang.org/protobuf/internal/impl.marshalOptions, *Pgoogle.golang.org/protobuf/internal/impl.marshalOptions;

typedef struct runtime.iface error;

typedef struct google.golang.org/protobuf/internal/impl.unmarshalOptions google.golang.org/protobuf/internal/impl.unmarshalOptions, *Pgoogle.golang.org/protobuf/internal/impl.unmarshalOptions;

typedef struct google.golang.org/protobuf/internal/impl.unmarshalOutput google.golang.org/protobuf/internal/impl.unmarshalOutput, *Pgoogle.golang.org/protobuf/internal/impl.unmarshalOutput;

typedef struct google.golang.org/protobuf/internal/impl.mergeOptions google.golang.org/protobuf/internal/impl.mergeOptions, *Pgoogle.golang.org/protobuf/internal/impl.mergeOptions;

typedef struct google.golang.org/protobuf/internal/impl.validationInfo google.golang.org/protobuf/internal/impl.validationInfo, *Pgoogle.golang.org/protobuf/internal/impl.validationInfo;

typedef void (**google.golang.org/protobuf/internal/pragma.DoNotCompare[0])(void);

typedef struct runtime.iface interface_{_FindExtensionByName(google.golang.org/protobuf/reflect/protoreflect.FullName)_(google.golang.org/protobuf/reflect/protoreflect.ExtensionType,_error);_FindExtensionByNumber(google.golang.org/protobuf/reflect/protoreflect.FullName,_google.golang.org/protobuf/encoding/protowire.Number)_(google.golang.org/protobuf/reflect/protoreflect.ExtensionType,_error)_};

typedef struct google.golang.org/protobuf/internal/impl.MessageInfo google.golang.org/protobuf/internal/impl.MessageInfo, *Pgoogle.golang.org/protobuf/internal/impl.MessageInfo;

typedef struct runtime.iface reflect.Type;

typedef struct runtime.iface google.golang.org/protobuf/reflect/protoreflect.MessageDescriptor;

typedef struct []interface_{} []interface_{}, *P[]interface_{};

typedef struct sync.Mutex sync.Mutex, *Psync.Mutex;

typedef struct google.golang.org/protobuf/internal/impl.reflectMessageInfo google.golang.org/protobuf/internal/impl.reflectMessageInfo, *Pgoogle.golang.org/protobuf/internal/impl.reflectMessageInfo;

typedef struct google.golang.org/protobuf/internal/impl.pointer google.golang.org/protobuf/internal/impl.pointer, *Pgoogle.golang.org/protobuf/internal/impl.pointer;

typedef struct google.golang.org/protobuf/reflect/protoreflect.RawFields google.golang.org/protobuf/reflect/protoreflect.RawFields, *Pgoogle.golang.org/protobuf/reflect/protoreflect.RawFields;

typedef struct hash<int32,google.golang.org/protobuf/internal/impl.ExtensionField> hash<int32,google.golang.org/protobuf/internal/impl.ExtensionField>, *Phash<int32,google.golang.org/protobuf/internal/impl.ExtensionField>;

typedef struct hash<int32,google.golang.org/protobuf/internal/impl.ExtensionField> *google.golang.org/protobuf/internal/impl.extensionMap;

typedef struct google.golang.org/protobuf/internal/impl.coderMessageInfo google.golang.org/protobuf/internal/impl.coderMessageInfo, *Pgoogle.golang.org/protobuf/internal/impl.coderMessageInfo;

typedef struct hash<google.golang.org/protobuf/encoding/protowire.Number,*google.golang.org/protobuf/internal/impl.fieldInfo> hash<google.golang.org/protobuf/encoding/protowire.Number,*google.golang.org/protobuf/internal/impl.fieldInfo>, *Phash<google.golang.org/protobuf/encoding/protowire.Number,*google.golang.org/protobuf/internal/impl.fieldInfo>;

typedef struct hash<google.golang.org/protobuf/encoding/protowire.Number,*google.golang.org/protobuf/internal/impl.fieldInfo> *map[google.golang.org/protobuf/encoding/protowire.Number]*google.golang.org/protobuf/internal/impl.fieldInfo;

typedef struct hash<google.golang.org/protobuf/reflect/protoreflect.Name,*google.golang.org/protobuf/internal/impl.oneofInfo> hash<google.golang.org/protobuf/reflect/protoreflect.Name,*google.golang.org/protobuf/internal/impl.oneofInfo>, *Phash<google.golang.org/protobuf/reflect/protoreflect.Name,*google.golang.org/protobuf/internal/impl.oneofInfo>;

typedef struct hash<google.golang.org/protobuf/reflect/protoreflect.Name,*google.golang.org/protobuf/internal/impl.oneofInfo> *map[google.golang.org/protobuf/reflect/protoreflect.Name]*google.golang.org/protobuf/internal/impl.oneofInfo;

typedef struct hash<google.golang.org/protobuf/encoding/protowire.Number,interface_{}> hash<google.golang.org/protobuf/encoding/protowire.Number,interface_{}>, *Phash<google.golang.org/protobuf/encoding/protowire.Number,interface_{}>;

typedef struct hash<google.golang.org/protobuf/encoding/protowire.Number,interface_{}> *map[google.golang.org/protobuf/encoding/protowire.Number]interface_{};

typedef struct []*google.golang.org/protobuf/internal/impl.fieldInfo []*google.golang.org/protobuf/internal/impl.fieldInfo, *P[]*google.golang.org/protobuf/internal/impl.fieldInfo;

typedef struct bucket<int32,google.golang.org/protobuf/internal/impl.ExtensionField> bucket<int32,google.golang.org/protobuf/internal/impl.ExtensionField>, *Pbucket<int32,google.golang.org/protobuf/internal/impl.ExtensionField>;

typedef struct google.golang.org/protobuf/internal/impl.atomicNilMessage google.golang.org/protobuf/internal/impl.atomicNilMessage, *Pgoogle.golang.org/protobuf/internal/impl.atomicNilMessage;

typedef struct struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Flags_uint64;_Size_func(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Flags_uint8_})_struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Size_int_};_Marshal_func(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Buf_[]uint8;_Flags_uint8_})_(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Buf_[]uint8_},_error);_Unmarshal_func(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Buf_[]uint8;_Flags_uint8;_Resolver_interface_{_FindExtensionByName(google.golang.org/protobuf/reflect/protoreflect.FullName)_(google.golang.org/protobuf/reflect/protoreflect.ExtensionType,_error);_FindExtensionByNumber(google.golang.org/protobuf/reflect/protoreflect.FullName,_google.golang.org/protobuf/encoding/protowire.Number)_(google.golang.org/protobuf/reflect/protoreflect.ExtensionType,_error)_};_Depth_int_})_(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Flags_uint8_},_error);_Merge_func(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Source_google.golang.org/protobuf/reflect/protoreflect.Message;_Destination_google.golang.org/protobuf/reflect/protoreflect.Message_})_struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Flags_uint8_};_CheckInitialized_func(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message_})_(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals_},_error)_} struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Flags_uint64;_Size_func(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Flags_uint8_})_struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Size_int_};_Marshal_func(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Buf_[]uint8;_Flags_uint8_})_(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Buf_[]uint8_},_error);_Unmarshal_func(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Buf_[]uint8;_Flags_uint8;_Resolver_interface_{_FindExtensionByName(google.golang.org/protobuf/reflect/protoreflect.FullName)_(google.golang.org/protobuf/reflect/protoreflect.ExtensionType,_error);_FindExtensionByNumber(google.golang.org/protobuf/reflect/protoreflect.FullName,_google.golang.org/protobuf/encoding/protowire.Number)_(google.golang.org/protobuf/reflect/protoreflect.ExtensionType,_error)_};_Depth_int_})_(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Flags_uint8_},_error);_Merge_func(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Source_google.golang.org/protobuf/reflect/protoreflect.Message;_Destination_google.golang.org/protobuf/reflect/protoreflect.Message_})_struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Flags_uint8_};_CheckInitialized_func(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message_})_(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals_},_error)_}, *Pstruct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Flags_uint64;_Size_func(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Flags_uint8_})_struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Size_int_};_Marshal_func(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Buf_[]uint8;_Flags_uint8_})_(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Buf_[]uint8_},_error);_Unmarshal_func(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Buf_[]uint8;_Flags_uint8;_Resolver_interface_{_FindExtensionByName(google.golang.org/protobuf/reflect/protoreflect.FullName)_(google.golang.org/protobuf/reflect/protoreflect.ExtensionType,_error);_FindExtensionByNumber(google.golang.org/protobuf/reflect/protoreflect.FullName,_google.golang.org/protobuf/encoding/protowire.Number)_(google.golang.org/protobuf/reflect/protoreflect.ExtensionType,_error)_};_Depth_int_})_(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Flags_uint8_},_error);_Merge_func(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Source_google.golang.org/protobuf/reflect/protoreflect.Message;_Destination_google.golang.org/protobuf/reflect/protoreflect.Message_})_struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Flags_uint8_};_CheckInitialized_func(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message_})_(struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals_},_error)_};

typedef struct struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Flags_uint8_} struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Flags_uint8_}, *Pstruct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Flags_uint8_};

typedef struct struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Size_int_} struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Size_int_}, *Pstruct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Size_int_};

typedef struct struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Buf_[]uint8;_Flags_uint8_} struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Buf_[]uint8;_Flags_uint8_}, *Pstruct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Buf_[]uint8;_Flags_uint8_};

typedef struct struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Buf_[]uint8_} struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Buf_[]uint8_}, *Pstruct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Buf_[]uint8_};

typedef struct struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Buf_[]uint8;_Flags_uint8;_Resolver_interface_{_FindExtensionByName(google.golang.org/protobuf/reflect/protoreflect.FullName)_(google.golang.org/protobuf/reflect/protoreflect.ExtensionType,_error);_FindExtensionByNumber(google.golang.org/protobuf/reflect/protoreflect.FullName,_google.golang.org/protobuf/encoding/protowire.Number)_(google.golang.org/protobuf/reflect/protoreflect.ExtensionType,_error)_};_Depth_int_} struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Buf_[]uint8;_Flags_uint8;_Resolver_interface_{_FindExtensionByName(google.golang.org/protobuf/reflect/protoreflect.FullName)_(google.golang.org/protobuf/reflect/protoreflect.ExtensionType,_error);_FindExtensionByNumber(google.golang.org/protobuf/reflect/protoreflect.FullName,_google.golang.org/protobuf/encoding/protowire.Number)_(google.golang.org/protobuf/reflect/protoreflect.ExtensionType,_error)_};_Depth_int_}, *Pstruct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message;_Buf_[]uint8;_Flags_uint8;_Resolver_interface_{_FindExtensionByName(google.golang.org/protobuf/reflect/protoreflect.FullName)_(google.golang.org/protobuf/reflect/protoreflect.ExtensionType,_error);_FindExtensionByNumber(google.golang.org/protobuf/reflect/protoreflect.FullName,_google.golang.org/protobuf/encoding/protowire.Number)_(google.golang.org/protobuf/reflect/protoreflect.ExtensionType,_error)_};_Depth_int_};

typedef struct struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Flags_uint8_} struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Flags_uint8_}, *Pstruct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Flags_uint8_};

typedef struct struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Source_google.golang.org/protobuf/reflect/protoreflect.Message;_Destination_google.golang.org/protobuf/reflect/protoreflect.Message_} struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Source_google.golang.org/protobuf/reflect/protoreflect.Message;_Destination_google.golang.org/protobuf/reflect/protoreflect.Message_}, *Pstruct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Source_google.golang.org/protobuf/reflect/protoreflect.Message;_Destination_google.golang.org/protobuf/reflect/protoreflect.Message_};

typedef struct struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message_} struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message_}, *Pstruct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;_Message_google.golang.org/protobuf/reflect/protoreflect.Message_};

typedef struct struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals_} struct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals_}, *Pstruct_{_google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals_};

typedef struct []*google.golang.org/protobuf/internal/impl.coderFieldInfo []*google.golang.org/protobuf/internal/impl.coderFieldInfo, *P[]*google.golang.org/protobuf/internal/impl.coderFieldInfo;

typedef struct hash<google.golang.org/protobuf/encoding/protowire.Number,*google.golang.org/protobuf/internal/impl.coderFieldInfo> hash<google.golang.org/protobuf/encoding/protowire.Number,*google.golang.org/protobuf/internal/impl.coderFieldInfo>, *Phash<google.golang.org/protobuf/encoding/protowire.Number,*google.golang.org/protobuf/internal/impl.coderFieldInfo>;

typedef struct hash<google.golang.org/protobuf/encoding/protowire.Number,*google.golang.org/protobuf/internal/impl.coderFieldInfo> *map[google.golang.org/protobuf/encoding/protowire.Number]*google.golang.org/protobuf/internal/impl.coderFieldInfo;

typedef struct bucket<google.golang.org/protobuf/encoding/protowire.Number,*google.golang.org/protobuf/internal/impl.fieldInfo> bucket<google.golang.org/protobuf/encoding/protowire.Number,*google.golang.org/protobuf/internal/impl.fieldInfo>, *Pbucket<google.golang.org/protobuf/encoding/protowire.Number,*google.golang.org/protobuf/internal/impl.fieldInfo>;

typedef struct bucket<google.golang.org/protobuf/reflect/protoreflect.Name,*google.golang.org/protobuf/internal/impl.oneofInfo> bucket<google.golang.org/protobuf/reflect/protoreflect.Name,*google.golang.org/protobuf/internal/impl.oneofInfo>, *Pbucket<google.golang.org/protobuf/reflect/protoreflect.Name,*google.golang.org/protobuf/internal/impl.oneofInfo>;

typedef struct bucket<google.golang.org/protobuf/encoding/protowire.Number,interface_{}> bucket<google.golang.org/protobuf/encoding/protowire.Number,interface_{}>, *Pbucket<google.golang.org/protobuf/encoding/protowire.Number,interface_{}>;

typedef struct google.golang.org/protobuf/internal/impl.fieldInfo google.golang.org/protobuf/internal/impl.fieldInfo, *Pgoogle.golang.org/protobuf/internal/impl.fieldInfo;

typedef struct runtime.iface google.golang.org/protobuf/reflect/protoreflect.Message;

typedef struct google.golang.org/protobuf/internal/impl.ExtensionField google.golang.org/protobuf/internal/impl.ExtensionField, *Pgoogle.golang.org/protobuf/internal/impl.ExtensionField;

typedef struct google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals google.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals, *Pgoogle.golang.org/protobuf/internal/pragma.NoUnkeyedLiterals;

typedef struct google.golang.org/protobuf/internal/impl.coderFieldInfo google.golang.org/protobuf/internal/impl.coderFieldInfo, *Pgoogle.golang.org/protobuf/internal/impl.coderFieldInfo;

typedef struct bucket<google.golang.org/protobuf/encoding/protowire.Number,*google.golang.org/protobuf/internal/impl.coderFieldInfo> bucket<google.golang.org/protobuf/encoding/protowire.Number,*google.golang.org/protobuf/internal/impl.coderFieldInfo>, *Pbucket<google.golang.org/protobuf/encoding/protowire.Number,*google.golang.org/protobuf/internal/impl.coderFieldInfo>;

typedef struct google.golang.org/protobuf/reflect/protoreflect.Name google.golang.org/protobuf/reflect/protoreflect.Name, *Pgoogle.golang.org/protobuf/reflect/protoreflect.Name;

typedef struct google.golang.org/protobuf/internal/impl.oneofInfo google.golang.org/protobuf/internal/impl.oneofInfo, *Pgoogle.golang.org/protobuf/internal/impl.oneofInfo;

typedef struct runtime.iface google.golang.org/protobuf/reflect/protoreflect.FieldDescriptor;

typedef struct runtime.iface google.golang.org/protobuf/reflect/protoreflect.ExtensionType;

typedef struct google.golang.org/protobuf/internal/impl.lazyExtensionValue google.golang.org/protobuf/internal/impl.lazyExtensionValue, *Pgoogle.golang.org/protobuf/internal/impl.lazyExtensionValue;

typedef struct google.golang.org/protobuf/internal/impl.pointerCoderFuncs google.golang.org/protobuf/internal/impl.pointerCoderFuncs, *Pgoogle.golang.org/protobuf/internal/impl.pointerCoderFuncs;

typedef struct runtime.iface google.golang.org/protobuf/reflect/protoreflect.OneofDescriptor;

struct google.golang.org/protobuf/reflect/protoreflect.Name {
    uint8 *str;
    int len;
};

struct []interface_{} { // Original name: []interface {}
    interface_{} *array;
    int len;
    int cap;
};

struct []*google.golang.org/protobuf/internal/impl.coderFieldInfo {
    struct google.golang.org/protobuf/internal/impl.coderFieldInfo **array;
    int len;
    int cap;
};
