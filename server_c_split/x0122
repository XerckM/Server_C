  }
  if (tt != (internal_abi_MapType *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe8);
}



void internal_reflectlite_rtype_Len(internal_reflectlite_rtype t,int ~r0)

{
  internal_abi_ArrayType *tt;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  tt = (internal_abi_ArrayType *)t.Type;
  if (((t.Type)->Kind_ & 0x1f) != 0x11) {
    tt = (internal_abi_ArrayType *)0x0;
  }
  if (tt != (internal_abi_ArrayType *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe8);
}



void internal_reflectlite_rtype_NumField(internal_reflectlite_rtype t,int ~r0)

{
  internal_abi_StructType *tt;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  tt = (internal_abi_StructType *)t.Type;
  if (((t.Type)->Kind_ & 0x1f) != 0x19) {
    tt = (internal_abi_StructType *)0x0;
  }
  if (tt != (internal_abi_StructType *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe8);
}



void internal_reflectlite_rtype_NumIn(internal_reflectlite_rtype t,int ~r0)

{
  internal_abi_FuncType *tt;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  tt = (internal_abi_FuncType *)t.Type;
  if (((t.Type)->Kind_ & 0x1f) != 0x13) {
    tt = (internal_abi_FuncType *)0x0;
  }
  if (tt != (internal_abi_FuncType *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe8);
}



void internal_reflectlite_rtype_NumOut(internal_reflectlite_rtype t,int ~r0)

{
  internal_abi_FuncType *tt;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  tt = (internal_abi_FuncType *)t.Type;
  if (((t.Type)->Kind_ & 0x1f) != 0x13) {
    tt = (internal_abi_FuncType *)0x0;
  }
  if (tt != (internal_abi_FuncType *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe8);
}



void internal_reflectlite_rtype_Out
               (internal_reflectlite_rtype t,int i,internal_reflectlite_Type ~r0)

{
  ushort uVar1;
  internal_abi_FuncType *tt;
  uintptr uadd;
  uint uVar2;
  ushort uVar3;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  tt = (internal_abi_FuncType *)t.Type;
  if (((t.Type)->Kind_ & 0x1f) != 0x13) {
    tt = (internal_abi_FuncType *)0x0;
  }
  if (tt == (internal_abi_FuncType *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe8);
  }
  uVar3 = tt->OutCount & 0x7fff;
  if (uVar3 == 0) {
    uVar2 = 0;
  }
  else {
    uVar1 = tt->InCount;
    uVar2 = (uint)(ushort)(uVar3 + uVar1);
    if (uVar2 < uVar1) {
                    // WARNING: Subroutine does not return
      runtime_panicSlice3C();
    }
    uVar2 = uVar2 - uVar1;
  }
  if ((uint)i < uVar2) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void internal_reflectlite_rtype_Implements
               (internal_reflectlite_rtype t,internal_reflectlite_Type u,bool ~r0)

{
  int iVar1;
  internal_abi_Type *T;
  bool ~r0_00;
  undefined8 in_RCX;
  undefined7 in_register_00000019;
  int iVar2;
  int unaff_R14;
  undefined8 uStack0000000000000018;
  interface___ in_stack_ffffffffffffffe0;
  
  iVar2 = CONCAT71(in_register_00000019,~r0);
  uStack0000000000000018 = in_RCX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (iVar2 != 0) {
    iVar1 = (**(code **)(iVar2 + 0x38))(uStack0000000000000018);
    if (iVar1 == 0x14) {
      T = (internal_abi_Type *)(**(code **)(iVar2 + 0x60))(uStack0000000000000018);
      internal_reflectlite_implements(T,t.Type,~r0_00);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe0);
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe0);
}



// Local variable tt:internal/abi.Type *[RAX:8] conflicts with parameter, skipped.

void internal_reflectlite_rtype_AssignableTo
               (internal_reflectlite_rtype t,internal_reflectlite_Type u,bool ~r0)

{
  char extraout_AL;
  internal_abi_Type *T;
  internal_abi_Type *uu;
  bool ~r0_00;
  bool ~r0_01;
  undefined8 in_RCX;
  undefined7 in_register_00000019;
  int unaff_R14;
  undefined8 uStack0000000000000018;
  interface___ in_stack_ffffffffffffffd8;
  
  uStack0000000000000018 = in_RCX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (CONCAT71(in_register_00000019,~r0) == 0) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffd8);
  }
  T = (internal_abi_Type *)
      (**(code **)(CONCAT71(in_register_00000019,~r0) + 0x60))(uStack0000000000000018);
  internal_reflectlite_directlyAssignable(T,t.Type,~r0_00);
  if (extraout_AL == '\0') {
    internal_reflectlite_implements(T,t.Type,~r0_01);
  }
  return;
}



void internal_reflectlite_rtype_Comparable(internal_reflectlite_rtype t,bool ~r0)

{
  return;
}



// Local variable rT:internal/reflectlite.rtype[RAX:8] conflicts with parameter, skipped.
// Local variable rV:internal/reflectlite.rtype[RBX:8] conflicts with parameter, skipped.
// Local variable v_1:internal/abi.InterfaceType *[RBX:8] conflicts with parameter, skipped.

void internal_reflectlite_implements(internal_abi_Type *T,internal_abi_Type *V,bool ~r0)

{
  dword off;
  char extraout_AL;
  char extraout_AL_01;
  char extraout_AL_02;
  uint8 *extraout_RAX;
  internal_abi_Name tmName;
  internal_abi_Name n;
  internal_abi_Name vmName;
  char extraout_AL_00;
  int extraout_RAX_00;
  int extraout_RAX_01;
  uint8 *extraout_RAX_02;
  internal_abi_Name tmName_1;
  internal_abi_Name n_00;
  internal_abi_Name vmName_1;
  int extraout_RAX_03;
  int extraout_RAX_04;
  internal_abi_Name n_01;
  internal_abi_InterfaceType *t;
  void *~r0_00;
  uint uVar1;
  void *pvVar2;
  int extraout_RBX;
  int extraout_RBX_00;
  int extraout_RBX_01;
  int extraout_RBX_02;
  int iVar3;
  int extraout_RBX_03;
  int extraout_RBX_04;
  int extraout_RBX_05;
  int extraout_RBX_06;
  int extraout_RBX_07;
  int extraout_RBX_08;
  int iVar4;
  int extraout_RBX_09;
  int extraout_RBX_10;
  int iVar5;
  byte bVar6;
  internal_abi_UncommonType *v;
  void *~r0_01;
  uint uVar7;
  int unaff_R14;
  bool bVar8;
  internal_abi_InterfaceType *piStack0000000000000008;
  internal_abi_Type *piStack0000000000000010;
  string in_stack_ffffffffffffff40;
  int j_1;
  int j;
  int i;
  int i_1;
  undefined local_40 [8];
  int local_38;
  internal_abi_Name local_28;
  uintptr local_20;
  internal_abi_Name local_18;
  internal_abi_Imethod *local_10;
  
  piStack0000000000000008 = (internal_abi_InterfaceType *)T;
  piStack0000000000000010 = V;
  while (local_40 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  t = piStack0000000000000008;
  if (((piStack0000000000000008->Type).Kind_ & 0x1f) != 0x14) {
    t = (internal_abi_InterfaceType *)0x0;
  }
  if (t == (internal_abi_InterfaceType *)0x0) {
    return;
  }
  if ((t->Methods).len == 0) {
    return;
  }
  bVar6 = piStack0000000000000010->Kind_ & 0x1f;
  if (bVar6 == 0x14) {
    ~r0_01 = (void *)0x0;
    pvVar2 = (void *)0x0;
    do {
      iVar3._0_4_ = piStack0000000000000010[1].Hash;
      iVar3._4_1_ = piStack0000000000000010[1].TFlag;
      iVar3._5_1_ = piStack0000000000000010[1].Align_;
      iVar3._6_1_ = piStack0000000000000010[1].FieldAlign_;
      iVar3._7_1_ = piStack0000000000000010[1].Kind_;
      if (iVar3 <= (int)~r0_01) {
        return;
      }
      if ((void *)(t->Methods).len <= pvVar2) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      local_10 = (t->Methods).array;
      internal_reflectlite_resolveNameOff(piStack0000000000000008,local_10[(int)pvVar2].Name,t);
      if (*(void **)&piStack0000000000000010[1].Hash <= ~r0_01) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      local_20 = piStack0000000000000010[1].PtrBytes;
      local_18.Bytes = extraout_RAX;
      internal_reflectlite_resolveNameOff
                (piStack0000000000000010,*(int32 *)(local_20 + (int)~r0_01 * 8),
                 piStack0000000000000010);
      local_28.Bytes = n.Bytes;
      internal_abi_Name_Name(n,in_stack_ffffffffffffff40);
      internal_abi_Name_Name(local_18,in_stack_ffffffffffffff40);
      if (extraout_RBX_00 == extraout_RBX) {
        runtime_memequal();
        if (extraout_AL == '\0') {
          bVar8 = false;
        }
        else {
          internal_reflectlite_resolveTypeOff
                    (piStack0000000000000010,*(int32 *)(local_20 + 4 + (int)~r0_01 * 8),~r0_01);
          local_38 = extraout_RAX_00;
          internal_reflectlite_resolveTypeOff
                    (piStack0000000000000008,local_10[(int)pvVar2].Typ,pvVar2);
          bVar8 = extraout_RAX_01 == local_38;
        }
      }
      else {
        bVar8 = false;
      }
      if (bVar8) {
        if ((*local_18.Bytes & 1) == 0) {
          internal_reflectlite_pkgPath(local_18,in_stack_ffffffffffffff40);
          iVar3 = extraout_RBX_01;
          if (extraout_RBX_01 == 0) {
            internal_abi_Name_Name((internal_abi_Name)(t->PkgPath).Bytes,in_stack_ffffffffffffff40);
            iVar3 = extraout_RBX_02;
          }
          internal_reflectlite_pkgPath(local_28,in_stack_ffffffffffffff40);
          iVar4 = extraout_RBX_03;
          if (extraout_RBX_03 == 0) {
            internal_abi_Name_Name
                      ((uint8 *)piStack0000000000000010[1].Size_,in_stack_ffffffffffffff40);
            iVar4 = extraout_RBX_04;
          }
          if ((iVar3 != iVar4) || (runtime_memequal(), extraout_AL_00 == '\0')) goto LAB_00471c15;
        }
        pvVar2 = (void *)((int)pvVar2 + 1);
        if ((t->Methods).len <= (int)pvVar2) {
          return;
        }
      }
LAB_00471c15:
      ~r0_01 = (void *)((int)~r0_01 + 1);
    } while( true );
  }
  if ((piStack0000000000000010->TFlag & 1) == 0) {
    v = (internal_abi_UncommonType *)0x0;
  }
  else {
    switch(bVar6) {
    case 0x11:
      v = (internal_abi_UncommonType *)&piStack0000000000000010[1].Equal;
      break;
    case 0x12:
      v = (internal_abi_UncommonType *)&piStack0000000000000010[1].Hash;
      break;
    case 0x13:
      v = (internal_abi_UncommonType *)&piStack0000000000000010[1].PtrBytes;
      break;
    case 0x14:
      v = (internal_abi_UncommonType *)&piStack0000000000000010[1].GCData;
      break;
    case 0x15:
      v = (internal_abi_UncommonType *)&piStack0000000000000010[1].Str;
      break;
    case 0x16:
      v = (internal_abi_UncommonType *)&piStack0000000000000010[1].PtrBytes;
      break;
    case 0x17:
      v = (internal_abi_UncommonType *)&piStack0000000000000010[1].PtrBytes;
      break;
    default:
      v = (internal_abi_UncommonType *)(piStack0000000000000010 + 1);
      break;
    case 0x19:
      v = (internal_abi_UncommonType *)&piStack0000000000000010[1].GCData;
    }
  }
  if (v == (internal_abi_UncommonType *)0x0) {
    return;
  }
  uVar1 = (uint)v->Mcount;
  if (v->Mcount == 0) {
    uVar1 = 0;
    iVar3 = 0;
  }
  else {
    iVar3 = (int)&v->PkgPath + (uint)v->Moff;
    if (0x10000 < uVar1) {
                    // WARNING: Subroutine does not return
      runtime_panicSlice3Alen();
    }
  }
  uVar7 = 0;
  pvVar2 = (void *)0x0;
  do {
    if ((int)(uint)v->Mcount <= (int)uVar7) {
      return;
    }
    if ((void *)(t->Methods).len <= pvVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    local_10 = (t->Methods).array;
    internal_reflectlite_resolveNameOff(piStack0000000000000008,local_10[(int)pvVar2].Name,t);
    if (uVar1 <= uVar7) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    off = *(dword *)(iVar3 + 4 + uVar7 * 0x10);
    local_18.Bytes = extraout_RAX_02;
    internal_reflectlite_resolveNameOff
              (piStack0000000000000010,*(int32 *)(iVar3 + uVar7 * 0x10),(void *)(uint)off);
    local_28.Bytes = n_00.Bytes;
    internal_abi_Name_Name(n_00,in_stack_ffffffffffffff40);
    internal_abi_Name_Name(local_18,in_stack_ffffffffffffff40);
    if (extraout_RBX_06 == extraout_RBX_05) {
      runtime_memequal();
      if (extraout_AL_01 == '\0') {
        bVar8 = false;
      }
      else {
        internal_reflectlite_resolveTypeOff(piStack0000000000000010,off,~r0_00);
        local_38 = extraout_RAX_03;
        internal_reflectlite_resolveTypeOff
                  (piStack0000000000000008,local_10[(int)pvVar2].Typ,pvVar2);
        bVar8 = extraout_RAX_04 == local_38;
      }
    }
    else {
      bVar8 = false;
    }
    if (bVar8) {
      if ((*local_18.Bytes & 1) == 0) {
        internal_reflectlite_pkgPath(local_18,in_stack_ffffffffffffff40);
        iVar4 = extraout_RBX_07;
        if (extraout_RBX_07 == 0) {
          internal_abi_Name_Name((internal_abi_Name)(t->PkgPath).Bytes,in_stack_ffffffffffffff40);
          iVar4 = extraout_RBX_08;
        }
        internal_reflectlite_pkgPath(local_28,in_stack_ffffffffffffff40);
        iVar5 = extraout_RBX_09;
        if (extraout_RBX_09 == 0) {
          internal_reflectlite_resolveNameOff(piStack0000000000000010,v->PkgPath,v);
          internal_abi_Name_Name(n_01,in_stack_ffffffffffffff40);
          iVar5 = extraout_RBX_10;
        }
        if ((iVar5 != iVar4) || (runtime_memequal(), extraout_AL_02 == '\0')) goto LAB_00471e39;
      }
      pvVar2 = (void *)((int)pvVar2 + 1);
      if ((t->Methods).len <= (int)pvVar2) {
        return;
      }
    }
LAB_00471e39:
    uVar7 = uVar7 + 1;
  } while( true );
}



void internal_reflectlite_directlyAssignable(internal_abi_Type *T,internal_abi_Type *V,bool ~r0)

{
  undefined in_DIL;
  undefined extraout_DIL;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  if (T != V) {
    if ((((T->TFlag & 4) == 0) || ((V->TFlag & 4) == 0)) && ((V->Kind_ & 0x1f) == (T->Kind_ & 0x1f))
       ) {
      internal_reflectlite_haveIdenticalUnderlyingType(T,V,true,(bool)in_DIL);
      return;
    }
    return;
  }
  return;
}



void internal_reflectlite_haveIdenticalType
               (internal_abi_Type *T,internal_abi_Type *V,bool cmpTags,bool ~r0)

{
  byte extraout_AL;
  byte bVar1;
  int extraout_RBX;
  int extraout_RBX_00;
  undefined extraout_DIL;
  undefined extraout_DIL_00;
  undefined ~r0_00;
  int unaff_R14;
  internal_reflectlite_rtype iStack0000000000000008;
  internal_reflectlite_rtype iStack0000000000000010;
  string in_stack_ffffffffffffffd0;
  
  iStack0000000000000008.Type = T;
  iStack0000000000000010.Type = V;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (!cmpTags) {
    internal_reflectlite_rtype_Name(iStack0000000000000008,in_stack_ffffffffffffffd0);
    internal_reflectlite_rtype_Name(iStack0000000000000010,in_stack_ffffffffffffffd0);
    if (extraout_RBX_00 == extraout_RBX) {
      runtime_memequal();
      bVar1 = extraout_AL ^ 1;
      ~r0_00 = extraout_DIL_00;
    }
    else {
      bVar1 = 1;
      ~r0_00 = extraout_DIL;
    }
    if (bVar1 == 0) {
      if (((iStack0000000000000010.Type)->Kind_ & 0x1f) ==
          ((iStack0000000000000008.Type)->Kind_ & 0x1f)) {
        internal_reflectlite_haveIdenticalUnderlyingType
                  (iStack0000000000000008.Type,iStack0000000000000010.Type,false,(bool)~r0_00);
        return;
      }
    }
    return;
  }
  return;
}



// Local variable t:internal/abi.FuncType *[RAX:8] conflicts with parameter, skipped.
// Local variable v:internal/abi.FuncType *[RBX:8] conflicts with parameter, skipped.
// Local variable t_1:internal/abi.InterfaceType *[RAX:8] conflicts with parameter, skipped.
// Local variable v_1:internal/abi.InterfaceType *[RBX:8] conflicts with parameter, skipped.
// Local variable t_2:internal/abi.StructType *[RAX:8] conflicts with parameter, skipped.
// Local variable v_2:internal/abi.StructType *[RBX:8] conflicts with parameter, skipped.
// Local variable ch:internal/abi.ChanType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt:internal/abi.ArrayType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_1:internal/abi.ChanType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_2:internal/abi.MapType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_3:internal/abi.PtrType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_4:internal/abi.SliceType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_5:internal/abi.ArrayType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_6:internal/abi.ChanType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_7:internal/abi.MapType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_8:internal/abi.PtrType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_9:internal/abi.SliceType *[RBX:8] conflicts with parameter, skipped.
// Local variable ch_1:internal/abi.ChanType *[RAX:8] conflicts with parameter, skipped.
// Local variable ch_2:internal/abi.ChanType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_10:internal/abi.ArrayType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_11:internal/abi.ChanType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_12:internal/abi.MapType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_13:internal/abi.PtrType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_14:internal/abi.SliceType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_15:internal/abi.ArrayType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_16:internal/abi.ChanType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_17:internal/abi.MapType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_18:internal/abi.PtrType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_19:internal/abi.SliceType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_20:internal/abi.ArrayType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_21:internal/abi.ChanType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_22:internal/abi.MapType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_23:internal/abi.PtrType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_24:internal/abi.SliceType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_25:internal/abi.ArrayType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_26:internal/abi.ChanType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_27:internal/abi.MapType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_28:internal/abi.PtrType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_29:internal/abi.SliceType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_30:internal/abi.ArrayType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_31:internal/abi.ChanType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_32:internal/abi.MapType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_33:internal/abi.PtrType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_34:internal/abi.SliceType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_35:internal/abi.ArrayType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_36:internal/abi.ChanType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_37:internal/abi.MapType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_38:internal/abi.PtrType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_39:internal/abi.SliceType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_40:internal/abi.ArrayType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_41:internal/abi.ChanType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_42:internal/abi.MapType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_43:internal/abi.PtrType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_44:internal/abi.SliceType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_45:internal/abi.ArrayType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_46:internal/abi.ChanType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_47:internal/abi.MapType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_48:internal/abi.PtrType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_49:internal/abi.SliceType *[RBX:8] conflicts with parameter, skipped.

void internal_reflectlite_haveIdenticalUnderlyingType
               (internal_abi_Type *T,internal_abi_Type *V,bool cmpTags,bool ~r0)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  char extraout_AL_02;
  char extraout_AL_03;
  byte extraout_AL_04;
  byte bVar7;
  char extraout_AL_05;
  char extraout_AL_06;
  internal_abi_Type *piVar8;
  uint uVar9;
  int extraout_RBX;
  int extraout_RBX_00;
  int extraout_RBX_01;
  int extraout_RBX_02;
  int extraout_RBX_03;
  int extraout_RBX_04;
  dword dVar10;
  internal_abi_Kind kind;
  uintptr uVar11;
  internal_abi_Type *piVar12;
  uintptr uadd_1;
  int iVar13;
  uintptr uadd_2;
  bool bVar14;
  ushort uVar15;
  uintptr uadd;
  uint uVar16;
  uint uVar17;
  uintptr uVar18;
  uint uVar19;
  uintptr uadd_3;
  uint uVar20;
  int unaff_R14;
  internal_abi_Type *piStack0000000000000008;
  internal_abi_Type *piStack0000000000000010;
  char cStack0000000000000018;
  string in_stack_ffffffffffffff98;
  int i_2;
  int i_1;
  int i;
  
  piStack0000000000000008 = T;
  piStack0000000000000010 = V;
  cStack0000000000000018 = cmpTags;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (piStack0000000000000010 == piStack0000000000000008) {
    return;
  }
  bVar7 = piStack0000000000000008->Kind_ & 0x1f;
  bVar14 = (bool)(piStack0000000000000010->Kind_ & 0x1f);
  if (bVar14 != (bool)bVar7) {
    return;
  }
  if ((piStack0000000000000008->Kind_ & 0x1f) == 0) {
    return;
  }
  if (((bVar7 < 0x11) || (bVar7 == 0x18)) || (bVar7 == 0x1a)) {
    return;
  }
  if (bVar7 < 0x14) {
    if (bVar7 == 0x11) {
      iVar13._0_4_ = piStack0000000000000008[1].Hash;
      iVar13._4_1_ = piStack0000000000000008[1].TFlag;
      iVar13._5_1_ = piStack0000000000000008[1].Align_;
      iVar13._6_1_ = piStack0000000000000008[1].FieldAlign_;
      iVar13._7_1_ = piStack0000000000000008[1].Kind_;
      iVar1._0_4_ = piStack0000000000000010[1].Hash;
      iVar1._4_1_ = piStack0000000000000010[1].TFlag;
      iVar1._5_1_ = piStack0000000000000010[1].Align_;
      iVar1._6_1_ = piStack0000000000000010[1].FieldAlign_;
      iVar1._7_1_ = piStack0000000000000010[1].Kind_;
      if (iVar1 == iVar13) {
        internal_reflectlite_haveIdenticalType
                  ((internal_abi_Type *)piStack0000000000000008[1].Size_,
                   (internal_abi_Type *)piStack0000000000000010[1].Size_,
                   (bool)cStack0000000000000018,bVar14);
      }
      return;
    }
    if (bVar7 != 0x12) {
      if (bVar7 != 0x13) {
        return;
      }
      if ((*(short *)((int)&piStack0000000000000010[1].Size_ + 2) !=
           *(short *)((int)&piStack0000000000000008[1].Size_ + 2)) ||
         (*(short *)&piStack0000000000000010[1].Size_ != *(short *)&piStack0000000000000008[1].Size_
         )) {
        return;
      }
      uVar9 = 0;
      while( true ) {
        uVar16 = (uint)*(ushort *)&piStack0000000000000008[1].Size_;
        if ((int)uVar16 <= (int)uVar9) {
          uVar9 = 0;
          while( true ) {
            dVar10 = (dword)*(ushort *)((int)&piStack0000000000000008[1].Size_ + 2);
            if ((int)(uint)(dVar10 & 0x7fff) <= (int)uVar9) {
              return;
            }
            if ((piStack0000000000000008->TFlag & 1) == 0) {
              uadd_2 = 0x38;
            }
            else {
              uadd_2 = 0x48;
            }
            uVar19 = (uint)*(ushort *)&piStack0000000000000008[1].Size_;
            uVar16 = (uint)((dVar10 & 0x7fff) + (dword)*(ushort *)&piStack0000000000000008[1].Size_
                           & 0xffff);
            if (uVar16 < uVar19) {
                    // WARNING: Subroutine does not return
              runtime_panicSlice3C();
            }
            uVar16 = uVar16 - uVar19;
            if (uVar16 <= uVar9) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            uVar15 = *(ushort *)((int)&piStack0000000000000010[1].Size_ + 2) & 0x7fff;
            if (uVar15 == 0) {
              uVar17 = 0;
              iVar13 = 0;
            }
            else {
              if ((piStack0000000000000010->TFlag & 1) == 0) {
                uadd_3 = 0x38;
              }
              else {
                uadd_3 = 0x48;
              }
              uVar20 = (uint)*(ushort *)&piStack0000000000000010[1].Size_;
              uVar17 = (uint)(ushort)(uVar15 + *(ushort *)&piStack0000000000000010[1].Size_);
              if (uVar17 < uVar20) {
                    // WARNING: Subroutine does not return
                runtime_panicSlice3C();
              }
              uVar17 = uVar17 - uVar20;
              iVar13 = (int)&piStack0000000000000010->Size_ +
                       ((int)-uVar17 >> 0x3f & uVar20 << 3) + uadd_3;
            }
            if (uVar17 <= uVar9) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            internal_reflectlite_haveIdenticalType
                      (*(internal_abi_Type **)
                        ((int)&piStack0000000000000008->Size_ +
                        uVar9 * 8 + (uVar19 << 3 & (int)-uVar16 >> 0x3f) + uadd_2),
                       *(internal_abi_Type **)(iVar13 + uVar9 * 8),(bool)cStack0000000000000018,
                       SUB81(iVar13,0));
            if (extraout_AL_06 == '\0') break;
            uVar9 = uVar9 + 1;
          }
          return;
        }
        if ((piStack0000000000000008->TFlag & 1) == 0) {
          uadd = 0x38;
        }
        else {
          uadd = 0x48;
        }
        if (0x10000 < uVar16) {
                    // WARNING: Subroutine does not return
          runtime_panicSlice3Alen();
        }
        if (uVar16 <= uVar9) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        piVar12 = *(internal_abi_Type **)((int)&piStack0000000000000008->Size_ + uVar9 * 8 + uadd);
        if ((piStack0000000000000010->TFlag & 1) == 0) {
          uadd_1 = 0x38;
        }
        else {
          uadd_1 = 0x48;
        }
        uVar16 = (uint)*(ushort *)&piStack0000000000000010[1].Size_;
        if (*(ushort *)&piStack0000000000000010[1].Size_ == 0) {
          uVar16 = 0;
          iVar13 = 0;
        }
        else {
          iVar13 = (int)&piStack0000000000000010->Size_ + uadd_1;
          if (0x10000 < uVar16) {
                    // WARNING: Subroutine does not return
            runtime_panicSlice3Alen();
          }
        }
        if (uVar16 <= uVar9) break;
        internal_reflectlite_haveIdenticalType
                  (piVar12,*(internal_abi_Type **)(iVar13 + uVar9 * 8),(bool)cStack0000000000000018,
                   SUB81(piVar12,0));
        if (extraout_AL_05 == '\0') {
          return;
        }
        uVar9 = uVar9 + 1;
      }
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((piStack0000000000000010[1].PtrBytes == 3) &&
       (internal_reflectlite_haveIdenticalType
                  ((internal_abi_Type *)piStack0000000000000008[1].Size_,
                   (internal_abi_Type *)piStack0000000000000010[1].Size_,
                   (bool)cStack0000000000000018,bVar14), extraout_AL != '\0')) {
      return;
    }
    bVar7 = piStack0000000000000010->Kind_ & 0x1f;
    if (bVar7 == 0x12) {
      uVar11 = piStack0000000000000010[1].PtrBytes;
    }
    else {
      uVar11 = 0;
    }
    bVar14 = (bool)(piStack0000000000000008->Kind_ & 0x1f);
    if (bVar14 == true) {
      uVar18 = piStack0000000000000008[1].PtrBytes;
    }
    else {
      uVar18 = 0;
    }
    if (uVar11 != uVar18) {
      return;
    }
    if (bVar14 < 0x13) {
      if (bVar14 == true) {
        piVar12 = (internal_abi_Type *)piStack0000000000000008[1].Size_;
      }
      else if (bVar14 == true) {
        piVar12 = (internal_abi_Type *)piStack0000000000000008[1].Size_;
      }
      else {
LAB_004723b6:
        piVar12 = (internal_abi_Type *)0x0;
      }
    }
    else if (bVar14 == true) {
      piVar12 = (internal_abi_Type *)piStack0000000000000008[1].PtrBytes;
    }
    else if (bVar14 == true) {
      piVar12 = (internal_abi_Type *)piStack0000000000000008[1].Size_;
    }
    else {
      if (bVar14 != true) goto LAB_004723b6;
      piVar12 = (internal_abi_Type *)piStack0000000000000008[1].Size_;
    }
    if (bVar7 < 0x13) {
      if (bVar7 == 0x11) {
        piVar8 = (internal_abi_Type *)piStack0000000000000010[1].Size_;
        goto LAB_004723fe;
      }
      if (bVar7 == 0x12) {
        piVar8 = (internal_abi_Type *)piStack0000000000000010[1].Size_;
        goto LAB_004723fe;
      }
    }
    else {
      if (bVar7 == 0x15) {
        piVar8 = (internal_abi_Type *)piStack0000000000000010[1].PtrBytes;
        goto LAB_004723fe;
      }
      if (bVar7 == 0x16) {
        piVar8 = (internal_abi_Type *)piStack0000000000000010[1].Size_;
        goto LAB_004723fe;
      }
      if (bVar7 == 0x17) {
        piVar8 = (internal_abi_Type *)piStack0000000000000010[1].Size_;
        goto LAB_004723fe;
      }
    }
    piVar8 = (internal_abi_Type *)0x0;
LAB_004723fe:
    internal_reflectlite_haveIdenticalType(piVar12,piVar8,(bool)cStack0000000000000018,bVar14);
    return;
  }
  if (0x15 < bVar7) {
    if (bVar7 < 0x18) {
      if (bVar7 == 0x16) {
        piVar12 = (internal_abi_Type *)piStack0000000000000008[1].Size_;
      }
      else {
        piVar12 = (internal_abi_Type *)piStack0000000000000008[1].Size_;
      }
      if (bVar14 == true) {
        piVar8 = (internal_abi_Type *)piStack0000000000000010[1].Size_;
      }
      else if (bVar14 == true) {
        piVar8 = (internal_abi_Type *)piStack0000000000000010[1].Size_;
      }
      else {
        piVar8 = (internal_abi_Type *)0x0;
      }
      internal_reflectlite_haveIdenticalType(piVar12,piVar8,(bool)cStack0000000000000018,bVar14);
      return;
    }
    if (bVar7 != 0x19) {
      return;
    }
    iVar2._0_4_ = piStack0000000000000010[1].Hash;
    iVar2._4_1_ = piStack0000000000000010[1].TFlag;
    iVar2._5_1_ = piStack0000000000000010[1].Align_;
    iVar2._6_1_ = piStack0000000000000010[1].FieldAlign_;
    iVar2._7_1_ = piStack0000000000000010[1].Kind_;
    iVar3._0_4_ = piStack0000000000000008[1].Hash;
    iVar3._4_1_ = piStack0000000000000008[1].TFlag;
    iVar3._5_1_ = piStack0000000000000008[1].Align_;
    iVar3._6_1_ = piStack0000000000000008[1].FieldAlign_;
    iVar3._7_1_ = piStack0000000000000008[1].Kind_;
    if (iVar3 != iVar2) {
      return;
    }
    internal_abi_Name_Name((uint8 *)piStack0000000000000008[1].Size_,in_stack_ffffffffffffff98);
    internal_abi_Name_Name((uint8 *)piStack0000000000000010[1].Size_,in_stack_ffffffffffffff98);
    if ((extraout_RBX_00 == extraout_RBX) && (runtime_memequal(), extraout_AL_01 != '\0')) {
      iVar4._0_4_ = piStack0000000000000008[1].Hash;
      iVar4._4_1_ = piStack0000000000000008[1].TFlag;
      iVar4._5_1_ = piStack0000000000000008[1].Align_;
      iVar4._6_1_ = piStack0000000000000008[1].FieldAlign_;
      iVar4._7_1_ = piStack0000000000000008[1].Kind_;
      uVar9 = 0;
      while( true ) {
        if (iVar4 <= (int)uVar9) {
          return;
        }
        uVar16._0_4_ = piStack0000000000000008[1].Hash;
        uVar16._4_1_ = piStack0000000000000008[1].TFlag;
        uVar16._5_1_ = piStack0000000000000008[1].Align_;
        uVar16._6_1_ = piStack0000000000000008[1].FieldAlign_;
        uVar16._7_1_ = piStack0000000000000008[1].Kind_;
        if (uVar16 <= uVar9) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        uVar19._0_4_ = piStack0000000000000010[1].Hash;
        uVar19._4_1_ = piStack0000000000000010[1].TFlag;
        uVar19._5_1_ = piStack0000000000000010[1].Align_;
        uVar19._6_1_ = piStack0000000000000010[1].FieldAlign_;
        uVar19._7_1_ = piStack0000000000000010[1].Kind_;
        if (uVar19 <= uVar9) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        uVar11 = piStack0000000000000008[1].PtrBytes;
        uVar18 = piStack0000000000000010[1].PtrBytes;
        internal_abi_Name_Name
                  ((internal_abi_Name)*(uint8 **)(uVar11 + uVar9 * 0x18),in_stack_ffffffffffffff98);
        internal_abi_Name_Name
                  ((internal_abi_Name)*(uint8 **)(uVar18 + uVar9 * 0x18),in_stack_ffffffffffffff98);
        if ((extraout_RBX_02 != extraout_RBX_01) || (runtime_memequal(), extraout_AL_02 == '\0'))
        break;
        internal_reflectlite_haveIdenticalType
                  (*(internal_abi_Type **)(uVar11 + 8 + uVar9 * 0x18),
                   *(internal_abi_Type **)(uVar18 + 8 + uVar9 * 0x18),(bool)cStack0000000000000018,
                   SUB81(uVar18,0));
        if (extraout_AL_03 == '\0') {
          return;
        }
        if (cStack0000000000000018 != '\0') {
          internal_abi_Name_Tag
                    ((internal_abi_Name)*(uint8 **)(uVar11 + uVar9 * 0x18),in_stack_ffffffffffffff98
                    );
