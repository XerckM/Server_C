  runtime_hmap **pprVar4;
  int i_1;
  int *extraout_RAX_05;
  bool ok;
  undefined8 extraout_RCX;
  undefined8 extraout_RCX_00;
  undefined8 uVar5;
  int i;
  map_string_int m;
  runtime_hmap *h;
  bool ok1;
  int extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint uVar6;
  int extraout_RBX_02;
  int extraout_RBX_03;
  int extraout_RBX_04;
  int extraout_RBX_05;
  int iVar7;
  int extraout_RBX_06;
  int j;
  int iVar8;
  bool ok_1;
  int port;
  runtime_hmap **extraout_R11;
  int unaff_R14;
  uint8 *in_stack_ffffffffffffff68;
  int in_stack_ffffffffffffff70;
  uint uVar9;
  undefined uVar10;
  undefined7 in_stack_ffffffffffffff79;
  uint in_stack_ffffffffffffff80;
  undefined7 in_stack_ffffffffffffff88;
  undefined uVar11;
  int in_stack_ffffffffffffff90;
  int in_stack_ffffffffffffff98;
  undefined local_20 [16];
  code **local_10;
  
  while (local_20 + 8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  f = (net_file *)
      net_open("/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen , not pointer != sweepgen  MB globals,  work.nproc=  work.nwait=  nStackRoots= flushedWork double unlock s.spanclass= MB) workers=min too large-byte block (runtime: val=runtime: seq= failed with timer_settimefatal error:  idlethreads= syscalltick=load64 failedxadd64 failedxchg64 failedmp.g0 stack [nil stackbase}\n\tsched={pc:, gp->status= pluginpath= : unknown pc  called from level 3 resetexchange fulltimer expiredsrmount errorreserved_namedefault_valuephp_namespace<unknown: %T>AlreadyExistsUnimplementedUNIMPLEMENTED\"UNAVAILABLE\"INVALID_STATE in host nameGrpc-Encodinggrpc-encodinggrpc-tags-bintransport: %vunix-abstractIntegrityOnlyAddr: <nil>, AuthorizationAccept-RangesIf-None-MatchLast-Modified[FrameHeader invalid base accept-rangesauthorizationcache-controlcontent-rangeif-none-matchlast-modifiedCache-ControlReset ContentLoop DetectedSTREAM_CLOSEDCONNECT_ERRORWINDOW_UPDATE3814697265625#   %s\t%s:%d\n/debug/eventsGunjala_GondiMasaram_GondiMende_KikakuiOld_Hungarianinvalid port name too longData: []byte{gocacheverifyinstallgoroothtml/templatetlsmaxrsasize for message gzip, deflate_grpc_config.SHA256-RSAPSSSHA384-RSAPSSSHA512-RSAPSSSSL_CERT_FILEemail addressLOGGER_CLIENTLOGGER_SERVERnot availableIsPlaceholderReservedNamesinvalid ASN.1empty integerunsupported: invalid UTF-8unexpected %sdefine clauseempty commandDownArrowBar;DownTeeArrow;ExponentialE;GreaterEqual;GreaterTilde;HilbertSpace;HumpDownHump;Intersection;LeftArrowBar;LeftTeeArrow;LeftTriangle;LeftUpVector;NotCongruent;NotLessEqual;NotLessTilde;Proportional;RightCeiling;RoundImplies;ShortUpArrow;SquareSubset;UnderBracket;VerticalLine;blacklozenge;exponentiale;risingdotseq;triangledown;triangleleft;NotHumpEqual;varsubsetneq;varsupsetneq;Authenticating.WithDeadline(<not Stringer>/proc/self/exeSubConn(id:%d)grpc-go/1.64.0Server createdunexpected EOF: extra text..." /* TRUNCATED STRING LITERAL */
               ,0xd);
  if (extraout_RBX != 0) {
    return;
  }
  local_20._8_8_ = f;
  local_20._0_8_ = net_readServices_func1;
  local_10 = (code **)local_20;
  uVar11 = 1;
  s.len = in_stack_ffffffffffffff70;
  s.str = in_stack_ffffffffffffff68;
  net___file__readLine(f,s,false);
  puVar3 = extraout_RAX;
  uVar5 = extraout_RCX;
  uVar6 = extraout_RBX_00;
  do {
    if ((char)uVar5 == '\0') {
      (**local_10)();
      return;
    }
    uVar10 = 0x23;
    uVar9 = uVar6;
    internal_bytealg_IndexByteString();
    if ((-1 < (int)in_stack_ffffffffffffff80) && (uVar6 < in_stack_ffffffffffffff80)) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    s_01.len = uVar9;
    s_01.str = puVar3;
    t.str._1_7_ = in_stack_ffffffffffffff79;
    t.str._0_1_ = uVar10;
    t.len = in_stack_ffffffffffffff80;
    ~r0_00.array._7_1_ = uVar11;
    ~r0_00.array._0_7_ = in_stack_ffffffffffffff88;
    ~r0_00.len = in_stack_ffffffffffffff90;
    ~r0_00.cap = in_stack_ffffffffffffff98;
    net_splitAtBytes(s_01,t,~r0_00);
    iVar7 = extraout_RBX_02;
    if (1 < extraout_RBX_02) {
      uVar6 = *(uint *)(extraout_RAX_01 + 0x18);
      iVar8 = *(int *)(extraout_RAX_01 + 0x10);
      port = 0;
      for (j = 0; ((j < (int)uVar6 && (bVar1 = *(byte *)(iVar8 + j), 0x2f < bVar1)) &&
                  (bVar1 < 0x3a)); j = j + 1) {
        port = (uint)(byte)(bVar1 - 0x30) + port * 10;
        if (0xfffffe < port) {
          bVar2 = false;
          port = 0xffffff;
          goto LAB_005fa460;
        }
      }
      if (j == 0) {
        bVar2 = false;
        j = 0;
        port = 0;
      }
      else {
        bVar2 = true;
      }
LAB_005fa460:
      if (((bVar2) && (0 < port)) && (j < (int)uVar6)) {
        if (uVar6 <= (uint)j) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        if (*(char *)(j + iVar8) == '/') {
          in_stack_ffffffffffffff98 = (uVar6 - j) + -1;
          ~r0 = (void *)(iVar8 + (j + 1U & -in_stack_ffffffffffffff98 >> 0x3f));
          ky.len = uVar9;
          ky.str = puVar3;
          iVar8 = extraout_RBX_02;
          runtime_mapaccess2_faststr
                    ((internal_abi_MapType *)&DAT_0082c740,(runtime_hmap *)net_services,ky,~r0,
                     SUB81(in_stack_ffffffffffffff98,0));
          h = (runtime_hmap *)~r0_01->count;
          iVar7 = extraout_RBX_03;
          if ((char)extraout_RBX_03 == '\0') {
            runtime_makemap_small(~r0_01);
            s_02.len = uVar9;
            s_02.str = puVar3;
            runtime_mapassign_faststr
                      ((internal_abi_MapType *)&DAT_0082c740,(runtime_hmap *)net_services,s_02,~r0);
            pprVar4 = extraout_RAX_03;
            iVar7 = extraout_RBX_04;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier2();
              *extraout_R11 = extraout_RAX_02;
              extraout_R11[1] = *extraout_RAX_04;
              pprVar4 = extraout_RAX_04;
              iVar7 = extraout_RBX_05;
            }
            *pprVar4 = extraout_RAX_02;
            h = extraout_RAX_02;
          }
          in_stack_ffffffffffffff90 = iVar8;
          for (i_1 = 0; i_1 < iVar8; i_1 = i_1 + 1) {
            if (i_1 != 1) {
              s_03.len = uVar9;
              s_03.str = puVar3;
              iVar8 = in_stack_ffffffffffffff90;
              runtime_mapassign_faststr
                        ((internal_abi_MapType *)&DAT_0082c560,h,s_03,
                         *(void **)(extraout_RAX_01 + i_1 * 0x10));
              *extraout_RAX_05 = port;
              iVar7 = extraout_RBX_06;
              in_stack_ffffffffffffff90 = iVar8;
            }
          }
        }
      }
    }
    s_00.len = uVar9;
    s_00.str = puVar3;
    net___file__readLine(f,s_00,SUB81(iVar7,0));
    puVar3 = extraout_RAX_00;
    uVar5 = extraout_RCX_00;
    uVar6 = extraout_RBX_01;
  } while( true );
}



// WARNING: Unknown calling convention

void net_readServices_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  net___file__close(*(int *)(in_RDX + 8));
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void net_goLookupPort(string network,string service,int port,error err)

{
  error error;
  runtime_itab *unaff_RBP;
  int unaff_R14;
  void *unaff_retaddr;
  string in_stack_ffffffffffffffd8;
  string in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (net_onceReadServices.done == 0) {
    sync___Once__doSlow(&net_onceReadServices,(func__ **)&PTR_net_readServices_008eb160);
  }
  error.data = unaff_retaddr;
  error.tab = unaff_RBP;
  net_lookupPortMap(in_stack_ffffffffffffffd8,in_stack_ffffffffffffffe8,port,error);
  return;
}



void net___rawConn__Control(net_rawConn *c,func_uintptr_ **f,error ~r0)

{
  error ~r0_1;
  int extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *puVar1;
  net_rawConn *extraout_RCX;
  void *extraout_RCX_00;
  void *pvVar2;
  void *pvVar3;
  uint8 *puVar4;
  void *~r0_00;
  uint8 **extraout_R11;
  void **extraout_R11_00;
  void **extraout_R11_01;
  int unaff_R14;
  undefined in_XMM15 [16];
  error in_stack_ffffffffffffffd0;
  runtime_itab *in_stack_ffffffffffffffe0;
  int iVar5;
  void *in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((c != (net_rawConn *)0x0) && (c->fd != (net_netFD *)0x0)) {
    ~r0_1.data = in_stack_ffffffffffffffe8;
    ~r0_1.tab = in_stack_ffffffffffffffe0;
    internal_poll___FD__RawControl(&c->fd->pfd,f,in_stack_ffffffffffffffd0,~r0_1);
    if (extraout_RAX != 0) {
      iVar5 = extraout_RAX;
      pvVar3 = ~r0_00;
      runtime_newobject((internal_abi_Type *)&DAT_0087daa0,~r0_00);
      extraout_RAX_00[1] = 0xb;
      *extraout_RAX_00 = &DAT_008b3a8b;
      puVar4 = (c->fd->net).str;
      extraout_RAX_00[3] = (c->fd->net).len;
      puVar1 = extraout_RAX_00;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11 = puVar4;
        puVar1 = extraout_RAX_01;
        c = extraout_RCX;
      }
      puVar1[2] = puVar4;
      *(undefined (*) [16])(puVar1 + 4) = in_XMM15;
      pvVar2 = (c->fd->laddr).data;
      puVar1[6] = (c->fd->laddr).tab;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_00 = extraout_RCX_00;
        puVar1 = extraout_RAX_02;
        pvVar2 = extraout_RCX_00;
      }
      puVar1[7] = pvVar2;
      puVar1[8] = iVar5;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_01 = pvVar3;
        puVar1 = extraout_RAX_03;
      }
      puVar1[9] = pvVar3;
    }
    return;
  }
  return;
}



void net___rawConn__Read(net_rawConn *c,func_uintptr__bool **f,error ~r0)

{
  error ~r0_1;
  int extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *puVar1;
  net_rawConn *extraout_RCX;
  net_rawConn *extraout_RCX_00;
  void *extraout_RCX_01;
  void *pvVar2;
  void *pvVar3;
  uint8 *puVar4;
  void *~r0_00;
  uint8 **extraout_R11;
  void **extraout_R11_00;
  void **extraout_R11_01;
  void **extraout_R11_02;
  int unaff_R14;
  error in_stack_ffffffffffffffd0;
  runtime_itab *in_stack_ffffffffffffffe0;
  int iVar5;
  void *in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((c != (net_rawConn *)0x0) && (c->fd != (net_netFD *)0x0)) {
    ~r0_1.data = in_stack_ffffffffffffffe8;
    ~r0_1.tab = in_stack_ffffffffffffffe0;
    internal_poll___FD__RawRead(&c->fd->pfd,f,in_stack_ffffffffffffffd0,~r0_1);
    if (extraout_RAX != 0) {
      iVar5 = extraout_RAX;
      pvVar3 = ~r0_00;
      runtime_newobject((internal_abi_Type *)&DAT_0087daa0,~r0_00);
      extraout_RAX_00[1] = 8;
      *extraout_RAX_00 = &DAT_008b1aee;
      puVar4 = (c->fd->net).str;
      extraout_RAX_00[3] = (c->fd->net).len;
      puVar1 = extraout_RAX_00;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11 = puVar4;
        puVar1 = extraout_RAX_01;
        c = extraout_RCX;
      }
      puVar1[2] = puVar4;
      pvVar2 = (c->fd->laddr).data;
      puVar1[4] = (c->fd->laddr).tab;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_00 = pvVar2;
        puVar1 = extraout_RAX_02;
        c = extraout_RCX_00;
      }
      puVar1[5] = pvVar2;
      pvVar2 = (c->fd->raddr).data;
      puVar1[6] = (c->fd->raddr).tab;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_01 = extraout_RCX_01;
        puVar1 = extraout_RAX_03;
        pvVar2 = extraout_RCX_01;
      }
      puVar1[7] = pvVar2;
      puVar1[8] = iVar5;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_02 = pvVar3;
        puVar1 = extraout_RAX_04;
      }
      puVar1[9] = pvVar3;
    }
    return;
  }
  return;
}



void net___rawConn__Write(net_rawConn *c,func_uintptr__bool **f,error ~r0)

{
  error ~r0_1;
  int extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *puVar1;
  net_rawConn *extraout_RCX;
  net_rawConn *extraout_RCX_00;
  void *extraout_RCX_01;
  void *pvVar2;
  void *pvVar3;
  uint8 *puVar4;
  void *~r0_00;
  uint8 **extraout_R11;
  void **extraout_R11_00;
  void **extraout_R11_01;
  void **extraout_R11_02;
  int unaff_R14;
  error in_stack_ffffffffffffffd0;
  runtime_itab *in_stack_ffffffffffffffe0;
  int iVar5;
  void *in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((c != (net_rawConn *)0x0) && (c->fd != (net_netFD *)0x0)) {
    ~r0_1.data = in_stack_ffffffffffffffe8;
    ~r0_1.tab = in_stack_ffffffffffffffe0;
    internal_poll___FD__RawWrite(&c->fd->pfd,f,in_stack_ffffffffffffffd0,~r0_1);
    if (extraout_RAX != 0) {
      iVar5 = extraout_RAX;
      pvVar3 = ~r0_00;
      runtime_newobject((internal_abi_Type *)&DAT_0087daa0,~r0_00);
      extraout_RAX_00[1] = 9;
      *extraout_RAX_00 = &DAT_008b2612;
      puVar4 = (c->fd->net).str;
      extraout_RAX_00[3] = (c->fd->net).len;
      puVar1 = extraout_RAX_00;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11 = puVar4;
        puVar1 = extraout_RAX_01;
        c = extraout_RCX;
      }
      puVar1[2] = puVar4;
      pvVar2 = (c->fd->laddr).data;
      puVar1[4] = (c->fd->laddr).tab;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_00 = pvVar2;
        puVar1 = extraout_RAX_02;
        c = extraout_RCX_00;
      }
      puVar1[5] = pvVar2;
      pvVar2 = (c->fd->raddr).data;
      puVar1[6] = (c->fd->raddr).tab;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_01 = extraout_RCX_01;
        puVar1 = extraout_RAX_03;
        pvVar2 = extraout_RCX_01;
      }
      puVar1[7] = pvVar2;
      puVar1[8] = iVar5;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_02 = pvVar3;
        puVar1 = extraout_RAX_04;
      }
      puVar1[9] = pvVar3;
    }
    return;
  }
  return;
}



void net___rawConn__PollFD(net_rawConn *c,internal_poll_FD *~r0)

{
  if ((c != (net_rawConn *)0x0) && (c->fd != (net_netFD *)0x0)) {
    return;
  }
  return;
}



void net___rawListener__Read(net_rawListener *l,error ~r0)

{
  return;
}



void net___rawListener__Write(net_rawListener *l,error ~r0)

{
  return;
}



// WARNING: Removing unreachable block (ram,0x005fad5f)

void net_sendFile(net_netFD *c,io_Reader r,int64 written,error err,bool handled)

{
  int *extraout_RAX;
  int64 *_written;
  int *extraout_RAX_00;
  bool *_handled;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined (*extraout_RAX_03) [16];
  error *_werr;
  code **extraout_RAX_04;
  code **extraout_RAX_05;
  code **ppcVar1;
  undefined8 *extraout_RAX_06;
  undefined8 *extraout_RAX_07;
  undefined8 *puVar2;
  undefined7 in_register_00000009;
  undefined8 *puVar3;
  undefined1 *puVar4;
  undefined8 *puVar5;
  io_LimitedReader *lr;
  void *~r0;
  void *~r0_00;
  void *~r0_01;
  int64 remain;
  code *pcVar6;
  runtime_itab *prVar7;
  undefined8 *extraout_R11;
  int **extraout_R11_00;
  void **extraout_R11_01;
  int unaff_R14;
  undefined in_XMM15 [16];
  undefined auVar8 [16];
  
  puVar2 = (undefined8 *)CONCAT71(in_register_00000009,handled);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_newobject((internal_abi_Type *)&DAT_00807820,(void *)written);
  runtime_newobject((internal_abi_Type *)&DAT_00807620,~r0);
  if ((undefined1 *)written == go_itab__io_LimitedReader_io_Reader) {
    pcVar6 = (code *)puVar2[2];
    if ((int)pcVar6 < 1) {
      *extraout_RAX = 0;
      *(undefined *)extraout_RAX_00 = 1;
      return;
    }
    written = *puVar2;
    puVar3 = (undefined8 *)puVar2[1];
    puVar5 = puVar2;
  }
  else {
    puVar5 = (undefined8 *)0x0;
    pcVar6 = (code *)0x7fffffffffffffff;
    puVar3 = puVar2;
  }
  if ((undefined1 *)written != go_itab__os_File_io_Reader) {
    *extraout_RAX = 0;
    *(undefined *)extraout_RAX_00 = 0;
    return;
  }
  prVar7 = os_ErrInvalid.tab;
  if (puVar3 != (undefined8 *)0x0) {
    prVar7 = (runtime_itab *)0x0;
  }
  if (prVar7 == (runtime_itab *)0x0) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e7e0,go_itab__os_File_io_Reader);
    puVar2 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = puVar3;
      puVar2 = extraout_RAX_02;
    }
    *puVar2 = puVar3;
    prVar7 = (runtime_itab *)0x0;
    puVar4 = go_itab__os_rawConn_syscall_RawConn;
  }
  else {
    puVar4 = (undefined1 *)0x0;
    puVar2 = (undefined8 *)0x0;
  }
  if (prVar7 != (runtime_itab *)0x0) {
    *extraout_RAX = 0;
    *(undefined *)extraout_RAX_00 = 0;
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00835ac0,puVar2);
  *extraout_RAX_03 = in_XMM15;
  runtime_newobject((internal_abi_Type *)&DAT_008834c0,~r0_00);
  *extraout_RAX_04 = net_sendFile_func1;
  ppcVar1 = extraout_RAX_04;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier4();
    *extraout_R11_00 = extraout_RAX;
    extraout_R11_00[1] = (int *)extraout_RAX_03;
    extraout_R11_00[2] = extraout_RAX_00;
    extraout_R11_00[3] = (int *)c;
    ppcVar1 = extraout_RAX_05;
  }
  ppcVar1[1] = (code *)extraout_RAX;
  ppcVar1[2] = (code *)extraout_RAX_03;
  ppcVar1[3] = (code *)extraout_RAX_00;
  ppcVar1[4] = (code *)c;
  ppcVar1[5] = pcVar6;
  auVar8 = (**(code **)(puVar4 + 0x20))(puVar2,ppcVar1);
  if (auVar8._0_8_ == 0) {
    auVar8 = *extraout_RAX_03;
  }
  ~r0_01 = auVar8._8_8_;
  if (puVar5 != (undefined8 *)0x0) {
    puVar5[2] = (int)pcVar6 - *extraout_RAX;
  }
  if (auVar8._0_8_ == go_itab_syscall_Errno_error) {
    runtime_newobject((internal_abi_Type *)&DAT_0084dae0,~r0_01);
    extraout_RAX_06[1] = 8;
    *extraout_RAX_06 = &DAT_008b1af6;
    extraout_RAX_06[2] = go_itab_syscall_Errno_error;
    puVar2 = extraout_RAX_06;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_01 = ~r0_01;
      puVar2 = extraout_RAX_07;
    }
    puVar2[3] = ~r0_01;
  }
  return;
}



void net_sendFile_func1(uintptr fd,bool ~r0)

{
  undefined *puVar1;
  error ~r1_1;
  undefined8 extraout_RAX;
  int64 remain;
  undefined8 extraout_RCX;
  undefined8 extraout_RCX_00;
  undefined8 uVar2;
  int in_RDX;
  bool *_handled;
  undefined8 *~r0_00;
  undefined8 extraout_RBX;
  int64 *_written;
  undefined extraout_DIL;
  undefined extraout_DIL_00;
  undefined uVar3;
  error *_werr;
  net_netFD *c;
  undefined in_R9B;
  undefined extraout_R9B;
  undefined8 *extraout_R11;
  int unaff_R14;
  error in_stack_ffffffffffffffc8;
  runtime_itab *in_stack_ffffffffffffffd8;
  undefined8 *~r0_1;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
    in_R9B = extraout_R9B;
  }
  ~r0_1 = *(undefined8 **)(in_RDX + 8);
  ~r0_00 = *(undefined8 **)(in_RDX + 0x10);
  puVar1 = *(undefined **)(in_RDX + 0x18);
  ~r1_1.data = ~r0_1;
  ~r1_1.tab = in_stack_ffffffffffffffd8;
  internal_poll_SendFile
            (*(internal_poll_FD **)(in_RDX + 0x20),fd,*(int64 *)(in_RDX + 0x28),(int64)~r0_00,
             (int64)~r0_1,in_stack_ffffffffffffffc8,~r1_1,
             SUB81(*(internal_poll_FD **)(in_RDX + 0x20),0),(bool)in_R9B);
  *~r0_1 = extraout_RAX;
  *~r0_00 = extraout_RBX;
  uVar2 = extraout_RCX;
  uVar3 = extraout_DIL;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RCX_00;
    extraout_R11[1] = ~r0_00[1];
    uVar2 = extraout_RCX_00;
    uVar3 = extraout_DIL_00;
  }
  ~r0_00[1] = uVar2;
  *puVar1 = uVar3;
  return;
}



void net_sysSocket(int family,int sotype,int proto,int ~r0,error ~r1)

{
  sdword sVar1;
  char extraout_AL;
  char extraout_AL_00;
  int s;
  int __fd;
  char **extraout_RAX;
  char **extraout_RAX_00;
  char **ppcVar2;
  int extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *puVar3;
  char **extraout_RAX_04;
  char **extraout_RAX_05;
  char *x;
  char *extraout_RCX;
  int32 r;
  char *extraout_RBX;
  char *extraout_RBX_00;
  char *~r0_00;
  error *extraout_RBX_01;
  void *~r0_01;
  char *~r0_02;
  sdword sVar4;
  bool ~r0_03;
  undefined extraout_DIL;
  undefined ~r0_04;
  sync_atomic_Int32 *extraout_RDI;
  sync_atomic_Int32 *psVar5;
  char **extraout_R11;
  error **extraout_R11_00;
  char **extraout_R11_01;
  int unaff_R14;
  error in_stack_ffffffffffffffb0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  (**net_socketFunc)(family,sotype | 0x80800U,proto,(int *)(sotype | 0x80800U),
                     (error *)*net_socketFunc);
  if (extraout_RBX == (char *)0x0) {
    return;
  }
  ~r0_04 = ~r0_03;
  if (((extraout_RBX != go_itab_syscall_Errno_error) ||
      (runtime_ifaceeq((runtime_itab *)go_itab_syscall_Errno_error,x,&DAT_0095c670,~r0_03),
      ~r0_04 = extraout_DIL, extraout_AL == '\0')) &&
     ((~r0_02 = extraout_RBX, extraout_RBX != go_itab_syscall_Errno_error ||
      (runtime_ifaceeq((runtime_itab *)go_itab_syscall_Errno_error,x,&DAT_0095c5d8,(bool)~r0_04),
      ~r0_02 = extraout_RBX_00, extraout_AL_00 == '\0')))) {
    runtime_newobject((internal_abi_Type *)&DAT_0084dae0,~r0_02);
    extraout_RAX_04[1] = (char *)0x6;
    *extraout_RAX_04 =
         "socketacceptdomaingophertelnet Valuesysmontimersefenceselect, not object next= jobs= goid sweep  B -> % util alloc free  span= prev= list=, i =  code= addr= m->p= p->m=SCHED  curg=], sp= ctxt: min=  max= (...)\n base allow"
    ;
    extraout_RAX_04[2] = extraout_RBX;
    ppcVar2 = extraout_RAX_04;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_01 = x;
      ppcVar2 = extraout_RAX_05;
    }
    ppcVar2[3] = x;
    return;
  }
  psVar5 = &syscall_ForkLock.readerCount;
  LOCK();
  sVar1 = syscall_ForkLock.readerCount.v + 1;
  UNLOCK();
  sVar4 = syscall_ForkLock.readerCount.v + 1;
  syscall_ForkLock.readerCount.v = sVar1;
  if (sVar4 < 0) {
    sync_runtime_SemacquireRWMutexR(&syscall_ForkLock.readerSem,false,0);
    psVar5 = extraout_RDI;
  }
  (**net_socketFunc)(family,sotype,proto,(int *)psVar5,(error *)*net_socketFunc);
  if (~r0_00 == (char *)0x0) {
    syscall_fcntl(__fd,2,1);
  }
  LOCK();
  sVar1 = syscall_ForkLock.readerCount.v + -1;
  UNLOCK();
  sVar4 = syscall_ForkLock.readerCount.v + -1;
  syscall_ForkLock.readerCount.v = sVar1;
  if (sVar4 < 0) {
    sync___RWMutex__rUnlockSlow(&syscall_ForkLock,sVar4);
  }
  if (~r0_00 == (char *)0x0) {
    syscall_SetNonblock(__fd,true,in_stack_ffffffffffffffb0);
    if (extraout_RAX_01 == 0) {
      return;
    }
    (**internal_poll_CloseFunc)(__fd,extraout_RBX_01);
    runtime_newobject((internal_abi_Type *)&DAT_0084dae0,~r0_01);
    extraout_RAX_02[1] = 0xb;
    *extraout_RAX_02 = &DAT_008b3a75;
    extraout_RAX_02[2] = extraout_RAX_01;
    puVar3 = extraout_RAX_02;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = extraout_RBX_01;
      puVar3 = extraout_RAX_03;
    }
    puVar3[3] = extraout_RBX_01;
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0084dae0,~r0_00);
  extraout_RAX[1] = (char *)0x6;
  *extraout_RAX =
       "socketacceptdomaingophertelnet Valuesysmontimersefenceselect, not object next= jobs= goid sweep  B -> % util alloc free  span= prev= list=, i =  code= addr= m->p= p->m=SCHED  curg=], sp= ctxt: min=  max= (...)\n base allow"
  ;
  extraout_RAX[2] = ~r0_00;
  ppcVar2 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RCX;
    ppcVar2 = extraout_RAX_00;
  }
  ppcVar2[3] = extraout_RCX;
  return;
}



void net_maxAckBacklog(int n,int ~r0)

{
  int major;
  int size;
  uint max;
  int minor;
  int extraout_RBX;
  int unaff_R14;
  int iStack0000000000000008;
  
  iStack0000000000000008 = n;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0 = extraout_RBX;
  }
  internal_syscall_unix_KernelVersion(iStack0000000000000008,~r0);
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack
// DWARF original prototype: void net.maxListenerBacklog(int ~r0, int ~r0)

void net_maxListenerBacklog(int ~r0,int ~r0_1)

{
  byte bVar1;
  __string ~r0_00;
  bool bVar2;
  net_file *f;
  net_file *fd;
  int *extraout_RAX;
  int iVar3;
  char extraout_CL;
  bool ok;
  int n;
  int extraout_RBX;
  int extraout_RBX_00;
  int unaff_R14;
  string in_stack_ffffffffffffffb0;
  string in_stack_ffffffffffffffc0;
  undefined7 in_stack_ffffffffffffffd0;
  undefined uVar4;
  undefined8 uVar5;
  code *pcVar6;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar5 = 0;
  f = (net_file *)net_open(&DAT_008bd699,0x1c);
  if (extraout_RBX != 0) {
    return;
  }
  pcVar6 = net_maxListenerBacklog_func1;
  uVar4 = 1;
  net___file__readLine(f,in_stack_ffffffffffffffb0,false);
  if (extraout_CL == '\0') {
    (*pcVar6)();
    return;
  }
  ~r0_00.array._7_1_ = uVar4;
  ~r0_00.array._0_7_ = in_stack_ffffffffffffffd0;
  ~r0_00.len = uVar5;
  ~r0_00.cap = (int)pcVar6;
  net_splitAtBytes(in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc0,~r0_00);
  if (extraout_RBX_00 == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  n = 0;
  for (iVar3 = 0;
      ((iVar3 < extraout_RAX[1] && (bVar1 = *(byte *)(*extraout_RAX + iVar3), 0x2f < bVar1)) &&
      (bVar1 < 0x3a)); iVar3 = iVar3 + 1) {
    n = (uint)(byte)(bVar1 - 0x30) + n * 10;
    if (0xfffffe < n) {
      n = 0xffffff;
      bVar2 = false;
      goto LAB_005fb382;
    }
  }
  if (iVar3 == 0) {
    n = 0;
    bVar2 = false;
  }
  else {
    bVar2 = true;
  }
LAB_005fb382:
  if ((n != 0) && (bVar2)) {
    if (0xffff < n) {
      net_maxAckBacklog(n,extraout_RAX[1]);
      (*pcVar6)();
      return;
    }
    (*pcVar6)();
    return;
  }
  (*pcVar6)();
  return;
}



// WARNING: Unknown calling convention

void net_maxListenerBacklog_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  net___file__close(*(int *)(in_RDX + 8));
  return;
}



int net_socket(int __domain,int __type,int __protocol)

{
  bool bVar1;
  int s_00;
  int s;
  int extraout_RAX;
  net_netFD *extraout_RAX_00;
  net_netFD *ret;
  net_netFD *extraout_RAX_01;
  net_netFD *fd;
  int extraout_RAX_02;
  int extraout_RAX_03;
  int extraout_RAX_04;
  int extraout_RCX;
  int extraout_RBX;
  error *~r0;
  int in_RSI;
  int in_RDI;
  int in_R8;
  int in_R9;
  bool in_R10B;
  uint8 **extraout_R11;
  int unaff_R14;
  bool bVar2;
  int in_stack_00000008;
  int in_stack_00000018;
  func_context_Context__string__string__syscall_RawConn__error **ppfStack0000000000000028;
  func_context_Context__string__string__syscall_RawConn__error **ppfStack0000000000000030;
  uint8 *puStack0000000000000038;
  int iStack0000000000000040;
  int iStack0000000000000048;
  int iStack0000000000000050;
  error in_stack_ffffffffffffff58;
  net_sockaddr in_stack_ffffffffffffff68;
  error in_stack_ffffffffffffff78;
  error in_stack_ffffffffffffff88;
  undefined local_28 [32];
  
  ppfStack0000000000000028 =
       (func_context_Context__string__string__syscall_RawConn__error **)__domain;
  puStack0000000000000038 = (uint8 *)__protocol;
  ppfStack0000000000000030 = (func_context_Context__string__string__syscall_RawConn__error **)__type
  ;
  iStack0000000000000048 = in_RSI;
  iStack0000000000000040 = in_RDI;
  iStack0000000000000050 = in_R8;
  while (local_28 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  net_sysSocket(iStack0000000000000048,iStack0000000000000050,in_R9,iStack0000000000000040,
                in_stack_ffffffffffffff58);
  if (extraout_RBX != 0) {
    return 0;
  }
  net_setDefaultSockopts
            (s_00,iStack0000000000000048,iStack0000000000000050,in_R10B,in_stack_ffffffffffffff58);
  if (extraout_RAX != 0) {
    (**internal_poll_CloseFunc)(s_00,~r0);
    return 0;
  }
  bVar2 = iStack0000000000000050 != 2;
  bVar1 = iStack0000000000000050 != 3;
  runtime_newobject((internal_abi_Type *)&DAT_00889640,~r0);
  (extraout_RAX_00->pfd).Sysfd = s_00;
  (extraout_RAX_00->pfd).IsStream = iStack0000000000000050 == 1;
  (extraout_RAX_00->pfd).ZeroReadIsEOF = bVar2 && bVar1;
  extraout_RAX_00->family = iStack0000000000000048;
