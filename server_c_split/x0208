
// WARNING: Restarted to delay deadcode elimination for space: stack
// WARNING: Unknown calling convention

void reflect___ptrType__ExportedMethods(void)

{
  int *piVar1;
  __internal_abi_Method ~r0;
  internal_abi_Type *in_RAX;
  undefined8 unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  internal_abi_Type *piStack0000000000000008;
  undefined8 in_stack_fffffffffffffff0;
  
  piStack0000000000000008 = in_RAX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((internal_abi_Type **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff0;
  }
  ~r0.len = unaff_RBP;
  ~r0.array = (internal_abi_Method *)in_stack_fffffffffffffff0;
  ~r0.cap = unaff_retaddr;
  internal_abi___Type__ExportedMethods(piStack0000000000000008,~r0);
  return;
}



// WARNING: Unknown calling convention

void reflect___ptrType__FieldAlign(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___ptrType__FuncType(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___ptrType__GcSlice(uintptr begin,uintptr end)

{
  int *piVar1;
  int in_RAX;
  int unaff_R14;
  int iStack0000000000000008;
  uint in_stack_00000010;
  uint in_stack_00000018;
  undefined auStack_18 [16];
  
  iStack0000000000000008 = in_RAX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000010 = begin;
    in_stack_00000018 = end;
    runtime_morestack_noctxt();
    end = in_stack_00000018;
    begin = in_stack_00000010;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_18;
  }
  if ((int)end < 0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafeslicelen();
  }
  if ((uint)-*(int *)(iStack0000000000000008 + 0x20) < end) {
    if (*(int *)(iStack0000000000000008 + 0x20) != 0) {
                    // WARNING: Subroutine does not return
      runtime_panicunsafeslicelen();
    }
                    // WARNING: Subroutine does not return
    runtime_panicunsafeslicenilptr();
  }
  if (begin <= end) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceBU();
}



// WARNING: Unknown calling convention

void reflect___ptrType__HasName(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___ptrType__IfaceIndir(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___ptrType__InterfaceType(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___ptrType__IsDirectIface(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___ptrType__Key(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___ptrType__Kind(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___ptrType__Len(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___ptrType__MapType(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___ptrType__NumMethod(void)

{
  int *piVar1;
  internal_abi_Type *in_RAX;
  int in_RBX;
  int extraout_RBX;
  int unaff_R14;
  internal_abi_Type *piStack0000000000000008;
  undefined auStack_10 [8];
  
  piStack0000000000000008 = in_RAX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((internal_abi_Type **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  internal_abi___Type__NumMethod(piStack0000000000000008,in_RBX);
  return;
}



// WARNING: Unknown calling convention

void reflect___ptrType__Pointers(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___ptrType__Size(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___ptrType__StructType(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___ptrType__Uncommon(void)

{
  int *piVar1;
  int in_RAX;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  if ((*(byte *)(in_RAX + 0x14) & 1) != 0) {
    switch(*(byte *)(in_RAX + 0x17) & 0x1f) {
    case 0x11:
      break;
    case 0x12:
      break;
    case 0x13:
      break;
    case 0x14:
      break;
    case 0x15:
      break;
    case 0x16:
      break;
    case 0x17:
      break;
    case 0x19:
    }
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__Align(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__ArrayType(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__ChanDir(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__Common(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__Elem(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack
// WARNING: Unknown calling convention

void reflect___structType__ExportedMethods(void)

{
  int *piVar1;
  __internal_abi_Method ~r0;
  internal_abi_Type *in_RAX;
  undefined8 unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  internal_abi_Type *piStack0000000000000008;
  undefined8 in_stack_fffffffffffffff0;
  
  piStack0000000000000008 = in_RAX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((internal_abi_Type **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff0;
  }
  ~r0.len = unaff_RBP;
  ~r0.array = (internal_abi_Method *)in_stack_fffffffffffffff0;
  ~r0.cap = unaff_retaddr;
  internal_abi___Type__ExportedMethods(piStack0000000000000008,~r0);
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__FieldAlign(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__FuncType(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__GcSlice(uintptr begin,uintptr end)

{
  int *piVar1;
  int in_RAX;
  int unaff_R14;
  int iStack0000000000000008;
  uint in_stack_00000010;
  uint in_stack_00000018;
  undefined auStack_18 [16];
  
  iStack0000000000000008 = in_RAX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000010 = begin;
    in_stack_00000018 = end;
    runtime_morestack_noctxt();
    end = in_stack_00000018;
    begin = in_stack_00000010;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_18;
  }
  if ((int)end < 0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafeslicelen();
  }
  if ((uint)-*(int *)(iStack0000000000000008 + 0x20) < end) {
    if (*(int *)(iStack0000000000000008 + 0x20) != 0) {
                    // WARNING: Subroutine does not return
      runtime_panicunsafeslicelen();
    }
                    // WARNING: Subroutine does not return
    runtime_panicunsafeslicenilptr();
  }
  if (begin <= end) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceBU();
}



// WARNING: Unknown calling convention

void reflect___structType__HasName(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__IfaceIndir(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__InterfaceType(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__IsDirectIface(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__Key(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__Kind(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__Len(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__MapType(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__NumMethod(void)

{
  int *piVar1;
  internal_abi_Type *in_RAX;
  int in_RBX;
  int extraout_RBX;
  int unaff_R14;
  internal_abi_Type *piStack0000000000000008;
  undefined auStack_10 [8];
  
  piStack0000000000000008 = in_RAX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((internal_abi_Type **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  internal_abi___Type__NumMethod(piStack0000000000000008,in_RBX);
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__Pointers(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__Size(void)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___structType__Uncommon(void)

{
  int *piVar1;
  int in_RAX;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  if ((*(byte *)(in_RAX + 0x14) & 1) != 0) {
    switch(*(byte *)(in_RAX + 0x17) & 0x1f) {
    case 0x11:
      break;
    case 0x12:
      break;
    case 0x13:
      break;
    case 0x14:
      break;
    case 0x15:
      break;
    case 0x16:
      break;
    case 0x17:
      break;
    case 0x19:
    }
  }
  return;
}



// WARNING: Unknown calling convention

void reflect_moveMakeFuncArgPtrs(reflect_makeFuncCtxt *ctxt,internal_abi_RegArgs *args)

{
  reflect_moveMakeFuncArgPtrs(ctxt,args);
  return;
}



// WARNING: Unknown calling convention

void reflect_callReflect(reflect_makeFuncImpl *ctxt,void *frame,bool *retValid,
                        internal_abi_RegArgs *regs)

{
  int *piVar1;
  int in_FS_OFFSET;
  undefined auStack_28 [32];
  
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((reflect_makeFuncImpl **)*piVar1 == &ctxt)) {
    *piVar1 = (int)auStack_28;
  }
  reflect_callReflect(ctxt,frame,retValid,regs);
  return;
}



// WARNING: Unknown calling convention

void reflect_callMethod(reflect_methodValue *ctxt,void *frame,bool *retValid,
                       internal_abi_RegArgs *regs)

{
  int *piVar1;
  int in_FS_OFFSET;
  undefined auStack_28 [32];
  
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((reflect_methodValue **)*piVar1 == &ctxt)) {
    *piVar1 = (int)auStack_28;
  }
  reflect_callMethod(ctxt,frame,retValid,regs);
  return;
}



void type__eq_reflect_ValueError(reflect_ValueError *p,reflect_ValueError *q,bool r)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((q->Method).len == (p->Method).len) && (q->Kind == p->Kind)) {
    runtime_memequal();
  }
  return;
}



void type__eq_reflect_makeFuncCtxt(reflect_makeFuncCtxt *p,reflect_makeFuncCtxt *q,bool r)

{
  if (((q->fn == p->fn) && (q->stack == p->stack)) && (q->argLen == p->argLen)) {
    return;
  }
  return;
}



void type__eq_reflect_methodValue(reflect_methodValue *p,reflect_methodValue *q,bool r)

{
  if (((((q->makeFuncCtxt).fn == (p->makeFuncCtxt).fn) &&
       ((q->makeFuncCtxt).stack == (p->makeFuncCtxt).stack)) &&
      ((q->makeFuncCtxt).argLen == (p->makeFuncCtxt).argLen)) &&
     ((*(short *)(q->makeFuncCtxt).regPtrs == *(short *)(p->makeFuncCtxt).regPtrs &&
      (q->method == p->method)))) {
    return;
  }
  return;
}



void type__eq_reflect_visit(reflect_visit *p,reflect_visit *q,bool r)

{
  runtime_itab *tab;
  undefined in_DIL;
  undefined extraout_DIL;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  if (((q->a1 == p->a1) && (q->a2 == p->a2)) && (tab = (p->typ).tab, (q->typ).tab == tab)) {
    runtime_ifaceeq(tab,(p->typ).data,(q->typ).data,(bool)in_DIL);
  }
  return;
}



void type__hash_reflect_visit(reflect_visit *p,uintptr h,uintptr ~r0)

{
  uintptr h_00;
  uintptr ~r0_00;
  int unaff_R14;
  reflect_visit *prStack0000000000000008;
  
  prStack0000000000000008 = p;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_memhash();
  runtime_interhash(&prStack0000000000000008->typ,h_00,~r0_00);
  return;
}



void internal_fmtsort___SortedMap__Len(internal_fmtsort_SortedMap *o,int ~r0)

{
  return;
}



void internal_fmtsort___SortedMap__Less(internal_fmtsort_SortedMap *o,int i,int j,bool ~r0)

{
  uint uVar1;
  int unaff_R14;
  reflect_Value in_stack_ffffffffffffffc8;
  reflect_Value in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar1 = (o->Key).len;
  if ((uint)i < uVar1) {
    if ((uint)j < uVar1) {
      internal_fmtsort_compare
                (in_stack_ffffffffffffffc8,in_stack_ffffffffffffffe0,(int)(o->Key).array[i].typ_);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Unknown calling convention

void internal_fmtsort___SortedMap__Swap(internal_fmtsort_SortedMap *o,int i,int j)

{
  uint uVar1;
  internal_fmtsort_SortedMap *extraout_RAX;
  internal_fmtsort_SortedMap *extraout_RAX_00;
  uint extraout_RCX;
  uint extraout_RCX_00;
  internal_abi_Type *extraout_RCX_01;
  internal_abi_Type *piVar2;
  int iVar3;
  uint extraout_RBX;
  uint extraout_RBX_00;
  reflect_Value *extraout_RBX_01;
  reflect_Value *extraout_RBX_02;
  reflect_Value *prVar4;
  reflect_Value *extraout_RSI;
  reflect_Value *extraout_RSI_00;
  internal_abi_Type *extraout_RSI_01;
  internal_abi_Type *piVar5;
  int extraout_RDI;
  int extraout_RDI_00;
  int extraout_RDI_01;
  int iVar6;
  internal_abi_Type *extraout_R8;
  internal_abi_Type *extraout_R8_00;
  internal_abi_Type *extraout_R8_01;
  internal_abi_Type *extraout_R8_02;
  internal_abi_Type *piVar7;
  internal_abi_Type *extraout_R9;
  internal_abi_Type *extraout_R9_00;
  internal_abi_Type *extraout_R9_01;
  internal_abi_Type *extraout_R9_02;
  internal_abi_Type *piVar8;
