  undefined4 uStack_8c;
  undefined4 local_88;
  undefined4 uStack_84;
  undefined4 uStack_80;
  undefined4 uStack_7c;
  google_golang_org_protobuf_internal_encoding_text_encoderState pos;
  undefined8 local_40;
  undefined4 local_38;
  undefined4 uStack_34;
  undefined4 uStack_30;
  undefined4 uStack_2c;
  undefined4 local_28;
  undefined4 uStack_24;
  undefined4 uStack_20;
  undefined4 uStack_1c;
  undefined4 local_18;
  undefined4 uStack_14;
  undefined4 uStack_10;
  undefined4 uStack_c;
  
  iVar1 = CONCAT71(in_register_00000001,~r0);
  while (&local_140 <= *(uint **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  auVar5 = (**(code **)(iVar1 + 0x20))(in_RBX);
  auVar5 = (**(code **)(auVar5._0_8_ + 0x38))(auVar5._8_8_);
  local_100 = auVar5._8_8_;
  auVar6 = (**(code **)(auVar5._0_8_ + 0x28))(local_100,1);
  (**(code **)(iVar1 + 0x28))(in_RBX,auVar6._0_8_,auVar6._8_8_);
  v.ptr._0_4_ = in_stack_fffffffffffffe48;
  v.typ = (void *)in_stack_fffffffffffffe40;
  v.ptr._4_4_ = in_stack_fffffffffffffe4c;
  v.num._0_4_ = in_stack_fffffffffffffe50;
  v.num._4_4_ = in_stack_fffffffffffffe54;
  ~r0_02.str._4_4_ = in_stack_fffffffffffffe5c;
  ~r0_02.str._0_4_ = in_stack_fffffffffffffe58;
  ~r0_02.len._0_4_ = in_stack_fffffffffffffe60;
  ~r0_02.len._4_4_ = in_stack_fffffffffffffe64;
  google_golang_org_protobuf_reflect_protoreflect_Value_String(v,~r0_02);
  prVar11 = e.opts.Resolver.data;
  pvVar10 = extraout_RBX;
  (**(code **)&e.opts.Resolver.tab[1].hash)(prVar11,extraout_RAX,extraout_RBX);
  if (extraout_RCX != 0) {
    return;
  }
  auVar6 = (**(code **)(extraout_RAX_00 + 0x20))(extraout_RBX_00);
  auVar6 = (**(code **)(auVar6._0_8_ + 0x40))(auVar6._8_8_);
  local_108 = auVar6._8_8_;
  pvVar7 = auVar6._0_8_;
  auVar5 = (**(code **)(auVar5._0_8_ + 0x28))(local_100,2);
  (**(code **)(iVar1 + 0x28))(in_RBX,auVar5._0_8_,auVar5._8_8_);
  local_c0._8_8_ = in_XMM15._8_8_;
  if (google_golang_org_protobuf_reflect_protoreflect_bytesType != extraout_RAX_01) {
    v_00.ptr._0_4_ = in_stack_fffffffffffffe48;
    v_00.typ = (void *)in_stack_fffffffffffffe40;
    v_00.ptr._4_4_ = in_stack_fffffffffffffe4c;
    v_00.num._0_4_ = in_stack_fffffffffffffe50;
    v_00.num._4_4_ = in_stack_fffffffffffffe54;
    what.str._4_4_ = in_stack_fffffffffffffe5c;
    what.str._0_4_ = in_stack_fffffffffffffe58;
    what.len._0_4_ = in_stack_fffffffffffffe60;
    what.len._4_4_ = in_stack_fffffffffffffe64;
    ~r0_03.str._4_4_ = in_stack_fffffffffffffe6c;
    ~r0_03.str._0_4_ = in_stack_fffffffffffffe68;
    ~r0_03.len._0_4_ = in_stack_fffffffffffffe70;
    ~r0_03.len._4_4_ = in_stack_fffffffffffffe74;
    google_golang_org_protobuf_reflect_protoreflect_Value_panicMessage(v_00,what,~r0_03);
    val.len._0_4_ = in_stack_fffffffffffffe48;
    val.str = (uint8 *)in_stack_fffffffffffffe40;
    val.len._4_4_ = in_stack_fffffffffffffe4c;
    runtime_convTstring(val,x);
    e_00.data._0_4_ = in_stack_fffffffffffffe48;
    e_00._type = (internal_abi_Type *)in_stack_fffffffffffffe40;
    e_00.data._4_4_ = in_stack_fffffffffffffe4c;
                    // WARNING: Subroutine does not return
    runtime_gopanic(e_00);
  }
  if ((int)extraout_RCX_00 < 0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafeslicelen();
  }
  if ((uint)-extraout_RBX_01 < extraout_RCX_00) {
    if (extraout_RBX_01 == 0) {
                    // WARNING: Subroutine does not return
      runtime_panicunsafeslicenilptr();
    }
                    // WARNING: Subroutine does not return
    runtime_panicunsafeslicelen();
  }
  stack0xffffffffffffff32 = in_XMM15._2_14_;
  local_d0[0] = in_XMM15[0];
  local_d0[1] = 1;
  local_140 = extraout_RCX_00;
  local_e0 = prVar11;
  local_d8 = extraout_RBX_01;
  runtime_convI2I((internal_abi_InterfaceType *)&DAT_00833720,e.opts.Resolver.tab,prVar11);
  uStack_c8 = extraout_RAX_02;
  local_c0._0_8_ = local_e0;
  uVar8 = (undefined4)local_108;
  uVar9 = (undefined4)((uint)local_108 >> 0x20);
  o.Resolver.tab._0_4_ = uVar8;
  o._0_8_ = pvVar7;
  o.Resolver.tab._4_4_ = uVar9;
  o.Resolver.data._0_4_ = in_stack_fffffffffffffe50;
  o.Resolver.data._4_4_ = in_stack_fffffffffffffe54;
  o.RecursionLimit._0_4_ = in_stack_fffffffffffffe58;
  o.RecursionLimit._4_4_ = in_stack_fffffffffffffe5c;
  b.array._4_4_ = in_stack_fffffffffffffe64;
  b.array._0_4_ = in_stack_fffffffffffffe60;
  b.len._0_4_ = in_stack_fffffffffffffe68;
  b.len._4_4_ = in_stack_fffffffffffffe6c;
  b.cap._0_4_ = in_stack_fffffffffffffe70;
  b.cap._4_4_ = in_stack_fffffffffffffe74;
  m.data = in_stack_fffffffffffffe80;
  m.tab = in_stack_fffffffffffffe78;
  ~r0_05.data = pvVar10;
  ~r0_05.tab = in_stack_fffffffffffffe88;
  pvVar12 = pvVar7;
  google_golang_org_protobuf_proto_UnmarshalOptions_Unmarshal(o,b,m,~r0_05);
  if (extraout_RAX_03 != 0) {
    return;
  }
  local_b0._0_1_ = ((e.Encoder)->encoderState).lastType;
  local_b0._1_7_ = *(undefined7 *)&((e.Encoder)->encoderState).field_0x1;
  local_a8 = *(undefined4 *)&((e.Encoder)->encoderState).indents.array;
  uStack_a4 = *(undefined4 *)((int)&((e.Encoder)->encoderState).indents.array + 4);
  uStack_a0 = *(undefined4 *)&((e.Encoder)->encoderState).indents.len;
  uStack_9c = *(undefined4 *)((int)&((e.Encoder)->encoderState).indents.len + 4);
  local_98 = *(undefined4 *)&((e.Encoder)->encoderState).indents.cap;
  uStack_94 = *(undefined4 *)((int)&((e.Encoder)->encoderState).indents.cap + 4);
  uStack_90 = *(undefined4 *)&((e.Encoder)->encoderState).out.array;
  uStack_8c = *(undefined4 *)((int)&((e.Encoder)->encoderState).out.array + 4);
  local_88 = *(undefined4 *)&((e.Encoder)->encoderState).out.len;
  uStack_84 = *(undefined4 *)((int)&((e.Encoder)->encoderState).out.len + 4);
  uStack_80 = *(undefined4 *)&((e.Encoder)->encoderState).out.cap;
  uStack_7c = *(undefined4 *)((int)&((e.Encoder)->encoderState).out.cap + 4);
  local_f0 = e.Encoder;
  a0.len._0_4_ = uVar8;
  a0.str = (uint8 *)pvVar7;
  a0.len._4_4_ = uVar9;
  a1.str._4_4_ = in_stack_fffffffffffffe54;
  a1.str._0_4_ = in_stack_fffffffffffffe50;
  a1.len._0_4_ = in_stack_fffffffffffffe58;
  a1.len._4_4_ = in_stack_fffffffffffffe5c;
  a2.str._4_4_ = in_stack_fffffffffffffe64;
  a2.str._0_4_ = in_stack_fffffffffffffe60;
  a2.len._0_4_ = in_stack_fffffffffffffe68;
  a2.len._4_4_ = in_stack_fffffffffffffe6c;
  ~r0_04.str._4_4_ = in_stack_fffffffffffffe74;
  ~r0_04.str._0_4_ = in_stack_fffffffffffffe70;
  ~r0_04.len = (int)in_stack_fffffffffffffe78;
  pos._0_8_ = local_b0;
  pos.indents.array._0_4_ = local_a8;
  pos.indents.array._4_4_ = uStack_a4;
  pos.indents.len._0_4_ = uStack_a0;
  pos.indents.len._4_4_ = uStack_9c;
  pos.indents.cap._0_4_ = local_98;
  pos.indents.cap._4_4_ = uStack_94;
  pos.out.array._0_4_ = uStack_90;
  pos.out.array._4_4_ = uStack_8c;
  pos.out.len._0_4_ = local_88;
  pos.out.len._4_4_ = uStack_84;
  pos.out.cap._0_4_ = uStack_80;
  pos.out.cap._4_4_ = uStack_7c;
  runtime_concatstring3((runtime_tmpBuf *)local_138,a0,a1,a2,~r0_04);
  prVar11 = extraout_RBX_02;
  local_110 = extraout_RAX_04;
  google_golang_org_protobuf_internal_encoding_text___Encoder__prepareNext(local_f0,1);
  oldCap = (undefined *)(local_f0->encoderState).out.cap;
  iVar1 = (local_f0->encoderState).out.len;
  puVar4 = prVar11->_ + iVar1 + -0x14;
  local_e8 = (local_f0->encoderState).out.array;
  if (oldCap < puVar4) {
    ~r0_00.len._0_4_ = uVar8;
    ~r0_00.array = pvVar7;
    ~r0_00.len._4_4_ = uVar9;
    ~r0_00.cap._0_4_ = in_stack_fffffffffffffe50;
    ~r0_00.cap._4_4_ = in_stack_fffffffffffffe54;
    runtime_growslice(local_e8,(int)puVar4,(int)oldCap,(int)prVar11,
                      (internal_abi_Type *)&DAT_00807920,~r0_00);
    local_e8 = extraout_RAX_05;
    oldCap = extraout_RCX_01;
    puVar4 = extraout_RBX_03;
  }
  runtime_memmove(local_e8 + iVar1,local_110,(size_t)prVar11);
  (local_f0->encoderState).out.len = (int)puVar4;
  (local_f0->encoderState).out.cap = (int)oldCap;
  pgVar3 = local_f0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = local_e8;
    extraout_R11[1] = (pgVar3->encoderState).out.array;
    oldCap = extraout_RCX_02;
    puVar4 = extraout_RBX_04;
  }
  (pgVar3->encoderState).out.array = local_e8;
  puVar4 = puVar4 + 1;
  puVar2 = local_e8;
  if (oldCap < puVar4) {
    ~r0_01.len._0_4_ = uVar8;
    ~r0_01.array = pvVar7;
    ~r0_01.len._4_4_ = uVar9;
    ~r0_01.cap._0_4_ = in_stack_fffffffffffffe50;
    ~r0_01.cap._4_4_ = in_stack_fffffffffffffe54;
    runtime_growslice(local_e8,(int)puVar4,(int)oldCap,1,(internal_abi_Type *)&DAT_00807920,~r0_01);
    (local_f0->encoderState).out.cap = extraout_RCX_03;
    puVar2 = extraout_RAX_06;
    pgVar3 = local_f0;
    puVar4 = extraout_RBX_05;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RAX_07;
      extraout_R11_00[1] = (pgVar3->encoderState).out.array;
      puVar2 = extraout_RAX_07;
      puVar4 = extraout_RBX_06;
    }
    (pgVar3->encoderState).out.array = puVar2;
  }
  (pgVar3->encoderState).out.len = (int)puVar4;
  (puVar4 + -1)[(int)puVar2] = 0x3a;
  inclDelims = (bool)(**(code **)((int)pvVar12 + 0x18))(local_108);
  m_00.data = in_stack_fffffffffffffe80;
  m_00.tab = in_stack_fffffffffffffe78;
  ~r0_06.data = pvVar10;
  ~r0_06.tab = in_stack_fffffffffffffe88;
  ~r0_1.data = pvVar12;
  ~r0_1.tab = prVar11;
  google_golang_org_protobuf_encoding_prototext_encoder_marshalMessage
            (e,m_00,inclDelims,~r0_06,~r0_1);
  if (extraout_RAX_08 == 0) {
    return;
  }
  local_40._0_1_ = pos.lastType;
  local_40._1_7_ = pos._1_7_;
  local_38 = pos.indents.array._0_4_;
  uStack_34 = pos.indents.array._4_4_;
  uStack_30 = (undefined4)pos.indents.len;
  uStack_2c = pos.indents.len._4_4_;
  local_28 = (undefined4)pos.indents.cap;
  uStack_24 = pos.indents.cap._4_4_;
  uStack_20 = pos.out.array._0_4_;
  uStack_1c = pos.out.array._4_4_;
  local_18 = (undefined4)pos.out.len;
  uStack_14 = pos.out.len._4_4_;
  uStack_10 = (undefined4)pos.out.cap;
  uStack_c = pos.out.cap._4_4_;
  if (runtime_writeBarrier._0_4_ != 0) {
    local_f8 = e.Encoder;
    runtime_wbMove((internal_abi_Type *)&DAT_008667c0,e.Encoder,&local_40);
    e.Encoder = local_f8;
  }
  ((e.Encoder)->encoderState).lastType =
       (google_golang_org_protobuf_internal_encoding_text_encType)local_40;
  *(undefined7 *)&((e.Encoder)->encoderState).field_0x1 = local_40._1_7_;
  *(undefined4 *)&((e.Encoder)->encoderState).indents.array = local_38;
  *(undefined4 *)((int)&((e.Encoder)->encoderState).indents.array + 4) = uStack_34;
  *(undefined4 *)&((e.Encoder)->encoderState).indents.len = uStack_30;
  *(undefined4 *)((int)&((e.Encoder)->encoderState).indents.len + 4) = uStack_2c;
  *(undefined4 *)&((e.Encoder)->encoderState).indents.cap = local_28;
  *(undefined4 *)((int)&((e.Encoder)->encoderState).indents.cap + 4) = uStack_24;
  *(undefined4 *)&((e.Encoder)->encoderState).out.array = uStack_20;
  *(undefined4 *)((int)&((e.Encoder)->encoderState).out.array + 4) = uStack_1c;
  *(undefined4 *)&((e.Encoder)->encoderState).out.len = local_18;
  *(undefined4 *)((int)&((e.Encoder)->encoderState).out.len + 4) = uStack_14;
  *(undefined4 *)&((e.Encoder)->encoderState).out.cap = uStack_10;
  *(undefined4 *)((int)&((e.Encoder)->encoderState).out.cap + 4) = uStack_c;
  return;
}



void type__eq_google_golang_org_protobuf_encoding_prototext_MarshalOptions
               (google_golang_org_protobuf_encoding_prototext_MarshalOptions *p,
               google_golang_org_protobuf_encoding_prototext_MarshalOptions *q,bool r)

{
  runtime_itab *tab;
  char extraout_AL;
  bool ~r0;
  int unaff_R14;
  google_golang_org_protobuf_encoding_prototext_MarshalOptions *pgStack0000000000000008;
  google_golang_org_protobuf_encoding_prototext_MarshalOptions *pgStack0000000000000010;
  
  pgStack0000000000000008 = p;
  pgStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((((pgStack0000000000000010->Multiline == pgStack0000000000000008->Multiline) &&
        ((pgStack0000000000000010->Indent).len == (pgStack0000000000000008->Indent).len)) &&
       (pgStack0000000000000010->EmitASCII == pgStack0000000000000008->EmitASCII)) &&
      ((pgStack0000000000000010->allowInvalidUTF8 == pgStack0000000000000008->allowInvalidUTF8 &&
       (pgStack0000000000000010->AllowPartial == pgStack0000000000000008->AllowPartial)))) &&
     ((pgStack0000000000000010->EmitUnknown == pgStack0000000000000008->EmitUnknown &&
      ((runtime_memequal(), extraout_AL != '\0' &&
       (tab = (pgStack0000000000000008->Resolver).tab,
       (pgStack0000000000000010->Resolver).tab == tab)))))) {
    runtime_ifaceeq(tab,(pgStack0000000000000008->Resolver).data,
                    (pgStack0000000000000010->Resolver).data,~r0);
  }
  return;
}



void type__eq_google_golang_org_protobuf_encoding_prototext_encoder
               (google_golang_org_protobuf_encoding_prototext_encoder *p,
               google_golang_org_protobuf_encoding_prototext_encoder *q,bool r)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (q->Encoder == p->Encoder) {
    type__eq_google_golang_org_protobuf_encoding_prototext_MarshalOptions
              (&p->opts,&q->opts,SUB81(p->Encoder,0));
  }
  return;
}



void encoding_base64___Encoding__Encode(encoding_base64_Encoding *enc,__uint8 dst,__uint8 src)

{
  ushort uVar1;
  uint3 uVar2;
  uint uVar3;
  int si;
  uint in_RCX;
  int in_RBX;
  int in_RSI;
  uint in_R8;
  int iVar4;
  int remain;
  int di;
  uint val;
  ushort uVar5;
  uint val_1;
  
  if (in_R8 == 0) {
    return;
  }
  uVar3 = 0;
  di = 0;
  while( true ) {
    if (((int)(SUB168(SEXT816(-0x5555555555555555) * SEXT816((int)in_R8),8) + in_R8) >> 1) * 3 <=
        (int)uVar3) {
      iVar4 = in_R8 - uVar3;
      if (in_R8 == uVar3) {
        return;
      }
      if (in_R8 <= uVar3) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      val = (uint)*(byte *)(in_RSI + uVar3) << 0x10;
      if (iVar4 == 2) {
        if (in_R8 <= uVar3 + 1) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        val = val | (uint)*(byte *)(uVar3 + 1 + in_RSI) << 8;
      }
      if ((uint)di < in_RCX) {
        *(uint8 *)(in_RBX + di) = enc->encode[val >> 0x12];
        if (in_RCX <= di + 1U) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        *(uint8 *)(di + 1 + in_RBX) = enc->encode[(dword)(val >> 0xc) & 0x3f];
        if (iVar4 == 1) {
          if (enc->padChar != -1) {
            if (in_RCX <= di + 2U) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            *(char *)(di + 2 + in_RBX) = (char)enc->padChar;
            if (in_RCX <= di + 3U) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            *(char *)(di + 3 + in_RBX) = (char)enc->padChar;
          }
        }
        else if (iVar4 == 2) {
          if (in_RCX <= di + 2U) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          *(uint8 *)(di + 2 + in_RBX) = enc->encode[(dword)(val >> 6) & 0x3f];
          if (enc->padChar != -1) {
            if (in_RCX <= di + 3U) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            *(char *)(di + 3 + in_RBX) = (char)enc->padChar;
          }
        }
        return;
      }
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (in_R8 <= uVar3) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (in_R8 <= uVar3 + 1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (in_R8 <= uVar3 + 2) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    uVar1 = *(ushort *)(in_RSI + uVar3) << 8;
    uVar5 = uVar1 | *(ushort *)(in_RSI + uVar3) >> 8;
    uVar2 = CONCAT21(uVar5,*(undefined *)(uVar3 + 2 + in_RSI));
    if (in_RCX <= (uint)di) break;
    *(uint8 *)(in_RBX + di) = enc->encode[uVar1 >> 10];
    if (in_RCX <= di + 1U) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(uint8 *)(di + 1 + in_RBX) = enc->encode[uVar5 >> 4 & 0x3f];
    if (in_RCX <= di + 2U) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(uint8 *)(di + 2 + in_RBX) = enc->encode[uVar2 >> 6 & 0x3f];
    if (in_RCX <= di + 3U) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(uint8 *)(di + 3 + in_RBX) = enc->encode[uVar2 & 0x3f];
    uVar3 = uVar3 + 3;
    di = di + 4;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void encoding_base64___Encoding__EncodeToString
               (encoding_base64_Encoding *enc,__uint8 src,string ~r0)

{
  __uint8 dst;
  uint8 *ptr;
  int in_RCX;
  int iVar1;
  void *in_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffffb0;
  int in_stack_ffffffffffffffc0;
  __uint8 in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (enc->padChar == -1) {
    iVar1 = in_RCX * 8 + 5;
    iVar1 = (SUB168(SEXT816(-0x5555555555555555) * SEXT816(iVar1),8) + in_RCX * 8 + 5 >> 2) -
            (iVar1 >> 0x3f);
  }
  else {
    iVar1 = ((SUB168(SEXT816(-0x5555555555555555) * SEXT816(in_RCX + 2),8) + in_RCX + 2 >> 1) -
            (in_RCX + 2 >> 0x3f)) * 4;
  }
  runtime_makeslice((internal_abi_Type *)&DAT_00807920,iVar1,iVar1,in_RDI);
  dst.cap = in_stack_ffffffffffffffc0;
  dst.array = in_stack_ffffffffffffffb0.str;
  dst.len = in_stack_ffffffffffffffb0.len;
  encoding_base64___Encoding__Encode(enc,dst,in_stack_ffffffffffffffc8);
  runtime_slicebytetostring((runtime_tmpBuf *)0x0,ptr,iVar1,in_stack_ffffffffffffffb0);
  return;
}



void encoding_base64_CorruptInputError_Error(encoding_base64_CorruptInputError e,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  strconv_FormatInt(e,10,in_stack_ffffffffffffffd0);
  ~r0_00.len = unaff_RBP;
  ~r0_00.str = in_stack_fffffffffffffff0;
  runtime_concatstring2
            ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,~r0_00);
  return;
}



void encoding_base64___Encoding__decodeQuantum
               (encoding_base64_Encoding *enc,__uint8 dst,__uint8 src,int si,int nsi,int n,error err
               )

{
  byte bVar1;
  uint uVar2;
  int j;
  int dlen;
  int in_RSI;
  uint in_R8;
  uint val;
  uint8 in;
  uint in_R10;
  uint8 out;
  uint uVar3;
  int unaff_R14;
  undefined4 local_24;
  int local_20;
  uint local_18;
  uint local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_24 = 0;
  dlen = 0;
  local_10 = in_R10;
  while (uVar3 = local_10, dlen < 4) {
    if (in_R8 == local_10) {
      if (dlen == 0) {
        return;
      }
      if ((dlen == 1) || (enc->padChar != -1)) {
        runtime_convT64(local_10 - dlen,(void *)si);
        return;
      }
      goto LAB_0054a26c;
    }
    if (in_R8 <= local_10) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    bVar1 = *(byte *)(local_10 + in_RSI);
    uVar3 = local_10 + 1;
    if (enc->decodeMap[bVar1] == 0xff) {
      if ((bVar1 != 10) && (bVar1 != 0xd)) {
        if (enc->padChar != (dword)bVar1) {
          uVar2 = local_10;
          local_10 = uVar3;
          runtime_convT64(uVar2,(void *)si);
          return;
        }
        if ((uint)dlen < 2) {
          uVar2 = local_10;
          local_10 = uVar3;
          runtime_convT64(uVar2,(void *)si);
          return;
        }
        local_10 = uVar3;
        if (dlen == 2) goto LAB_0054a448;
        goto LAB_0054a3c0;
      }
      j = dlen + -1;
    }
    else {
      if (3 < (uint)dlen) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      *(uint8 *)((int)&local_24 + dlen) = enc->decodeMap[bVar1];
      j = dlen;
    }
    j = j + 1;
    local_10 = uVar3;
    dlen = j;
  }
  dlen = 4;
LAB_0054a26c:
  val._0_1_ = local_24._3_1_ | (byte)((uint)local_24._2_1_ << 6);
  local_24 = CONCAT31(CONCAT21(CONCAT11(local_24._3_1_,(byte)val),
                               (byte)(((uint)local_24._2_1_ << 6) >> 8) |
                               (byte)(((uint)local_24._1_1_ << 0xc) >> 8)),
                      (byte)(((uint)(byte)local_24 << 0x12) >> 0x10) |
                      (byte)(((uint)local_24._1_1_ << 0xc) >> 0x10));
  local_10 = uVar3;
  if (dlen != 2) {
    if (dlen != 3) {
      if (dlen != 4) {
        return;
      }
      if ((uint)nsi < 3) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      *(byte *)(si + 2) = (byte)val;
      local_24._0_3_ = (uint3)(ushort)local_24;
    }
    if ((uint)nsi < 2) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(byte *)(si + 1) = local_24._1_1_;
    if ((enc->strict != false) && (local_24._2_1_ != '\0')) {
      runtime_convT64(uVar3 - 1,(void *)si);
      return;
    }
    local_24._0_2_ = (ushort)(byte)local_24;
  }
  if (nsi == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  *(byte *)si = (byte)local_24;
  if ((enc->strict != false) && ((local_24._1_1_ != '\0' || (local_24._2_1_ != '\0')))) {
    runtime_convT64(uVar3 - 2,(void *)si);
    return;
  }
  return;
LAB_0054a448:
  if ((int)in_R8 <= (int)local_10) goto LAB_0054a469;
  if (in_R8 <= local_10) {
    local_10 = uVar3;
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if ((*(char *)(in_RSI + local_10) != '\n') && (*(char *)(in_RSI + local_10) != '\r'))
  goto LAB_0054a469;
  local_10 = local_10 + 1;
  goto LAB_0054a448;
LAB_0054a469:
  if (in_R8 == local_10) {
    runtime_convT64(in_R8,(void *)si);
    return;
  }
  if (in_R8 <= local_10) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if (enc->padChar != (dword)*(byte *)(in_RSI + local_10)) {
    runtime_convT64(local_10 - 1,(void *)si);
    return;
  }
  uVar3 = local_10 + 1;
LAB_0054a3c0:
  do {
    if ((int)in_R8 <= (int)uVar3) goto LAB_0054a26c;
    if (in_R8 <= uVar3) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((*(char *)(in_RSI + uVar3) != '\n') && (*(char *)(in_RSI + uVar3) != '\r')) {
      if ((int)uVar3 < (int)in_R8) {
        local_20 = dlen;
        local_18 = uVar3;
        runtime_convT64(uVar3,(void *)si);
        dlen = local_20;
        uVar3 = local_18;
      }
      goto LAB_0054a26c;
    }
    uVar3 = uVar3 + 1;
  } while( true );
}



void encoding_base64___Encoding__DecodeString
               (encoding_base64_Encoding *enc,string s,__uint8 ~r0,error ~r1)

{
  __uint8 dst;
  __uint8 ~r0_00;
  __uint8 src;
  error err;
  int extraout_RAX;
  void *extraout_RAX_00;
  int n;
  uint in_RCX;
  void *len;
  void *in_RDI;
  void *extraout_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffff90;
  uint8 *in_stack_ffffffffffffffa0;
  undefined in_stack_ffffffffffffffa8 [16];
  int in_stack_ffffffffffffffb8;
  runtime_itab *in_stack_ffffffffffffffc0;
  uint8 local_30 [32];
  int local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  if (enc->padChar == -1) {
    len = (void *)((int)(((uint)((int)(in_RCX * 6) >> 0x3f) >> 0x3d) + in_RCX * 6) >> 3);
  }
  else {
    len = (void *)((in_RCX >> 2) * 3);
  }
  runtime_makeslice((internal_abi_Type *)&DAT_00807920,(int)len,(int)len,in_RDI);
  ~r0_00.len = in_stack_ffffffffffffffa8._0_8_;
  ~r0_00.cap = in_stack_ffffffffffffffa8._8_8_;
  ~r0_00.array = in_stack_ffffffffffffffa0;
  local_10 = extraout_RAX;
  runtime_stringtoslicebyte(&local_30,in_stack_ffffffffffffff90,~r0_00);
  dst.cap = (int)in_stack_ffffffffffffffa0;
  dst.array = in_stack_ffffffffffffff90.str;
  dst.len = in_stack_ffffffffffffff90.len;
  src.cap = in_stack_ffffffffffffffb8;
  src.array = (uint8 *)in_stack_ffffffffffffffa8._0_8_;
  src.len = in_stack_ffffffffffffffa8._8_8_;
  err.data = len;
  err.tab = in_stack_ffffffffffffffc0;
  encoding_base64___Encoding__Decode(enc,dst,src,local_10,err);
  if (extraout_RAX_00 <= len) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceAcap();
}



void encoding_base64___Encoding__Decode
               (encoding_base64_Encoding *enc,__uint8 dst,__uint8 src,int n,error err)

{
  uint uVar1;
  uint32 dn_1;
  uint extraout_RAX;
  uint extraout_RAX_00;
  uint extraout_RAX_01;
  uint in_RCX;
  int extraout_RCX;
  int extraout_RCX_00;
  int extraout_RCX_01;
  uint uVar2;
  uint64 dn;
  uint uVar3;
  uint uVar4;
  int extraout_RBX;
  int ninc;
  int extraout_RBX_00;
  int ninc_1;
  int extraout_RBX_01;
  int ninc_2;
  int in_RSI;
  int in_RDI;
  undefined8 extraout_RDI;
  dword dVar5;
  int in_R8;
  uint uVar6;
  uint in_R9;
  undefined8 uVar7;
  uint uVar8;
  undefined8 uVar9;
  uint uVar10;
  dword dVar11;
  uint uVar12;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffff60;
  __uint8 in_stack_ffffffffffffff78;
  error in_stack_ffffffffffffff90;
  int si;
  undefined8 local_20;
  uint local_18;
  undefined8 local_10;
  
  while (&local_20 <= *(undefined8 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_R8 == 0) {
    return;
  }
  uVar3 = 0;
  uVar9 = 0;
  uVar2 = 0;
  while( true ) {
    uVar7 = 0;
    if (((int)(in_R8 - uVar2) < 8) || ((int)(in_RCX - uVar3) < 8)) {
      while( true ) {
        if (((int)(in_R8 - uVar2) < 4) || ((int)(in_RCX - uVar3) < 4)) {
          while( true ) {
            if (in_R8 <= (int)uVar2) {
              return;
            }
            if (in_RCX < uVar3) break;
            local_18 = uVar3;
            encoding_base64___Encoding__decodeQuantum
                      (enc,in_stack_ffffffffffffff60,in_stack_ffffffffffffff78,
                       ((int)-(in_RDI - uVar3) >> 0x3f & uVar3) + n,in_RCX - uVar3,in_RDI - uVar3,
                       in_stack_ffffffffffffff90);
            uVar3 = local_18 + extraout_RBX_01;
            uVar2 = extraout_RAX_01;
            if (extraout_RCX_01 != 0) {
              return;
            }
          }
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        uVar1 = uVar2 + 4;
        if (in_R9 < uVar1) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAcap();
        }
        if (uVar1 < uVar2) break;
        uVar2 = (int)(uVar2 - in_R9) >> 0x3f & uVar2;
        if ((uint8)(enc->decodeMap[*(byte *)(in_RSI + 1 + uVar2)] |
                    enc->decodeMap[*(byte *)(in_RSI + uVar2)] |
                    enc->decodeMap[*(byte *)(in_RSI + 2 + uVar2)] |
                   enc->decodeMap[*(byte *)(in_RSI + 3 + uVar2)]) == 0xff) {
          if (in_RCX < uVar3) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          encoding_base64___Encoding__decodeQuantum
                    (enc,in_stack_ffffffffffffff60,in_stack_ffffffffffffff78,
                     ((int)-(in_RDI - uVar3) >> 0x3f & uVar3) + n,in_RCX - uVar3,in_RDI - uVar3,
                     in_stack_ffffffffffffff90);
          uVar3 = uVar3 + extraout_RBX_00;
          uVar2 = extraout_RAX_00;
          if (extraout_RCX_00 != 0) {
            return;
          }
        }
        else {
          dVar11 = (dword)enc->decodeMap[*(byte *)(in_RSI + uVar2)] << 0x1a |
                   (dword)enc->decodeMap[*(byte *)(in_RSI + 1 + uVar2)] << 0x14;
          dVar5 = (dword)enc->decodeMap[*(byte *)(in_RSI + 2 + uVar2)] << 0xe;
          if (in_RCX < uVar3) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          *(dword *)(n + ((int)(uVar3 - in_RDI) >> 0x3f & uVar3)) =
               dVar11 >> 0x18 | ((dVar5 | dVar11) & 0xff0000) >> 8 |
               ((dword)enc->decodeMap[*(byte *)(in_RSI + 3 + uVar2)] << 8 | dVar5 & 0xff00) << 8;
          uVar3 = uVar3 + 3;
          uVar2 = uVar1;
        }
      }
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    uVar1 = uVar2 + 8;
    if (in_R9 < uVar1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    if (uVar1 < uVar2) break;
    uVar2 = (int)(uVar2 - in_R9) >> 0x3f & uVar2;
    local_20 = uVar7;
    local_18 = uVar1;
    local_10 = uVar9;
    if ((uint8)(enc->decodeMap[*(byte *)(in_RSI + 1 + uVar2)] |
                enc->decodeMap[*(byte *)(in_RSI + uVar2)] |
                enc->decodeMap[*(byte *)(in_RSI + 2 + uVar2)] |
                enc->decodeMap[*(byte *)(in_RSI + 3 + uVar2)] |
                enc->decodeMap[*(byte *)(in_RSI + 4 + uVar2)] |
                enc->decodeMap[*(byte *)(in_RSI + 5 + uVar2)] |
                enc->decodeMap[*(byte *)(in_RSI + 6 + uVar2)] |
               enc->decodeMap[*(byte *)(in_RSI + 7 + uVar2)]) == 0xff) {
      if (in_RCX < uVar3) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      encoding_base64___Encoding__decodeQuantum
                (enc,in_stack_ffffffffffffff60,in_stack_ffffffffffffff78,
                 n + ((int)-(in_RDI - uVar3) >> 0x3f & uVar3),in_RCX - uVar3,in_RDI - uVar3,
                 in_stack_ffffffffffffff90);
      uVar3 = uVar3 + extraout_RBX;
      uVar2 = extraout_RAX;
      uVar9 = extraout_RDI;
      if (extraout_RCX != 0) {
        return;
      }
    }
    else {
      uVar12 = (uint)enc->decodeMap[*(byte *)(in_RSI + uVar2)] << 0x3a |
               (uint)enc->decodeMap[*(byte *)(in_RSI + 1 + uVar2)] << 0x34;
      uVar6 = (uint)enc->decodeMap[*(byte *)(in_RSI + 2 + uVar2)] << 0x2e | uVar12;
      uVar10 = (uint)enc->decodeMap[*(byte *)(in_RSI + 4 + uVar2)] << 0x22 |
               (uint)enc->decodeMap[*(byte *)(in_RSI + 3 + uVar2)] << 0x28 | uVar6;
      uVar8 = (uint)enc->decodeMap[*(byte *)(in_RSI + 5 + uVar2)] << 0x1c | uVar10;
      uVar4 = (uint)enc->decodeMap[*(byte *)(in_RSI + 6 + uVar2)] << 0x16;
      if (in_RCX < uVar3) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      *(uint *)(n + ((int)(uVar3 - in_RDI) >> 0x3f & uVar3)) =
           uVar12 >> 0x38 | (uVar6 & 0xff000000000000) >> 0x28 | (uVar10 & 0xff0000000000) >> 0x18 |
           (uVar8 & 0xff00000000) >> 8 | ((uVar4 | uVar8) & 0xff000000) << 8 |
           ((uint)enc->decodeMap[*(byte *)(in_RSI + 7 + uVar2)] << 0x10 | uVar4 & 0xff0000) << 0x18;
      uVar3 = uVar3 + 6;
      uVar2 = uVar1;
    }
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceB();
}



int encoding_base64_init(EVP_PKEY_CTX *ctx)

{
  int i;
  encoding_base64_Encoding *__dest;
  encoding_base64_Encoding *e;
  encoding_base64_Encoding *extraout_RAX;
  int i_2;
  encoding_base64_Encoding *__dest_00;
  encoding_base64_Encoding *e_1;
  encoding_base64_Encoding *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  encoding_base64_Encoding *_enc;
  undefined8 extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  encoding_base64_Encoding *_enc_1;
  encoding_base64_Encoding *peVar1;
  encoding_base64_Encoding *extraout_RAX_04;
  int i_1;
  int i_3;
  int i_4;
  int i_5;
  void *in_RBX;
  char *extraout_RBX;
  char *extraout_RBX_00;
  char *pcVar2;
  undefined8 extraout_RBX_01;
  void *extraout_RBX_02;
  encoding_base64_Encoding **extraout_R11;
  encoding_base64_Encoding **extraout_R11_00;
  undefined8 *extraout_R11_01;
  encoding_base64_Encoding **extraout_R11_02;
  int unaff_R14;
  undefined auVar3 [16];
  interface___ in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX_02;
  }
  i = 0;
  while( true ) {
    if (0x3f < i) {
      runtime_newobject((internal_abi_Type *)&DAT_008827a0,in_RBX);
      __dest->padChar = 0x3d;
      if (__dest != (encoding_base64_Encoding *)0x8cbb64) {
        runtime_memmove(__dest,
                        "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credentialsruntime: unexpected error while checking standard file descriptor reflect: indirection through nil pointer to embedded struct field base.baseBalancer: UpdateSubConnState(%v, %+v) called unexpectedlyreceived goaway with non-zero even-numbered numbered stream id: %vmetadata: Pairs got the odd number of input pairs for metadata: %dDescriptor.Options called without importing the descriptor packagex509: certificate is not valid for any names, but wanted to match x509: requested SignatureAlgorithm does not match private key typeServer retry pushback specified multiple values (%q); not retrying.base.baseBalancer: got state changes for an unknown SubConn: %p, %vtransport: cannot send secure credentials on an insecure connectionfield %v with invalid Mutable call on field with non-composite typeinvalid retry throttling config: tokenRatio (%v) may not be negativeAllThreadsSyscall6 results differ between threads; runtime corruptedreflect: reflect.Value.UnsafePointer on an invalid notinheap pointerexpected a JSON struct with one entry; received entry %v at index %dpadding b..." /* TRUNCATED STRING LITERAL */
                        ,0x40);
      }
      if (__dest->decodeMap != &DAT_008ce550) {
        runtime_memmove(__dest->decodeMap,&DAT_008ce550,0x100);
      }
      pcVar2 = 
      "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credentialsruntime: unexpected error while checking standard file descriptor reflect: indirection through nil pointer to embedded struct field base.baseBalancer: UpdateSubConnState(%v, %+v) called unexpectedlyreceived goaway with non-zero even-numbered numbered stream id: %vmetadata: Pairs got the odd number of input pairs for metadata: %dDescriptor.Options called without importing the descriptor packagex509: certificate is not valid for any names, but wanted to match x509: requested SignatureAlgorithm does not match private key typeServer retry pushback specified multiple values (%q); not retrying.base.baseBalancer: got state changes for an unknown SubConn: %p, %vtransport: cannot send secure credentials on an insecure connectionfield %v with invalid Mutable call on field with non-composite typeinvalid retry throttling config: tokenRatio (%v) may not be negativeAllThreadsSyscall6 results differ between threads; runtime corruptedreflect: reflect.Value.UnsafePointer on an invalid notinheap pointerexpected a JSON struct with one entry; received entry %v at index %dpadding b..." /* TRUNCATED STRING LITERAL */
      ;
      for (i_1 = 0; i_1 < 0x40; i_1 = i_1 + 1) {
        __dest->decodeMap
        [(byte)"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZgrpc: addrConn.createTransport failed to connect to %s. Err: %vHealth check is requested but health check function is not set.malformed GOMEMLIMIT; see `go doc runtime/debug.SetMemoryLimit`attempt to delete an entry (id=%d) that doesn\'t currently existtransport: received per-RPC creds error with illegal status: %vnet/trace: trace used after finish:\nFinished at:\n%s\nUsed at:\n%selementNoneelementScriptelementStyleelementTextareaelementTitleecdsa: internal error: P256OrdInverse produced an invalid valuegrpc: Compressor is not installed for requested grpc-encoding %qgrpc: client streaming protocol violation: get <nil>, want <EOF>runtime.SetFinalizer: first argument was allocated into an arenareflect.StructOf: struct size would exceed virtual address spacethe stream is rejected because server is draining the connectionjson: invalid number literal, trying to unmarshal %q into Numberheader key %q contains value with non-printable ASCII charactersextension %v has mismatching containing message: got %v, want %vABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credential..." /* TRUNCATED STRING LITERAL */
               [i_1 + 0x436]] = (uint8)i_1;
      }
      peVar1 = __dest;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_RAX;
        extraout_R11[1] = encoding_base64_StdEncoding;
        peVar1 = extraout_RAX;
        pcVar2 = extraout_RBX;
      }
      i_2 = 0;
      while( true ) {
        encoding_base64_StdEncoding = peVar1;
        if (0x3f < i_2) {
          runtime_newobject((internal_abi_Type *)&DAT_008827a0,pcVar2);
          __dest_00->padChar = 0x3d;
          if (__dest_00 != (encoding_base64_Encoding *)0x8cbba4) {
            runtime_memmove(__dest_00,
                            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credentialsruntime: unexpected error while checking standard file descriptor reflect: indirection through nil pointer to embedded struct field base.baseBalancer: UpdateSubConnState(%v, %+v) called unexpectedlyreceived goaway with non-zero even-numbered numbered stream id: %vmetadata: Pairs got the odd number of input pairs for metadata: %dDescriptor.Options called without importing the descriptor packagex509: certificate is not valid for any names, but wanted to match x509: requested SignatureAlgorithm does not match private key typeServer retry pushback specified multiple values (%q); not retrying.base.baseBalancer: got state changes for an unknown SubConn: %p, %vtransport: cannot send secure credentials on an insecure connectionfield %v with invalid Mutable call on field with non-composite typeinvalid retry throttling config: tokenRatio (%v) may not be negativeAllThreadsSyscall6 results differ between threads; runtime corruptedreflect: reflect.Value.UnsafePointer on an invalid notinheap pointerexpected a JSON struct with one entry; received entry %v at index %dpadding bytes must all be zeros unless AllowIllegalWrites is enabledhttp:..." /* TRUNCATED STRING LITERAL */
                            ,0x40);
          }
          if (__dest_00->decodeMap != &DAT_008ce550) {
            runtime_memmove(__dest_00->decodeMap,&DAT_008ce550,0x100);
          }
          pcVar2 = 
          "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credentialsruntime: unexpected error while checking standard file descriptor reflect: indirection through nil pointer to embedded struct field base.baseBalancer: UpdateSubConnState(%v, %+v) called unexpectedlyreceived goaway with non-zero even-numbered numbered stream id: %vmetadata: Pairs got the odd number of input pairs for metadata: %dDescriptor.Options called without importing the descriptor packagex509: certificate is not valid for any names, but wanted to match x509: requested SignatureAlgorithm does not match private key typeServer retry pushback specified multiple values (%q); not retrying.base.baseBalancer: got state changes for an unknown SubConn: %p, %vtransport: cannot send secure credentials on an insecure connectionfield %v with invalid Mutable call on field with non-composite typeinvalid retry throttling config: tokenRatio (%v) may not be negativeAllThreadsSyscall6 results differ between threads; runtime corruptedreflect: reflect.Value.UnsafePointer on an invalid notinheap pointerexpected a JSON struct with one entry; received entry %v at index %dpadding bytes must all be zeros unless AllowIllegalWrites is enabledhttp:..." /* TRUNCATED STRING LITERAL */
          ;
          for (i_3 = 0; i_3 < 0x40; i_3 = i_3 + 1) {
            __dest_00->decodeMap
