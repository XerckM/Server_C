  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff0;
  }
  ~r0.data = unaff_RBP;
  ~r0.tab = in_stack_fffffffffffffff0;
  internal_poll___FD__decref(*(internal_poll_FD **)(in_RDX + 8),~r0);
  return;
}



// DWARF original prototype: void internal/poll.(*FD).Seek(internal/poll.FD * fd, int64 offset, int
// whence, int64 ~r0, int64 ~r0, error ~r1, error ~r1)

void internal_poll___FD__Seek
               (internal_poll_FD *fd,int64 offset,int whence,int64 ~r0,int64 ~r0_1,error ~r1,
               error ~r1_1)

{
  uint uVar1;
  uint64 old;
  undefined1 *puVar2;
  uint64 new;
  int unaff_R14;
  bool bVar3;
  interface___ in_stack_ffffffffffffffa8;
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  do {
    uVar1 = (fd->fdmu).state;
    bVar3 = (uVar1 & 1) != 0;
    if (bVar3) goto LAB_004ad54e;
    if ((uVar1 + 8 & 0x7ffff8) == 0) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffa8);
    }
    LOCK();
    bVar3 = uVar1 == (fd->fdmu).state;
    if (bVar3) {
      (fd->fdmu).state = uVar1 + 8;
    }
    UNLOCK();
  } while (!bVar3);
  bVar3 = (uVar1 & 1) != 0;
LAB_004ad54e:
  if (bVar3) {
    puVar2 = (undefined1 *)internal_poll_ErrFileClosing.tab;
    if (fd->isFile == false) {
      puVar2 = go_itab_internal_poll_errNetClosing_error;
    }
  }
  else {
    puVar2 = (undefined1 *)0x0;
  }
  if ((runtime_itab *)puVar2 == (runtime_itab *)0x0) {
    local_20._8_8_ = fd;
    local_20._0_8_ = internal_poll___FD__Seek_func1;
    local_10 = (code **)local_20;
    syscall_Seek(fd->Sysfd,offset,whence,(int64)fd,(error)in_stack_ffffffffffffffa8);
    (**local_10)();
    return;
  }
  return;
}



// WARNING: Unknown calling convention

void internal_poll___FD__Seek_func1(void)

{
  int *piVar1;
  error ~r0;
  int in_RDX;
  void *unaff_RBP;
  int unaff_R14;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff0;
  }
  ~r0.data = unaff_RBP;
  ~r0.tab = in_stack_fffffffffffffff0;
  internal_poll___FD__decref(*(internal_poll_FD **)(in_RDX + 8),~r0);
  return;
}



ssize_t internal_poll_writev(int __fd,iovec *__iovec,int __count)

{
  ssize_t extraout_RAX;
  uintptr r;
  uint64 val;
  syscall_Errno e;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr extraout_RSI_00;
  uintptr in_R8;
  uintptr extraout_R8;
  uintptr extraout_R8_00;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  syscall_Errno extraout_R9_00;
  int unaff_R14;
  iovec *piStack0000000000000010;
  uintptr uStack0000000000000018;
  
  uStack0000000000000018 = __count;
  piStack0000000000000010 = __iovec;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI_00;
    in_R8 = extraout_R8_00;
    in_R9 = extraout_R9_00;
  }
  do {
    if (uStack0000000000000018 == 0) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    syscall_Syscall(0x14,__fd,(uintptr)piStack0000000000000010,uStack0000000000000018,in_RSI,in_R8,
                    in_R9);
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  } while (val == 4);
  if (val == 0) {
    return extraout_RAX;
  }
  runtime_convT64(val,x);
  return extraout_RAX;
}



// DWARF original prototype: void internal/poll.SendFile(internal/poll.FD * dstFD, int src, int64
// remain, int64 ~r0, int64 ~r0, error ~r1, error ~r1, bool ~r2, bool ~r2)

void internal_poll_SendFile
               (internal_poll_FD *dstFD,int src,int64 remain,int64 ~r0,int64 ~r0_1,error ~r1,
               error ~r1_1,bool ~r2,bool ~r2_1)

{
  int __out_fd;
  char extraout_AL_00;
  char extraout_AL_01;
  bool handled;
  char extraout_AL;
  int extraout_RAX;
  int dst;
  ssize_t sVar1;
  undefined1 *puVar2;
  int n;
  void *x;
  int64 written;
  undefined1 *extraout_RBX;
  bool ~r0_00;
  undefined extraout_DIL;
  undefined ~r0_01;
  size_t __count;
  int unaff_R14;
  error in_stack_ffffffffffffff60;
  undefined local_20 [16];
  code **local_10;
  
  while (local_20 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  internal_poll___fdMutex__rwlock(&dstFD->fdmu,false,SUB81(remain,0));
  if (extraout_AL == '\0') {
    puVar2 = (undefined1 *)internal_poll_ErrFileClosing.tab;
    if (dstFD->isFile == false) {
      puVar2 = go_itab_internal_poll_errNetClosing_error;
    }
  }
  else {
    puVar2 = (undefined1 *)0x0;
  }
  if ((runtime_itab *)puVar2 != (runtime_itab *)0x0) {
    return;
  }
  local_20._8_8_ = dstFD;
  local_20._0_8_ = internal_poll_SendFile_func1;
  local_10 = (code **)local_20;
  internal_poll___pollDesc__prepare(&dstFD->pd,0x77,dstFD->isFile,in_stack_ffffffffffffff60);
  if (extraout_RAX != 0) {
    (**local_10)();
    return;
  }
  __out_fd = dstFD->Sysfd;
  n = remain;
  do {
    if (n < 1) break;
    __count = 0x400000;
    if (n < 0x400000) {
      __count = n;
    }
    sVar1 = syscall_sendfile(__out_fd,src,(off_t *)0x0,__count);
    if (sVar1 < 1) {
      if ((sVar1 == 0) && (extraout_RBX == (undefined1 *)0x0)) break;
    }
    else {
      n = n - sVar1;
    }
    ~r0_01 = ~r0_00;
  } while ((((extraout_RBX == go_itab_syscall_Errno_error) &&
            (runtime_ifaceeq((runtime_itab *)go_itab_syscall_Errno_error,x,&DAT_0095a650,~r0_00),
            ~r0_01 = extraout_DIL, extraout_AL_00 != '\0')) ||
           ((puVar2 = extraout_RBX, extraout_RBX == go_itab_syscall_Errno_error &&
            ((runtime_ifaceeq((runtime_itab *)go_itab_syscall_Errno_error,x,&DAT_0095c810,
                              (bool)~r0_01), extraout_AL_01 != '\0' &&
             (puVar2 = (undefined1 *)internal_poll___pollDesc__wait(&dstFD->pd),
             puVar2 == (undefined1 *)0x0)))))) || (puVar2 == (undefined1 *)0x0));
  (**local_10)();
  return;
}



// WARNING: Unknown calling convention

void internal_poll_SendFile_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  internal_poll___FD__writeUnlock(*(internal_poll_FD **)(in_RDX + 8));
  return;
}



int internal_poll_accept(int __fd,sockaddr *__addr,socklen_t *__addr_len)

{
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  char extraout_AL_02;
  int iVar1;
  int ns;
  int extraout_RAX;
  int *extraout_RBX;
  int *extraout_RBX_00;
  int *extraout_RBX_01;
  int *extraout_RBX_02;
  int *piVar2;
  error *extraout_RBX_03;
  error *in_RSI;
  void *x;
  error *extraout_RSI;
  bool ~r0;
  syscall_Sockaddr *in_RDI;
  undefined1 *extraout_RDI;
  error *extraout_RDI_00;
  error *extraout_RDI_01;
  error *extraout_RDI_02;
  error *extraout_RDI_03;
  error *peVar3;
  int extraout_RDI_04;
  syscall_Sockaddr *extraout_RDI_05;
  int unaff_R14;
  error in_stack_ffffffffffffffa8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_RDI = extraout_RDI_05;
  }
  iVar1 = (**internal_poll_Accept4Func)
                    (__fd,0x80800,(int *)*internal_poll_Accept4Func,in_RDI,in_RSI);
  if (extraout_RDI == (undefined1 *)0x0) {
    return iVar1;
  }
  if (((((extraout_RDI != go_itab_syscall_Errno_error) ||
        (runtime_ifaceeq((runtime_itab *)go_itab_syscall_Errno_error,x,&DAT_0095c808,true),
        piVar2 = extraout_RBX, peVar3 = extraout_RDI_00, extraout_AL == '\0')) &&
       ((~r0 = SUB81(extraout_RDI,0), extraout_RDI != go_itab_syscall_Errno_error ||
        (runtime_ifaceeq((runtime_itab *)go_itab_syscall_Errno_error,x,&DAT_0095c5d8,~r0),
        piVar2 = extraout_RBX_00, peVar3 = extraout_RDI_01, extraout_AL_00 == '\0')))) &&
      ((extraout_RDI != go_itab_syscall_Errno_error ||
       (runtime_ifaceeq((runtime_itab *)go_itab_syscall_Errno_error,x,&DAT_0095c5f0,~r0),
       piVar2 = extraout_RBX_01, peVar3 = extraout_RDI_02, extraout_AL_01 == '\0')))) &&
     ((extraout_RDI != go_itab_syscall_Errno_error ||
      (runtime_ifaceeq((runtime_itab *)go_itab_syscall_Errno_error,x,&DAT_0095a8b8,~r0),
      piVar2 = extraout_RBX_02, peVar3 = extraout_RDI_03, extraout_AL_02 == '\0')))) {
    return -1;
  }
  iVar1 = (**internal_poll_AcceptFunc)
                    (__fd,piVar2,(syscall_Sockaddr *)*internal_poll_AcceptFunc,peVar3);
  if (extraout_RDI_04 != 0) {
    return -1;
  }
  syscall_fcntl(iVar1,2,1);
  syscall_SetNonblock(iVar1,true,in_stack_ffffffffffffffa8);
  if (extraout_RAX != 0) {
    (**internal_poll_CloseFunc)(iVar1,extraout_RBX_03);
    return -1;
  }
  return iVar1;
}



// DWARF original prototype: void internal/poll.(*FD).SetsockoptInt(internal/poll.FD * fd, int
// level, int name, int arg, error ~r0, error ~r0)

void internal_poll___FD__SetsockoptInt
               (internal_poll_FD *fd,int level,int name,int arg,error ~r0,error ~r0_1)

{
  uint uVar1;
  uint64 old;
  undefined1 *puVar2;
  undefined8 extraout_RBX;
  uint64 new;
  int unaff_R14;
  bool bVar3;
  interface___ in_stack_ffffffffffffffa0;
  undefined4 local_34;
  undefined local_30 [16];
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  do {
    uVar1 = (fd->fdmu).state;
    bVar3 = (uVar1 & 1) != 0;
    if (bVar3) goto LAB_004adeae;
    if ((uVar1 + 8 & 0x7ffff8) == 0) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffa0);
    }
    LOCK();
    bVar3 = uVar1 == (fd->fdmu).state;
    if (bVar3) {
      (fd->fdmu).state = uVar1 + 8;
    }
    UNLOCK();
  } while (!bVar3);
  bVar3 = (uVar1 & 1) != 0;
LAB_004adeae:
  if (bVar3) {
    puVar2 = (undefined1 *)internal_poll_ErrFileClosing.tab;
    if (fd->isFile == false) {
      puVar2 = go_itab_internal_poll_errNetClosing_error;
    }
  }
  else {
    puVar2 = (undefined1 *)0x0;
  }
  if ((runtime_itab *)puVar2 == (runtime_itab *)0x0) {
    local_20._8_8_ = fd;
    local_20._0_8_ = internal_poll___FD__SetsockoptInt_func1;
    local_10 = (code **)local_20;
    local_34 = (undefined4)arg;
    local_30._0_8_ = syscall_setsockopt(fd->Sysfd,level,name,&local_34,4);
    local_30._8_8_ = extraout_RBX;
    (**local_10)();
    return;
  }
  return;
}



// WARNING: Unknown calling convention

void internal_poll___FD__SetsockoptInt_func1(void)

{
  int *piVar1;
  error ~r0;
  int in_RDX;
  void *unaff_RBP;
  int unaff_R14;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff0;
  }
  ~r0.data = unaff_RBP;
  ~r0.tab = in_stack_fffffffffffffff0;
  internal_poll___FD__decref(*(internal_poll_FD **)(in_RDX + 8),~r0);
  return;
}



// DWARF original prototype: void internal/poll.(*FD).SetsockoptInet4Addr(internal/poll.FD * fd, int
// level, int name, uint8[4] arg, error ~r0, error ~r0)

void internal_poll___FD__SetsockoptInet4Addr
               (internal_poll_FD *fd,int level,int name,uint8 arg [4],error ~r0,error ~r0_1)

{
  uint uVar1;
  uint64 old;
  undefined1 *puVar2;
  undefined8 extraout_RBX;
  uint64 new;
  int unaff_R14;
  bool bVar3;
  interface___ in_stack_ffffffffffffffa0;
  undefined4 local_34;
  undefined local_30 [16];
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  do {
    uVar1 = (fd->fdmu).state;
    bVar3 = (uVar1 & 1) != 0;
    if (bVar3) goto LAB_004ae08e;
    if ((uVar1 + 8 & 0x7ffff8) == 0) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffa0);
    }
    LOCK();
    bVar3 = uVar1 == (fd->fdmu).state;
    if (bVar3) {
      (fd->fdmu).state = uVar1 + 8;
    }
    UNLOCK();
  } while (!bVar3);
  bVar3 = (uVar1 & 1) != 0;
LAB_004ae08e:
  if (bVar3) {
    puVar2 = (undefined1 *)internal_poll_ErrFileClosing.tab;
    if (fd->isFile == false) {
      puVar2 = go_itab_internal_poll_errNetClosing_error;
    }
  }
  else {
    puVar2 = (undefined1 *)0x0;
  }
  if ((runtime_itab *)puVar2 == (runtime_itab *)0x0) {
    local_20._8_8_ = fd;
    local_20._0_8_ = internal_poll___FD__SetsockoptInet4Addr_func1;
    local_10 = (code **)local_20;
    local_34 = ~r0.tab._0_4_;
    local_30._0_8_ = syscall_setsockopt(fd->Sysfd,level,name,&local_34,4);
    local_30._8_8_ = extraout_RBX;
    (**local_10)();
    return;
  }
  return;
}



// WARNING: Unknown calling convention

void internal_poll___FD__SetsockoptInet4Addr_func1(void)

{
  int *piVar1;
  error ~r0;
  int in_RDX;
  void *unaff_RBP;
  int unaff_R14;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff0;
  }
  ~r0.data = unaff_RBP;
  ~r0.tab = in_stack_fffffffffffffff0;
  internal_poll___FD__decref(*(internal_poll_FD **)(in_RDX + 8),~r0);
  return;
}



// DWARF original prototype: void internal/poll.(*FD).SetsockoptLinger(internal/poll.FD * fd, int
// level, int name, syscall.Linger * l, error ~r0, error ~r0)

void internal_poll___FD__SetsockoptLinger
               (internal_poll_FD *fd,int level,int name,syscall_Linger *l,error ~r0,error ~r0_1)

{
  uint uVar1;
  uint64 old;
  undefined1 *puVar2;
  uint64 new;
  int unaff_R14;
  bool bVar3;
  interface___ in_stack_ffffffffffffffa0;
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  do {
    uVar1 = (fd->fdmu).state;
    bVar3 = (uVar1 & 1) != 0;
    if (bVar3) goto LAB_004ae26e;
    if ((uVar1 + 8 & 0x7ffff8) == 0) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffa0);
    }
    LOCK();
    bVar3 = uVar1 == (fd->fdmu).state;
    if (bVar3) {
      (fd->fdmu).state = uVar1 + 8;
    }
    UNLOCK();
  } while (!bVar3);
  bVar3 = (uVar1 & 1) != 0;
LAB_004ae26e:
  if (bVar3) {
    puVar2 = (undefined1 *)internal_poll_ErrFileClosing.tab;
    if (fd->isFile == false) {
      puVar2 = go_itab_internal_poll_errNetClosing_error;
    }
  }
  else {
    puVar2 = (undefined1 *)0x0;
  }
  if ((runtime_itab *)puVar2 == (runtime_itab *)0x0) {
    local_20._8_8_ = fd;
    local_20._0_8_ = internal_poll___FD__SetsockoptLinger_func1;
    local_10 = (code **)local_20;
    syscall_setsockopt(fd->Sysfd,level,name,l,8);
    (**local_10)();
    return;
  }
  return;
}



// WARNING: Unknown calling convention

void internal_poll___FD__SetsockoptLinger_func1(void)

{
  int *piVar1;
  error ~r0;
  int in_RDX;
  void *unaff_RBP;
  int unaff_R14;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff0;
  }
  ~r0.data = unaff_RBP;
  ~r0.tab = in_stack_fffffffffffffff0;
  internal_poll___FD__decref(*(internal_poll_FD **)(in_RDX + 8),~r0);
  return;
}



// DWARF original prototype: void internal/poll.(*FD).GetsockoptInt(internal/poll.FD * fd, int
// level, int name, int ~r0, int ~r0, error ~r1, error ~r1)

void internal_poll___FD__GetsockoptInt
               (internal_poll_FD *fd,int level,int name,int ~r0,int ~r0_1,error ~r1,error ~r1_1)

{
  uint uVar1;
  uint64 old;
  undefined1 *puVar2;
  uint64 new;
  int unaff_R14;
  bool bVar3;
  interface___ in_stack_ffffffffffffffa8;
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  do {
    uVar1 = (fd->fdmu).state;
    bVar3 = (uVar1 & 1) != 0;
    if (bVar3) goto LAB_004ae44e;
    if ((uVar1 + 8 & 0x7ffff8) == 0) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffa8);
    }
    LOCK();
    bVar3 = uVar1 == (fd->fdmu).state;
    if (bVar3) {
      (fd->fdmu).state = uVar1 + 8;
    }
    UNLOCK();
  } while (!bVar3);
  bVar3 = (uVar1 & 1) != 0;
LAB_004ae44e:
  if (bVar3) {
    puVar2 = (undefined1 *)internal_poll_ErrFileClosing.tab;
    if (fd->isFile == false) {
      puVar2 = go_itab_internal_poll_errNetClosing_error;
    }
  }
  else {
    puVar2 = (undefined1 *)0x0;
  }
  if ((runtime_itab *)puVar2 == (runtime_itab *)0x0) {
    local_20._8_8_ = fd;
    local_20._0_8_ = internal_poll___FD__GetsockoptInt_func1;
    local_10 = (code **)local_20;
    syscall_GetsockoptInt(fd->Sysfd,level,name,(int)fd,(error)in_stack_ffffffffffffffa8);
    (**local_10)();
    return;
  }
  return;
}



// WARNING: Unknown calling convention

void internal_poll___FD__GetsockoptInt_func1(void)

{
  int *piVar1;
  error ~r0;
  int in_RDX;
  void *unaff_RBP;
  int unaff_R14;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff0;
  }
  ~r0.data = unaff_RBP;
  ~r0.tab = in_stack_fffffffffffffff0;
  internal_poll___FD__decref(*(internal_poll_FD **)(in_RDX + 8),~r0);
  return;
}



// DWARF original prototype: void internal/poll.(*FD).SetsockoptIPMreqn(internal/poll.FD * fd, int
// level, int name, syscall.IPMreqn * mreq, error ~r0, error ~r0)

void internal_poll___FD__SetsockoptIPMreqn
               (internal_poll_FD *fd,int level,int name,syscall_IPMreqn *mreq,error ~r0,error ~r0_1)

{
  uint uVar1;
  uint64 old;
  undefined1 *puVar2;
  uint64 new;
  int unaff_R14;
  bool bVar3;
  interface___ in_stack_ffffffffffffffa0;
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  do {
    uVar1 = (fd->fdmu).state;
    bVar3 = (uVar1 & 1) != 0;
    if (bVar3) goto LAB_004ae62e;
    if ((uVar1 + 8 & 0x7ffff8) == 0) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffa0);
    }
    LOCK();
    bVar3 = uVar1 == (fd->fdmu).state;
    if (bVar3) {
      (fd->fdmu).state = uVar1 + 8;
    }
    UNLOCK();
  } while (!bVar3);
  bVar3 = (uVar1 & 1) != 0;
LAB_004ae62e:
  if (bVar3) {
    puVar2 = (undefined1 *)internal_poll_ErrFileClosing.tab;
    if (fd->isFile == false) {
      puVar2 = go_itab_internal_poll_errNetClosing_error;
    }
  }
  else {
    puVar2 = (undefined1 *)0x0;
  }
  if ((runtime_itab *)puVar2 == (runtime_itab *)0x0) {
    local_20._8_8_ = fd;
    local_20._0_8_ = internal_poll___FD__SetsockoptIPMreqn_func1;
    local_10 = (code **)local_20;
    syscall_setsockopt(fd->Sysfd,level,name,mreq,0xc);
    (**local_10)();
    return;
  }
  return;
}



// WARNING: Unknown calling convention

void internal_poll___FD__SetsockoptIPMreqn_func1(void)

{
  int *piVar1;
  error ~r0;
  int in_RDX;
  void *unaff_RBP;
  int unaff_R14;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff0;
  }
  ~r0.data = unaff_RBP;
  ~r0.tab = in_stack_fffffffffffffff0;
  internal_poll___FD__decref(*(internal_poll_FD **)(in_RDX + 8),~r0);
  return;
}



// DWARF original prototype: void internal/poll.(*FD).SetsockoptByte(internal/poll.FD * fd, int
// level, int name, uint8 arg, error ~r0, error ~r0)

void internal_poll___FD__SetsockoptByte
               (internal_poll_FD *fd,int level,int name,uint8 arg,error ~r0,error ~r0_1)

{
  uint uVar1;
  uint64 old;
  undefined1 *puVar2;
  undefined8 extraout_RBX;
  uint64 new;
  int unaff_R14;
  bool bVar3;
  interface___ in_stack_ffffffffffffffa0;
  uint8 local_32;
  undefined local_31;
  undefined local_30 [16];
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_31 = 0;
  do {
    uVar1 = (fd->fdmu).state;
    bVar3 = (uVar1 & 1) != 0;
    if (bVar3) goto LAB_004ae80e;
    if ((uVar1 + 8 & 0x7ffff8) == 0) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffa0);
    }
    LOCK();
    bVar3 = uVar1 == (fd->fdmu).state;
    if (bVar3) {
      (fd->fdmu).state = uVar1 + 8;
    }
    UNLOCK();
  } while (!bVar3);
  bVar3 = (uVar1 & 1) != 0;
LAB_004ae80e:
  if (bVar3) {
    puVar2 = (undefined1 *)internal_poll_ErrFileClosing.tab;
    if (fd->isFile == false) {
      puVar2 = go_itab_internal_poll_errNetClosing_error;
    }
  }
  else {
    puVar2 = (undefined1 *)0x0;
  }
  if ((runtime_itab *)puVar2 == (runtime_itab *)0x0) {
    local_20._8_8_ = fd;
    local_20._0_8_ = internal_poll___FD__SetsockoptByte_func1;
    local_10 = (code **)local_20;
    local_31 = 1;
    local_32 = arg;
    local_30._0_8_ = syscall_setsockopt(fd->Sysfd,level,name,&local_32,1);
    local_30._8_8_ = extraout_RBX;
    local_31 = 0;
    (**local_10)();
    return;
  }
  return;
}



// WARNING: Unknown calling convention

void internal_poll___FD__SetsockoptByte_func1(void)

{
  int *piVar1;
  error ~r0;
  int in_RDX;
  void *unaff_RBP;
  int unaff_R14;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff0;
  }
  ~r0.data = unaff_RBP;
  ~r0.tab = in_stack_fffffffffffffff0;
  internal_poll___FD__decref(*(internal_poll_FD **)(in_RDX + 8),~r0);
  return;
}



// DWARF original prototype: void internal/poll.(*FD).SetsockoptIPMreq(internal/poll.FD * fd, int
// level, int name, syscall.IPMreq * mreq, error ~r0, error ~r0)

void internal_poll___FD__SetsockoptIPMreq
               (internal_poll_FD *fd,int level,int name,syscall_IPMreq *mreq,error ~r0,error ~r0_1)

{
  uint uVar1;
  uint64 old;
  undefined1 *puVar2;
  uint64 new;
  int unaff_R14;
  bool bVar3;
  interface___ in_stack_ffffffffffffffa0;
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  do {
    uVar1 = (fd->fdmu).state;
    bVar3 = (uVar1 & 1) != 0;
    if (bVar3) goto LAB_004ae9ee;
    if ((uVar1 + 8 & 0x7ffff8) == 0) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffa0);
    }
    LOCK();
    bVar3 = uVar1 == (fd->fdmu).state;
    if (bVar3) {
      (fd->fdmu).state = uVar1 + 8;
    }
    UNLOCK();
  } while (!bVar3);
  bVar3 = (uVar1 & 1) != 0;
LAB_004ae9ee:
  if (bVar3) {
    puVar2 = (undefined1 *)internal_poll_ErrFileClosing.tab;
    if (fd->isFile == false) {
      puVar2 = go_itab_internal_poll_errNetClosing_error;
    }
  }
  else {
    puVar2 = (undefined1 *)0x0;
  }
  if ((runtime_itab *)puVar2 == (runtime_itab *)0x0) {
    local_20._8_8_ = fd;
    local_20._0_8_ = internal_poll___FD__SetsockoptIPMreq_func1;
    local_10 = (code **)local_20;
    syscall_setsockopt(fd->Sysfd,level,name,mreq,8);
    (**local_10)();
    return;
  }
  return;
}



// WARNING: Unknown calling convention

void internal_poll___FD__SetsockoptIPMreq_func1(void)

{
  int *piVar1;
  error ~r0;
  int in_RDX;
  void *unaff_RBP;
  int unaff_R14;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff0;
  }
  ~r0.data = unaff_RBP;
  ~r0.tab = in_stack_fffffffffffffff0;
  internal_poll___FD__decref(*(internal_poll_FD **)(in_RDX + 8),~r0);
  return;
}



// DWARF original prototype: void internal/poll.(*FD).SetsockoptIPv6Mreq(internal/poll.FD * fd, int
// level, int name, syscall.IPv6Mreq * mreq, error ~r0, error ~r0)

void internal_poll___FD__SetsockoptIPv6Mreq
               (internal_poll_FD *fd,int level,int name,syscall_IPv6Mreq *mreq,error ~r0,error ~r0_1
               )

{
  uint uVar1;
  uint64 old;
  undefined1 *puVar2;
  uint64 new;
  int unaff_R14;
  bool bVar3;
  interface___ in_stack_ffffffffffffffa0;
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  do {
    uVar1 = (fd->fdmu).state;
    bVar3 = (uVar1 & 1) != 0;
    if (bVar3) goto LAB_004aebce;
    if ((uVar1 + 8 & 0x7ffff8) == 0) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffa0);
    }
    LOCK();
    bVar3 = uVar1 == (fd->fdmu).state;
    if (bVar3) {
      (fd->fdmu).state = uVar1 + 8;
    }
    UNLOCK();
  } while (!bVar3);
  bVar3 = (uVar1 & 1) != 0;
LAB_004aebce:
  if (bVar3) {
    puVar2 = (undefined1 *)internal_poll_ErrFileClosing.tab;
    if (fd->isFile == false) {
      puVar2 = go_itab_internal_poll_errNetClosing_error;
    }
  }
  else {
    puVar2 = (undefined1 *)0x0;
  }
  if ((runtime_itab *)puVar2 == (runtime_itab *)0x0) {
    local_20._8_8_ = fd;
    local_20._0_8_ = internal_poll___FD__SetsockoptIPv6Mreq_func1;
    local_10 = (code **)local_20;
