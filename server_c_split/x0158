


void io_nopCloserWriterTo_WriteTo(io_nopCloserWriterTo c,io_Writer w,int64 n,error err)

{
  int extraout_RAX;
  runtime_itab *in_RCX;
  undefined8 in_RBX;
  undefined8 in_RDI;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_assertI2I((internal_abi_InterfaceType *)&DAT_00834f40,(runtime_itab *)n,in_RCX);
  (**(code **)(extraout_RAX + 0x18))(in_RBX,in_RCX,in_RDI);
  return;
}



void io_ReadAll(io_Reader r,__uint8 ~r0,error ~r1)

{
  uint uVar1;
  int in_RAX;
  void *extraout_RAX;
  int extraout_RAX_00;
  int n;
  void *extraout_RAX_01;
  void *oldPtr;
  uint oldCap;
  void *x;
  uint extraout_RCX;
  undefined8 in_RBX;
  runtime_itab *tab;
  uint extraout_RBX;
  uint uVar2;
  bool ~r0_00;
  void *in_RDI;
  void *extraout_RDI;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffff90;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,0x200,in_RDI);
  oldCap = 0x200;
  oldPtr = extraout_RAX;
  uVar1 = 0;
  while( true ) {
    uVar2 = uVar1;
    (**(code **)(in_RAX + 0x18))
              (in_RBX,(int)oldPtr + ((int)-(oldCap - uVar2) >> 0x3f & uVar2),oldCap - uVar2);
    uVar1 = uVar2 + extraout_RAX_00;
    if (oldCap < uVar1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    if (tab != (runtime_itab *)0x0) break;
    if (oldCap == uVar1) {
      uVar2 = uVar2 + extraout_RAX_00 + 1;
      if (oldCap < uVar2) {
        runtime_growslice(oldPtr,uVar2,oldCap,1,(internal_abi_Type *)&DAT_00807920,
                          in_stack_ffffffffffffff90);
        oldPtr = extraout_RAX_01;
        uVar2 = extraout_RBX;
        oldCap = extraout_RCX;
      }
      *(undefined *)((uVar2 - 1) + (int)oldPtr) = 0;
      if (oldCap < uVar1) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
    }
  }
  if (io_EOF.tab == tab) {
    runtime_ifaceeq(tab,x,io_EOF.data,~r0_00);
  }
  return;
}



void io_eofReader_Read(int ~r0,error ~r1)

{
  return;
}



void io___multiReader__Read(io_multiReader *mr,__uint8 p,int n,error err)

{
  undefined *puVar1;
  io_Reader **ppiVar2;
  int iVar3;
  char extraout_AL;
  byte extraout_AL_00;
  byte bVar4;
  io_multiReader *extraout_RAX;
  io_multiReader *piVar5;
  int extraout_RAX_00;
  void *x;
  runtime_itab *tab;
  io_Reader *extraout_RSI;
  io_Reader *extraout_RSI_00;
  io_Reader *piVar6;
  bool ~r0;
  undefined extraout_DIL;
  undefined extraout_DIL_00;
  undefined extraout_DIL_01;
  undefined extraout_DIL_02;
  undefined ~r0_00;
  io_multiReader *r;
  io_Reader *extraout_R8;
  io_Reader *piVar7;
  undefined8 extraout_R9;
  io_Reader **extraout_R11;
  undefined8 *extraout_R11_00;
  int iVar8;
  io_Reader **extraout_R11_01;
  int unaff_R14;
  
  while (piVar5 = mr, &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  do {
    while( true ) {
      puVar1 = (undefined *)(piVar5->readers).len;
      if (puVar1 == (undefined *)0x0) {
        return;
      }
      piVar6 = (piVar5->readers).array;
      if ((puVar1 != &DAT_00000001) ||
         (piVar6->tab != (runtime_itab *)go_itab__io_multiReader_io_Reader)) break;
      ppiVar2 = (io_Reader **)piVar6->data;
      piVar6 = ppiVar2[2];
      piVar7 = *ppiVar2;
      (piVar5->readers).len = (int)ppiVar2[1];
      (piVar5->readers).cap = (int)piVar6;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_R8;
        extraout_R11[1] = (extraout_RAX->readers).array;
        piVar5 = extraout_RAX;
        piVar7 = extraout_R8;
      }
      (piVar5->readers).array = piVar7;
    }
    (*(code *)piVar6->tab->fun[0])(piVar6->data);
    ~r0_00 = ~r0;
    if ((io_EOF.tab == tab) &&
       (runtime_ifaceeq(tab,x,io_EOF.data,~r0), ~r0_00 = extraout_DIL, extraout_AL != '\0')) {
      if ((mr->readers).len == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      piVar6 = (mr->readers).array;
      piVar6->tab = (runtime_itab *)go_itab_io_eofReader_io_Reader;
      piVar5 = mr;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_00 = extraout_R9;
        piVar6 = extraout_RSI;
        ~r0_00 = extraout_DIL_00;
      }
      piVar6->data = &runtime_zerobase;
      iVar3 = (piVar5->readers).len;
      if (iVar3 == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      iVar8 = (piVar5->readers).cap + -1;
      (piVar5->readers).len = iVar3 + -1;
      (piVar5->readers).cap = iVar8;
      piVar6 = (io_Reader *)
               ((int)&((piVar5->readers).array)->tab + (uint)((dword)(-iVar8 >> 0x3f) & 0x10));
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_01 = extraout_RSI_00;
        extraout_R11_01[1] = (piVar5->readers).array;
        piVar6 = extraout_RSI_00;
        ~r0_00 = extraout_DIL_01;
      }
      (piVar5->readers).array = piVar6;
    }
    if (extraout_RAX_00 < 1) {
      if (io_EOF.tab == tab) {
        runtime_ifaceeq(tab,x,io_EOF.data,(bool)~r0_00);
        bVar4 = extraout_AL_00 ^ 1;
        ~r0_00 = extraout_DIL_02;
      }
      else {
        bVar4 = 1;
      }
    }
    else {
      bVar4 = 1;
    }
    piVar5 = mr;
    if (bVar4 != 0) {
      if (io_EOF.tab == tab) {
        runtime_ifaceeq(tab,x,io_EOF.data,(bool)~r0_00);
      }
      return;
    }
  } while( true );
}



void io___multiReader__WriteTo(io_multiReader *mr,io_Writer w,int64 sum,error err)

{
  error err_00;
  void *in_RDI;
  void *extraout_RDI;
  int unaff_R14;
  io_Writer in_stack_ffffffffffffffc0;
  __uint8 in_stack_ffffffffffffffd0;
  runtime_itab *in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  runtime_makeslice((internal_abi_Type *)&DAT_00807920,0x8000,0x8000,in_RDI);
  err_00.data = mr;
  err_00.tab = in_stack_ffffffffffffffe8;
  io___multiReader__writeToWithBuffer
            (mr,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,sum,err_00);
  return;
}



void io___multiReader__writeToWithBuffer
               (io_multiReader *mr,io_Writer w,__uint8 buf,int64 sum,error err)

{
  uint uVar1;
  __uint8 buf_00;
  __uint8 buf_01;
  error err_00;
  int extraout_RAX;
  int64 n;
  int extraout_RAX_00;
  void *pvVar2;
  void *extraout_RAX_01;
  io_multiReader *extraout_RAX_02;
  io_Reader *extraout_RCX;
  io_Reader *piVar3;
  int extraout_RBX;
  int extraout_RBX_00;
  int iVar4;
  io_Reader *extraout_RSI;
  int i;
  int iVar5;
  int iVar6;
  int extraout_R10;
  io_Reader *piVar7;
  void **extraout_R11;
  io_Reader **extraout_R11_00;
  io_Reader **extraout_R11_01;
  int unaff_R14;
  undefined in_XMM15 [16];
  io_Writer in_stack_ffffffffffffffa0;
  io_Reader in_stack_ffffffffffffffb0;
  uint8 *in_stack_ffffffffffffffc0;
  error in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar3 = (mr->readers).array;
  iVar5 = (mr->readers).len;
  i = 0;
  pvVar2 = (void *)0x0;
  while( true ) {
    if (iVar5 <= i) {
      (mr->readers).len = in_XMM15._0_8_;
      (mr->readers).cap = in_XMM15._8_8_;
      if (runtime_writeBarrier._0_4_ != 0) {
        piVar3 = (mr->readers).array;
        runtime_gcWriteBarrier1();
        *extraout_R11_01 = piVar3;
        mr = extraout_RAX_02;
      }
      (mr->readers).array = (io_Reader *)0x0;
      return;
    }
    if (piVar3->tab == (runtime_itab *)go_itab__io_multiReader_io_Reader) {
      buf_00.cap = (int)in_stack_ffffffffffffffc0;
      buf_00.array = (uint8 *)in_stack_ffffffffffffffb0.tab;
      buf_00.len = (int)in_stack_ffffffffffffffb0.data;
      io___multiReader__writeToWithBuffer
                ((io_multiReader *)piVar3->data,in_stack_ffffffffffffffa0,buf_00,sum,
                 in_stack_ffffffffffffffc8);
      iVar6 = extraout_RAX;
      iVar4 = extraout_RBX;
    }
    else {
      buf_01.len = (int)in_stack_ffffffffffffffc8.tab;
      buf_01.cap = (int)in_stack_ffffffffffffffc8.data;
      buf_01.array = in_stack_ffffffffffffffc0;
      err_00.data = pvVar2;
      err_00.tab = (runtime_itab *)i;
      io_copyBuffer(in_stack_ffffffffffffffa0,in_stack_ffffffffffffffb0,buf_01,sum,err_00);
      iVar6 = extraout_RAX_00;
      iVar4 = extraout_RBX_00;
    }
    pvVar2 = (void *)(iVar6 + (int)pvVar2);
    if (iVar4 != 0) break;
    if ((uint)(mr->readers).len <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    piVar7 = (mr->readers).array;
    iVar6 = i * 0x10;
    piVar7[i].tab = (runtime_itab *)0x0;
    if (runtime_writeBarrier._0_4_ != 0) {
      pvVar2 = piVar7[i].data;
      runtime_gcWriteBarrier1();
      *extraout_R11 = pvVar2;
      pvVar2 = extraout_RAX_01;
      iVar6 = extraout_R10;
      piVar7 = extraout_RCX;
    }
    *(undefined8 *)((int)&piVar7->data + iVar6) = 0;
    piVar3 = piVar3 + 1;
    i = i + 1;
  }
  uVar1 = (mr->readers).len;
  if ((uint)i <= uVar1) {
    iVar5 = (mr->readers).cap - i;
    (mr->readers).len = uVar1 - i;
    (mr->readers).cap = iVar5;
    piVar3 = (io_Reader *)((int)&((mr->readers).array)->tab + (i << 4 & -iVar5 >> 0x3f));
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RSI;
      extraout_R11_00[1] = (mr->readers).array;
      piVar3 = extraout_RSI;
    }
    (mr->readers).array = piVar3;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceB();
}



void io___multiWriter__Write(io_multiWriter *t,__uint8 p,int n,error err)

{
  int iVar1;
  int iVar2;
  int in_RCX;
  io_Writer *piVar3;
  int unaff_R14;
  undefined auVar4 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar3 = (t->writers).array;
  iVar1 = (t->writers).len;
  iVar2 = 0;
  while( true ) {
    if (iVar1 <= iVar2) {
      return;
    }
    auVar4 = (*(code *)piVar3->tab->fun[0])(piVar3->data,n);
    if (auVar4._8_8_ != 0) break;
    if (auVar4._0_8_ != in_RCX) {
      return;
    }
    piVar3 = piVar3 + 1;
    iVar2 = iVar2 + 1;
  }
  return;
}



void io___multiWriter__WriteString(io_multiWriter *t,string s,int n,error err)

{
  int iVar1;
  runtime_itab *prVar2;
  void *pvVar3;
  __uint8 ~r0;
  int iVar4;
  int extraout_RAX;
  int extraout_RAX_00;
  int iVar5;
  int in_RCX;
  undefined8 extraout_RCX;
  undefined8 uVar6;
  io_Writer *piVar7;
  undefined8 extraout_RBX;
  undefined8 extraout_RBX_00;
  undefined8 uVar8;
  int unaff_R14;
  undefined auVar9 [16];
  string in_stack_ffffffffffffff90;
  runtime_iface in_stack_ffffffffffffffa0;
  int in_stack_ffffffffffffffb0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar7 = (t->writers).array;
  iVar1 = (t->writers).len;
  iVar4 = 0;
  iVar5 = 0;
  uVar6 = 0;
  uVar8 = 0;
  while( true ) {
    if (iVar1 <= iVar4) {
      return;
    }
    prVar2 = piVar7->tab;
    pvVar3 = piVar7->data;
    runtime_assertI2I2((internal_abi_InterfaceType *)&DAT_00834ec0,
                       (runtime_iface)in_stack_ffffffffffffff90,in_stack_ffffffffffffffa0);
    if (extraout_RAX == 0) {
      if (iVar5 == 0) {
        ~r0.cap = in_stack_ffffffffffffffb0;
        ~r0.array = (uint8 *)in_stack_ffffffffffffffa0.tab;
        ~r0.len = (int)in_stack_ffffffffffffffa0.data;
        runtime_stringtoslicebyte((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff90,~r0);
        iVar5 = extraout_RAX_00;
        uVar6 = extraout_RCX;
        uVar8 = extraout_RBX_00;
      }
      auVar9 = (*(code *)prVar2->fun[0])(pvVar3,iVar5,uVar8,uVar6);
    }
    else {
      auVar9 = (**(code **)(extraout_RAX + 0x18))(extraout_RBX,n,in_RCX);
    }
    if (auVar9._8_8_ != 0) break;
    if (in_RCX != auVar9._0_8_) {
      return;
    }
    piVar7 = piVar7 + 1;
    iVar4 = iVar4 + 1;
  }
  return;
}



void type__eq_io_LimitedReader(io_LimitedReader *p,io_LimitedReader *q,bool r)

{
  runtime_itab *tab;
  undefined in_DIL;
  undefined extraout_DIL;
  int unaff_R14;
  io_LimitedReader *piStack0000000000000008;
  io_LimitedReader *piStack0000000000000010;
  
  piStack0000000000000008 = p;
  piStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  tab = (piStack0000000000000008->R).tab;
  if ((piStack0000000000000010->R).tab == tab) {
    runtime_ifaceeq(tab,(piStack0000000000000008->R).data,(piStack0000000000000010->R).data,
                    (bool)in_DIL);
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void io___discard__ReadFrom(io_Reader r,int64 n,error err)

{
  io_Reader **ppiVar1;
  error err_00;
  void *in_RBX;
  runtime_itab *unaff_RBP;
  int unaff_R14;
  void *unaff_retaddr;
  io_Reader in_stack_ffffffffffffffe8;
  
  r.data = in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    r.tab = (runtime_itab *)n;
    runtime_morestack_noctxt();
    n = (int64)r.tab;
  }
  ppiVar1 = *(io_Reader ***)(unaff_R14 + 0x20);
  if ((ppiVar1 != (io_Reader **)0x0) && (*ppiVar1 == &r)) {
    *ppiVar1 = (io_Reader *)&stack0xffffffffffffffe8;
  }
  if ((runtime_itab *)n != (runtime_itab *)0x0) {
    err_00.data = unaff_retaddr;
    err_00.tab = unaff_RBP;
    io_discard_ReadFrom(in_stack_ffffffffffffffe8,(int64)r.data,err_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void io___discard__Write(__uint8 p,int ~r0,error ~r1)

{
  __uint8 **pp_Var1;
  int unaff_R14;
  
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &p)) {
    *pp_Var1 = (__uint8 *)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void io___discard__WriteString(string s,int ~r0,error ~r1)

{
  string **ppsVar1;
  int unaff_R14;
  
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &s)) {
    *ppsVar1 = (string *)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void io___nopCloser__Close(error ~r0)

{
  error **ppeVar1;
  int in_RAX;
  int unaff_R14;
  
  ppeVar1 = *(error ***)(unaff_R14 + 0x20);
  if ((ppeVar1 != (error **)0x0) && (*ppeVar1 == &~r0)) {
    *ppeVar1 = (error *)&stack0xfffffffffffffff8;
  }
  if (in_RAX != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void io_nopCloser_Read(__uint8 p,int n,error err)

{
  __uint8 **pp_Var1;
  int in_RCX;
  int in_RBX;
  undefined8 in_RSI;
  undefined8 in_RDI;
  int unaff_R14;
  __uint8 _Stack_28;
  
  p.array = (uint8 *)n;
  p.cap = in_RCX;
  p.len = in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &p)) {
    *pp_Var1 = &_Stack_28;
  }
  (**(code **)(p.array + 0x18))(p.len,p.cap,in_RDI,in_RSI);
  return;
}



void io___nopCloser__Read(__uint8 p,int n,error err)

{
  __uint8 **pp_Var1;
  int in_RCX;
  int unaff_R14;
  __uint8 _Stack_28;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    p.array = (uint8 *)n;
    p.cap = in_RCX;
    runtime_morestack_noctxt();
    n = (int)p.array;
    in_RCX = p.cap;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &p)) {
    *pp_Var1 = &_Stack_28;
  }
  (**(code **)(*(int *)n + 0x18))(*(int *)(n + 8));
  return;
}



void io___nopCloserWriterTo__Close(error ~r0)

{
  error **ppeVar1;
  int in_RAX;
  int unaff_R14;
  
  ppeVar1 = *(error ***)(unaff_R14 + 0x20);
  if ((ppeVar1 != (error **)0x0) && (*ppeVar1 == &~r0)) {
    *ppeVar1 = (error *)&stack0xfffffffffffffff8;
  }
  if (in_RAX != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void io_nopCloserWriterTo_Read(__uint8 p,int n,error err)

{
  __uint8 **pp_Var1;
  int in_RCX;
  int in_RBX;
  undefined8 in_RSI;
  undefined8 in_RDI;
  int unaff_R14;
  __uint8 _Stack_28;
  
  p.array = (uint8 *)n;
  p.cap = in_RCX;
  p.len = in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &p)) {
    *pp_Var1 = &_Stack_28;
  }
  (**(code **)(p.array + 0x18))(p.len,p.cap,in_RDI,in_RSI);
  return;
}



void io___nopCloserWriterTo__Read(__uint8 p,int n,error err)

{
  __uint8 **pp_Var1;
  int in_RCX;
  int unaff_R14;
  __uint8 _Stack_28;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    p.array = (uint8 *)n;
    p.cap = in_RCX;
    runtime_morestack_noctxt();
    n = (int)p.array;
    in_RCX = p.cap;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &p)) {
    *pp_Var1 = &_Stack_28;
  }
  (**(code **)(*(int *)n + 0x18))(*(int *)(n + 8));
  return;
}



void io___nopCloserWriterTo__WriteTo(io_Writer w,int64 n,error err)

{
  io_Writer **ppiVar1;
  int extraout_RAX;
  undefined8 in_RCX;
  void *in_RBX;
  int unaff_R14;
  io_Writer iStack_28;
  internal_abi_Type *local_10;
  
  w.data = in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    w.tab = (runtime_itab *)n;
    runtime_morestack_noctxt();
    n = (int64)w.tab;
  }
  ppiVar1 = *(io_Writer ***)(unaff_R14 + 0x20);
  if ((ppiVar1 != (io_Writer **)0x0) && (*ppiVar1 == &w)) {
    *ppiVar1 = &iStack_28;
  }
  if ((runtime_itab *)n != (runtime_itab *)0x0) {
    local_10 = *(internal_abi_Type **)(n + 8);
    runtime_assertI2I((internal_abi_InterfaceType *)&DAT_00834f40,
                      (runtime_itab *)*(internal_abi_InterfaceType **)n,(runtime_itab *)local_10);
    (**(code **)(extraout_RAX + 0x18))(local_10,w.data,in_RCX);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void io___eofReader__Read(int ~r0,error ~r1)

{
  error **ppeVar1;
  int unaff_R14;
  
  ppeVar1 = *(error ***)(unaff_R14 + 0x20);
  if ((ppeVar1 != (error **)0x0) && (*ppeVar1 == &~r1)) {
    *ppeVar1 = (error *)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void type__eq_io_SectionReader(io_SectionReader *p,io_SectionReader *q,bool r)

{
  runtime_itab *tab;
  undefined in_DIL;
  undefined extraout_DIL;
  int unaff_R14;
  io_SectionReader *piStack0000000000000008;
  io_SectionReader *piStack0000000000000010;
  
  piStack0000000000000008 = p;
  piStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  tab = (piStack0000000000000008->r).tab;
  if ((piStack0000000000000010->r).tab == tab) {
    runtime_ifaceeq(tab,(piStack0000000000000008->r).data,(piStack0000000000000010->r).data,
                    (bool)in_DIL);
  }
  return;
}



void io_fs_FormatDirEntry(io_fs_DirEntry dir,string ~r0)

{
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  runtime_slice ~r0_03;
  char cVar1;
  io_fs_FileMode m;
  int in_RAX;
  uint8 *oldPtr;
  void *__src;
  uint8 *extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *extraout_RAX_01;
  uint8 *extraout_RAX_02;
  uint8 *ptr;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  uint cap;
  undefined8 in_RBX;
  size_t __n;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint uVar2;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  uint uVar3;
  uint extraout_RBX_03;
  void *~r0_04;
  int unaff_R14;
  undefined auVar4 [16];
  string in_stack_ffffffffffffff78;
  int in_stack_ffffffffffffff88;
  
  while (&stack0xfffffffffffffff8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  auVar4 = (**(code **)(in_RAX + 0x28))(in_RBX);
  __n = auVar4._8_8_;
  cap = __n + 5;
  runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,cap,~r0_04);
  m = (**(code **)(in_RAX + 0x30))(in_RBX);
  io_fs_FileMode_String(m,in_stack_ffffffffffffff78);
  uVar3 = extraout_RBX - 9;
  if (extraout_RBX < uVar3) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  uVar2 = uVar3;
  ptr = oldPtr;
  if (cap < uVar3) {
    ~r0_00.cap = in_stack_ffffffffffffff88;
    ~r0_00.array = in_stack_ffffffffffffff78.str;
    ~r0_00.len = in_stack_ffffffffffffff78.len;
    runtime_growslice(oldPtr,uVar3,cap,uVar3,(internal_abi_Type *)&DAT_00807920,~r0_00);
    uVar2 = extraout_RBX_00;
    cap = extraout_RCX;
    ptr = extraout_RAX;
  }
  runtime_memmove(ptr,__src,uVar3);
  uVar2 = uVar2 + 1;
  if (cap < uVar2) {
    ~r0_01.cap = in_stack_ffffffffffffff88;
    ~r0_01.array = in_stack_ffffffffffffff78.str;
    ~r0_01.len = in_stack_ffffffffffffff78.len;
    runtime_growslice(ptr,uVar2,cap,1,(internal_abi_Type *)&DAT_00807920,~r0_01);
    ptr = extraout_RAX_00;
    cap = extraout_RCX_00;
    uVar2 = extraout_RBX_01;
  }
  ptr[uVar2 - 1] = 0x20;
  uVar3 = uVar2 + __n;
  if (cap < uVar3) {
    ~r0_02.cap = in_stack_ffffffffffffff88;
    ~r0_02.array = in_stack_ffffffffffffff78.str;
    ~r0_02.len = in_stack_ffffffffffffff78.len;
    runtime_growslice(ptr,uVar3,cap,__n,(internal_abi_Type *)&DAT_00807920,~r0_02);
    ptr = extraout_RAX_01;
    cap = extraout_RCX_01;
    uVar3 = extraout_RBX_02;
  }
  runtime_memmove(ptr + uVar2,auVar4._0_8_,__n);
  cVar1 = (**(code **)(in_RAX + 0x20))(in_RBX);
  if (cVar1 != '\0') {
    uVar3 = uVar3 + 1;
    if (cap < uVar3) {
      ~r0_03.cap = in_stack_ffffffffffffff88;
      ~r0_03.array = in_stack_ffffffffffffff78.str;
      ~r0_03.len = in_stack_ffffffffffffff78.len;
      runtime_growslice(ptr,uVar3,cap,1,(internal_abi_Type *)&DAT_00807920,~r0_03);
      ptr = extraout_RAX_02;
      uVar3 = extraout_RBX_03;
    }
    ptr[uVar3 - 1] = 0x2f;
  }
  runtime_slicebytetostring((runtime_tmpBuf *)0x0,ptr,uVar3,in_stack_ffffffffffffff78);
  return;
}



void io_fs_FileMode_String(io_fs_FileMode m,string ~r0)

{
  byte extraout_AL;
  byte extraout_AL_00;
  int i;
  int iVar1;
  int i_1;
  int w;
  uint n;
  int extraout_RBX;
  int extraout_RBX_00;
  int32 c;
  int32 c_1;
  int iVar2;
  int unaff_R14;
  undefined in_XMM15 [16];
  string in_stack_ffffffffffffffa8;
  undefined local_28 [32];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  n = 0;
  i = 0;
  local_28._0_16_ = in_XMM15;
  while( true ) {
    do {
      if (0xc < i) {
        if (n == 0) {
          local_28[0] = 0x2d;
          n = 1;
        }
        i_1 = 0;
        do {
          if (8 < i_1) {
            if (0x20 < n) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceAlen();
            }
            runtime_slicebytetostring((runtime_tmpBuf *)0x0,local_28,n,in_stack_ffffffffffffffa8);
            return;
          }
          c_1._0_1_ = (&DAT_008b2648)[i_1];
          if ((byte)c_1 < 0x80) {
            iVar2 = i_1 + 1;
          }
          else {
            runtime_decoderune(in_stack_ffffffffffffffa8,0x8b2648,9,i_1);
            iVar2 = extraout_RBX_00;
            c_1._0_1_ = extraout_AL_00;
          }
          if ((m & -(dword)((uint)-(i_1 + -8) < 0x20) & 1 << ((byte)-(i_1 + -8) & 0x1f)) == 0) {
            if (0x1f < n) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            local_28[n] = 0x2d;
          }
          else {
            if (0x1f < n) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            local_28[n] = (byte)c_1;
          }
          n = n + 1;
          i_1 = iVar2;
        } while( true );
      }
      c._0_1_ = "goal , cons/mark  maxTrigger= pages/byte\n s.sweepgen= allocCount end tracegc\ntimer_deletens} value: {}, want {r1= [recovered]bad recoverybad g statusentersyscallwirep: p->m=) p->status=releasep: m= sysmonwait= preemptoff=cas64 failedGOTRACEBACK= m->gsignal=-byte limit\nruntime: sp=abi mismatchillegal seekinvalid slothost is downnot pollable<unknown:%d>Sfixed32KindSfixed64Kindmessage_typejava_packageoptimize_forswift_prefixruby_packagedebug_redactdouble_valuestring_valueverificationis_extension has no name has no typereflect.CopyOUT_OF_RANGENormalSocketgrpc-messageContent-Typegrpc-timeoutGrpc-MessageAddr: \'%s\', Cookie.Valuemax-forwardshttp2debug=1http2debug=2status code Multi-StatusNot ModifiedUnauthorizedI\'m a teapotNot ExtendedPUSH_PROMISECONTINUATION152587890625762939453125Cypro_MinoanMeetei_MayekPahawh_HmongSora_SompengSyloti_NagriRCodeSuccessRCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen..." /* TRUNCATED STRING LITERAL */
                [i + 0x73e];
      if ((byte)c < 0x80) {
        iVar2 = i + 1;
      }
      else {
        runtime_decoderune(in_stack_ffffffffffffffa8,0x8b4bce,0xd,i);
        iVar2 = extraout_RBX;
        c._0_1_ = extraout_AL;
      }
      iVar1 = i + -0x1f;
      i = iVar2;
    } while ((m & -(dword)((uint)-iVar1 < 0x20) & 1 << ((byte)-iVar1 & 0x1f)) == 0);
    if (0x1f < n) break;
    local_28[n] = (byte)c;
    n = n + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void io_fs_FileMode_IsDir(io_fs_FileMode m,bool ~r0)

{
  return;
}



void io_fs_FileMode_IsRegular(io_fs_FileMode m,bool ~r0)

{
  return;
}



void io_fs_FileMode_Perm(io_fs_FileMode m,io_fs_FileMode ~r0)

{
  return;
}


