      runtime_makeslice((internal_abi_Type *)&DAT_00808860,local_60,in_RCX,in_RDI);
      in_RAX = extraout_RAX_03;
      local_60 = local_48;
    }
    z_01.cap = in_stack_ffffffffffffff18;
    z_01.array = &(in_stack_ffffffffffffff08._type)->Size_;
    z_01.len = (int)in_stack_ffffffffffffff08.data;
    local_30 = in_RAX;
    math_big_basicMul(z_01,in_stack_ffffffffffffff20,in_stack_ffffffffffffff38);
    uVar3 = local_60;
    while ((0 < (int)uVar3 && (*(int *)(local_30[-1] + uVar3 * 8 + 8) == 0))) {
      uVar3 = uVar3 - 1;
    }
    if (in_RCX < uVar3) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    return;
  }
  if (in_RSI < math_big_karatsubaSqrThreshold) {
    local_68 = in_RSI * 2;
    if (SBORROW8(in_RCX,local_68) == (int)(in_RCX + in_RSI * -2) < 0) {
      if (in_RCX < (uint)local_68) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
    }
    else if (local_68 == 1) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
      in_RCX = 1;
      in_RAX = extraout_RAX_00;
      local_68 = 1;
    }
    else {
      in_RCX = in_RSI * 2 + 4;
      local_48 = local_68;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,local_68,in_RCX,in_RDI);
      in_RAX = extraout_RAX_01;
      local_68 = local_48;
    }
    z_00.cap = in_stack_ffffffffffffff18;
    z_00.array = &(in_stack_ffffffffffffff08._type)->Size_;
    z_00.len = (int)in_stack_ffffffffffffff08.data;
    local_38 = in_RAX;
    math_big_basicSqr(z_00,in_stack_ffffffffffffff20);
    uVar3 = local_68;
    while ((0 < (int)uVar3 && (*(int *)(local_38[-1] + uVar3 * 8 + 8) == 0))) {
      uVar3 = uVar3 - 1;
    }
    if (in_RCX < uVar3) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    return;
  }
  i_1 = 0;
  for (iVar5 = in_RSI; math_big_karatsubaSqrThreshold < iVar5; iVar5 = iVar5 >> 1) {
    i_1 = i_1 + 1;
  }
  uVar3 = -(uint)(i_1 < 0x40) & iVar5 << ((byte)i_1 & 0x3f);
  if (in_R8 < uVar3) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  uVar6 = uVar3 * 6;
  local_48 = in_RSI * 2;
  uVar4 = local_48;
  if (uVar6 != local_48 && SBORROW8(uVar6,local_48) == (int)(uVar6 + in_RSI * -2) < 0) {
    uVar4 = uVar6;
  }
  local_10 = in_RDI;
  if ((int)in_RCX < (int)uVar4) {
    if (uVar4 == 1) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
      in_RCX = 1;
      in_RAX = extraout_RAX_04;
    }
    else {
      in_RCX = uVar4 + 4;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,uVar4,in_RCX,in_RDI);
      in_RAX = extraout_RAX_05;
    }
  }
  else if (in_RCX < uVar4) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  z_02.cap = in_stack_ffffffffffffff18;
  z_02.array = &(in_stack_ffffffffffffff08._type)->Size_;
  z_02.len = (int)in_stack_ffffffffffffff08.data;
  local_40 = in_RAX;
  math_big_karatsubaSqr(z_02,in_stack_ffffffffffffff20);
  if (local_48 <= in_RCX) {
    local_50 = uVar3 * 2;
    if (local_48 <= local_50 && local_50 - local_48 != 0) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    ~r0_01 = (math_big_nat *)(local_48 + uVar3 * -2);
    if (~r0_01 != (math_big_nat *)0x0) {
      runtime_memclrNoHeapPointers();
      ~r0_01 = extraout_RBX;
    }
    i_4 = local_48;
    if ((int)uVar3 < in_RSI) {
      math_big_getNat(local_50,~r0_01);
      for (uVar4 = uVar3; (0 < (int)uVar4 && (local_10[uVar4 - 1] == 0)); uVar4 = uVar4 - 1) {
      }
      if (in_R8 < uVar4) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
      local_28 = (int)local_10 + ((int)-(in_R8 - uVar3) >> 0x3f & uVar3 << 3);
      z_03.cap = in_stack_ffffffffffffff18;
      z_03.array = &(in_stack_ffffffffffffff08._type)->Size_;
      z_03.len = (int)in_stack_ffffffffffffff08.data;
      ~r0_00.len = in_stack_ffffffffffffff58;
      ~r0_00.array = (math_big_Word *)in_RCX;
      ~r0_00.cap = in_stack_ffffffffffffff60;
      math_big_nat_mul(z_03,in_stack_ffffffffffffff20,in_stack_ffffffffffffff38,~r0_00);
      z_04.cap = in_stack_ffffffffffffff18;
      z_04.array = &(in_stack_ffffffffffffff08._type)->Size_;
      z_04.len = (int)in_stack_ffffffffffffff08.data;
      math_big_addAt(z_04,in_stack_ffffffffffffff20,(int)local_40);
      z_05.cap = in_stack_ffffffffffffff18;
      z_05.array = &(in_stack_ffffffffffffff08._type)->Size_;
      z_05.len = (int)in_stack_ffffffffffffff08.data;
      math_big_addAt(z_05,in_stack_ffffffffffffff20,(int)local_40);
      z_06.cap = in_stack_ffffffffffffff18;
      z_06.array = &(in_stack_ffffffffffffff08._type)->Size_;
      z_06.len = (int)in_stack_ffffffffffffff08.data;
      math_big_nat_sqr(z_06,in_stack_ffffffffffffff20,in_stack_ffffffffffffff38);
      z_07.cap = in_stack_ffffffffffffff18;
      z_07.array = &(in_stack_ffffffffffffff08._type)->Size_;
      z_07.len = (int)in_stack_ffffffffffffff08.data;
      math_big_addAt(z_07,in_stack_ffffffffffffff20,(int)local_40);
      sync___Pool__Put(&math_big_natPool,in_stack_ffffffffffffff08);
      i_4 = local_48;
    }
    while ((0 < i_4 && (*(int *)(local_40[-1] + i_4 * 8 + 8) == 0))) {
      i_4 = i_4 + -1;
    }
    if (in_RCX < (uint)i_4) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceAcap();
}



void math_big_nat_mulRange(math_big_nat z,uint64 a,uint64 b,math_big_nat ~r0)

{
  math_big_nat ~r0_00;
  math_big_nat ~r0_01;
  int extraout_RCX;
  int extraout_RCX_00;
  uint uVar1;
  undefined8 extraout_RBX;
  undefined8 extraout_RBX_00;
  uint in_RSI;
  uint in_RDI;
  int unaff_R14;
  math_big_nat in_stack_ffffffffffffff90;
  math_big_nat in_stack_ffffffffffffffa8;
  math_big_nat in_stack_ffffffffffffffc0;
  undefined8 uVar2;
  undefined8 in_stack_ffffffffffffffe0;
  int iVar3;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RDI == 0) {
    math_big_nat_setUint64(in_stack_ffffffffffffff90,a,in_stack_ffffffffffffffa8);
    return;
  }
  if (in_RSI < in_RDI) {
    math_big_nat_setUint64(in_stack_ffffffffffffff90,a,in_stack_ffffffffffffffa8);
    return;
  }
  if (in_RDI != in_RSI) {
    if (in_RSI == in_RDI + 1) {
      math_big_nat_setUint64(in_stack_ffffffffffffff90,0,in_stack_ffffffffffffffa8);
      uVar2 = extraout_RBX;
      iVar3 = extraout_RCX;
      math_big_nat_setUint64(in_stack_ffffffffffffff90,0,in_stack_ffffffffffffffa8);
      ~r0_00.len = in_stack_ffffffffffffffe0;
      ~r0_00.array = (math_big_Word *)uVar2;
      ~r0_00.cap = iVar3;
      math_big_nat_mul(in_stack_ffffffffffffff90,in_stack_ffffffffffffffa8,in_stack_ffffffffffffffc0
                       ,~r0_00);
      return;
    }
    uVar1 = in_RSI + in_RDI >> 1;
    math_big_nat_mulRange(in_stack_ffffffffffffff90,0,0,in_stack_ffffffffffffffa8);
    uVar2 = extraout_RBX_00;
    iVar3 = extraout_RCX_00;
    math_big_nat_mulRange(in_stack_ffffffffffffff90,0,0,in_stack_ffffffffffffffa8);
    ~r0_01.len = uVar1;
    ~r0_01.array = (math_big_Word *)uVar2;
    ~r0_01.cap = iVar3;
    math_big_nat_mul(in_stack_ffffffffffffff90,in_stack_ffffffffffffffa8,in_stack_ffffffffffffffc0,
                     ~r0_01);
    return;
  }
  math_big_nat_setUint64(in_stack_ffffffffffffff90,a,in_stack_ffffffffffffffa8);
  return;
}



void math_big_getNat(int n,math_big_nat *~r0)

{
  internal_abi_Type *have;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  uint extraout_RAX_02;
  uint extraout_RCX;
  uint uVar1;
  uint uVar2;
  undefined8 *extraout_RBX;
  math_big_nat *z;
  undefined8 *puVar3;
  undefined8 *extraout_RBX_00;
  undefined8 *extraout_RSI;
  undefined8 *puVar4;
  void *extraout_RDI;
  void *extraout_RDI_00;
  void *~r0_00;
  undefined8 *extraout_R11;
  int unaff_R14;
  uint uStack0000000000000008;
  interface___ in_stack_ffffffffffffffd0;
  
  uStack0000000000000008 = n;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  sync___Pool__Get(&math_big_natPool,in_stack_ffffffffffffffd0);
  if (have == (internal_abi_Type *)0x0) {
    puVar3 = (undefined8 *)0x0;
  }
  else {
    puVar3 = extraout_RBX;
    if (have != (internal_abi_Type *)&DAT_008a84c0) {
                    // WARNING: Subroutine does not return
      runtime_panicdottypeE
                (have,(internal_abi_Type *)&DAT_008a84c0,(internal_abi_Type *)&DAT_00821120);
    }
  }
  ~r0_00 = extraout_RDI;
  if (puVar3 == (undefined8 *)0x0) {
    runtime_newobject((internal_abi_Type *)&DAT_008a8860,(void *)0x0);
    puVar3 = extraout_RAX;
    ~r0_00 = extraout_RDI_00;
  }
  uVar2 = puVar3[2];
  if ((int)uVar2 < (int)uStack0000000000000008) {
    if (uStack0000000000000008 == 1) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,~r0_00);
      uVar2 = 1;
      uVar1 = 1;
      puVar4 = extraout_RAX_00;
    }
    else {
      uVar2 = uStack0000000000000008 + 4;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,uStack0000000000000008,uVar2,~r0_00);
      uVar1 = uStack0000000000000008;
      puVar4 = extraout_RAX_01;
    }
  }
  else {
    if (uVar2 < uStack0000000000000008) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    puVar4 = (undefined8 *)*puVar3;
    uVar1 = uStack0000000000000008;
  }
  puVar3[1] = uVar1;
  puVar3[2] = uVar2;
  uVar2 = uStack0000000000000008;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RSI;
    extraout_R11[1] = *extraout_RBX_00;
    uVar2 = extraout_RAX_02;
    uVar1 = extraout_RCX;
    puVar3 = extraout_RBX_00;
    puVar4 = extraout_RSI;
  }
  *puVar3 = puVar4;
  if (0 < (int)uVar2) {
    if (uVar1 == 0) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *puVar4 = 0xfedcb;
  }
  return;
}



void math_big_nat_shl(math_big_nat z,math_big_nat x,uint s,math_big_nat ~r0)

{
  uint uVar1;
  void *extraout_RAX;
  void *extraout_RAX_00;
  uint extraout_RAX_01;
  uint extraout_RAX_02;
  uint in_RCX;
  int i;
  int in_RBX;
  int in_RSI;
  int m;
  int iVar2;
  void *in_RDI;
  int in_R8;
  uint in_R9;
  uint uVar3;
  int n;
  int unaff_R14;
  undefined8 local_70;
  int local_28;
  uint local_20;
  void *local_18;
  void *local_10;
  
  while (&local_28 <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_R9 == 0) {
    if (((in_RSI == in_RBX) && (in_RBX != 0)) && (in_RDI == (void *)s)) {
      return;
    }
    if (((in_RCX == 0) || (in_R8 == 0)) || ((int)in_RDI + in_R8 * 8 + -8 != s + in_RCX * 8 + -8)) {
      local_28 = in_RSI;
      local_10 = in_RDI;
      if ((int)in_RCX < in_RSI) {
        if (in_RSI == 1) {
          runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
          s = (uint)extraout_RAX;
          local_28 = 1;
        }
        else {
          runtime_makeslice((internal_abi_Type *)&DAT_00808860,in_RSI,in_RSI + 4,in_RDI);
          s = (uint)extraout_RAX_00;
        }
      }
      iVar2 = local_28;
      if (in_RSI < local_28) {
        iVar2 = in_RSI;
      }
      if (local_10 != (void *)s) {
        local_18 = (void *)s;
        runtime_memmove((void *)s,local_10,iVar2 << 3);
      }
      return;
    }
  }
  if (in_RSI == 0) {
    return;
  }
  uVar3 = in_R9 >> 6;
  i = uVar3 + in_RSI + 1;
  uVar1 = uVar3 + in_RSI;
  if ((int)in_RCX < i) {
    if (uVar1 == 0) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
      in_RCX = 1;
      i = 1;
      s = extraout_RAX_01;
    }
    else {
      in_RCX = uVar3 + in_RSI + 5;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,i,in_RCX,in_RDI);
      s = extraout_RAX_02;
    }
  }
  else if (in_RCX < (uint)i) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  if (in_RCX < uVar1) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  if (uVar1 < uVar3) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  local_28 = uVar3 << 3;
  local_20 = s;
  math_big_shlVU();
  if ((uint)i <= uVar1) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  *(undefined8 *)(local_20 + uVar1 * 8) = local_70;
  if (uVar3 != 0) {
    runtime_memclrNoHeapPointers();
  }
  for (; (0 < i && (*(int *)((local_20 - 8) + i * 8) == 0)); i = i + -1) {
  }
  if (in_RCX < (uint)i) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  return;
}



void math_big_nat_shr(math_big_nat z,math_big_nat x,uint s,math_big_nat ~r0)

{
  void *extraout_RAX;
  void *extraout_RAX_00;
  uint extraout_RAX_01;
  uint extraout_RAX_02;
  uint in_RCX;
  uint in_RBX;
  int len;
  int n;
  int i;
  uint in_RSI;
  int m;
  uint uVar1;
  void *in_RDI;
  int in_R8;
  uint in_R9;
  int unaff_R14;
  void *local_10;
  
  while (&local_10 <= *(void ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_R9 == 0) {
    if (((in_RBX == in_RSI) && (in_RBX != 0)) && ((void *)s == in_RDI)) {
      return;
    }
    if (((in_RCX == 0) || (in_R8 == 0)) || ((int)in_RDI + in_R8 * 8 + -8 != s + in_RCX * 8 + -8)) {
      uVar1 = in_RSI;
      if ((int)in_RCX < (int)in_RSI) {
        if (in_RSI == 1) {
          runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
          s = (uint)extraout_RAX;
          uVar1 = 1;
        }
        else {
          runtime_makeslice((internal_abi_Type *)&DAT_00808860,in_RSI,in_RSI + 4,in_RDI);
          s = (uint)extraout_RAX_00;
        }
      }
      if ((int)in_RSI < (int)uVar1) {
        uVar1 = in_RSI;
      }
      if (in_RDI != (void *)s) {
        local_10 = (void *)s;
        runtime_memmove((void *)s,in_RDI,uVar1 << 3);
      }
      return;
    }
  }
  len = in_RSI - (in_R9 >> 6);
  if (len < 1) {
    return;
  }
  i = len;
  if ((int)in_RCX < len) {
    if (len == 1) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
      in_RCX = 1;
      s = extraout_RAX_01;
      i = 1;
    }
    else {
      in_RCX = len + 4;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,len,in_RCX,in_RDI);
      s = extraout_RAX_02;
    }
  }
  if (in_RSI < in_RSI - len) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  math_big_shrVU();
  for (; (0 < i && (*(int *)((s - 8) + i * 8) == 0)); i = i - 1) {
  }
  if (in_RCX < (uint)i) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  return;
}



void math_big_nat_setBit(math_big_nat z,math_big_nat x,uint i,uint b,math_big_nat ~r0)

{
  void *extraout_RAX;
  void *extraout_RAX_00;
  void *extraout_RAX_01;
  void *extraout_RAX_02;
  void *extraout_RAX_03;
  void *extraout_RAX_04;
  uint in_RCX;
  uint uVar1;
  uint uVar2;
  uint in_RSI;
  int n;
  void *in_RDI;
  uint uVar3;
  int i_1;
  uint in_R9;
  int in_R10;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff90;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar2 = in_R9 >> 6;
  if (in_R10 != 0) {
    if (in_R10 != 1) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff90);
    }
    if ((int)uVar2 < (int)in_RSI) {
      uVar3 = in_RSI;
      if ((int)in_RCX < (int)in_RSI) {
        if (in_RSI == 1) {
          runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
          i = (uint)extraout_RAX_03;
          uVar3 = 1;
        }
        else {
          runtime_makeslice((internal_abi_Type *)&DAT_00808860,in_RSI,in_RSI + 4,in_RDI);
          i = (uint)extraout_RAX_04;
        }
      }
    }
    else {
      uVar3 = uVar2 + 1;
      if ((int)in_RCX < (int)uVar3) {
        if (uVar2 == 0) {
          runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
          uVar3 = 1;
          i = (uint)extraout_RAX_01;
        }
        else {
          runtime_makeslice((internal_abi_Type *)&DAT_00808860,uVar3,uVar2 + 5,in_RDI);
          i = (uint)extraout_RAX_02;
        }
      }
      else if (in_RCX < uVar3) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
      if (uVar3 < in_RSI) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      if (uVar3 != in_RSI) {
        runtime_memclrNoHeapPointers();
      }
    }
    uVar1 = uVar3;
    if ((int)in_RSI < (int)uVar3) {
      uVar1 = in_RSI;
    }
    if (in_RDI != (void *)i) {
      runtime_memmove((void *)i,in_RDI,uVar1 << 3);
    }
    if (uVar3 <= uVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(uint *)(i + uVar2 * 8) = *(uint *)(i + uVar2 * 8) | 1 << (in_R9 & 0x3f);
    return;
  }
  i_1 = in_RSI;
  if ((int)in_RCX < (int)in_RSI) {
    if (in_RSI == 1) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
      in_RCX = 1;
      i = (uint)extraout_RAX;
      i_1 = 1;
    }
    else {
      in_RCX = in_RSI + 4;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,in_RSI,in_RCX,in_RDI);
      i = (uint)extraout_RAX_00;
    }
  }
  uVar3 = i_1;
  if ((int)in_RSI < i_1) {
    uVar3 = in_RSI;
  }
  if (in_RDI != (void *)i) {
    runtime_memmove((void *)i,in_RDI,uVar3 << 3);
  }
  if ((int)in_RSI <= (int)uVar2) {
    return;
  }
  if ((uint)i_1 <= uVar2) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  *(uint *)(i + uVar2 * 8) = *(uint *)(i + uVar2 * 8) & ~(1 << (in_R9 & 0x3f));
  while ((0 < i_1 && (*(int *)(i + i_1 * 8 + -8) == 0))) {
    i_1 = i_1 + -1;
  }
  if (in_RCX < (uint)i_1) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  return;
}



void math_big_nat_and(math_big_nat z,math_big_nat x,math_big_nat y,math_big_nat ~r0)

{
  int in_RAX;
  int extraout_RAX;
  int extraout_RAX_00;
  uint in_RCX;
  uint in_RSI;
  int m;
  void *in_RDI;
  int i;
  int in_R9;
  uint in_R10;
  int n;
  uint len;
  int i_1;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  len = in_RSI;
  if ((int)in_R10 < (int)in_RSI) {
    len = in_R10;
  }
  i_1 = len;
  if ((int)in_RCX < (int)len) {
    if (len == 1) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
      in_RCX = 1;
      in_RAX = extraout_RAX;
      i_1 = 1;
    }
    else {
      in_RCX = len + 4;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,len,in_RCX,in_RDI);
      in_RAX = extraout_RAX_00;
    }
  }
  else if (in_RCX < len) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  i = 0;
  while( true ) {
    if ((int)len <= i) {
      for (; (0 < i_1 && (*(int *)(in_RAX + -8 + i_1 * 8) == 0)); i_1 = i_1 - 1) {
      }
      if (in_RCX < (uint)i_1) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
      return;
    }
    if (in_RSI <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (in_R10 <= (uint)i) break;
    if ((uint)i_1 <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(uint *)(in_RAX + i * 8) = *(uint *)((int)in_RDI + i * 8) & *(uint *)(in_R9 + i * 8);
    i = i + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



double math_big_nat_trunc(double __x)

{
  uint *puVar1;
  void *in_RAX;
  void *extraout_RAX;
  void *extraout_RAX_00;
  void *extraout_RAX_01;
  void *extraout_RAX_02;
  uint in_RCX;
  uint uVar2;
  uint in_RSI;
  void *in_RDI;
  int i;
  uint in_R9;
  int unaff_R14;
  void *pvStack0000000000000008;
  void *pvStack0000000000000020;
  uint uStack0000000000000028;
  
  pvStack0000000000000020 = in_RDI;
  while (uStack0000000000000028 = in_RSI, &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    pvStack0000000000000008 = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = pvStack0000000000000008;
    in_RSI = uStack0000000000000028;
  }
  i = in_R9 + 0x3f >> 6;
  if (in_RSI < (uint)i) {
    if ((int)in_RCX < (int)in_RSI) {
      if (in_RSI == 1) {
        runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,pvStack0000000000000020);
        in_RAX = extraout_RAX_01;
        in_RSI = 1;
      }
      else {
        runtime_makeslice((internal_abi_Type *)&DAT_00808860,in_RSI,in_RSI + 4,
                          pvStack0000000000000020);
        in_RAX = extraout_RAX_02;
        in_RSI = uStack0000000000000028;
      }
    }
    if ((int)uStack0000000000000028 < (int)in_RSI) {
      in_RSI = uStack0000000000000028;
    }
    if (pvStack0000000000000020 != in_RAX) {
      runtime_memmove(in_RAX,pvStack0000000000000020,in_RSI << 3);
    }
    return __x;
  }
  if ((int)in_RCX < i) {
    if (i == 1) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,pvStack0000000000000020);
      i = 1;
      in_RCX = 1;
      in_RAX = extraout_RAX;
    }
    else {
      in_RCX = i + 4;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,i,in_RCX,pvStack0000000000000020);
      in_RAX = extraout_RAX_00;
    }
  }
  uVar2 = i;
  if ((int)uStack0000000000000028 < i) {
    uVar2 = uStack0000000000000028;
  }
  if (pvStack0000000000000020 != in_RAX) {
    runtime_memmove(in_RAX,pvStack0000000000000020,uVar2 << 3);
  }
  if ((in_R9 & 0x3f) != 0) {
    if ((uint)i <= i - 1U) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    puVar1 = (uint *)((int)in_RAX + i * 8 + -8);
    *puVar1 = *puVar1 & (1 << ((byte)in_R9 & 0x3f)) - 1U;
  }
  while ((0 < i && (*(int *)((int)in_RAX + i * 8 + -8) == 0))) {
    i = i + -1;
  }
  if (in_RCX < (uint)i) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  return __x;
}



void math_big_nat_andNot(math_big_nat z,math_big_nat x,math_big_nat y,math_big_nat ~r0)

{
  void *__src;
  int in_RAX;
  int extraout_RAX;
  int extraout_RAX_00;
  uint in_RCX;
  int i;
  uint in_RSI;
  int m;
  int i_1;
  void *in_RDI;
  int in_R8;
  int in_R9;
  uint in_R10;
  uint uVar1;
  void *__dest;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar1 = in_R10;
  if ((int)in_RSI < (int)in_R10) {
    uVar1 = in_RSI;
  }
  i_1 = in_RSI;
  if ((int)in_RCX < (int)in_RSI) {
    if (in_RSI == 1) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
      in_RCX = 1;
      in_RAX = extraout_RAX;
      i_1 = 1;
    }
    else {
      in_RCX = in_RSI + 4;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,in_RSI,in_RCX,in_RDI);
      in_RAX = extraout_RAX_00;
    }
  }
  i = 0;
  while( true ) {
    if ((int)uVar1 <= i) {
      if (in_RCX < in_RSI) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
      if (in_RSI < uVar1) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      __dest = (void *)(((int)(uVar1 - in_RCX) >> 0x3f & uVar1 << 3) + in_RAX);
      __src = (void *)((int)in_RDI + ((int)(uVar1 - in_R8) >> 0x3f & uVar1 << 3));
      if (__src != __dest) {
        runtime_memmove(__dest,__src,(in_RSI - uVar1) * 8);
      }
      for (; (0 < i_1 && (*(int *)(in_RAX + -8 + i_1 * 8) == 0)); i_1 = i_1 - 1) {
      }
      if (in_RCX < (uint)i_1) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
      return;
    }
    if (in_RSI <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (in_R10 <= (uint)i) break;
    if ((uint)i_1 <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(uint *)(in_RAX + i * 8) = *(uint *)((int)in_RDI + i * 8) & ~*(uint *)(in_R9 + i * 8);
    i = i + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void math_big_nat_or(math_big_nat z,math_big_nat x,math_big_nat y,math_big_nat ~r0)

{
  int in_RAX;
  int extraout_RAX;
  int extraout_RAX_00;
  uint in_RCX;
  uint in_RSI;
  int m;
  uint uVar1;
  void *__dest;
  void *in_RDI;
  uint in_R8;
  void *in_R9;
  void *pvVar2;
  uint in_R10;
  uint len;
  int i_1;
  uint in_R11;
  int i;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar1 = in_R10;
  pvVar2 = in_RDI;
  len = in_RSI;
  if ((int)in_RSI < (int)in_R10) {
    uVar1 = in_RSI;
    pvVar2 = in_R9;
    len = in_R10;
    in_R8 = in_R11;
  }
  i_1 = len;
  if ((int)in_RCX < (int)len) {
    if (len == 1) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
      in_RCX = 1;
      in_RAX = extraout_RAX;
      i_1 = 1;
    }
    else {
      in_RCX = len + 4;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,len,in_RCX,in_RDI);
      in_RAX = extraout_RAX_00;
    }
  }
  else if (in_RCX < len) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  for (i = 0; i < (int)uVar1; i = i + 1) {
    if (in_RSI <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (in_R10 <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((uint)i_1 <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(uint *)(in_RAX + i * 8) = *(uint *)((int)in_RDI + i * 8) | *(uint *)((int)in_R9 + i * 8);
  }
  if (in_RCX < len) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  if (uVar1 <= len) {
    __dest = (void *)(((int)(uVar1 - in_RCX) >> 0x3f & uVar1 << 3) + in_RAX);
    if (in_R8 < len) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    pvVar2 = (void *)((int)pvVar2 + (uVar1 << 3 & (int)(uVar1 - in_R8) >> 0x3f));
    if (pvVar2 != __dest) {
      runtime_memmove(__dest,pvVar2,(len - uVar1) * 8);
    }
    for (; (0 < i_1 && (*(int *)(in_RAX + -8 + i_1 * 8) == 0)); i_1 = i_1 - 1) {
    }
    if (in_RCX < (uint)i_1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceB();
}



void math_big_nat_xor(math_big_nat z,math_big_nat x,math_big_nat y,math_big_nat ~r0)

{
  int in_RAX;
  int extraout_RAX;
  int extraout_RAX_00;
  uint in_RCX;
  uint in_RSI;
  int m;
  uint uVar1;
  void *__dest;
  void *in_RDI;
  uint in_R8;
  void *in_R9;
  void *pvVar2;
  uint in_R10;
  uint len;
  int i_1;
  uint in_R11;
  int i;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar1 = in_R10;
  pvVar2 = in_RDI;
  len = in_RSI;
