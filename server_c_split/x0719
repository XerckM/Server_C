                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffee0);
      }
      uVar3 = sVar6 + local_90;
      if (local_88 < uVar3) {
        local_88 = local_90;
        ~r0_02.cap = (int)in_stack_fffffffffffffef0;
        ~r0_02.array = in_stack_fffffffffffffee0._type;
        ~r0_02.len = (int)in_stack_fffffffffffffee0.data;
        runtime_growslice(local_50,uVar3,uVar8,sVar6,(internal_abi_Type *)&DAT_00807920,~r0_02);
        local_50 = extraout_RAX_06;
        uVar8 = extraout_RCX_02;
        local_90 = local_88;
        uVar3 = extraout_RBX_03;
      }
      puVar7 = local_50 + local_90;
      local_90 = uVar3;
      local_88 = uVar8;
      runtime_memmove(puVar7,local_80,sVar6);
      buf.buf.cap = local_88;
      buf.buf.len = local_90;
      buf.buf.array = local_50;
      uVar8 = extraout_RBX_01 + uVar5;
    }
  }
  if (buf.buf.len == 0) {
    runtime_slicebytetostring
              ((runtime_tmpBuf *)0x0,local_68,local_a0,(string)in_stack_fffffffffffffee0);
    return;
  }
  if (local_a0 < uVar8) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  sVar6 = local_a0 - uVar8;
  if (buf.addr == (strings_Builder *)0x0) {
    buf.addr = &buf;
  }
  else if (buf.addr != &buf) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_fffffffffffffee0);
  }
  uVar5 = buf.buf.len + sVar6;
  uVar3 = buf.buf.cap;
  iVar4 = buf.buf.len;
  puVar7 = local_68 + ((int)(uVar8 - local_98) >> 0x3f & uVar8);
  puVar12 = buf.buf.array;
  if ((uint)buf.buf.cap < uVar5) {
    local_88 = buf.buf.len;
    ~r0_03.cap = (int)in_stack_fffffffffffffef0;
    ~r0_03.array = in_stack_fffffffffffffee0._type;
    ~r0_03.len = (int)in_stack_fffffffffffffee0.data;
    local_78 = local_68 + ((int)(uVar8 - local_98) >> 0x3f & uVar8);
    runtime_growslice(buf.buf.array,uVar5,buf.buf.cap,sVar6,(internal_abi_Type *)&DAT_00807920,
                      ~r0_03);
    uVar3 = extraout_RCX_03;
    iVar4 = local_88;
    puVar7 = local_78;
    uVar5 = extraout_RBX_04;
    puVar12 = extraout_RAX_07;
  }
  local_90 = uVar5;
  local_88 = uVar3;
  local_50 = puVar12;
  runtime_memmove(puVar12 + iVar4,puVar7,sVar6);
  buf.buf.cap = local_88;
  buf.buf.len = local_90;
  auVar2 = buf.buf._8_16_;
  buf.buf.array = local_50;
  if (bVar1) {
    buf.buf._8_16_ = auVar2;
    if (buf.addr == (strings_Builder *)0x0) {
      buf.addr = &buf;
    }
    else if (buf.addr != &buf) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_fffffffffffffee0);
    }
    uVar8 = local_90 + 1;
    if (local_88 < uVar8) {
      ~r0_04.cap = (int)in_stack_fffffffffffffef0;
      ~r0_04.array = in_stack_fffffffffffffee0._type;
      ~r0_04.len = (int)in_stack_fffffffffffffee0.data;
      runtime_growslice(local_50,uVar8,local_88,1,(internal_abi_Type *)&DAT_00807920,~r0_04);
      uVar8 = extraout_RBX_05;
      buf.buf.array = extraout_RAX_08;
      buf.buf.cap = extraout_RCX_04;
    }
    buf.buf.len = uVar8;
    buf.buf.array[uVar8 - 1] = 0x20;
    auVar2 = buf.buf._8_16_;
  }
  buf.buf._8_16_ = auVar2;
  if ((uint)-(int)buf.buf.array < (uint)buf.buf.len) {
    if (buf.buf.array == (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
      runtime_panicunsafestringnilptr();
    }
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringlen();
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void html_template_jsStrEscaper(__interface___ args,string ~r0)

{
  __interface___ args_00;
  __string replacementTable;
  __string replacementTable_00;
  string ~r0_00;
  string ~r0_01;
  html_template_contentType in_AL;
  char extraout_CL;
  html_template_contentType t;
  uint8 *unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  string in_stack_ffffffffffffffd0;
  string *in_stack_ffffffffffffffe0;
  string in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  args_00.cap = (int)in_stack_ffffffffffffffe0;
  args_00.array = (interface___ *)in_stack_ffffffffffffffd0.str;
  args_00.len = in_stack_ffffffffffffffd0.len;
  html_template_stringify(args_00,in_stack_ffffffffffffffe8,in_AL);
  if (extraout_CL == '\x05') {
    replacementTable.len = (int)in_stack_ffffffffffffffe8.str;
    replacementTable.cap = in_stack_ffffffffffffffe8.len;
    replacementTable.array = in_stack_ffffffffffffffe0;
    ~r0_00.len = unaff_retaddr;
    ~r0_00.str = unaff_RBP;
    html_template_replace(in_stack_ffffffffffffffd0,replacementTable,~r0_00);
    return;
  }
  replacementTable_00.len = (int)in_stack_ffffffffffffffe8.str;
  replacementTable_00.cap = in_stack_ffffffffffffffe8.len;
  replacementTable_00.array = in_stack_ffffffffffffffe0;
  ~r0_01.len = unaff_retaddr;
  ~r0_01.str = unaff_RBP;
  html_template_replace(in_stack_ffffffffffffffd0,replacementTable_00,~r0_01);
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void html_template_jsRegexpEscaper(__interface___ args,string ~r0)

{
  __interface___ args_00;
  __string replacementTable;
  string ~r0_00;
  html_template_contentType in_AL;
  int extraout_RBX;
  uint8 *unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  string in_stack_ffffffffffffffd0;
  string *in_stack_ffffffffffffffe0;
  string in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  args_00.cap = (int)in_stack_ffffffffffffffe0;
  args_00.array = (interface___ *)in_stack_ffffffffffffffd0.str;
  args_00.len = in_stack_ffffffffffffffd0.len;
  html_template_stringify(args_00,in_stack_ffffffffffffffe8,in_AL);
  replacementTable.len = (int)in_stack_ffffffffffffffe8.str;
  replacementTable.cap = in_stack_ffffffffffffffe8.len;
  replacementTable.array = in_stack_ffffffffffffffe0;
  ~r0_00.len = unaff_retaddr;
  ~r0_00.str = unaff_RBP;
  html_template_replace(in_stack_ffffffffffffffd0,replacementTable,~r0_00);
  if (extraout_RBX == 0) {
    return;
  }
  return;
}



void html_template_replace(string s,__string replacementTable,string ~r0)

{
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  int iVar1;
  sdword extraout_EAX;
  int32 r;
  int in_RAX;
  uint8 *extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *oldPtr;
  uint8 *extraout_RAX_01;
  int in_RCX;
  uint uVar2;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint oldCap;
  int extraout_RCX_01;
  int iVar3;
  uint in_RBX;
  int extraout_RBX;
  int w;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint uVar4;
  uint extraout_RBX_02;
  int in_RDI;
  size_t __n;
  uint uVar5;
  size_t sVar6;
  uint8 *puVar7;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_ffffffffffffff58;
  int in_stack_ffffffffffffff68;
  int written;
  int i;
  strings_Builder b;
  
  while (&b <= *(strings_Builder **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar5 = 0;
  uVar4 = 0;
  b._0_16_ = in_XMM15;
  b.buf._8_16_ = in_XMM15;
  do {
    if ((int)in_RBX <= (int)uVar5) {
      if (uVar4 == 0) {
        return;
      }
      if (in_RBX < uVar4) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      sVar6 = in_RBX - uVar4;
      if (b.addr == (strings_Builder *)0x0) {
        b.addr = &b;
      }
      else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffff58);
      }
      iVar1 = b.buf.len;
      uVar5 = b.buf.len + sVar6;
      puVar7 = b.buf.array;
      iVar3 = b.buf.cap;
      if ((uint)b.buf.cap < uVar5) {
        ~r0_02.cap = in_stack_ffffffffffffff68;
        ~r0_02.array = in_stack_ffffffffffffff58._type;
        ~r0_02.len = (int)in_stack_ffffffffffffff58.data;
        runtime_growslice(b.buf.array,uVar5,b.buf.cap,sVar6,(internal_abi_Type *)&DAT_00807920,
                          ~r0_02);
        puVar7 = extraout_RAX_01;
        iVar3 = extraout_RCX_01;
        uVar5 = extraout_RBX_02;
      }
      runtime_memmove(puVar7 + iVar1,(void *)(in_RAX + (uVar4 & (int)-sVar6 >> 0x3f)),sVar6);
      b.buf.cap = iVar3;
      b.buf.len = uVar5;
      b.buf.array = puVar7;
      if ((uint)-(int)puVar7 < uVar5) {
        if (puVar7 == (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
          runtime_panicunsafestringnilptr();
        }
                    // WARNING: Subroutine does not return
        runtime_panicunsafestringlen();
      }
      return;
    }
    if (in_RBX < uVar5) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    unicode_utf8_DecodeRuneInString
              ((string)in_stack_ffffffffffffff58,
               ((dword)((int)-(in_RBX - uVar5) >> 0x3f) & (dword)uVar5) + (sdword)in_RAX,
               in_RBX - uVar5);
    uVar2 = (uint)extraout_EAX;
    if ((int)uVar2 < html_template_lowUnicodeReplacementTable.len) {
      if ((uint)html_template_lowUnicodeReplacementTable.len <= uVar2) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      puVar7 = html_template_lowUnicodeReplacementTable.array[uVar2].str;
      sVar6 = html_template_lowUnicodeReplacementTable.array[uVar2].len;
LAB_00776dc0:
      if (uVar4 == 0) {
        strings___Builder__Grow(&b,in_RBX);
      }
      if (uVar5 < uVar4) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      __n = uVar5 - uVar4;
      if (b.addr == (strings_Builder *)0x0) {
        b.addr = &b;
      }
      else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffff58);
      }
      iVar1 = b.buf.len;
      uVar2 = b.buf.len + __n;
      oldPtr = b.buf.array;
      oldCap = b.buf.cap;
      if ((uint)b.buf.cap < uVar2) {
        ~r0_00.cap = in_stack_ffffffffffffff68;
        ~r0_00.array = in_stack_ffffffffffffff58._type;
        ~r0_00.len = (int)in_stack_ffffffffffffff58.data;
        runtime_growslice(b.buf.array,uVar2,b.buf.cap,__n,(internal_abi_Type *)&DAT_00807920,~r0_00)
        ;
        uVar2 = extraout_RBX_00;
        oldPtr = extraout_RAX;
        oldCap = extraout_RCX;
      }
      runtime_memmove(oldPtr + iVar1,(void *)(in_RAX + (uVar4 & (int)-__n >> 0x3f)),__n);
      b.buf.array = oldPtr;
      b.buf.len = uVar2;
      b.buf.cap = oldCap;
      if (b.addr == (strings_Builder *)0x0) {
        b.addr = &b;
      }
      else if (b.addr != &b) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffff58);
      }
      uVar4 = sVar6 + uVar2;
      if (oldCap < uVar4) {
        ~r0_01.cap = in_stack_ffffffffffffff68;
        ~r0_01.array = in_stack_ffffffffffffff58._type;
        ~r0_01.len = (int)in_stack_ffffffffffffff58.data;
        runtime_growslice(oldPtr,uVar4,oldCap,sVar6,(internal_abi_Type *)&DAT_00807920,~r0_01);
        oldPtr = extraout_RAX_00;
        oldCap = extraout_RCX_00;
        uVar4 = extraout_RBX_01;
      }
      runtime_memmove(oldPtr + uVar2,puVar7,sVar6);
      b.buf.cap = oldCap;
      b.buf.len = uVar4;
      b.buf.array = oldPtr;
      uVar4 = extraout_RBX + uVar5;
    }
    else {
      if ((int)uVar2 < in_RDI) {
        sVar6 = *(size_t *)(in_RCX + 8 + uVar2 * 0x10);
        puVar7 = *(uint8 **)(in_RCX + uVar2 * 0x10);
        if (sVar6 != 0) goto LAB_00776dc0;
      }
      if (extraout_EAX == 0x2028) {
        sVar6 = 6;
        puVar7 = (uint8 *)0x8afc58;
        goto LAB_00776dc0;
      }
      if (extraout_EAX == 0x2029) {
        sVar6 = 6;
        puVar7 = (uint8 *)0x8afc5e;
        goto LAB_00776dc0;
      }
    }
    uVar5 = uVar5 + extraout_RBX;
  } while( true );
}



void html_template_isJSType(string mimeType,bool ~r0)

{
  string after;
  string before;
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  char extraout_AL_02;
  char extraout_AL_03;
  char cVar1;
  char extraout_AL_04;
  char extraout_AL_05;
  char extraout_AL_06;
  char extraout_AL_07;
  char extraout_AL_08;
  char extraout_AL_09;
  char extraout_AL_10;
  char extraout_AL_11;
  undefined7 in_register_00000001;
  int *extraout_RAX;
  undefined8 extraout_RBX;
  int unaff_RBP;
  int unaff_R14;
  uint8 *unaff_retaddr;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  after.len._1_7_ = in_register_00000001;
  after.len._0_1_ = ~r0;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  before.len = unaff_RBP;
  before.str = in_stack_fffffffffffffff0;
  after.str = unaff_retaddr;
  strings_Cut(in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,before,after,~r0);
  strings_ToLower(in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0);
  strings_TrimSpace(in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0);
  switch(extraout_RBX) {
  case 6:
    if (*(sdword *)extraout_RAX != 0x75646f6d) {
      return;
    }
    if (*(short *)((int)extraout_RAX + 4) != 0x656c) {
      return;
    }
    return;
  default:
    goto switchD_00777216_caseD_7;
  case 0xc:
    if (*extraout_RAX != 0x63736a2f74786574) {
      return;
    }
    if (*(sdword *)(extraout_RAX + 1) != 0x74706972) {
      return;
    }
    return;
  case 0xf:
    if ((((*extraout_RAX == 0x6d63652f74786574) && (*(sdword *)(extraout_RAX + 1) == 0x72637361)) &&
        (*(short *)((int)extraout_RAX + 0xc) == 0x7069)) &&
       (*(char *)((int)extraout_RAX + 0xe) == 't')) {
      return;
    }
    if (((*extraout_RAX == 0x76616a2f74786574) && (*(sdword *)(extraout_RAX + 1) == 0x72637361)) &&
       ((*(short *)((int)extraout_RAX + 0xc) == 0x7069 &&
        (*(char *)((int)extraout_RAX + 0xe) == 't')))) {
      return;
    }
    if (*extraout_RAX != 0x76696c2f74786574) {
      return;
    }
    if (*(sdword *)(extraout_RAX + 1) != 0x72637365) {
      return;
    }
    if (*(short *)((int)extraout_RAX + 0xc) != 0x7069) {
      return;
    }
    if (*(char *)((int)extraout_RAX + 0xe) != 't') {
      return;
    }
    return;
  case 0x10:
    if (*extraout_RAX != 0x746163696c707061) {
      return;
    }
    if (extraout_RAX[1] != 0x6e6f736a2f6e6f69) {
      return;
    }
    return;
  case 0x11:
    runtime_memequal();
    if (extraout_AL != '\0') {
      return;
    }
    runtime_memequal();
    cVar1 = extraout_AL_00;
joined_r0x007773c2:
    if (cVar1 == '\0') {
      return;
    }
    return;
  case 0x12:
    if (*(char *)((int)extraout_RAX + 0x11) < '3') {
      runtime_memequal();
      if (extraout_AL_01 != '\0') {
        return;
      }
      runtime_memequal();
      if (extraout_AL_02 != '\0') {
        return;
      }
      runtime_memequal();
      cVar1 = extraout_AL_03;
      goto joined_r0x007773c2;
    }
    runtime_memequal();
    if (extraout_AL_04 != '\0') {
      return;
    }
    runtime_memequal();
    if (extraout_AL_05 != '\0') {
      return;
    }
    runtime_memequal();
    cVar1 = extraout_AL_06;
    break;
  case 0x13:
    runtime_memequal();
    cVar1 = extraout_AL_07;
    break;
  case 0x16:
    runtime_memequal();
    if (extraout_AL_08 != '\0') {
      return;
    }
    runtime_memequal();
    cVar1 = extraout_AL_09;
    break;
  case 0x18:
    runtime_memequal();
    if (extraout_AL_10 != '\0') {
      return;
    }
    runtime_memequal();
    cVar1 = extraout_AL_11;
  }
  if (cVar1 != '\0') {
    return;
  }
switchD_00777216_caseD_7:
  return;
}



void html_template_jsCtx_String(html_template_jsCtx i,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (2 < i) {
    strconv_FormatInt((uint)i,10,in_stack_ffffffffffffffc0);
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
               in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
  if (3 < (byte)(i + 1)) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if (html_template__jsCtx_index[(byte)(i + 1)] < 0x22) {
    if (html_template__jsCtx_index[i] <= html_template__jsCtx_index[(byte)(i + 1)]) {
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceAlen();
}



void html_template_state_String(html_template_state i,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (0x1c < i) {
    strconv_FormatInt((uint)i,10,in_stack_ffffffffffffffc0);
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
               in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
  if (0x1d < (byte)(i + 1)) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if (html_template__state_index[(byte)(i + 1)] < 0x163) {
    if (html_template__state_index[i] <= html_template__state_index[(byte)(i + 1)]) {
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceAlen();
}



// WARNING: Restarted to delay deadcode elimination for space: stack
// DWARF original prototype: void html/template.(*Template).checkCanParse(html/template.Template *
// t, error ~r0, error ~r0)

void html_template___Template__checkCanParse(html_template_Template *t,error ~r0,error ~r0_1)

{
  html_template_nameSpace *m;
  error ~r0_00;
  int unaff_R14;
  bool bVar1;
  string in_stack_ffffffffffffff98;
  __interface___ in_stack_ffffffffffffffa8;
  undefined7 in_stack_ffffffffffffffc0;
  html_template_Template *in_stack_ffffffffffffffc8;
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (t == (html_template_Template *)0x0) {
    return;
  }
  m = t->nameSpace;
  LOCK();
  bVar1 = (m->mu).state == 0;
  if (bVar1) {
    (m->mu).state = 1;
  }
  UNLOCK();
  if (!bVar1) {
    sync___Mutex__lockSlow(&m->mu);
    in_stack_ffffffffffffffc8 = t;
  }
  local_20._8_8_ = t->nameSpace;
  local_20._0_8_ = html_template___Template__checkCanParse_func1;
  local_10 = (code **)local_20;
  if (t->nameSpace->escaped == false) {
    html_template___Template__checkCanParse_func1();
    return;
  }
  ~r0_00.tab._7_1_ = 1;
  ~r0_00.tab._0_7_ = in_stack_ffffffffffffffc0;
  ~r0_00.data = in_stack_ffffffffffffffc8;
  fmt_Errorf(in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8,~r0_00);
  (**local_10)();
  return;
}



// WARNING: Unknown calling convention

void html_template___Template__checkCanParse_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  sync___Mutex__Unlock(*(sync_Mutex **)(in_RDX + 8));
  return;
}



// DWARF original prototype: void html/template.(*Template).escape(html/template.Template * t, error
// ~r0, error ~r0)

void html_template___Template__escape(html_template_Template *t,error ~r0,error ~r0_1)

{
  html_template_nameSpace *m;
  runtime_itab *tab;
  __interface___ a;
  error ~r0_00;
  error ~r0_01;
  char extraout_AL;
  int extraout_RAX;
  undefined8 extraout_RAX_00;
  undefined ~r0_02;
  undefined extraout_DIL;
  undefined8 in_RDI;
  undefined8 extraout_RDI;
  int unaff_R14;
  bool bVar1;
  void *in_XMM15_Qa;
  string in_stack_ffffffffffffff90;
  string in_stack_ffffffffffffffa0;
  int in_stack_ffffffffffffffb0;
  undefined7 in_stack_ffffffffffffffb8;
  undefined uVar2;
  undefined local_30 [16];
  undefined local_20 [16];
  code **local_10;
  
  while (~r0_02 = (undefined)in_RDI, &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  m = t->nameSpace;
  LOCK();
  bVar1 = (m->mu).state == 0;
  if (bVar1) {
    (m->mu).state = 1;
  }
  UNLOCK();
  if (!bVar1) {
    sync___Mutex__lockSlow(&m->mu);
    ~r0_02 = extraout_DIL;
  }
  local_30._8_8_ = t->nameSpace;
  local_30._0_8_ = html_template___Template__escape_func1;
  local_10 = (code **)local_30;
  uVar2 = 1;
  t->nameSpace->escaped = true;
  tab = (t->escapeErr).tab;
  if (tab == (runtime_itab *)0x0) {
    if (t->Tree == (text_template_parse_Tree *)0x0) {
      runtime_convTstring(in_stack_ffffffffffffff90,(t->text->name).str);
      local_20._8_8_ = extraout_RAX_00;
      local_20._0_8_ = &DAT_008075e0;
      a.cap = in_stack_ffffffffffffffb0;
      a.array = (interface___ *)in_stack_ffffffffffffffa0.str;
      a.len = in_stack_ffffffffffffffa0.len;
      ~r0_01.tab._7_1_ = uVar2;
      ~r0_01.tab._0_7_ = in_stack_ffffffffffffffb8;
      ~r0_01.data = in_XMM15_Qa;
      fmt_Errorf(in_stack_ffffffffffffff90,a,~r0_01);
      (**local_10)();
      return;
    }
    ~r0_00.data._0_7_ = in_stack_ffffffffffffffb8;
    ~r0_00.tab = (runtime_itab *)in_stack_ffffffffffffffb0;
    ~r0_00.data._7_1_ = 1;
    html_template_escapeTemplate
              (t,(text_template_parse_Node)in_stack_ffffffffffffff90,in_stack_ffffffffffffffa0,
               ~r0_00);
    if (extraout_RAX != 0) {
      (**local_10)();
      return;
    }
  }
  else if ((html_template_escapeOK.tab != tab) ||
          (runtime_ifaceeq(tab,(t->escapeErr).data,html_template_escapeOK.data,(bool)~r0_02),
          extraout_AL == '\0')) {
    (**local_10)();
    return;
  }
  (**local_10)();
  return;
}



// WARNING: Unknown calling convention

void html_template___Template__escape_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  sync___Mutex__Unlock(*(sync_Mutex **)(in_RDX + 8));
  return;
}



void html_template___Template__Execute
               (html_template_Template *t,io_Writer wr,interface___ data,error ~r0)

{
  error err;
  int extraout_RAX;
  void *unaff_RBP;
  int unaff_R14;
  io_Writer in_stack_ffffffffffffffd0;
  interface___ in_stack_ffffffffffffffe0;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  html_template___Template__escape(t,in_stack_ffffffffffffffd0,(error)in_stack_ffffffffffffffe0);
  if (extraout_RAX != 0) {
    return;
  }
  err.data = unaff_RBP;
  err.tab = in_stack_fffffffffffffff0;
  text_template___Template__execute(t->text,in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,err)
  ;
  return;
}



void html_template___Template__ExecuteTemplate
               (html_template_Template *t,io_Writer wr,string name,interface___ data,error ~r0)

{
  error err;
  int extraout_RAX;
  html_template_Template *tmpl;
  int extraout_RBX;
  void *unaff_RBP;
  html_template_Template *in_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  interface___ in_stack_ffffffffffffffe0;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  html_template___Template__lookupAndEscapeTemplate
            (t,in_stack_ffffffffffffffd0,in_RDI,(error)in_stack_ffffffffffffffe0);
  if (extraout_RBX != 0) {
    return;
  }
  err.data = unaff_RBP;
  err.tab = in_stack_fffffffffffffff0;
  text_template___Template__execute
            (*(text_template_Template **)(extraout_RAX + 0x10),(io_Writer)in_stack_ffffffffffffffd0,
             in_stack_ffffffffffffffe0,err);
  return;
}



// WARNING: Variable defined which should be unmapped: tmpl-local

void html_template___Template__lookupAndEscapeTemplate
               (html_template_Template *t,string name,html_template_Template *tmpl,error err)

{
  html_template_nameSpace *m;
  html_template_Template *tmpl_00;
  runtime_itab *tab;
  text_template_parse_Tree *ptVar1;
  __interface___ a;
  __interface___ a_00;
  error ~r0;
  error ~r0_00;
  error ~r0_01;
  byte extraout_AL;
  byte bVar2;
  html_template_Template **extraout_RAX;
  int extraout_RAX_00;
  text_template_Template *in_RCX;
  bool ~r0_02;
  int unaff_R14;
  bool bVar3;
  interface___ in_stack_ffffffffffffff88;
  string in_stack_ffffffffffffff98;
  int in_stack_ffffffffffffffa8;
  undefined7 in_stack_ffffffffffffffb0;
  undefined uVar4;
  html_template_Template *tmpl_local;
  error err_local;
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  m = t->nameSpace;
  LOCK();
  bVar3 = (m->mu).state == 0;
  if (bVar3) {
    (m->mu).state = 1;
  }
  UNLOCK();
  if (!bVar3) {
    sync___Mutex__lockSlow(&m->mu);
  }
  local_20._8_8_ = t->nameSpace;
  local_20._0_8_ = html_template___Template__lookupAndEscapeTemplate_func1;
  local_10 = (code **)local_20;
  uVar4 = 1;
  t->nameSpace->escaped = true;
  runtime_mapaccess1_faststr
            ((internal_abi_MapType *)&DAT_0082fc20,(runtime_hmap *)t->nameSpace->set,
             (string)in_stack_ffffffffffffff88,tmpl);
  tmpl_00 = *extraout_RAX;
  if (tmpl_00 == (html_template_Template *)0x0) {
    runtime_convTstring((string)in_stack_ffffffffffffff88,tmpl);
    a_00.cap = in_stack_ffffffffffffffa8;
    a_00.array = (interface___ *)in_stack_ffffffffffffff98.str;
    a_00.len = in_stack_ffffffffffffff98.len;
    ~r0_01.tab._7_1_ = uVar4;
    ~r0_01.tab._0_7_ = in_stack_ffffffffffffffb0;
    ~r0_01.data = (void *)0x0;
    fmt_Errorf((string)in_stack_ffffffffffffff88,a_00,~r0_01);
    (**local_10)();
    return;
  }
  tab = (tmpl_00->escapeErr).tab;
  if (tab == (runtime_itab *)0x0) {
    bVar2 = 0;
  }
  else if (html_template_escapeOK.tab == tab) {
    runtime_ifaceeq(tab,(tmpl_00->escapeErr).data,html_template_escapeOK.data,~r0_02);
    bVar2 = extraout_AL ^ 1;
  }
  else {
    bVar2 = 1;
  }
  if (bVar2 != 0) {
    (**local_10)();
    return;
  }
  ptVar1 = tmpl_00->text->Tree;
  if ((ptVar1 != (text_template_parse_Tree *)0x0) &&
     (ptVar1->Root != (text_template_parse_ListNode *)0x0)) {
    text_template___Template__Lookup
              (t->text,(string)in_stack_ffffffffffffff88,(text_template_Template *)tmpl,in_RCX);
    if (extraout_RAX_00 == 0) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffff88);
    }
    if ((tmpl_00->escapeErr).tab == (runtime_itab *)0x0) {
      ~r0.data._0_7_ = in_stack_ffffffffffffffb0;
      ~r0.tab = (runtime_itab *)in_stack_ffffffffffffffa8;
      ~r0.data._7_1_ = uVar4;
      html_template_escapeTemplate
                (tmpl_00,(text_template_parse_Node)in_stack_ffffffffffffff88,
                 in_stack_ffffffffffffff98,~r0);
    }
    (**local_10)();
    return;
  }
  runtime_convTstring((string)in_stack_ffffffffffffff88,tmpl);
  a.cap = in_stack_ffffffffffffffa8;
  a.array = (interface___ *)in_stack_ffffffffffffff98.str;
  a.len = in_stack_ffffffffffffff98.len;
  ~r0_00.tab._7_1_ = uVar4;
  ~r0_00.tab._0_7_ = in_stack_ffffffffffffffb0;
  ~r0_00.data = tmpl_00;
  fmt_Errorf((string)in_stack_ffffffffffffff88,a,~r0_00);
  (**local_10)();
  return;
}



// WARNING: Unknown calling convention

void html_template___Template__lookupAndEscapeTemplate_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  sync___Mutex__Unlock(*(sync_Mutex **)(in_RDX + 8));
  return;
