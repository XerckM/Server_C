  }
  oldCap = 0;
  oldPtr = (int *)0x0;
  newLen = 0;
  do {
    i = in_RBX;
    if (in_RBX == 0) {
      if ((newLen != 0) && (oldPtr[1] == 0)) {
        return;
      }
      iVar2 = 0;
      local_10 = oldPtr;
      while( true ) {
        if ((int)newLen <= iVar2) {
          return;
        }
        iVar3 = oldPtr[1];
        if (iVar3 == 0) break;
        iVar5 = *oldPtr;
        iVar4 = 0;
        local_18 = oldPtr;
        while (iVar4 < iVar3) {
          bVar1 = *(byte *)(iVar5 + iVar4);
          c = (int32)bVar1;
          if (bVar1 < 0x80) {
            iVar4 = iVar4 + 1;
          }
          else {
            runtime_decoderune(in_stack_ffffffffffffff60,iVar5,(int32)iVar3,iVar4);
            oldPtr = local_18;
            iVar4 = extraout_RBX_02;
            c = extraout_EAX;
          }
          c = c + -0x21;
          if (0x5d < (dword)c) {
            return;
          }
        }
        oldPtr = oldPtr + 2;
        iVar2 = iVar2 + 1;
      }
      return;
    }
    do {
      i = i - 1;
      if (i < 0) {
        i = -1;
        break;
      }
    } while (*(char *)(iVar2 + i) != '.');
    if (i == -1) {
      newLen = newLen + 1;
      if (oldCap < newLen) {
        ~r0.cap = in_stack_ffffffffffffff70;
        ~r0.array = in_stack_ffffffffffffff60.str;
        ~r0.len = in_stack_ffffffffffffff60.len;
        runtime_growslice(oldPtr,newLen,oldCap,1,(internal_abi_Type *)&DAT_008075e0,~r0);
        oldCap = extraout_RCX;
        oldPtr = extraout_RAX;
        newLen = extraout_RBX;
      }
      iVar3 = (newLen - 1) * 0x10;
      oldPtr[(newLen - 1) * 2 + 1] = in_RBX;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_RAX_00;
        extraout_R11[1] = *(int *)((int)oldPtr + extraout_R9);
        iVar2 = extraout_RAX_00;
        oldCap = extraout_RCX_00;
        newLen = extraout_R8;
        iVar3 = extraout_R9;
      }
      *(int *)((int)oldPtr + iVar3) = iVar2;
      in_RBX = 0;
      iVar2 = 0;
    }
    else {
      if (in_RBX < i + 1U) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      newLen = newLen + 1;
      iVar3 = (in_RBX - i) + -1;
      iVar4 = (i + 1U & -iVar3 >> 0x3f) + iVar2;
      if (oldCap < newLen) {
        ~r0_00.cap = in_stack_ffffffffffffff70;
        ~r0_00.array = in_stack_ffffffffffffff60.str;
        ~r0_00.len = in_stack_ffffffffffffff60.len;
        local_20 = iVar4;
        runtime_growslice(oldPtr,newLen,oldCap,1,(internal_abi_Type *)&DAT_008075e0,~r0_00);
        oldCap = extraout_RCX_01;
        oldPtr = extraout_RAX_01;
        iVar4 = local_20;
        newLen = extraout_RBX_00;
      }
      iVar5 = (newLen - 1) * 0x10;
      oldPtr[(newLen - 1) * 2 + 1] = iVar3;
      in_RBX = i;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_00 = extraout_R9_00;
        extraout_R11_00[1] = *(int *)((int)oldPtr + extraout_RBX_01);
        oldCap = extraout_RCX_02;
        in_RBX = extraout_R8_00;
        iVar4 = extraout_R9_00;
        newLen = extraout_R10;
        iVar5 = extraout_RBX_01;
      }
      *(int *)((int)oldPtr + iVar5) = iVar4;
    }
  } while( true );
}



void crypto_x509_matchEmailConstraint
               (crypto_x509_rfc2821Mailbox mailbox,string constraint,bool ~r0,error ~r1)

{
  __interface___ a;
  crypto_x509_rfc2821Mailbox mailbox_00;
  error ~r1_00;
  error ~r0_00;
  char extraout_AL;
  int extraout_RAX;
  bool in_CL;
  void *in_RBX;
  void *extraout_RBX;
  char extraout_SIL;
  bool ok;
  void *in_RSI;
  runtime_itab *in_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffff98;
  string in_stack_ffffffffffffffa8;
  runtime_itab *in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  strings_Index(in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8,(int)in_RSI);
  if (extraout_RAX < 0) {
    ~r1_00.data = in_RDI;
    ~r1_00.tab = in_stack_ffffffffffffffb8;
    crypto_x509_matchDomainConstraint
              (in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8,in_CL,~r1_00);
    return;
  }
  mailbox_00.domain.str = (uint8 *)in_stack_ffffffffffffffb8;
  mailbox_00.local = in_stack_ffffffffffffffa8;
  mailbox_00.domain.len = (int)in_RDI;
  crypto_x509_parseRFC2821Mailbox(in_stack_ffffffffffffff98,mailbox_00,SUB81(in_RSI,0));
  if (extraout_SIL == '\0') {
    runtime_convTstring(in_stack_ffffffffffffff98,in_RSI);
    a.cap = (int)in_stack_ffffffffffffffb8;
    a.array = (interface___ *)in_stack_ffffffffffffffa8.str;
    a.len = in_stack_ffffffffffffffa8.len;
    ~r0_00.data = in_RBX;
    ~r0_00.tab = in_RDI;
    fmt_Errorf(in_stack_ffffffffffffff98,a,~r0_00);
    return;
  }
  if ((extraout_RBX == in_RBX) && (runtime_memequal(), extraout_AL != '\0')) {
    strings_EqualFold(in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8,in_CL);
  }
  return;
}



void crypto_x509_matchURIConstraint(net_url_URL *uri,string constraint,bool ~r0,error ~r1)

{
  string s;
  string hostport;
  string s_00;
  string ~r0_00;
  string val;
  string format;
  string domain;
  string ~r0_01;
  string val_00;
  string format_00;
  __interface___ a;
  __interface___ a_00;
  string port;
  error ~r1_00;
  error ~r0_02;
  error ~r0_03;
  error err;
  byte extraout_AL;
  byte bVar1;
  char extraout_AL_00;
  char extraout_AL_01;
  bool valid;
  int extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *~r0_04;
  undefined *puVar2;
  void *x;
  void *x_00;
  char cVar3;
  void *extraout_RBX;
  void *pvVar4;
  int extraout_RSI;
  int unaff_R14;
  bool bVar5;
  undefined4 in_stack_ffffffffffffff90;
  undefined4 in_stack_ffffffffffffff94;
  undefined4 in_stack_ffffffffffffff98;
  undefined4 in_stack_ffffffffffffff9c;
  string in_stack_ffffffffffffffa0;
  runtime_itab *in_stack_ffffffffffffffb0;
  undefined8 in_stack_ffffffffffffffb8;
  undefined4 in_stack_ffffffffffffffc0;
  undefined4 in_stack_ffffffffffffffc4;
  undefined4 in_stack_ffffffffffffffc8;
  undefined4 in_stack_ffffffffffffffcc;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  pvVar4 = (void *)(uri->Host).len;
  if (pvVar4 == (void *)0x0) {
    ~r0_01.str._4_4_ = in_stack_ffffffffffffff94;
    ~r0_01.str._0_4_ = in_stack_ffffffffffffff90;
    ~r0_01.len._0_4_ = in_stack_ffffffffffffff98;
    ~r0_01.len._4_4_ = in_stack_ffffffffffffff9c;
    net_url___URL__String(uri,~r0_01);
    val_00.str._4_4_ = in_stack_ffffffffffffff94;
    val_00.str._0_4_ = in_stack_ffffffffffffff90;
    val_00.len._0_4_ = in_stack_ffffffffffffff98;
    val_00.len._4_4_ = in_stack_ffffffffffffff9c;
    runtime_convTstring(val_00,x_00);
    format_00.str._4_4_ = in_stack_ffffffffffffff94;
    format_00.str._0_4_ = in_stack_ffffffffffffff90;
    format_00.len._0_4_ = in_stack_ffffffffffffff98;
    format_00.len._4_4_ = in_stack_ffffffffffffff9c;
    a_00.cap = (int)in_stack_ffffffffffffffb0;
    a_00.array = (interface___ *)in_stack_ffffffffffffffa0.str;
    a_00.len = in_stack_ffffffffffffffa0.len;
    ~r0_03.data._0_4_ = in_stack_ffffffffffffffc0;
    ~r0_03.tab = (runtime_itab *)in_stack_ffffffffffffffb8;
    ~r0_03.data._4_4_ = in_stack_ffffffffffffffc4;
    fmt_Errorf(format_00,a_00,~r0_03);
    return;
  }
  ~r0_04 = (uri->Host).str;
  s.str._4_4_ = in_stack_ffffffffffffff94;
  s.str._0_4_ = in_stack_ffffffffffffff90;
  s.len._0_4_ = in_stack_ffffffffffffff98;
  s.len._4_4_ = in_stack_ffffffffffffff9c;
  strings_Index(s,in_stack_ffffffffffffffa0,(int)~r0_04);
  if (extraout_RAX < 0) {
    bVar1 = 0;
  }
  else {
    runtime_memequal();
    bVar1 = extraout_AL ^ 1;
  }
  if ((bVar1 != 0) &&
     (hostport.str._4_4_ = in_stack_ffffffffffffff94, hostport.str._0_4_ = in_stack_ffffffffffffff90
     , hostport.len._0_4_ = in_stack_ffffffffffffff98,
     hostport.len._4_4_ = in_stack_ffffffffffffff9c, port.len = (int)pvVar4,
     port.str = (uint8 *)in_stack_ffffffffffffffb0, err.tab._4_4_ = in_stack_ffffffffffffffc4,
     err.tab._0_4_ = in_stack_ffffffffffffffc0, err.data._0_4_ = in_stack_ffffffffffffffc8,
     err.data._4_4_ = in_stack_ffffffffffffffcc,
     net_SplitHostPort(hostport,in_stack_ffffffffffffffa0,port,err), ~r0_04 = extraout_RAX_00,
     pvVar4 = extraout_RBX, extraout_RSI != 0)) {
    return;
  }
  if (pvVar4 == (void *)0x0) {
    bVar5 = false;
  }
  else {
    bVar5 = *~r0_04 == 0x5b;
  }
  if (bVar5) {
    if (pvVar4 == (void *)0x0) {
      cVar3 = '\0';
    }
    else {
      runtime_memequal();
      cVar3 = extraout_AL_00;
    }
  }
  else {
    cVar3 = '\0';
  }
  if (cVar3 == '\0') {
    s_00.str._4_4_ = in_stack_ffffffffffffff94;
    s_00.str._0_4_ = in_stack_ffffffffffffff90;
    s_00.len._0_4_ = in_stack_ffffffffffffff98;
    s_00.len._4_4_ = in_stack_ffffffffffffff9c;
    net_parseIP(s_00,(uint8  [16])in_stack_ffffffffffffffa0,SUB81(~r0_04,0));
    if (extraout_AL_01 == '\0') {
      puVar2 = (undefined *)0x0;
    }
    else {
      puVar2 = &stack0xffffffffffffffc0;
    }
    in_stack_ffffffffffffffc0 = in_stack_ffffffffffffff90;
    in_stack_ffffffffffffffc4 = in_stack_ffffffffffffff94;
    if (puVar2 == (undefined *)0x0) {
      domain.str._4_4_ = in_stack_ffffffffffffff94;
      domain.str._0_4_ = in_stack_ffffffffffffff90;
      domain.len._0_4_ = in_stack_ffffffffffffff98;
      domain.len._4_4_ = in_stack_ffffffffffffff9c;
      ~r1_00.data = pvVar4;
      ~r1_00.tab = in_stack_ffffffffffffffb0;
      crypto_x509_matchDomainConstraint(domain,in_stack_ffffffffffffffa0,SUB81(~r0_04,0),~r1_00);
      return;
    }
  }
  ~r0_00.str._4_4_ = in_stack_ffffffffffffff94;
  ~r0_00.str._0_4_ = in_stack_ffffffffffffff90;
  ~r0_00.len._0_4_ = in_stack_ffffffffffffff98;
  ~r0_00.len._4_4_ = in_stack_ffffffffffffff9c;
  net_url___URL__String(uri,~r0_00);
  val.str._4_4_ = in_stack_ffffffffffffff94;
  val.str._0_4_ = in_stack_ffffffffffffff90;
  val.len._0_4_ = in_stack_ffffffffffffff98;
  val.len._4_4_ = in_stack_ffffffffffffff9c;
  runtime_convTstring(val,x);
  format.str._4_4_ = in_stack_ffffffffffffff94;
  format.str._0_4_ = in_stack_ffffffffffffff90;
  format.len._0_4_ = in_stack_ffffffffffffff98;
  format.len._4_4_ = in_stack_ffffffffffffff9c;
  a.cap = (int)in_stack_ffffffffffffffb0;
  a.array = (interface___ *)in_stack_ffffffffffffffa0.str;
  a.len = in_stack_ffffffffffffffa0.len;
  ~r0_02.data._0_4_ = in_stack_ffffffffffffffc0;
  ~r0_02.tab = (runtime_itab *)pvVar4;
  ~r0_02.data._4_4_ = in_stack_ffffffffffffffc4;
  fmt_Errorf(format,a,~r0_02);
  return;
}



// WARNING: Variable defined which should be unmapped: i

void crypto_x509_matchDomainConstraint(string domain,string constraint,bool ~r0,error ~r1)

{
  char cVar1;
  __string reverseLabels;
  __string reverseLabels_00;
  __interface___ a;
  __interface___ a_00;
  error ~r0_00;
  error ~r0_01;
  char extraout_AL;
  undefined7 in_register_00000001;
  undefined8 *extraout_RAX;
  undefined8 *puVar2;
  char *in_RCX;
  int iVar3;
  int extraout_RBX;
  int extraout_RBX_00;
  char extraout_DIL;
  bool ok;
  char extraout_DIL_00;
  int in_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffff80;
  string in_stack_ffffffffffffff90;
  int in_stack_ffffffffffffffa0;
  undefined7 uStack_58;
  undefined local_51;
  int i;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RDI == 0) {
    return;
  }
  reverseLabels.cap = in_stack_ffffffffffffffa0;
  reverseLabels.array = (string *)in_stack_ffffffffffffff90.str;
  reverseLabels.len = in_stack_ffffffffffffff90.len;
  crypto_x509_domainToReverseLabels(in_stack_ffffffffffffff80,reverseLabels,~r0);
  if (extraout_DIL == '\0') {
    runtime_convTstring(in_stack_ffffffffffffff80,(void *)CONCAT71(in_register_00000001,~r0));
    a_00.cap = in_stack_ffffffffffffffa0;
    a_00.array = (interface___ *)in_stack_ffffffffffffff90.str;
    a_00.len = in_stack_ffffffffffffff90.len;
    ~r0_01.tab._7_1_ = local_51;
    ~r0_01.tab._0_7_ = uStack_58;
    ~r0_01.data = (void *)i;
    fmt_Errorf(in_stack_ffffffffffffff80,a_00,~r0_01);
    return;
  }
  cVar1 = *in_RCX;
  if (cVar1 == '.') {
    in_RCX = in_RCX + ((dword)(-(in_RDI + -1) >> 0x3f) & 1);
  }
  reverseLabels_00.cap = in_stack_ffffffffffffffa0;
  reverseLabels_00.array = (string *)in_stack_ffffffffffffff90.str;
  reverseLabels_00.len = in_stack_ffffffffffffff90.len;
  crypto_x509_domainToReverseLabels(in_stack_ffffffffffffff80,reverseLabels_00,SUB81(in_RCX,0));
  if (extraout_DIL_00 == '\0') {
    runtime_convTstring(in_stack_ffffffffffffff80,in_RCX);
    a.cap = in_stack_ffffffffffffffa0;
    a.array = (interface___ *)in_stack_ffffffffffffff90.str;
    a.len = in_stack_ffffffffffffff90.len;
    ~r0_00.tab._7_1_ = cVar1;
    ~r0_00.tab._0_7_ = uStack_58;
    ~r0_00.data = (void *)i;
    fmt_Errorf(in_stack_ffffffffffffff80,a,~r0_00);
    return;
  }
  if ((extraout_RBX_00 <= extraout_RBX) && ((cVar1 != '.' || (extraout_RBX != extraout_RBX_00)))) {
    iVar3 = 0;
    puVar2 = extraout_RAX;
    while( true ) {
      if (extraout_RBX_00 <= iVar3) {
        return;
      }
      strings_EqualFold(in_stack_ffffffffffffff80,in_stack_ffffffffffffff90,SUB81(*puVar2,0));
      if (extraout_AL == '\0') break;
      puVar2 = puVar2 + 2;
      iVar3 = iVar3 + 1;
    }
    return;
  }
  return;
}



void crypto_x509___Certificate__checkNameConstraints
               (crypto_x509_Certificate *c,int *count,int maxConstraintComparisons,string nameType,
               string name,interface___ parsedName,
               func_interface_____interface______bool__error_ **match,interface___ permitted,
               interface___ excluded,error ~r0)

{
  reflect_Value v;
  reflect_Value v_00;
  reflect_Value v_01;
  reflect_Value v_02;
  reflect_Value v_03;
  reflect_Value v_04;
  reflect_Value v_05;
  reflect_Value v_06;
  __interface___ a;
  __interface___ a_00;
  reflect_Value ~r0_00;
  reflect_Value ~r0_01;
  string ~r0_02;
  string ~r0_03;
  bool safe;
  char cVar1;
  bool match_1;
  bool safe_00;
  uintptr extraout_RAX;
  uintptr extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 extraout_RAX_02;
  undefined8 extraout_RAX_03;
  int extraout_RAX_04;
  int extraout_RAX_05;
  undefined8 extraout_RAX_06;
  uint extraout_RAX_07;
  undefined8 extraout_RAX_08;
  undefined8 extraout_RAX_09;
  bool ok;
  undefined8 extraout_RCX;
  undefined8 extraout_RCX_00;
  internal_abi_Type *t;
  internal_abi_Type *t_1;
  undefined8 extraout_RBX;
  int extraout_RBX_00;
  uint uVar2;
  undefined8 extraout_RBX_01;
  int extraout_RBX_02;
  void *in_R8;
  uintptr uVar3;
  int iVar4;
  uint uVar5;
  reflect_flag f_1;
  int iVar6;
  undefined8 in_R10;
  undefined8 in_R11;
  byte bVar7;
  dword dVar8;
  reflect_flag f;
  int unaff_R14;
  undefined8 uStack0000000000000068;
  undefined8 uStack0000000000000070;
  string in_stack_fffffffffffffee0;
  interface___ *in_stack_fffffffffffffef0;
  interface___ in_stack_fffffffffffffef8;
  undefined7 in_stack_ffffffffffffff08;
  char in_stack_ffffffffffffff0f;
  int in_stack_ffffffffffffff10;
  int i_1;
  int i;
  undefined local_a0 [8];
  int local_98;
  uint8 *local_90;
  int local_88;
  internal_abi_Type *local_80;
  undefined local_78 [16];
  undefined local_68 [16];
  undefined local_58 [16];
  undefined local_48 [16];
  undefined local_38 [16];
  undefined local_28 [32];
  
  uStack0000000000000068 = in_R10;
  uStack0000000000000070 = in_R11;
  while (local_a0 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (name.len == 0) {
    bVar7 = 0;
    parsedName._type = (internal_abi_Type *)0x0;
    name.len = 0;
  }
  else {
    local_88 = name.len;
    local_80 = parsedName._type;
    if (name.len == 0) {
      bVar7 = 0;
      name.len = 0;
      parsedName._type = (internal_abi_Type *)0x0;
    }
    else {
      bVar7 = *(byte *)(name.len + 0x17) & 0x1f;
    }
  }
  if (bVar7 == 0x17) {
    uVar3 = (parsedName._type)->PtrBytes;
  }
  else {
    v.flag = (reflect_flag)in_stack_fffffffffffffef0;
    v.typ_ = (internal_abi_Type *)in_stack_fffffffffffffee0.str;
    v.ptr = (void *)in_stack_fffffffffffffee0.len;
    reflect_Value_lenNonSlice(v,name.len);
    uVar3 = extraout_RAX;
  }
  iVar4 = *count;
  *count = uVar3 + iVar4;
  if (maxConstraintComparisons < (int)(uVar3 + iVar4)) {
    local_58._8_8_ = 8;
    local_58._0_8_ = c;
    runtime_convT((internal_abi_Type *)&DAT_00873460,local_58,(void *)maxConstraintComparisons);
    return;
  }
  iVar4 = 0;
  while( true ) {
    if (bVar7 == 0x17) {
      uVar3 = (parsedName._type)->PtrBytes;
    }
    else {
      v_00.flag = (reflect_flag)in_stack_fffffffffffffef0;
      v_00.typ_ = (internal_abi_Type *)in_stack_fffffffffffffee0.str;
      v_00.ptr = (void *)in_stack_fffffffffffffee0.len;
      reflect_Value_lenNonSlice(v_00,name.len);
      uVar3 = extraout_RAX_00;
    }
    if ((int)uVar3 <= iVar4) break;
    v_01.flag = (reflect_flag)in_stack_fffffffffffffef0;
    v_01.typ_ = (internal_abi_Type *)in_stack_fffffffffffffee0.str;
    v_01.ptr = (void *)in_stack_fffffffffffffee0.len;
    ~r0_00.flag._0_7_ = in_stack_ffffffffffffff08;
    ~r0_00.typ_ = in_stack_fffffffffffffef8._type;
    ~r0_00.ptr = in_stack_fffffffffffffef8.data;
    ~r0_00.flag._7_1_ = in_stack_ffffffffffffff0f;
    reflect_Value_Index(v_01,name.len,~r0_00);
    v_02.flag = (reflect_flag)in_stack_fffffffffffffef0;
    v_02.typ_ = (internal_abi_Type *)in_stack_fffffffffffffee0.str;
    v_02.ptr = (void *)in_stack_fffffffffffffee0.len;
    reflect_valueInterface(v_02,safe,in_stack_fffffffffffffef8);
    cVar1 = (**(code **)nameType.str)
                      (uStack0000000000000068,uStack0000000000000070,extraout_RAX_01,extraout_RBX);
    if (extraout_RBX_00 != 0) {
      local_48 = (**(code **)(extraout_RBX_00 + 0x18))(extraout_RCX);
      local_58._8_8_ = 2;
      local_58._0_8_ = c;
      runtime_convT((internal_abi_Type *)&DAT_00873460,local_58,c);
      return;
    }
    if (cVar1 != '\0') {
      runtime_convTstring(in_stack_fffffffffffffee0,match);
      local_38._8_8_ = extraout_RAX_02;
      local_38._0_8_ = &DAT_008075e0;
      runtime_convTstring(in_stack_fffffffffffffee0,in_R8);
      local_28._8_8_ = extraout_RAX_03;
      local_28._0_8_ = &DAT_008075e0;
      a.len = (int)in_stack_fffffffffffffef8._type;
      a.cap = (int)in_stack_fffffffffffffef8.data;
      a.array = in_stack_fffffffffffffef0;
      ~r0_02.str._7_1_ = in_stack_ffffffffffffff0f;
      ~r0_02.str._0_7_ = in_stack_ffffffffffffff08;
      ~r0_02.len = in_stack_ffffffffffffff10;
      fmt_Sprintf(in_stack_fffffffffffffee0,a,~r0_02);
      local_58._8_8_ = 2;
      local_58._0_8_ = c;
      runtime_convT((internal_abi_Type *)&DAT_00873460,local_58,c);
      return;
    }
    iVar4 = iVar4 + 1;
  }
  if (nameType.len == 0) {
    name.str = (uint8 *)0x0;
    nameType.len = 0;
    uVar5 = 0;
  }
  else {
    local_98 = nameType.len;
    local_90 = name.str;
    if (nameType.len == 0) {
      nameType.len = 0;
      name.str = (uint8 *)0x0;
      uVar5 = 0;
    }
    else {
      uVar5 = (uint)(*(byte *)(nameType.len + 0x17) & 0x1f);
      if ((*(byte *)(nameType.len + 0x17) & 0x20) == 0) {
        uVar5 = uVar5 | 0x80;
      }
    }
  }
  dVar8 = (dword)uVar5 & 0x1f;
  if (dVar8 == 0x17) {
    iVar4 = *(int *)(name.str + 8);
  }
  else {
    v_03.flag = (reflect_flag)in_stack_fffffffffffffef0;
    v_03.typ_ = (internal_abi_Type *)in_stack_fffffffffffffee0.str;
    v_03.ptr = (void *)in_stack_fffffffffffffee0.len;
    reflect_Value_lenNonSlice(v_03,nameType.len);
    iVar4 = extraout_RAX_04;
  }
  iVar6 = *count;
  *count = iVar4 + iVar6;
  if (maxConstraintComparisons < iVar4 + iVar6) {
    local_58._8_8_ = 8;
    local_58._0_8_ = c;
    runtime_convT((internal_abi_Type *)&DAT_00873460,local_58,(void *)maxConstraintComparisons);
    return;
  }
  iVar4 = 0;
  uVar2 = 1;
  while( true ) {
    ok = SUB81(uVar2,0);
    if (dVar8 == 0x17) {
      iVar6 = *(int *)(name.str + 8);
    }
    else {
      v_04.flag = (reflect_flag)in_stack_fffffffffffffef0;
      v_04.typ_ = (internal_abi_Type *)in_stack_fffffffffffffee0.str;
      v_04.ptr = (void *)in_stack_fffffffffffffee0.len;
      reflect_Value_lenNonSlice(v_04,nameType.len);
      iVar6 = extraout_RAX_05;
      in_stack_ffffffffffffff0f = ok;
    }
    if (iVar6 <= iVar4) break;
    v_05.flag = (reflect_flag)in_stack_fffffffffffffef0;
    v_05.typ_ = (internal_abi_Type *)in_stack_fffffffffffffee0.str;
    v_05.ptr = (void *)in_stack_fffffffffffffee0.len;
    ~r0_01.flag._0_7_ = in_stack_ffffffffffffff08;
    ~r0_01.typ_ = in_stack_fffffffffffffef8._type;
    ~r0_01.ptr = in_stack_fffffffffffffef8.data;
    ~r0_01.flag._7_1_ = in_stack_ffffffffffffff0f;
    reflect_Value_Index(v_05,nameType.len,~r0_01);
    v_06.flag = (reflect_flag)in_stack_fffffffffffffef0;
    v_06.typ_ = (internal_abi_Type *)in_stack_fffffffffffffee0.str;
    v_06.ptr = (void *)in_stack_fffffffffffffee0.len;
    reflect_valueInterface(v_06,safe_00,in_stack_fffffffffffffef8);
    (**(code **)nameType.str)
              (uStack0000000000000068,uStack0000000000000070,extraout_RAX_06,extraout_RBX_01);
    if (extraout_RBX_02 != 0) {
      local_48 = (**(code **)(extraout_RBX_02 + 0x18))(extraout_RCX_00);
      local_58._8_8_ = 2;
      local_58._0_8_ = c;
      runtime_convT((internal_abi_Type *)&DAT_00873460,local_58,c);
      return;
    }
    ok = SUB81(extraout_RAX_07,0);
    if (ok != false) break;
    iVar4 = iVar4 + 1;
    uVar2 = extraout_RAX_07 & 0xffffffff;
  }
  if (ok == false) {
    runtime_convTstring(in_stack_fffffffffffffee0,match);
    local_78._8_8_ = extraout_RAX_08;
    local_78._0_8_ = &DAT_008075e0;
    runtime_convTstring(in_stack_fffffffffffffee0,in_R8);
    local_68._8_8_ = extraout_RAX_09;
    local_68._0_8_ = &DAT_008075e0;
    a_00.len = (int)in_stack_fffffffffffffef8._type;
    a_00.cap = (int)in_stack_fffffffffffffef8.data;
    a_00.array = in_stack_fffffffffffffef0;
    ~r0_03.str._7_1_ = in_stack_ffffffffffffff0f;
    ~r0_03.str._0_7_ = in_stack_ffffffffffffff08;
    ~r0_03.len = uVar5;
    fmt_Sprintf(in_stack_fffffffffffffee0,a_00,~r0_03);
    local_58._8_8_ = 2;
    local_58._0_8_ = c;
    runtime_convT((internal_abi_Type *)&DAT_00873460,local_58,c);
    return;
  }
  return;
}



void crypto_x509___Certificate__isValid
               (crypto_x509_Certificate *c,int certType,___crypto_x509_Certificate currentChain,
               crypto_x509_VerifyOptions *opts,error ~r0)

{
  bool bVar1;
  time_Time ~r0_00;
  time_Time t;
  time_Time t_00;
  time_Time t_01;
  time_Time t_02;
  time_Time t_03;
  time_Time t_04;
  runtime_slice ~r0_01;
  vendor_golang_org_x_crypto_cryptobyte_String der;
  __interface___ a;
  __interface___ a_00;
  time_Time u;
  time_Time u_00;
  string ~r0_02;
  string ~r0_03;
  string ~r0_04;
  string ~r0_05;
  string ~r0_06;
  string ~r0_07;
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  uint extraout_RAX;
  undefined8 *extraout_RAX_00;
  void *extraout_RAX_01;
  void *extraout_RAX_02;
  undefined8 extraout_RAX_03;
  undefined8 extraout_RAX_04;
  void *extraout_RAX_05;
  void *extraout_RAX_06;
  undefined8 extraout_RAX_07;
  undefined8 extraout_RAX_08;
  int iVar2;
  uint *extraout_RAX_09;
  int extraout_RAX_10;
  int extraout_RAX_11;
  int i_1;
  int iVar3;
  crypto_x509_VerifyOptions *extraout_RCX;
  crypto_x509_VerifyOptions *pcVar4;
  undefined8 extraout_RCX_00;
  void *~r0_08;
  void *~r0_09;
  uint oldCap;
  uint extraout_RCX_01;
  uint extraout_RCX_02;
  int iVar5;
  crypto_x509_Certificate *child;
  int extraout_RBX;
  void *~r0_10;
  uint extraout_RBX_00;
  uint *extraout_RBX_01;
  uint *oldPtr;
  int i;
  uint newLen;
  int numIntermediates;
  uint extraout_RSI;
  int in_RDI;
  int i_2;
  int iVar6;
  int in_R8;
  int extraout_R8;
  crypto_x509_VerifyOptions *extraout_R9;
  crypto_x509_Certificate *sanCert;
  func_int____uint8__error **callback;
  crypto_x509_Certificate *c_1;
  uint8 *extraout_R10;
  int *piVar7;
  uint8 *puVar8;
  crypto_x509_pkix_Extension *pcVar9;
  uint8 **extraout_R11;
  int **ppiVar10;
  int unaff_R14;
  int iStack0000000000000030;
  string in_stack_fffffffffffffe40;
  time_Location *in_stack_fffffffffffffe50;
  string in_stack_fffffffffffffe58;
  time_Location *in_stack_fffffffffffffe68;
  int in_stack_fffffffffffffe70;
  uint local_180;
  uint local_178;
  int local_170;
  int local_168;
  int local_160;
  undefined8 local_158;
  int local_150;
  int local_140;
  uint *local_138;
  undefined8 local_130;
  uint8 *local_128;
  void *local_120;
  void *local_118;
  undefined local_110 [16];
  undefined local_100 [16];
  undefined local_f0 [16];
  undefined local_e0 [16];
  undefined local_d0 [32];
  crypto_x509_pkix_Extension e_1;
  crypto_x509_pkix_Extension e;
  crypto_x509_pkix_Extension e_2;
  
  iStack0000000000000030 = in_R8;
  while (&local_140 <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((c->UnhandledCriticalExtensions).len != 0) {
    return;
  }
  if ((in_RDI != 0) &&
     ((pcVar4 = opts, (c->RawSubject).len != *(int *)(*(int *)((int)opts + in_RDI * 8 + -8) + 0x68)
      || (runtime_memequal(), pcVar4 = extraout_RCX, extraout_AL == '\0')))) {
    local_d0._8_8_ = 5;
    local_d0._0_8_ = c;
    runtime_convT((internal_abi_Type *)&DAT_00873460,local_d0,pcVar4);
    return;
  }
  local_178 = *(uint *)(iStack0000000000000030 + 0x20);
  local_170 = *(int *)(iStack0000000000000030 + 0x28);
  iVar5 = local_170;
  if ((int)local_178 < 0) {
    iVar5 = ((local_178 << 1) >> 0x1f) + 0xdd7b17f80;
  }
  local_130 = *(undefined8 *)(iStack0000000000000030 + 0x30);
  if ((iVar5 == 0) && ((local_178 & 0x3fffffff) == 0)) {
    ~r0_00.loc = in_stack_fffffffffffffe50;
    ~r0_00.wall = (uint64)in_stack_fffffffffffffe40.str;
    ~r0_00.ext = in_stack_fffffffffffffe40.len;
    time_Now(~r0_00);
    local_178 = extraout_RAX;
    local_170 = extraout_RBX;
    local_130 = extraout_RCX_00;
  }
  t.loc = in_stack_fffffffffffffe50;
  t.wall = (uint64)in_stack_fffffffffffffe40.str;
  t.ext = in_stack_fffffffffffffe40.len;
  u.loc = in_stack_fffffffffffffe68;
  u.wall = (uint64)in_stack_fffffffffffffe58.str;
  u.ext = in_stack_fffffffffffffe58.len;
  time_Time_Before(t,u,SUB81(local_178,0));
  if (extraout_AL_00 != '\0') {
    t_03.loc = in_stack_fffffffffffffe50;
    t_03.wall = (uint64)in_stack_fffffffffffffe40.str;
    t_03.ext = in_stack_fffffffffffffe40.len;
    ~r0_05.len = in_stack_fffffffffffffe70;
    ~r0_05.str = (uint8 *)in_stack_fffffffffffffe68;
    time_Time_Format(t_03,in_stack_fffffffffffffe58,~r0_05);
    t_04.loc = in_stack_fffffffffffffe50;
    t_04.wall = (uint64)in_stack_fffffffffffffe40.str;
    t_04.ext = in_stack_fffffffffffffe40.len;
    ~r0_06.len = in_stack_fffffffffffffe70;
    ~r0_06.str = (uint8 *)in_stack_fffffffffffffe68;
    local_118 = extraout_RAX_05;
    time_Time_Format(t_04,in_stack_fffffffffffffe58,~r0_06);
    local_120 = extraout_RAX_06;
    runtime_convTstring(in_stack_fffffffffffffe40,local_118);
    local_f0._8_8_ = extraout_RAX_07;
    local_f0._0_8_ = &DAT_008075e0;
    runtime_convTstring(in_stack_fffffffffffffe40,local_120);
    local_e0._8_8_ = extraout_RAX_08;
    local_e0._0_8_ = &DAT_008075e0;
    a_00.len = (int)in_stack_fffffffffffffe58.str;
    a_00.cap = in_stack_fffffffffffffe58.len;
    a_00.array = (interface___ *)in_stack_fffffffffffffe50;
    ~r0_07.len = in_stack_fffffffffffffe70;
    ~r0_07.str = (uint8 *)in_stack_fffffffffffffe68;
    fmt_Sprintf(in_stack_fffffffffffffe40,a_00,~r0_07);
    local_d0._8_8_ = 1;
    local_d0._0_8_ = c;
    runtime_convT((internal_abi_Type *)&DAT_00873460,local_d0,~r0_09);
    return;
  }
  t_00.loc = in_stack_fffffffffffffe50;
  t_00.wall = (uint64)in_stack_fffffffffffffe40.str;
  t_00.ext = in_stack_fffffffffffffe40.len;
  u_00.loc = in_stack_fffffffffffffe68;
  u_00.wall = (uint64)in_stack_fffffffffffffe58.str;
  u_00.ext = in_stack_fffffffffffffe58.len;
  time_Time_After(t_00,u_00,SUB81(local_178,0));
  if (extraout_AL_01 != '\0') {
    t_01.loc = in_stack_fffffffffffffe50;
    t_01.wall = (uint64)in_stack_fffffffffffffe40.str;
    t_01.ext = in_stack_fffffffffffffe40.len;
    ~r0_02.len = in_stack_fffffffffffffe70;
    ~r0_02.str = (uint8 *)in_stack_fffffffffffffe68;
    time_Time_Format(t_01,in_stack_fffffffffffffe58,~r0_02);
    t_02.loc = in_stack_fffffffffffffe50;
    t_02.wall = (uint64)in_stack_fffffffffffffe40.str;
    t_02.ext = in_stack_fffffffffffffe40.len;
    ~r0_03.len = in_stack_fffffffffffffe70;
    ~r0_03.str = (uint8 *)in_stack_fffffffffffffe68;
    local_118 = extraout_RAX_01;
    time_Time_Format(t_02,in_stack_fffffffffffffe58,~r0_03);
    local_120 = extraout_RAX_02;
    runtime_convTstring(in_stack_fffffffffffffe40,local_118);
    local_f0._8_8_ = extraout_RAX_03;
    local_f0._0_8_ = &DAT_008075e0;
    runtime_convTstring(in_stack_fffffffffffffe40,local_120);
    local_e0._8_8_ = extraout_RAX_04;
    local_e0._0_8_ = &DAT_008075e0;
    a.len = (int)in_stack_fffffffffffffe58.str;
    a.cap = in_stack_fffffffffffffe58.len;
    a.array = (interface___ *)in_stack_fffffffffffffe50;
    ~r0_04.len = in_stack_fffffffffffffe70;
    ~r0_04.str = (uint8 *)in_stack_fffffffffffffe68;
    fmt_Sprintf(in_stack_fffffffffffffe40,a,~r0_04);
    local_d0._8_8_ = 1;
    local_d0._0_8_ = c;
    runtime_convT((internal_abi_Type *)&DAT_00873460,local_d0,~r0_08);
    return;
  }
  local_168 = *(int *)(iStack0000000000000030 + 0x50);
  if (*(int *)(iStack0000000000000030 + 0x50) == 0) {
    local_168 = 250000;
  }
  local_158 = 0;
  if (((certType == 1) || (certType == 2)) && (in_RDI == 0)) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_10);
    extraout_RAX_00[1] = 0x38;
    *extraout_RAX_00 = &DAT_008ca68e;
    return;
  }
  if ((certType == 1) || (certType == 2)) {
    pcVar9 = (c->Extensions).array;
    iVar5 = (c->Extensions).len;
    for (iVar3 = 0; iVar3 < iVar5; iVar3 = iVar3 + 1) {
      iVar2 = (pcVar9->Id).len;
      if (iVar2 == crypto_x509_oidExtensionNameConstraints.len) {
        i = 0;
        while( true ) {
          if (iVar2 <= i) goto LAB_00696f51;
          if (crypto_x509_oidExtensionNameConstraints.array[i] != (pcVar9->Id).array[i]) break;
          i = i + 1;
        }
      }
      pcVar9 = pcVar9 + 1;
    }
LAB_00696f51:
    bVar1 = iVar3 < iVar5;
  }
  else {
    bVar1 = false;
  }
  iVar3 = in_RDI;
  iVar5 = certType;
  if (bVar1) {
    oldCap = 0;
    oldPtr = &local_180;
    newLen = 0;
    pcVar4 = opts;
    for (iVar2 = 0; iVar2 < iVar3; iVar2 = iVar2 + 1) {
      local_128 = (&(pcVar4->DNSName).str)[iVar2];
      ppiVar10 = *(int ***)(local_128 + 0x2e8);
      puVar8 = local_128;
      for (iVar6 = 0; iVar6 < *(int *)(local_128 + 0x2f0); iVar6 = iVar6 + 1) {
        e_1.Id.array = *ppiVar10;
        piVar7 = ppiVar10[1];
        e_1.Id.len._0_4_ = *(undefined4 *)(ppiVar10 + 1);
        e_1.Id.len._4_4_ = *(undefined4 *)((int)ppiVar10 + 0xc);
        e_1.Id.cap._0_4_ = *(undefined4 *)(ppiVar10 + 2);
        e_1.Id.cap._4_4_ = *(undefined4 *)((int)ppiVar10 + 0x14);
        e_1._24_4_ = *(undefined4 *)(ppiVar10 + 3);
        e_1._28_4_ = *(undefined4 *)((int)ppiVar10 + 0x1c);
        e_1.Value.array._0_4_ = *(undefined4 *)(ppiVar10 + 4);
        e_1.Value.array._4_4_ = *(undefined4 *)((int)ppiVar10 + 0x24);
        e_1.Value.len._0_4_ = *(undefined4 *)(ppiVar10 + 5);
        e_1.Value.len._4_4_ = *(undefined4 *)((int)ppiVar10 + 0x2c);
        e_1.Value.cap._0_4_ = *(undefined4 *)(ppiVar10 + 6);
        e_1.Value.cap._4_4_ = *(undefined4 *)((int)ppiVar10 + 0x34);
        if (piVar7 == (int *)crypto_x509_oidExtensionSubjectAltName.len) {
          local_150 = iVar2;
          local_160 = 0;
          while( true ) {
            iVar5 = certType;
            iVar3 = in_RDI;
            pcVar4 = opts;
            if ((int)piVar7 <= local_160) goto LAB_00696beb;
            puVar8 = local_128;
            if (crypto_x509_oidExtensionSubjectAltName.array[local_160] != (*ppiVar10)[local_160])
            break;
            local_160 = local_160 + 1;
            puVar8 = local_128;
          }
        }
