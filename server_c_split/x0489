  if ((int)in_RSI < (int)in_R10) {
    uVar1 = in_RSI;
    pvVar2 = in_R9;
    len = in_R10;
    in_R8 = in_R11;
  }
  i_1 = len;
  if ((int)in_RCX < (int)len) {
    if (len == 1) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
      in_RCX = 1;
      in_RAX = extraout_RAX;
      i_1 = 1;
    }
    else {
      in_RCX = len + 4;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,len,in_RCX,in_RDI);
      in_RAX = extraout_RAX_00;
    }
  }
  else if (in_RCX < len) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  for (i = 0; i < (int)uVar1; i = i + 1) {
    if (in_RSI <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (in_R10 <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((uint)i_1 <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(uint *)(in_RAX + i * 8) = *(uint *)((int)in_RDI + i * 8) ^ *(uint *)((int)in_R9 + i * 8);
  }
  if (in_RCX < len) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  if (uVar1 <= len) {
    __dest = (void *)(((int)(uVar1 - in_RCX) >> 0x3f & uVar1 << 3) + in_RAX);
    if (in_R8 < len) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    pvVar2 = (void *)((int)pvVar2 + (uVar1 << 3 & (int)(uVar1 - in_R8) >> 0x3f));
    if (pvVar2 != __dest) {
      runtime_memmove(__dest,pvVar2,(len - uVar1) * 8);
    }
    for (; (0 < i_1 && (*(int *)(in_RAX + -8 + i_1 * 8) == 0)); i_1 = i_1 - 1) {
    }
    if (in_RCX < (uint)i_1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceB();
}



// WARNING: Unknown calling convention -- yet parameter storage is locked

long math_big_nat_random(void)

{
  uint *puVar1;
  void *in_RAX;
  void *extraout_RAX;
  void *extraout_RAX_00;
  int iVar2;
  int iVar3;
  int iVar4;
  undefined *in_RCX;
  int in_RSI;
  int *in_RDI;
  int i_1;
  int in_R9;
  int in_R10;
  math_big_Word mask;
  uint uVar5;
  uint bitLengthOfMSW;
  int unaff_R14;
  void *pvStack0000000000000008;
  int *piStack0000000000000020;
  int iStack0000000000000028;
  undefined *puStack0000000000000030;
  int iStack0000000000000038;
  int i;
  
  iStack0000000000000028 = in_RSI;
  piStack0000000000000020 = in_RDI;
  iStack0000000000000038 = in_R9;
  while (puStack0000000000000030 = (undefined *)i_1,
        &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    pvStack0000000000000008 = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = pvStack0000000000000008;
    i_1 = (int)puStack0000000000000030;
  }
  if (((in_RCX != (undefined *)0x0) && (iStack0000000000000038 != 0)) &&
     (iStack0000000000000028 + iStack0000000000000038 * 8 + -8 == (int)in_RAX + (int)in_RCX * 8 + -8
     )) {
    in_RCX = (undefined *)0x0;
    in_RAX = (void *)0x0;
  }
  if ((int)in_RCX < i_1) {
    if ((undefined *)i_1 == &DAT_00000001) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,piStack0000000000000020);
      in_RCX = (undefined *)0x1;
      in_RAX = extraout_RAX;
      i_1 = (int)&DAT_00000001;
    }
    else {
      in_RCX = (undefined *)(i_1 + 4);
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,i_1,(int)in_RCX,piStack0000000000000020);
      in_RAX = extraout_RAX_00;
      i_1 = (int)puStack0000000000000030;
    }
  }
  uVar5 = in_R10 % 0x40;
  if (uVar5 == 0) {
    uVar5 = 0x40;
  }
  do {
    for (iVar2 = 0; iVar2 < i_1; iVar2 = iVar2 + 1) {
      iVar3 = (**(code **)(*piStack0000000000000020 + 0x18))(piStack0000000000000020[1]);
      iVar4 = (**(code **)(*piStack0000000000000020 + 0x18))(piStack0000000000000020[1]);
      *(uint *)((int)in_RAX + iVar2 * 8) = iVar3 >> 0x1f & 0xffffffffU | (iVar4 >> 0x1f) << 0x20;
    }
    if ((uint)i_1 <= puStack0000000000000030 + -1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    puVar1 = (uint *)((int)in_RAX + (int)puStack0000000000000030 * 8 + -8);
    *puVar1 = *puVar1 & (1 << ((byte)uVar5 & 0x3f) & -(uint)(uVar5 < 0x40)) - 1;
    iVar2 = math_big_nat_cmp(in_RAX,(void *)i_1);
  } while (-1 < iVar2);
  while ((0 < i_1 && (*(int *)((int)in_RAX + i_1 * 8 + -8) == 0))) {
    i_1 = i_1 + -1;
  }
  if (in_RCX < (uint)i_1) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  return (long)in_RAX;
}



void math_big_nat_expNN(math_big_nat z,math_big_nat x,math_big_nat y,math_big_nat m,bool slow,
                       math_big_nat ~r0)

{
  math_big_nat z_00;
  math_big_nat z_01;
  math_big_nat z_02;
  math_big_nat z_03;
  math_big_nat z_04;
  math_big_nat z_05;
  math_big_nat ~r0_00;
  math_big_nat ~r0_01;
  undefined7 in_register_00000001;
  int *__dest;
  int *extraout_RAX;
  int *extraout_RAX_00;
  int *extraout_RAX_01;
  int *extraout_RAX_02;
  int *extraout_RAX_03;
  int *extraout_RAX_04;
  int *extraout_RAX_05;
  int *extraout_RAX_06;
  int *extraout_RAX_07;
  int *extraout_RAX_08;
  int *extraout_RAX_09;
  int *extraout_RAX_10;
  uint in_RCX;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  uint extraout_RCX_02;
  uint extraout_RCX_03;
  uint extraout_RCX_04;
  int extraout_RBX;
  int extraout_RBX_00;
  int extraout_RBX_01;
  int extraout_RBX_02;
  uint i_1;
  int in_RSI;
  int extraout_RSI;
  int extraout_RSI_00;
  int *in_RDI;
  int *extraout_RDI;
  int *extraout_RDI_00;
  int in_R8;
  uint extraout_R8;
  uint extraout_R8_00;
  int *in_R9;
  int in_R10;
  int i;
  int in_R11;
  int i_2;
  math_big_Word v;
  uint uVar1;
  int iVar2;
  int j_1;
  int iVar3;
  int unaff_R14;
  uint uVar4;
  uint shift;
  bool bVar5;
  div_t dVar6;
  div_t dVar7;
  math_big_Word *in_stack_fffffffffffffe38;
  int in_stack_fffffffffffffe40;
  int in_stack_fffffffffffffe48;
  math_big_nat in_stack_fffffffffffffe50;
  math_big_nat in_stack_fffffffffffffe68;
  math_big_nat in_stack_fffffffffffffe80;
  undefined8 in_stack_fffffffffffffe98;
  uint in_stack_fffffffffffffea0;
  int in_stack_fffffffffffffea8;
  uint local_148;
  uint local_140;
  uint local_138;
  uint uStack_130;
  int iStack_128;
  uint uStack_120;
  int iStack_118;
  uint uStack_110;
  int iStack_108;
  int j;
  int iStack_f8;
  int *piStack_f0;
  uint uStack_e8;
  int iStack_e0;
  int iStack_d8;
  uint uStack_d0;
  int iStack_c8;
  int iStack_c0;
  uint uStack_b8;
  uint uStack_b0;
  int iStack_a8;
  uint uStack_a0;
  int iStack_98;
  uint uStack_90;
  uint uStack_88;
  int local_80;
  int *piStack_78;
  int *local_70;
  int *local_68;
  int *piStack_60;
  int *piStack_58;
  int *piStack_50;
  int *piStack_48;
  int *piStack_40;
  int *piStack_38;
  int *piStack_30;
  int *piStack_28;
  int *piStack_20;
  int *local_18;
  int *local_10;
  
  __dest = (int *)CONCAT71(in_register_00000001,slow);
  while (&local_148 <= *(uint **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((in_RCX != 0) && (in_R8 != 0)) && (in_RDI + in_R8 + -1 == __dest + (in_RCX - 1))) ||
     (((in_RCX != 0 && (in_R11 != 0)) && (in_R9 + in_R11 + -1 == __dest + (in_RCX - 1))))) {
    in_RCX = 0;
    __dest = (int *)0x0;
  }
  if ((z.len == 1) && (*z.array == 1)) {
    return;
  }
  if (in_R10 == 0) {
    if (in_RCX == 0) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
      __dest = extraout_RAX_06;
    }
    *__dest = 1;
    return;
  }
  if (in_RSI != 0) {
    if ((in_RSI == 1) && (*in_RDI == 1)) {
      if (in_RCX == 0) {
        runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
        __dest = extraout_RAX;
      }
      *__dest = 1;
      return;
    }
    local_80 = in_RSI;
    local_10 = in_RDI;
    if ((in_R10 == 1) && (*in_R9 == 1)) {
      if (z.len != 0) {
        z_00.len = in_stack_fffffffffffffe40;
        z_00.array = in_stack_fffffffffffffe38;
        z_00.cap = in_stack_fffffffffffffe48;
        math_big_nat_rem(z_00,in_stack_fffffffffffffe50,in_stack_fffffffffffffe68,
                         in_stack_fffffffffffffe80);
        return;
      }
      if ((int)in_RCX < in_RSI) {
        if (in_RSI == 1) {
          runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
          in_RCX = 1;
          __dest = extraout_RAX_00;
          local_80 = 1;
        }
        else {
          in_RCX = in_RSI + 4;
          runtime_makeslice((internal_abi_Type *)&DAT_00808860,in_RSI,in_RCX,in_RDI);
          __dest = extraout_RAX_01;
        }
      }
      iVar3 = local_80;
      if (in_RSI < local_80) {
        iVar3 = in_RSI;
      }
      if (local_10 != __dest) {
        local_138 = in_RCX;
        local_68 = __dest;
        runtime_memmove(__dest,local_10,iVar3 << 3);
      }
      return;
    }
    local_18 = in_R9;
    if (z.len != 0) {
      if ((int)in_RCX < z.len) {
        if (z.len == 1) {
          runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
          bVar5 = in_R10 + -1 < 0;
          in_RCX = 1;
          __dest = extraout_RAX_02;
        }
        else {
          in_RCX = z.len + 4;
          runtime_makeslice((internal_abi_Type *)&DAT_00808860,z.len,in_RCX,in_RDI);
          bVar5 = in_R10 + -1 < 0;
          __dest = extraout_RAX_03;
          in_stack_fffffffffffffea0 = in_RCX;
        }
      }
      else {
        bVar5 = in_R10 + -1 < 0;
      }
      if ((in_R10 != 1 && SBORROW8(in_R10,1) == bVar5) && ((char)x.array == '\0')) {
        if ((*z.array & 1) != 0) {
          ~r0_00.len = in_stack_fffffffffffffea0;
          ~r0_00.array = (math_big_Word *)in_stack_fffffffffffffe98;
          ~r0_00.cap = in_stack_fffffffffffffea8;
          math_big_nat_expNNMontgomery
                    (z,in_stack_fffffffffffffe50,in_stack_fffffffffffffe68,in_stack_fffffffffffffe80
                     ,~r0_00);
          return;
        }
        i_1 = 0;
        while( true ) {
          if ((uint)z.len <= i_1) {
                    // WARNING: Subroutine does not return
            runtime_panicIndexU();
          }
          uVar1 = z.array[i_1];
          if (uVar1 != 0) break;
          i_1 = i_1 + 1;
        }
        if ((i_1 == z.len - 1U) && ((uVar1 & uVar1 - 1) == 0)) {
          iVar3 = 0;
          if (uVar1 != 0) {
            for (; (uVar1 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {
            }
          }
          z_05.len = in_stack_fffffffffffffe40;
          z_05.array = (math_big_Word *)(iVar3 + i_1 * 0x40);
          z_05.cap = in_stack_fffffffffffffe48;
          math_big_nat_expNNWindowed
                    (z_05,in_stack_fffffffffffffe50,in_stack_fffffffffffffe68,(uint)__dest,
                     in_stack_fffffffffffffe80);
          return;
        }
        ~r0_01.len = in_stack_fffffffffffffea0;
        ~r0_01.array = (math_big_Word *)in_stack_fffffffffffffe98;
        ~r0_01.cap = in_stack_fffffffffffffea8;
        math_big_nat_expNNMontgomeryEven
                  (z,in_stack_fffffffffffffe50,in_stack_fffffffffffffe68,in_stack_fffffffffffffe80,
                   ~r0_01);
        return;
      }
    }
    if ((int)in_RCX < in_RSI) {
      if (in_RSI == 1) {
        runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,local_10);
        in_RCX = 1;
        __dest = extraout_RAX_04;
        local_80 = 1;
      }
      else {
        in_RCX = in_RSI + 4;
        runtime_makeslice((internal_abi_Type *)&DAT_00808860,in_RSI,in_RCX,local_10);
        __dest = extraout_RAX_05;
      }
    }
    iVar3 = local_80;
    if (in_RSI < local_80) {
      iVar3 = in_RSI;
    }
    if (local_10 != __dest) {
      local_140 = in_RCX;
      local_70 = __dest;
      runtime_memmove(__dest,local_10,iVar3 << 3);
      __dest = local_70;
      in_RCX = local_140;
    }
    uVar1 = local_18[in_R10 + -1];
    iVar3 = 0x3f;
    if (uVar1 != 0) {
      for (; uVar1 >> iVar3 == 0; iVar3 = iVar3 + -1) {
      }
    }
    if (uVar1 == 0) {
      iVar3 = -1;
    }
    uVar4 = 1 - (iVar3 + -0x3f);
    uVar1 = uVar1 << ((byte)uVar4 & 0x3f) & -(uint)(uVar4 < 0x40);
    local_148 = 0;
    piStack_78 = (int *)0x0;
    iStack_128 = 0;
    uStack_120 = 0;
    piStack_60 = (int *)0x0;
    uStack_110 = 0;
    dVar6 = (div_t)ZEXT816(0);
    iVar2 = 0;
    i_2 = local_80;
    local_80 = iVar3;
    while( true ) {
      iStack_118 = dVar6.rem;
      piStack_58 = (int *)dVar6.quot;
      if (local_80 <= iVar2) break;
      z_01.len = in_stack_fffffffffffffe40;
      z_01.array = in_stack_fffffffffffffe38;
      z_01.cap = in_stack_fffffffffffffe48;
      uStack_130 = uVar1;
      j = iVar2;
      uStack_88 = in_RCX;
      piStack_20 = __dest;
      math_big_nat_sqr(z_01,in_stack_fffffffffffffe50,in_stack_fffffffffffffe68);
      __dest = extraout_RAX_07;
      in_RCX = extraout_RCX;
      iVar3 = extraout_RBX;
      uStack_90 = uStack_88;
      piStack_28 = piStack_20;
      if ((int)uStack_130 < 0) {
        z_02.len = in_stack_fffffffffffffe40;
        z_02.array = in_stack_fffffffffffffe38;
        z_02.cap = in_stack_fffffffffffffe48;
        iStack_98 = extraout_RBX;
        uStack_90 = extraout_RCX;
        piStack_28 = extraout_RAX_07;
        math_big_nat_mul(z_02,in_stack_fffffffffffffe50,in_stack_fffffffffffffe68,
                         in_stack_fffffffffffffe80);
        __dest = extraout_RAX_08;
        in_RCX = extraout_RCX_00;
        iVar3 = extraout_RBX_00;
        i_2 = iStack_98;
      }
      dVar6.rem = iStack_118;
      dVar6.quot = (int)piStack_58;
      uStack_a0 = uStack_120;
      iStack_a8 = iStack_128;
      piStack_30 = piStack_60;
      if (z.len != 0) {
        in_stack_fffffffffffffe38 = z.array;
        in_stack_fffffffffffffe40 = z.len;
        in_stack_fffffffffffffe48 = z.cap;
        iStack_a8 = iVar3;
        uStack_a0 = in_RCX;
        piStack_30 = __dest;
        dVar6 = math_big_nat_div((int)piStack_28,i_2);
        __dest = extraout_RDI;
        in_RCX = extraout_R8;
        iVar3 = extraout_RSI;
        uStack_90 = uStack_110;
        piStack_28 = piStack_58;
        uStack_110 = extraout_RCX_01;
      }
      iVar2 = j + 1;
      uVar1 = uStack_130 << 1;
      i_2 = iVar3;
      local_148 = uStack_90;
      iStack_128 = iStack_a8;
      uStack_120 = uStack_a0;
      piStack_78 = piStack_28;
      piStack_60 = piStack_30;
    }
    iVar3 = in_R10 + -2;
    uVar1 = uStack_110;
    dVar7 = dVar6;
    while( true ) {
      iStack_118 = dVar6.rem;
      piStack_58 = (int *)dVar6.quot;
      if (iVar3 < 0) break;
      uVar4 = local_18[iVar3];
      j_1 = 0;
      iStack_f8 = iVar3;
      piStack_f0 = __dest;
      while( true ) {
        iStack_118 = dVar6.rem;
        piStack_58 = (int *)dVar6.quot;
        if (0x3f < j_1) break;
        z_03.len = in_stack_fffffffffffffe40;
        z_03.array = in_stack_fffffffffffffe38;
        z_03.cap = in_stack_fffffffffffffe48;
        uStack_130 = uVar4;
        iStack_c8 = dVar7.rem;
        iStack_c0 = i_2;
        uStack_b8 = in_RCX;
        uStack_b0 = uVar1;
        piStack_40 = __dest;
        piStack_38 = (int *)dVar7.quot;
        math_big_nat_sqr(z_03,in_stack_fffffffffffffe50,in_stack_fffffffffffffe68);
        __dest = extraout_RAX_09;
        in_RCX = extraout_RCX_02;
        i_2 = extraout_RBX_01;
        iStack_d8 = iStack_c0;
        uStack_d0 = uStack_b8;
        piStack_48 = piStack_40;
        if ((int)uStack_130 < 0) {
          z_04.len = in_stack_fffffffffffffe40;
          z_04.array = in_stack_fffffffffffffe38;
          z_04.cap = in_stack_fffffffffffffe48;
          iStack_d8 = extraout_RBX_01;
          uStack_d0 = extraout_RCX_02;
          piStack_48 = extraout_RAX_09;
          math_big_nat_mul(z_04,in_stack_fffffffffffffe50,in_stack_fffffffffffffe68,
                           in_stack_fffffffffffffe80);
          __dest = extraout_RAX_10;
          in_RCX = extraout_RCX_03;
          i_2 = extraout_RBX_02;
        }
        if (z.len == 0) {
          dVar7.rem = iStack_c8;
          dVar7.quot = (int)piStack_38;
          local_148 = uStack_d0;
          piStack_78 = piStack_48;
          uVar1 = uStack_b0;
        }
        else {
          in_stack_fffffffffffffe38 = z.array;
          in_stack_fffffffffffffe40 = z.len;
          in_stack_fffffffffffffe48 = z.cap;
          uStack_e8 = in_RCX;
          iStack_e0 = i_2;
          piStack_50 = __dest;
          dVar7 = math_big_nat_div((int)piStack_48,iStack_d8);
          __dest = extraout_RDI_00;
          in_RCX = extraout_R8_00;
          i_2 = extraout_RSI_00;
          local_148 = uStack_b0;
          piStack_78 = piStack_38;
          uStack_120 = uStack_e8;
          iStack_128 = iStack_e0;
          piStack_60 = piStack_50;
          uVar1 = extraout_RCX_04;
        }
        piStack_58 = (int *)dVar7.quot;
        dVar6.rem = iStack_118;
        dVar6.quot = (int)piStack_58;
        j_1 = j_1 + 1;
        uVar4 = uStack_130 << 1;
      }
      iVar3 = iStack_f8 + -1;
    }
    for (; (0 < i_2 && (__dest[i_2 - 1] == 0)); i_2 = i_2 - 1) {
    }
    if (in_RCX < (uint)i_2) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    return;
  }
  return;
}



void math_big_nat_expNNMontgomeryEven
               (math_big_nat z,math_big_nat x,math_big_nat y,math_big_nat m,math_big_nat ~r0)

{
  uint uVar1;
  math_big_nat z_00;
  math_big_nat z_01;
  math_big_nat z_02;
  math_big_nat z_03;
  math_big_nat z_04;
  math_big_nat z_05;
  math_big_nat z_06;
  math_big_nat z_07;
  math_big_nat x_00;
  math_big_nat x_01;
  math_big_nat x_02;
  math_big_nat x_03;
  math_big_nat x_04;
  math_big_nat x_05;
  math_big_nat ~r0_00;
  math_big_nat ~r0_01;
  undefined auVar2 [24];
  undefined auVar3 [24];
  void *in_RAX;
  math_big_Word *extraout_RAX;
  math_big_Word *extraout_RAX_00;
  uint extraout_RAX_01;
  void *extraout_RAX_02;
  void *extraout_RAX_03;
  void *extraout_RAX_04;
  int in_RCX;
  int extraout_RCX;
  int extraout_RCX_00;
  uint n;
  undefined8 extraout_RBX;
  undefined8 extraout_RBX_00;
  int len;
  int iVar4;
  uint i;
  void *~r0_02;
  math_big_Int *~r0_03;
  int unaff_R14;
  double in_XMM0_Qa;
  uint uVar5;
  undefined in_XMM15 [16];
  undefined8 in_stack_fffffffffffffea8;
  undefined8 in_stack_fffffffffffffeb0;
  undefined8 uVar6;
  int in_stack_fffffffffffffeb8;
  int iVar7;
  undefined in_stack_fffffffffffffec0;
  undefined uVar8;
  undefined in_stack_fffffffffffffec1 [23];
  math_big_nat in_stack_fffffffffffffed8;
  math_big_nat in_stack_fffffffffffffef0;
  undefined8 in_stack_ffffffffffffff08;
  undefined8 in_stack_ffffffffffffff10;
  undefined local_d8 [16];
  int iStack_c8;
  int iStack_c0;
  int iStack_b8;
  undefined8 uStack_b0;
  int iStack_a8;
  undefined8 uStack_a0;
  int iStack_98;
  void *pvStack_90;
  uint uStack_88;
  math_big_Word *pmStack_78;
  math_big_Word *pmStack_70;
  math_big_Int mStack_68;
  math_big_Int mStack_48;
  undefined auStack_28 [24];
  undefined8 uStack_10;
  
  while (uVar5 = in_XMM15._0_8_, local_d8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (z.len == 0) {
    n = 0;
  }
  else {
    i = 0;
    while( true ) {
      if ((uint)z.len <= i) {
                    // WARNING: Subroutine does not return
        runtime_panicIndexU();
      }
      uVar1 = z.array[i];
      if (uVar1 != 0) break;
      i = i + 1;
    }
    iVar7 = 0;
    if (uVar1 != 0) {
      for (; (uVar1 >> iVar7 & 1) == 0; iVar7 = iVar7 + 1) {
      }
    }
    n = i * 0x40 + iVar7;
  }
  z_00.len = in_stack_fffffffffffffeb0;
  z_00.array = (math_big_Word *)in_stack_fffffffffffffea8;
  z_00.cap = in_stack_fffffffffffffeb8;
  x_00._1_23_ = in_stack_fffffffffffffec1;
  x_00.array._0_1_ = in_stack_fffffffffffffec0;
  math_big_nat_shl(z_00,x_00,0,in_stack_fffffffffffffed8);
  z_01.len = in_stack_fffffffffffffeb0;
  z_01.array = (math_big_Word *)in_stack_fffffffffffffea8;
  z_01.cap = in_stack_fffffffffffffeb8;
  x_01._1_23_ = in_stack_fffffffffffffec1;
  x_01.array._0_1_ = in_stack_fffffffffffffec0;
  uStack_a0 = extraout_RBX;
  iStack_98 = extraout_RCX;
  pmStack_70 = extraout_RAX;
  math_big_nat_shr(z_01,x_01,0,in_stack_fffffffffffffed8);
  z_02.len = uStack_a0;
  z_02.array = pmStack_70;
  z_02.cap = iStack_98;
  auVar2[23] = 0;
  auVar2._0_23_ = in_stack_fffffffffffffec1;
  ~r0_00.len = in_stack_ffffffffffffff10;
  ~r0_00.array = (math_big_Word *)in_stack_ffffffffffffff08;
  ~r0_00.cap = n;
  uStack_b0 = extraout_RBX_00;
  iStack_a8 = extraout_RCX_00;
  pmStack_78 = extraout_RAX_00;
  math_big_nat_expNN(z_02,(math_big_nat)(auVar2 << 8),in_stack_fffffffffffffed8,
                     in_stack_fffffffffffffef0,false,~r0_00);
  uVar8 = 0;
  z_03.len = uStack_b0;
  z_03.array = pmStack_78;
  z_03.cap = iStack_a8;
  auVar3[23] = 0;
  auVar3._0_23_ = in_stack_fffffffffffffec1;
  ~r0_01.len = in_stack_ffffffffffffff10;
  ~r0_01.array = (math_big_Word *)in_stack_ffffffffffffff08;
  ~r0_01.cap = n;
  uStack_88 = extraout_RAX_01;
  math_big_nat_expNN(z_03,(math_big_nat)(auVar3 << 8),in_stack_fffffffffffffed8,
                     in_stack_fffffffffffffef0,false,~r0_01);
  iStack_c8 = len;
  uVar6 = uStack_b0;
  iVar7 = iStack_a8;
  iStack_b8 = len;
  pvStack_90 = extraout_RAX_02;
  if (in_RCX < len) {
    if (len == 1) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,~r0_02);
      in_RCX = 1;
      iStack_c8 = 1;
      in_RAX = extraout_RAX_03;
      uVar6 = uStack_b0;
      iVar7 = iStack_a8;
    }
    else {
      in_RCX = len + 4;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,len,in_RCX,~r0_02);
      iStack_c8 = iStack_b8;
      in_RAX = extraout_RAX_04;
      uVar6 = uStack_b0;
      iVar7 = iStack_a8;
    }
  }
  iVar4 = iStack_c8;
  if (iStack_b8 < iStack_c8) {
    iVar4 = iStack_b8;
  }
  iStack_c0 = in_RCX;
  if (pvStack_90 != in_RAX) {
    runtime_memmove(in_RAX,pvStack_90,iVar4 << 3);
  }
  z_04.len = uVar6;
  z_04.array = (math_big_Word *)n;
  z_04.cap = iVar7;
  x_02._1_23_ = in_stack_fffffffffffffec1;
  x_02.array._0_1_ = uVar8;
  math_big_nat_subMod2N(z_04,x_02,in_stack_fffffffffffffed8,uStack_88,in_stack_fffffffffffffef0);
  auStack_28[0] = false;
  uStack_10 = 0;
  auStack_28._16_8_ = uVar5;
  auStack_28._8_8_ = (math_big_Word *)0x0;
  mStack_48.neg = false;
  mStack_48.abs.array = pmStack_78;
  mStack_68.neg = false;
  mStack_68.abs.array = pmStack_70;
  math_big___Int__ModInverse((math_big_Int *)auStack_28,&mStack_48,&mStack_68,~r0_03);
  z_05.len = uVar6;
  z_05.array = (math_big_Word *)n;
  z_05.cap = iVar7;
  x_03._1_23_ = in_stack_fffffffffffffec1;
  x_03.array._0_1_ = uVar8;
  math_big_nat_mul(z_05,x_03,in_stack_fffffffffffffed8,in_stack_fffffffffffffef0);
  math_big_nat_trunc(in_XMM0_Qa);
  z_06.len = uVar6;
  z_06.array = (math_big_Word *)n;
  z_06.cap = iVar7;
  x_04._1_23_ = in_stack_fffffffffffffec1;
  x_04.array._0_1_ = uVar8;
  math_big_nat_mul(z_06,x_04,in_stack_fffffffffffffed8,in_stack_fffffffffffffef0);
  z_07.len = uVar6;
  z_07.array = (math_big_Word *)n;
  z_07.cap = iVar7;
  x_05._1_23_ = in_stack_fffffffffffffec1;
  x_05.array._0_1_ = uVar8;
  math_big_nat_add(z_07,x_05,in_stack_fffffffffffffed8,in_stack_fffffffffffffef0);
  return;
}



void math_big_nat_expNNWindowed
               (math_big_nat z,math_big_nat x,math_big_nat y,uint logM,math_big_nat ~r0)

{
  math_big_nat z_00;
  math_big_nat z_01;
  math_big_nat z_02;
  math_big_nat z_03;
  math_big_nat z_04;
  math_big_nat z_05;
  math_big_nat z_06;
  math_big_nat ~r0_00;
  math_big_nat ~r0_01;
  bool bVar1;
  int iVar2;
  undefined8 *extraout_RAX;
  math_big_nat *zzp;
  undefined8 *extraout_RAX_00;
  math_big_nat *extraout_RAX_01;
  math_big_Word *extraout_RAX_02;
  math_big_Word *extraout_RAX_03;
  math_big_Word *extraout_RAX_04;
  math_big_Word *extraout_RAX_05;
  math_big_Word *pmVar3;
  int i_2;
  math_big_Word *extraout_RAX_06;
  math_big_Word *extraout_RAX_07;
  math_big_Word *extraout_RAX_08;
  math_big_Word *extraout_RAX_09;
  math_big_Word *extraout_RAX_10;
  math_big_Word *extraout_RAX_11;
  math_big_Word *extraout_RAX_12;
  math_big_Word *extraout_RAX_13;
  undefined8 *extraout_RAX_14;
  math_big_Word yi;
  int i_3;
  undefined8 *extraout_RAX_15;
  undefined8 *extraout_RAX_16;
  math_big_nat *in_RCX;
  int extraout_RCX;
  int extraout_RCX_00;
  int extraout_RCX_01;
  int extraout_RCX_02;
  int extraout_RCX_03;
  undefined8 *extraout_RCX_04;
  math_big_nat *extraout_RCX_05;
  math_big_nat *extraout_RCX_06;
  math_big_nat *pmVar4;
  math_big_Word mmask;
  int j;
  math_big_nat *in_RBX;
  math_big_nat *extraout_RBX;
  int extraout_RBX_00;
  int extraout_RBX_01;
  int extraout_RBX_02;
  int extraout_RBX_03;
  int extraout_RBX_04;
  int extraout_RBX_05;
  uint uVar5;
  int extraout_RBX_06;
  int extraout_RBX_07;
  int in_RSI;
  uint *in_RDI;
  void *extraout_RDI;
  void *extraout_RDI_00;
  void *extraout_RDI_01;
  void *extraout_RDI_02;
  void *pvVar6;
  void *extraout_RDI_03;
  void *extraout_RDI_04;
  math_big_nat *pmVar7;
  int iVar8;
  int in_R9;
  math_big_nat *p2;
  bool advance;
  math_big_nat *p1;
  undefined8 *extraout_R9;
  undefined8 *puVar9;
  uint in_R10;
  math_big_Word *extraout_R10;
  math_big_nat *p;
  int iVar10;
  math_big_Word **extraout_R11;
  math_big_Word **extraout_R11_00;
  math_big_Word **extraout_R11_01;
  math_big_Word **extraout_R11_02;
  math_big_Word **extraout_R11_03;
  math_big_Word **extraout_R11_04;
  int i_4;
  undefined8 *extraout_R11_05;
  int iVar11;
  int iVar12;
  int i;
  math_big_Word *__src;
  uint uVar13;
  int unaff_R14;
  double dVar14;
  interface___ in_stack_fffffffffffffe50;
  int in_stack_fffffffffffffe60;
  math_big_nat in_stack_fffffffffffffe68;
  math_big_nat in_stack_fffffffffffffe80;
  int in_stack_fffffffffffffe98;
  uint local_130;
  int local_128;
  int local_120;
  uint local_118;
  int i_1;
  uint local_108;
  int local_f8;
  math_big_nat *local_f0;
  int local_e8;
  uint local_e0;
  undefined8 *local_d8;
  undefined8 *local_d0;
  undefined8 *local_c8;
  math_big_Word *local_c0;
  math_big_Word *local_b8;
  math_big_nat *local_b0;
  math_big_nat *local_a8;
  undefined8 *local_98;
  math_big_nat *powers [16];
  
  while (&local_130 <= *(uint **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((int)in_R10 < 2) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_fffffffffffffe50);
  }
  if (in_RSI == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if ((*in_RDI & 1) == 0) {
    return;
  }
  if (z.array == (math_big_Word *)&DAT_00000001) {
    if (in_RCX == (math_big_nat *)0x0) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
      logM = (uint)extraout_RAX_00;
    }
    *(undefined8 *)logM = 1;
    return;
  }
  local_e0 = (int)z.array + 0x3fU >> 6;
  math_big_getNat(local_e0,in_RBX);
  local_c8 = (undefined8 *)*extraout_RAX;
  iVar8 = extraout_RAX[1];
  pmVar7 = (math_big_nat *)extraout_RAX[2];
  local_d0 = extraout_RAX;
  dVar14 = (double)FUN_0046cda2();
  iVar10 = 0;
  pmVar4 = extraout_RBX;
  pvVar6 = extraout_RDI;
  while (iVar2 = math_big_natOne.len, iVar10 < 0x10) {
    i_1 = iVar10;
    math_big_getNat(local_e0,pmVar4);
    pmVar4 = pmVar7;
    powers[i_1] = extraout_RAX_01;
    pvVar6 = extraout_RDI_00;
    pmVar7 = pmVar4;
    iVar10 = i_1 + 1;
  }
  iVar10 = powers[0]->cap;
  iVar11 = iVar2;
  if (iVar10 < math_big_natOne.len) {
    local_b8 = math_big_natOne.array;
    if (math_big_natOne.len == 1) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,pvVar6);
      iVar10 = 1;
      pmVar3 = extraout_RAX_02;
      iVar11 = 1;
      __src = local_b8;
    }
    else {
      iVar10 = math_big_natOne.len + 4;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,math_big_natOne.len,iVar10,pvVar6);
      pmVar3 = extraout_RAX_03;
      __src = local_b8;
      in_stack_fffffffffffffe98 = iVar10;
    }
  }
  else {
    pmVar3 = powers[0]->array;
    __src = math_big_natOne.array;
  }
  iVar12 = iVar11;
  if (iVar2 < iVar11) {
    iVar12 = iVar2;
  }
  if (pmVar3 != __src) {
    local_e8 = iVar11;
    local_c0 = pmVar3;
    runtime_memmove(pmVar3,__src,iVar12 << 3);
    pmVar3 = local_c0;
    iVar11 = local_e8;
  }
  powers[0]->len = iVar11;
  powers[0]->cap = iVar10;
  if (runtime_writeBarrier._0_4_ != 0) {
