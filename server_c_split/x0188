  }
  if (cmpTags) {
    return;
  }
  reflect___rtype__Name((reflect_rtype *)piStack0000000000000008,in_stack_ffffffffffffffc0);
  reflect___rtype__Name((reflect_rtype *)piStack0000000000000010,in_stack_ffffffffffffffc0);
  if (extraout_RBX_00 == extraout_RBX) {
    runtime_memequal();
    bVar1 = extraout_AL ^ 1;
  }
  else {
    bVar1 = 1;
  }
  if ((bVar1 == 0) &&
     ((piStack0000000000000010->Kind_ & 0x1f) == (piStack0000000000000008->Kind_ & 0x1f))) {
    reflect___rtype__PkgPath((reflect_rtype *)piStack0000000000000008,in_stack_ffffffffffffffc0);
    reflect___rtype__PkgPath((reflect_rtype *)piStack0000000000000010,in_stack_ffffffffffffffc0);
    if (extraout_RBX_02 == extraout_RBX_01) {
      runtime_memequal();
      bVar1 = extraout_AL_00 ^ 1;
      ~r0_00 = extraout_DIL_00;
    }
    else {
      bVar1 = 1;
      ~r0_00 = extraout_DIL;
    }
    if (bVar1 == 0) {
      reflect_haveIdenticalUnderlyingType
                (piStack0000000000000008,piStack0000000000000010,false,(bool)~r0_00);
      return;
    }
  }
  return;
}



// Local variable t:internal/abi.FuncType *[RAX:8] conflicts with parameter, skipped.
// Local variable v:internal/abi.FuncType *[RBX:8] conflicts with parameter, skipped.
// Local variable t_1:reflect.interfaceType *[RAX:8] conflicts with parameter, skipped.
// Local variable v_1:reflect.interfaceType *[RBX:8] conflicts with parameter, skipped.
// Local variable t_2:reflect.structType *[RAX:8] conflicts with parameter, skipped.
// Local variable v_2:reflect.structType *[RBX:8] conflicts with parameter, skipped.
// Local variable ch:internal/abi.ChanType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt:internal/abi.ArrayType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_1:internal/abi.ChanType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_2:internal/abi.MapType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_3:internal/abi.PtrType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_4:internal/abi.SliceType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_5:internal/abi.ArrayType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_6:internal/abi.ChanType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_7:internal/abi.MapType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_8:internal/abi.PtrType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_9:internal/abi.SliceType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_10:internal/abi.ArrayType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_11:internal/abi.ChanType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_12:internal/abi.MapType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_13:internal/abi.PtrType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_14:internal/abi.SliceType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_15:internal/abi.ArrayType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_16:internal/abi.ChanType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_17:internal/abi.MapType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_18:internal/abi.PtrType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_19:internal/abi.SliceType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_20:internal/abi.ArrayType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_21:internal/abi.ChanType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_22:internal/abi.MapType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_23:internal/abi.PtrType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_24:internal/abi.SliceType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_25:internal/abi.ArrayType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_26:internal/abi.ChanType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_27:internal/abi.MapType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_28:internal/abi.PtrType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_29:internal/abi.SliceType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_30:internal/abi.ArrayType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_31:internal/abi.ChanType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_32:internal/abi.MapType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_33:internal/abi.PtrType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_34:internal/abi.SliceType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_35:internal/abi.ArrayType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_36:internal/abi.ChanType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_37:internal/abi.MapType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_38:internal/abi.PtrType *[RBX:8] conflicts with parameter, skipped.
// Local variable tt_39:internal/abi.SliceType *[RBX:8] conflicts with parameter, skipped.

void reflect_haveIdenticalUnderlyingType
               (internal_abi_Type *T,internal_abi_Type *V,bool cmpTags,bool ~r0)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  uintptr uVar5;
  uintptr uVar6;
  int iVar7;
  int iVar8;
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  char extraout_AL_02;
  byte extraout_AL_03;
  byte bVar9;
  char extraout_AL_04;
  char extraout_AL_05;
  internal_abi_Type *piVar10;
  uint uVar11;
  int extraout_RBX;
  int extraout_RBX_00;
  int extraout_RBX_01;
  int extraout_RBX_02;
  int extraout_RBX_03;
  int extraout_RBX_04;
  dword dVar12;
  reflect_Kind kind;
  internal_abi_Type *piVar13;
  uintptr uadd_1;
  int iVar14;
  uintptr uadd_2;
  bool bVar15;
  ushort uVar16;
  uintptr uadd;
  uint uVar17;
  uint uVar18;
  uint uVar19;
  uintptr uadd_3;
  uint uVar20;
  int unaff_R14;
  internal_abi_Type *piStack0000000000000008;
  internal_abi_Type *piStack0000000000000010;
  char cStack0000000000000018;
  string in_stack_ffffffffffffff98;
  int i_2;
  int i_1;
  int i;
  
  piStack0000000000000008 = T;
  piStack0000000000000010 = V;
  cStack0000000000000018 = cmpTags;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (piStack0000000000000010 == piStack0000000000000008) {
    return;
  }
  bVar9 = piStack0000000000000008->Kind_ & 0x1f;
  bVar15 = (bool)(piStack0000000000000010->Kind_ & 0x1f);
  if (bVar15 != (bool)bVar9) {
    return;
  }
  if ((piStack0000000000000008->Kind_ & 0x1f) == 0) {
    return;
  }
  if (((bVar9 < 0x11) || (bVar9 == 0x18)) || (bVar9 == 0x1a)) {
    return;
  }
  if (bVar9 < 0x14) {
    if (bVar9 == 0x11) {
      iVar14._0_4_ = piStack0000000000000008[1].Hash;
      iVar14._4_1_ = piStack0000000000000008[1].TFlag;
      iVar14._5_1_ = piStack0000000000000008[1].Align_;
      iVar14._6_1_ = piStack0000000000000008[1].FieldAlign_;
      iVar14._7_1_ = piStack0000000000000008[1].Kind_;
      iVar1._0_4_ = piStack0000000000000010[1].Hash;
      iVar1._4_1_ = piStack0000000000000010[1].TFlag;
      iVar1._5_1_ = piStack0000000000000010[1].Align_;
      iVar1._6_1_ = piStack0000000000000010[1].FieldAlign_;
      iVar1._7_1_ = piStack0000000000000010[1].Kind_;
      if (iVar1 == iVar14) {
        reflect_haveIdenticalType
                  ((internal_abi_Type *)piStack0000000000000008[1].Size_,
                   (internal_abi_Type *)piStack0000000000000010[1].Size_,
                   (bool)cStack0000000000000018,bVar15);
      }
      return;
    }
    if (bVar9 == 0x12) {
      if (piStack0000000000000008[1].PtrBytes == piStack0000000000000010[1].PtrBytes) {
        reflect_haveIdenticalType
                  ((internal_abi_Type *)piStack0000000000000008[1].Size_,
                   (internal_abi_Type *)piStack0000000000000010[1].Size_,
                   (bool)cStack0000000000000018,bVar15);
      }
      return;
    }
    if (bVar9 != 0x13) {
      return;
    }
    if ((*(short *)((int)&piStack0000000000000010[1].Size_ + 2) ==
         *(short *)((int)&piStack0000000000000008[1].Size_ + 2)) &&
       (*(short *)&piStack0000000000000010[1].Size_ == *(short *)&piStack0000000000000008[1].Size_))
    {
      uVar11 = 0;
      while( true ) {
        uVar17 = (uint)*(ushort *)&piStack0000000000000008[1].Size_;
        if ((int)uVar17 <= (int)uVar11) {
          uVar11 = 0;
          while( true ) {
            dVar12 = (dword)*(ushort *)((int)&piStack0000000000000008[1].Size_ + 2);
            if ((int)(uint)(dVar12 & 0x7fff) <= (int)uVar11) {
              return;
            }
            if ((piStack0000000000000008->TFlag & 1) == 0) {
              uadd_2 = 0x38;
            }
            else {
              uadd_2 = 0x48;
            }
            uVar19 = (uint)*(ushort *)&piStack0000000000000008[1].Size_;
            uVar17 = (uint)((dVar12 & 0x7fff) + (dword)*(ushort *)&piStack0000000000000008[1].Size_
                           & 0xffff);
            if (uVar17 < uVar19) {
                    // WARNING: Subroutine does not return
              runtime_panicSlice3C();
            }
            uVar17 = uVar17 - uVar19;
            if (uVar17 <= uVar11) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            uVar16 = *(ushort *)((int)&piStack0000000000000010[1].Size_ + 2) & 0x7fff;
            if (uVar16 == 0) {
              uVar18 = 0;
              iVar14 = 0;
            }
            else {
              if ((piStack0000000000000010->TFlag & 1) == 0) {
                uadd_3 = 0x38;
              }
              else {
                uadd_3 = 0x48;
              }
              uVar20 = (uint)*(ushort *)&piStack0000000000000010[1].Size_;
              uVar18 = (uint)(ushort)(uVar16 + *(ushort *)&piStack0000000000000010[1].Size_);
              if (uVar18 < uVar20) {
                    // WARNING: Subroutine does not return
                runtime_panicSlice3C();
              }
              uVar18 = uVar18 - uVar20;
              iVar14 = (int)&piStack0000000000000010->Size_ +
                       ((int)-uVar18 >> 0x3f & uVar20 << 3) + uadd_3;
            }
            if (uVar18 <= uVar11) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            reflect_haveIdenticalType
                      (*(internal_abi_Type **)
                        ((int)&piStack0000000000000008->Size_ +
                        uVar11 * 8 + ((int)-uVar17 >> 0x3f & uVar19 << 3) + uadd_2),
                       *(internal_abi_Type **)(iVar14 + uVar11 * 8),(bool)cStack0000000000000018,
                       SUB81(iVar14,0));
            if (extraout_AL_05 == '\0') break;
            uVar11 = uVar11 + 1;
          }
          return;
        }
        if ((piStack0000000000000008->TFlag & 1) == 0) {
          uadd = 0x38;
        }
        else {
          uadd = 0x48;
        }
        if (0x10000 < uVar17) {
                    // WARNING: Subroutine does not return
          runtime_panicSlice3Alen();
        }
        if (uVar17 <= uVar11) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        piVar10 = *(internal_abi_Type **)((int)&piStack0000000000000008->Size_ + uVar11 * 8 + uadd);
        if ((piStack0000000000000010->TFlag & 1) == 0) {
          uadd_1 = 0x38;
        }
        else {
          uadd_1 = 0x48;
        }
        uVar17 = (uint)*(ushort *)&piStack0000000000000010[1].Size_;
        if (*(ushort *)&piStack0000000000000010[1].Size_ == 0) {
          uVar17 = 0;
          iVar14 = 0;
        }
        else {
          iVar14 = (int)&piStack0000000000000010->Size_ + uadd_1;
          if (0x10000 < uVar17) {
                    // WARNING: Subroutine does not return
            runtime_panicSlice3Alen();
          }
        }
        if (uVar17 <= uVar11) break;
        reflect_haveIdenticalType
                  (piVar10,*(internal_abi_Type **)(iVar14 + uVar11 * 8),(bool)cStack0000000000000018
                   ,SUB81(piVar10,0));
        if (extraout_AL_04 == '\0') {
          return;
        }
        uVar11 = uVar11 + 1;
      }
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    return;
  }
  if (0x15 < bVar9) {
    if (bVar9 < 0x18) {
      if (bVar9 == 0x16) {
        piVar10 = (internal_abi_Type *)piStack0000000000000008[1].Size_;
      }
      else {
        piVar10 = (internal_abi_Type *)piStack0000000000000008[1].Size_;
      }
      if (bVar15 == true) {
        piVar13 = (internal_abi_Type *)piStack0000000000000010[1].Size_;
      }
      else if (bVar15 == true) {
        piVar13 = (internal_abi_Type *)piStack0000000000000010[1].Size_;
      }
      else {
        piVar13 = (internal_abi_Type *)0x0;
      }
      reflect_haveIdenticalType(piVar10,piVar13,(bool)cStack0000000000000018,bVar15);
      return;
    }
    if (bVar9 != 0x19) {
      return;
    }
    iVar2._0_4_ = piStack0000000000000010[1].Hash;
    iVar2._4_1_ = piStack0000000000000010[1].TFlag;
    iVar2._5_1_ = piStack0000000000000010[1].Align_;
    iVar2._6_1_ = piStack0000000000000010[1].FieldAlign_;
    iVar2._7_1_ = piStack0000000000000010[1].Kind_;
    iVar3._0_4_ = piStack0000000000000008[1].Hash;
    iVar3._4_1_ = piStack0000000000000008[1].TFlag;
    iVar3._5_1_ = piStack0000000000000008[1].Align_;
    iVar3._6_1_ = piStack0000000000000008[1].FieldAlign_;
    iVar3._7_1_ = piStack0000000000000008[1].Kind_;
    if (iVar3 != iVar2) {
      return;
    }
    internal_abi_Name_Name((uint8 *)piStack0000000000000008[1].Size_,in_stack_ffffffffffffff98);
    internal_abi_Name_Name((uint8 *)piStack0000000000000010[1].Size_,in_stack_ffffffffffffff98);
    if ((extraout_RBX_00 == extraout_RBX) && (runtime_memequal(), extraout_AL_00 != '\0')) {
      iVar4._0_4_ = piStack0000000000000008[1].Hash;
      iVar4._4_1_ = piStack0000000000000008[1].TFlag;
      iVar4._5_1_ = piStack0000000000000008[1].Align_;
      iVar4._6_1_ = piStack0000000000000008[1].FieldAlign_;
      iVar4._7_1_ = piStack0000000000000008[1].Kind_;
      uVar11 = 0;
      while( true ) {
        if (iVar4 <= (int)uVar11) {
          return;
        }
        uVar17._0_4_ = piStack0000000000000008[1].Hash;
        uVar17._4_1_ = piStack0000000000000008[1].TFlag;
        uVar17._5_1_ = piStack0000000000000008[1].Align_;
        uVar17._6_1_ = piStack0000000000000008[1].FieldAlign_;
        uVar17._7_1_ = piStack0000000000000008[1].Kind_;
        if (uVar17 <= uVar11) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        uVar19._0_4_ = piStack0000000000000010[1].Hash;
        uVar19._4_1_ = piStack0000000000000010[1].TFlag;
        uVar19._5_1_ = piStack0000000000000010[1].Align_;
        uVar19._6_1_ = piStack0000000000000010[1].FieldAlign_;
        uVar19._7_1_ = piStack0000000000000010[1].Kind_;
        if (uVar19 <= uVar11) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        uVar5 = piStack0000000000000008[1].PtrBytes;
        uVar6 = piStack0000000000000010[1].PtrBytes;
        internal_abi_Name_Name
                  ((internal_abi_Name)*(uint8 **)(uVar5 + uVar11 * 0x18),in_stack_ffffffffffffff98);
        internal_abi_Name_Name
                  ((internal_abi_Name)*(uint8 **)(uVar6 + uVar11 * 0x18),in_stack_ffffffffffffff98);
        if ((extraout_RBX_02 != extraout_RBX_01) || (runtime_memequal(), extraout_AL_01 == '\0'))
        break;
        reflect_haveIdenticalType
                  (*(internal_abi_Type **)(uVar5 + 8 + uVar11 * 0x18),
                   *(internal_abi_Type **)(uVar6 + 8 + uVar11 * 0x18),(bool)cStack0000000000000018,
                   SUB81(uVar6,0));
        if (extraout_AL_02 == '\0') {
          return;
        }
        if (cStack0000000000000018 != '\0') {
          internal_abi_Name_Tag
                    ((internal_abi_Name)*(uint8 **)(uVar5 + uVar11 * 0x18),in_stack_ffffffffffffff98
                    );
          internal_abi_Name_Tag
                    ((internal_abi_Name)*(uint8 **)(uVar6 + uVar11 * 0x18),in_stack_ffffffffffffff98
                    );
          if (extraout_RBX_04 == extraout_RBX_03) {
            runtime_memequal();
            bVar9 = extraout_AL_03 ^ 1;
          }
          else {
            bVar9 = 1;
          }
          if (bVar9 != 0) {
            return;
          }
        }
        if (*(int *)(uVar6 + 0x10 + uVar11 * 0x18) != *(int *)(uVar5 + 0x10 + uVar11 * 0x18)) {
          return;
        }
        if (((**(byte **)(uVar6 + uVar11 * 0x18) & 8) != 0) !=
            ((**(byte **)(uVar5 + uVar11 * 0x18) & 8) != 0)) {
          return;
        }
        uVar11 = uVar11 + 1;
      }
      return;
    }
    return;
  }
  if (bVar9 == 0x14) {
    iVar7._0_4_ = piStack0000000000000008[1].Hash;
    iVar7._4_1_ = piStack0000000000000008[1].TFlag;
    iVar7._5_1_ = piStack0000000000000008[1].Align_;
    iVar7._6_1_ = piStack0000000000000008[1].FieldAlign_;
    iVar7._7_1_ = piStack0000000000000008[1].Kind_;
    if ((iVar7 == 0) &&
       (iVar8._0_4_ = piStack0000000000000010[1].Hash,
       iVar8._4_1_ = piStack0000000000000010[1].TFlag,
       iVar8._5_1_ = piStack0000000000000010[1].Align_,
       iVar8._6_1_ = piStack0000000000000010[1].FieldAlign_,
       iVar8._7_1_ = piStack0000000000000010[1].Kind_, iVar8 == 0)) {
      return;
    }
    return;
  }
  if (bVar15 == true) {
    piVar10 = (internal_abi_Type *)piStack0000000000000010[1].Size_;
  }
  else {
    piVar10 = (internal_abi_Type *)0x0;
  }
  reflect_haveIdenticalType
            ((internal_abi_Type *)piStack0000000000000008[1].Size_,piVar10,
             (bool)cStack0000000000000018,bVar15);
  if (extraout_AL == '\0') {
    return;
  }
  bVar9 = piStack0000000000000008->Kind_ & 0x1f;
  if (bVar9 < 0x13) {
    if (bVar9 == 0x11) {
      piVar10 = (internal_abi_Type *)piStack0000000000000008[1].Size_;
    }
    else if (bVar9 == 0x12) {
      piVar10 = (internal_abi_Type *)piStack0000000000000008[1].Size_;
    }
    else {
LAB_004ccf0c:
      piVar10 = (internal_abi_Type *)0x0;
    }
  }
  else if (bVar9 == 0x15) {
    piVar10 = (internal_abi_Type *)piStack0000000000000008[1].PtrBytes;
  }
  else if (bVar9 == 0x16) {
    piVar10 = (internal_abi_Type *)piStack0000000000000008[1].Size_;
  }
  else {
    if (bVar9 != 0x17) goto LAB_004ccf0c;
    piVar10 = (internal_abi_Type *)piStack0000000000000008[1].Size_;
  }
  bVar15 = (bool)(piStack0000000000000010->Kind_ & 0x1f);
  if (bVar15 < 0x13) {
    if (bVar15 == true) {
      piVar13 = (internal_abi_Type *)piStack0000000000000010[1].Size_;
      goto LAB_004ccf66;
    }
    if (bVar15 == true) {
      piVar13 = (internal_abi_Type *)piStack0000000000000010[1].Size_;
      goto LAB_004ccf66;
    }
  }
  else {
    if (bVar15 == true) {
      piVar13 = (internal_abi_Type *)piStack0000000000000010[1].PtrBytes;
      goto LAB_004ccf66;
    }
    if (bVar15 == true) {
      piVar13 = (internal_abi_Type *)piStack0000000000000010[1].Size_;
      goto LAB_004ccf66;
    }
    if (bVar15 == true) {
      piVar13 = (internal_abi_Type *)piStack0000000000000010[1].Size_;
      goto LAB_004ccf66;
    }
  }
  piVar13 = (internal_abi_Type *)0x0;
LAB_004ccf66:
  reflect_haveIdenticalType(piVar10,piVar13,(bool)cStack0000000000000018,bVar15);
  return;
}



void reflect_typesByString(string s,___internal_abi_Type ~r0)

{
  uint uVar1;
  uint uVar2;
  __unsafe_Pointer ~r0_00;
  runtime_slice ~r0_01;
  char extraout_AL;
  int extraout_RAX;
  int h;
  int extraout_RAX_00;
  void *pvVar3;
  void *extraout_RAX_01;
  void *extraout_RAX_02;
  uint uVar4;
  uint uVar5;
  uint extraout_RCX;
  uint extraout_RCX_00;
  int in_RBX;
  uint extraout_RBX;
  int extraout_RBX_00;
  uint newLen;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  int extraout_RSI;
  int *extraout_RDI;
  int *piVar6;
  uint uVar7;
  int iVar8;
  internal_abi_Type **extraout_R11;
  void *section;
  int unaff_R14;
  int j_1;
  string in_stack_ffffffffffffff18;
  int in_stack_ffffffffffffff28;
  ____int32 in_stack_ffffffffffffff30;
  int offsI;
  int i;
  uint local_60;
  uint local_58;
  int j;
  int local_48;
  int local_40;
  int local_38;
  void *local_30;
  int local_28;
  internal_abi_Type *typ;
  void *local_18;
  int *local_10;
  
  while (&i <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.cap = in_stack_ffffffffffffff28;
  ~r0_00.array = (void **)in_stack_ffffffffffffff18.str;
  ~r0_00.len = in_stack_ffffffffffffff18.len;
  reflect_typelinks(~r0_00,in_stack_ffffffffffffff30);
  uVar4 = 0;
  uVar5 = 0;
  newLen = 0;
  pvVar3 = (void *)0x0;
  iVar8 = extraout_RAX;
  piVar6 = extraout_RDI;
  local_40 = extraout_RAX;
  do {
    if (extraout_RSI <= (int)uVar4) {
      return;
    }
    if (extraout_RBX <= uVar4) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    uVar2 = piVar6[1];
    local_28 = *piVar6;
    local_38 = *(int *)(iVar8 + uVar4 * 8);
    j_1 = 0;
    uVar1 = uVar2;
    local_30 = pvVar3;
    local_10 = piVar6;
    while (uVar7 = uVar1, pvVar3 = local_30, j_1 < (int)uVar7) {
      iVar8 = (int)(uVar7 - j_1) >> 1;
      uVar1 = iVar8 + j_1;
      if (uVar2 <= uVar1) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      i = j_1;
      j = uVar1;
      local_48 = iVar8;
      reflect___rtype__String
                ((reflect_rtype *)(*(sdword *)(local_28 + uVar1 * 4) + local_38),
                 in_stack_ffffffffffffff18);
      runtime_cmpstring();
      iVar8 = local_40;
      uVar1 = j;
      j_1 = i;
      if (extraout_RAX_00 < 0) {
        j_1 = local_48 + i + 1;
        uVar1 = uVar7;
      }
    }
    for (; j_1 < (int)uVar2; j_1 = j_1 + 1) {
      if (uVar2 <= (uint)j_1) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      typ = (internal_abi_Type *)(*(sdword *)(local_28 + j_1 * 4) + local_38);
      local_60 = uVar5;
      local_58 = newLen;
      local_18 = pvVar3;
      reflect___rtype__String((reflect_rtype *)typ,in_stack_ffffffffffffff18);
      iVar8 = local_40;
      uVar5 = local_60;
      newLen = local_58;
      pvVar3 = local_18;
      if ((extraout_RBX_00 != in_RBX) ||
         (runtime_memequal(), iVar8 = local_40, uVar5 = local_60, newLen = local_58,
         pvVar3 = local_18, extraout_AL == '\0')) break;
      newLen = local_58 + 1;
      if (local_60 < newLen) {
        ~r0_01.cap = in_stack_ffffffffffffff28;
        ~r0_01.array = in_stack_ffffffffffffff18.str;
        ~r0_01.len = in_stack_ffffffffffffff18.len;
        runtime_growslice(local_18,newLen,local_60,1,(internal_abi_Type *)&DAT_0089b1a0,~r0_01);
        pvVar3 = extraout_RAX_01;
        uVar5 = extraout_RCX;
        newLen = extraout_RBX_01;
      }
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = typ;
        extraout_R11[1] = *(internal_abi_Type **)((int)extraout_RAX_02 + extraout_RBX_02 * 8 + -8);
        pvVar3 = extraout_RAX_02;
        uVar5 = extraout_RCX_00;
        newLen = extraout_RBX_02;
      }
      *(internal_abi_Type **)((int)pvVar3 + newLen * 8 + -8) = typ;
      iVar8 = local_40;
    }
    piVar6 = local_10 + 3;
    uVar4 = uVar4 + 1;
  } while( true );
}



// WARNING: Removing unreachable block (ram,0x004cd9ae)
// WARNING: Removing unreachable block (ram,0x004cda08)
// DWARF original prototype: void reflect.initFuncTypes(int n, reflect.Type ~r0, reflect.Type ~r0)

void reflect_initFuncTypes(int n,reflect_Type ~r0,reflect_Type ~r0_1)

{
  __reflect_StructField fields;
  reflect_Type ~r0_00;
  reflect_Type ~r0_01;
  reflect_Type ~r0_1_00;
  void *pvVar1;
  reflect_Type *extraout_RAX;
  reflect_Type *extraout_RAX_00;
  runtime_itab *extraout_RAX_01;
  int iVar2;
  undefined1 *puVar3;
  undefined8 extraout_RBX;
  undefined8 extraout_RBX_00;
  undefined8 uVar4;
  reflect_Type *extraout_RSI;
  reflect_Type *prVar5;
  int extraout_RDI;
  reflect_Type **extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  bool bVar6;
  reflect_Type in_stack_fffffffffffffe30;
  runtime_itab *in_stack_fffffffffffffe40;
  void *in_stack_fffffffffffffe48;
  undefined7 in_stack_fffffffffffffe50;
  undefined uVar7;
  void *in_stack_fffffffffffffe60;
  undefined local_158 [120];
  undefined *local_e0;
  undefined8 local_d8;
  runtime_itab *local_c0;
  undefined *local_b8;
  undefined *local_78;
  undefined8 local_70;
  undefined local_58 [72];
  code **local_10;
  
  while (local_158 + 8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  LOCK();
  bVar6 = reflect_funcTypesMutex.state == 0;
  if (bVar6) {
    reflect_funcTypesMutex.state = 1;
  }
  UNLOCK();
  if (!bVar6) {
    sync___Mutex__lockSlow(&reflect_funcTypesMutex);
  }
  local_158._8_8_ = &reflect_funcTypesMutex;
  local_158._0_8_ = reflect_initFuncTypes_func1;
  local_10 = (code **)local_158;
  uVar7 = 1;
  prVar5 = reflect_funcTypes.array;
  if (reflect_funcTypes.len <= n) {
    pvVar1 = (void *)(n + 1);
    runtime_makeslicecopy
              ((internal_abi_Type *)&DAT_00894180,(int)(void *)(n + 1),reflect_funcTypes.len,
               reflect_funcTypes.array,(void *)reflect_funcTypes.len);
    reflect_funcTypes.len = (int)pvVar1;
    prVar5 = extraout_RAX;
    reflect_funcTypes.cap = reflect_funcTypes.len;
    in_stack_fffffffffffffe60 = (void *)reflect_funcTypes.len;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_00;
      extraout_R11[1] = reflect_funcTypes.array;
      prVar5 = extraout_RAX_00;
    }
  }
  reflect_funcTypes.array = prVar5;
  if ((uint)reflect_funcTypes.len <= (uint)n) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  iVar2 = n * 0x10;
  if (reflect_funcTypes.array[n].tab != (runtime_itab *)0x0) {
    (**local_10)();
    return;
  }
  puVar3 = go_itab__reflect_rtype_reflect_Type;
  ~r0_00.data = in_stack_fffffffffffffe48;
  ~r0_00.tab = in_stack_fffffffffffffe40;
  reflect_ArrayOf(n,in_stack_fffffffffffffe30,~r0_00);
  local_58._0_16_ = FUN_0046cd82();
  local_d8 = 8;
  local_e0 = &DAT_008b1c9e;
  local_70 = 4;
  local_78 = &DAT_008ae6e3;
  fields.cap = (int)in_stack_fffffffffffffe40;
  fields.array = (reflect_StructField *)in_stack_fffffffffffffe30.tab;
  fields.len = (int)in_stack_fffffffffffffe30.data;
  ~r0_01.data._0_7_ = in_stack_fffffffffffffe50;
  ~r0_01.tab = (runtime_itab *)in_stack_fffffffffffffe48;
  ~r0_01.data._7_1_ = uVar7;
  ~r0_1_00.data = in_stack_fffffffffffffe60;
  ~r0_1_00.tab = (runtime_itab *)puVar3;
  local_c0 = (runtime_itab *)puVar3;
  local_b8 = &DAT_008616c0;
  reflect_StructOf(fields,~r0_01,~r0_1_00);
  prVar5 = reflect_funcTypes.array;
  if ((uint)n < (uint)reflect_funcTypes.len) {
    reflect_funcTypes.array[n].tab = extraout_RAX_01;
    uVar4 = extraout_RBX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RBX_00;
      extraout_R11_00[1] = *(undefined8 *)((int)&extraout_RSI->data + extraout_RDI);
      uVar4 = extraout_RBX_00;
      prVar5 = extraout_RSI;
      iVar2 = extraout_RDI;
    }
    *(undefined8 *)((int)&prVar5->data + iVar2) = uVar4;
    if ((uint)n < (uint)reflect_funcTypes.len) {
      (**local_10)();
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Unknown calling convention

void reflect_initFuncTypes_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  sync___Mutex__Unlock(*(sync_Mutex **)(in_RDX + 8));
  return;
}



// DWARF original prototype: void reflect.FuncOf([]reflect.Type in, []reflect.Type out, bool
// variadic, reflect.Type ~r0, reflect.Type ~r0)

void reflect_FuncOf(__reflect_Type in,__reflect_Type out,bool variadic,reflect_Type ~r0,
                   reflect_Type ~r0_1)

{
  undefined auVar1 [16];
  undefined4 uVar2;
  undefined4 *puVar3;
  undefined4 uVar4;
  undefined4 uVar5;
  internal_abi_TypeOff iVar6;
  reflect_Value v;
  reflect_Value v_00;
  reflect_Value v_01;
  reflect_Value v_02;
  reflect_Value v_03;
  reflect_Value v_04;
  reflect_Value v_05;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  reflect_Type ~r0_1_00;
  interface___ value;
  interface___ value_00;
  string tag;
  reflect_Value ~r0_02;
  ___internal_abi_Type ~r0_03;
  reflect_Value ~r0_04;
  reflect_Value ~r0_05;
  reflect_Value ~r0_06;
  reflect_Value ~r0_07;
  reflect_Value ~r0_08;
  undefined uVar7;
  undefined uVar8;
  undefined uVar9;
  undefined uVar10;
  char extraout_CL;
  bool ok;
  char extraout_CL_00;
  bool ok_1;
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  internal_abi_NameOff extraout_EAX;
  undefined7 in_register_00000001;
  runtime_itab **pprVar11;
  int i;
  uintptr ~r0_09;
  internal_abi_FuncType *extraout_RAX;
  uintptr ~r0_10;
  runtime_itab **extraout_RAX_00;
  int iVar12;
  runtime_itab **extraout_RAX_01;
  int extraout_RAX_02;
  runtime_itab **extraout_RAX_03;
  int extraout_RAX_04;
  internal_abi_Type *have;
  internal_abi_Type *have_00;
  undefined8 extraout_RAX_05;
  int extraout_RAX_06;
  void *ptr;
  int n;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  uint extraout_RCX_02;
  uint oldCap;
  internal_abi_FuncType *prototype;
  internal_abi_FuncType *piVar13;
  int32 ~r0_11;
  int in_RBX;
  runtime_itab **extraout_RBX;
  uint extraout_RBX_00;
  runtime_itab **extraout_RBX_01;
  uint extraout_RBX_02;
  runtime_itab **extraout_RBX_03;
  runtime_itab **oldPtr;
  int *extraout_RBX_04;
  int *extraout_RBX_05;
  undefined8 extraout_RBX_06;
  int extraout_RBX_07;
  internal_abi_Type *tt;
  internal_abi_Type *t_1;
  internal_abi_Type *t;
  uint32 hash;
  uint32 uVar14;
  int in_RSI;
  uint uVar15;
  uint extraout_RSI;
  uint extraout_RSI_00;
  runtime_itab **in_RDI;
  uint newLen;
  runtime_itab *extraout_RDI;
  int extraout_RDI_00;
  undefined8 extraout_RDI_01;
  undefined8 extraout_RDI_02;
  undefined8 extraout_RDI_03;
  undefined8 uVar16;
  undefined8 extraout_RDI_04;
  int iVar17;
  int iVar18;
  runtime_itab **extraout_R8;
  char in_R9B;
  int extraout_R9;
  int extraout_R9_00;
  int iVar19;
  uint extraout_R10;
  runtime_itab **extraout_R10_00;
  runtime_itab **extraout_R11;
  runtime_itab *prVar20;
  runtime_itab **extraout_R11_00;
  int unaff_R14;
  bool bVar21;
  interface___ in_stack_fffffffffffffec0;
  internal_abi_Type *in_stack_fffffffffffffed0;
  void *in_stack_fffffffffffffed8;
  reflect_flag in_stack_fffffffffffffee0;
  reflect_flag in_stack_fffffffffffffee8;
  undefined4 local_f8;
  undefined4 local_f4;
  uint32 local_f0;
  uint32 local_ec;
  undefined8 local_e8;
  uint local_e0;
  int local_d8;
  int local_d0;
  runtime_itab **local_c8;
  undefined local_c0 [8];
  code *local_b8;
  uint32 local_b0;
  internal_abi_Type *local_a8;
  internal_abi_Type *local_a0;
  internal_abi_Type *local_98;
  uintptr *local_90;
  runtime_itab *local_88;
  undefined8 local_80;
  runtime_itab *local_78;
  int local_70;
  int local_68;
  int local_60;
  internal_abi_FuncType *ft;
  runtime_itab **local_50;
  int local_48;
  undefined local_40 [16];
  interface___ ifunc;
  undefined local_20 [16];
  code **local_10;
  
  pprVar11 = (runtime_itab **)CONCAT71(in_register_00000001,variadic);
  while (local_c0 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_R9B != '\0') {
    if (in_RBX == 0) {
      bVar21 = true;
    }
    else {
      iVar12 = (*(code *)pprVar11[(in_RBX + -1) * 2][4].fun[0])(pprVar11[(in_RBX + -1) * 2 + 1]);
      bVar21 = iVar12 != 0x17;
    }
    if (bVar21) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_fffffffffffffec0);
    }
  }
  ifunc._type = (internal_abi_Type *)&DAT_007ffee0;
  ifunc.data = (void *)0x0;
  local_e0 = in_RBX + in_RSI;
  if (0x80 < (int)local_e0) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_fffffffffffffec0);
  }
  local_90 = &DAT_007ffee0;
  ~r0_1_00.data = in_stack_fffffffffffffed8;
  ~r0_1_00.tab = (runtime_itab *)in_stack_fffffffffffffed0;
  reflect_initFuncTypes(local_e0,(reflect_Type)in_stack_fffffffffffffec0,~r0_1_00);
  ~r0_02.ptr = in_stack_fffffffffffffed8;
  ~r0_02.typ_ = in_stack_fffffffffffffed0;
  ~r0_02.flag = in_stack_fffffffffffffee0;
  reflect_New((reflect_Type)in_stack_fffffffffffffec0,~r0_02);
  v.flag = (reflect_flag)in_stack_fffffffffffffed0;
  v.typ_ = in_stack_fffffffffffffec0._type;
  v.ptr = in_stack_fffffffffffffec0.data;
  ~r0_04.ptr = (void *)in_stack_fffffffffffffee0;
  ~r0_04.typ_ = (internal_abi_Type *)in_stack_fffffffffffffed8;
  ~r0_04.flag = in_stack_fffffffffffffee8;
  reflect_Value_Elem(v,~r0_04);
  v_00.flag = (reflect_flag)in_stack_fffffffffffffed0;
  v_00.typ_ = in_stack_fffffffffffffec0._type;
  v_00.ptr = in_stack_fffffffffffffec0.data;
  ~r0_05.ptr = (void *)in_stack_fffffffffffffee0;
  ~r0_05.typ_ = (internal_abi_Type *)in_stack_fffffffffffffed8;
  ~r0_05.flag = in_stack_fffffffffffffee8;
  local_50 = extraout_RBX;
  local_48 = i;
  reflect_Value_Field(v_00,i,~r0_05);
  v_01.flag = (reflect_flag)in_stack_fffffffffffffed0;
