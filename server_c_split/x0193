          ~r0_01.array = in_stack_fffffffffffffea0._type;
          ~r0_01.len = (int)in_stack_fffffffffffffea0.data;
          runtime_growslice(oldPtr_00,(int)pvVar14,(int)pvVar12,1,(internal_abi_Type *)&DAT_00807920
                            ,~r0_01);
          oldPtr_00 = extraout_RAX_01;
          pvVar12 = extraout_RCX_01;
          pvVar14 = extraout_RBX_06;
        }
        *(undefined *)((int)pvVar14 + -1 + (int)oldPtr_00) = 0x81;
        uVar17 = local_d8;
        for (uVar16 = (local_d8 - local_e0) - 1; 0x7f < uVar16; uVar16 = uVar16 >> 7) {
          pvVar14 = (void *)((int)pvVar14 + 1);
          if (pvVar12 < pvVar14) {
            ~r0_09.cap = (int)in_stack_fffffffffffffeb0;
            ~r0_09.array = in_stack_fffffffffffffea0._type;
            ~r0_09.len = (int)in_stack_fffffffffffffea0.data;
            runtime_growslice(oldPtr_00,(int)pvVar14,(int)pvVar12,1,
                              (internal_abi_Type *)&DAT_00807920,~r0_09);
            oldPtr_00 = extraout_RAX_12;
            pvVar12 = extraout_RCX_13;
            pvVar14 = extraout_RBX_18;
            uVar17 = local_d8;
          }
          *(byte *)((int)pvVar14 + -1 + (int)oldPtr_00) = (byte)uVar16 | 0x80;
        }
        pvVar14 = (void *)((int)pvVar14 + 1);
        if (pvVar12 < pvVar14) {
          ~r0_10.cap = (int)in_stack_fffffffffffffeb0;
          ~r0_10.array = in_stack_fffffffffffffea0._type;
          ~r0_10.len = (int)in_stack_fffffffffffffea0.data;
          runtime_growslice(oldPtr_00,(int)pvVar14,(int)pvVar12,1,(internal_abi_Type *)&DAT_00807920
                            ,~r0_10);
          oldPtr_00 = extraout_RAX_13;
          pvVar12 = extraout_RCX_14;
          pvVar14 = extraout_RBX_19;
          uVar17 = local_d8;
        }
        *(byte *)((int)pvVar14 + -1 + (int)oldPtr_00) = (byte)uVar16;
      }
    }
    if (uVar17 < 0x80) {
      pvVar14 = (void *)((int)pvVar14 + 1);
      if (pvVar12 < pvVar14) {
        ~r0_02.cap = (int)in_stack_fffffffffffffeb0;
        ~r0_02.array = in_stack_fffffffffffffea0._type;
        ~r0_02.len = (int)in_stack_fffffffffffffea0.data;
        runtime_growslice(oldPtr_00,(int)pvVar14,(int)pvVar12,1,(internal_abi_Type *)&DAT_00807920,
                          ~r0_02);
        oldPtr_00 = extraout_RAX_04;
        pvVar12 = extraout_RCX_06;
        pvVar14 = extraout_RBX_10;
        uVar17 = local_d8;
      }
      *(byte *)((int)pvVar14 + -1 + (int)oldPtr_00) = (byte)uVar17 | 0x80;
    }
    else {
      pvVar14 = (void *)((int)pvVar14 + 1);
      if (pvVar12 < pvVar14) {
        ~r0_03.cap = (int)in_stack_fffffffffffffeb0;
        ~r0_03.array = in_stack_fffffffffffffea0._type;
        ~r0_03.len = (int)in_stack_fffffffffffffea0.data;
        runtime_growslice(oldPtr_00,(int)pvVar14,(int)pvVar12,1,(internal_abi_Type *)&DAT_00807920,
                          ~r0_03);
        oldPtr_00 = extraout_RAX_05;
        pvVar12 = extraout_RCX_07;
        pvVar14 = extraout_RBX_11;
        uVar17 = local_d8;
      }
      *(undefined *)((int)pvVar14 + -1 + (int)oldPtr_00) = 0x80;
      for (; 0x7f < uVar17; uVar17 = uVar17 >> 7) {
        pvVar14 = (void *)((int)pvVar14 + 1);
        if (pvVar12 < pvVar14) {
          ~r0_04.cap = (int)in_stack_fffffffffffffeb0;
          ~r0_04.array = in_stack_fffffffffffffea0._type;
          ~r0_04.len = (int)in_stack_fffffffffffffea0.data;
          runtime_growslice(oldPtr_00,(int)pvVar14,(int)pvVar12,1,(internal_abi_Type *)&DAT_00807920
                            ,~r0_04);
          oldPtr_00 = extraout_RAX_06;
          pvVar12 = extraout_RCX_08;
          pvVar14 = extraout_RBX_12;
        }
        *(byte *)((int)pvVar14 + -1 + (int)oldPtr_00) = (byte)uVar17 | 0x80;
      }
      pvVar14 = (void *)((int)pvVar14 + 1);
      if (pvVar12 < pvVar14) {
        ~r0_05.cap = (int)in_stack_fffffffffffffeb0;
        ~r0_05.array = in_stack_fffffffffffffea0._type;
        ~r0_05.len = (int)in_stack_fffffffffffffea0.data;
        runtime_growslice(oldPtr_00,(int)pvVar14,(int)pvVar12,1,(internal_abi_Type *)&DAT_00807920,
                          ~r0_05);
        oldPtr_00 = extraout_RAX_07;
        pvVar12 = extraout_RCX_09;
        pvVar14 = extraout_RBX_13;
      }
      *(byte *)((int)pvVar14 + -1 + (int)oldPtr_00) = (byte)uVar17;
    }
    for (uVar17 = length - 1; 0x7f < uVar17; uVar17 = uVar17 >> 7) {
      pvVar14 = (void *)((int)pvVar14 + 1);
      if (pvVar12 < pvVar14) {
        ~r0_06.cap = (int)in_stack_fffffffffffffeb0;
        ~r0_06.array = in_stack_fffffffffffffea0._type;
        ~r0_06.len = (int)in_stack_fffffffffffffea0.data;
        runtime_growslice(oldPtr_00,(int)pvVar14,(int)pvVar12,1,(internal_abi_Type *)&DAT_00807920,
                          ~r0_06);
        oldPtr_00 = extraout_RAX_08;
        pvVar12 = extraout_RCX_10;
        pvVar14 = extraout_RBX_14;
      }
      *(byte *)((int)pvVar14 + -1 + (int)oldPtr_00) = (byte)uVar17 | 0x80;
    }
    pvVar14 = (void *)((int)pvVar14 + 1);
    if (pvVar12 < pvVar14) {
      ~r0_07.cap = (int)in_stack_fffffffffffffeb0;
      ~r0_07.array = in_stack_fffffffffffffea0._type;
      ~r0_07.len = (int)in_stack_fffffffffffffea0.data;
      runtime_growslice(oldPtr_00,(int)pvVar14,(int)pvVar12,1,(internal_abi_Type *)&DAT_00807920,
                        ~r0_07);
      oldPtr_00 = extraout_RAX_09;
      pvVar12 = extraout_RCX_11;
      pvVar14 = extraout_RBX_15;
    }
    *(byte *)((int)pvVar14 + -1 + (int)oldPtr_00) = (byte)uVar17;
    pvVar14 = (void *)((int)pvVar14 + 1);
    if (pvVar12 < pvVar14) {
      ~r0_08.cap = (int)in_stack_fffffffffffffeb0;
      ~r0_08.array = in_stack_fffffffffffffea0._type;
      ~r0_08.len = (int)in_stack_fffffffffffffea0.data;
      runtime_growslice(oldPtr_00,(int)pvVar14,(int)pvVar12,1,(internal_abi_Type *)&DAT_00807920,
                        ~r0_08);
      oldPtr_00 = extraout_RAX_10;
      pvVar14 = extraout_RBX_16;
    }
    *(undefined *)((int)pvVar14 + -1 + (int)oldPtr_00) = 0;
    if (pvVar14 == (void *)0x0) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *oldPtr_00 = (sdword)pvVar14 + -4;
    *(byte *)((int)local_60 + 0x17) = *(byte *)((int)local_60 + 0x17) | 0x40;
    ppvVar11 = local_60;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_06 = extraout_RAX_11;
      extraout_R11_06[1] = (sdword *)extraout_RCX_12[4];
      oldPtr_00 = extraout_RAX_11;
      ppvVar11 = extraout_RCX_12;
      pvVar14 = extraout_RBX_17;
      iVar13 = extraout_R8_01;
    }
    ppvVar11[4] = oldPtr_00;
    ppvVar11[1] = *ppvVar11;
    piVar8 = local_a8;
  }
  pcVar10 = (code *)((internal_abi_Type *)&piVar8->Size_)->Size_;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_04 = extraout_RDI;
    pcVar10 = extraout_RCX_04;
    pvVar14 = extraout_RBX_09;
    piVar8 = extraout_RSI_01;
    iVar13 = extraout_R8_00;
  }
  ppvVar11[3] = (void *)0x0;
  if (piVar8->Equal != (func_unsafe_Pointer__unsafe_Pointer__bool **)0x0) {
    local_78 = piVar8->Equal;
    runtime_newobject((internal_abi_Type *)&DAT_0086ad60,pvVar14);
    *extraout_RAX_02 = reflect_ArrayOf_func1;
    extraout_RAX_02[1] = (code *)length;
    extraout_RAX_02[2] = pcVar10;
    ppcVar7 = extraout_RAX_02;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier3();
      *extraout_R11_05 = (code *)local_78;
      extraout_R11_05[1] = (code *)extraout_RAX_03;
      extraout_R11_05[2] = (code *)local_60[3];
      ppcVar7 = extraout_RAX_03;
      length = extraout_RCX_05;
    }
    ppcVar7[3] = (code *)local_78;
    local_60[3] = ppcVar7;
    ppvVar11 = local_60;
    piVar8 = local_a8;
    iVar13 = length;
  }
  if ((iVar13 == 1) && ((piVar8->Kind_ & 0x20) != 0)) {
    dVar15 = *(byte *)((int)ppvVar11 + 0x17) | 0x20;
    *(char *)((int)ppvVar11 + 0x17) = (char)dVar15;
  }
  else {
    dVar15 = *(byte *)((int)ppvVar11 + 0x17) & 0xffffffdf;
    *(char *)((int)ppvVar11 + 0x17) = (char)dVar15;
  }
  runtime_convT((internal_abi_Type *)&DAT_00875fe0,&ckey,(void *)(uint)dVar15);
  value_01.data = in_stack_fffffffffffffeb8;
  value_01._type = in_stack_fffffffffffffeb0;
  actual_00.data = in_stack_fffffffffffffec8;
  actual_00._type = in_stack_fffffffffffffec0;
  sync___Map__LoadOrStore(&reflect_lookupCache,in_stack_fffffffffffffea0,value_01,actual_00,true);
  runtime_assertE2I((internal_abi_InterfaceType *)&DAT_00894180,t_01,(runtime_itab *)t_01);
  return;
}



void reflect_ArrayOf_func1(void *p,void *q,bool ~r0)

{
  int iVar1;
  code **ppcVar2;
  int iVar3;
  char cVar4;
  int length;
  int in_RDX;
  int iVar5;
  int iVar6;
  func_unsafe_Pointer__unsafe_Pointer__bool **eequal;
  uintptr esize;
  void *pi;
  void *qi;
  int unaff_R14;
  void *pvStack0000000000000008;
  void *pvStack0000000000000010;
  int i;
  
  pvStack0000000000000008 = p;
  pvStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  iVar1 = *(int *)(in_RDX + 8);
  ppcVar2 = *(code ***)(in_RDX + 0x18);
  iVar3 = *(int *)(in_RDX + 0x10);
  iVar5 = 0;
  while( true ) {
    if (iVar1 <= iVar5) {
      return;
    }
    iVar6 = iVar5 * iVar3;
    cVar4 = (**ppcVar2)((void *)(iVar6 + (int)pvStack0000000000000008),
                        (void *)(iVar6 + (int)pvStack0000000000000010));
    if (cVar4 == '\0') break;
    iVar5 = iVar5 + 1;
  }
  return;
}



void reflect_funcLayout(internal_abi_FuncType *t,internal_abi_Type *rcvr,
                       internal_abi_Type *frametype,sync_Pool *framePool,reflect_abiDesc abid)

{
  interface___ key;
  string ~r0;
  string ~r0_00;
  string a0;
  string ~r0_01;
  string a0_00;
  string n;
  interface___ key_00;
  string ~r0_02;
  string a0_01;
  string val;
  interface___ e;
  string ~r0_03;
  string a0_02;
  string val_00;
  interface___ e_00;
  reflect_abiDesc ~r0_04;
  undefined extraout_AL;
  undefined extraout_AL_00;
  undefined exported;
  undefined4 extraout_EAX;
  internal_abi_FuncType *t_00;
  uint *extraout_RAX;
  internal_abi_Type *x;
  char extraout_CL;
  bool ok;
  uint *extraout_RAX_00;
  void *ptr;
  int extraout_RAX_01;
  code **extraout_RAX_02;
  code **extraout_RAX_03;
  code **ppcVar1;
  void *x_00;
  void *x_01;
  uint8 *extraout_RCX;
  uint8 *puVar2;
  undefined8 extraout_RCX_00;
  void *~r0_05;
  void *~r0_06;
  undefined extraout_BL;
  undefined extraout_BL_00;
  undefined embedded;
  int32 ~r0_07;
  internal_abi_Type *rcvr_00;
  void *~r0_08;
  void *~r0_09;
  void *~r0_10;
  uint8 **extraout_R11;
  uint **extraout_R11_00;
  int unaff_R14;
  undefined in_XMM15 [16];
  undefined8 uVar3;
  undefined auVar4 [16];
  internal_abi_Type *in_stack_fffffffffffffc48;
  undefined *in_stack_fffffffffffffc50;
  interface___ in_stack_fffffffffffffc58;
  interface___ in_stack_fffffffffffffc68;
  string in_stack_fffffffffffffc78;
  string in_stack_fffffffffffffc88;
  string in_stack_fffffffffffffc98;
  undefined auVar5 [24];
  undefined in_stack_fffffffffffffca8 [88];
  uint8 local_2e0 [32];
  uint8 local_2c0 [40];
  uint *local_298;
  int local_288;
  reflect_layoutKey k;
  reflect_layoutType lt;
  reflect_layoutType lt_1;
  undefined local_d0 [200];
  
  while (local_d0._8_8_ = in_XMM15._8_8_,
        &stack0xfffffffffffffcc8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  k = (reflect_layoutKey)FUN_0046cd8f();
  rcvr_00 = k.rcvr;
  t_00 = k.ftyp;
  if (((t_00->Type).Kind_ & 0x1f) != 0x13) {
    ~r0_03.len = (int)in_stack_fffffffffffffc50;
    ~r0_03.str = (uint8 *)in_stack_fffffffffffffc48;
    reflect___rtype__String((reflect_rtype *)t_00,~r0_03);
    a0_02.len = (int)in_stack_fffffffffffffc50;
    a0_02.str = (uint8 *)in_stack_fffffffffffffc48;
    runtime_concatstring2
              ((runtime_tmpBuf *)0x0,a0_02,(string)in_stack_fffffffffffffc58,
               (string)in_stack_fffffffffffffc68);
    val_00.len = (int)in_stack_fffffffffffffc50;
    val_00.str = (uint8 *)in_stack_fffffffffffffc48;
    runtime_convTstring(val_00,x_01);
    e_00.data = in_stack_fffffffffffffc50;
    e_00._type = in_stack_fffffffffffffc48;
                    // WARNING: Subroutine does not return
    runtime_gopanic(e_00);
  }
  if ((rcvr_00 != (internal_abi_Type *)0x0) && ((rcvr_00->Kind_ & 0x1f) == 0x14)) {
    ~r0_02.len = (int)in_stack_fffffffffffffc50;
    ~r0_02.str = (uint8 *)in_stack_fffffffffffffc48;
    reflect___rtype__String((reflect_rtype *)rcvr_00,~r0_02);
    a0_01.len = (int)in_stack_fffffffffffffc50;
    a0_01.str = (uint8 *)in_stack_fffffffffffffc48;
    runtime_concatstring2
              ((runtime_tmpBuf *)0x0,a0_01,(string)in_stack_fffffffffffffc58,
               (string)in_stack_fffffffffffffc68);
    val.len = (int)in_stack_fffffffffffffc50;
    val.str = (uint8 *)in_stack_fffffffffffffc48;
    runtime_convTstring(val,x_00);
    e.data = in_stack_fffffffffffffc50;
    e._type = in_stack_fffffffffffffc48;
                    // WARNING: Subroutine does not return
    runtime_gopanic(e);
  }
  key.data = in_stack_fffffffffffffc50;
  key._type = in_stack_fffffffffffffc48;
  sync___Map__Load(&reflect_layoutCache,key,in_stack_fffffffffffffc58,true);
  if (extraout_CL != '\0') {
    auVar4 = FUN_0046cd8b();
    if (auVar4._0_8_ != (internal_abi_Type *)&DAT_0085f680) {
                    // WARNING: Subroutine does not return
      runtime_panicdottypeE
                (auVar4._0_8_,(internal_abi_Type *)&DAT_0085f680,(internal_abi_Type *)&DAT_00821120)
      ;
    }
    local_d0._0_8_ = *auVar4._8_8_;
    FUN_0046d0b8();
    FUN_0046d0b8();
    FUN_0046d0c6();
    return;
  }
  ~r0_04.call.steps.len = (int)in_stack_fffffffffffffc50;
  ~r0_04.call.steps.array = (reflect_abiStep *)in_stack_fffffffffffffc48;
  ~r0_04.call._16_16_ = (undefined  [16])in_stack_fffffffffffffc58;
  ~r0_04.call.valueStart.len = (int)in_stack_fffffffffffffc68._type;
  ~r0_04.call.valueStart.cap = (int)in_stack_fffffffffffffc68.data;
  ~r0_04.call.stackBytes = (uintptr)in_stack_fffffffffffffc78.str;
  ~r0_04.call.iregs = in_stack_fffffffffffffc78.len;
  ~r0_04._64_16_ = (undefined  [16])in_stack_fffffffffffffc88;
  ~r0_04.ret.steps.len = (int)in_stack_fffffffffffffc98.str;
  ~r0_04.ret.steps.cap = in_stack_fffffffffffffc98.len;
  auVar5 = in_stack_fffffffffffffca8._0_24_;
  ~r0_04.ret.valueStart.array = (int *)auVar5._0_8_;
  ~r0_04.ret.valueStart.len = auVar5._8_8_;
  ~r0_04.ret.valueStart.cap = auVar5._16_8_;
  ~r0_04.ret.stackBytes = in_stack_fffffffffffffca8._24_8_;
  ~r0_04.ret.iregs = in_stack_fffffffffffffca8._32_8_;
  ~r0_04.ret.fregs = in_stack_fffffffffffffca8._40_8_;
  ~r0_04.stackCallArgsSize = in_stack_fffffffffffffca8._48_8_;
  ~r0_04.retOffset = in_stack_fffffffffffffca8._56_8_;
  ~r0_04.spill = in_stack_fffffffffffffca8._64_8_;
  ~r0_04.stackPtrs = (reflect_bitVector *)in_stack_fffffffffffffca8._72_8_;
  ~r0_04.inRegPtrs[0] = in_stack_fffffffffffffca8[80];
  ~r0_04.inRegPtrs[1] = in_stack_fffffffffffffca8[81];
  ~r0_04.outRegPtrs[0] = in_stack_fffffffffffffca8[82];
  ~r0_04.outRegPtrs[1] = in_stack_fffffffffffffca8[83];
  ~r0_04._180_4_ = in_stack_fffffffffffffca8._84_4_;
  uVar3 = local_d0._8_8_;
  reflect_newAbiDesc(t_00,rcvr_00,~r0_04);
  FUN_0046d0c6();
  runtime_newobject((internal_abi_Type *)&DAT_00895ca0,~r0_08);
  *(code *)((int)extraout_RAX + 0x15) = (code)0x8;
  *extraout_RAX = abid.retOffset + abid.ret.stackBytes + 7 & 0xfffffffffffffff8;
  extraout_RAX[1] = (uint)(abid.stackPtrs)->n << 3;
  local_298 = extraout_RAX;
  if ((abid.stackPtrs)->n != 0) {
    if (((abid.stackPtrs)->data).len == 0) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    puVar2 = ((abid.stackPtrs)->data).array;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = extraout_RCX;
      local_298 = extraout_RAX_00;
      puVar2 = extraout_RCX;
    }
    local_298[4] = (uint)puVar2;
  }
  if (rcvr_00 == (internal_abi_Type *)0x0) {
    ~r0_01.len = (int)in_stack_fffffffffffffc50;
    ~r0_01.str = (uint8 *)in_stack_fffffffffffffc48;
    reflect___rtype__String((reflect_rtype *)t_00,~r0_01);
    a0_00.len = (int)in_stack_fffffffffffffc50;
    a0_00.str = (uint8 *)in_stack_fffffffffffffc48;
    runtime_concatstring3
              (&local_2e0,a0_00,(string)in_stack_fffffffffffffc58,(string)in_stack_fffffffffffffc68,
               in_stack_fffffffffffffc78);
    exported = extraout_AL_00;
    embedded = extraout_BL_00;
  }
  else {
    ~r0.len = (int)in_stack_fffffffffffffc50;
    ~r0.str = (uint8 *)in_stack_fffffffffffffc48;
    reflect___rtype__String((reflect_rtype *)rcvr_00,~r0);
    ~r0_00.len = (int)in_stack_fffffffffffffc50;
    ~r0_00.str = (uint8 *)in_stack_fffffffffffffc48;
    reflect___rtype__String((reflect_rtype *)t_00,~r0_00);
    in_stack_fffffffffffffc48 = (internal_abi_Type *)&DAT_0095a6a8;
    in_stack_fffffffffffffc50 = &DAT_00000001;
    a0.len = 1;
    a0.str = &DAT_0095a6a8;
    runtime_concatstring5
              ((runtime_tmpBuf *)local_2c0,a0,(string)in_stack_fffffffffffffc58,
               (string)in_stack_fffffffffffffc68,in_stack_fffffffffffffc78,in_stack_fffffffffffffc88
               ,in_stack_fffffffffffffc98);
    exported = extraout_AL;
    embedded = extraout_BL;
  }
  n.len = (int)in_stack_fffffffffffffc50;
  n.str = (uint8 *)in_stack_fffffffffffffc48;
  internal_abi_NewName
            (n,(string)in_stack_fffffffffffffc58,(bool)exported,(bool)embedded,
             (internal_abi_Name)0x0);
  reflect_addReflectOff(ptr,~r0_07);
  *(undefined4 *)(local_298 + 5) = extraout_EAX;
  runtime_newobject((internal_abi_Type *)&DAT_00885220,~r0_09);
  local_288 = extraout_RAX_01;
  runtime_newobject((internal_abi_Type *)&DAT_00848560,~r0_10);
  *extraout_RAX_02 = reflect_funcLayout_func1;
  ppcVar1 = extraout_RAX_02;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier3();
    *extraout_R11_00 = local_298;
    extraout_R11_00[1] = (uint *)extraout_RAX_03;
    extraout_R11_00[2] = *(uint **)(local_288 + 0x20);
    ppcVar1 = extraout_RAX_03;
  }
  ppcVar1[1] = (code *)local_298;
  *(code ***)(local_288 + 0x20) = ppcVar1;
  FUN_0046cd8b();
  local_d0._8_8_ = local_288;
  local_d0._0_8_ = extraout_RCX_00;
  FUN_0046d0c6();
  runtime_convT((internal_abi_Type *)&DAT_00850f60,&k,~r0_05);
  runtime_convT((internal_abi_Type *)&DAT_0085f680,local_d0,~r0_06);
  key_00.data = in_stack_fffffffffffffc50;
  key_00._type = in_stack_fffffffffffffc48;
  sync___Map__LoadOrStore
            (&reflect_layoutCache,key_00,in_stack_fffffffffffffc58,in_stack_fffffffffffffc68,true);
  local_d0._8_8_ = uVar3;
  auVar4 = FUN_0046cd8b();
  if (auVar4._0_8_ != (internal_abi_Type *)&DAT_0085f680) {
                    // WARNING: Subroutine does not return
    runtime_panicdottypeE
              (auVar4._0_8_,(internal_abi_Type *)&DAT_0085f680,(internal_abi_Type *)&DAT_00821120);
  }
  local_d0._0_8_ = *auVar4._8_8_;
  FUN_0046d0b8();
  FUN_0046d0b8();
  FUN_0046d0c6();
  return;
}



void reflect_funcLayout_func1(interface___ ~r0)

{
  internal_abi_Type *x;
  int in_RDX;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
    in_RBX = extraout_RBX;
  }
  reflect_unsafe_New(*(internal_abi_Type **)(in_RDX + 8),in_RBX);
  return;
}



// WARNING: Unknown calling convention
// Local variable tt:internal/abi.ArrayType *[RCX:8] conflicts with parameter, skipped.
// Local variable tt_1:reflect.structType *[RCX:8] conflicts with parameter, skipped.

void reflect_addTypeBits(reflect_bitVector *bv,uintptr offset,internal_abi_Type *t)

{
  int iVar1;
  uint8 *extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *extraout_RAX_01;
  uint8 *extraout_RAX_02;
  uint8 *extraout_RAX_03;
  uint8 *extraout_RAX_04;
  uint8 *puVar2;
  uint8 *extraout_RAX_05;
  uint8 *extraout_RAX_06;
  uint8 *extraout_RAX_07;
  uint8 *extraout_RAX_08;
  int i_3;
  int extraout_RCX;
  int i_2;
  int extraout_RCX_00;
  int i_6;
  int extraout_RCX_01;
  int i_5;
  int extraout_RCX_02;
  int i_4;
  int extraout_RCX_03;
  dword dVar3;
  int iVar4;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  uint extraout_RBX_03;
  uint extraout_RBX_04;
  uint extraout_RBX_05;
  uint extraout_RBX_06;
  uint uVar5;
  uint extraout_RBX_07;
  uint extraout_RBX_08;
  uint uVar6;
  uint8 **extraout_R11;
  uint8 **extraout_R11_00;
  uint8 **extraout_R11_01;
  uint8 **extraout_R11_02;
  uint8 **extraout_R11_03;
  int unaff_R14;
  reflect_bitVector *prStack0000000000000008;
  uintptr uStack0000000000000010;
  internal_abi_Type *piStack0000000000000018;
  runtime_slice in_stack_ffffffffffffff78;
  int i_1;
  int i;
  
  piStack0000000000000018 = t;
  while (prStack0000000000000008 = bv, uStack0000000000000010 = offset,
        &stack0xfffffffffffffff8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    bv = prStack0000000000000008;
    offset = uStack0000000000000010;
  }
  if (piStack0000000000000018->PtrBytes == 0) {
    return;
  }
  uVar6 = (uint)(piStack0000000000000018->Kind_ & 0x1f);
  if (uVar6 < 0x15) {
    if (uVar6 == 0x11) {
      for (iVar4 = 0; iVar1._0_4_ = piStack0000000000000018[1].Hash,
          iVar1._4_1_ = piStack0000000000000018[1].TFlag,
          iVar1._5_1_ = piStack0000000000000018[1].Align_,
          iVar1._6_1_ = piStack0000000000000018[1].FieldAlign_,
          iVar1._7_1_ = piStack0000000000000018[1].Kind_, iVar4 < iVar1; iVar4 = iVar4 + 1) {
        reflect_addTypeBits(prStack0000000000000008,
                            ((internal_abi_Type *)piStack0000000000000018[1].Size_)->Size_ * iVar4 +
                            uStack0000000000000010,
                            (internal_abi_Type *)piStack0000000000000018[1].Size_);
      }
      return;
    }
    if (1 < uVar6 - 0x12) {
      if (uVar6 != 0x14) {
        return;
      }
      while (dVar3 = bv->n, dVar3 < (dword)(offset >> 3)) {
        if ((dVar3 & 0x3f) == 0) {
          for (i_4 = 0; i_4 < 8; i_4 = i_4 + 1) {
            uVar6 = (bv->data).cap;
            uVar5 = (bv->data).len + 1;
            puVar2 = (bv->data).array;
            if (uVar6 < uVar5) {
              runtime_growslice(puVar2,uVar5,uVar6,1,(internal_abi_Type *)&DAT_00807920,
                                in_stack_ffffffffffffff78);
              (prStack0000000000000008->data).cap = extraout_RCX_03;
              puVar2 = extraout_RAX_07;
              bv = prStack0000000000000008;
              uVar5 = extraout_RBX_07;
              if (runtime_writeBarrier._0_4_ != 0) {
                runtime_gcWriteBarrier2();
                *extraout_R11_03 = extraout_RAX_08;
                extraout_R11_03[1] = (bv->data).array;
                puVar2 = extraout_RAX_08;
                uVar5 = extraout_RBX_08;
              }
              (bv->data).array = puVar2;
              offset = uStack0000000000000010;
            }
            (bv->data).len = uVar5;
            puVar2[uVar5 - 1] = 0;
          }
        }
        if ((uint)(bv->data).len <= (uint)(bv->n >> 3)) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        bv->n = bv->n + 1;
      }
      if ((dVar3 & 0x3f) == 0) {
        for (i_5 = 0; i_5 < 8; i_5 = i_5 + 1) {
          uVar6 = (bv->data).cap;
          uVar5 = (bv->data).len + 1;
          puVar2 = (bv->data).array;
          if (uVar6 < uVar5) {
            runtime_growslice(puVar2,uVar5,uVar6,1,(internal_abi_Type *)&DAT_00807920,
                              in_stack_ffffffffffffff78);
            (prStack0000000000000008->data).cap = extraout_RCX_02;
            puVar2 = extraout_RAX_05;
            bv = prStack0000000000000008;
            uVar5 = extraout_RBX_05;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier2();
              *extraout_R11_02 = extraout_RAX_06;
              extraout_R11_02[1] = (bv->data).array;
              puVar2 = extraout_RAX_06;
              uVar5 = extraout_RBX_06;
            }
            (bv->data).array = puVar2;
          }
          (bv->data).len = uVar5;
          puVar2[uVar5 - 1] = 0;
        }
      }
      uVar6 = (uint)(bv->n >> 3);
      if (uVar6 < (uint)(bv->data).len) {
        puVar2 = (bv->data).array;
        puVar2[uVar6] = puVar2[uVar6] | (byte)(1 << (bv->n & 7));
        dVar3 = bv->n + 1;
        bv->n = dVar3;
        if ((dVar3 & 0x3f) == 0) {
          for (i_6 = 0; i_6 < 8; i_6 = i_6 + 1) {
            uVar6 = (bv->data).cap;
            uVar5 = (bv->data).len + 1;
            puVar2 = (bv->data).array;
            if (uVar6 < uVar5) {
              runtime_growslice(puVar2,uVar5,uVar6,1,(internal_abi_Type *)&DAT_00807920,
                                in_stack_ffffffffffffff78);
              (prStack0000000000000008->data).cap = extraout_RCX_01;
              puVar2 = extraout_RAX_03;
              bv = prStack0000000000000008;
              uVar5 = extraout_RBX_03;
              if (runtime_writeBarrier._0_4_ != 0) {
                runtime_gcWriteBarrier2();
                *extraout_R11_01 = extraout_RAX_04;
                extraout_R11_01[1] = (bv->data).array;
                puVar2 = extraout_RAX_04;
                uVar5 = extraout_RBX_04;
              }
              (bv->data).array = puVar2;
            }
            (bv->data).len = uVar5;
            puVar2[uVar5 - 1] = 0;
          }
        }
        uVar6 = (uint)(bv->n >> 3);
        if (uVar6 < (uint)(bv->data).len) {
          puVar2 = (bv->data).array;
          puVar2[uVar6] = puVar2[uVar6] | (byte)(1 << (bv->n & 7));
          bv->n = bv->n + 1;
          return;
        }
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
  }
  else if (0x18 < uVar6) {
    if (uVar6 == 0x19) {
      iVar4._0_4_ = piStack0000000000000018[1].Hash;
      iVar4._4_1_ = piStack0000000000000018[1].TFlag;
      iVar4._5_1_ = piStack0000000000000018[1].Align_;
      iVar4._6_1_ = piStack0000000000000018[1].FieldAlign_;
      iVar4._7_1_ = piStack0000000000000018[1].Kind_;
      uVar6 = 0;
      while( true ) {
        if (iVar4 <= (int)uVar6) {
          return;
        }
        uVar5._0_4_ = piStack0000000000000018[1].Hash;
        uVar5._4_1_ = piStack0000000000000018[1].TFlag;
        uVar5._5_1_ = piStack0000000000000018[1].Align_;
        uVar5._6_1_ = piStack0000000000000018[1].FieldAlign_;
        uVar5._7_1_ = piStack0000000000000018[1].Kind_;
        if (uVar5 <= uVar6) break;
        reflect_addTypeBits(prStack0000000000000008,
                            *(int *)(piStack0000000000000018[1].PtrBytes + 0x10 + uVar6 * 0x18) +
                            uStack0000000000000010,
                            *(internal_abi_Type **)
                             (piStack0000000000000018[1].PtrBytes + 8 + uVar6 * 0x18));
        uVar6 = uVar6 + 1;
      }
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (uVar6 != 0x1a) {
      return;
    }
  }
  while (dVar3 = bv->n, dVar3 < (dword)(offset >> 3)) {
    if ((dVar3 & 0x3f) == 0) {
      for (i_2 = 0; i_2 < 8; i_2 = i_2 + 1) {
        uVar6 = (bv->data).cap;
        uVar5 = (bv->data).len + 1;
        puVar2 = (bv->data).array;
        if (uVar6 < uVar5) {
          runtime_growslice(puVar2,uVar5,uVar6,1,(internal_abi_Type *)&DAT_00807920,
                            in_stack_ffffffffffffff78);
          (prStack0000000000000008->data).cap = extraout_RCX_00;
          puVar2 = extraout_RAX_01;
          bv = prStack0000000000000008;
          uVar5 = extraout_RBX_01;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_00 = extraout_RAX_02;
            extraout_R11_00[1] = (bv->data).array;
            puVar2 = extraout_RAX_02;
            uVar5 = extraout_RBX_02;
          }
          (bv->data).array = puVar2;
          offset = uStack0000000000000010;
        }
        (bv->data).len = uVar5;
        puVar2[uVar5 - 1] = 0;
      }
    }
    if ((uint)(bv->data).len <= (uint)(bv->n >> 3)) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    bv->n = bv->n + 1;
  }
  if ((dVar3 & 0x3f) == 0) {
    for (i_3 = 0; i_3 < 8; i_3 = i_3 + 1) {
      uVar6 = (bv->data).cap;
      uVar5 = (bv->data).len + 1;
      puVar2 = (bv->data).array;
      if (uVar6 < uVar5) {
        runtime_growslice(puVar2,uVar5,uVar6,1,(internal_abi_Type *)&DAT_00807920,
                          in_stack_ffffffffffffff78);
        (prStack0000000000000008->data).cap = extraout_RCX;
        puVar2 = extraout_RAX;
        bv = prStack0000000000000008;
        uVar5 = extraout_RBX;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11 = extraout_RAX_00;
          extraout_R11[1] = (bv->data).array;
          puVar2 = extraout_RAX_00;
          uVar5 = extraout_RBX_00;
        }
        (bv->data).array = puVar2;
      }
      (bv->data).len = uVar5;
      puVar2[uVar5 - 1] = 0;
    }
  }
  uVar6 = (uint)(bv->n >> 3);
  if (uVar6 < (uint)(bv->data).len) {
    puVar2 = (bv->data).array;
    puVar2[uVar6] = puVar2[uVar6] | (byte)(1 << (bv->n & 7));
    bv->n = bv->n + 1;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void reflect_packEface(reflect_Value v,interface___ ~r0)

{
  internal_abi_Type *in_RAX;
  void *dst;
  void *c;
  dword in_ECX;
  void *in_RBX;
  void *ptr;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffb8;
  interface___ i;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_RAX->Kind_ & 0x20) == 0) {
    if ((in_ECX >> 7 & 1) == 0) {
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffb8);
    }
    if ((in_ECX >> 8 & 1) != 0) {
      reflect_unsafe_New(in_RAX,in_RBX);
      reflect_typedmemmove(in_RAX,dst,in_RBX);
    }
  }
  return;
}



void reflect___ValueError__Error(reflect_ValueError *e,string ~r0)

{
  uint i;
  string ~r0_00;
  string a0;
  string a0_00;
  string a0_01;
  int unaff_R14;
  uint8 *in_stack_ffffffffffffff80;
  int in_stack_ffffffffffffff88;
  string in_stack_ffffffffffffff90;
  string in_stack_ffffffffffffffa0;
  string in_stack_ffffffffffffffb0;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  i = e->Kind;
  if (i == 0) {
    a0_01.len = in_stack_ffffffffffffff88;
    a0_01.str = in_stack_ffffffffffffff80;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,a0_01,in_stack_ffffffffffffff90,in_stack_ffffffffffffffa0,
               in_stack_ffffffffffffffb0);
    return;
  }
  if ((uint)reflect_kindNames.len <= i) {
    ~r0_00.len = in_stack_ffffffffffffff88;
    ~r0_00.str = in_stack_ffffffffffffff80;
    strconv_FormatInt(i,10,~r0_00);
    a0.len = in_stack_ffffffffffffff88;
    a0.str = in_stack_ffffffffffffff80;
    runtime_concatstring2
              ((runtime_tmpBuf *)&stack0xffffffffffffffd8,a0,in_stack_ffffffffffffff90,
               in_stack_ffffffffffffffa0);
  }
  a0_00.len = 6;
  a0_00.str = (uint8 *)0x8af8bc;
  runtime_concatstring5
            ((runtime_tmpBuf *)0x0,a0_00,in_stack_ffffffffffffff90,in_stack_ffffffffffffffa0,
             in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0);
  return;
}



void reflect_valueMethodName(string ~r0)

{
  __uintptr pcbuf;
  runtime_Frame frame_00;
  bool more;
  char cVar1;
  int ~r0_00;
  uintptr (*_pc) [5];
  uint extraout_RAX;
  int n;
  int *extraout_RAX_00;
  runtime_Frames *frames;
  int *extraout_RAX_01;
  int *extraout_RAX_02;
  int *piVar2;
  runtime_Frames *ci;
  int *extraout_RCX;
  int *piVar3;
  bool more_00;
  void *in_RBX;
  void *~r0_01;
  void *extraout_RBX;
  int *extraout_R11;
  int **extraout_R11_00;
  int unaff_R14;
  undefined in_XMM15 [16];
  uintptr *in_stack_fffffffffffffed0;
  uintptr *puVar4;
  undefined in_stack_fffffffffffffed8 [16];
  undefined in_stack_fffffffffffffee8 [64];
  runtime_Frame frame;
  
  while (&frame.Func <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00812a60,in_RBX);
  pcbuf.len = in_stack_fffffffffffffed8._0_8_;
  pcbuf.cap = in_stack_fffffffffffffed8._8_8_;
  pcbuf.array = in_stack_fffffffffffffed0;
  runtime_callers(1,pcbuf,~r0_00);
  if (5 < extraout_RAX) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  runtime_newobject((internal_abi_Type *)&DAT_0085e900,~r0_01);
  extraout_RAX_00[1] = extraout_RAX;
  extraout_RAX_00[2] = 5;
  piVar2 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = ~r0_00;
    piVar2 = extraout_RAX_01;
  }
  *piVar2 = ~r0_00;
  piVar2[4] = 0;
  piVar2[5] = 2;
  piVar3 = piVar2 + 6;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = extraout_RCX;
    piVar2 = extraout_RAX_02;
    piVar3 = extraout_RCX;
  }
  piVar2[3] = (int)piVar3;
  frame._0_16_ = in_XMM15;
  FUN_0046cdb0();
  while( true ) {
    ci = (runtime_Frames *)FUN_0046cdb0();
    frame_00.Func = (runtime_Func *)in_stack_fffffffffffffed8._0_8_;
    frame_00.Function.str = (uint8 *)in_stack_fffffffffffffed8._8_8_;
    frame_00.PC = (uintptr)in_stack_fffffffffffffed0;
    frame_00.Function.len = in_stack_fffffffffffffee8._0_8_;
    frame_00.File.str = (uint8 *)SUB168(in_stack_fffffffffffffee8._8_16_,0);
    frame_00.File.len = SUB168(in_stack_fffffffffffffee8._8_16_,8);
    frame_00.Line = in_stack_fffffffffffffee8._24_8_;
    frame_00.startLine = in_stack_fffffffffffffee8._32_8_;
    frame_00.Entry = in_stack_fffffffffffffee8._40_8_;
    frame_00.funcInfo._func = (runtime__func *)SUB168(in_stack_fffffffffffffee8._48_16_,0);
    frame_00.funcInfo.datap = (runtime_moduledata *)SUB168(in_stack_fffffffffffffee8._48_16_,8);
    runtime___Frames__Next(ci,frame_00,more_00);
    puVar4 = in_stack_fffffffffffffed0;
    FUN_0046d11a();
    frame.PC = (uintptr)in_stack_fffffffffffffed0;
    cVar1 = FUN_0046d11a();
    if ((((0xe < frame.Function.len) && (*(int *)frame.Function.str == 0x2e7463656c666572)) &&
        (*(sdword *)(frame.Function.str + 8) == 0x756c6156)) &&
       (((*(short *)(frame.Function.str + 0xc) == 0x2e65 && (frame.Function.len != 0xe)) &&
        ((0x40 < frame.Function.str[0xe] && (frame.Function.str[0xe] < 0x5b)))))) break;
    in_stack_fffffffffffffed0 = puVar4;
    if (cVar1 == '\0') {
      return;
    }
  }
  return;
}



// WARNING: Unknown calling convention

void reflect_flag_mustBeExportedSlow(reflect_flag f)

