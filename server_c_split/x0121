  piStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((((piStack0000000000000010->Name).len == (piStack0000000000000008->Name).len) &&
       ((piStack0000000000000008->Package).len == (piStack0000000000000010->Package).len)) &&
      (piStack0000000000000010->Changed == piStack0000000000000008->Changed)) &&
     ((((piStack0000000000000010->Old).len == (piStack0000000000000008->Old).len &&
       (piStack0000000000000010->Opaque == piStack0000000000000008->Opaque)) &&
      ((runtime_memequal(), extraout_AL != '\0' && (runtime_memequal(), extraout_AL_00 != '\0'))))))
  {
    runtime_memequal();
  }
  return;
}



void internal_reflectlite_Swapper(interface___ slice,func_int__int_ **~r0)

{
  code *pcVar1;
  code *pcVar2;
  internal_reflectlite_Value v;
  internal_abi_Type *extraout_RAX;
  int extraout_RAX_00;
  int extraout_RAX_01;
  internal_abi_Type *typ;
  code **extraout_RAX_02;
  code **extraout_RAX_03;
  code **extraout_RAX_04;
  code **extraout_RAX_05;
  code **extraout_RAX_06;
  code **extraout_RAX_07;
  code **ppcVar3;
  code **extraout_RAX_08;
  code **extraout_RAX_09;
  internal_abi_Type *extraout_RAX_10;
  void *tmp;
  code **extraout_RAX_11;
  code **extraout_RAX_12;
  code **extraout_RAX_13;
  code **extraout_RAX_14;
  code **extraout_RAX_15;
  code **extraout_RAX_16;
  code **extraout_RAX_17;
  undefined8 *extraout_RAX_18;
  uintptr size;
  internal_abi_Type *t;
  code **in_RBX;
  code **extraout_RBX;
  undefined8 extraout_RBX_00;
  void *~r0_00;
  dword dVar4;
  internal_reflectlite_flag f;
  undefined8 *extraout_R11;
  code **extraout_R11_00;
  code **extraout_R11_01;
  code **extraout_R11_02;
  code **extraout_R11_03;
  undefined8 *extraout_R11_04;
  internal_abi_Type **extraout_R11_05;
  code **extraout_R11_06;
  code **extraout_R11_07;
  int unaff_R14;
  undefined auVar5 [16];
  interface___ in_stack_ffffffffffffff10;
  internal_reflectlite_flag in_stack_ffffffffffffff20;
  uint local_70;
  internal_reflectlite_rtype local_68;
  code **local_60;
  internal_abi_Type *local_58;
  internal_abi_Type *local_50;
  code *local_48;
  code *local_40;
  code *local_38;
  code *local_30;
  code *local_28;
  code *local_20;
  internal_abi_Type *local_18;
  
  while (&local_70 <= *(uint **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (~r0 == (func_int__int_ **)0x0) {
    dVar4 = 0;
    local_68.Type = (internal_abi_Type *)0x0;
    local_60 = (code **)0x0;
  }
  else {
    ppcVar3 = (code **)internal_reflectlite_dummy.x.data;
    if ((internal_reflectlite_dummy.b != false) &&
       (internal_reflectlite_dummy.x._type = (internal_abi_Type *)~r0, ppcVar3 = in_RBX,
       runtime_writeBarrier._0_4_ != 0)) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RBX;
      extraout_R11[1] = internal_reflectlite_dummy.x.data;
      ~r0 = (func_int__int_ **)extraout_RAX;
      in_RBX = extraout_RBX;
      ppcVar3 = extraout_RBX;
    }
    internal_reflectlite_dummy.x.data = ppcVar3;
    local_18 = (internal_abi_Type *)~r0;
    if ((internal_abi_Type *)~r0 == (internal_abi_Type *)0x0) {
      dVar4 = 0;
      local_68.Type = (internal_abi_Type *)0x0;
      local_60 = (code **)0x0;
    }
    else {
      dVar4 = *(uint8 *)((int)~r0 + 0x17) & 0x1f;
      local_68.Type = (internal_abi_Type *)~r0;
      local_60 = in_RBX;
    }
  }
  local_70 = (uint)dVar4;
  if (local_70 != 0x17) {
    runtime_newobject((internal_abi_Type *)&DAT_0084eee0,in_RBX);
    extraout_RAX_18[1] = 7;
    *extraout_RAX_18 = &DAT_008b08e8;
    extraout_RAX_18[2] = local_70;
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff10);
  }
  v.flag = in_stack_ffffffffffffff20;
  v.typ = in_stack_ffffffffffffff10._type;
  v.ptr = in_stack_ffffffffffffff10.data;
  internal_reflectlite_Value_Len(v,(int)local_68.Type);
  if (extraout_RAX_00 == 0) {
    return;
  }
  if (extraout_RAX_00 == 1) {
    return;
  }
  internal_reflectlite_rtype_Elem(local_68,(internal_reflectlite_Type)in_stack_ffffffffffffff10);
  auVar5 = (**(code **)(extraout_RAX_01 + 0x60))(extraout_RBX_00);
  local_58 = auVar5._0_8_;
  pcVar1 = (code *)local_58->Size_;
  if (local_58->PtrBytes == 0) {
    if (pcVar1 < (code *)0x3) {
      if (pcVar1 == (code *)0x1) {
        pcVar1 = local_60[1];
        pcVar2 = local_60[2];
        local_38 = *local_60;
        runtime_newobject((internal_abi_Type *)&DAT_00847e60,pcVar2);
        *extraout_RAX_08 = internal_reflectlite_Swapper_func8;
        extraout_RAX_08[2] = pcVar1;
        extraout_RAX_08[3] = pcVar2;
        ppcVar3 = extraout_RAX_08;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_03 = local_38;
          ppcVar3 = extraout_RAX_09;
        }
        ppcVar3[1] = local_38;
        return;
      }
      if (pcVar1 == (code *)0x2) {
        pcVar1 = local_60[1];
        pcVar2 = local_60[2];
        local_30 = *local_60;
        runtime_newobject((internal_abi_Type *)&DAT_00847ce0,pcVar2);
        *extraout_RAX_06 = internal_reflectlite_Swapper_func7;
        extraout_RAX_06[2] = pcVar1;
        extraout_RAX_06[3] = pcVar2;
        ppcVar3 = extraout_RAX_06;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_02 = local_30;
          ppcVar3 = extraout_RAX_07;
        }
        ppcVar3[1] = local_30;
        return;
      }
    }
    else {
      if (pcVar1 == (code *)0x4) {
        pcVar1 = local_60[1];
        pcVar2 = local_60[2];
        local_28 = *local_60;
        runtime_newobject((internal_abi_Type *)&DAT_00847d60,pcVar2);
        *extraout_RAX_16 = internal_reflectlite_Swapper_func6;
        extraout_RAX_16[2] = pcVar1;
        extraout_RAX_16[3] = pcVar2;
        ppcVar3 = extraout_RAX_16;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_07 = local_28;
          ppcVar3 = extraout_RAX_17;
        }
        ppcVar3[1] = local_28;
        return;
      }
      if (pcVar1 == (code *)0x8) {
        pcVar1 = local_60[1];
        pcVar2 = local_60[2];
        local_20 = *local_60;
        runtime_newobject((internal_abi_Type *)&DAT_00847de0,pcVar2);
        *extraout_RAX_14 = internal_reflectlite_Swapper_func5;
        extraout_RAX_14[2] = pcVar1;
        extraout_RAX_14[3] = pcVar2;
        ppcVar3 = extraout_RAX_14;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_06 = local_20;
          ppcVar3 = extraout_RAX_15;
        }
        ppcVar3[1] = local_20;
        return;
      }
    }
  }
  else {
    if (pcVar1 == (code *)0x8) {
      pcVar1 = local_60[1];
      pcVar2 = local_60[2];
      local_40 = *local_60;
      runtime_newobject((internal_abi_Type *)&DAT_00847f60,pcVar2);
      *extraout_RAX_04 = internal_reflectlite_Swapper_func3;
      extraout_RAX_04[2] = pcVar1;
      extraout_RAX_04[3] = pcVar2;
      ppcVar3 = extraout_RAX_04;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_01 = local_40;
        ppcVar3 = extraout_RAX_05;
      }
      ppcVar3[1] = local_40;
      return;
    }
    if ((local_58->Kind_ & 0x1f) == 0x18) {
      pcVar1 = local_60[1];
      pcVar2 = local_60[2];
      local_48 = *local_60;
      runtime_newobject((internal_abi_Type *)&DAT_00847ee0,pcVar2);
      *extraout_RAX_02 = internal_reflectlite_Swapper_func4;
      extraout_RAX_02[2] = pcVar1;
      extraout_RAX_02[3] = pcVar2;
      ppcVar3 = extraout_RAX_02;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_00 = local_48;
        ppcVar3 = extraout_RAX_03;
      }
      ppcVar3[1] = local_48;
      return;
    }
  }
  internal_reflectlite_unsafe_New(local_58,auVar5._8_8_);
  local_50 = extraout_RAX_10;
  runtime_newobject((internal_abi_Type *)&DAT_0087b980,~r0_00);
  *extraout_RAX_11 = internal_reflectlite_Swapper_func9;
  ppcVar3 = extraout_RAX_11;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_04 = local_60;
    ppcVar3 = extraout_RAX_12;
  }
  ppcVar3[1] = (code *)local_60;
  ppcVar3[2] = pcVar1;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_05 = local_58;
    extraout_R11_05[1] = local_50;
    ppcVar3 = extraout_RAX_13;
  }
  ppcVar3[3] = (code *)local_58;
  ppcVar3[4] = (code *)local_50;
  return;
}



// WARNING: Unknown calling convention

void internal_reflectlite_Swapper_func9(int i,int j)

{
  void *src;
  uint uVar1;
  internal_abi_Type *typ_00;
  void *dst;
  int iVar2;
  void *val1;
  int in_RDX;
  void *tmp;
  internal_unsafeheader_Slice *s;
  void *src_00;
  void *val2;
  internal_abi_Type *typ;
  uintptr size;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffc0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  uVar1 = (*(int **)(in_RDX + 8))[1];
  if (((uint)i < uVar1) && ((uint)j < uVar1)) {
    typ_00 = *(internal_abi_Type **)(in_RDX + 0x18);
    dst = *(void **)(in_RDX + 0x20);
    iVar2 = **(int **)(in_RDX + 8);
    src = (void *)(i * *(int *)(in_RDX + 0x10) + iVar2);
    src_00 = (void *)(iVar2 + *(int *)(in_RDX + 0x10) * j);
    internal_reflectlite_typedmemmove(typ_00,dst,src);
    internal_reflectlite_typedmemmove(typ_00,src,src_00);
    internal_reflectlite_typedmemmove(typ_00,src_00,dst);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffc0);
}



// WARNING: Unknown calling convention

void internal_reflectlite_Swapper_func8(int i,int j)

{
  undefined uVar1;
  int iVar2;
  int in_RDX;
  
  if (*(uint *)(in_RDX + 0x10) <= (uint)i) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  iVar2 = *(int *)(in_RDX + 8);
  uVar1 = *(undefined *)(iVar2 + i);
  if ((uint)j < *(uint *)(in_RDX + 0x10)) {
    *(undefined *)(iVar2 + i) = *(undefined *)(iVar2 + j);
    *(undefined *)(iVar2 + j) = uVar1;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Unknown calling convention

void internal_reflectlite_Swapper_func7(int i,int j)

{
  undefined2 uVar1;
  int iVar2;
  int in_RDX;
  
  if (*(uint *)(in_RDX + 0x10) <= (uint)i) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  iVar2 = *(int *)(in_RDX + 8);
  uVar1 = *(undefined2 *)(iVar2 + i * 2);
  if ((uint)j < *(uint *)(in_RDX + 0x10)) {
    *(undefined2 *)(iVar2 + i * 2) = *(undefined2 *)(iVar2 + j * 2);
    *(undefined2 *)(iVar2 + j * 2) = uVar1;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Unknown calling convention

void internal_reflectlite_Swapper_func6(int i,int j)

{
  undefined4 uVar1;
  int iVar2;
  int in_RDX;
  
  if (*(uint *)(in_RDX + 0x10) <= (uint)i) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  iVar2 = *(int *)(in_RDX + 8);
  uVar1 = *(undefined4 *)(iVar2 + i * 4);
  if ((uint)j < *(uint *)(in_RDX + 0x10)) {
    *(undefined4 *)(iVar2 + i * 4) = *(undefined4 *)(iVar2 + j * 4);
    *(undefined4 *)(iVar2 + j * 4) = uVar1;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Unknown calling convention

void internal_reflectlite_Swapper_func5(int i,int j)

{
  int iVar1;
  undefined8 uVar2;
  int in_RDX;
  
  if (*(uint *)(in_RDX + 0x10) <= (uint)i) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  iVar1 = *(int *)(in_RDX + 8);
  uVar2 = *(undefined8 *)(iVar1 + i * 8);
  if ((uint)j < *(uint *)(in_RDX + 0x10)) {
    *(undefined8 *)(iVar1 + i * 8) = *(undefined8 *)(iVar1 + j * 8);
    *(undefined8 *)(iVar1 + j * 8) = uVar2;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Unknown calling convention

void internal_reflectlite_Swapper_func4(int i,int j)

{
  int iVar1;
  int extraout_RAX;
  int in_RDX;
  int iVar2;
  int iVar3;
  int extraout_RBX;
  int extraout_RBX_00;
  undefined8 extraout_RSI;
  undefined8 extraout_RSI_00;
  undefined8 uVar4;
  undefined8 extraout_RDI;
  undefined8 uVar5;
  undefined8 extraout_R8;
  undefined8 uVar6;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  if ((uint)i < *(uint *)(in_RDX + 0x10)) {
    iVar2 = *(int *)(in_RDX + 8);
    iVar1 = i * 0x10;
    uVar4 = *(undefined8 *)(iVar1 + iVar2);
    uVar5 = *(undefined8 *)(iVar1 + 8 + iVar2);
    if ((uint)j < *(uint *)(in_RDX + 0x10)) {
      iVar3 = j * 0x10;
      uVar6 = *(undefined8 *)(iVar3 + iVar2);
      *(undefined8 *)(iVar2 + 8 + iVar1) = *(undefined8 *)(iVar3 + 8 + iVar2);
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_R8;
        extraout_R11[1] = *(undefined8 *)(extraout_RAX + iVar2);
        iVar1 = extraout_RAX;
        iVar3 = extraout_RBX;
        uVar4 = extraout_RSI;
        uVar5 = extraout_RDI;
        uVar6 = extraout_R8;
      }
      *(undefined8 *)(iVar2 + iVar1) = uVar6;
      *(undefined8 *)(iVar2 + 8 + iVar3) = uVar5;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_00 = extraout_RSI_00;
        extraout_R11_00[1] = *(undefined8 *)(extraout_RBX_00 + iVar2);
        iVar3 = extraout_RBX_00;
        uVar4 = extraout_RSI_00;
      }
      *(undefined8 *)(iVar2 + iVar3) = uVar4;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Unknown calling convention

void internal_reflectlite_Swapper_func3(int i,int j)

{
  int extraout_RAX;
  undefined8 extraout_RCX;
  undefined8 uVar1;
  int in_RDX;
  int iVar2;
  int extraout_RBX;
  undefined8 extraout_RSI;
  undefined8 uVar3;
  undefined8 *extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  if ((uint)i < *(uint *)(in_RDX + 0x10)) {
    iVar2 = *(int *)(in_RDX + 8);
    uVar3 = *(undefined8 *)(iVar2 + i * 8);
    if ((uint)j < *(uint *)(in_RDX + 0x10)) {
      uVar1 = *(undefined8 *)(iVar2 + j * 8);
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier4();
        *extraout_R11 = extraout_RCX;
        extraout_R11[1] = *(undefined8 *)(iVar2 + extraout_RAX * 8);
        extraout_R11[2] = extraout_RSI;
        extraout_R11[3] = *(undefined8 *)(iVar2 + extraout_RBX * 8);
        i = extraout_RAX;
        uVar1 = extraout_RCX;
        j = extraout_RBX;
        uVar3 = extraout_RSI;
      }
      *(undefined8 *)(iVar2 + i * 8) = uVar1;
      *(undefined8 *)(iVar2 + j * 8) = uVar3;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void internal_reflectlite_name_name(internal_reflectlite_name n,string ~r0)

{
  uint uVar1;
  int iVar2;
  int i;
  int v;
  int l;
  uint8 x;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (n.bytes == (uint8 *)0x0) {
    return;
  }
  iVar2 = 0;
  v = 0;
  while( true ) {
    uVar1 = iVar2 * 7;
    if ((int)uVar1 < 0) {
                    // WARNING: Subroutine does not return
      runtime_panicshift();
    }
    v = v + ((uint)(n.bytes[iVar2 + 1] & 0x7f) << ((byte)uVar1 & 0x3f) & -(uint)(uVar1 < 0x40));
    if ((n.bytes[iVar2 + 1] & 0x80) == 0) break;
    iVar2 = iVar2 + 1;
  }
  if (-1 < v) {
    if ((uint)v <= (uint)-(int)(n.bytes + iVar2 + 2)) {
      return;
    }
    if (n.bytes + iVar2 + 2 != (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
      runtime_panicunsafestringlen();
    }
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringnilptr();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafestringlen();
}



void internal_reflectlite_pkgPath(internal_abi_Name n,string ~r0)

{
  uint uVar1;
  internal_reflectlite_name n_00;
  internal_reflectlite_name pkgPathName;
  int iVar2;
  int i;
  dword *~r0_00;
  int i_1;
  int v_1;
  uint8 x_1;
  int l2;
  int iVar3;
  int v;
  int l;
  int off;
  int iVar4;
  uint8 x;
  int unaff_R14;
  string in_stack_ffffffffffffffe0;
  dword local_c;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((n.Bytes != (uint8 *)0x0) && ((*n.Bytes & 4) != 0)) {
    iVar2 = 0;
    iVar3 = 0;
    while( true ) {
      uVar1 = iVar2 * 7;
      if ((int)uVar1 < 0) {
                    // WARNING: Subroutine does not return
        runtime_panicshift();
      }
      iVar3 = ((uint)(n.Bytes[iVar2 + 1] & 0x7f) << ((byte)uVar1 & 0x3f) & -(uint)(uVar1 < 0x40)) +
              iVar3;
      if ((n.Bytes[iVar2 + 1] & 0x80) == 0) break;
      iVar2 = iVar2 + 1;
    }
    iVar4 = iVar3 + iVar2 + 2;
    if ((*n.Bytes & 2) != 0) {
      i_1 = 0;
      v_1 = 0;
      while( true ) {
        uVar1 = i_1 * 7;
        if ((int)uVar1 < 0) {
                    // WARNING: Subroutine does not return
          runtime_panicshift();
        }
        v_1 = v_1 + ((uint)(n.Bytes[iVar3 + iVar2 + i_1 + 2] & 0x7f) << ((byte)uVar1 & 0x3f) &
                    -(uint)(uVar1 < 0x40));
        if ((n.Bytes[iVar3 + iVar2 + i_1 + 2] & 0x80) == 0) break;
        i_1 = i_1 + 1;
      }
      iVar4 = v_1 + i_1 + iVar3 + iVar2 + 3;
    }
    local_c = 0;
    ~r0_00 = (dword *)(n.Bytes + iVar4);
    if (&local_c != ~r0_00) {
      local_c = *(dword *)(n.Bytes + iVar4);
      ~r0_00 = (dword *)(uint)local_c;
    }
    internal_reflectlite_resolveTypeOff(n.Bytes,local_c,~r0_00);
    internal_reflectlite_name_name(n_00,in_stack_ffffffffffffffe0);
    return;
  }
  return;
}



void internal_reflectlite_rtype_String(internal_reflectlite_rtype t,string ~r0)

{
  internal_abi_Name n;
  void *in_RCX;
  void *extraout_RCX;
  int extraout_RBX;
  int unaff_R14;
  string in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RCX = extraout_RCX;
  }
  internal_reflectlite_resolveNameOff(t.Type,(t.Type)->Str,in_RCX);
  internal_abi_Name_Name(n,in_stack_ffffffffffffffe0);
  if (((t.Type)->TFlag & 2) != 0) {
    if (extraout_RBX != 0) {
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  return;
}



void internal_reflectlite_rtype_common(internal_reflectlite_rtype t,internal_abi_Type *~r0)

{
  return;
}



void internal_reflectlite_rtype_exportedMethods
               (internal_reflectlite_rtype t,__internal_abi_Method ~r0)

{
  internal_abi_UncommonType *ut;
  
  if (((t.Type)->TFlag & 1) == 0) {
    ut = (internal_abi_UncommonType *)0x0;
  }
  else {
    switch((t.Type)->Kind_ & 0x1f) {
    case 0x11:
      ut = (internal_abi_UncommonType *)&t.Type[1].Equal;
      break;
    case 0x12:
      ut = (internal_abi_UncommonType *)&t.Type[1].Hash;
      break;
    case 0x13:
      ut = (internal_abi_UncommonType *)&t.Type[1].PtrBytes;
      break;
    case 0x14:
      ut = (internal_abi_UncommonType *)&t.Type[1].GCData;
      break;
    case 0x15:
      ut = (internal_abi_UncommonType *)&t.Type[1].Str;
      break;
    case 0x16:
      ut = (internal_abi_UncommonType *)&t.Type[1].PtrBytes;
      break;
    case 0x17:
      ut = (internal_abi_UncommonType *)&t.Type[1].PtrBytes;
      break;
    default:
      ut = (internal_abi_UncommonType *)(t.Type + 1);
      break;
    case 0x19:
      ut = (internal_abi_UncommonType *)&t.Type[1].GCData;
    }
  }
  if (ut != (internal_abi_UncommonType *)0x0) {
    if ((ut->Xcount != 0) && (0x10000 < ut->Xcount)) {
                    // WARNING: Subroutine does not return
      runtime_panicSlice3Alen();
    }
    return;
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void internal_reflectlite_rtype_NumMethod(internal_reflectlite_rtype t,int ~r0)

{
  __internal_abi_Method ~r0_00;
  internal_abi_InterfaceType *tt;
  undefined8 unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  undefined8 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  tt = (internal_abi_InterfaceType *)t.Type;
  if (((t.Type)->Kind_ & 0x1f) != 0x14) {
    tt = (internal_abi_InterfaceType *)0x0;
  }
  if (tt == (internal_abi_InterfaceType *)0x0) {
    ~r0_00.len = unaff_RBP;
    ~r0_00.array = (internal_abi_Method *)in_stack_fffffffffffffff0;
    ~r0_00.cap = unaff_retaddr;
    internal_reflectlite_rtype_exportedMethods(t,~r0_00);
    return;
  }
  return;
}



void internal_reflectlite_rtype_PkgPath(internal_reflectlite_rtype t,string ~r0)

{
  internal_abi_Name n;
  internal_abi_UncommonType *ut;
  int unaff_R14;
  string in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((t.Type)->TFlag & 4) == 0) {
    return;
  }
  if (((t.Type)->TFlag & 1) == 0) {
    ut = (internal_abi_UncommonType *)0x0;
  }
  else {
    switch((t.Type)->Kind_ & 0x1f) {
    case 0x11:
      ut = (internal_abi_UncommonType *)&t.Type[1].Equal;
      break;
    case 0x12:
      ut = (internal_abi_UncommonType *)&t.Type[1].Hash;
      break;
    case 0x13:
      ut = (internal_abi_UncommonType *)&t.Type[1].PtrBytes;
      break;
    case 0x14:
      ut = (internal_abi_UncommonType *)&t.Type[1].GCData;
      break;
    case 0x15:
      ut = (internal_abi_UncommonType *)&t.Type[1].Str;
      break;
    case 0x16:
      ut = (internal_abi_UncommonType *)&t.Type[1].PtrBytes;
      break;
    case 0x17:
      ut = (internal_abi_UncommonType *)&t.Type[1].PtrBytes;
      break;
    default:
      ut = (internal_abi_UncommonType *)(t.Type + 1);
      break;
    case 0x19:
      ut = (internal_abi_UncommonType *)&t.Type[1].GCData;
    }
  }
  if (ut != (internal_abi_UncommonType *)0x0) {
    internal_reflectlite_resolveNameOff(t.Type,ut->PkgPath,ut);
    internal_abi_Name_Name(n,in_stack_ffffffffffffffe8);
    return;
  }
  return;
}



void internal_reflectlite_rtype_Name(internal_reflectlite_rtype t,string ~r0)

{
  char cVar1;
  uint uVar2;
  int extraout_RAX;
  uint uVar3;
  int i;
  int sqBrackets;
  int iVar4;
  uint extraout_RBX;
  int unaff_R14;
  string in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((t.Type)->TFlag & 4) == 0) {
    return;
  }
  internal_reflectlite_rtype_String(t,in_stack_ffffffffffffffe8);
  iVar4 = 0;
  uVar2 = extraout_RBX;
  while ((uVar3 = uVar2 - 1, -1 < (int)uVar3 &&
         ((cVar1 = *(char *)(extraout_RAX + uVar3), cVar1 != '.' || (iVar4 != 0))))) {
    uVar2 = uVar3;
    if (cVar1 == '[') {
      iVar4 = iVar4 + -1;
    }
    else if (cVar1 == ']') {
      iVar4 = iVar4 + 1;
    }
  }
  if (extraout_RBX < uVar2) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  return;
}



// Local variable tt:internal/abi.ArrayType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_1:internal/abi.ChanType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_2:internal/abi.MapType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_3:internal/abi.PtrType *[RAX:8] conflicts with parameter, skipped.
// Local variable tt_4:internal/abi.SliceType *[RAX:8] conflicts with parameter, skipped.

void internal_reflectlite_elem(internal_abi_Type *t,internal_abi_Type *~r0)

{
  string ~r0_00;
  void *x;
  byte bVar1;
  internal_abi_Type *et;
  int unaff_RBP;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  bVar1 = t->Kind_ & 0x1f;
  if (bVar1 < 0x13) {
    if (bVar1 == 0x11) {
      et = (internal_abi_Type *)t[1].Size_;
      goto LAB_004714c0;
    }
    if (bVar1 == 0x12) {
      et = (internal_abi_Type *)t[1].Size_;
      goto LAB_004714c0;
    }
  }
  else {
    if (bVar1 == 0x15) {
      et = (internal_abi_Type *)t[1].PtrBytes;
      goto LAB_004714c0;
    }
    if (bVar1 == 0x16) {
      et = (internal_abi_Type *)t[1].Size_;
      goto LAB_004714c0;
    }
    if (bVar1 == 0x17) {
      et = (internal_abi_Type *)t[1].Size_;
      goto LAB_004714c0;
    }
  }
  et = (internal_abi_Type *)0x0;
LAB_004714c0:
  if (et != (internal_abi_Type *)0x0) {
    return;
  }
  internal_reflectlite_rtype_String((internal_reflectlite_rtype)t,(string)in_stack_ffffffffffffffd0)
  ;
  ~r0_00.len = unaff_RBP;
  ~r0_00.str = in_stack_fffffffffffffff0;
  runtime_concatstring2
            ((runtime_tmpBuf *)0x0,(string)in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,
             ~r0_00);
  runtime_convTstring((string)in_stack_ffffffffffffffd0,x);
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffd0);
}



void internal_reflectlite_rtype_Elem(internal_reflectlite_rtype t,internal_reflectlite_Type ~r0)

{
  internal_abi_Type *in_RBX;
  internal_abi_Type *extraout_RBX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  internal_reflectlite_elem(t.Type,in_RBX);
  return;
}



void internal_reflectlite_rtype_In(internal_reflectlite_rtype t,int i,internal_reflectlite_Type ~r0)

{
  internal_abi_FuncType *tt;
  uintptr uadd;
  uint uVar1;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  tt = (internal_abi_FuncType *)t.Type;
  if (((t.Type)->Kind_ & 0x1f) != 0x13) {
    tt = (internal_abi_FuncType *)0x0;
  }
  if (tt == (internal_abi_FuncType *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe8);
  }
  uVar1 = (uint)tt->InCount;
  if (tt->InCount == 0) {
    uVar1 = 0;
  }
  else if (0x10000 < uVar1) {
                    // WARNING: Subroutine does not return
    runtime_panicSlice3Alen();
  }
  if ((uint)i < uVar1) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void internal_reflectlite_rtype_Key(internal_reflectlite_rtype t,internal_reflectlite_Type ~r0)

{
  internal_abi_MapType *tt;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  tt = (internal_abi_MapType *)t.Type;
  if (((t.Type)->Kind_ & 0x1f) != 0x15) {
    tt = (internal_abi_MapType *)0x0;
