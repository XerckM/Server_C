        newLen = extraout_RBX_01;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_01 = extraout_RAX_04;
          extraout_R11_01[1] = (prVar4->Sub).array;
          pprVar2 = extraout_RAX_04;
          newLen = extraout_RBX_02;
        }
        (prVar4->Sub).array = pprVar2;
        uVar6 = (uint)bStack0000000000000028;
        p_00 = p;
        prVar3 = ~r0;
        pvVar5 = ~r0_00;
      }
      (prVar4->Sub).len = newLen;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_02 = extraout_R8_00;
        extraout_R11_02[1] = extraout_R9[extraout_R10 - 1];
        p_00 = extraout_RAX_05;
        prVar3 = extraout_RCX_02;
        pvVar5 = extraout_RBX_03;
        uVar6 = extraout_RSI_01;
        iVar7 = extraout_RDI;
        key = extraout_R8_00;
        newLen = extraout_R10;
        pprVar2 = extraout_R9;
      }
      pprVar2[newLen - 1] = key;
    }
  }
  if ((regexp_syntax_Op)uVar6 == 0x13) {
    regexp_syntax___parser__factor(p_00,in_stack_ffffffffffffff70,in_stack_ffffffffffffff88);
    (re->Sub).len = extraout_RBX_05;
    (re->Sub).cap = extraout_RCX_04;
    pprVar2 = extraout_RAX_08;
    prVar3 = re;
    iVar7 = extraout_RBX_05;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_05 = extraout_RAX_09;
      extraout_R11_05[1] = (prVar3->Sub).array;
      pprVar2 = extraout_RAX_09;
      iVar7 = extraout_RBX_06;
    }
    (prVar3->Sub).array = pprVar2;
    if (iVar7 == 1) {
      if (p->height != (map__regexp_syntax_Regexp_int)0x0) {
        runtime_mapdelete_fast64
                  ((internal_abi_MapType *)&DAT_00830520,(runtime_hmap *)p->height,(uint64)prVar3);
        prVar3 = re;
      }
      prVar4 = p->free;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier4();
        *extraout_R11_06 = extraout_RCX_05;
        extraout_R11_06[1] = prVar3->Sub0[0];
        extraout_R11_06[2] = prVar3;
        extraout_R11_06[3] = extraout_RSI_02->free;
        prVar4 = extraout_RCX_05;
        p = extraout_RSI_02;
      }
      prVar3->Sub0[0] = prVar4;
      p->free = prVar3;
    }
  }
  return;
}



void regexp_syntax___parser__factor
               (regexp_syntax_parser *p,___regexp_syntax_Regexp sub,___regexp_syntax_Regexp ~r0)

{
  regexp_syntax_Op rVar1;
  byte bVar2;
  byte bVar3;
  byte *pbVar4;
  byte *pbVar5;
  int iVar6;
  char extraout_AL;
  regexp_syntax_parser *prVar7;
  void *extraout_RAX;
  regexp_syntax_parser *extraout_RAX_00;
  int extraout_RAX_01;
  regexp_syntax_Regexp *extraout_RAX_02;
  int32 *extraout_RAX_03;
  regexp_syntax_Regexp *extraout_RAX_04;
  regexp_syntax_Regexp *suffix;
  regexp_syntax_Regexp *prVar8;
  regexp_syntax_Regexp *extraout_RAX_05;
  regexp_syntax_Regexp **extraout_RAX_06;
  regexp_syntax_Regexp *extraout_RAX_07;
  void *extraout_RAX_08;
  void *extraout_RAX_09;
  void *extraout_RAX_10;
  regexp_syntax_parser *extraout_RAX_11;
  regexp_syntax_Regexp *extraout_RAX_12;
  regexp_syntax_Regexp *suffix_1;
  regexp_syntax_Regexp *extraout_RAX_13;
  regexp_syntax_Regexp **extraout_RAX_14;
  regexp_syntax_Regexp *extraout_RAX_15;
  void *extraout_RAX_16;
  void *extraout_RAX_17;
  void *extraout_RAX_18;
  void *extraout_RAX_19;
  void *extraout_RAX_20;
  void *extraout_RAX_21;
  void *extraout_RAX_22;
  void *extraout_RAX_23;
  void *pvVar9;
  regexp_syntax_Regexp *extraout_RAX_24;
  regexp_syntax_Regexp *extraout_RAX_25;
  regexp_syntax_Regexp *extraout_RAX_26;
  regexp_syntax_Regexp *extraout_RAX_27;
  int same;
  regexp_syntax_parser *prVar10;
  regexp_syntax_Regexp *in_RCX;
  regexp_syntax_Regexp *extraout_RCX;
  regexp_syntax_Regexp *extraout_RCX_00;
  regexp_syntax_Regexp *extraout_RCX_01;
  regexp_syntax_Regexp *re;
  uint extraout_RCX_02;
  regexp_syntax_Regexp *extraout_RCX_03;
  regexp_syntax_Regexp *extraout_RCX_04;
  regexp_syntax_Regexp *extraout_RCX_05;
  regexp_syntax_Regexp *extraout_RCX_06;
  regexp_syntax_Regexp *prVar11;
  regexp_syntax_Regexp *extraout_RCX_07;
  void *extraout_RCX_08;
  regexp_syntax_Regexp *re_1;
  bool reuse;
  uint extraout_RCX_09;
  regexp_syntax_Regexp *extraout_RCX_10;
  regexp_syntax_Regexp *extraout_RCX_11;
  regexp_syntax_Regexp *extraout_RCX_12;
  regexp_syntax_Regexp *extraout_RCX_13;
  regexp_syntax_Regexp *extraout_RCX_14;
  void *extraout_RCX_15;
  void *extraout_RCX_16;
  regexp_syntax_Regexp *extraout_RCX_17;
  regexp_syntax_Regexp *extraout_RCX_18;
  regexp_syntax_Regexp *prVar12;
  regexp_syntax_Regexp *extraout_RCX_19;
  void *extraout_RCX_20;
  int i_3;
  regexp_syntax_Regexp *extraout_RCX_21;
  void *pvVar13;
  regexp_syntax_parser *extraout_RCX_22;
  int i_2;
  uint newLen;
  void *in_RBX;
  regexp_syntax_Regexp *extraout_RBX;
  void *extraout_RBX_00;
  regexp_syntax_Regexp *extraout_RBX_01;
  void *~r0_00;
  regexp_syntax_Regexp *extraout_RBX_02;
  regexp_syntax_Regexp *extraout_RBX_03;
  regexp_syntax_Regexp *extraout_RBX_04;
  void *extraout_RBX_05;
  void *~r0_01;
  regexp_syntax_Regexp *prVar14;
  regexp_syntax_Regexp *extraout_RBX_06;
  regexp_syntax_Regexp *extraout_RBX_07;
  uint extraout_RBX_08;
  void *extraout_RBX_09;
  uint extraout_RBX_10;
  uint extraout_RBX_11;
  uint uVar15;
  uint extraout_RBX_12;
  void *extraout_RBX_13;
  uint extraout_RBX_14;
  void *extraout_RBX_15;
  regexp_syntax_Flags iflags;
  char *pcVar16;
  regexp_syntax_Regexp *re_2;
  void *dst;
  regexp_syntax_Regexp *extraout_RSI;
  regexp_syntax_Regexp *prefix;
  regexp_syntax_Regexp *extraout_RSI_00;
  regexp_syntax_Regexp *prVar17;
  regexp_syntax_Regexp *extraout_RSI_01;
  int max;
  regexp_syntax_Regexp *extraout_RSI_02;
  regexp_syntax_Regexp *extraout_RSI_03;
  void *extraout_RSI_04;
  regexp_syntax_Regexp *in_RDI;
  regexp_syntax_Regexp *extraout_RDI;
  regexp_syntax_Regexp *prVar18;
  int32 *oldPtr;
  regexp_syntax_Regexp *extraout_RDI_00;
  regexp_syntax_Regexp *extraout_RDI_01;
  regexp_syntax_Regexp *re_3;
  void *dst_00;
  regexp_syntax_Regexp *extraout_RDI_02;
  regexp_syntax_Regexp *re_4;
  void *dst_01;
  regexp_syntax_Regexp *extraout_RDI_03;
  regexp_syntax_Regexp *extraout_RDI_04;
  regexp_syntax_Regexp *extraout_RDI_05;
  regexp_syntax_Regexp *extraout_RDI_06;
  regexp_syntax_Regexp *prVar19;
  regexp_syntax_Regexp *extraout_R8;
  undefined8 extraout_R8_00;
  uint extraout_R8_01;
  regexp_syntax_Regexp *extraout_R8_02;
  int j_1;
  regexp_syntax_Regexp *extraout_R8_03;
  undefined8 extraout_R8_04;
  uint extraout_R8_05;
  regexp_syntax_Regexp *extraout_R8_06;
  uint extraout_R8_07;
  uint extraout_R8_08;
  uint extraout_R8_09;
  uint uVar20;
  regexp_syntax_Regexp *extraout_R8_10;
  int j;
  regexp_syntax_Regexp *extraout_R9;
  regexp_syntax_Regexp **extraout_R9_00;
  regexp_syntax_Regexp **extraout_R9_01;
  regexp_syntax_Regexp **pprVar21;
  regexp_syntax_Regexp *first;
  regexp_syntax_Regexp *prefix_1;
  regexp_syntax_Regexp *extraout_R9_02;
  regexp_syntax_Regexp **extraout_R9_03;
  regexp_syntax_Regexp **extraout_R9_04;
  regexp_syntax_Regexp *extraout_R9_05;
  undefined8 extraout_R9_06;
  undefined8 uVar22;
  regexp_syntax_Regexp *extraout_R9_07;
  uint extraout_R9_08;
  uint uVar23;
  regexp_syntax_Flags extraout_R10W;
  regexp_syntax_Flags rVar24;
  regexp_syntax_Regexp *extraout_R10;
  regexp_syntax_Regexp *extraout_R10_00;
  regexp_syntax_Regexp *extraout_R10_01;
  regexp_syntax_Regexp *extraout_R10_02;
  regexp_syntax_Regexp *extraout_R10_03;
  regexp_syntax_Regexp *extraout_R10_04;
  regexp_syntax_Regexp **extraout_R11;
  regexp_syntax_Regexp **extraout_R11_00;
  regexp_syntax_Regexp *extraout_R11_01;
  int32 **extraout_R11_02;
  undefined8 *extraout_R11_03;
  regexp_syntax_Regexp **extraout_R11_04;
  void **extraout_R11_05;
  regexp_syntax_Regexp **extraout_R11_06;
  regexp_syntax_Regexp *sub_1;
  regexp_syntax_Regexp *ifirst;
  regexp_syntax_Regexp **extraout_R11_07;
  undefined8 *extraout_R11_08;
  regexp_syntax_Regexp **extraout_R11_09;
  void **extraout_R11_10;
  regexp_syntax_Regexp **extraout_R11_11;
  regexp_syntax_Regexp **extraout_R11_12;
  undefined8 *extraout_R11_13;
  regexp_syntax_Regexp **extraout_R11_14;
  regexp_syntax_Regexp **extraout_R11_15;
  regexp_syntax_Regexp **extraout_R11_16;
  regexp_syntax_Regexp **extraout_R11_17;
  regexp_syntax_Regexp **extraout_R11_18;
  regexp_syntax_Regexp **extraout_R11_19;
  char cVar25;
  void *pvVar26;
  void *pvVar27;
  undefined8 uVar28;
  int j_2;
  int unaff_R14;
  bool bVar29;
  bool bVar30;
  bool bVar31;
  ___regexp_syntax_Regexp in_stack_fffffffffffffe78;
  regexp_syntax_Flags strflags;
  regexp_syntax_Flags local_142;
  regexp_syntax_Regexp *local_140;
  int i_1;
  regexp_syntax_Regexp *local_128;
  int j_3;
  regexp_syntax_Regexp *local_108;
  regexp_syntax_Regexp *local_100;
  regexp_syntax_Regexp *local_f8;
  regexp_syntax_Regexp *local_f0;
  regexp_syntax_Regexp *local_e8;
  regexp_syntax_parser *local_e0;
  regexp_syntax_parser *local_d8;
  regexp_syntax_Regexp *local_d0;
  regexp_syntax_Regexp *local_c8;
  regexp_syntax_Regexp *local_c0;
  uint local_b8;
  regexp_syntax_Regexp *local_b0;
  regexp_syntax_Regexp *local_a8;
  regexp_syntax_Regexp *local_a0;
  int start;
  regexp_syntax_Regexp *local_90;
  regexp_syntax_Regexp *local_88;
  void *local_80;
  regexp_syntax_Regexp *local_78;
  regexp_syntax_Regexp *local_70;
  regexp_syntax_Regexp *local_68;
  regexp_syntax_Regexp *local_60;
  void *local_58;
  void *local_50;
  regexp_syntax_Regexp *local_48;
  regexp_syntax_Regexp *local_40;
  regexp_syntax_Regexp *local_38;
  int32 *local_30;
  void *local_28;
  regexp_syntax_Regexp *local_20;
  regexp_syntax_Regexp *local_18;
  void *local_10;
  
  while (&local_108 <= *(regexp_syntax_Regexp ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((int)in_RCX < 2) {
    return;
  }
  rVar24 = 0;
  prVar14 = (regexp_syntax_Regexp *)0x0;
  prVar12 = (regexp_syntax_Regexp *)0x0;
  prVar10 = p;
  prVar8 = in_RCX;
  pvVar13 = in_RBX;
  pvVar9 = in_RBX;
  prVar18 = in_RDI;
  j = 0;
  prVar11 = (regexp_syntax_Regexp *)0x0;
  pvVar27 = (void *)0x0;
  for (prVar17 = (regexp_syntax_Regexp *)0x0; local_58 = pvVar9, (int)prVar17 <= (int)prVar8;
      prVar17 = (regexp_syntax_Regexp *)&prVar17->field_0x1) {
    start = j;
    if ((int)prVar17 < (int)prVar8) {
      if (prVar8 <= prVar17) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      pcVar16 = *(char **)((int)pvVar13 + (int)prVar17 * 8);
      if ((*pcVar16 == '\x12') && (*(int *)(pcVar16 + 0x10) != 0)) {
        pcVar16 = **(char ***)(pcVar16 + 8);
      }
      if (*pcVar16 == '\x03') {
        local_50 = *(void **)(pcVar16 + 0x28);
        local_f8 = *(regexp_syntax_Regexp **)(pcVar16 + 0x30);
        local_f0 = *(regexp_syntax_Regexp **)(pcVar16 + 0x38);
        local_142 = *(ushort *)(pcVar16 + 2) & 1;
        prVar7 = p;
      }
      else {
        local_f8 = (regexp_syntax_Regexp *)0x0;
        local_50 = (void *)0x0;
        local_f0 = (regexp_syntax_Regexp *)0x0;
        local_142 = 0;
        prVar7 = prVar10;
      }
      prVar10 = prVar7;
      if (rVar24 != local_142) {
LAB_006f38b8:
        local_140 = local_f8;
        local_80 = local_50;
        prVar14 = local_f0;
        goto LAB_006f2668;
      }
      for (local_128 = (regexp_syntax_Regexp *)0x0;
          (((int)local_128 < (int)prVar11 && ((int)local_128 < (int)local_f8)) &&
          (prVar10 = p, pvVar13 = in_RBX,
          *(sdword *)((int)local_50 + (int)local_128 * 4) ==
          *(sdword *)((int)pvVar27 + (int)local_128 * 4)));
          local_128 = (regexp_syntax_Regexp *)&local_128->field_0x1) {
      }
      local_e0 = prVar7;
      if ((int)local_128 < 1) goto LAB_006f38b8;
      prVar19 = (regexp_syntax_Regexp *)j;
      local_140 = local_128;
      pvVar26 = pvVar27;
      local_142 = rVar24;
      if (prVar14 < local_128) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
    }
    else {
      local_140 = (regexp_syntax_Regexp *)0x0;
      local_80 = (void *)0x0;
      local_142 = 0;
      prVar14 = (regexp_syntax_Regexp *)0x0;
LAB_006f2668:
      prVar19 = prVar17;
      pvVar26 = local_80;
      if ((regexp_syntax_Regexp *)j != prVar17) {
        local_a8 = prVar14;
        if (prVar17 == (regexp_syntax_Regexp *)(j + 1)) {
          if (prVar8 <= (uint)j) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          prVar12 = (regexp_syntax_Regexp *)&prVar12->field_0x1;
          prVar11 = *(regexp_syntax_Regexp **)((int)pvVar13 + j * 8);
          if (prVar18 < prVar12) {
            local_20 = prVar11;
            runtime_growslice(pvVar9,(int)prVar12,(int)prVar18,1,(internal_abi_Type *)&DAT_00865800,
                              (runtime_slice)in_stack_fffffffffffffe78);
            prVar10 = p;
            prVar8 = in_RCX;
            pvVar13 = in_RBX;
            pvVar9 = extraout_RAX;
            prVar18 = extraout_RCX;
            prVar11 = local_20;
            prVar12 = extraout_RBX;
          }
          prVar14 = local_a8;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11 = extraout_R9;
            extraout_R11[1] =
                 *(regexp_syntax_Regexp **)((int)extraout_RBX_00 + (int)extraout_R10 * 8 + -8);
            prVar10 = extraout_RAX_00;
            prVar8 = extraout_RCX_00;
            pvVar9 = extraout_RBX_00;
            prVar18 = extraout_RDI;
            prVar17 = extraout_R8;
            prVar11 = extraout_R9;
            prVar12 = extraout_R10;
          }
          *(regexp_syntax_Regexp **)((int)pvVar9 + (int)prVar12 * 8 + -8) = prVar11;
          prVar19 = prVar17;
          pvVar26 = local_80;
        }
        else {
          prVar8 = prVar10->free;
          local_c0 = prVar11;
          local_28 = pvVar27;
          if (prVar8 == (regexp_syntax_Regexp *)0x0) {
            runtime_newobject((internal_abi_Type *)&DAT_00893c00,pvVar9);
            p->numRegexp = p->numRegexp + 1;
            local_20 = extraout_RAX_02;
            prVar8 = local_c0;
            pvVar9 = local_28;
          }
          else {
            prVar11 = prVar8->Sub0[0];
            if (runtime_writeBarrier._0_4_ != 0) {
              local_60 = prVar8;
              local_20 = prVar11;
              runtime_gcWriteBarrier2();
              *extraout_R11_00 = prVar11;
              extraout_R11_00[1] = *(regexp_syntax_Regexp **)(extraout_RAX_01 + 0x20);
              runtime_wbZero((internal_abi_Type *)&DAT_00893c00,dst);
              prVar10 = p;
              prVar11 = local_20;
            }
            prVar10->free = prVar11;
            pvVar9 = local_28;
            FUN_0046cda6();
            local_20 = extraout_RSI;
            prVar8 = extraout_R11_01;
            rVar24 = extraout_R10W;
          }
          local_20->Op = 3;
          local_20->Flags = rVar24;
          prVar11 = (regexp_syntax_Regexp *)(local_20->Rune).cap;
          oldPtr = (local_20->Rune).array;
          if (prVar11 < prVar8) {
            runtime_growslice(oldPtr,(int)prVar8,(int)prVar11,(int)prVar8,
                              (internal_abi_Type *)&DAT_008077e0,
                              (runtime_slice)in_stack_fffffffffffffe78);
            oldPtr = extraout_RAX_03;
            prVar11 = extraout_RCX_01;
            prVar8 = extraout_RBX_01;
            pvVar9 = local_28;
          }
          local_d0 = prVar8;
          local_c8 = prVar11;
          local_30 = oldPtr;
          runtime_memmove(oldPtr,pvVar9,(int)local_c0 << 2);
          (local_20->Rune).len = (int)local_d0;
          (local_20->Rune).cap = (int)local_c8;
          prVar8 = local_20;
          prVar11 = extraout_RDI_00;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_02 = local_30;
            extraout_R11_02[1] = (extraout_RSI_00->Rune).array;
            prVar8 = extraout_RSI_00;
            prVar11 = extraout_RDI_01;
          }
          (prVar8->Rune).array = local_30;
          prVar8 = (regexp_syntax_Regexp *)start;
          while ((int)prVar8 < (int)prVar17) {
            if (in_RCX <= prVar8) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            local_100 = prVar8;
            regexp_syntax___parser__removeLeadingString
                      (p,*(regexp_syntax_Regexp **)((int)in_RBX + (int)prVar8 * 8),(int)local_c0,
                       prVar11);
            prVar8 = extraout_RAX_26;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier2();
              *extraout_R11_19 = extraout_RAX_27;
              extraout_R11_19[1] = *(regexp_syntax_Regexp **)((int)in_RBX + (int)local_100 * 8);
              prVar8 = extraout_RAX_27;
            }
            *(regexp_syntax_Regexp **)((int)in_RBX + (int)local_100 * 8) = prVar8;
            regexp_syntax___parser__checkLimits(p,prVar8);
            prVar11 = prVar17;
            prVar8 = (regexp_syntax_Regexp *)&local_100->field_0x1;
          }
          if (in_RDI < prVar17) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceAcap();
          }
          if (prVar17 < (uint)start) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          regexp_syntax___parser__collapse
                    (p,in_stack_fffffffffffffe78,
                     (char)in_RBX + ((byte)(start << 3) & (byte)(-((int)in_RDI - start) >> 0x3f)),
                     (regexp_syntax_Regexp *)((int)prVar17 - start));
          prVar8 = p->free;
          local_88 = extraout_RAX_04;
          if (prVar8 == (regexp_syntax_Regexp *)0x0) {
            runtime_newobject((internal_abi_Type *)&DAT_00893c00,~r0_00);
            p->numRegexp = p->numRegexp + 1;
            prVar8 = local_88;
            local_68 = extraout_RAX_05;
          }
          else {
            prVar11 = prVar8->Sub0[0];
            local_68 = prVar8;
            if (runtime_writeBarrier._0_4_ != 0) {
              prVar10 = p;
              local_38 = prVar8->Sub0[0];
              runtime_gcWriteBarrier2();
              *extraout_R11_03 = extraout_R8_00;
              extraout_R11_03[1] = prVar10->free;
              runtime_wbZero((internal_abi_Type *)&DAT_00893c00,dst_00);
              prVar11 = local_38;
            }
            p->free = prVar11;
            prVar8 = (regexp_syntax_Regexp *)FUN_0046cda6();
          }
          local_68->Op = 0x12;
          uVar15 = (local_68->Sub).cap;
          pprVar21 = (local_68->Sub).array;
          if (uVar15 < 2) {
            runtime_growslice(pprVar21,2,uVar15,2,(internal_abi_Type *)&DAT_00865800,
                              (runtime_slice)in_stack_fffffffffffffe78);
            prVar8 = local_88;
            uVar15 = extraout_RCX_02;
            pprVar21 = extraout_RAX_06;
          }
          prVar11 = local_68;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier4();
            *extraout_R11_04 = local_20;
            extraout_R11_04[1] = *extraout_R9_00;
            extraout_R11_04[2] = extraout_RAX_07;
            extraout_R11_04[3] = extraout_R9_00[1];
            prVar8 = extraout_RAX_07;
            prVar11 = extraout_RCX_03;
            uVar15 = extraout_R8_01;
            pprVar21 = extraout_R9_00;
          }
          *pprVar21 = local_20;
          pprVar21[1] = prVar8;
          (prVar11->Sub).len = 2;
          (prVar11->Sub).cap = uVar15;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_05 = extraout_R9_01;
            extraout_R11_05[1] = (extraout_RCX_04->Sub).array;
            prVar11 = extraout_RCX_04;
            pprVar21 = extraout_R9_01;
          }
          (prVar11->Sub).array = pprVar21;
          prVar12 = (regexp_syntax_Regexp *)&prVar12->field_0x1;
          if (prVar18 < prVar12) {
            runtime_growslice(local_58,(int)prVar12,(int)prVar18,1,
                              (internal_abi_Type *)&DAT_00865800,
                              (runtime_slice)in_stack_fffffffffffffe78);
            local_58 = extraout_RAX_08;
            prVar11 = local_68;
            prVar12 = extraout_RBX_02;
            prVar18 = extraout_RCX_05;
          }
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_06 = extraout_RCX_06;
            extraout_R11_06[1] =
                 *(regexp_syntax_Regexp **)((int)extraout_RAX_09 + (int)extraout_RBX_03 * 8 + -8);
            local_58 = extraout_RAX_09;
            prVar11 = extraout_RCX_06;
            prVar12 = extraout_RBX_03;
            prVar18 = extraout_R8_02;
          }
          *(regexp_syntax_Regexp **)((int)local_58 + (int)prVar12 * 8 + -8) = prVar11;
          prVar10 = p;
          prVar8 = in_RCX;
          pvVar13 = in_RBX;
          pvVar9 = local_58;
          prVar14 = local_a8;
          pvVar26 = local_80;
        }
      }
    }
    rVar24 = local_142;
    j = (int)prVar19;
    prVar11 = local_140;
    pvVar27 = pvVar26;
    local_d8 = prVar10;
  }
  j_1 = 0;
  prefix_1 = (regexp_syntax_Regexp *)0x0;
  prVar8 = prVar18;
  pvVar13 = pvVar9;
  local_b0 = prVar18;
  prVar11 = (regexp_syntax_Regexp *)0x0;
  prVar14 = prVar12;
  for (prVar17 = (regexp_syntax_Regexp *)0x0; local_10 = pvVar13, start = (int)prVar11,
      (int)prVar17 <= (int)prVar14; prVar17 = (regexp_syntax_Regexp *)&prVar17->field_0x1) {
    local_a8 = (regexp_syntax_Regexp *)j_1;
    local_a0 = local_b0;
    local_40 = prefix_1;
    if ((int)prVar17 < (int)prVar14) {
      if (prVar14 <= prVar17) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      ifirst = *(regexp_syntax_Regexp **)((int)pvVar9 + (int)prVar17 * 8);
      if (ifirst->Op == 2) {
        ifirst = (regexp_syntax_Regexp *)0x0;
      }
      else if (((ifirst->Op == 0x12) && ((ifirst->Sub).len != 0)) &&
              (ifirst = *(ifirst->Sub).array, ifirst->Op == 2)) {
        ifirst = (regexp_syntax_Regexp *)0x0;
      }
      if (prefix_1 == (regexp_syntax_Regexp *)0x0) {
        cVar25 = '\0';
      }
      else {
        local_48 = ifirst;
        regexp_syntax___Regexp__Equal(prefix_1,ifirst,SUB81(pvVar9,0));
        prVar10 = p;
        pvVar9 = local_58;
        prVar8 = prVar18;
        ifirst = local_48;
        prVar14 = prVar12;
        cVar25 = extraout_AL;
      }
      if (cVar25 == '\0') goto LAB_006f2da5;
      rVar1 = local_40->Op;
      local_b0 = local_a0;
      j_1 = (int)local_a8;
      first = local_40;
      if (((rVar1 != 3) || ((local_40->Rune).len != 1)) &&
         ((rVar1 != 4 && ((rVar1 != 5 && (rVar1 != 6)))))) {
        if ((rVar1 == 0x11) && (local_40->Max == local_40->Min)) {
          if ((local_40->Sub).len == 0) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          prVar11 = *(local_40->Sub).array;
          rVar1 = prVar11->Op;
          if ((((rVar1 == 3) && ((prVar11->Rune).len == 1)) || (rVar1 == 4)) ||
             ((rVar1 == 5 || (rVar1 == 6)))) goto LAB_006f2c0b;
        }
        goto LAB_006f2da5;
      }
    }
    else {
      ifirst = (regexp_syntax_Regexp *)0x0;
LAB_006f2da5:
      first = ifirst;
      local_b0 = local_a0;
      j_1 = (int)prVar17;
      if (local_a8 != prVar17) {
        prVar11 = local_a8;
        local_18 = first;
        if (prVar17 == (regexp_syntax_Regexp *)&local_a8->field_0x1) {
          if (prVar14 <= local_a8) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          prVar11 = (regexp_syntax_Regexp *)(start + 1);
          prVar19 = *(regexp_syntax_Regexp **)((int)pvVar9 + (int)local_a8 * 8);
          if (local_a0 < prVar11) {
            local_20 = prVar19;
            runtime_growslice(local_10,(int)prVar11,(int)local_a0,1,
                              (internal_abi_Type *)&DAT_00865800,
                              (runtime_slice)in_stack_fffffffffffffe78);
            prVar10 = p;
            pvVar9 = local_58;
            prVar8 = prVar18;
            local_10 = extraout_RAX_10;
            local_b0 = extraout_RCX_07;
            prVar19 = local_20;
            prVar11 = extraout_RBX_04;
            prVar14 = prVar12;
          }
          first = local_18;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_07 = extraout_R8_03;
            extraout_R11_07[1] =
                 *(regexp_syntax_Regexp **)((int)extraout_RBX_05 + (int)extraout_R9_02 * 8 + -8);
            prVar10 = extraout_RAX_11;
            pvVar9 = extraout_RCX_08;
            local_10 = extraout_RBX_05;
            prVar17 = extraout_RSI_01;
            local_b0 = extraout_RDI_02;
            prVar19 = extraout_R8_03;
            prVar11 = extraout_R9_02;
            first = extraout_R10_00;
          }
          *(regexp_syntax_Regexp **)((int)local_10 + (int)prVar11 * 8 + -8) = prVar19;
          j_1 = (int)prVar17;
          start = (int)prVar11;
        }
        else {
          while ((int)prVar11 < (int)prVar17) {
            if (prVar14 <= prVar11) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            local_108 = prVar11;
            regexp_syntax___parser__removeLeadingRegexp
                      (prVar10,*(regexp_syntax_Regexp **)((int)pvVar9 + (int)prVar11 * 8),
                       prVar11 != local_a8,local_a0);
            prVar8 = extraout_RAX_24;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier2();
              *extraout_R11_18 = extraout_RAX_25;
              extraout_R11_18[1] = *(regexp_syntax_Regexp **)((int)local_58 + (int)local_108 * 8);
              prVar8 = extraout_RAX_25;
            }
            *(regexp_syntax_Regexp **)((int)local_58 + (int)local_108 * 8) = prVar8;
            regexp_syntax___parser__checkLimits(p,prVar8);
            prVar10 = p;
            pvVar9 = local_58;
            prVar8 = prVar18;
            prVar14 = prVar12;
            prVar11 = (regexp_syntax_Regexp *)&local_108->field_0x1;
          }
          if (prVar8 < prVar17) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceAcap();
          }
          if (prVar17 < local_a8) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          regexp_syntax___parser__collapse
                    (prVar10,in_stack_fffffffffffffe78,
                     (char)pvVar9 +
                     ((byte)((int)local_a8 << 3) & (byte)(-((int)prVar8 - (int)local_a8) >> 0x3f)),
                     (regexp_syntax_Regexp *)((int)prVar17 - (int)local_a8));
          prVar8 = p->free;
          local_90 = extraout_RAX_12;
          if (prVar8 == (regexp_syntax_Regexp *)0x0) {
            runtime_newobject((internal_abi_Type *)&DAT_00893c00,~r0_01);
            p->numRegexp = p->numRegexp + 1;
            prVar8 = local_90;
            local_70 = extraout_RAX_13;
          }
          else {
            prVar11 = prVar8->Sub0[0];
            local_70 = prVar8;
            if (runtime_writeBarrier._0_4_ != 0) {
              prVar10 = p;
              local_20 = prVar8->Sub0[0];
              runtime_gcWriteBarrier2();
              *extraout_R11_08 = extraout_R8_04;
              extraout_R11_08[1] = prVar10->free;
              runtime_wbZero((internal_abi_Type *)&DAT_00893c00,dst_01);
              prVar11 = local_20;
            }
            p->free = prVar11;
            prVar8 = (regexp_syntax_Regexp *)FUN_0046cda6();
          }
          local_70->Op = 0x12;
          uVar15 = (local_70->Sub).cap;
          pprVar21 = (local_70->Sub).array;
          if (uVar15 < 2) {
            runtime_growslice(pprVar21,2,uVar15,2,(internal_abi_Type *)&DAT_00865800,
                              (runtime_slice)in_stack_fffffffffffffe78);
            prVar8 = local_90;
            uVar15 = extraout_RCX_09;
            pprVar21 = extraout_RAX_14;
          }
          prVar11 = local_70;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier4();
            *extraout_R11_09 = local_40;
            extraout_R11_09[1] = *extraout_R9_03;
            extraout_R11_09[2] = extraout_RAX_15;
            extraout_R11_09[3] = extraout_R9_03[1];
            prVar8 = extraout_RAX_15;
            prVar11 = extraout_RCX_10;
            uVar15 = extraout_R8_05;
            pprVar21 = extraout_R9_03;
          }
          *pprVar21 = local_40;
          pprVar21[1] = prVar8;
          (prVar11->Sub).len = 2;
          (prVar11->Sub).cap = uVar15;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_10 = extraout_R9_04;
            extraout_R11_10[1] = (extraout_RCX_11->Sub).array;
            prVar11 = extraout_RCX_11;
            pprVar21 = extraout_R9_04;
          }
          (prVar11->Sub).array = pprVar21;
          prVar14 = (regexp_syntax_Regexp *)(start + 1);
          local_b0 = local_a0;
          if (local_a0 < prVar14) {
            runtime_growslice(local_10,(int)prVar14,(int)local_a0,1,
                              (internal_abi_Type *)&DAT_00865800,
                              (runtime_slice)in_stack_fffffffffffffe78);
            local_10 = extraout_RAX_16;
            prVar11 = local_70;
            prVar14 = extraout_RBX_06;
            local_b0 = extraout_RCX_12;
          }
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_11 = extraout_RCX_13;
            extraout_R11_11[1] =
                 *(regexp_syntax_Regexp **)((int)extraout_RAX_17 + (int)extraout_RBX_07 * 8 + -8);
            local_10 = extraout_RAX_17;
            prVar11 = extraout_RCX_13;
            prVar14 = extraout_RBX_07;
            local_b0 = extraout_R8_06;
          }
          *(regexp_syntax_Regexp **)((int)local_10 + (int)prVar14 * 8 + -8) = prVar11;
          prVar10 = p;
          pvVar9 = local_58;
          prVar8 = prVar18;
          first = local_18;
          start = (int)prVar14;
          prVar14 = prVar12;
        }
      }
    }
LAB_006f2c0b:
    pvVar13 = local_10;
    prefix_1 = first;
    prVar11 = (regexp_syntax_Regexp *)start;
  }
  max = 0;
  uVar15 = 0;
  pvVar9 = pvVar13;
  for (i_2 = 0; local_58 = pvVar9, i_2 <= (int)prVar11; i_2 = i_2 + 1) {
    if (i_2 < (int)prVar11) {
      if (prVar11 <= (uint)i_2) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      pcVar16 = *(char **)((int)pvVar13 + i_2 * 8);
      cVar25 = *pcVar16;
      if ((((cVar25 != '\x03') || (*(int *)(pcVar16 + 0x30) != 1)) && (cVar25 != '\x04')) &&
         ((cVar25 != '\x05' && (cVar25 != '\x06')))) goto LAB_006f313f;
    }
    else {
LAB_006f313f:
      local_e8 = (regexp_syntax_Regexp *)i_2;
      if (max == i_2) {
        bVar29 = (uint)i_2 < prVar11;
        bVar31 = SBORROW8(i_2,(int)prVar11);
        bVar30 = i_2 - (int)prVar11 < 0;
      }
      else {
        prVar12 = (regexp_syntax_Regexp *)(max + 1);
        prVar8 = (regexp_syntax_Regexp *)max;
        prVar18 = prVar12;
        if ((regexp_syntax_Regexp *)i_2 == prVar12) {
          if (prVar11 <= (uint)max) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          uVar15 = uVar15 + 1;
          prVar12 = *(regexp_syntax_Regexp **)((int)pvVar13 + max * 8);
          if (local_b0 < uVar15) {
            local_18 = prVar12;
            runtime_growslice(pvVar9,uVar15,(int)local_b0,1,(internal_abi_Type *)&DAT_00865800,
                              (runtime_slice)in_stack_fffffffffffffe78);
            pvVar13 = local_10;
            local_58 = extraout_RAX_18;
            local_b0 = extraout_RCX_14;
            uVar15 = extraout_RBX_08;
            prVar12 = local_18;
            prVar11 = (regexp_syntax_Regexp *)start;
          }
          i_2 = (int)local_e8;
          if (runtime_writeBarrier._0_4_ == 0) {
            bVar29 = local_e8 < prVar11;
            bVar31 = SBORROW8((int)local_e8,(int)prVar11);
            iVar6 = (int)local_e8 - (int)prVar11;
          }
          else {
            runtime_gcWriteBarrier2();
            *extraout_R11_12 = extraout_R9_05;
            extraout_R11_12[1] =
                 *(regexp_syntax_Regexp **)((int)extraout_RBX_09 + extraout_R8_07 * 8 + -8);
            bVar29 = (uint)i_2 < extraout_R10_01;
            bVar31 = SBORROW8(i_2,(int)extraout_R10_01);
            iVar6 = i_2 - (int)extraout_R10_01;
            pvVar13 = extraout_RCX_15;
            local_58 = extraout_RBX_09;
            local_b0 = extraout_RDI_03;
            uVar15 = extraout_R8_07;
            prVar12 = extraout_R9_05;
            prVar11 = extraout_R10_01;
          }
          bVar30 = iVar6 < 0;
          *(regexp_syntax_Regexp **)((int)local_58 + uVar15 * 8 + -8) = prVar12;
        }
        else {
          for (; (int)prVar18 < i_2; prVar18 = (regexp_syntax_Regexp *)&prVar18->field_0x1) {
            if (prVar11 <= prVar8) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            pbVar4 = *(byte **)((int)pvVar13 + (int)prVar8 * 8);
            if (prVar11 <= prVar18) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            bVar2 = *pbVar4;
            pbVar5 = *(byte **)((int)pvVar13 + (int)prVar18 * 8);
            bVar3 = *pbVar5;
            prVar17 = prVar18;
            if ((bVar3 <= bVar2) &&
               ((bVar3 != bVar2 || (*(int *)(pbVar5 + 0x30) <= *(int *)(pbVar4 + 0x30))))) {
              prVar17 = prVar8;
            }
            prVar8 = prVar17;
          }
          if (prVar11 <= (uint)max) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          uVar22 = *(undefined8 *)((int)pvVar13 + max * 8);
          if (prVar11 <= prVar8) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          uVar28 = *(undefined8 *)((int)pvVar13 + (int)prVar8 * 8);
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier4();
            *extraout_R11_13 = uVar28;
            extraout_R11_13[1] = *(undefined8 *)((int)extraout_RCX_16 + max * 8);
            extraout_R11_13[2] = extraout_R9_06;
            extraout_R11_13[3] = *(undefined8 *)((int)extraout_RCX_16 + (int)extraout_RSI_02 * 8);
            pvVar13 = extraout_RCX_16;
            prVar8 = extraout_RSI_02;
            uVar22 = extraout_R9_06;
            prVar11 = extraout_R10_02;
          }
          *(undefined8 *)((int)pvVar13 + max * 8) = uVar28;
          *(undefined8 *)((int)pvVar13 + (int)prVar8 * 8) = uVar22;
          local_a0 = (regexp_syntax_Regexp *)max;
          for (; (int)prVar12 < i_2; prVar12 = (regexp_syntax_Regexp *)&prVar12->field_0x1) {
            if (prVar11 <= prVar12) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            regexp_syntax_mergeCharClass
                      (*(regexp_syntax_Regexp **)((int)pvVar13 + (int)local_a0 * 8),
                       *(regexp_syntax_Regexp **)((int)pvVar13 + (int)prVar12 * 8));
            prVar8 = *(regexp_syntax_Regexp **)((int)local_10 + (int)prVar12 * 8);
            if (p->height != (map__regexp_syntax_Regexp_int)0x0) {
              local_78 = prVar8;
              runtime_mapdelete_fast64
                        ((internal_abi_MapType *)&DAT_00830520,(runtime_hmap *)p->height,
                         (uint64)prVar8);
              prVar8 = local_78;
            }
            prVar18 = p->free;
            prVar10 = p;
            pvVar13 = local_10;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier4();
              *extraout_R11_17 = extraout_R8_10;
              extraout_R11_17[1] = extraout_RDI_06->Sub0[0];
              extraout_R11_17[2] = extraout_RDI_06;
              extraout_R11_17[3] = extraout_RCX_22->free;
              prVar10 = extraout_RCX_22;
              pvVar13 = extraout_RSI_04;
              prVar8 = extraout_RDI_06;
              prVar18 = extraout_R8_10;
            }
            prVar8->Sub0[0] = prVar18;
            prVar10->free = prVar8;
            i_2 = (int)local_e8;
            prVar11 = (regexp_syntax_Regexp *)start;
