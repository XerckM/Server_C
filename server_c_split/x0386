        ptr = ptr + 1;
        n = n + -1;
      }
      iVar3 = iVar3 + -1;
      uVar2 = uVar2 / 10;
      pcVar5 = pcVar5 + ((dword)(-iVar3 >> 0x3f) & 1);
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  ~r0_00.len._6_2_ = in_stack_ffffffffffffffee;
  ~r0_00._0_14_ = in_stack_ffffffffffffffe0;
  runtime_concatstring2
            ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,~r0_00);
  return;
}



void vendor_golang_org_x_net_dns_dnsmessage_RCode_String
               (vendor_golang_org_x_net_dns_dnsmessage_RCode r,string ~r0)

{
  uint uVar1;
  uint32 d;
  uint uVar2;
  int iVar3;
  dword dVar4;
  char extraout_BL;
  bool ok;
  undefined2 *puVar5;
  undefined8 in_RSI;
  int n;
  undefined8 extraout_RSI;
  void *in_RDI;
  undefined2 *ptr;
  void *extraout_RDI;
  char cVar6;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  undefined2 local_12;
  undefined6 uStack_10;
  undefined2 uStack_a;
  
  ~r0.str._0_2_ = r;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_RDI = extraout_RDI;
  }
  runtime_mapaccess2((internal_abi_MapType *)&DAT_0082e300,
                     (runtime_hmap *)vendor_golang_org_x_net_dns_dnsmessage_rCodeNames,&~r0,in_RDI,
                     SUB81(in_RSI,0));
  if (extraout_BL == '\0') {
    dVar4 = (dword)(vendor_golang_org_x_net_dns_dnsmessage_RCode)~r0.str;
    local_12 = 0;
    uStack_10 = 0;
    uStack_a = 0;
    uVar2 = 1000000000;
    iVar3 = 10;
    puVar5 = &local_12;
    n = 10;
    ptr = &local_12;
    while( true ) {
      d = (uint32)uVar2;
      if (d == 0) {
        runtime_slicebytetostring((runtime_tmpBuf *)0x0,(uint8 *)ptr,n,in_stack_ffffffffffffffd0);
        return;
      }
      uVar1 = dVar4 / uVar2;
      dVar4 = (dword)((uint)dVar4 % uVar2);
      if (iVar3 == 0) break;
      cVar6 = (char)uVar1 + (char)(uVar1 / 10) * -10 + '0';
      *(char *)puVar5 = cVar6;
      if (((cVar6 == '0') && (n == iVar3)) && (1 < n)) {
        ptr = (undefined2 *)((int)ptr + 1);
        n = n + -1;
      }
      iVar3 = iVar3 + -1;
      uVar2 = uVar2 / 10;
      puVar5 = (undefined2 *)((int)puVar5 + (uint)((dword)(-iVar3 >> 0x3f) & 1));
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  return;
}



void vendor_golang_org_x_net_dns_dnsmessage_RCode_GoString
               (vendor_golang_org_x_net_dns_dnsmessage_RCode r,string ~r0)

{
  uint uVar1;
  string ~r0_00;
  uint32 d;
  uint uVar2;
  int iVar3;
  dword dVar4;
  char extraout_BL;
  bool ok;
  char *pcVar5;
  undefined8 in_RSI;
  int n;
  undefined8 extraout_RSI;
  void *in_RDI;
  uint8 *ptr;
  void *extraout_RDI;
  char cVar6;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  undefined in_stack_ffffffffffffffe0 [14];
  undefined2 in_stack_ffffffffffffffee;
  
  ~r0.str._0_2_ = r;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_RDI = extraout_RDI;
  }
  runtime_mapaccess2((internal_abi_MapType *)&DAT_0082e300,
                     (runtime_hmap *)vendor_golang_org_x_net_dns_dnsmessage_rCodeNames,&~r0,in_RDI,
                     SUB81(in_RSI,0));
  if (extraout_BL == '\0') {
    dVar4 = (dword)(vendor_golang_org_x_net_dns_dnsmessage_RCode)~r0.str;
    uVar2 = 1000000000;
    iVar3 = 10;
    pcVar5 = &stack0xffffffffffffffee;
    n = 10;
    ptr = &stack0xffffffffffffffee;
    while( true ) {
      d = (uint32)uVar2;
      if (d == 0) {
        runtime_slicebytetostring((runtime_tmpBuf *)0x0,ptr,n,in_stack_ffffffffffffffc0);
        return;
      }
      uVar1 = dVar4 / uVar2;
      dVar4 = (dword)((uint)dVar4 % uVar2);
      if (iVar3 == 0) break;
      cVar6 = (char)uVar1 + (char)(uVar1 / 10) * -10 + '0';
      *pcVar5 = cVar6;
      if (((cVar6 == '0') && (n == iVar3)) && (1 < n)) {
        ptr = ptr + 1;
        n = n + -1;
      }
      iVar3 = iVar3 + -1;
      uVar2 = uVar2 / 10;
      pcVar5 = pcVar5 + ((dword)(-iVar3 >> 0x3f) & 1);
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  ~r0_00.len._6_2_ = in_stack_ffffffffffffffee;
  ~r0_00._0_14_ = in_stack_ffffffffffffffe0;
  runtime_concatstring2
            ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,~r0_00);
  return;
}



void vendor_golang_org_x_net_dns_dnsmessage_printByteSlice(__uint8 b,string ~r0)

{
  byte bVar1;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  runtime_slice ~r0_03;
  runtime_slice ~r0_04;
  runtime_slice ~r0_05;
  runtime_slice ~r0_06;
  byte *in_RAX;
  uint8 *oldPtr;
  uint8 *extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *extraout_RAX_01;
  uint8 *puVar2;
  uint8 *extraout_RAX_02;
  uint8 *extraout_RAX_03;
  uint8 *extraout_RAX_04;
  uint8 *extraout_RAX_05;
  int in_RCX;
  uint extraout_RCX;
  uint uVar3;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  int iVar4;
  uint extraout_RCX_02;
  uint extraout_RCX_03;
  uint extraout_RCX_04;
  uint extraout_RCX_05;
  int in_RBX;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  uint extraout_RBX_03;
  uint extraout_RBX_04;
  uint8 b_1;
  void *in_RDI;
  void *extraout_RDI;
  uint cap;
  uint8 n;
  int unaff_R14;
  string in_stack_ffffffffffffff90;
  int in_stack_ffffffffffffffa0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  if (in_RBX == 0) {
    return;
  }
  cap = in_RBX * 5;
  runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,cap,in_RDI);
  bVar1 = *in_RAX;
  puVar2 = oldPtr;
  if (bVar1 < 100) {
    uVar3 = 0;
  }
  else {
    if (cap == 0) {
      ~r0_00.cap = in_stack_ffffffffffffffa0;
      ~r0_00.array = in_stack_ffffffffffffff90.str;
      ~r0_00.len = in_stack_ffffffffffffff90.len;
      runtime_growslice(oldPtr,1,0,1,(internal_abi_Type *)&DAT_00807920,~r0_00);
      puVar2 = extraout_RAX;
      cap = extraout_RCX;
    }
    *puVar2 = bVar1 / 100 + 0x30;
    uVar3 = 1;
  }
  if (9 < bVar1) {
    uVar3 = uVar3 + 1;
    if (cap < uVar3) {
      ~r0_01.cap = in_stack_ffffffffffffffa0;
      ~r0_01.array = in_stack_ffffffffffffff90.str;
      ~r0_01.len = in_stack_ffffffffffffff90.len;
      runtime_growslice(puVar2,uVar3,cap,1,(internal_abi_Type *)&DAT_00807920,~r0_01);
      puVar2 = extraout_RAX_00;
      uVar3 = extraout_RBX;
      cap = extraout_RCX_00;
    }
    puVar2[uVar3 - 1] = (char)(bVar1 / 10) + (char)((dword)(bVar1 / 10) / 10) * -10 + 0x30;
  }
  uVar3 = uVar3 + 1;
  if (cap < uVar3) {
    ~r0_02.cap = in_stack_ffffffffffffffa0;
    ~r0_02.array = in_stack_ffffffffffffff90.str;
    ~r0_02.len = in_stack_ffffffffffffff90.len;
    runtime_growslice(puVar2,uVar3,cap,1,(internal_abi_Type *)&DAT_00807920,~r0_02);
    puVar2 = extraout_RAX_01;
    uVar3 = extraout_RBX_00;
    cap = extraout_RCX_01;
  }
  puVar2[uVar3 - 1] = bVar1 % 10 + 0x30;
  for (iVar4 = 0; iVar4 < in_RBX + -1; iVar4 = iVar4 + 1) {
    uVar3 = uVar3 + 2;
    bVar1 = in_RAX[iVar4 + (uint)((dword)(-(in_RCX + -1) >> 0x3f) & 1)];
    if (cap < uVar3) {
      ~r0_03.cap = in_stack_ffffffffffffffa0;
      ~r0_03.array = in_stack_ffffffffffffff90.str;
      ~r0_03.len = in_stack_ffffffffffffff90.len;
      runtime_growslice(puVar2,uVar3,cap,2,(internal_abi_Type *)&DAT_00807920,~r0_03);
      puVar2 = extraout_RAX_02;
      uVar3 = extraout_RBX_01;
      cap = extraout_RCX_02;
    }
    *(undefined2 *)(puVar2 + (uVar3 - 2)) = 0x202c;
    if (99 < bVar1) {
      uVar3 = uVar3 + 1;
      if (cap < uVar3) {
        ~r0_04.cap = in_stack_ffffffffffffffa0;
        ~r0_04.array = in_stack_ffffffffffffff90.str;
        ~r0_04.len = in_stack_ffffffffffffff90.len;
        runtime_growslice(puVar2,uVar3,cap,1,(internal_abi_Type *)&DAT_00807920,~r0_04);
        puVar2 = extraout_RAX_03;
        uVar3 = extraout_RBX_02;
        cap = extraout_RCX_03;
      }
      puVar2[uVar3 - 1] = bVar1 / 100 + 0x30;
    }
    if (9 < bVar1) {
      uVar3 = uVar3 + 1;
      if (cap < uVar3) {
        ~r0_05.cap = in_stack_ffffffffffffffa0;
        ~r0_05.array = in_stack_ffffffffffffff90.str;
        ~r0_05.len = in_stack_ffffffffffffff90.len;
        runtime_growslice(puVar2,uVar3,cap,1,(internal_abi_Type *)&DAT_00807920,~r0_05);
        puVar2 = extraout_RAX_04;
        uVar3 = extraout_RBX_03;
        cap = extraout_RCX_04;
      }
      puVar2[uVar3 - 1] = (char)(bVar1 / 10) + (char)((dword)(bVar1 / 10) / 10) * -10 + 0x30;
    }
    uVar3 = uVar3 + 1;
    if (cap < uVar3) {
      ~r0_06.cap = in_stack_ffffffffffffffa0;
      ~r0_06.array = in_stack_ffffffffffffff90.str;
      ~r0_06.len = in_stack_ffffffffffffff90.len;
      runtime_growslice(puVar2,uVar3,cap,1,(internal_abi_Type *)&DAT_00807920,~r0_06);
      puVar2 = extraout_RAX_05;
      uVar3 = extraout_RBX_04;
      cap = extraout_RCX_05;
    }
    puVar2[uVar3 - 1] = bVar1 % 10 + 0x30;
  }
  runtime_slicebytetostring((runtime_tmpBuf *)0x0,puVar2,uVar3,in_stack_ffffffffffffff90);
  return;
}



void vendor_golang_org_x_net_dns_dnsmessage_printString(__uint8 str,string ~r0)

{
  byte bVar1;
  uint8 uVar2;
  uint8 uVar3;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  int in_RAX;
  uint8 *extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *extraout_RAX_01;
  uint8 *ptr;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint oldCap;
  uint in_RBX;
  int iVar4;
  uint extraout_RBX;
  uint extraout_RBX_00;
  void *in_RDI;
  uint n;
  void *extraout_RDI;
  uint8 c;
  int unaff_R14;
  string in_stack_ffffffffffffffa8;
  int in_stack_ffffffffffffffb8;
  int i;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,in_RBX,in_RDI);
  n = 0;
  ptr = extraout_RAX;
  oldCap = in_RBX;
  for (iVar4 = 0; iVar4 < (int)in_RBX; iVar4 = iVar4 + 1) {
    bVar1 = *(byte *)(in_RAX + iVar4);
    if ((((bVar1 == 0x2e) || (bVar1 == 0x2d)) || (bVar1 == 0x20)) ||
       ((((byte)(bVar1 + 0xbf) < 0x1a || ((byte)(bVar1 + 0x9f) < 0x1a)) ||
        ((byte)(bVar1 - 0x30) < 10)))) {
      n = n + 1;
      if (oldCap < n) {
        ~r0_00.cap = in_stack_ffffffffffffffb8;
        ~r0_00.array = in_stack_ffffffffffffffa8.str;
        ~r0_00.len = in_stack_ffffffffffffffa8.len;
        runtime_growslice(ptr,n,oldCap,1,(internal_abi_Type *)&DAT_00807920,~r0_00);
        ptr = extraout_RAX_00;
        oldCap = extraout_RCX;
        n = extraout_RBX;
      }
      ptr[n - 1] = bVar1;
    }
    else {
      n = n + 4;
      uVar2 = "goal , cons/mark  maxTrigger= pages/byte\n s.sweepgen= allocCount end tracegc\ntimer_deletens} value: {}, want {r1= [recovered]bad recoverybad g statusentersyscallwirep: p->m=) p->status=releasep: m= sysmonwait= preemptoff=cas64 failedGOTRACEBACK= m->gsignal=-byte limit\nruntime: sp=abi mismatchillegal seekinvalid slothost is downnot pollable<unknown:%d>Sfixed32KindSfixed64Kindmessage_typejava_packageoptimize_forswift_prefixruby_packagedebug_redactdouble_valuestring_valueverificationis_extension has no name has no typereflect.CopyOUT_OF_RANGENormalSocketgrpc-messageContent-Typegrpc-timeoutGrpc-MessageAddr: \'%s\', Cookie.Valuemax-forwardshttp2debug=1http2debug=2status code Multi-StatusNot ModifiedUnauthorizedI\'m a teapotNot ExtendedPUSH_PROMISECONTINUATION152587890625762939453125Cypro_MinoanMeetei_MayekPahawh_HmongSora_SompengSyloti_NagriRCodeSuccessRCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen..." /* TRUNCATED STRING LITERAL */
              [(bVar1 >> 4) + 0x1f44];
      uVar3 = "goal , cons/mark  maxTrigger= pages/byte\n s.sweepgen= allocCount end tracegc\ntimer_deletens} value: {}, want {r1= [recovered]bad recoverybad g statusentersyscallwirep: p->m=) p->status=releasep: m= sysmonwait= preemptoff=cas64 failedGOTRACEBACK= m->gsignal=-byte limit\nruntime: sp=abi mismatchillegal seekinvalid slothost is downnot pollable<unknown:%d>Sfixed32KindSfixed64Kindmessage_typejava_packageoptimize_forswift_prefixruby_packagedebug_redactdouble_valuestring_valueverificationis_extension has no name has no typereflect.CopyOUT_OF_RANGENormalSocketgrpc-messageContent-Typegrpc-timeoutGrpc-MessageAddr: \'%s\', Cookie.Valuemax-forwardshttp2debug=1http2debug=2status code Multi-StatusNot ModifiedUnauthorizedI\'m a teapotNot ExtendedPUSH_PROMISECONTINUATION152587890625762939453125Cypro_MinoanMeetei_MayekPahawh_HmongSora_SompengSyloti_NagriRCodeSuccessRCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen..." /* TRUNCATED STRING LITERAL */
              [(bVar1 & 0xf) + 0x1f44];
      if (oldCap < n) {
        ~r0_01.cap = in_stack_ffffffffffffffb8;
        ~r0_01.array = in_stack_ffffffffffffffa8.str;
        ~r0_01.len = in_stack_ffffffffffffffa8.len;
        runtime_growslice(ptr,n,oldCap,4,(internal_abi_Type *)&DAT_00807920,~r0_01);
        ptr = extraout_RAX_01;
        oldCap = extraout_RCX_00;
        n = extraout_RBX_00;
      }
      *(undefined2 *)(ptr + (n - 4)) = 0x785c;
      ptr[n - 2] = uVar2;
      ptr[n - 1] = uVar3;
    }
  }
  runtime_slicebytetostring((runtime_tmpBuf *)0x0,ptr,n,in_stack_ffffffffffffffa8);
  return;
}



void vendor_golang_org_x_net_dns_dnsmessage___nestedError__Error
               (vendor_golang_org_x_net_dns_dnsmessage_nestedError *e,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  (*(code *)((e->err).tab)->fun[0])((e->err).data);
  ~r0_00.len = unaff_RBP;
  ~r0_00.str = in_stack_fffffffffffffff0;
  runtime_concatstring3
            ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
             in_stack_ffffffffffffffe0,~r0_00);
  return;
}



void vendor_golang_org_x_net_dns_dnsmessage___header__pack
               (vendor_golang_org_x_net_dns_dnsmessage_header *h,__uint8 msg,__uint8 ~r0)

{
  ushort uVar1;
  void *extraout_RAX;
  void *extraout_RAX_00;
  void *extraout_RAX_01;
  void *extraout_RAX_02;
  void *extraout_RAX_03;
  void *extraout_RAX_04;
  int in_RCX;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  uint extraout_RCX_02;
  uint extraout_RCX_03;
  uint uVar2;
  void *in_RBX;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  uint extraout_RBX_03;
  uint extraout_RBX_04;
  uint in_RDI;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffffa8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar2 = in_RCX + 2;
  uVar1 = h->id;
  if (in_RDI < uVar2) {
    runtime_growslice(in_RBX,uVar2,in_RDI,2,(internal_abi_Type *)&DAT_00807920,
                      in_stack_ffffffffffffffa8);
    uVar2 = extraout_RBX;
    in_RBX = extraout_RAX;
    in_RDI = extraout_RCX;
  }
  *(ushort *)((uVar2 - 2) + (int)in_RBX) = uVar1 << 8 | uVar1 >> 8;
  uVar2 = uVar2 + 2;
  uVar1 = h->bits;
  if (in_RDI < uVar2) {
    runtime_growslice(in_RBX,uVar2,in_RDI,2,(internal_abi_Type *)&DAT_00807920,
                      in_stack_ffffffffffffffa8);
    uVar2 = extraout_RBX_00;
    in_RBX = extraout_RAX_00;
    in_RDI = extraout_RCX_00;
  }
  *(ushort *)((uVar2 - 2) + (int)in_RBX) = uVar1 << 8 | uVar1 >> 8;
  uVar2 = uVar2 + 2;
  uVar1 = h->questions;
  if (in_RDI < uVar2) {
    runtime_growslice(in_RBX,uVar2,in_RDI,2,(internal_abi_Type *)&DAT_00807920,
                      in_stack_ffffffffffffffa8);
    uVar2 = extraout_RBX_01;
    in_RBX = extraout_RAX_01;
    in_RDI = extraout_RCX_01;
  }
  *(ushort *)((uVar2 - 2) + (int)in_RBX) = uVar1 << 8 | uVar1 >> 8;
  uVar2 = uVar2 + 2;
  uVar1 = h->answers;
  if (in_RDI < uVar2) {
    runtime_growslice(in_RBX,uVar2,in_RDI,2,(internal_abi_Type *)&DAT_00807920,
                      in_stack_ffffffffffffffa8);
    uVar2 = extraout_RBX_02;
    in_RBX = extraout_RAX_02;
    in_RDI = extraout_RCX_02;
  }
  *(ushort *)((uVar2 - 2) + (int)in_RBX) = uVar1 << 8 | uVar1 >> 8;
  uVar2 = uVar2 + 2;
  uVar1 = h->authorities;
  if (in_RDI < uVar2) {
    runtime_growslice(in_RBX,uVar2,in_RDI,2,(internal_abi_Type *)&DAT_00807920,
                      in_stack_ffffffffffffffa8);
    uVar2 = extraout_RBX_03;
    in_RBX = extraout_RAX_03;
    in_RDI = extraout_RCX_03;
  }
  *(ushort *)((uVar2 - 2) + (int)in_RBX) = uVar1 << 8 | uVar1 >> 8;
  uVar2 = uVar2 + 2;
  uVar1 = h->additionals;
  if (in_RDI < uVar2) {
    runtime_growslice(in_RBX,uVar2,in_RDI,2,(internal_abi_Type *)&DAT_00807920,
                      in_stack_ffffffffffffffa8);
    uVar2 = extraout_RBX_04;
    in_RBX = extraout_RAX_04;
  }
  *(ushort *)((uVar2 - 2) + (int)in_RBX) = uVar1 << 8 | uVar1 >> 8;
  return;
}



// Local variable newOff:int[RSI:8] conflicts with parameter, skipped.

void vendor_golang_org_x_net_dns_dnsmessage___header__unpack
               (vendor_golang_org_x_net_dns_dnsmessage_header *h,__uint8 msg,int off,int ~r0,
               error ~r1)

{
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  undefined8 *extraout_RAX_07;
  undefined8 *extraout_RAX_08;
  undefined8 *extraout_RAX_09;
  undefined8 *extraout_RAX_10;
  runtime_itab *prVar2;
  uint uVar3;
  uint in_RSI;
  uint uVar4;
  void *pvVar5;
  uint16 uVar6;
  void **extraout_R11;
  void **extraout_R11_00;
  void **extraout_R11_01;
  void **extraout_R11_02;
  void **extraout_R11_03;
  void **extraout_R11_04;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar3 = in_RSI + 2;
  if (~r0 < (int)uVar3) {
    uVar6 = 0;
    uVar3 = in_RSI;
    prVar2 = vendor_golang_org_x_net_dns_dnsmessage_errBaseLen.tab;
    pvVar5 = vendor_golang_org_x_net_dns_dnsmessage_errBaseLen.data;
  }
  else {
    if ((uint)~r0 <= in_RSI) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((uint)~r0 <= in_RSI + 1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    uVar6 = *(ushort *)(in_RSI + off) << 8 | *(ushort *)(in_RSI + off) >> 8;
    prVar2 = (runtime_itab *)0x0;
    pvVar5 = (void *)0x0;
  }
  h->id = uVar6;
  if (prVar2 != (runtime_itab *)0x0) {
    runtime_newobject((internal_abi_Type *)&DAT_008531c0,(void *)off);
    extraout_RAX_09[1] = 2;
    *extraout_RAX_09 = &DAT_008ae210;
    extraout_RAX_09[2] = prVar2;
    puVar1 = extraout_RAX_09;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_04 = pvVar5;
      puVar1 = extraout_RAX_10;
    }
    puVar1[3] = pvVar5;
    return;
  }
  uVar4 = uVar3 + 2;
  if (~r0 < (int)uVar4) {
    uVar6 = 0;
    prVar2 = vendor_golang_org_x_net_dns_dnsmessage_errBaseLen.tab;
    uVar4 = uVar3;
    pvVar5 = vendor_golang_org_x_net_dns_dnsmessage_errBaseLen.data;
  }
  else {
    if ((uint)~r0 <= uVar3) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((uint)~r0 <= uVar3 + 1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    uVar6 = *(ushort *)(off + uVar3) << 8 | *(ushort *)(off + uVar3) >> 8;
    prVar2 = (runtime_itab *)0x0;
    pvVar5 = (void *)0x0;
  }
  h->bits = uVar6;
  if (prVar2 != (runtime_itab *)0x0) {
    runtime_newobject((internal_abi_Type *)&DAT_008531c0,(void *)off);
    extraout_RAX_07[1] = 4;
    *extraout_RAX_07 = &DAT_008ae787;
    extraout_RAX_07[2] = prVar2;
    puVar1 = extraout_RAX_07;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_03 = pvVar5;
      puVar1 = extraout_RAX_08;
    }
    puVar1[3] = pvVar5;
    return;
  }
  uVar3 = uVar4 + 2;
  if (~r0 < (int)uVar3) {
    uVar6 = 0;
    uVar3 = uVar4;
    prVar2 = vendor_golang_org_x_net_dns_dnsmessage_errBaseLen.tab;
    pvVar5 = vendor_golang_org_x_net_dns_dnsmessage_errBaseLen.data;
  }
  else {
    if ((uint)~r0 <= uVar4) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((uint)~r0 <= uVar4 + 1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    uVar6 = *(ushort *)(off + uVar4) << 8 | *(ushort *)(off + uVar4) >> 8;
    prVar2 = (runtime_itab *)0x0;
    pvVar5 = (void *)0x0;
  }
  h->questions = uVar6;
  if (prVar2 != (runtime_itab *)0x0) {
    runtime_newobject((internal_abi_Type *)&DAT_008531c0,(void *)off);
    extraout_RAX_05[1] = 9;
    *extraout_RAX_05 = &DAT_008b2b2b;
    extraout_RAX_05[2] = prVar2;
    puVar1 = extraout_RAX_05;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_02 = pvVar5;
      puVar1 = extraout_RAX_06;
    }
    puVar1[3] = pvVar5;
    return;
  }
  uVar4 = uVar3 + 2;
  if (~r0 < (int)uVar4) {
    uVar6 = 0;
    prVar2 = vendor_golang_org_x_net_dns_dnsmessage_errBaseLen.tab;
    uVar4 = uVar3;
    pvVar5 = vendor_golang_org_x_net_dns_dnsmessage_errBaseLen.data;
  }
  else {
    if ((uint)~r0 <= uVar3) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((uint)~r0 <= uVar3 + 1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    uVar6 = *(ushort *)(uVar3 + off) << 8 | *(ushort *)(uVar3 + off) >> 8;
    prVar2 = (runtime_itab *)0x0;
    pvVar5 = (void *)0x0;
  }
  h->answers = uVar6;
  if (prVar2 != (runtime_itab *)0x0) {
    runtime_newobject((internal_abi_Type *)&DAT_008531c0,(void *)off);
    extraout_RAX_03[1] = 7;
    *extraout_RAX_03 = &DAT_008b0cb5;
    extraout_RAX_03[2] = prVar2;
    puVar1 = extraout_RAX_03;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_01 = pvVar5;
      puVar1 = extraout_RAX_04;
    }
    puVar1[3] = pvVar5;
    return;
  }
  uVar3 = uVar4 + 2;
  if (~r0 < (int)uVar3) {
    uVar6 = 0;
    uVar3 = uVar4;
    prVar2 = vendor_golang_org_x_net_dns_dnsmessage_errBaseLen.tab;
    pvVar5 = vendor_golang_org_x_net_dns_dnsmessage_errBaseLen.data;
  }
  else {
    if ((uint)~r0 <= uVar4) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((uint)~r0 <= uVar4 + 1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    uVar6 = *(ushort *)(uVar4 + off) << 8 | *(ushort *)(uVar4 + off) >> 8;
    prVar2 = (runtime_itab *)0x0;
    pvVar5 = (void *)0x0;
  }
  h->authorities = uVar6;
  if (prVar2 != (runtime_itab *)0x0) {
    runtime_newobject((internal_abi_Type *)&DAT_008531c0,(void *)off);
    extraout_RAX_01[1] = 0xb;
    *extraout_RAX_01 = &DAT_008b3ef8;
    extraout_RAX_01[2] = prVar2;
    puVar1 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = pvVar5;
      puVar1 = extraout_RAX_02;
    }
    puVar1[3] = pvVar5;
    return;
  }
  if (~r0 < (int)(uVar3 + 2)) {
    uVar6 = 0;
    prVar2 = vendor_golang_org_x_net_dns_dnsmessage_errBaseLen.tab;
    pvVar5 = vendor_golang_org_x_net_dns_dnsmessage_errBaseLen.data;
  }
  else {
    if ((uint)~r0 <= uVar3) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((uint)~r0 <= uVar3 + 1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    uVar6 = *(ushort *)(uVar3 + off) << 8 | *(ushort *)(uVar3 + off) >> 8;
    prVar2 = (runtime_itab *)0x0;
    pvVar5 = (void *)0x0;
  }
  h->additionals = uVar6;
  if (prVar2 == (runtime_itab *)0x0) {
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_008531c0,(void *)off);
  extraout_RAX[1] = 0xb;
  *extraout_RAX = &DAT_008b3f03;
  extraout_RAX[2] = prVar2;
  puVar1 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = pvVar5;
    puVar1 = extraout_RAX_00;
  }
  puVar1[3] = pvVar5;
  return;
}



void vendor_golang_org_x_net_dns_dnsmessage___Resource__GoString
               (vendor_golang_org_x_net_dns_dnsmessage_Resource *r,string ~r0)

{
  string ~r0_00;
  string a0;
  string ~r0_01;
  int extraout_RBX;
  int unaff_R14;
  uint8 *in_stack_ffffffffffffff90;
  int in_stack_ffffffffffffff98;
  string in_stack_ffffffffffffffa0;
  string in_stack_ffffffffffffffb0;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  uint8 *in_stack_ffffffffffffffe0;
  int iVar1;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.len = in_stack_ffffffffffffff98;
  ~r0_00.str = in_stack_ffffffffffffff90;
  vendor_golang_org_x_net_dns_dnsmessage___ResourceHeader__GoString(&r->Header,~r0_00);
  iVar1 = extraout_RBX;
  (*(code *)((r->Body).tab)->fun[0])((r->Body).data);
  a0.len = 1;
  a0.str = &DAT_0095c534;
  ~r0_01.len = iVar1;
  ~r0_01.str = in_stack_ffffffffffffffe0;
  runtime_concatstring5
            ((runtime_tmpBuf *)0x0,a0,in_stack_ffffffffffffffa0,in_stack_ffffffffffffffb0,
             in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,~r0_01);
  return;
}



void vendor_golang_org_x_net_dns_dnsmessage___Parser__Start
               (vendor_golang_org_x_net_dns_dnsmessage_Parser *p,__uint8 msg,
               vendor_golang_org_x_net_dns_dnsmessage_Header ~r0,error ~r1)

{
  undefined2 uVar1;
  vendor_golang_org_x_net_dns_dnsmessage_Parser *extraout_RAX;
  vendor_golang_org_x_net_dns_dnsmessage_Parser *extraout_RAX_00;
  vendor_golang_org_x_net_dns_dnsmessage_Parser *pvVar2;
  int extraout_RAX_01;
  char **extraout_RAX_02;
  char **extraout_RAX_03;
  char **ppcVar3;
  int in_RCX;
  int extraout_RCX;
  int extraout_RCX_00;
  char *extraout_RCX_01;
  uint8 *in_RBX;
  uint8 *extraout_RBX;
  uint8 *extraout_RBX_00;
  char *~r0_00;
  int extraout_RSI;
  int in_RDI;
  uint8 **extraout_R11;
  char **extraout_R11_00;
  int unaff_R14;
  undefined in_XMM15 [16];
  undefined2 in_stack_0000002e;
  __uint8 in_stack_ffffffffffffffb0;
  error in_stack_ffffffffffffffc8;
  
  while( true ) {
    uVar1 = in_stack_0000002e;
    in_stack_0000002e = (undefined2)((uint)in_RCX >> 0x30);
    ~r0._8_6_ = (undefined6)in_RCX;
    if (*(undefined **)(unaff_R14 + 0x10) < &stack0x00000000) break;
    runtime_morestack_noctxt();
    in_RCX = CONCAT26(in_stack_0000002e,~r0._8_6_);
  }
  pvVar2 = p;
  if ((p->msg).array != (uint8 *)0x0) {
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_wbZero((internal_abi_Type *)&DAT_0088aa80,p);
      uVar1 = in_stack_0000002e;
    }
    in_stack_0000002e = uVar1;
    (p->msg).array = (uint8 *)in_XMM15._0_8_;
    (p->msg).len = in_XMM15._8_8_;
    FUN_0046cd5d();
    pvVar2 = extraout_RAX;
    in_RCX = extraout_RCX;
    in_RBX = extraout_RBX;
    in_RDI = extraout_RSI;
    uVar1 = in_stack_0000002e;
  }
  in_stack_0000002e = uVar1;
  (pvVar2->msg).len = in_RCX;
  (pvVar2->msg).cap = in_RDI;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RBX_00;
    extraout_R11[1] = (extraout_RAX_00->msg).array;
    pvVar2 = extraout_RAX_00;
    in_RCX = extraout_RCX_00;
    in_RBX = extraout_RBX_00;
  }
  (pvVar2->msg).array = in_RBX;
  vendor_golang_org_x_net_dns_dnsmessage___header__unpack
            (&pvVar2->header,in_stack_ffffffffffffffb0,(int)in_RBX,in_RCX,in_stack_ffffffffffffffc8)
  ;
  p->off = extraout_RAX_01;
  if (~r0_00 == (char *)0x0) {
    p->section = 2;
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_008531c0,~r0_00);
  extraout_RAX_02[1] = (char *)0x10;
  *extraout_RAX_02 =
       "unpacking headerRCodeFormatErrorGODEBUG: value \"must be positiveinvalid encodingregexp: Compile(quoted-printableContent-Language"
  ;
  extraout_RAX_02[2] = ~r0_00;
  ppcVar3 = extraout_RAX_02;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = extraout_RCX_01;
    ppcVar3 = extraout_RAX_03;
  }
  ppcVar3[3] = extraout_RCX_01;
  return;
}



void vendor_golang_org_x_net_dns_dnsmessage___Parser__resource
               (vendor_golang_org_x_net_dns_dnsmessage_Parser *p,
               vendor_golang_org_x_net_dns_dnsmessage_section sec,
               vendor_golang_org_x_net_dns_dnsmessage_Resource ~r0,error ~r1)

{
  string a0;
  __uint8 msg;
  vendor_golang_org_x_net_dns_dnsmessage_ResourceHeader ~r0_00;
  string a1;
  vendor_golang_org_x_net_dns_dnsmessage_ResourceHeader hdr;
  vendor_golang_org_x_net_dns_dnsmessage_ResourceBody ~r0_01;
  error ~r2;
  vendor_golang_org_x_net_dns_dnsmessage_Parser *p_00;
  int iVar1;
  undefined8 *extraout_RAX;
  undefined8 extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 uVar2;
  internal_abi_Type *extraout_RCX;
  undefined8 *extraout_RCX_00;
  undefined8 *extraout_RCX_01;
  undefined8 *puVar3;
  void *~r0_02;
  undefined8 extraout_RBX;
  undefined8 extraout_RSI;
  int extraout_RDI;
  void *~r0_03;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  undefined auVar4 [16];
  undefined4 in_stack_fffffffffffffc80;
  undefined4 in_stack_fffffffffffffc84;
  undefined4 in_stack_fffffffffffffc88;
  undefined4 in_stack_fffffffffffffc8c;
  uint8 *in_stack_fffffffffffffc90;
  int in_stack_fffffffffffffc98;
  string in_stack_fffffffffffffca0;
  undefined in_stack_fffffffffffffcb0 [220];
  undefined4 in_stack_fffffffffffffd8c;
  error in_stack_fffffffffffffd90;
  undefined4 in_stack_fffffffffffffda0;
  runtime_itab *in_stack_fffffffffffffda8;
  void *in_stack_fffffffffffffdb0;
  undefined4 in_stack_fffffffffffffdb8;
  undefined4 uVar5;
  undefined4 uVar6;
  undefined4 uVar7;
  vendor_golang_org_x_net_dns_dnsmessage_Resource r;
  
  ~r1.tab = (runtime_itab *)p;
  ~r1.data._0_1_ = sec;
  while (&stack0xfffffffffffffd00 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  FUN_0046cd66();
  p_00 = (vendor_golang_org_x_net_dns_dnsmessage_Parser *)FUN_0046cd66();
  ~r0_00.Name.Data[4] = (char)in_stack_fffffffffffffc84;
  ~r0_00.Name.Data[5] = (char)((dword)in_stack_fffffffffffffc84 >> 8);
  ~r0_00.Name.Data[6] = (char)((dword)in_stack_fffffffffffffc84 >> 0x10);
  ~r0_00.Name.Data[7] = (char)((dword)in_stack_fffffffffffffc84 >> 0x18);
  ~r0_00.Name.Data[0] = (char)in_stack_fffffffffffffc80;
  ~r0_00.Name.Data[1] = (char)((dword)in_stack_fffffffffffffc80 >> 8);
  ~r0_00.Name.Data[2] = (char)((dword)in_stack_fffffffffffffc80 >> 0x10);
  ~r0_00.Name.Data[3] = (char)((dword)in_stack_fffffffffffffc80 >> 0x18);
  ~r0_00.Name.Data[8] = (char)in_stack_fffffffffffffc88;
  ~r0_00.Name.Data[9] = (char)((dword)in_stack_fffffffffffffc88 >> 8);
  ~r0_00.Name.Data[10] = (char)((dword)in_stack_fffffffffffffc88 >> 0x10);
  ~r0_00.Name.Data[11] = (char)((dword)in_stack_fffffffffffffc88 >> 0x18);
  ~r0_00.Name.Data[12] = (char)in_stack_fffffffffffffc8c;
  ~r0_00.Name.Data[13] = (char)((dword)in_stack_fffffffffffffc8c >> 8);
  ~r0_00.Name.Data[14] = (char)((dword)in_stack_fffffffffffffc8c >> 0x10);
  ~r0_00.Name.Data[15] = (char)((dword)in_stack_fffffffffffffc8c >> 0x18);
  ~r0_00.Name.Data._16_8_ = in_stack_fffffffffffffc90;
  ~r0_00.Name.Data[24] = (char)in_stack_fffffffffffffc98;
  ~r0_00.Name.Data[25] = (char)((uint)in_stack_fffffffffffffc98 >> 8);
  ~r0_00.Name.Data[26] = (char)((uint)in_stack_fffffffffffffc98 >> 0x10);
  ~r0_00.Name.Data[27] = (char)((uint)in_stack_fffffffffffffc98 >> 0x18);
  ~r0_00.Name.Data[28] = (char)((uint)in_stack_fffffffffffffc98 >> 0x20);
  ~r0_00.Name.Data[29] = (char)((uint)in_stack_fffffffffffffc98 >> 0x28);
  ~r0_00.Name.Data[30] = (char)((uint)in_stack_fffffffffffffc98 >> 0x30);
  ~r0_00.Name.Data[31] = (char)((uint)in_stack_fffffffffffffc98 >> 0x38);
  ~r0_00.Name.Data._32_16_ = (undefined  [16])in_stack_fffffffffffffca0;
  ~r0_00.Name.Data[48] = in_stack_fffffffffffffcb0[0];
  ~r0_00.Name.Data[49] = in_stack_fffffffffffffcb0[1];
  ~r0_00.Name.Data[50] = in_stack_fffffffffffffcb0[2];
  ~r0_00.Name.Data[51] = in_stack_fffffffffffffcb0[3];
  ~r0_00.Name.Data[52] = in_stack_fffffffffffffcb0[4];
  ~r0_00.Name.Data[53] = in_stack_fffffffffffffcb0[5];
  ~r0_00.Name.Data[54] = in_stack_fffffffffffffcb0[6];
  ~r0_00.Name.Data[55] = in_stack_fffffffffffffcb0[7];
  ~r0_00.Name.Data[56] = in_stack_fffffffffffffcb0[8];
  ~r0_00.Name.Data[57] = in_stack_fffffffffffffcb0[9];
  ~r0_00.Name.Data[58] = in_stack_fffffffffffffcb0[10];
  ~r0_00.Name.Data[59] = in_stack_fffffffffffffcb0[11];
  ~r0_00.Name.Data[60] = in_stack_fffffffffffffcb0[12];
  ~r0_00.Name.Data[61] = in_stack_fffffffffffffcb0[13];
  ~r0_00.Name.Data[62] = in_stack_fffffffffffffcb0[14];
  ~r0_00.Name.Data[63] = in_stack_fffffffffffffcb0[15];
