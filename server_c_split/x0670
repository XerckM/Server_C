  sync_Mutex *psVar1;
  int iVar2;
  char extraout_AL;
  google_golang_org_grpc_internal_transport_recvMsg *extraout_RCX;
  google_golang_org_grpc_internal_transport_recvMsg *pgVar3;
  google_golang_org_grpc_internal_transport_recvBuffer *pgVar4;
  sdword sVar5;
  int32 new;
  google_golang_org_grpc_internal_transport_recvMsg *extraout_RSI;
  undefined8 extraout_RDI;
  int iVar6;
  undefined8 *extraout_R11;
  google_golang_org_grpc_internal_transport_recvMsg **extraout_R11_00;
  int unaff_R14;
  bool bVar7;
  google_golang_org_grpc_internal_transport_recvBuffer *pgStack0000000000000008;
  bytes_Buffer *local_20;
  runtime_itab *local_18;
  void *local_10;
  
  pgStack0000000000000008 = b;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  m = &pgStack0000000000000008->mu;
  LOCK();
  bVar7 = (pgStack0000000000000008->mu).state == 0;
  if (bVar7) {
    (pgStack0000000000000008->mu).state = 1;
  }
  UNLOCK();
  if (!bVar7) {
    sync___Mutex__lockSlow(m);
  }
  pgVar4 = pgStack0000000000000008;
  if ((pgStack0000000000000008->backlog).len != 0) {
    pgVar3 = (pgStack0000000000000008->backlog).array;
    local_20 = pgVar3->buffer;
    local_18 = (pgVar3->err).tab;
    local_10 = *(void **)&pgVar3->err;
    runtime_selectnbsend((runtime_hchan *)pgStack0000000000000008->c,&local_20,SUB81(local_10,0));
    pgVar4 = pgStack0000000000000008;
    if (extraout_AL != '\0') {
      if ((pgStack0000000000000008->backlog).len == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      pgVar3 = (pgStack0000000000000008->backlog).array;
      (pgVar3->err).tab = (runtime_itab *)0x0;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_RDI;
        extraout_R11[1] = *(void **)&extraout_RSI->err;
        pgVar3 = extraout_RSI;
      }
      pgVar3->buffer = (bytes_Buffer *)0x0;
      *(void **)&pgVar3->err = (void *)0x0;
      iVar2 = (pgVar4->backlog).len;
      if (iVar2 == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      iVar6 = (pgVar4->backlog).cap + -1;
      (pgVar4->backlog).len = iVar2 + -1;
      (pgVar4->backlog).cap = iVar6;
      pgVar3 = (google_golang_org_grpc_internal_transport_recvMsg *)
               ((int)&((pgVar4->backlog).array)->buffer + (uint)((dword)(-iVar6 >> 0x3f) & 0x18));
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_00 = extraout_RCX;
        extraout_R11_00[1] = (pgVar4->backlog).array;
        pgVar3 = extraout_RCX;
      }
      (pgVar4->backlog).array = pgVar3;
    }
  }
  LOCK();
  psVar1 = &pgVar4->mu;
  sVar5 = psVar1->state;
  psVar1->state = psVar1->state + -1;
  UNLOCK();
  sVar5 = sVar5 + -1;
  if (sVar5 != 0) {
    sync___Mutex__unlockSlow(m,sVar5);
  }
  return;
}



void google_golang_org_grpc_internal_transport___recvBufferReader__Read
               (google_golang_org_grpc_internal_transport_recvBufferReader *r,__uint8 p,int n,
               error err)

{
  bytes_Buffer *pbVar1;
  uint uVar2;
  uint uVar3;
  error err_00;
  size_t in_RCX;
  int copied;
  void *extraout_RCX;
  void *extraout_RCX_00;
  void *pvVar4;
  void *extraout_RCX_01;
  void *extraout_RCX_02;
  runtime_itab *extraout_RBX;
  runtime_itab *extraout_RBX_00;
  undefined8 extraout_RSI;
  uint8 *__src;
  undefined8 *extraout_R11;
  void **extraout_R11_00;
  void **extraout_R11_01;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffffc8;
  runtime_itab *in_stack_ffffffffffffffe0;
  void *in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((r->err).tab != (runtime_itab *)0x0) {
    return;
  }
  pbVar1 = r->last;
  if (pbVar1 == (bytes_Buffer *)0x0) {
    if (r->closeStream == (func_error_ **)0x0) {
      google_golang_org_grpc_internal_transport___recvBufferReader__read((int)r,(void *)n,in_RCX);
      (r->err).tab = extraout_RBX_00;
      pvVar4 = extraout_RCX_01;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_01 = extraout_RCX_02;
        extraout_R11_01[1] = (r->err).data;
        pvVar4 = extraout_RCX_02;
      }
      (r->err).data = pvVar4;
    }
    else {
      err_00.data = in_stack_ffffffffffffffe8;
      err_00.tab = in_stack_ffffffffffffffe0;
      google_golang_org_grpc_internal_transport___recvBufferReader__readClient
                (r,in_stack_ffffffffffffffc8,n,err_00);
      (r->err).tab = extraout_RBX;
      pvVar4 = extraout_RCX;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_00 = extraout_RCX_00;
        extraout_R11_00[1] = (r->err).data;
        pvVar4 = extraout_RCX_00;
      }
      (r->err).data = pvVar4;
    }
    return;
  }
  pbVar1->lastRead = 0;
  uVar2 = (pbVar1->buf).len;
  uVar3 = pbVar1->off;
  if ((int)uVar3 < (int)uVar2) {
    if (uVar2 < uVar3) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    __src = (pbVar1->buf).array + (uVar3 & (int)(uVar3 - (pbVar1->buf).cap) >> 0x3f);
    if ((int)(uVar2 - uVar3) < (int)in_RCX) {
      in_RCX = uVar2 - uVar3;
    }
    if ((uint8 *)n != __src) {
      runtime_memmove((void *)n,__src,in_RCX);
    }
    pbVar1->off = pbVar1->off + in_RCX;
    if (0 < (int)in_RCX) {
      pbVar1->lastRead = -1;
    }
  }
  else {
    (pbVar1->buf).len = 0;
    pbVar1->off = 0;
    pbVar1->lastRead = 0;
  }
  pbVar1 = r->last;
  if (pbVar1->off == (pbVar1->buf).len) {
    (**r->freeBuffer)(pbVar1);
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = extraout_RSI;
    }
    r->last = (bytes_Buffer *)0x0;
  }
  return;
}



ssize_t google_golang_org_grpc_internal_transport___recvBufferReader__read
                  (int __fd,void *__buf,size_t __nbytes)

{
  google_golang_org_grpc_internal_transport_recvMsg m;
  error ~r0;
  __uint8 p;
  int extraout_RAX;
  ssize_t extraout_RAX_00;
  undefined in_R10B;
  undefined extraout_R10B;
  int unaff_R14;
  undefined in_XMM15 [16];
  google_golang_org_grpc_internal_transport_recvBufferReader *pgStack0000000000000008;
  void *pvStack0000000000000010;
  size_t sStack0000000000000018;
  error in_stack_ffffffffffffff80;
  runtime_itab *in_stack_ffffffffffffff90;
  uint8 *in_stack_ffffffffffffff98;
  undefined in_stack_ffffffffffffffa0 [16];
  error in_stack_ffffffffffffffb0;
  int local_40 [3];
  runtime_scase local_28;
  undefined local_18 [16];
  
  pgStack0000000000000008 = (google_golang_org_grpc_internal_transport_recvBufferReader *)__fd;
  sStack0000000000000018 = __nbytes;
  pvStack0000000000000010 = __buf;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_R10B = extraout_R10B;
  }
  local_40[0] = 0;
  local_18._8_8_ = in_XMM15._8_8_;
  local_18._0_8_ = pgStack0000000000000008->ctxDone;
  local_28.elem = local_40;
  local_28.c = (runtime_hchan *)pgStack0000000000000008->recv->c;
  runtime_selectgo(&local_28,(uint16 *)&stack0xffffffffffffffb8,(uintptr *)0x0,0,2,true,
                   (int)pgStack0000000000000008->ctxDone,(bool)in_R10B);
  if (extraout_RAX == 0) {
    m.err.data = in_stack_ffffffffffffff90;
    m.buffer = (bytes_Buffer *)in_stack_ffffffffffffff80.tab;
    m.err.tab = (runtime_itab *)in_stack_ffffffffffffff80.data;
    p.len = in_stack_ffffffffffffffa0._0_8_;
    p.cap = in_stack_ffffffffffffffa0._8_8_;
    p.array = in_stack_ffffffffffffff98;
    google_golang_org_grpc_internal_transport___recvBufferReader__readAdditional
              (pgStack0000000000000008,m,p,local_40[0],in_stack_ffffffffffffffb0);
    return extraout_RAX_00;
  }
  (*(code *)(pgStack0000000000000008->ctx).tab[1]._type)((pgStack0000000000000008->ctx).data);
  ~r0.data = in_stack_ffffffffffffff98;
  ~r0.tab = in_stack_ffffffffffffff90;
  google_golang_org_grpc_internal_transport_ContextErr(in_stack_ffffffffffffff80,~r0);
  return 0;
}



void google_golang_org_grpc_internal_transport___recvBufferReader__readClient
               (google_golang_org_grpc_internal_transport_recvBufferReader *r,__uint8 p,int n,
               error err)

{
  google_golang_org_grpc_internal_transport_recvMsg m;
  google_golang_org_grpc_internal_transport_recvMsg m_00;
  error ~r0;
  __uint8 p_00;
  __uint8 p_01;
  int extraout_RAX;
  undefined in_R10B;
  undefined extraout_R10B;
  int unaff_R14;
  undefined in_XMM15 [16];
  error in_stack_ffffffffffffff68;
  runtime_itab *in_stack_ffffffffffffff78;
  uint8 *in_stack_ffffffffffffff80;
  undefined in_stack_ffffffffffffff88 [16];
  error in_stack_ffffffffffffff98;
  int local_58 [3];
  int local_40 [3];
  runtime_scase local_28;
  undefined local_18 [16];
  
  while (local_18 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_R10B = extraout_R10B;
  }
  local_40[0] = 0;
  local_18._8_8_ = in_XMM15._8_8_;
  local_18._0_8_ = r->ctxDone;
  local_28.elem = local_40;
  local_28.c = (runtime_hchan *)r->recv->c;
  runtime_selectgo(&local_28,(uint16 *)&stack0xffffffffffffffa0,(uintptr *)0x0,0,2,true,
                   (int)r->ctxDone,(bool)in_R10B);
  if (extraout_RAX == 0) {
    m.err.data = in_stack_ffffffffffffff78;
    m.buffer = (bytes_Buffer *)in_stack_ffffffffffffff68.tab;
    m.err.tab = (runtime_itab *)in_stack_ffffffffffffff68.data;
    p_00.len = in_stack_ffffffffffffff88._0_8_;
    p_00.cap = in_stack_ffffffffffffff88._8_8_;
    p_00.array = in_stack_ffffffffffffff80;
    google_golang_org_grpc_internal_transport___recvBufferReader__readAdditional
              (r,m,p_00,local_40[0],in_stack_ffffffffffffff98);
    return;
  }
  (*(code *)(r->ctx).tab[1]._type)((r->ctx).data);
  ~r0.data = in_stack_ffffffffffffff80;
  ~r0.tab = in_stack_ffffffffffffff78;
  google_golang_org_grpc_internal_transport_ContextErr(in_stack_ffffffffffffff68,~r0);
  (**r->closeStream)(in_stack_ffffffffffffff68);
  local_58[0] = 0;
  runtime_chanrecv1((runtime_hchan *)r->recv->c,local_58);
  m_00.err.data = in_stack_ffffffffffffff78;
  m_00.buffer = (bytes_Buffer *)in_stack_ffffffffffffff68.tab;
  m_00.err.tab = (runtime_itab *)in_stack_ffffffffffffff68.data;
  p_01.len = in_stack_ffffffffffffff88._0_8_;
  p_01.cap = in_stack_ffffffffffffff88._8_8_;
  p_01.array = in_stack_ffffffffffffff80;
  google_golang_org_grpc_internal_transport___recvBufferReader__readAdditional
            (r,m_00,p_01,local_58[0],in_stack_ffffffffffffff98);
  return;
}



void google_golang_org_grpc_internal_transport___recvBufferReader__readAdditional
               (google_golang_org_grpc_internal_transport_recvBufferReader *r,
               google_golang_org_grpc_internal_transport_recvMsg m,__uint8 p,int n,error err)

{
  void *__src;
  uint uVar1;
  uint uVar2;
  bytes_Buffer *extraout_RAX;
  int in_RCX;
  void *in_RSI;
  int copied;
  undefined8 extraout_RSI;
  size_t in_R8;
  bytes_Buffer **extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  google_golang_org_grpc_internal_transport___recvBuffer__load(r->recv);
  if (in_RCX != 0) {
    return;
  }
  *(undefined *)(n + 0x20) = 0;
  uVar1 = *(uint *)(n + 8);
  uVar2 = *(uint *)(n + 0x18);
  if ((int)uVar2 < (int)uVar1) {
    if (uVar1 < uVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    __src = (void *)(*(int *)n + (uVar2 & (int)(uVar2 - *(int *)(n + 0x10)) >> 0x3f));
    if ((int)(uVar1 - uVar2) < (int)in_R8) {
      in_R8 = uVar1 - uVar2;
    }
    if (in_RSI != __src) {
      runtime_memmove(in_RSI,__src,in_R8);
    }
    *(int *)(n + 0x18) = *(int *)(n + 0x18) + in_R8;
    if (0 < (int)in_R8) {
      *(undefined *)(n + 0x20) = 0xff;
    }
  }
  else {
    *(undefined8 *)(n + 8) = 0;
    *(undefined8 *)(n + 0x18) = 0;
    *(undefined *)(n + 0x20) = 0;
  }
  if (*(int *)(n + 0x18) == *(int *)(n + 8)) {
    (**r->freeBuffer)((bytes_Buffer *)n);
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = extraout_RSI;
    }
    r->last = (bytes_Buffer *)0x0;
  }
  else {
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX;
      extraout_R11[1] = r->last;
      n = (int)extraout_RAX;
    }
    r->last = (bytes_Buffer *)n;
  }
  return;
}



// WARNING: Unknown calling convention

void google_golang_org_grpc_internal_transport___Stream__waitOnHeader
               (google_golang_org_grpc_internal_transport_Stream *s)

{
  int extraout_RAX;
  int ~r0;
  bool ~r1;
  int unaff_R14;
  undefined in_XMM15 [16];
  void *pvVar1;
  google_golang_org_grpc_internal_transport_Stream *pgStack0000000000000008;
  error in_stack_ffffffffffffffa0;
  error in_stack_ffffffffffffffb0;
  uint16 local_30 [4];
  runtime_scase local_28;
  undefined local_18 [16];
  
  pgStack0000000000000008 = s;
  while (pvVar1 = in_XMM15._8_8_, &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (pgStack0000000000000008->headerChan != (chan_struct___)0x0) {
    local_18._0_8_ =
         (*(code *)(pgStack0000000000000008->ctx).tab[1].inter)((pgStack0000000000000008->ctx).data)
    ;
    local_18._8_8_ = pvVar1;
    local_28.elem = pvVar1;
    local_28.c = (runtime_hchan *)pgStack0000000000000008->headerChan;
    runtime_selectgo(&local_28,local_30,(uintptr *)0x0,0,2,true,~r0,~r1);
    if (extraout_RAX != 0) {
      (*(code *)(pgStack0000000000000008->ctx).tab[1]._type)((pgStack0000000000000008->ctx).data);
      google_golang_org_grpc_internal_transport_ContextErr
                (in_stack_ffffffffffffffa0,in_stack_ffffffffffffffb0);
      google_golang_org_grpc_internal_transport___http2Client__CloseStream
                (pgStack0000000000000008->ct,pgStack0000000000000008,in_stack_ffffffffffffffa0);
      runtime_chanrecv1((runtime_hchan *)pgStack0000000000000008->headerChan,(void *)0x0);
    }
    return;
  }
  return;
}



void google_golang_org_grpc_internal_transport___Stream__RecvCompress
               (google_golang_org_grpc_internal_transport_Stream *s,string ~r0)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  google_golang_org_grpc_internal_transport___Stream__waitOnHeader(s);
  return;
}



void google_golang_org_grpc_internal_transport___Stream__SetSendCompress
               (google_golang_org_grpc_internal_transport_Stream *s,string name,error ~r0)

{
  char **extraout_RAX;
  google_golang_org_grpc_internal_transport_Stream *extraout_RAX_00;
  int in_RCX;
  uint8 *in_RBX;
  uint8 *extraout_RBX;
  uint8 **extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((s->headerSent != 1) && (s->state != 3)) {
    (s->sendCompress).len = in_RCX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RBX;
      extraout_R11[1] = (extraout_RAX_00->sendCompress).str;
      s = extraout_RAX_00;
      in_RBX = extraout_RBX;
    }
    (s->sendCompress).str = in_RBX;
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0083e560,in_RBX);
  extraout_RAX[1] = (char *)0x47;
  *extraout_RAX =
       "transport: set send compressor called after headers sent or stream donegrpc: error unmarshalling service config %s due to methodConfig[%d]: %vtoo many concurrent operations on a single file or socket (max 1048575)json: invalid use of ,string struct tag, trying to unmarshal %q into %vdynamic table size update MUST occur at the beginning of a header blockx509: issuer has name constraints but leaf doesn\'t have a SAN extensiongrpc: Server.RegisterService found duplicate service registration for %qreflect: embedded type with methods not implemented for non-pointer typecrypto/ecdh: internal error: nistec ScalarBaseMult returned the identityReceived a RST_STREAM frame with code %q, but found no mapped gRPC statusbytes.Buffer: UnreadRune: previous operation was not a successful ReadRuneheader list size to send violates the maximum size (%d bytes) set by serverHeader list size to send violates the maximum size (%d bytes) set by clienttransport: http2Server.HandleStreams received bogus greeting from client: %qtransport: http2Server.HandleStreams saw invalid preface type %T from clienttransport: trying to send header list size larger than the limit set by peergrpc: credentials.Bundle may not be used with individual TransportCredentialsClientConn\'s authority from transport creds %q and dial option %q don\'t matchMapIter.Next called on an iterator that does not have an associated map Valuereflect: embedded type with methods not implemented if type is not first fieldtransport: http2Server.HandleStreams failed to read initial settings frame: %vx509: signature check attempts limit reached while verifying certificate chain115792089210356248762697446949407573530086143415290314195533631308867097853951115792089210356248762697446949407573529996955224135760342422259061068512044369cannot convert slice with length %y to array or pointer to array with length %xmetadata: FromOutgoingContext got an odd number of input pairs for metadata: %dx509: invalid signature: parent certificate cannot sign this kind of certificatecrypto/rand: blocked f..." /* TRUNCATED STRING LITERAL */
  ;
  return;
}



void google_golang_org_grpc_internal_transport___Stream__SendCompress
               (google_golang_org_grpc_internal_transport_Stream *s,string ~r0)

{
  return;
}



void google_golang_org_grpc_internal_transport___Stream__ClientAdvertisedCompressors
               (google_golang_org_grpc_internal_transport_Stream *s,__string ~r0)

{
  __string ~r0_00;
  int extraout_RAX;
  undefined8 uVar1;
  undefined8 extraout_RAX_00;
  undefined8 extraout_RAX_01;
  int iVar2;
  int extraout_RCX;
  int extraout_RBX;
  undefined8 extraout_RBX_00;
  int iVar3;
  int i;
  int extraout_RSI;
  undefined8 *extraout_R11;
  int unaff_R14;
  string in_stack_ffffffffffffffa0;
  string in_stack_ffffffffffffffb0;
  undefined in_stack_ffffffffffffffc0 [16];
  int in_stack_ffffffffffffffd0;
  int iVar4;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.cap = in_stack_ffffffffffffffd0;
  ~r0_00.array = (string *)in_stack_ffffffffffffffc0._0_8_;
  ~r0_00.len = in_stack_ffffffffffffffc0._8_8_;
  strings_genSplit(in_stack_ffffffffffffffa0,in_stack_ffffffffffffffb0,
                   (int)(s->clientAdvertisedCompressors).str,(s->clientAdvertisedCompressors).len,
                   ~r0_00);
  iVar4 = extraout_RBX;
  for (i = 0; i < iVar4; i = i + 1) {
    strings_TrimSpace(in_stack_ffffffffffffffa0,in_stack_ffffffffffffffb0);
    iVar2 = i * 0x10;
    *(undefined8 *)(extraout_RAX + 8 + iVar2) = extraout_RBX_00;
    uVar1 = extraout_RAX_00;
    iVar3 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_01;
      extraout_R11[1] = *(undefined8 *)(extraout_RSI + extraout_RCX);
      uVar1 = extraout_RAX_01;
      iVar2 = extraout_RCX;
      iVar3 = extraout_RSI;
    }
    *(undefined8 *)(iVar3 + iVar2) = uVar1;
  }
  return;
}



void google_golang_org_grpc_internal_transport___Stream__Done
               (google_golang_org_grpc_internal_transport_Stream *s,<_chan_struct___ ~r0)

{
  return;
}



void google_golang_org_grpc_internal_transport___Stream__Header
               (google_golang_org_grpc_internal_transport_Stream *s,
               google_golang_org_grpc_metadata_MD ~r0,error ~r1)

{
  google_golang_org_grpc_metadata_MD phVar1;
  google_golang_org_grpc_internal_status_Status *pgVar2;
  void *pvVar3;
  void *pvVar4;
  runtime_hmap *h;
  google_golang_org_grpc_metadata_MD out;
  runtime_hmap *h_00;
  google_golang_org_grpc_metadata_MD out_1;
  google_golang_org_grpc_internal_status_Status **extraout_RAX;
  google_golang_org_grpc_internal_status_Status **extraout_RAX_00;
  google_golang_org_grpc_internal_status_Status **ppgVar5;
  undefined8 *puVar6;
  undefined8 extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  void *~r0_00;
  int32 iVar7;
  int iVar8;
  runtime_hmap *in_RDI;
  runtime_hmap *~r0_01;
  runtime_hmap *extraout_RDI;
  google_golang_org_grpc_internal_status_Status **extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  int unaff_R14;
  string in_stack_ffffffffffffff18;
  runtime_hiter local_68;
  
  while (&local_68 <= *(runtime_hiter **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  if (s->headerChan != (chan_struct___)0x0) {
    google_golang_org_grpc_internal_transport___Stream__waitOnHeader(s);
    if ((s->headerValid != false) && (s->noHeaders == false)) {
      phVar1 = s->header;
      if (phVar1 == (google_golang_org_grpc_metadata_MD)0x0) {
        iVar8 = 0;
      }
      else {
        iVar8 = phVar1->count;
      }
      runtime_makemap((internal_abi_MapType *)&DAT_0087f400,iVar8,(runtime_hmap *)0x0,~r0_01);
      FUN_0046cdab();
      runtime_mapiterinit((internal_abi_MapType *)&DAT_0087f400,(runtime_hmap *)phVar1,&local_68);
      while ((void **)local_68.key != (void **)0x0) {
                    // WARNING: Load size is inaccurate
        pvVar3 = *local_68.key;
        pvVar4 = *(void **)((int)local_68.elem + 8);
                    // WARNING: Load size is inaccurate
        runtime_makeslicecopy
                  ((internal_abi_Type *)&DAT_008075e0,(int)pvVar4,(int)pvVar4,*local_68.elem,pvVar3)
        ;
        runtime_mapassign_faststr
                  ((internal_abi_MapType *)&DAT_0087f400,h_00,in_stack_ffffffffffffff18,pvVar3);
        extraout_RAX_02[1] = pvVar4;
        extraout_RAX_02[2] = pvVar4;
        puVar6 = extraout_RAX_02;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_00 = extraout_RAX_01;
          extraout_R11_00[1] = *extraout_RAX_03;
          puVar6 = extraout_RAX_03;
        }
        *puVar6 = extraout_RAX_01;
        runtime_mapiternext(&local_68);
      }
      return;
    }
    pgVar2 = s->status;
    if ((pgVar2 == (google_golang_org_grpc_internal_status_Status *)0x0) ||
       (pgVar2->s == (google_golang_org_genproto_googleapis_rpc_status_Status *)0x0)) {
      iVar7 = 0;
    }
    else {
      iVar7 = pgVar2->s->Code;
    }
    if (iVar7 != 0) {
      runtime_newobject((internal_abi_Type *)&DAT_00842760,~r0_00);
      ppgVar5 = extraout_RAX;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11 = pgVar2;
        ppgVar5 = extraout_RAX_00;
      }
      *ppgVar5 = pgVar2;
    }
    return;
  }
  phVar1 = s->header;
  if (phVar1 == (google_golang_org_grpc_metadata_MD)0x0) {
    iVar8 = 0;
  }
  else {
    iVar8 = phVar1->count;
  }
  runtime_makemap((internal_abi_MapType *)&DAT_0087f400,iVar8,(runtime_hmap *)0x0,in_RDI);
  FUN_0046cdab();
  runtime_mapiterinit((internal_abi_MapType *)&DAT_0087f400,(runtime_hmap *)phVar1,&local_68);
  while ((void **)local_68.key != (void **)0x0) {
                    // WARNING: Load size is inaccurate
    pvVar3 = *local_68.key;
    pvVar4 = *(void **)((int)local_68.elem + 8);
                    // WARNING: Load size is inaccurate
    runtime_makeslicecopy
              ((internal_abi_Type *)&DAT_008075e0,(int)pvVar4,(int)pvVar4,*local_68.elem,pvVar3);
    runtime_mapassign_faststr
              ((internal_abi_MapType *)&DAT_0087f400,h,in_stack_ffffffffffffff18,pvVar3);
    extraout_RAX_05[1] = pvVar4;
    extraout_RAX_05[2] = pvVar4;
    puVar6 = extraout_RAX_05;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_01 = extraout_RAX_04;
      extraout_R11_01[1] = *extraout_RAX_06;
      puVar6 = extraout_RAX_06;
    }
    *puVar6 = extraout_RAX_04;
    runtime_mapiternext(&local_68);
  }
  return;
}



void google_golang_org_grpc_internal_transport___Stream__TrailersOnly
               (google_golang_org_grpc_internal_transport_Stream *s,bool ~r0)

{
  int unaff_R14;
  google_golang_org_grpc_internal_transport_Stream *pgStack0000000000000008;
  
  pgStack0000000000000008 = s;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  google_golang_org_grpc_internal_transport___Stream__waitOnHeader(pgStack0000000000000008);
  return;
}



void google_golang_org_grpc_internal_transport___Stream__Trailer
               (google_golang_org_grpc_internal_transport_Stream *s,
               google_golang_org_grpc_metadata_MD ~r0)

{
  google_golang_org_grpc_metadata_MD h;
  void *~r0_00;
  void *tolen;
  runtime_hmap *h_00;
  google_golang_org_grpc_metadata_MD c;
  undefined8 *puVar1;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  int hint;
  runtime_hmap *in_RDI;
  runtime_hmap *extraout_RDI;
  undefined8 *extraout_R11;
  int unaff_R14;
  string in_stack_ffffffffffffff48;
  undefined local_68 [96];
  
  while (local_68 + 0x30 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  h = s->trailer;
  if (h == (google_golang_org_grpc_metadata_MD)0x0) {
    hint = 0;
  }
  else {
    hint = h->count;
  }
  runtime_makemap((internal_abi_MapType *)&DAT_0087f400,hint,(runtime_hmap *)0x0,in_RDI);
  FUN_0046cdab();
  runtime_mapiterinit((internal_abi_MapType *)&DAT_0087f400,(runtime_hmap *)h,
                      (runtime_hiter *)local_68);
  while ((void **)local_68._0_8_ != (void **)0x0) {
    ~r0_00 = *(void **)local_68._0_8_;
    tolen = *(void **)(local_68._8_8_ + 8);
    runtime_makeslicecopy
              ((internal_abi_Type *)&DAT_008075e0,(int)tolen,(int)tolen,*(void **)local_68._8_8_,
               ~r0_00);
    runtime_mapassign_faststr
              ((internal_abi_MapType *)&DAT_0087f400,h_00,in_stack_ffffffffffffff48,~r0_00);
    extraout_RAX_00[1] = tolen;
    extraout_RAX_00[2] = tolen;
    puVar1 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX;
      extraout_R11[1] = *extraout_RAX_01;
      puVar1 = extraout_RAX_01;
    }
    *puVar1 = extraout_RAX;
    runtime_mapiternext((runtime_hiter *)local_68);
  }
  return;
}



void google_golang_org_grpc_internal_transport___Stream__ContentSubtype
               (google_golang_org_grpc_internal_transport_Stream *s,string ~r0)

{
  return;
}



void google_golang_org_grpc_internal_transport___Stream__Context
               (google_golang_org_grpc_internal_transport_Stream *s,context_Context ~r0)

{
  return;
}



void google_golang_org_grpc_internal_transport___Stream__SetContext
               (google_golang_org_grpc_internal_transport_Stream *s,context_Context ctx)

{
  google_golang_org_grpc_internal_transport_Stream *extraout_RAX;
  void *in_RCX;
  void *extraout_RCX;
  runtime_itab *in_RBX;
  void **extraout_R11;
  int unaff_R14;
  void *pvStack0000000000000018;
  
  pvStack0000000000000018 = in_RCX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  (s->ctx).tab = in_RBX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RCX;
    extraout_R11[1] = (extraout_RAX->ctx).data;
    s = extraout_RAX;
    pvStack0000000000000018 = extraout_RCX;
  }
  (s->ctx).data = pvStack0000000000000018;
  return;
}



void google_golang_org_grpc_internal_transport___Stream__Method
               (google_golang_org_grpc_internal_transport_Stream *s,string ~r0)

{
  return;
}



void google_golang_org_grpc_internal_transport___Stream__Status
               (google_golang_org_grpc_internal_transport_Stream *s,
               google_golang_org_grpc_internal_status_Status *~r0)

{
  return;
}



void google_golang_org_grpc_internal_transport___Stream__HeaderWireLength
               (google_golang_org_grpc_internal_transport_Stream *s,int ~r0)

{
  return;
}



void google_golang_org_grpc_internal_transport___Stream__SetHeader
               (google_golang_org_grpc_internal_transport_Stream *s,
               google_golang_org_grpc_metadata_MD md,error ~r0)

{
  sync_Mutex *psVar1;
  void *num;
  void *srcPtr;
  void *pvVar2;
  runtime_slice ~r0_00;
  google_golang_org_grpc_metadata_MD h;
  google_golang_org_grpc_metadata_MD out;
  sdword sVar5;
  int32 new;
  google_golang_org_grpc_metadata_MD extraout_RAX;
  google_golang_org_grpc_metadata_MD phVar3;
  void **extraout_RAX_00;
  void *extraout_RAX_01;
  int iVar4;
  void *extraout_RCX;
  void *oldCap;
  google_golang_org_grpc_metadata_MD md_1;
  runtime_hmap *h_00;
  void *extraout_RBX;
  void *newLen;
  void *oldPtr;
  void **ppvVar6;
  int extraout_R8;
  int extraout_R8_00;
  int ~r0_01;
  void **extraout_R8_01;
  google_golang_org_grpc_metadata_MD *extraout_R11;
  void **extraout_R11_00;
  int unaff_R14;
  bool bVar7;
  string in_stack_ffffffffffffff18;
  int in_stack_ffffffffffffff28;
  runtime_hiter local_68;
  
  while (&local_68 <= *(runtime_hiter **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (md == (google_golang_org_grpc_metadata_MD)0x0) {
    iVar4 = 0;
  }
  else {
    iVar4 = md->count;
  }
  if (iVar4 == 0) {
    return;
  }
  if ((s->headerSent != 1) && (s->state != 3)) {
    LOCK();
    bVar7 = (s->hdrMu).state == 0;
    if (bVar7) {
      (s->hdrMu).state = 1;
    }
    UNLOCK();
    if (!bVar7) {
      sync___Mutex__lockSlow(&s->hdrMu);
    }
    runtime_makemap_small((runtime_hmap *)s->header);
    for (iVar4 = 0; iVar4 < 2; iVar4 = iVar4 + 1) {
      FUN_0046cdab();
      runtime_mapiterinit((internal_abi_MapType *)&DAT_0087f400,h_00,&local_68);
      while ((void **)local_68.key != (void **)0x0) {
                    // WARNING: Load size is inaccurate
        num = *(void **)((int)local_68.elem + 8);
                    // WARNING: Load size is inaccurate
        srcPtr = *local_68.elem;
        runtime_mapassign_faststr
                  ((internal_abi_MapType *)&DAT_0087f400,(runtime_hmap *)h,in_stack_ffffffffffffff18
                   ,*local_68.key);
        pvVar2 = extraout_RAX_00[1];
        oldCap = extraout_RAX_00[2];
        newLen = (void *)((int)pvVar2 + (int)num);
        oldPtr = *extraout_RAX_00;
        ~r0_01 = extraout_R8;
        if (oldCap < newLen) {
          ~r0_00.cap = in_stack_ffffffffffffff28;
          ~r0_00.array = in_stack_ffffffffffffff18.str;
          ~r0_00.len = in_stack_ffffffffffffff18.len;
          runtime_growslice(oldPtr,(int)newLen,(int)oldCap,(int)num,
                            (internal_abi_Type *)&DAT_008075e0,~r0_00);
          oldCap = extraout_RCX;
          newLen = extraout_RBX;
          oldPtr = extraout_RAX_01;
          ~r0_01 = extraout_R8_00;
        }
        runtime_typedslicecopy
                  ((internal_abi_Type *)&DAT_008075e0,
                   (void *)((int)oldPtr + ((int)pvVar2 << 4 & (int)pvVar2 - (int)oldCap >> 0x3f)),
                   (int)newLen - (int)pvVar2,srcPtr,(int)num,~r0_01);
        extraout_RAX_00[1] = newLen;
        extraout_RAX_00[2] = oldCap;
        ppvVar6 = extraout_RAX_00;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_00 = oldPtr;
          extraout_R11_00[1] = *extraout_R8_01;
          ppvVar6 = extraout_R8_01;
        }
        *ppvVar6 = oldPtr;
        runtime_mapiternext(&local_68);
      }
    }
    phVar3 = h;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX;
      extraout_R11[1] = s->header;
      phVar3 = extraout_RAX;
    }
    s->header = phVar3;
    LOCK();
    psVar1 = &s->hdrMu;
    sVar5 = psVar1->state;
    psVar1->state = psVar1->state + -1;
    UNLOCK();
    sVar5 = sVar5 + -1;
    if (sVar5 != 0) {
      sync___Mutex__unlockSlow(&s->hdrMu,sVar5);
    }
    return;
  }
  return;
}



void google_golang_org_grpc_internal_transport___Stream__SendHeader
               (google_golang_org_grpc_internal_transport_Stream *s,
               google_golang_org_grpc_metadata_MD md,error ~r0)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  (**(code **)&(s->st).tab[2].hash)((s->st).data,s,md);
  return;
}



void google_golang_org_grpc_internal_transport___Stream__SetTrailer
               (google_golang_org_grpc_internal_transport_Stream *s,
               google_golang_org_grpc_metadata_MD md,error ~r0)
