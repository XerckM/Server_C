    ~r0_01.cap = in_XMM15_Qa;
    ~r0_1_00.len = (int)pcVar10;
    ~r0_1_00.array = (uint8 *)in_XMM15_Qb;
    ~r0_1_00.cap = (int)psVar11;
    ~r1_1.data = unaff_RBP;
    ~r1_1.tab = prVar12;
    encoding_json_appendIndent
              (dst,src,in_stack_ffffffffffffff90,in_stack_ffffffffffffffa0,~r0_01,~r0_1_00,~r1,~r1_1
              );
    (enc->indentBuf).len = extraout_RBX;
    (enc->indentBuf).cap = extraout_RCX;
    puVar3 = extraout_RAX_00;
    iVar8 = extraout_RCX;
    iVar6 = extraout_RBX;
    iVar7 = extraout_RDI;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_01;
      extraout_R11[1] = (peVar5->indentBuf).array;
      puVar3 = extraout_RAX_01;
      iVar8 = extraout_RCX_00;
      iVar6 = extraout_RBX_00;
      iVar7 = extraout_RDI_00;
    }
    (peVar5->indentBuf).array = puVar3;
    if (iVar7 != 0) {
      (*(code *)prVar12->inter)();
      return;
    }
  }
  (*(code *)((peVar5->w).tab)->fun[0])((peVar5->w).data,puVar3,iVar6,iVar8);
  if (extraout_RBX_01 != (runtime_itab *)0x0) {
    (enc->err).tab = extraout_RBX_01;
    pvVar4 = extraout_RCX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RCX_02;
      extraout_R11_00[1] = (extraout_RAX_02->err).data;
      enc = extraout_RAX_02;
      pvVar4 = extraout_RCX_02;
    }
    (enc->err).data = pvVar4;
  }
  (*(code *)prVar12->inter)();
  return;
}



// WARNING: Unknown calling convention

void encoding_json___Encoder__Encode_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffe0;
  }
  sync___Pool__Put(*(sync_Pool **)(in_RDX + 8),in_stack_ffffffffffffffe0);
  return;
}



void encoding_json_RawMessage_MarshalJSON(encoding_json_RawMessage m,__uint8 ~r0,error ~r1)

{
  int in_RAX;
  undefined4 *extraout_RAX;
  void *in_RBX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RAX != 0) {
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00812c40,in_RBX);
  *extraout_RAX = 0x6c6c756e;
  return;
}



void encoding_json___RawMessage__UnmarshalJSON(encoding_json_RawMessage *m,__uint8 data,error ~r0)

{
  uint8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  uint in_RCX;
  uint extraout_RCX;
  uint uVar1;
  uint oldCap;
  void *in_RBX;
  uint extraout_RBX;
  encoding_json_RawMessage *extraout_RSI;
  uint8 *oldPtr;
  uint8 **extraout_R11;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (m == (encoding_json_RawMessage *)0x0) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,in_RBX);
    extraout_RAX_00[1] = 0x2d;
    *extraout_RAX_00 = &DAT_008c6f69;
    return;
  }
  oldCap = m->cap;
  oldPtr = m->array;
  uVar1 = in_RCX;
  if (oldCap < in_RCX) {
    runtime_growslice(oldPtr,in_RCX,oldCap,in_RCX,(internal_abi_Type *)&DAT_00807920,
                      in_stack_ffffffffffffffb8);
    uVar1 = extraout_RBX;
    oldCap = extraout_RCX;
    oldPtr = extraout_RAX;
  }
  runtime_memmove(oldPtr,in_RBX,in_RCX);
  m->len = uVar1;
  m->cap = oldCap;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = oldPtr;
    extraout_R11[1] = extraout_RSI->array;
    m = extraout_RSI;
  }
  m->array = oldPtr;
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void encoding_json_tagOptions_Contains(encoding_json_tagOptions o,string optionName,bool ~r0)

{
  string before;
  string after;
  char extraout_AL;
  uint uVar1;
  uint extraout_RCX;
  uint8 *in_RBX;
  int extraout_RBX;
  uint8 *unaff_RBP;
  int in_RDI;
  uint8 *extraout_RDI;
  int unaff_R14;
  int unaff_retaddr;
  string in_stack_ffffffffffffffc8;
  string in_stack_ffffffffffffffd8;
  uint8 *in_stack_ffffffffffffffe8;
  uint in_stack_fffffffffffffff0;
  
  uVar1 = (uint)~r0;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RBX == (uint8 *)0x0) {
    return;
  }
  do {
    if (in_RBX == (uint8 *)0x0) {
      return;
    }
    before.len = in_stack_fffffffffffffff0;
    before.str = in_stack_ffffffffffffffe8;
    after.len = unaff_retaddr;
    after.str = unaff_RBP;
    strings_Cut(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffd8,before,after,SUB81(uVar1,0));
    uVar1 = extraout_RCX;
    in_RBX = extraout_RDI;
  } while ((extraout_RBX != in_RDI) ||
          (runtime_memequal(), in_stack_ffffffffffffffe8 = in_RBX, in_stack_fffffffffffffff0 = uVar1
          , extraout_AL == '\0'));
  return;
}



// WARNING: Removing unreachable block (ram,0x0055e832)
// WARNING: Removing unreachable block (ram,0x0055e77a)
// WARNING: Removing unreachable block (ram,0x0055e7dc)
// WARNING: Removing unreachable block (ram,0x0055e891)

int encoding_json_init(EVP_PKEY_CTX *ctx)

{
  runtime_itab *extraout_RAX;
  runtime_itab *extraout_RAX_00;
  runtime_itab *extraout_RAX_01;
  func__encoding_json_encodeState__reflect_Value__encoding_json_encOpts_ **extraout_RAX_02;
  func__encoding_json_encodeState__reflect_Value__encoding_json_encOpts_ **extraout_RAX_03;
  func__encoding_json_encodeState__reflect_Value__encoding_json_encOpts_ **extraout_RAX_04;
  func__encoding_json_encodeState__reflect_Value__encoding_json_encOpts_ **extraout_RAX_05;
  func__encoding_json_encodeState__reflect_Value__encoding_json_encOpts_ **ppfVar1;
  undefined *extraout_RCX;
  undefined *puVar2;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *extraout_RBX_01;
  void *extraout_RBX_02;
  void *extraout_RBX_03;
  void *extraout_RBX_04;
  void *extraout_RBX_05;
  void *extraout_RBX_06;
  void *pvVar3;
  void **extraout_R11;
  undefined8 *extraout_R11_00;
  void **extraout_R11_01;
  void **extraout_R11_02;
  undefined8 *extraout_R11_03;
  undefined8 *extraout_R11_04;
  int unaff_R14;
  reflect_Type in_stack_ffffffffffffffa8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  reflect___rtype__Elem((reflect_rtype *)&DAT_007fc960,in_stack_ffffffffffffffa8);
  pvVar3 = extraout_RBX;
  encoding_json_textUnmarshalerType.tab = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RBX_00;
    extraout_R11[1] = encoding_json_textUnmarshalerType.data;
    pvVar3 = extraout_RBX_00;
  }
  puVar2 = &DAT_0083d0a0;
  encoding_json_textUnmarshalerType.data = pvVar3;
  encoding_json_numberType.tab = (runtime_itab *)go_itab__reflect_rtype_reflect_Type;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RCX;
    extraout_R11_00[1] = encoding_json_numberType.data;
    puVar2 = extraout_RCX;
  }
  encoding_json_numberType.data = puVar2;
  reflect___rtype__Elem((reflect_rtype *)&DAT_007fbfe0,in_stack_ffffffffffffffa8);
  pvVar3 = extraout_RBX_01;
  encoding_json_marshalerType.tab = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_01 = extraout_RBX_02;
    extraout_R11_01[1] = encoding_json_marshalerType.data;
    pvVar3 = extraout_RBX_02;
  }
  encoding_json_marshalerType.data = pvVar3;
  reflect___rtype__Elem((reflect_rtype *)&DAT_007fc920,in_stack_ffffffffffffffa8);
  pvVar3 = extraout_RBX_03;
  encoding_json_textMarshalerType.tab = extraout_RAX_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_02 = extraout_RBX_04;
    extraout_R11_02[1] = encoding_json_textMarshalerType.data;
    pvVar3 = extraout_RBX_04;
  }
  encoding_json_textMarshalerType.data = pvVar3;
  runtime_newobject((internal_abi_Type *)&DAT_00848ce0,pvVar3);
  *extraout_RAX_02 = encoding_json_floatEncoder_encode_fm;
  extraout_RAX_02[1] =
       (func__encoding_json_encodeState__reflect_Value__encoding_json_encOpts_ *)0x20;
  ppfVar1 = extraout_RAX_02;
  pvVar3 = extraout_RBX_05;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_03 = extraout_RAX_03;
    extraout_R11_03[1] = encoding_json_float32Encoder;
    ppfVar1 = extraout_RAX_03;
    pvVar3 = extraout_RBX_06;
  }
  encoding_json_float32Encoder = ppfVar1;
  runtime_newobject((internal_abi_Type *)&DAT_00848ce0,pvVar3);
  *extraout_RAX_04 = encoding_json_floatEncoder_encode_fm;
  extraout_RAX_04[1] =
       (func__encoding_json_encodeState__reflect_Value__encoding_json_encOpts_ *)0x40;
  ppfVar1 = extraout_RAX_04;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_04 = extraout_RAX_05;
    extraout_R11_04[1] = encoding_json_float64Encoder;
    ppfVar1 = extraout_RAX_05;
  }
  encoding_json_float64Encoder = ppfVar1;
  return (int)ppfVar1;
}



void type__eq_encoding_json_SyntaxError
               (encoding_json_SyntaxError *p,encoding_json_SyntaxError *q,bool r)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((q->msg).len == (p->msg).len) && (q->Offset == p->Offset)) {
    runtime_memequal();
  }
  return;
}



void type__eq_encoding_json_UnsupportedValueError
               (encoding_json_UnsupportedValueError *p,encoding_json_UnsupportedValueError *q,bool r
               )

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((((q->Value).typ_ == (p->Value).typ_) && ((q->Value).ptr == (p->Value).ptr)) &&
      ((q->Value).flag == (p->Value).flag)) && ((q->Str).len == (p->Str).len)) {
    runtime_memequal();
  }
  return;
}



void encoding_json_appendString_go_shape_string_
               (__uint8 dst,_param0 src,bool escapeHTML,__uint8 ~r0)

{
  byte bVar1;
  uint8 uVar2;
  uint8 uVar3;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  runtime_slice ~r0_03;
  runtime_slice ~r0_04;
  runtime_slice ~r0_05;
  runtime_slice ~r0_06;
  runtime_slice ~r0_07;
  runtime_slice ~r0_08;
  runtime_slice ~r0_09;
  runtime_slice ~r0_10;
  runtime_slice ~r0_11;
  runtime_slice ~r0_12;
  dword extraout_EAX;
  int32 c;
  void *extraout_RAX;
  size_t sVar4;
  void *extraout_RAX_00;
  void *extraout_RAX_01;
  void *extraout_RAX_02;
  void *extraout_RAX_03;
  void *extraout_RAX_04;
  void *extraout_RAX_05;
  void *extraout_RAX_06;
  void *extraout_RAX_07;
  void *extraout_RAX_08;
  void *extraout_RAX_09;
  void *extraout_RAX_10;
  void *extraout_RAX_11;
  int in_RCX;
  uint extraout_RCX;
  int start;
  uint uVar5;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  uint extraout_RCX_02;
  uint extraout_RCX_03;
  uint extraout_RCX_04;
  uint extraout_RCX_05;
  uint extraout_RCX_06;
  uint extraout_RCX_07;
  uint extraout_RCX_08;
  uint extraout_RCX_09;
  uint extraout_RCX_10;
  void *pvVar6;
  void *in_RBX;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint newLen;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  uint extraout_RBX_03;
  uint extraout_RBX_04;
  uint extraout_RBX_05;
  int extraout_RBX_06;
  int size;
  uint extraout_RBX_07;
  uint uVar7;
  uint extraout_RBX_08;
  uint extraout_RBX_09;
  uint extraout_RBX_10;
  uint extraout_RBX_11;
  uint extraout_RBX_12;
  int in_RSI;
  uint in_RDI;
  uint in_R8;
  int size_00;
  int n;
  char in_R9B;
  uint8 b;
  uint uVar8;
  int unaff_R14;
  string in_stack_ffffffffffffff60;
  int in_stack_ffffffffffffff70;
  int i;
  void *local_20;
  void *local_18;
  void *local_10;
  
  while (&local_20 <= *(void ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  newLen = in_RCX + 1;
  local_18 = in_RBX;
  if (in_RDI < newLen) {
    ~r0_00.cap = in_stack_ffffffffffffff70;
    ~r0_00.array = in_stack_ffffffffffffff60.str;
    ~r0_00.len = in_stack_ffffffffffffff60.len;
    runtime_growslice(in_RBX,newLen,in_RDI,1,(internal_abi_Type *)&DAT_00807920,~r0_00);
    local_18 = extraout_RAX;
    in_RDI = extraout_RCX;
    newLen = extraout_RBX;
  }
  *(undefined *)((newLen - 1) + (int)local_18) = 0x22;
  uVar8 = 0;
  uVar5 = 0;
  do {
    while( true ) {
      while( true ) {
        if ((int)in_R8 <= (int)uVar8) {
          if (in_R8 < uVar5) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          sVar4 = in_R8 - uVar5;
          uVar8 = newLen + sVar4;
          pvVar6 = (void *)((uVar5 & (int)-sVar4 >> 0x3f) + in_RSI);
          if (in_RDI < uVar8) {
            ~r0_11.cap = in_stack_ffffffffffffff70;
            ~r0_11.array = in_stack_ffffffffffffff60.str;
            ~r0_11.len = in_stack_ffffffffffffff60.len;
            local_10 = pvVar6;
            runtime_growslice(local_18,uVar8,in_RDI,sVar4,(internal_abi_Type *)&DAT_00807920,~r0_11)
            ;
            uVar8 = extraout_RBX_11;
            local_18 = extraout_RAX_10;
            in_RDI = extraout_RCX_10;
            pvVar6 = local_10;
          }
          runtime_memmove((void *)((int)local_18 + newLen),pvVar6,sVar4);
          uVar8 = uVar8 + 1;
          if (in_RDI < uVar8) {
            ~r0_12.cap = in_stack_ffffffffffffff70;
            ~r0_12.array = in_stack_ffffffffffffff60.str;
            ~r0_12.len = in_stack_ffffffffffffff60.len;
            runtime_growslice(local_18,uVar8,in_RDI,1,(internal_abi_Type *)&DAT_00807920,~r0_12);
            local_18 = extraout_RAX_11;
            uVar8 = extraout_RBX_12;
          }
          *(undefined *)((uVar8 - 1) + (int)local_18) = 0x22;
          return;
        }
        if (in_R8 <= uVar8) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        bVar1 = *(byte *)(in_RSI + uVar8);
        if (bVar1 < 0x80) break;
        size_00 = in_R8 - uVar8;
        if (4 < size_00) {
          size_00 = 4;
        }
        if (in_R8 < size_00 + uVar8) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAlen();
        }
        if (size_00 + uVar8 < uVar8) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        local_20 = local_18;
        unicode_utf8_DecodeRuneInString
                  (in_stack_ffffffffffffff60,
                   (sdword)in_RSI + ((dword)(-size_00 >> 0x3f) & (dword)uVar8),size_00);
        if ((extraout_EAX == 0xfffd) && (extraout_RBX_06 == 1)) {
          if (uVar8 < uVar5) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          sVar4 = uVar8 - uVar5;
          uVar7 = newLen + sVar4;
          pvVar6 = (void *)(in_RSI + (uVar5 & (int)-sVar4 >> 0x3f));
          if (in_RDI < uVar7) {
            ~r0_07.cap = in_stack_ffffffffffffff70;
            ~r0_07.array = in_stack_ffffffffffffff60.str;
            ~r0_07.len = in_stack_ffffffffffffff60.len;
            local_10 = pvVar6;
            runtime_growslice(local_20,uVar7,in_RDI,sVar4,(internal_abi_Type *)&DAT_00807920,~r0_07)
            ;
            local_20 = extraout_RAX_06;
            uVar7 = extraout_RBX_07;
            pvVar6 = local_10;
            in_RDI = extraout_RCX_06;
          }
          local_18 = local_20;
          runtime_memmove((void *)(newLen + (int)local_20),pvVar6,sVar4);
          newLen = uVar7 + 6;
          if (in_RDI < newLen) {
            ~r0_08.cap = in_stack_ffffffffffffff70;
            ~r0_08.array = in_stack_ffffffffffffff60.str;
            ~r0_08.len = in_stack_ffffffffffffff60.len;
            runtime_growslice(local_18,newLen,in_RDI,6,(internal_abi_Type *)&DAT_00807920,~r0_08);
            local_18 = extraout_RAX_07;
            in_RDI = extraout_RCX_07;
            newLen = extraout_RBX_08;
          }
          *(undefined4 *)((int)local_18 + uVar7) = 0x6666755c;
          *(undefined2 *)((int)local_18 + uVar7 + 4) = 0x6466;
          uVar8 = uVar8 + 1;
          uVar5 = uVar8;
        }
        else if ((extraout_EAX == 0x2028) || (extraout_EAX == 0x2029)) {
          if (uVar8 < uVar5) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          sVar4 = uVar8 - uVar5;
          uVar7 = newLen + sVar4;
          pvVar6 = (void *)((uVar5 & (int)-sVar4 >> 0x3f) + in_RSI);
          if (in_RDI < uVar7) {
            ~r0_09.cap = in_stack_ffffffffffffff70;
            ~r0_09.array = in_stack_ffffffffffffff60.str;
            ~r0_09.len = in_stack_ffffffffffffff60.len;
            local_10 = pvVar6;
            runtime_growslice(local_20,uVar7,in_RDI,sVar4,(internal_abi_Type *)&DAT_00807920,~r0_09)
            ;
            pvVar6 = local_10;
            local_20 = extraout_RAX_08;
            uVar7 = extraout_RBX_09;
            in_RDI = extraout_RCX_08;
          }
          local_18 = local_20;
          runtime_memmove((void *)((int)local_20 + newLen),pvVar6,sVar4);
          if ((uint)encoding_json_hex.len <= (uint)(extraout_EAX & 0xf)) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          newLen = uVar7 + 6;
          uVar2 = encoding_json_hex.str[extraout_EAX & 0xf];
          if (in_RDI < newLen) {
            ~r0_10.cap = in_stack_ffffffffffffff70;
            ~r0_10.array = in_stack_ffffffffffffff60.str;
            ~r0_10.len = in_stack_ffffffffffffff60.len;
            runtime_growslice(local_18,newLen,in_RDI,6,(internal_abi_Type *)&DAT_00807920,~r0_10);
            local_18 = extraout_RAX_09;
            in_RDI = extraout_RCX_09;
            newLen = extraout_RBX_10;
          }
          *(undefined *)((newLen - 6) + (int)local_18) = 0x5c;
          *(undefined4 *)((newLen - 5) + (int)local_18) = 0x32303275;
          *(uint8 *)((newLen - 1) + (int)local_18) = uVar2;
          uVar8 = extraout_RBX_06 + uVar8;
          uVar5 = uVar8;
        }
        else {
          uVar8 = extraout_RBX_06 + uVar8;
          local_18 = local_20;
        }
      }
      if ((encoding_json_htmlSafeSet[bVar1] == false) &&
         ((in_R9B != '\0' || (encoding_json_safeSet[bVar1] == false)))) break;
      uVar8 = uVar8 + 1;
    }
    if (uVar8 < uVar5) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    sVar4 = uVar8 - uVar5;
    uVar7 = newLen + sVar4;
    pvVar6 = (void *)(in_RSI + (uVar5 & (int)-sVar4 >> 0x3f));
    if (in_RDI < uVar7) {
      ~r0_01.cap = in_stack_ffffffffffffff70;
      ~r0_01.array = in_stack_ffffffffffffff60.str;
      ~r0_01.len = in_stack_ffffffffffffff60.len;
      local_10 = pvVar6;
      runtime_growslice(local_18,uVar7,in_RDI,sVar4,(internal_abi_Type *)&DAT_00807920,~r0_01);
      pvVar6 = local_10;
      local_18 = extraout_RAX_00;
      in_RDI = extraout_RCX_00;
      uVar7 = extraout_RBX_00;
    }
    runtime_memmove((void *)((int)local_18 + newLen),pvVar6,sVar4);
    if (bVar1 < 0xb) {
      if (bVar1 == 9) {
        newLen = uVar7 + 2;
        if (in_RDI < newLen) {
          ~r0_02.cap = in_stack_ffffffffffffff70;
          ~r0_02.array = in_stack_ffffffffffffff60.str;
          ~r0_02.len = in_stack_ffffffffffffff60.len;
          runtime_growslice(local_18,newLen,in_RDI,2,(internal_abi_Type *)&DAT_00807920,~r0_02);
          local_18 = extraout_RAX_01;
          in_RDI = extraout_RCX_01;
          newLen = extraout_RBX_01;
        }
        *(undefined2 *)((newLen - 2) + (int)local_18) = 0x745c;
      }
      else if (bVar1 == 10) {
        newLen = uVar7 + 2;
        if (in_RDI < newLen) {
          ~r0_03.cap = in_stack_ffffffffffffff70;
          ~r0_03.array = in_stack_ffffffffffffff60.str;
          ~r0_03.len = in_stack_ffffffffffffff60.len;
          runtime_growslice(local_18,newLen,in_RDI,2,(internal_abi_Type *)&DAT_00807920,~r0_03);
          local_18 = extraout_RAX_02;
          in_RDI = extraout_RCX_02;
          newLen = extraout_RBX_02;
        }
        *(undefined2 *)((newLen - 2) + (int)local_18) = 0x6e5c;
      }
      else {
LAB_0055ed0b:
        if ((uint)encoding_json_hex.len <= (uint)(bVar1 >> 4)) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        uVar2 = encoding_json_hex.str[bVar1 >> 4];
        if ((uint)encoding_json_hex.len <= (uint)(bVar1 & 0xf)) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        newLen = uVar7 + 6;
        uVar3 = encoding_json_hex.str[bVar1 & 0xf];
        if (in_RDI < newLen) {
          ~r0_06.cap = in_stack_ffffffffffffff70;
          ~r0_06.array = in_stack_ffffffffffffff60.str;
          ~r0_06.len = in_stack_ffffffffffffff60.len;
          runtime_growslice(local_18,newLen,in_RDI,6,(internal_abi_Type *)&DAT_00807920,~r0_06);
          local_18 = extraout_RAX_05;
          in_RDI = extraout_RCX_05;
          newLen = extraout_RBX_05;
        }
        *(undefined4 *)((newLen - 6) + (int)local_18) = 0x3030755c;
        *(uint8 *)((newLen - 2) + (int)local_18) = uVar2;
        *(uint8 *)((newLen - 1) + (int)local_18) = uVar3;
      }
    }
    else if (bVar1 == 0xd) {
      newLen = uVar7 + 2;
      if (in_RDI < newLen) {
        ~r0_04.cap = in_stack_ffffffffffffff70;
        ~r0_04.array = in_stack_ffffffffffffff60.str;
        ~r0_04.len = in_stack_ffffffffffffff60.len;
        runtime_growslice(local_18,newLen,in_RDI,2,(internal_abi_Type *)&DAT_00807920,~r0_04);
        local_18 = extraout_RAX_03;
        in_RDI = extraout_RCX_03;
        newLen = extraout_RBX_03;
      }
      *(undefined2 *)((newLen - 2) + (int)local_18) = 0x725c;
    }
    else {
      if ((bVar1 != 0x22) && (bVar1 != 0x5c)) goto LAB_0055ed0b;
      newLen = uVar7 + 2;
      if (in_RDI < newLen) {
        ~r0_05.cap = in_stack_ffffffffffffff70;
        ~r0_05.array = in_stack_ffffffffffffff60.str;
        ~r0_05.len = in_stack_ffffffffffffff60.len;
        runtime_growslice(local_18,newLen,in_RDI,2,(internal_abi_Type *)&DAT_00807920,~r0_05);
        in_RDI = extraout_RCX_04;
        local_18 = extraout_RAX_04;
        newLen = extraout_RBX_04;
      }
      *(undefined *)((newLen - 2) + (int)local_18) = 0x5c;
      *(byte *)((newLen - 1) + (int)local_18) = bVar1;
    }
    uVar8 = uVar8 + 1;
    uVar5 = uVar8;
  } while( true );
}



void encoding_json_appendString_go_shape___uint8_
               (__uint8 dst,_param0 src,bool escapeHTML,__uint8 ~r0)

{
  byte bVar1;
  uint8 uVar2;
  uint8 uVar3;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  runtime_slice ~r0_03;
  runtime_slice ~r0_04;
  runtime_slice ~r0_05;
  runtime_slice ~r0_06;
  runtime_slice ~r0_07;
  runtime_slice ~r0_08;
  runtime_slice ~r0_09;
  runtime_slice ~r0_10;
  runtime_slice ~r0_11;
  runtime_slice ~r0_12;
  void *pvVar4;
  int32 r;
  dword extraout_EAX;
  int32 c;
  void *extraout_RAX;
  size_t sVar5;
  void *extraout_RAX_00;
  void *extraout_RAX_01;
  void *extraout_RAX_02;
  void *extraout_RAX_03;
  void *extraout_RAX_04;
  void *extraout_RAX_05;
  void *extraout_RAX_06;
  void *extraout_RAX_07;
  void *extraout_RAX_08;
  void *extraout_RAX_09;
  void *extraout_RAX_10;
  void *extraout_RAX_11;
  int in_RCX;
  uint extraout_RCX;
  uint uVar6;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  uint extraout_RCX_02;
  uint extraout_RCX_03;
  uint extraout_RCX_04;
  uint extraout_RCX_05;
  uint extraout_RCX_06;
  uint extraout_RCX_07;
  uint extraout_RCX_08;
  uint extraout_RCX_09;
  uint extraout_RCX_10;
  void *in_RBX;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint newLen;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  uint extraout_RBX_03;
  uint extraout_RBX_04;
  uint extraout_RBX_05;
  int size_00;
  int extraout_RBX_06;
  int size;
  uint extraout_RBX_07;
  uint uVar7;
  uint extraout_RBX_08;
  uint extraout_RBX_09;
  uint extraout_RBX_10;
  uint extraout_RBX_11;
  uint extraout_RBX_12;
  int in_RSI;
  uint in_RDI;
  uint in_R8;
  int n_00;
  int n;
  uint in_R9;
  char in_R10B;
  uint8 b;
  uint uVar8;
  int unaff_R14;
  string in_stack_ffffffffffffff50;
  int in_stack_ffffffffffffff60;
  int start;
  int i;
  uint8 local_38 [8];
  undefined local_30 [24];
  void *local_18;
  void *local_10;
  
  while (local_30 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  newLen = in_RCX + 1;
  if (in_RDI < newLen) {
    ~r0_00.cap = in_stack_ffffffffffffff60;
    ~r0_00.array = in_stack_ffffffffffffff50.str;
    ~r0_00.len = in_stack_ffffffffffffff50.len;
    runtime_growslice(in_RBX,newLen,in_RDI,1,(internal_abi_Type *)&DAT_00807920,~r0_00);
    in_RBX = extraout_RAX;
    in_RDI = extraout_RCX;
    newLen = extraout_RBX;
  }
  *(undefined *)((newLen - 1) + (int)in_RBX) = 0x22;
  uVar8 = 0;
  uVar6 = 0;
  local_18 = in_RBX;
  do {
    while( true ) {
      while( true ) {
        if ((int)in_R8 <= (int)uVar8) {
          if (in_R8 < uVar6) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          sVar5 = in_R8 - uVar6;
          uVar8 = newLen + sVar5;
          local_10 = (void *)(in_RSI + (uVar6 & (int)(uVar6 - in_R9) >> 0x3f));
          if (in_RDI < uVar8) {
            ~r0_11.cap = in_stack_ffffffffffffff60;
            ~r0_11.array = in_stack_ffffffffffffff50.str;
            ~r0_11.len = in_stack_ffffffffffffff50.len;
            runtime_growslice(local_18,uVar8,in_RDI,sVar5,(internal_abi_Type *)&DAT_00807920,~r0_11)
            ;
            uVar8 = extraout_RBX_11;
            local_18 = extraout_RAX_10;
            in_RDI = extraout_RCX_10;
          }
          pvVar4 = local_18;
          runtime_memmove((void *)((int)local_18 + newLen),local_10,sVar5);
          local_10 = pvVar4;
          uVar8 = uVar8 + 1;
          if (in_RDI < uVar8) {
            ~r0_12.cap = in_stack_ffffffffffffff60;
            ~r0_12.array = in_stack_ffffffffffffff50.str;
            ~r0_12.len = in_stack_ffffffffffffff50.len;
            runtime_growslice(local_10,uVar8,in_RDI,1,(internal_abi_Type *)&DAT_00807920,~r0_12);
            local_10 = extraout_RAX_11;
            uVar8 = extraout_RBX_12;
          }
          *(undefined *)((uVar8 - 1) + (int)local_10) = 0x22;
          return;
        }
        if (in_R8 <= uVar8) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        bVar1 = *(byte *)(in_RSI + uVar8);
        if (bVar1 < 0x80) break;
        n_00 = in_R8 - uVar8;
        if (4 < n_00) {
          n_00 = 4;
        }
        if (in_R9 < n_00 + uVar8) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAcap();
        }
        if (n_00 + uVar8 < uVar8) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        runtime_slicebytetostring
                  ((runtime_tmpBuf *)local_38,
                   (uint8 *)(in_RSI + ((int)(uVar8 - in_R9) >> 0x3f & uVar8)),n_00,
                   in_stack_ffffffffffffff50);
        unicode_utf8_DecodeRuneInString(in_stack_ffffffffffffff50,r,size_00);
        if ((extraout_EAX == 0xfffd) && (extraout_RBX_06 == 1)) {
          if (uVar8 < uVar6) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          sVar5 = uVar8 - uVar6;
          uVar7 = newLen + sVar5;
          local_10 = (void *)((uVar6 & (int)(uVar6 - in_R9) >> 0x3f) + in_RSI);
          if (in_RDI < uVar7) {
            ~r0_07.cap = in_stack_ffffffffffffff60;
            ~r0_07.array = in_stack_ffffffffffffff50.str;
            ~r0_07.len = in_stack_ffffffffffffff50.len;
            runtime_growslice(local_18,uVar7,in_RDI,sVar5,(internal_abi_Type *)&DAT_00807920,~r0_07)
            ;
            local_18 = extraout_RAX_06;
            uVar7 = extraout_RBX_07;
            in_RDI = extraout_RCX_06;
          }
          pvVar4 = local_18;
          runtime_memmove((void *)(newLen + (int)local_18),local_10,sVar5);
          local_10 = pvVar4;
          newLen = uVar7 + 6;
          if (in_RDI < newLen) {
            ~r0_08.cap = in_stack_ffffffffffffff60;
            ~r0_08.array = in_stack_ffffffffffffff50.str;
            ~r0_08.len = in_stack_ffffffffffffff50.len;
            runtime_growslice(local_10,newLen,in_RDI,6,(internal_abi_Type *)&DAT_00807920,~r0_08);
            local_10 = extraout_RAX_07;
            in_RDI = extraout_RCX_07;
            newLen = extraout_RBX_08;
          }
          *(undefined4 *)((int)local_10 + uVar7) = 0x6666755c;
          *(undefined2 *)((int)local_10 + uVar7 + 4) = 0x6466;
          uVar8 = uVar8 + 1;
          uVar6 = uVar8;
          local_18 = local_10;
        }
        else if ((extraout_EAX == 0x2028) || (extraout_EAX == 0x2029)) {
          if (uVar8 < uVar6) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          sVar5 = uVar8 - uVar6;
          uVar7 = newLen + sVar5;
          local_10 = (void *)((uVar6 & (int)(uVar6 - in_R9) >> 0x3f) + in_RSI);
          if (in_RDI < uVar7) {
            ~r0_09.cap = in_stack_ffffffffffffff60;
            ~r0_09.array = in_stack_ffffffffffffff50.str;
            ~r0_09.len = in_stack_ffffffffffffff50.len;
            runtime_growslice(local_18,uVar7,in_RDI,sVar5,(internal_abi_Type *)&DAT_00807920,~r0_09)
            ;
            local_18 = extraout_RAX_08;
            uVar7 = extraout_RBX_09;
            in_RDI = extraout_RCX_08;
          }
          pvVar4 = local_18;
          runtime_memmove((void *)((int)local_18 + newLen),local_10,sVar5);
          local_10 = pvVar4;
          if ((uint)encoding_json_hex.len <= (uint)(extraout_EAX & 0xf)) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          newLen = uVar7 + 6;
          uVar2 = encoding_json_hex.str[extraout_EAX & 0xf];
          if (in_RDI < newLen) {
            ~r0_10.cap = in_stack_ffffffffffffff60;
            ~r0_10.array = in_stack_ffffffffffffff50.str;
            ~r0_10.len = in_stack_ffffffffffffff50.len;
            runtime_growslice(local_10,newLen,in_RDI,6,(internal_abi_Type *)&DAT_00807920,~r0_10);
            local_10 = extraout_RAX_09;
            in_RDI = extraout_RCX_09;
            newLen = extraout_RBX_10;
          }
          *(undefined *)((newLen - 6) + (int)local_10) = 0x5c;
          *(undefined4 *)((newLen - 5) + (int)local_10) = 0x32303275;
          *(uint8 *)((newLen - 1) + (int)local_10) = uVar2;
          uVar8 = extraout_RBX_06 + uVar8;
          uVar6 = uVar8;
          local_18 = local_10;
        }
        else {
          uVar8 = extraout_RBX_06 + uVar8;
          local_18 = local_18;
        }
      }
      if ((encoding_json_htmlSafeSet[bVar1] == false) &&
         ((in_R10B != '\0' || (encoding_json_safeSet[bVar1] == false)))) break;
      uVar8 = uVar8 + 1;
    }
    if (uVar8 < uVar6) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    sVar5 = uVar8 - uVar6;
    uVar7 = newLen + sVar5;
    local_10 = (void *)((uVar6 & (int)(uVar6 - in_R9) >> 0x3f) + in_RSI);
    if (in_RDI < uVar7) {
      ~r0_01.cap = in_stack_ffffffffffffff60;
      ~r0_01.array = in_stack_ffffffffffffff50.str;
      ~r0_01.len = in_stack_ffffffffffffff50.len;
      runtime_growslice(local_18,uVar7,in_RDI,sVar5,(internal_abi_Type *)&DAT_00807920,~r0_01);
      local_18 = extraout_RAX_00;
      in_RDI = extraout_RCX_00;
      uVar7 = extraout_RBX_00;
    }
    pvVar4 = local_18;
    runtime_memmove((void *)((int)local_18 + newLen),local_10,sVar5);
    local_10 = pvVar4;
    if (bVar1 < 0xb) {
      if (bVar1 == 9) {
        newLen = uVar7 + 2;
        if (in_RDI < newLen) {
          ~r0_02.cap = in_stack_ffffffffffffff60;
          ~r0_02.array = in_stack_ffffffffffffff50.str;
          ~r0_02.len = in_stack_ffffffffffffff50.len;
          runtime_growslice(local_10,newLen,in_RDI,2,(internal_abi_Type *)&DAT_00807920,~r0_02);
          local_10 = extraout_RAX_01;
          in_RDI = extraout_RCX_01;
          newLen = extraout_RBX_01;
        }
        *(undefined2 *)((newLen - 2) + (int)local_10) = 0x745c;
      }
      else if (bVar1 == 10) {
        newLen = uVar7 + 2;
        if (in_RDI < newLen) {
          ~r0_03.cap = in_stack_ffffffffffffff60;
          ~r0_03.array = in_stack_ffffffffffffff50.str;
          ~r0_03.len = in_stack_ffffffffffffff50.len;
          runtime_growslice(local_10,newLen,in_RDI,2,(internal_abi_Type *)&DAT_00807920,~r0_03);
          local_10 = extraout_RAX_02;
          in_RDI = extraout_RCX_02;
          newLen = extraout_RBX_02;
        }
        *(undefined2 *)((newLen - 2) + (int)local_10) = 0x6e5c;
      }
      else {
LAB_0055f5b4:
        if ((uint)encoding_json_hex.len <= (uint)(bVar1 >> 4)) {
                    // WARNING: Subroutine does not return
