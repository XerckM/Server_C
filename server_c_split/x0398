  vendor_golang_org_x_net_dns_dnsmessage_Parser p;
  
  while (local_2f0 + 0x38 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_168 = 0;
  net_acquireThread();
  local_218.fn = (func__ **)&PTR_net_releaseThread_008eb168;
  runtime_deferprocStack(&local_218);
  if ((sdword)p0 != 0) {
    runtime_deferreturn();
    return;
  }
  net__cgo_cmalloc(p0,r1);
  local_1c8 = CONCAT44(in_stack_fffffffffffffcd4,in_stack_fffffffffffffcd0);
  local_178._8_8_ = local_1c8;
  local_178._0_8_ = net_cgoResSearch_func2;
  local_260.fn = (func__ **)local_178;
  runtime_deferprocStack(&local_260);
  if (extraout_EAX != 0) {
    runtime_deferreturn();
    return;
  }
  local_188._8_8_ = local_1c8;
  local_188._0_8_ = net_cgoResSearch_func3;
  local_2a8.fn = (func__ **)local_188;
  runtime_deferprocStack(&local_2a8);
  if ((sdword)p0_00 != 0) {
    runtime_deferreturn();
    return;
  }
  uVar8 = 0x4d0;
  net__cgo_cmalloc(p0_00,r1_00);
  uVar3 = 0;
  uVar4 = 0;
  uVar5 = 0;
  uVar6 = 0;
  local_1d0 = (void *)CONCAT44(in_stack_fffffffffffffcd4,in_stack_fffffffffffffcd0);
  local_198._8_8_ = local_1d0;
  local_198._0_8_ = net_cgoResSearch_func4;
  local_2f0._24_8_ = local_198;
  runtime_deferprocStack((runtime__defer *)local_2f0);
  if (extraout_EAX_00 != 0) {
    runtime_deferreturn();
    return;
  }
  s_00.len._0_4_ = in_stack_fffffffffffffcd0;
  s_00.str = (uint8 *)uVar8;
  s_00.len._4_4_ = in_stack_fffffffffffffcd4;
  ~r0_02.len._0_4_ = in_stack_fffffffffffffce0;
  ~r0_02.array = (uint8 *)in_stack_fffffffffffffcd8;
  ~r0_02.len._4_4_ = in_stack_fffffffffffffce4;
  ~r0_02.cap._0_4_ = in_stack_fffffffffffffce8;
  ~r0_02.cap._4_2_ = in_stack_fffffffffffffcec;
  ~r0_02.cap._6_2_ = in_stack_fffffffffffffcee;
  syscall_ByteSliceFromString(s_00,~r0_02,in_stack_fffffffffffffcf0);
  if (extraout_RDI == 0) {
    if (extraout_RBX == 0) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    local_1a8._0_8_ = 0;
    local_1a8._8_8_ = 0;
    local_1c0 = extraout_RAX;
  }
  else {
    local_1c0 = (uint8 *)0x0;
    local_1a8._8_8_ = extraout_RSI;
    local_1a8._0_8_ = extraout_RDI;
  }
  if (local_1a8._0_8_ != 0) {
    local_168 = 0;
    local_160._4_4_ = uVar4;
    local_160._0_4_ = uVar3;
    local_160._8_4_ = uVar5;
    local_160._12_4_ = uVar6;
    runtime_deferreturn();
    return;
  }
  p3 = (net__Ctype_uchar *)0x0;
  iVar2 = 0x4d0;
  r1_02 = extraout_R8D;
  while( true ) {
    uVar3 = (undefined4)iVar2;
    r2.data._0_4_ = in_EDI;
    r2.tab = (runtime_itab *)local_1c0;
    r2.data._4_4_ = in_ECX;
    puVar9 = local_1c0;
    nVar10 = in_EDI;
    nVar11 = in_ECX;
    local_1b8 = local_1d0;
    net__C2func_res_search
              ((net__Ctype_char *)local_1c0,in_EDI,(net__Ctype_int)local_1d0,p3,in_ECX,r1_02,r2);
    uVar4 = 0;
    uVar5 = 0;
    uVar6 = 0;
    uVar7 = 0;
    iVar1 = (int)in_stack_fffffffffffffce8;
    if (0xfffe < iVar1 - 1U) {
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_04);
      extraout_RAX_01[1] = 0x13;
      *extraout_RAX_01 = &DAT_008b8186;
      local_168 = 0;
      local_160._4_4_ = uVar5;
      local_160._0_4_ = uVar4;
      local_160._8_4_ = uVar6;
      local_160._12_4_ = uVar7;
      local_1a8._8_8_ = extraout_RAX_01;
      local_1a8._0_8_ = go_itab__errors_errorString_error;
      runtime_deferreturn();
      return;
    }
    if (iVar1 <= iVar2) break;
    net_cgoResSearch__C_free_func1(local_1b8);
    net__cgo_cmalloc(p0_01,r1_01);
    local_1d0 = (void *)CONCAT44(nVar11,nVar10);
    iVar2 = iVar1;
    p3 = extraout_RDI_00;
    r1_02 = extraout_R8D_00;
  }
  p.msg._0_16_ = ZEXT816(0);
  FUN_0046cd5d();
  if ((uint)-(int)local_1b8 < extraout_RCX) {
    if (local_1b8 == (void *)0x0) {
                    // WARNING: Subroutine does not return
      runtime_panicunsafeslicenilptr();
    }
                    // WARNING: Subroutine does not return
    runtime_panicunsafeslicelen();
  }
  msg.len._0_4_ = nVar10;
  msg.array = puVar9;
  msg.len._4_4_ = nVar11;
  msg.cap = (int)local_1d0;
  ~r0_03.OpCode = (short)in_stack_fffffffffffffce4;
  ~r0_03.Authoritative = (bool)(char)((dword)in_stack_fffffffffffffce4 >> 0x10);
  ~r0_03.Truncated = (bool)(char)((dword)in_stack_fffffffffffffce4 >> 0x18);
  ~r0_03.ID = (short)uVar3;
  ~r0_03.Response = (bool)(char)((dword)uVar3 >> 0x10);
  ~r0_03._3_1_ = (char)((dword)uVar3 >> 0x18);
  ~r0_03.RecursionDesired = (bool)(char)in_stack_fffffffffffffce8;
  ~r0_03.RecursionAvailable = (bool)(char)((dword)in_stack_fffffffffffffce8 >> 8);
  ~r0_03.AuthenticData = (bool)(char)((dword)in_stack_fffffffffffffce8 >> 0x10);
  ~r0_03.CheckingDisabled = (bool)(char)((dword)in_stack_fffffffffffffce8 >> 0x18);
  ~r0_03.RCode = in_stack_fffffffffffffcec;
  vendor_golang_org_x_net_dns_dnsmessage___Parser__Start(&p,msg,~r0_03,in_stack_fffffffffffffcf0);
  pvVar12 = local_1d0;
  if (extraout_RAX_00 != 0) {
    local_168 = 0;
    local_160._4_4_ = uVar5;
    local_160._0_4_ = uVar4;
    local_160._8_4_ = uVar6;
    local_160._12_4_ = uVar7;
    runtime_deferreturn();
    return;
  }
  do {
    ~r0_00.data._0_4_ = nVar10;
    ~r0_00.tab = (runtime_itab *)puVar9;
    ~r0_00.data._4_4_ = nVar11;
    vendor_golang_org_x_net_dns_dnsmessage___Parser__SkipQuestion(&p,~r0_00);
    local_1b0 = tab;
    if ((vendor_golang_org_x_net_dns_dnsmessage_ErrSectionDone.tab == tab) &&
       (runtime_ifaceeq(tab,x,vendor_golang_org_x_net_dns_dnsmessage_ErrSectionDone.data,~r0_05),
       extraout_AL != '\0')) break;
  } while (local_1b0 == (runtime_itab *)0x0);
  ~r0_01.len._0_4_ = nVar10;
  ~r0_01.array = (vendor_golang_org_x_net_dns_dnsmessage_Resource *)puVar9;
  ~r0_01.len._4_4_ = nVar11;
  ~r0_01.cap = (int)pvVar12;
  ~r1_00.tab._4_4_ = in_stack_fffffffffffffce4;
  ~r1_00.tab._0_4_ = uVar3;
  ~r1_00.data._0_4_ = in_stack_fffffffffffffce8;
  ~r1_00.data._4_2_ = in_stack_fffffffffffffcec;
  ~r1_00.data._6_2_ = in_stack_fffffffffffffcee;
  vendor_golang_org_x_net_dns_dnsmessage___Parser__AllAnswers(&p,~r0_01,~r1_00);
  if (extraout_RDI_01 == 0) {
    local_1a8._4_4_ = uVar5;
    local_1a8._0_4_ = uVar4;
    local_1a8._8_4_ = uVar6;
    local_1a8._12_4_ = uVar7;
    runtime_deferreturn();
    return;
  }
  local_168 = 0;
  local_160._4_4_ = uVar5;
  local_160._0_4_ = uVar4;
  local_160._8_4_ = uVar6;
  local_160._12_4_ = uVar7;
  runtime_deferreturn();
  return;
}



// WARNING: Unknown calling convention

void net_cgoResSearch__C_free_func1(void *p)

{
  interface___ ptr;
  void *p0;
  uint8 *r1;
  int unaff_R14;
  internal_abi_Type *in_stack_ffffffffffffffd0;
  void *in_stack_ffffffffffffffd8;
  interface___ in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ptr.data = in_stack_ffffffffffffffd8;
  ptr._type = in_stack_ffffffffffffffd0;
  runtime_cgoCheckPointer(ptr,in_stack_ffffffffffffffe0);
  net__Cfunc_free(p0,r1);
  return;
}



// WARNING: Unknown calling convention

void net_cgoResSearch_func4(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  net__C_free(*(void **)(in_RDX + 8));
  return;
}



// WARNING: Unknown calling convention

void net_cgoResSearch_func3(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  net__C_res_nclose(*(struct___ **)(in_RDX + 8));
  return;
}



// WARNING: Unknown calling convention

void net_cgoResSearch_func2(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  net__C_free(*(void **)(in_RDX + 8));
  return;
}



// WARNING: Unknown calling convention

void net_initConfVal(void)

{
  string value;
  string ~r0;
  string ~r0_00;
  char extraout_CL;
  bool localDomainDefined;
  int in_RAX;
  short *extraout_RAX;
  int extraout_RAX_00;
  int extraout_RCX;
  int debugLevel;
  int in_RBX;
  int extraout_RBX;
  int extraout_RBX_00;
  int extraout_RBX_01;
  int extraout_RBX_02;
  int unaff_R14;
  bool bVar1;
  bool bVar2;
  bool bVar3;
  string in_stack_ffffffffffffffd0;
  undefined7 in_stack_ffffffffffffffe0;
  undefined uVar4;
  int iVar5;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RAX = extraout_RAX_00;
    in_RBX = extraout_RBX_02;
  }
  uVar4 = 0;
  net_goDebugNetDNS(in_stack_ffffffffffffffd0,in_RAX,in_RBX);
  if (extraout_RBX == 2) {
    bVar1 = *extraout_RAX == 0x6f67;
  }
  else {
    bVar1 = false;
  }
  net_confVal->netGo = bVar1;
  if ((extraout_RBX == 3) && (*extraout_RAX == 0x6763)) {
    bVar1 = *(char *)(extraout_RAX + 1) == 'o';
  }
  else {
    bVar1 = false;
  }
  net_confVal->netCgo = bVar1;
  net_confVal->dnsDebugLevel = extraout_RCX;
  iVar5 = net_confVal->dnsDebugLevel;
  if (0 < iVar5) {
    uVar4 = 1;
  }
  net_confVal->preferCgo = false;
  value.str._7_1_ = uVar4;
  value.str._0_7_ = in_stack_ffffffffffffffe0;
  value.len = iVar5;
  syscall_Getenv(in_stack_ffffffffffffffd0,value,true,true);
  if (extraout_CL == '\0') {
    ~r0.str._7_1_ = uVar4;
    ~r0.str._0_7_ = in_stack_ffffffffffffffe0;
    ~r0.len = iVar5;
    os_Getenv(in_stack_ffffffffffffffd0,~r0);
    if (extraout_RBX_00 == 0) {
      ~r0_00.str._7_1_ = uVar4;
      ~r0_00.str._0_7_ = in_stack_ffffffffffffffe0;
      ~r0_00.len = iVar5;
      os_Getenv(in_stack_ffffffffffffffd0,~r0_00);
      bVar3 = extraout_RBX_01 != 0;
      bVar1 = iVar5 < 0;
      bVar2 = iVar5 == 0;
    }
    else {
      bVar1 = iVar5 < 0;
      bVar2 = iVar5 == 0;
      bVar3 = true;
    }
  }
  else {
    bVar1 = iVar5 < 0;
    bVar2 = iVar5 == 0;
    bVar3 = true;
  }
  if (bVar3) {
    net_confVal->preferCgo = true;
    if (!bVar2 && !bVar1) {
      net_initConfVal_func1();
    }
    return;
  }
  if (!bVar2 && !bVar1) {
    net_initConfVal_func1();
  }
  return;
}



// DWARF original prototype: void net.(*conf).addrLookupOrder(net.conf * c, net.Resolver * r, string
// addr, net.hostLookupOrder ret, net.hostLookupOrder ret, net.dnsConfig * dnsConf)

void net___conf__addrLookupOrder
               (net_conf *c,net_Resolver *r,string addr,net_hostLookupOrder ret,
               net_hostLookupOrder ret_1,net_dnsConfig *dnsConf)

{
  int iVar1;
  int unaff_R14;
  code **in_XMM15_Qa;
  net_hostLookupOrder nStack0000000000000018;
  string in_stack_ffffffffffffff98;
  undefined8 local_40;
  net_dnsConfig *dnsConf_local;
  code *local_30;
  undefined local_28 [16];
  undefined8 *local_18;
  code **local_10;
  
  nStack0000000000000018 = ret;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_40 = 0;
  dnsConf_local = (net_dnsConfig *)0x0;
  iVar1 = c->dnsDebugLevel;
  local_10 = in_XMM15_Qa;
  if (1 < iVar1) {
    local_30 = net___conf__addrLookupOrder_func1;
    local_28._8_8_ = ret_1;
    local_28._0_8_ = nStack0000000000000018;
    local_18 = &local_40;
    local_10 = &local_30;
  }
  net___conf__lookupOrder(c,r,in_stack_ffffffffffffff98,0,(net_dnsConfig *)0x0);
  if (1 < iVar1) {
    (**local_10)();
  }
  return;
}



// WARNING: Unknown calling convention

void net___conf__addrLookupOrder_func1(void)

{
  uint64 key;
  string ~r0;
  undefined8 *extraout_RAX;
  undefined8 extraout_RAX_00;
  int in_RDX;
  char extraout_BL;
  bool ok;
  net_hostLookupOrder *_ret;
  void *in_RDI;
  void *extraout_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffff78;
  string in_stack_ffffffffffffff88;
  string in_stack_ffffffffffffff98;
  uint8 *in_stack_ffffffffffffffa8;
  int in_stack_ffffffffffffffb0;
  uint8 local_38 [32];
  undefined8 local_18;
  undefined8 local_10;
  
  while (&stack0xfffffffffffffff8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
    in_RDI = extraout_RDI;
  }
  key = **(uint64 **)(in_RDX + 0x18);
  local_10 = *(undefined8 *)(in_RDX + 8);
  runtime_mapaccess2_fast64
            ((internal_abi_MapType *)&DAT_0082c6e0,(runtime_hmap *)net_lookupOrderName,key,in_RDI,
             SUB81(local_10,0));
  if (extraout_BL == '\0') {
    internal_itoa_Itoa(key,in_stack_ffffffffffffff78);
    ~r0.len = in_stack_ffffffffffffffb0;
    ~r0.str = in_stack_ffffffffffffffa8;
    runtime_concatstring3
              (&local_38,in_stack_ffffffffffffff78,in_stack_ffffffffffffff88,
               in_stack_ffffffffffffff98,~r0);
    local_18 = extraout_RAX_00;
  }
  else {
    local_18 = *extraout_RAX;
  }
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff78);
  runtime_printstring(in_stack_ffffffffffffff78);
  runtime_printstring(in_stack_ffffffffffffff78);
  runtime_printstring(in_stack_ffffffffffffff78);
  runtime_printnl();
  runtime_printunlock();
  return;
}



// DWARF original prototype: void net.(*conf).hostLookupOrder(net.conf * c, net.Resolver * r, string
// hostname, net.hostLookupOrder ret, net.hostLookupOrder ret, net.dnsConfig * dnsConf)

void net___conf__hostLookupOrder
               (net_conf *c,net_Resolver *r,string hostname,net_hostLookupOrder ret,
               net_hostLookupOrder ret_1,net_dnsConfig *dnsConf)

{
  int unaff_R14;
  code **in_XMM15_Qa;
  net_hostLookupOrder nStack0000000000000018;
  string in_stack_ffffffffffffff90;
  undefined8 local_48;
  int local_40;
  net_dnsConfig *dnsConf_local;
  code *local_30;
  undefined local_28 [16];
  undefined8 *local_18;
  code **local_10;
  
  nStack0000000000000018 = ret;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_48 = 0;
  dnsConf_local = (net_dnsConfig *)0x0;
  local_40 = c->dnsDebugLevel;
  local_10 = in_XMM15_Qa;
  if (1 < local_40) {
    local_30 = net___conf__hostLookupOrder_func1;
    local_28._8_8_ = ret_1;
    local_28._0_8_ = nStack0000000000000018;
    local_18 = &local_48;
    local_10 = &local_30;
  }
  net___conf__lookupOrder
            (c,r,in_stack_ffffffffffffff90,nStack0000000000000018,(net_dnsConfig *)ret_1);
  if (1 < local_40) {
    (**local_10)();
  }
  return;
}



// WARNING: Unknown calling convention

void net___conf__hostLookupOrder_func1(void)

{
  uint64 key;
  string ~r0;
  undefined8 *extraout_RAX;
  undefined8 extraout_RAX_00;
  int in_RDX;
  char extraout_BL;
  bool ok;
  net_hostLookupOrder *_ret;
  void *in_RDI;
  void *extraout_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffff78;
  string in_stack_ffffffffffffff88;
  string in_stack_ffffffffffffff98;
  uint8 *in_stack_ffffffffffffffa8;
  int in_stack_ffffffffffffffb0;
  uint8 local_38 [32];
  undefined8 local_18;
  undefined8 local_10;
  
  while (&stack0xfffffffffffffff8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
    in_RDI = extraout_RDI;
  }
  key = **(uint64 **)(in_RDX + 0x18);
  local_10 = *(undefined8 *)(in_RDX + 8);
  runtime_mapaccess2_fast64
            ((internal_abi_MapType *)&DAT_0082c6e0,(runtime_hmap *)net_lookupOrderName,key,in_RDI,
             SUB81(local_10,0));
  if (extraout_BL == '\0') {
    internal_itoa_Itoa(key,in_stack_ffffffffffffff78);
    ~r0.len = in_stack_ffffffffffffffb0;
    ~r0.str = in_stack_ffffffffffffffa8;
    runtime_concatstring3
              (&local_38,in_stack_ffffffffffffff78,in_stack_ffffffffffffff88,
               in_stack_ffffffffffffff98,~r0);
    local_18 = extraout_RAX_00;
  }
  else {
    local_18 = *extraout_RAX;
  }
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff78);
  runtime_printstring(in_stack_ffffffffffffff78);
  runtime_printstring(in_stack_ffffffffffffff78);
  runtime_printstring(in_stack_ffffffffffffff78);
  runtime_printnl();
  runtime_printunlock();
  return;
}



// WARNING: Variable defined which should be unmapped: hasDNSSourceChecked

void net___conf__lookupOrder
               (net_conf *c,net_Resolver *r,string hostname,net_hostLookupOrder ret,
               net_dnsConfig *dnsConf)

{
  int iVar1;
  sdword *psVar2;
  sdword **ppsVar3;
  void *pvVar4;
  int *piVar5;
  string name;
  error err;
  error err_00;
  error err_01;
  string s;
  string ky;
  error err_02;
  string h;
  string name_00;
  error err_03;
  error target;
  error target_00;
  error target_01;
  string suffix;
  error target_02;
  io_fs_FileInfo ~r0;
  error target_03;
  error ~r1;
  int *piVar6;
  int *piVar7;
  int *piVar8;
  byte extraout_AL;
  char extraout_AL_05;
  byte bVar9;
  char extraout_AL_00;
  char extraout_AL_01;
  net_nssConf *~r0_00;
  net_nssConf *extraout_RAX;
  net_nssConf *extraout_RAX_00;
  int extraout_RAX_01;
  net_nssConf *nss;
  char extraout_AL_02;
  undefined8 *extraout_RAX_02;
  int i;
  char extraout_AL_03;
  char extraout_AL_04;
  int i_2;
  int extraout_RAX_03;
  int i_3;
  int *piVar10;
  int extraout_RCX;
  int *piVar11;
  int extraout_RCX_00;
  int i_4;
  bool haveMDNSAllow;
  net_hostLookupOrder fallbackOrder;
  bool canUseCgo;
  short **ppsVar12;
  int *piVar13;
  char cVar14;
  error *extraout_RBX;
  net_dnsConfig *extraout_RBX_00;
  int iVar15;
  uint8 uVar16;
  int **ppiVar17;
  int i_1;
  uint8 uVar18;
  net_dnsConfig *pnVar19;
  char cVar20;
  int *piVar21;
  char cVar22;
  int unaff_R14;
  char cVar23;
  bool bVar24;
  runtime_itab *prStack0000000000000018;
  net_dnsConfig *pnStack0000000000000020;
  runtime_itab *in_stack_fffffffffffffe80;
  net_dnsConfig *in_stack_fffffffffffffe88;
  undefined in_stack_fffffffffffffe90;
  undefined7 in_stack_fffffffffffffe91;
  void *in_stack_fffffffffffffe98;
  undefined3 uStack_160;
  bool hasDNSSourceChecked;
  bool hasDNSSource;
  bool filesSource;
  bool dnsSource;
  int local_148;
  int **local_100;
  int local_f8;
  int *local_f0;
  int *local_e8;
  int **local_e0;
  void *local_d8;
  net_nssSource v;
  net_nssSource src;
  net_nssCriterion crit;
  char local_30;
  
  prStack0000000000000018 = (runtime_itab *)ret;
  pnStack0000000000000020 = dnsConf;
  while (&local_100 <= *(int ****)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((c->netGo == false) && ((r == (net_Resolver *)0x0 || (r->PreferGo == false)))) {
    if (c->netCgo != false) {
      return;
    }
    if (c->preferCgo != false) {
      return;
    }
    internal_bytealg_IndexByteString();
    if (in_stack_fffffffffffffe98 != (void *)0xffffffffffffffff) {
      return;
    }
    in_stack_fffffffffffffe90 = 0x25;
    in_stack_fffffffffffffe80 = prStack0000000000000018;
    in_stack_fffffffffffffe88 = pnStack0000000000000020;
    internal_bytealg_IndexByteString();
    if (in_stack_fffffffffffffe98 != (void *)0xffffffffffffffff) {
      return;
    }
    canUseCgo = true;
    in_stack_fffffffffffffe98 = (void *)0xffffffffffffffff;
  }
  else {
    canUseCgo = false;
  }
  iVar1 = (c->goos).len;
  psVar2 = (sdword *)(c->goos).str;
  if (iVar1 == 3) {
    if (*(short *)psVar2 != 0x6f69) goto code_r0x005d84a7;
    cVar20 = *(char *)((int)psVar2 + 2);
  }
  else {
    if (iVar1 == 5) {
      if ((*psVar2 == 0x6e616c70) && (*(char *)(psVar2 + 1) == '9')) {
        return;
      }
      goto code_r0x005d84a7;
    }
    if (iVar1 != 7) goto code_r0x005d84a7;
    if (((*psVar2 == 0x72646e61) && (*(short *)(psVar2 + 1) == 0x696f)) &&
       (*(char *)((int)psVar2 + 6) == 'd')) {
      return;
    }
    if ((*psVar2 != 0x646e6977) || (*(short *)(psVar2 + 1) != 0x776f)) goto code_r0x005d84a7;
    cVar20 = *(char *)((int)psVar2 + 6);
  }
  if (cVar20 == 's') {
    return;
  }
code_r0x005d84a7:
  name.len = (int)in_stack_fffffffffffffe88;
  name.str = (uint8 *)in_stack_fffffffffffffe80;
  net___resolverConfig__tryUpdate(&net_resolvConf,name);
  local_d8 = net_resolvConf.dnsConfig.v;
  if (canUseCgo == false) {
    bVar9 = 0;
  }
  else if (*(int *)((int)net_resolvConf.dnsConfig.v + 0x68) == 0) {
    bVar9 = 0;
  }
  else {
    err.data = in_stack_fffffffffffffe88;
    err.tab = in_stack_fffffffffffffe80;
    target.tab._1_7_ = in_stack_fffffffffffffe91;
    target.tab._0_1_ = in_stack_fffffffffffffe90;
    target.data = in_stack_fffffffffffffe98;
    errors_Is(err,target,SUB81(*(int *)((int)net_resolvConf.dnsConfig.v + 0x68),0));
    bVar9 = extraout_AL ^ 1;
  }
  if ((bVar9 != 0) &&
     (err_00.data = in_stack_fffffffffffffe88, err_00.tab = in_stack_fffffffffffffe80,
     target_00.tab._1_7_ = in_stack_fffffffffffffe91,
     target_00.tab._0_1_ = in_stack_fffffffffffffe90, target_00.data = in_stack_fffffffffffffe98,
     errors_Is(err_00,target_00,SUB81(*(undefined8 *)((int)local_d8 + 0x68),0)),
     extraout_AL_00 == '\0')) {
    return;
  }
  if ((canUseCgo != false) && (*(char *)((int)local_d8 + 0x49) != '\0')) {
    return;
  }
  if (((((c->goos).len == 7) && (psVar2 = (sdword *)(c->goos).str, *psVar2 == 0x6e65706f)) &&
      (*(short *)(psVar2 + 1) == 0x7362)) && (*(char *)((int)psVar2 + 6) == 'd')) {
    err_01.data = in_stack_fffffffffffffe88;
    err_01.tab = in_stack_fffffffffffffe80;
    target_01.tab._1_7_ = in_stack_fffffffffffffe91;
    target_01.tab._0_1_ = in_stack_fffffffffffffe90;
    target_01.data = in_stack_fffffffffffffe98;
    errors_Is(err_01,target_01,SUB81(*(undefined8 *)((int)local_d8 + 0x68),0));
    if (extraout_AL_01 != '\0') {
      return;
    }
    iVar1 = *(int *)((int)local_d8 + 0x58);
    if (iVar1 == 0) {
      return;
    }
    if (2 < iVar1) {
      return;
    }
    ppsVar3 = *(sdword ***)((int)local_d8 + 0x50);
    if (ppsVar3[1] == (sdword *)0x4) {
      if (**ppsVar3 == 0x646e6962) {
        if (iVar1 != 2) {
          return;
        }
        if ((ppsVar3[3] == (sdword *)0x4) && (*ppsVar3[2] == 0x656c6966)) {
          return;
        }
        return;
      }
      if (**ppsVar3 == 0x656c6966) {
        if (iVar1 != 2) {
          return;
        }
        if ((ppsVar3[3] == (sdword *)0x4) && (*ppsVar3[2] == 0x646e6962)) {
          return;
        }
        return;
      }
    }
    return;
  }
  if (pnStack0000000000000020 == (net_dnsConfig *)0x0) {
    ~r0_00 = (net_nssConf *)0x0;
  }
  else {
    runtime_memequal();
    ~r0_00 = extraout_RAX;
  }
  pnVar19 = pnStack0000000000000020;
  if (((char)~r0_00 != '\0') &&
     (pnVar19 = (net_dnsConfig *)&pnStack0000000000000020[-1].noReload,
     pnStack0000000000000020 < pnVar19)) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  if ((canUseCgo != false) &&
     (s.len = (int)in_stack_fffffffffffffe88, s.str = (uint8 *)in_stack_fffffffffffffe80,
     suffix.str._1_7_ = in_stack_fffffffffffffe91, suffix.str._0_1_ = in_stack_fffffffffffffe90,
     suffix.len = (int)in_stack_fffffffffffffe98,
     net_stringsHasSuffixFold(s,suffix,SUB81(prStack0000000000000018,0)), ~r0_00 = extraout_RAX_00,
     (char)extraout_RAX_00 != '\0')) {
    return;
  }
  net_getSystemNSS(~r0_00);
  ky.len = (int)in_stack_fffffffffffffe88;
  ky.str = (uint8 *)in_stack_fffffffffffffe80;
  local_f8 = extraout_RAX_01;
  runtime_mapaccess1_faststr
            ((internal_abi_MapType *)&DAT_0082c620,*(runtime_hmap **)(extraout_RAX_01 + 0x28),ky,
             &DAT_008aece1);
  pvVar4 = (void *)extraout_RAX_02[1];
  local_100 = (int **)*extraout_RAX_02;
  iVar1 = extraout_RAX_02[2];
  err_02.data = in_stack_fffffffffffffe88;
  err_02.tab = in_stack_fffffffffffffe80;
  target_02.tab._1_7_ = in_stack_fffffffffffffe91;
  target_02.tab._0_1_ = in_stack_fffffffffffffe90;
  target_02.data = in_stack_fffffffffffffe98;
  errors_Is(err_02,target_02,SUB81(*(undefined8 *)(local_f8 + 0x18),0));
  if ((extraout_AL_02 != '\0') || ((*(int *)(local_f8 + 0x18) == 0 && (pvVar4 == (void *)0x0)))) {
    if ((canUseCgo != false) &&
       (((((c->goos).len == 7 && (psVar2 = (sdword *)(c->goos).str, *psVar2 == 0x616c6f73)) &&
         (*(short *)(psVar2 + 1) == 0x6972)) && (*(char *)((int)psVar2 + 6) == 's')))) {
      return;
    }
    return;
  }
  if (*(int *)(local_f8 + 0x18) != 0) {
    return;
  }
  i = 0;
  cVar20 = '\0';
  local_f0 = (int *)0x0;
  filesSource = false;
  cVar22 = '\0';
  cVar23 = '\0';
  piVar11 = (int *)0x0;
  local_e0 = local_100;
  ppiVar17 = local_100;
  do {
    if ((int)pvVar4 <= i) {
      if (filesSource != false) {
        if (cVar20 != '\0') {
          if (((piVar11 == (int *)0x5) && (*(sdword *)local_f0 == 0x656c6966)) &&
             (*(char *)((int)local_f0 + 4) == 's')) {
            return;
          }
          return;
        }
        if (filesSource != false) {
          return;
        }
      }
      if (cVar20 == '\0') {
        return;
      }
      return;
    }
    _uStack_160 = CONCAT13(cVar22,uStack_160);
    piVar5 = *local_e0;
    piVar10 = local_e0[1];
    piVar21 = local_e0[1];
    piVar13 = local_e0[2];
    piVar7 = local_e0[3];
    piVar6 = local_e0[3];
    if ((((piVar21 == (int *)0x5) && (*(sdword *)piVar5 == 0x656c6966)) &&
        (*(char *)((int)piVar5 + 4) == 's')) ||
       (((piVar21 == (int *)&DAT_00000003 && (*(short *)piVar5 == 0x6e64)) &&
        (*(char *)((int)piVar5 + 2) == 's')))) {
      piVar21 = local_f0;
      if (canUseCgo != false) {
        for (local_148 = 0; local_148 < (int)piVar6; local_148 = local_148 + 1) {
          piVar8 = (int *)piVar13[1];
          local_30 = (char)*piVar13;
          if (local_30 == '\0') {
            if (piVar13[2] == 7) {
              if ((*(sdword *)piVar8 != 0x63637573) ||
                 ((*(short *)((int)piVar8 + 4) != 0x7365 || (*(char *)((int)piVar8 + 6) != 's')))) {
                if ((*(sdword *)piVar8 == 0x76616e75) &&
                   ((*(short *)((int)piVar8 + 4) == 0x6961 && (*(char *)((int)piVar8 + 6) == 'l'))))
                goto LAB_005d9094;
LAB_005d9159:
                cVar14 = '\0';
                goto LAB_005d9161;
              }
              iVar15 = 6;
            }
            else {
              if ((piVar13[2] != 8) ||
                 ((*piVar8 != 0x646e756f66746f6e &&
                  (piVar21 = local_f0, *piVar8 != 0x6e69616761797274)))) goto LAB_005d9159;
LAB_005d9094:
              iVar15 = 8;
            }
            if ((((local_148 == (int)piVar7 + -1) && (piVar13[4] == 6)) &&
                (*(sdword *)piVar13[3] == 0x75746572)) &&
               (*(short *)((sdword *)piVar13[3] + 1) == 0x6e72)) {
              cVar14 = '\x01';
            }
            else if (piVar13[4] == iVar15) {
              local_e8 = piVar13;
              runtime_memequal();
              piVar13 = local_e8;
              piVar21 = local_f0;
              cVar14 = extraout_AL_05;
            }
            else {
              cVar14 = '\0';
            }
          }
          else {
            cVar14 = '\0';
          }
LAB_005d9161:
          if (cVar14 == '\0') break;
          piVar13 = piVar13 + 5;
        }
        ppiVar17 = local_100;
        if (local_148 < (int)piVar6) {
          return;
        }
      }
      if (((piVar10 == (int *)0x5) && (*(sdword *)piVar5 == 0x656c6966)) &&
         (*(char *)((int)piVar5 + 4) == 's')) {
        filesSource = true;
      }
      else {
        cVar22 = '\x01';
        cVar23 = '\x01';
        cVar20 = '\x01';
      }
      local_f0 = piVar5;
      if (piVar11 != (int *)0x0) {
        piVar10 = piVar11;
        local_f0 = piVar21;
      }
    }
    else if (canUseCgo == false) {
      if (cVar22 == '\0') {
        ppsVar12 = (short **)((i * 0x28 + 0x28U & -((iVar1 - i) + -1) >> 0x3f) + (int)ppiVar17);
        for (iVar15 = 0; iVar15 < (int)pvVar4 + (-1 - i); iVar15 = iVar15 + 1) {
          v.source.str = (uint8 *)*ppsVar12;
          v.source.len._0_4_ = *(undefined4 *)(ppsVar12 + 1);
          v.source.len._4_4_ = *(undefined4 *)((int)ppsVar12 + 0xc);
          v.criteria.array._0_4_ = *(undefined4 *)(ppsVar12 + 2);
          v.criteria.array._4_4_ = *(undefined4 *)((int)ppsVar12 + 0x14);
          v.criteria.len._0_4_ = *(undefined4 *)(ppsVar12 + 3);
          v.criteria.len._4_4_ = *(undefined4 *)((int)ppsVar12 + 0x1c);
          v.criteria.cap._0_4_ = *(undefined4 *)(ppsVar12 + 4);
          v.criteria.cap._4_4_ = *(undefined4 *)((int)ppsVar12 + 0x24);
          if (((ppsVar12[1] == (short *)&DAT_00000003) && (*(short *)v.source.str == 0x6e64)) &&
             (*(char *)((int)v.source.str + 2) == 's')) {
            cVar23 = '\x01';
            ppiVar17 = local_100;
            break;
          }
          ppsVar12 = ppsVar12 + 5;
          ppiVar17 = local_100;
        }
      }
      if (cVar23 == '\0') {
        if (piVar11 == (int *)0x0) {
