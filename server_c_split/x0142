        else {
          if (uVar4 < (uint)i) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          iVar6 = uVar4 - i;
          pcVar3 = (char *)(offset + (i & -iVar6 >> 0x3f));
          bVar2 = true;
        }
        goto LAB_0048c78d;
      }
      iVar6 = (int)r + iVar6 * 10 + -0x30;
      i = iVar5;
    } while (iVar6 < 0xa9);
    bVar2 = false;
    iVar6 = 0;
    pcVar3 = (char *)0x0;
  }
LAB_0048c78d:
  if (!bVar2) {
    return;
  }
  if ((iVar6 == 0) || (*pcVar3 != ':')) {
    return;
  }
  uVar4 = iVar6 - 1;
  pcVar3 = pcVar3 + ((dword)((int)-uVar4 >> 0x3f) & 1);
  if (iVar6 == 1) {
    bVar2 = false;
    iVar6 = 0;
    pcVar3 = (char *)0x0;
  }
  else {
    iVar5 = 0;
    i_1 = 0;
    local_18 = pcVar3;
    do {
      if ((int)uVar4 <= i_1) {
        if (iVar5 < 0) {
          bVar2 = false;
          iVar6 = 0;
          pcVar3 = (char *)0x0;
        }
        else {
          bVar2 = true;
          iVar6 = 0;
          pcVar3 = (char *)0x0;
        }
        goto LAB_0048c910;
      }
      r_1 = (int32)(byte)pcVar3[i_1];
      if ((byte)pcVar3[i_1] < 0x80) {
        iVar7 = i_1 + 1;
      }
      else {
        runtime_decoderune(in_stack_ffffffffffffff68,(int)pcVar3,(int32)uVar4,i_1);
        pcVar3 = local_18;
        iVar7 = extraout_RBX_00;
        r_1 = extraout_EAX_00;
      }
      if (9 < (dword)(r_1 - 0x30U)) {
        if ((i_1 == 0) || (iVar5 < 0)) {
          bVar2 = false;
          iVar6 = 0;
          pcVar3 = (char *)0x0;
        }
        else {
          if (uVar4 < (uint)i_1) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          iVar6 = (iVar6 - i_1) + -1;
          pcVar3 = pcVar3 + (i_1 & -iVar6 >> 0x3f);
          bVar2 = true;
        }
        goto LAB_0048c910;
      }
      iVar5 = (int)r_1 + iVar5 * 10 + -0x30;
      i_1 = iVar7;
    } while (iVar5 < 0x3c);
    bVar2 = false;
    iVar6 = 0;
    pcVar3 = (char *)0x0;
  }
LAB_0048c910:
  if (!bVar2) {
    return;
  }
  if ((iVar6 == 0) || (*pcVar3 != ':')) {
    return;
  }
  uVar4 = iVar6 - 1;
  if (iVar6 == 1) {
    bVar2 = false;
  }
  else {
    iVar6 = 0;
    i_2 = 0;
    do {
      if ((int)uVar4 <= i_2) {
        if (iVar6 < 0) {
          bVar2 = false;
        }
        else {
          bVar2 = true;
        }
        goto LAB_0048c9a6;
      }
      bVar1 = (pcVar3 + ((dword)((int)-uVar4 >> 0x3f) & 1))[i_2];
      r_2 = (int32)bVar1;
      if (bVar1 < 0x80) {
        iVar5 = i_2 + 1;
      }
      else {
        runtime_decoderune(in_stack_ffffffffffffff68,
                           (int)(pcVar3 + ((dword)((int)-uVar4 >> 0x3f) & 1)),(int32)uVar4,i_2);
        iVar5 = extraout_RBX_01;
        r_2 = extraout_EAX_01;
      }
      if (9 < (dword)(r_2 - 0x30U)) {
        if ((i_2 == 0) || (iVar6 < 0)) {
          bVar2 = false;
        }
        else {
          if (uVar4 < (uint)i_2) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          bVar2 = true;
        }
        goto LAB_0048c9a6;
      }
      iVar6 = (int)r_2 + iVar6 * 10 + -0x30;
      i_2 = iVar5;
    } while (iVar6 < 0x3c);
    bVar2 = false;
  }
LAB_0048c9a6:
  if (!bVar2) {
    return;
  }
  return;
}



// DWARF original prototype: void time.tzsetRule(string s, time.rule ~r0, time.rule ~r0, string ~r1,
// bool ~r2)

void time_tzsetRule(string s,time_rule ~r0,time_rule ~r0_1,string ~r1,bool ~r2)

{
  string rest;
  bool bVar1;
  bool ok;
  int32 extraout_EAX;
  int32 extraout_EAX_00;
  int32 extraout_EAX_01;
  int32 extraout_EAX_02;
  int32 extraout_EAX_03;
  undefined7 in_register_00000001;
  char *pcVar2;
  int offset;
  int i_2;
  uint uVar3;
  int jday;
  int day_1;
  int i_1;
  int i_3;
  int day;
  int i_4;
  uint uVar4;
  int i;
  int iVar5;
  uint in_RBX;
  int extraout_RBX;
  int extraout_RBX_00;
  int extraout_RBX_01;
  int week;
  int extraout_RBX_02;
  int extraout_RBX_03;
  int mon;
  char extraout_DIL;
  int32 r_2;
  int32 r_1;
  int32 r_3;
  int32 r_4;
  int32 r;
  int unaff_R14;
  undefined in_XMM15 [16];
  string in_stack_fffffffffffffee0;
  uint8 *in_stack_fffffffffffffef0;
  int in_stack_fffffffffffffef8;
  uint local_a0;
  uint local_98;
  uint local_90;
  uint local_88;
  uint local_80;
  undefined8 local_78;
  undefined4 uStack_70;
  undefined4 uStack_6c;
  undefined4 local_68;
  undefined4 uStack_64;
  undefined8 local_50;
  undefined4 uStack_48;
  undefined4 uStack_44;
  undefined4 local_40;
  undefined4 uStack_3c;
  undefined local_38 [16];
  char *local_28;
  char *local_20;
  char *local_18;
  char *local_10;
  
  pcVar2 = (char *)CONCAT71(in_register_00000001,~r2);
  while (&local_a0 <= *(uint **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_78 = in_XMM15._0_8_;
  uStack_70 = in_XMM15._0_4_;
  uStack_6c = in_XMM15._4_4_;
  local_68 = in_XMM15._8_4_;
  uStack_64 = in_XMM15._12_4_;
  if (in_RBX == 0) {
    return;
  }
  local_50 = local_78;
  uStack_48 = uStack_70;
  uStack_44 = uStack_6c;
  local_40 = local_68;
  uStack_3c = uStack_64;
  local_38 = in_XMM15;
  if (*pcVar2 == 'J') {
    uVar3 = in_RBX - 1;
    pcVar2 = pcVar2 + ((dword)((int)-uVar3 >> 0x3f) & 1);
    if (in_RBX == 1) {
      bVar1 = false;
      jday = 0;
      iVar5 = 0;
      pcVar2 = (char *)0x0;
    }
    else {
      i = 0;
      jday = 0;
      local_10 = pcVar2;
      do {
        if ((int)uVar3 <= i) {
          if (jday < 1) {
            bVar1 = false;
            jday = 0;
            iVar5 = 0;
            pcVar2 = (char *)0x0;
          }
          else {
            bVar1 = true;
            iVar5 = 0;
            pcVar2 = (char *)0x0;
          }
          goto LAB_0048d3ee;
        }
        r = (int32)(byte)pcVar2[i];
        if ((byte)pcVar2[i] < 0x80) {
          uVar4 = i;
          i = i + 1;
        }
        else {
          local_88 = i;
          runtime_decoderune(in_stack_fffffffffffffee0,(int)pcVar2,(int32)uVar3,i);
          pcVar2 = local_10;
          uVar4 = local_88;
          i = extraout_RBX_03;
          r = extraout_EAX_03;
        }
        if (9 < (dword)(r - 0x30U)) {
          if ((uVar4 == 0) || (jday < 1)) {
            bVar1 = false;
            jday = 0;
            iVar5 = 0;
            pcVar2 = (char *)0x0;
          }
          else {
            if (uVar3 < uVar4) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            iVar5 = (in_RBX - uVar4) + -1;
            pcVar2 = pcVar2 + (uVar4 & -iVar5 >> 0x3f);
            bVar1 = true;
          }
          goto LAB_0048d3ee;
        }
        jday = (int)r + jday * 10 + -0x30;
      } while (jday < 0x16e);
      bVar1 = false;
      jday = 0;
      iVar5 = 0;
      pcVar2 = (char *)0x0;
    }
LAB_0048d3ee:
    if (!bVar1) {
      return;
    }
    local_50 = 0;
    uStack_48 = (undefined4)jday;
    uStack_44 = (undefined4)((uint)jday >> 0x20);
  }
  else if (*pcVar2 == 'M') {
    uVar3 = in_RBX - 1;
    pcVar2 = pcVar2 + ((dword)((int)-uVar3 >> 0x3f) & 1);
    if (in_RBX == 1) {
      bVar1 = false;
      iVar5 = 0;
      pcVar2 = (char *)0x0;
      mon = 0;
    }
    else {
      i_1 = 0;
      mon = 0;
      local_18 = pcVar2;
      do {
        if ((int)uVar3 <= i_1) {
          if (mon < 1) {
            bVar1 = false;
            iVar5 = 0;
            pcVar2 = (char *)0x0;
            mon = 0;
          }
          else {
            bVar1 = true;
            iVar5 = 0;
            pcVar2 = (char *)0x0;
          }
          goto LAB_0048d02c;
        }
        r_1 = (int32)(byte)pcVar2[i_1];
        if ((byte)pcVar2[i_1] < 0x80) {
          uVar4 = i_1;
          i_1 = i_1 + 1;
        }
        else {
          local_90 = i_1;
          runtime_decoderune(in_stack_fffffffffffffee0,(int)pcVar2,(int32)uVar3,i_1);
          pcVar2 = local_18;
          uVar4 = local_90;
          i_1 = extraout_RBX_00;
          r_1 = extraout_EAX_00;
        }
        if (9 < (dword)(r_1 - 0x30U)) {
          if ((uVar4 == 0) || (mon < 1)) {
            bVar1 = false;
            iVar5 = 0;
            pcVar2 = (char *)0x0;
            mon = 0;
          }
          else {
            if (uVar3 < uVar4) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            iVar5 = (in_RBX - uVar4) + -1;
            pcVar2 = pcVar2 + (uVar4 & -iVar5 >> 0x3f);
            bVar1 = true;
          }
          goto LAB_0048d02c;
        }
        mon = (int)r_1 + mon * 10 + -0x30;
      } while (mon < 0xd);
      bVar1 = false;
      iVar5 = 0;
      pcVar2 = (char *)0x0;
      mon = 0;
    }
LAB_0048d02c:
    if (((!bVar1) || (iVar5 == 0)) || (*pcVar2 != '.')) {
      return;
    }
    uVar3 = iVar5 - 1;
    pcVar2 = pcVar2 + ((dword)((int)-uVar3 >> 0x3f) & 1);
    if (iVar5 == 1) {
      bVar1 = false;
      iVar5 = 0;
      pcVar2 = (char *)0x0;
      week = 0;
    }
    else {
      i_3 = 0;
      week = 0;
      local_80 = uVar3;
      local_20 = pcVar2;
      do {
        if ((int)uVar3 <= i_3) {
          if (week < 1) {
            bVar1 = false;
            iVar5 = 0;
            pcVar2 = (char *)0x0;
            week = 0;
          }
          else {
            bVar1 = true;
            iVar5 = 0;
            pcVar2 = (char *)0x0;
          }
          goto LAB_0048d1c2;
        }
        r_3 = (int32)(byte)pcVar2[i_3];
        if ((byte)pcVar2[i_3] < 0x80) {
          uVar4 = i_3;
          i_3 = i_3 + 1;
        }
        else {
          local_98 = i_3;
          runtime_decoderune(in_stack_fffffffffffffee0,(int)pcVar2,(int32)uVar3,i_3);
          pcVar2 = local_20;
          uVar3 = local_80;
          uVar4 = local_98;
          i_3 = extraout_RBX_01;
          r_3 = extraout_EAX_01;
        }
        if (9 < (dword)(r_3 - 0x30U)) {
          if ((uVar4 == 0) || (week < 1)) {
            bVar1 = false;
            iVar5 = 0;
            pcVar2 = (char *)0x0;
            week = 0;
          }
          else {
            if (uVar3 < uVar4) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            iVar5 = (iVar5 - uVar4) + -1;
            pcVar2 = pcVar2 + (uVar4 & -iVar5 >> 0x3f);
            bVar1 = true;
          }
          goto LAB_0048d1c2;
        }
        week = (int)r_3 + week * 10 + -0x30;
      } while (week < 6);
      bVar1 = false;
      iVar5 = 0;
      pcVar2 = (char *)0x0;
      week = 0;
    }
LAB_0048d1c2:
    if (((!bVar1) || (iVar5 == 0)) || (*pcVar2 != '.')) {
      return;
    }
    uVar3 = iVar5 - 1;
    pcVar2 = pcVar2 + ((dword)((int)-uVar3 >> 0x3f) & 1);
    if (iVar5 == 1) {
      bVar1 = false;
      iVar5 = 0;
      day = 0;
      pcVar2 = (char *)0x0;
    }
    else {
      i_4 = 0;
      day = 0;
      in_stack_fffffffffffffef8 = week;
      local_28 = pcVar2;
      do {
        if ((int)uVar3 <= i_4) {
          if (day < 0) {
            bVar1 = false;
            iVar5 = 0;
            day = 0;
            pcVar2 = (char *)0x0;
          }
          else {
            bVar1 = true;
            iVar5 = 0;
            pcVar2 = (char *)0x0;
          }
          goto LAB_0048d257;
        }
        r_4 = (int32)(byte)pcVar2[i_4];
        if ((byte)pcVar2[i_4] < 0x80) {
          uVar4 = i_4;
          i_4 = i_4 + 1;
        }
        else {
          week = in_stack_fffffffffffffef8;
          local_a0 = i_4;
          runtime_decoderune(in_stack_fffffffffffffee0,(int)pcVar2,(int32)uVar3,i_4);
          pcVar2 = local_28;
          uVar4 = local_a0;
          i_4 = extraout_RBX_02;
          r_4 = extraout_EAX_02;
          in_stack_fffffffffffffef8 = week;
        }
        if (9 < (dword)(r_4 - 0x30U)) {
          if ((uVar4 == 0) || (day < 0)) {
            bVar1 = false;
            iVar5 = 0;
            day = 0;
            pcVar2 = (char *)0x0;
          }
          else {
            if (uVar3 < uVar4) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            iVar5 = (iVar5 - uVar4) + -1;
            pcVar2 = pcVar2 + (uVar4 & -iVar5 >> 0x3f);
            bVar1 = true;
          }
          goto LAB_0048d257;
        }
        day = (int)r_4 + day * 10 + -0x30;
      } while (day < 7);
      bVar1 = false;
      iVar5 = 0;
      day = 0;
      pcVar2 = (char *)0x0;
    }
LAB_0048d257:
    if (!bVar1) {
      return;
    }
    local_50 = 2;
    uStack_48 = (undefined4)day;
    uStack_44 = (undefined4)((uint)day >> 0x20);
    local_40 = (undefined4)week;
    uStack_3c = (undefined4)((uint)week >> 0x20);
    local_38._0_8_ = mon;
  }
  else {
    day_1 = 0;
    i_2 = 0;
    do {
      if ((int)in_RBX <= i_2) {
        if (day_1 < 0) {
          bVar1 = false;
          iVar5 = 0;
          day_1 = 0;
          pcVar2 = (char *)0x0;
        }
        else {
          bVar1 = true;
          iVar5 = 0;
          pcVar2 = (char *)0x0;
        }
        goto LAB_0048cd6d;
      }
      r_2 = (int32)(byte)pcVar2[i_2];
      if ((byte)pcVar2[i_2] < 0x80) {
        iVar5 = i_2 + 1;
      }
      else {
        runtime_decoderune(in_stack_fffffffffffffee0,(int)pcVar2,(int32)in_RBX,i_2);
        iVar5 = extraout_RBX;
        r_2 = extraout_EAX;
      }
      if (9 < (dword)(r_2 - 0x30U)) {
        if ((i_2 == 0) || (day_1 < 0)) {
          bVar1 = false;
          iVar5 = 0;
          day_1 = 0;
          pcVar2 = (char *)0x0;
        }
        else {
          if (in_RBX < (uint)i_2) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          iVar5 = in_RBX - i_2;
          pcVar2 = pcVar2 + (i_2 & -iVar5 >> 0x3f);
          bVar1 = true;
        }
        goto LAB_0048cd6d;
      }
      day_1 = (int)r_2 + day_1 * 10 + -0x30;
      i_2 = iVar5;
    } while (day_1 < 0x16e);
    bVar1 = false;
    iVar5 = 0;
    day_1 = 0;
    pcVar2 = (char *)0x0;
LAB_0048cd6d:
    if (!bVar1) {
      return;
    }
    local_50 = 1;
    uStack_48 = (undefined4)day_1;
    uStack_44 = (undefined4)((uint)day_1 >> 0x20);
  }
  if ((iVar5 != 0) && (*pcVar2 == '/')) {
    rest.len = in_stack_fffffffffffffef8;
    rest.str = in_stack_fffffffffffffef0;
    time_tzsetOffset(in_stack_fffffffffffffee0,(int)(pcVar2 + ((dword)(-(iVar5 + -1) >> 0x3f) & 1)),
                     rest,SUB81(iVar5 + -1,0));
    if (extraout_DIL == '\0') {
      return;
    }
    return;
  }
  return;
}



// Local variable yy0:int[RAX:8] conflicts with parameter, skipped.

void time_tzruleTime(int year,time_rule r,int off,int ~r0)

{
  int i;
  int iVar1;
  int d;
  int s;
  int iVar2;
  int dow;
  uint in_RSI;
  int iVar3;
  int in_RDI;
  int iVar4;
  int yy2;
  
  if (((off != 0) && (off != 1)) && (off == 2)) {
    iVar3 = (in_RSI + (((int)(in_RSI + SUB168(SEXT816(-0x5555555555555555) *
                                              SEXT816((int)(in_RSI + 9)),8) + 9) >> 3) -
                      ((int)(in_RSI + 9) >> 0x3f)) * -0xc) * 0x1a;
    iVar1 = iVar3 + 0x102;
    iVar4 = year;
    if ((int)in_RSI < 3) {
      iVar4 = year + -1;
    }
    iVar2 = (SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar4),8) + iVar4 >> 6) - (iVar4 >> 0x3f)
    ;
    iVar4 = iVar4 + iVar2 * -100;
    iVar4 = ((int)(((uint)(iVar2 >> 0x3f) >> 0x3e) + iVar2) >> 2) +
            ((iVar3 + SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar1),8) + 0x102 >> 3) -
            (iVar1 >> 0x3f)) + iVar4 + ((int)(iVar4 + ((uint)(iVar4 >> 0x3f) >> 0x3e)) >> 2) +
            iVar2 * -2;
    iVar4 = iVar4 + ((iVar4 + 1) / 7) * -7;
    iVar1 = iVar4 + 1;
    if (iVar1 < 0) {
      iVar1 = iVar4 + 8;
    }
    iVar1 = ~r0 - iVar1;
    if (iVar1 < 0) {
      iVar1 = iVar1 + 7;
    }
    for (iVar4 = 1; iVar4 < in_RDI; iVar4 = iVar4 + 1) {
      if (((in_RSI == 2) && ((year & 3U) == 0)) &&
         ((year != ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(year),8) + year >> 6) -
                   (year >> 0x3f)) * 100 ||
          ((year * -0x70a3d70a3d70a3d7 << 0x3c |
           year * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0U >> 4) < 0xa3d70a3d70a3d7)))) {
        iVar3 = 0x1d;
      }
      else {
        if (0xc < in_RSI) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        if (0xc < in_RSI - 1) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        iVar3 = (int)(sdword)(time_daysBefore[in_RSI] - *(sdword *)(&DAT_00c0f1dc + in_RSI * 4));
      }
      iVar1 = iVar1 + 7;
      if (iVar3 <= iVar1) break;
    }
    if (0xc < in_RSI - 1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
  }
  return;
}



void time___Location__lookupName(time_Location *l,string name,int64 unix,int offset,bool ok)

{
  int iVar1;
  time_zone *offset_00;
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  time_Location *l_00;
  int offset_1;
  int i_1;
  int i;
  int extraout_RBX;
  undefined7 in_register_00000039;
  int iVar2;
  bool isDST;
  int unaff_R14;
  int iStack0000000000000018;
  int iStack0000000000000020;
  string in_stack_ffffffffffffffb0;
  
  iStack0000000000000020 = CONCAT71(in_register_00000039,ok);
  iStack0000000000000018 = offset;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  time___Location__get(l,(time_Location *)unix);
  iVar1 = (l_00->zone).len;
  i = 0;
  iVar2 = iStack0000000000000018;
  while( true ) {
    if (iVar1 <= i) {
      iVar1 = (l_00->zone).len;
      i_1 = 0;
      while( true ) {
        if (iVar1 <= i_1) {
          return;
        }
        if ((uint)(l_00->zone).len <= (uint)i_1) break;
        if ((iVar2 == (l_00->zone).array[i_1].name.len) &&
           (runtime_memequal(), iVar2 = iStack0000000000000018, extraout_AL_01 != '\0')) {
          return;
        }
        i_1 = i_1 + 1;
      }
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((uint)(l_00->zone).len <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    offset_00 = (l_00->zone).array;
    if ((((iVar2 == offset_00[i].name.len) &&
         (runtime_memequal(), iVar2 = iStack0000000000000018, extraout_AL != '\0')) &&
        (iVar2 = iStack0000000000000020 - offset_00[i].offset,
        time___Location__lookup
                  (l_00,iVar2,in_stack_ffffffffffffffb0,(int)offset_00,iVar2,offset_00[i].offset,
                   isDST), iVar2 = iStack0000000000000018, offset_00[i].name.len == extraout_RBX))
       && (runtime_memequal(), iVar2 = iStack0000000000000018, extraout_AL_00 != '\0')) break;
    i = i + 1;
  }
  return;
}



void time_fileSizeError_Error(time_fileSizeError f,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.len = unaff_RBP;
  ~r0_00.str = in_stack_fffffffffffffff0;
  runtime_concatstring3
            ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,
             in_stack_ffffffffffffffe0,~r0_00);
  return;
}



void time___dataIO__big8(time_dataIO *d,uint64 n,bool ok)

{
  int iVar1;
  time_dataIO *extraout_RAX;
  time_dataIO *extraout_RAX_00;
  time_dataIO *extraout_RAX_01;
  time_dataIO *extraout_RAX_02;
  undefined8 extraout_RCX;
  uint8 *extraout_RCX_00;
  uint8 *puVar2;
  uint uVar3;
  uint extraout_RCX_01;
  uint extraout_RCX_02;
  uint32 n1;
  uint uVar4;
  uint32 n2;
  undefined8 extraout_RSI;
  uint8 *extraout_RSI_00;
  int iVar5;
  undefined8 *extraout_R11;
  uint8 **extraout_R11_00;
  undefined8 *extraout_R11_01;
  uint8 **extraout_R11_02;
  int unaff_R14;
  undefined in_XMM15 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar1 = (d->p).len;
  if (iVar1 < 4) {
    (d->p).len = in_XMM15._0_8_;
    (d->p).cap = in_XMM15._8_8_;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = extraout_RCX;
      d = extraout_RAX;
    }
    (d->p).array = (uint8 *)0x0;
    d->error = true;
    uVar3 = 0;
  }
  else {
    iVar5 = (d->p).cap + -4;
    (d->p).len = iVar1 + -4;
    (d->p).cap = iVar5;
    puVar2 = (d->p).array + ((dword)(-iVar5 >> 0x3f) & 4);
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RCX_00;
      extraout_R11_00[1] = (extraout_RAX_00->p).array;
      d = extraout_RAX_00;
      puVar2 = extraout_RCX_00;
    }
    (d->p).array = puVar2;
    uVar3 = 4;
  }
  if (uVar3 < 4) {
    d->error = true;
  }
  iVar1 = (d->p).len;
  if (iVar1 < 4) {
    (d->p).len = in_XMM15._0_8_;
    (d->p).cap = in_XMM15._8_8_;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_01 = extraout_RSI;
      d = extraout_RAX_01;
      uVar3 = extraout_RCX_01;
    }
    (d->p).array = (uint8 *)0x0;
    d->error = true;
    uVar4 = 0;
  }
  else {
    iVar5 = (d->p).cap + -4;
    (d->p).len = iVar1 + -4;
    (d->p).cap = iVar5;
    puVar2 = (d->p).array + ((dword)(-iVar5 >> 0x3f) & 4);
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_02 = extraout_RSI_00;
      extraout_R11_02[1] = (extraout_RAX_02->p).array;
      d = extraout_RAX_02;
      uVar3 = extraout_RCX_02;
      puVar2 = extraout_RSI_00;
    }
    (d->p).array = puVar2;
    uVar4 = 4;
  }
  if (uVar4 < 4) {
    d->error = true;
  }
  if ((3 < (int)uVar3) && (3 < uVar4)) {
    return;
  }
  d->error = true;
  return;
}



void time_LoadLocationFromTZData(string name,__uint8 data,time_Location *~r0,error ~r1)

{
  uint8 uVar1;
  char cVar2;
  dword dVar3;
  runtime_slice ~r0_00;
  char extraout_AL;
  time_Location *extraout_RAX;
  int nzone;
  time_Location *extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 extraout_RAX_02;
  undefined8 uVar4;
  undefined8 extraout_RAX_03;
  time_Location *extraout_RAX_04;
  uint8 *extraout_RAX_05;
  uint64 n8;
  time_Location *extraout_RAX_06;
  time_Location **extraout_RAX_07;
  time_Location *l;
  time_Location **extraout_RAX_08;
  time_Location **extraout_RAX_09;
  time_Location **extraout_RAX_10;
  time_Location **extraout_RAX_11;
  int extraout_RAX_12;
  int64 sec;
  uint8 *extraout_RAX_13;
  time_Location *extraout_RAX_14;
  time_Location *extraout_RAX_15;
  time_Location *extraout_RAX_16;
  time_Location *ptVar5;
  sdword *in_RCX;
  int version;
  time_Location *extraout_RCX;
  time_Location *extraout_RCX_00;
  time_zone *extraout_RCX_01;
  int offset;
  time_zone *ptVar6;
  int i;
  int i_2;
  int iVar7;
  time_Location **pptVar8;
  int i_1;
  char extraout_BL;
  bool ok;
  time_Location *in_RBX;
  time_Location *extraout_RBX;
  uint uVar9;
  undefined8 extraout_RBX_00;
  undefined8 extraout_RBX_01;
  undefined8 uVar10;
  int i_3;
  void *extraout_RBX_02;
  int i_4;
  void *extraout_RBX_03;
  void *pvVar11;
  int in_RSI;
  uint uVar12;
  int iVar13;
  int skip;
  int size;
  uint uVar14;
  time_Location *extraout_RSI;
  time_Location **extraout_RSI_00;
  time_Location *extraout_RSI_01;
  int64 eend;
  time_Location *extraout_RSI_02;
  uint8 b;
  int in_RDI;
  void *extraout_RDI;
  dword *pdVar15;
  void *extraout_RDI_00;
  void *extraout_RDI_01;
  void *~r0_01;
  uint8 *puVar16;
  time_Location *extraout_RDI_02;
  int64 estart;
  bool isDST;
  uint extraout_R8;
  char extraout_R9B;
  bool ok_1;
  byte *pbVar17;
  time_Location *extraout_R9;
  int i_6;
  int zoneIdx;
  char cVar18;
  uint uVar19;
  uint8 *puVar20;
  time_Location *extraout_R10;
  time_Location *ptVar21;
  int i_5;
  undefined8 *extraout_R11;
  time_Location **extraout_R11_00;
  time_Location **extraout_R11_01;
  time_Location **extraout_R11_02;
  time_Location **extraout_R11_03;
  time_Location **extraout_R11_04;
  time_zone *ptVar22;
  time_Location **extraout_R11_05;
  uint8 **extraout_R11_06;
  time_Location **extraout_R11_07;
  uint8 *puVar23;
  int64 n;
  int unaff_R14;
  bool bVar24;
  bool bVar25;
  bool bVar26;
  undefined in_XMM15 [16];
  string in_stack_fffffffffffffe48;
  int in_stack_fffffffffffffe58;
  int local_138;
  time_Location *local_130;
  time_Location *local_128;
  time_zone *local_120;
  time_Location *local_118;
  void *local_110;
  void *local_108;
  time_Location *local_100;
  int local_f8;
  time_zone *local_f0;
  undefined local_e8 [16];
  undefined local_d8 [16];
  undefined local_c8 [16];
  uint8 *local_b8;
  uint8 *local_b0;
  uint8 *local_a8;
  uint8 *local_a0;
  time_Location *local_98;
  uint8 *local_90;
  time_Location **local_88;
