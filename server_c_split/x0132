        return;
      }
      if (val == 0x16) {
        return;
      }
    }
    runtime_convT64(val,x);
  }
  return;
}



void syscall_Listen(int s,int n,error err)

{
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(0x32,s,n,0,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return;
      }
    }
    else {
      if (val == 0xb) {
        return;
      }
      if (val == 0x16) {
        return;
      }
    }
    runtime_convT64(val,x);
  }
  return;
}



ssize_t syscall_pread(int __fd,void *__buf,size_t __nbytes,__off_t __offset)

{
  ssize_t extraout_RAX;
  uintptr r0;
  uint val;
  syscall_Errno e1;
  void *_p0;
  void *x;
  uintptr in_RSI;
  uintptr in_R10;
  uintptr extraout_R10;
  uintptr in_R11;
  uintptr extraout_R11;
  int unaff_R14;
  void *pvStack0000000000000010;
  syscall_Errno in_stack_ffffffffffffffb0;
  
  pvStack0000000000000010 = __buf;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_R10 = extraout_R10;
    in_R11 = extraout_R11;
  }
  _p0 = pvStack0000000000000010;
  if (__nbytes == 0) {
    _p0 = &syscall__zero;
  }
  syscall_Syscall6(0x11,__fd,(uintptr)_p0,__nbytes,in_RSI,0,0,in_R10,in_R11,
                   in_stack_ffffffffffffffb0);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return extraout_RAX;
      }
    }
    else {
      if (val == 0xb) {
        return extraout_RAX;
      }
      if (val == 0x16) {
        return extraout_RAX;
      }
    }
    runtime_convT64(val,x);
  }
  return extraout_RAX;
}



ssize_t syscall_pwrite(int __fd,void *__buf,size_t __n,__off_t __offset)

{
  ssize_t extraout_RAX;
  uintptr r0;
  uint val;
  syscall_Errno e1;
  void *_p0;
  void *x;
  uintptr in_RSI;
  uintptr in_R10;
  uintptr extraout_R10;
  uintptr in_R11;
  uintptr extraout_R11;
  int unaff_R14;
  void *pvStack0000000000000010;
  syscall_Errno in_stack_ffffffffffffffb0;
  
  pvStack0000000000000010 = __buf;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_R10 = extraout_R10;
    in_R11 = extraout_R11;
  }
  _p0 = pvStack0000000000000010;
  if (__n == 0) {
    _p0 = &syscall__zero;
  }
  syscall_Syscall6(0x12,__fd,(uintptr)_p0,__n,in_RSI,0,0,in_R10,in_R11,in_stack_ffffffffffffffb0);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return extraout_RAX;
      }
    }
    else {
      if (val == 0xb) {
        return extraout_RAX;
      }
      if (val == 0x16) {
        return extraout_RAX;
      }
    }
    runtime_convT64(val,x);
  }
  return extraout_RAX;
}



void syscall_Seek(int fd,int64 offset,int whence,int64 off,error err)

{
  uintptr r0;
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(8,fd,offset,whence,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return;
      }
    }
    else {
      if (val == 0xb) {
        return;
      }
      if (val == 0x16) {
        return;
      }
    }
    runtime_convT64(val,x);
  }
  return;
}



ssize_t syscall_sendfile(int __out_fd,int __in_fd,off_t *__offset,size_t __count)

{
  ssize_t extraout_RAX;
  uintptr r0;
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_R10;
  uintptr extraout_R10;
  uintptr in_R11;
  uintptr extraout_R11;
  int unaff_R14;
  syscall_Errno in_stack_ffffffffffffffb0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_R10 = extraout_R10;
    in_R11 = extraout_R11;
  }
  syscall_Syscall6(0x28,__out_fd,__in_fd,(uintptr)__offset,__count,0,0,in_R10,in_R11,
                   in_stack_ffffffffffffffb0);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return extraout_RAX;
      }
    }
    else {
      if (val == 0xb) {
        return extraout_RAX;
      }
      if (val == 0x16) {
        return extraout_RAX;
      }
    }
    runtime_convT64(val,x);
  }
  return extraout_RAX;
}



int syscall_setrlimit(__rlimit_resource_t __resource,rlimit *__rlimits)

{
  undefined4 in_register_00000004;
  uint val;
  syscall_Errno e1;
  undefined1 *puVar1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_RawSyscall(0xa0,CONCAT44(in_register_00000004,__resource),(uintptr)__rlimits,0,in_RSI,
                     in_R8,in_R9);
  if (val == 0) {
    puVar1 = (undefined1 *)0x0;
  }
  else {
    if (val < 3) {
      if (val == 2) {
        return (int)syscall_errENOENT.tab;
      }
    }
    else {
      if (val == 0xb) {
        return (int)syscall_errEAGAIN.tab;
      }
      if (val == 0x16) {
        return (int)syscall_errEINVAL.tab;
      }
    }
    runtime_convT64(val,x);
    puVar1 = go_itab_syscall_Errno_error;
  }
  return (int)puVar1;
}



void syscall_Shutdown(int fd,int how,error err)

{
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(0x30,fd,how,0,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return;
      }
    }
    else {
      if (val == 0xb) {
        return;
      }
      if (val == 0x16) {
        return;
      }
    }
    runtime_convT64(val,x);
  }
  return;
}



void syscall_Splice(int rfd,int64 *roff,int wfd,int64 *woff,int len,int flags,int64 n,error err)

{
  uintptr r0;
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_R11;
  uintptr extraout_R11;
  int unaff_R14;
  syscall_Errno in_stack_ffffffffffffffa8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_R11 = extraout_R11;
  }
  syscall_Syscall6(0x113,rfd,(uintptr)roff,wfd,(uintptr)woff,len,flags,(uintptr)woff,in_R11,
                   in_stack_ffffffffffffffa8);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return;
      }
    }
    else {
      if (val == 0xb) {
        return;
      }
      if (val == 0x16) {
        return;
      }
    }
    runtime_convT64(val,x);
  }
  return;
}



int syscall_accept4(int __fd,sockaddr *__addr,socklen_t *__addr_len,int __flags)

{
  int extraout_RAX;
  uintptr r0;
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_R10;
  uintptr extraout_R10;
  uintptr in_R11;
  uintptr extraout_R11;
  int unaff_R14;
  syscall_Errno in_stack_ffffffffffffffa8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_R10 = extraout_R10;
    in_R11 = extraout_R11;
  }
  syscall_Syscall6(0x120,__fd,(uintptr)__addr,(uintptr)__addr_len,__flags,0,0,in_R10,in_R11,
                   in_stack_ffffffffffffffa8);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return extraout_RAX;
      }
    }
    else {
      if (val == 0xb) {
        return extraout_RAX;
      }
      if (val == 0x16) {
        return extraout_RAX;
      }
    }
    runtime_convT64(val,x);
  }
  return extraout_RAX;
}



int syscall_bind(int __fd,sockaddr *__addr,socklen_t __len)

{
  uint val;
  syscall_Errno e1;
  undefined1 *puVar1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    __len = __len & 0xffffffff;
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(0x31,__fd,(uintptr)__addr,__len & 0xffffffff,in_RSI,in_R8,in_R9);
  if (val == 0) {
    puVar1 = (undefined1 *)0x0;
  }
  else {
    if (val < 3) {
      if (val == 2) {
        return (int)syscall_errENOENT.tab;
      }
    }
    else {
      if (val == 0xb) {
        return (int)syscall_errEAGAIN.tab;
      }
      if (val == 0x16) {
        return (int)syscall_errEINVAL.tab;
      }
    }
    runtime_convT64(val,x);
    puVar1 = go_itab_syscall_Errno_error;
  }
  return (int)puVar1;
}



int syscall_connect(int __fd,sockaddr *__addr,socklen_t __len)

{
  uint val;
  syscall_Errno e1;
  undefined1 *puVar1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    __len = __len & 0xffffffff;
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(0x2a,__fd,(uintptr)__addr,__len & 0xffffffff,in_RSI,in_R8,in_R9);
  if (val == 0) {
    puVar1 = (undefined1 *)0x0;
  }
  else {
    if (val < 3) {
      if (val == 2) {
        return (int)syscall_errENOENT.tab;
      }
    }
    else {
      if (val == 0xb) {
        return (int)syscall_errEAGAIN.tab;
      }
      if (val == 0x16) {
        return (int)syscall_errEINVAL.tab;
      }
    }
    runtime_convT64(val,x);
    puVar1 = go_itab_syscall_Errno_error;
  }
  return (int)puVar1;
}



int syscall_fstatat(int __fd,char *__file,stat *__buf,int __flag)

{
  string s;
  uint8 *extraout_RAX;
  uint8 *_p0;
  uint val;
  syscall_Errno e1;
  undefined1 *puVar1;
  int extraout_RBX;
  void *x;
  uintptr in_RSI;
  int extraout_RDI;
  int iVar2;
  uintptr r1;
  uintptr r2;
  int unaff_R14;
  char *pcStack0000000000000010;
  uintptr uStack0000000000000020;
  uint8 *in_stack_ffffffffffffff90;
  int in_stack_ffffffffffffff98;
  __uint8 in_stack_ffffffffffffffa0;
  error in_stack_ffffffffffffffb8;
  
  pcStack0000000000000010 = __file;
  uStack0000000000000020 = __flag;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  s.len = in_stack_ffffffffffffff98;
  s.str = in_stack_ffffffffffffff90;
  syscall_ByteSliceFromString(s,in_stack_ffffffffffffffa0,in_stack_ffffffffffffffb8);
  if (extraout_RDI == 0) {
    if (extraout_RBX == 0) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    iVar2 = 0;
    _p0 = extraout_RAX;
  }
  else {
    _p0 = (uint8 *)0x0;
    iVar2 = extraout_RDI;
  }
  if (iVar2 != 0) {
    return iVar2;
  }
  syscall_Syscall6(0x106,__fd,(uintptr)_p0,uStack0000000000000020,in_RSI,0,0,r1,r2,
                   (syscall_Errno)in_stack_ffffffffffffff90);
  if (val == 0) {
    puVar1 = (undefined1 *)0x0;
  }
  else {
    if (val < 3) {
      if (val == 2) {
        return (int)syscall_errENOENT.tab;
      }
    }
    else {
      if (val == 0xb) {
        return (int)syscall_errEAGAIN.tab;
      }
      if (val == 0x16) {
        return (int)syscall_errEINVAL.tab;
      }
    }
    runtime_convT64(val,x);
    puVar1 = go_itab_syscall_Errno_error;
  }
  return (int)puVar1;
}



int syscall_getsockopt(int __fd,int __level,int __optname,void *__optval,socklen_t *__optlen)

{
  uint val;
  syscall_Errno e1;
  undefined1 *puVar1;
  void *x;
  uintptr in_R10;
  uintptr extraout_R10;
  uintptr in_R11;
  uintptr extraout_R11;
  int unaff_R14;
  syscall_Errno in_stack_ffffffffffffffb0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_R10 = extraout_R10;
    in_R11 = extraout_R11;
  }
  syscall_Syscall6(0x37,__fd,__level,__optname,(uintptr)__optval,(uintptr)__optlen,0,in_R10,in_R11,
                   in_stack_ffffffffffffffb0);
  if (val == 0) {
    puVar1 = (undefined1 *)0x0;
  }
  else {
    if (val < 3) {
      if (val == 2) {
        return (int)syscall_errENOENT.tab;
      }
    }
    else {
      if (val == 0xb) {
        return (int)syscall_errEAGAIN.tab;
      }
      if (val == 0x16) {
        return (int)syscall_errEINVAL.tab;
      }
    }
    runtime_convT64(val,x);
    puVar1 = go_itab_syscall_Errno_error;
  }
  return (int)puVar1;
}



int syscall_setsockopt(int __fd,int __level,int __optname,void *__optval,socklen_t __optlen)

{
  uint val;
  syscall_Errno e1;
  undefined1 *puVar1;
  void *x;
  uintptr in_R10;
  uintptr extraout_R10;
  uintptr in_R11;
  uintptr extraout_R11;
  int unaff_R14;
  syscall_Errno in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_R10 = extraout_R10;
    in_R11 = extraout_R11;
  }
  syscall_Syscall6(0x36,__fd,__level,__optname,(uintptr)__optval,__optlen,0,in_R10,in_R11,
                   in_stack_ffffffffffffffb8);
  if (val == 0) {
    puVar1 = (undefined1 *)0x0;
  }
  else {
    if (val < 3) {
      if (val == 2) {
        return (int)syscall_errENOENT.tab;
      }
    }
    else {
      if (val == 0xb) {
        return (int)syscall_errEAGAIN.tab;
      }
      if (val == 0x16) {
        return (int)syscall_errEINVAL.tab;
      }
    }
    runtime_convT64(val,x);
    puVar1 = go_itab_syscall_Errno_error;
  }
  return (int)puVar1;
}



int syscall_socket(int __domain,int __type,int __protocol)

{
  int extraout_RAX;
  uintptr r0;
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_RawSyscall(0x29,__domain,__type,__protocol,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return extraout_RAX;
      }
    }
    else {
      if (val == 0xb) {
        return extraout_RAX;
      }
      if (val == 0x16) {
        return extraout_RAX;
      }
    }
    runtime_convT64(val,x);
  }
  return extraout_RAX;
}



int syscall_getpeername(int __fd,sockaddr *__addr,socklen_t *__len)

{
  uint val;
  syscall_Errno e1;
  undefined1 *puVar1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_RawSyscall(0x34,__fd,(uintptr)__addr,(uintptr)__len,in_RSI,in_R8,in_R9);
  if (val == 0) {
    puVar1 = (undefined1 *)0x0;
  }
  else {
    if (val < 3) {
      if (val == 2) {
        return (int)syscall_errENOENT.tab;
      }
    }
    else {
      if (val == 0xb) {
        return (int)syscall_errEAGAIN.tab;
      }
      if (val == 0x16) {
        return (int)syscall_errEINVAL.tab;
      }
    }
    runtime_convT64(val,x);
    puVar1 = go_itab_syscall_Errno_error;
  }
  return (int)puVar1;
}



int syscall_getsockname(int __fd,sockaddr *__addr,socklen_t *__len)

{
  uint val;
  syscall_Errno e1;
  undefined1 *puVar1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_RawSyscall(0x33,__fd,(uintptr)__addr,(uintptr)__len,in_RSI,in_R8,in_R9);
  if (val == 0) {
    puVar1 = (undefined1 *)0x0;
  }
  else {
    if (val < 3) {
      if (val == 2) {
        return (int)syscall_errENOENT.tab;
      }
    }
    else {
      if (val == 0xb) {
        return (int)syscall_errEAGAIN.tab;
      }
      if (val == 0x16) {
        return (int)syscall_errEINVAL.tab;
      }
    }
    runtime_convT64(val,x);
    puVar1 = go_itab_syscall_Errno_error;
  }
  return (int)puVar1;
}



ssize_t syscall_recvfrom(int __fd,void *__buf,size_t __n,int __flags,sockaddr *__addr,
                        socklen_t *__addr_len)

{
  ssize_t extraout_RAX;
  uintptr r0;
  uint val;
  syscall_Errno e1;
  void *_p0;
  void *x;
  uintptr in_R9;
  uintptr in_R10;
  uintptr extraout_R10;
  uintptr in_R11;
  uintptr extraout_R11;
  int unaff_R14;
  void *pvStack0000000000000010;
  syscall_Errno in_stack_ffffffffffffffa0;
  
  pvStack0000000000000010 = __buf;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_R10 = extraout_R10;
    in_R11 = extraout_R11;
  }
  _p0 = pvStack0000000000000010;
  if (__n == 0) {
    _p0 = &syscall__zero;
  }
  syscall_Syscall6(0x2d,__fd,(uintptr)_p0,__n,(uintptr)__addr,(uintptr)__addr_len,in_R9,in_R10,
                   in_R11,in_stack_ffffffffffffffa0);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return extraout_RAX;
      }
    }
    else {
      if (val == 0xb) {
        return extraout_RAX;
      }
      if (val == 0x16) {
        return extraout_RAX;
      }
    }
    runtime_convT64(val,x);
  }
  return extraout_RAX;
}



ssize_t syscall_sendto(int __fd,void *__buf,size_t __n,int __flags,sockaddr *__addr,
                      socklen_t __addr_len)

{
  uint val;
  syscall_Errno e1;
  undefined1 *puVar1;
  void *_p0;
  void *x;
  dword in_R9D;
  uintptr in_R10;
  uintptr extraout_R10;
  uintptr in_R11;
  uintptr extraout_R11;
  int unaff_R14;
  void *pvStack0000000000000010;
  syscall_Errno in_stack_ffffffffffffffb0;
  
  pvStack0000000000000010 = __buf;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_R10 = extraout_R10;
    in_R11 = extraout_R11;
  }
  _p0 = pvStack0000000000000010;
  if (__n == 0) {
    _p0 = &syscall__zero;
  }
  syscall_Syscall6(0x2c,__fd,(uintptr)_p0,__n,(uintptr)__addr,__addr_len,(uint)in_R9D,in_R10,in_R11,
                   in_stack_ffffffffffffffb0);
  if (val == 0) {
    puVar1 = (undefined1 *)0x0;
  }
  else {
    if (val < 3) {
      if (val == 2) {
        return (ssize_t)syscall_errENOENT.tab;
      }
    }
    else {
      if (val == 0xb) {
        return (ssize_t)syscall_errEAGAIN.tab;
      }
      if (val == 0x16) {
        return (ssize_t)syscall_errEINVAL.tab;
      }
    }
    runtime_convT64(val,x);
    puVar1 = go_itab_syscall_Errno_error;
  }
  return (ssize_t)puVar1;
}



ssize_t syscall_recvmsg(int __fd,msghdr *__message,int __flags)

{
  ssize_t extraout_RAX;
  uintptr r0;
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(0x2f,__fd,(uintptr)__message,__flags,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return extraout_RAX;
      }
    }
    else {
      if (val == 0xb) {
        return extraout_RAX;
      }
      if (val == 0x16) {
        return extraout_RAX;
      }
    }
    runtime_convT64(val,x);
  }
  return extraout_RAX;
}



ssize_t syscall_sendmsg(int __fd,msghdr *__message,int __flags)

{
  ssize_t extraout_RAX;
  uintptr r0;
  uint val;
  syscall_Errno e1;
  void *x;
  uintptr in_RSI;
  uintptr extraout_RSI;
  uintptr in_R8;
  uintptr extraout_R8;
  syscall_Errno in_R9;
  syscall_Errno extraout_R9;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = extraout_RSI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
  }
  syscall_Syscall(0x2e,__fd,(uintptr)__message,__flags,in_RSI,in_R8,in_R9);
  if (val != 0) {
    if (val < 3) {
      if (val == 2) {
        return extraout_RAX;
      }
    }
    else {
      if (val == 0xb) {
        return extraout_RAX;
      }
      if (val == 0x16) {
