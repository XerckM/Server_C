void runtime_initMetrics_func5(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 2;
  out->scalar = (uint64)((double)(in->cpuStats).cpuStats.gcPauseTime / 1000000000.0);
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func6(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 2;
  out->scalar = (uint64)((double)(in->cpuStats).cpuStats.gcTotalTime / 1000000000.0);
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func7(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 2;
  out->scalar = (uint64)((double)(in->cpuStats).cpuStats.idleTime / 1000000000.0);
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func8(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 2;
  out->scalar = (uint64)((double)(in->cpuStats).cpuStats.scavengeAssistTime / 1000000000.0);
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func9(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 2;
  out->scalar = (uint64)((double)(in->cpuStats).cpuStats.scavengeBgTime / 1000000000.0);
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func10(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 2;
  out->scalar = (uint64)((double)(in->cpuStats).cpuStats.scavengeTotalTime / 1000000000.0);
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func11(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 2;
  out->scalar = (uint64)((double)(in->cpuStats).cpuStats.totalTime / 1000000000.0);
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func12(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 2;
  out->scalar = (uint64)((double)(in->cpuStats).cpuStats.userTime / 1000000000.0);
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func13(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->sysStats).gcCyclesDone - (in->sysStats).gcCyclesForced;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func14(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->sysStats).gcCyclesForced;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func15(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->sysStats).gcCyclesDone;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func16(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->gcStats).globalsScan;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func17(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->gcStats).heapScan;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func18(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->gcStats).stackScan;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func19(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->gcStats).totalScan;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func20(runtime_statAggregate *in,runtime_metricValue *out)

{
  uint uVar1;
  int iVar2;
  runtime_metricFloat64Histogram *extraout_RAX;
  runtime_metricFloat64Histogram *hist_1;
  runtime_metricFloat64Histogram *extraout_RAX_00;
  runtime_statAggregate *extraout_RAX_01;
  uint64 *extraout_RAX_02;
  uint64 *extraout_RAX_03;
  uint64 *puVar3;
  runtime_statAggregate *prVar4;
  int extraout_RCX;
  int iVar5;
  int i;
  float64 *pfVar6;
  uint64 count;
  runtime_metricFloat64Histogram *extraout_RSI;
  runtime_metricFloat64Histogram *hist;
  runtime_metricFloat64Histogram *extraout_RDI;
  runtime_metricFloat64Histogram **extraout_R11;
  float64 **extraout_R11_00;
  uint64 **extraout_R11_01;
  int unaff_R14;
  runtime_statAggregate *prStack0000000000000008;
  
  prStack0000000000000008 = in;
  while (iVar2 = runtime_sizeClassBuckets.cap, iVar5 = runtime_sizeClassBuckets.len,
        pfVar6 = runtime_sizeClassBuckets.array,
        &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((out->kind != 3) ||
     (hist = (runtime_metricFloat64Histogram *)out->pointer,
     hist == (runtime_metricFloat64Histogram *)0x0)) {
    out->kind = 3;
    runtime_newobject((internal_abi_Type *)&DAT_00850380,out);
    hist = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_00;
      extraout_R11[1] = (runtime_metricFloat64Histogram *)out->pointer;
      hist = extraout_RAX_00;
    }
    out->pointer = hist;
  }
  (hist->buckets).len = iVar5;
  (hist->buckets).cap = iVar2;
  prVar4 = prStack0000000000000008;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = pfVar6;
    extraout_R11_00[1] = (extraout_RDI->buckets).array;
    prVar4 = extraout_RAX_01;
    iVar5 = extraout_RCX;
    hist = extraout_RDI;
  }
  (hist->buckets).array = pfVar6;
  iVar5 = iVar5 + -1;
  if ((hist->counts).len != iVar5) {
    runtime_makeslice((internal_abi_Type *)&DAT_008079e0,iVar5,iVar5,hist);
    (hist->counts).len = iVar5;
    (hist->counts).cap = iVar5;
    puVar3 = extraout_RAX_02;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_01 = extraout_RAX_03;
      extraout_R11_01[1] = (extraout_RSI->counts).array;
      puVar3 = extraout_RAX_03;
      hist = extraout_RSI;
    }
    (hist->counts).array = puVar3;
    prVar4 = prStack0000000000000008;
  }
  uVar1 = (hist->counts).len;
  if (uVar1 <= uVar1 - 1) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  (hist->counts).array[uVar1 - 1] = (prVar4->heapStats).heapStatsDelta.largeAllocCount;
  i = 0;
  while( true ) {
    if (0x42 < i) {
      return;
    }
    if ((uint)(hist->counts).len <= (uint)i) break;
    (hist->counts).array[i] = prVar4->ensured[i + 0xb];
    i = i + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func21(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->heapStats).totalAllocated;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func22(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->heapStats).totalAllocs;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func23(runtime_statAggregate *in,runtime_metricValue *out)

{
  uint uVar1;
  int iVar2;
  runtime_metricFloat64Histogram *extraout_RAX;
  runtime_metricFloat64Histogram *hist_1;
  runtime_metricFloat64Histogram *extraout_RAX_00;
  runtime_statAggregate *extraout_RAX_01;
  uint64 *extraout_RAX_02;
  uint64 *extraout_RAX_03;
  uint64 *puVar3;
  runtime_statAggregate *prVar4;
  int extraout_RCX;
  int iVar5;
  int i;
  float64 *pfVar6;
  uint64 count;
  runtime_metricFloat64Histogram *extraout_RSI;
  runtime_metricFloat64Histogram *hist;
  runtime_metricFloat64Histogram *extraout_RDI;
  runtime_metricFloat64Histogram **extraout_R11;
  float64 **extraout_R11_00;
  uint64 **extraout_R11_01;
  int unaff_R14;
  runtime_statAggregate *prStack0000000000000008;
  
  prStack0000000000000008 = in;
  while (iVar2 = runtime_sizeClassBuckets.cap, iVar5 = runtime_sizeClassBuckets.len,
        pfVar6 = runtime_sizeClassBuckets.array,
        &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((out->kind != 3) ||
     (hist = (runtime_metricFloat64Histogram *)out->pointer,
     hist == (runtime_metricFloat64Histogram *)0x0)) {
    out->kind = 3;
    runtime_newobject((internal_abi_Type *)&DAT_00850380,out);
    hist = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_00;
      extraout_R11[1] = (runtime_metricFloat64Histogram *)out->pointer;
      hist = extraout_RAX_00;
    }
    out->pointer = hist;
  }
  (hist->buckets).len = iVar5;
  (hist->buckets).cap = iVar2;
  prVar4 = prStack0000000000000008;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = pfVar6;
    extraout_R11_00[1] = (extraout_RDI->buckets).array;
    prVar4 = extraout_RAX_01;
    iVar5 = extraout_RCX;
    hist = extraout_RDI;
  }
  (hist->buckets).array = pfVar6;
  iVar5 = iVar5 + -1;
  if ((hist->counts).len != iVar5) {
    runtime_makeslice((internal_abi_Type *)&DAT_008079e0,iVar5,iVar5,hist);
    (hist->counts).len = iVar5;
    (hist->counts).cap = iVar5;
    puVar3 = extraout_RAX_02;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_01 = extraout_RAX_03;
      extraout_R11_01[1] = (extraout_RSI->counts).array;
      puVar3 = extraout_RAX_03;
      hist = extraout_RSI;
    }
    (hist->counts).array = puVar3;
    prVar4 = prStack0000000000000008;
  }
  uVar1 = (hist->counts).len;
  if (uVar1 <= uVar1 - 1) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  (hist->counts).array[uVar1 - 1] = (prVar4->heapStats).heapStatsDelta.largeFreeCount;
  i = 0;
  while( true ) {
    if (0x42 < i) {
      return;
    }
    if ((uint)(hist->counts).len <= (uint)i) break;
    (hist->counts).array[i] = (prVar4->heapStats).heapStatsDelta.smallFreeCount[i + 1];
    i = i + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func24(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->heapStats).totalFreed;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func25(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->heapStats).totalFrees;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func26(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->sysStats).heapGoal;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func27(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = runtime_gcController.memoryLimit.value;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func28(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (int)runtime_gcController.gcPercent.value;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func29(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = runtime_gcController.heapMarked;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func30(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->heapStats).numObjects;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func31(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->heapStats).heapStatsDelta.tinyAllocCount;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func32(runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (uint)runtime_gcCPULimiter.lastEnabledCycle.value;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func33(runtime_metricValue *out)

{
  int iVar1;
  runtime_metricFloat64Histogram *extraout_RAX;
  runtime_metricFloat64Histogram *hist_1;
  runtime_metricFloat64Histogram *extraout_RAX_00;
  uint64 *extraout_RAX_01;
  uint64 *extraout_RAX_02;
  uint64 *puVar2;
  int i;
  int extraout_RCX;
  int iVar3;
  float64 *pfVar4;
  runtime_metricFloat64Histogram *extraout_RSI;
  runtime_metricFloat64Histogram *hist;
  runtime_metricFloat64Histogram *extraout_RDI;
  runtime_metricFloat64Histogram **extraout_R11;
  float64 **extraout_R11_00;
  uint64 **extraout_R11_01;
  int unaff_R14;
  
  while (iVar1 = runtime_timeHistBuckets.cap, iVar3 = runtime_timeHistBuckets.len,
        pfVar4 = runtime_timeHistBuckets.array,
        &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((out->kind != 3) ||
     (hist = (runtime_metricFloat64Histogram *)out->pointer,
     hist == (runtime_metricFloat64Histogram *)0x0)) {
    out->kind = 3;
    runtime_newobject((internal_abi_Type *)&DAT_00850380,out);
    hist = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_00;
      extraout_R11[1] = (runtime_metricFloat64Histogram *)out->pointer;
      hist = extraout_RAX_00;
    }
    out->pointer = hist;
  }
  (hist->buckets).len = iVar3;
  (hist->buckets).cap = iVar1;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = pfVar4;
    extraout_R11_00[1] = (extraout_RDI->buckets).array;
    iVar3 = extraout_RCX;
    hist = extraout_RDI;
  }
  (hist->buckets).array = pfVar4;
  iVar3 = iVar3 + -1;
  if ((hist->counts).len != iVar3) {
    runtime_makeslice((internal_abi_Type *)&DAT_008079e0,iVar3,iVar3,hist);
    (hist->counts).len = iVar3;
    (hist->counts).cap = iVar3;
    puVar2 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_01 = extraout_RAX_02;
      extraout_R11_01[1] = (extraout_RSI->counts).array;
      puVar2 = extraout_RAX_02;
      hist = extraout_RSI;
    }
    (hist->counts).array = puVar2;
  }
  if ((hist->counts).len == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  *(hist->counts).array = runtime_memstats.gcPauseDist.underflow.value;
  i = 0;
  while( true ) {
    if (0x9f < i) {
      iVar3 = (hist->counts).len;
      if ((uint)(hist->counts).len <= iVar3 - 1U) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      (hist->counts).array[iVar3 + -1] = runtime_memstats.gcPauseDist.overflow.value;
      return;
    }
    if ((uint)(hist->counts).len <= i + 1U) break;
    (hist->counts).array[i + 1] = runtime_memstats.gcPauseDist.counts[i].value;
    i = i + 1U;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func34(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (uint)runtime_startingStackSize;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func35(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = ((((in->heapStats).heapStatsDelta.committed - (in->heapStats).heapStatsDelta.inHeap)
                 - (in->heapStats).heapStatsDelta.inStacks) -
                (in->heapStats).heapStatsDelta.inWorkBufs) -
                (in->heapStats).heapStatsDelta.inPtrScalarBits;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func36(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->heapStats).inObjects;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func37(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->heapStats).heapStatsDelta.released;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func38(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->heapStats).heapStatsDelta.inStacks;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func39(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->heapStats).heapStatsDelta.inHeap - (in->heapStats).inObjects;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func40(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->sysStats).mCacheSys - (in->sysStats).mCacheInUse;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func41(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->sysStats).mCacheInUse;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func42(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->sysStats).mSpanSys - (in->sysStats).mSpanInUse;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func43(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->sysStats).mSpanInUse;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func44(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->heapStats).heapStatsDelta.inWorkBufs +
                (in->heapStats).heapStatsDelta.inPtrScalarBits + (in->sysStats).gcMiscSys;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func45(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->sysStats).stacksSys;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func46(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->sysStats).otherSys;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func47(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->sysStats).buckHashSys;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func48(runtime_statAggregate *in,runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (in->heapStats).heapStatsDelta.committed + (in->heapStats).heapStatsDelta.released +
                (in->sysStats).stacksSys + (in->sysStats).mSpanSys + (in->sysStats).mCacheSys +
                (in->sysStats).buckHashSys + (in->sysStats).gcMiscSys + (in->sysStats).otherSys;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func49(runtime_metricValue *out)

{
  out->kind = 1;
  out->scalar = (int)runtime_gomaxprocs;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func50(runtime_metricValue *out)

{
  sdword sVar1;
  int32 n;
  int iVar2;
  runtime_p *pp;
  
  out->kind = 1;
  sVar1 = ((sdword)runtime_allglen - runtime_sched.gFree.n) - runtime_sched.ngsys.value;
  for (iVar2 = 0; iVar2 < runtime_allp.len; iVar2 = iVar2 + 1) {
    sVar1 = sVar1 - (runtime_allp.array[iVar2]->gFree).n;
  }
  if (sVar1 < 1) {
    sVar1 = 1;
  }
  out->scalar = (int)sVar1;
  return;
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func51(runtime_metricValue *out)

{
  int iVar1;
  runtime_metricFloat64Histogram *extraout_RAX;
  runtime_metricFloat64Histogram *hist_1;
  runtime_metricFloat64Histogram *extraout_RAX_00;
  uint64 *extraout_RAX_01;
  uint64 *extraout_RAX_02;
  uint64 *puVar2;
  int i;
  int extraout_RCX;
  int iVar3;
  float64 *pfVar4;
  runtime_metricFloat64Histogram *extraout_RSI;
  runtime_metricFloat64Histogram *hist;
  runtime_metricFloat64Histogram *extraout_RDI;
  runtime_metricFloat64Histogram **extraout_R11;
  float64 **extraout_R11_00;
  uint64 **extraout_R11_01;
  int unaff_R14;
  
  while (iVar1 = runtime_timeHistBuckets.cap, iVar3 = runtime_timeHistBuckets.len,
        pfVar4 = runtime_timeHistBuckets.array,
        &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((out->kind != 3) ||
     (hist = (runtime_metricFloat64Histogram *)out->pointer,
     hist == (runtime_metricFloat64Histogram *)0x0)) {
    out->kind = 3;
    runtime_newobject((internal_abi_Type *)&DAT_00850380,out);
    hist = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_00;
      extraout_R11[1] = (runtime_metricFloat64Histogram *)out->pointer;
      hist = extraout_RAX_00;
    }
    out->pointer = hist;
  }
  (hist->buckets).len = iVar3;
  (hist->buckets).cap = iVar1;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = pfVar4;
    extraout_R11_00[1] = (extraout_RDI->buckets).array;
    iVar3 = extraout_RCX;
    hist = extraout_RDI;
  }
  (hist->buckets).array = pfVar4;
  iVar3 = iVar3 + -1;
  if ((hist->counts).len != iVar3) {
    runtime_makeslice((internal_abi_Type *)&DAT_008079e0,iVar3,iVar3,hist);
    (hist->counts).len = iVar3;
    (hist->counts).cap = iVar3;
    puVar2 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_01 = extraout_RAX_02;
      extraout_R11_01[1] = (extraout_RSI->counts).array;
      puVar2 = extraout_RAX_02;
      hist = extraout_RSI;
    }
    (hist->counts).array = puVar2;
  }
  if ((hist->counts).len == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  *(hist->counts).array = runtime_sched.timeToRun.underflow.value;
  i = 0;
  while( true ) {
    if (0x9f < i) {
      iVar3 = (hist->counts).len;
      if ((uint)(hist->counts).len <= iVar3 - 1U) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      (hist->counts).array[iVar3 + -1] = runtime_sched.timeToRun.overflow.value;
      return;
    }
    if ((uint)(hist->counts).len <= i + 1U) break;
    (hist->counts).array[i + 1] = runtime_sched.timeToRun.counts[i].value;
    i = i + 1U;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Unknown calling convention

void runtime_initMetrics_func52(runtime_metricValue *out)

{
  out->kind = 2;
  out->scalar = (uint64)((double)runtime_sched.totalMutexWaitTime.value / 1000000000.0);
  return;
}



// DWARF original prototype: void runtime.runExitHooks.func1(func() * * f, bool caughtPanic, bool
// caughtPanic)

void runtime_runExitHooks_func1(func__ **f,bool caughtPanic,bool caughtPanic_1)

{
  int unaff_R14;
  undefined local_22;
  undefined local_21;
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_22 = 0;
  local_20._8_8_ = &local_22;
  local_20._0_8_ = runtime_runExitHooks_func1_1;
  local_10 = (code **)local_20;
  local_21 = 1;
  (**f)();
  local_21 = 0;
  (**local_10)();
  return;
}



// WARNING: Unknown calling convention

void runtime_runExitHooks_func1_1(void)

{
  interface___ ~r0;
  int extraout_RAX;
  bool *_caughtPanic;
  int in_RDX;
  int unaff_R14;
  internal_abi_Type *in_stack_ffffffffffffffe8;
  undefined *puVar1;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  puVar1 = *(undefined **)(in_RDX + 8);
  ~r0.data = puVar1;
  ~r0._type = in_stack_ffffffffffffffe8;
  runtime_gorecover((uintptr)&stack0x00000008,~r0);
  if (extraout_RAX != 0) {
    *puVar1 = 1;
  }
  return;
}



// WARNING: Unknown calling convention

void runtime_debugCallWrap1_func1(runtime_g *gp)

{
  runtime_g *gp_00;
  runtime_g *callingG;
  int unaff_R14;
  runtime_g *gp_1;
  runtime_g *gp_2;
  runtime_g *prStack0000000000000008;
  __uint64 in_stack_ffffffffffffffc8;
  
  prStack0000000000000008 = gp;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
