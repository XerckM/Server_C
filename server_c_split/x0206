
// WARNING: Restarted to delay deadcode elimination for space: stack

void reflect___Value__Field(int i,reflect_Value ~r0)

{
  reflect_Value **pprVar1;
  reflect_Value ~r0_00;
  void *in_RBX;
  undefined8 unaff_RBP;
  int unaff_R14;
  reflect_flag unaff_retaddr;
  reflect_Value in_stack_ffffffffffffffd8;
  undefined8 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.typ_ = (internal_abi_Type *)i;
    ~r0.ptr = in_RBX;
    runtime_morestack_noctxt();
    i = (int)~r0.typ_;
    in_RBX = ~r0.ptr;
  }
  pprVar1 = *(reflect_Value ***)(unaff_R14 + 0x20);
  if ((pprVar1 != (reflect_Value **)0x0) && (*pprVar1 == &~r0)) {
    *pprVar1 = (reflect_Value *)&stack0xffffffffffffffd8;
  }
  if ((internal_abi_Type *)i != (internal_abi_Type *)0x0) {
    ~r0_00.ptr = (void *)unaff_RBP;
    ~r0_00.typ_ = (internal_abi_Type *)in_stack_fffffffffffffff0;
    ~r0_00.flag = unaff_retaddr;
    reflect_Value_Field(in_stack_ffffffffffffffd8,*(uintptr *)i,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void reflect___Value__FieldByIndex(__int index,reflect_Value ~r0)

{
  __int **pp_Var1;
  reflect_Value ~r0_00;
  int *in_RAX;
  int in_RCX;
  internal_abi_Type *unaff_RBP;
  int unaff_R14;
  undefined8 unaff_retaddr;
  __int in_stack_ffffffffffffffc8;
  __int in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    index.array = in_RAX;
    index.cap = in_RCX;
    runtime_morestack_noctxt();
    in_RAX = index.array;
    in_RCX = index.cap;
  }
  pp_Var1 = *(__int ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__int **)0x0) && (*pp_Var1 == &index)) {
    *pp_Var1 = (__int *)&stack0xffffffffffffffc8;
  }
  if (in_RAX != (int *)0x0) {
    ~r0_00.flag = (reflect_flag)index.array;
    ~r0_00.ptr = (void *)unaff_retaddr;
    ~r0_00.typ_ = unaff_RBP;
    reflect_Value_FieldByIndex
              ((reflect_Value)in_stack_ffffffffffffffc8,in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void reflect___Value__FieldByIndexErr(__int index,reflect_Value ~r0,error ~r1)

{
  __int **pp_Var1;
  error ~r1_00;
  reflect_Value ~r0_00;
  int *in_RAX;
  int in_RCX;
  runtime_itab *in_RBX;
  internal_abi_Type *unaff_RBP;
  int unaff_R14;
  undefined8 unaff_retaddr;
  __int in_stack_ffffffffffffffc8;
  __int in_stack_ffffffffffffffe0;
  
  index.len = (int)in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    index.array = in_RAX;
    index.cap = in_RCX;
    runtime_morestack_noctxt();
    in_RAX = index.array;
    in_RCX = index.cap;
  }
  pp_Var1 = *(__int ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__int **)0x0) && (*pp_Var1 == &index)) {
    *pp_Var1 = (__int *)&stack0xffffffffffffffc8;
  }
  if (in_RAX != (int *)0x0) {
    ~r0_00.flag = (reflect_flag)index.array;
    ~r0_00.ptr = (void *)unaff_retaddr;
    ~r0_00.typ_ = unaff_RBP;
    ~r1_00.data = (void *)index.cap;
    ~r1_00.tab = (runtime_itab *)index.len;
    reflect_Value_FieldByIndexErr
              ((reflect_Value)in_stack_ffffffffffffffc8,in_stack_ffffffffffffffe0,~r0_00,~r1_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void reflect___Value__FieldByName(string name,reflect_Value ~r0)

{
  string **ppsVar1;
  reflect_Value ~r0_00;
  uint8 *in_RAX;
  internal_abi_Type *unaff_RBP;
  int unaff_R14;
  undefined8 unaff_retaddr;
  reflect_Value in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    name.str = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = name.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &name)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffd0;
  }
  if (in_RAX != (uint8 *)0x0) {
    ~r0_00.flag = (reflect_flag)name.str;
    ~r0_00.ptr = (void *)unaff_retaddr;
    ~r0_00.typ_ = unaff_RBP;
    reflect_Value_FieldByName(in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe8,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void reflect___Value__FieldByNameFunc(func_string__bool **match,reflect_Value ~r0)

{
  reflect_Value **pprVar1;
  reflect_Value ~r0_00;
  void *in_RBX;
  undefined8 unaff_RBP;
  int unaff_R14;
  reflect_flag unaff_retaddr;
  reflect_Value in_stack_ffffffffffffffd8;
  undefined8 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.typ_ = (internal_abi_Type *)match;
    ~r0.ptr = in_RBX;
    runtime_morestack_noctxt();
    match = (func_string__bool **)~r0.typ_;
    in_RBX = ~r0.ptr;
  }
  pprVar1 = *(reflect_Value ***)(unaff_R14 + 0x20);
  if ((pprVar1 != (reflect_Value **)0x0) && (*pprVar1 == &~r0)) {
    *pprVar1 = (reflect_Value *)&stack0xffffffffffffffd8;
  }
  if ((internal_abi_Type *)match != (internal_abi_Type *)0x0) {
    ~r0_00.ptr = (void *)unaff_RBP;
    ~r0_00.typ_ = (internal_abi_Type *)in_stack_fffffffffffffff0;
    ~r0_00.flag = unaff_retaddr;
    reflect_Value_FieldByNameFunc
              (in_stack_ffffffffffffffd8,(func_string__bool **)*(uintptr *)match,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void reflect___Value__Float(float64 ~r0)

{
  int *piVar1;
  int in_RAX;
  undefined8 *extraout_RAX;
  uint uVar2;
  reflect_Kind k;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  int iStack0000000000000008;
  interface___ in_stack_ffffffffffffffe0;
  
  iStack0000000000000008 = in_RAX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffe0;
  }
  if (iStack0000000000000008 == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  uVar2 = (uint)((dword)*(undefined8 *)(iStack0000000000000008 + 0x10) & 0x1f);
  if ((uVar2 != 0xd) && (uVar2 != 0xe)) {
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
    extraout_RAX[1] = 0x13;
    *extraout_RAX = &DAT_008b8160;
    extraout_RAX[2] = uVar2;
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe0);
  }
  return;
}



// WARNING: Unknown calling convention

void reflect___Value__Grow(int n)

{
  int *piVar1;
  int *in_RAX;
  int unaff_R14;
  int *piStack0000000000000008;
  int in_stack_00000010;
  reflect_Value in_stack_ffffffffffffffd8;
  
  piStack0000000000000008 = in_RAX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000010 = n;
    runtime_morestack_noctxt();
    n = in_stack_00000010;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffd8;
  }
  if (piStack0000000000000008 != (int *)0x0) {
    reflect_Value_Grow(in_stack_ffffffffffffffd8,*piStack0000000000000008);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void reflect___Value__Index(int i,reflect_Value ~r0)

{
  reflect_Value **pprVar1;
  reflect_Value ~r0_00;
  void *in_RBX;
  undefined8 unaff_RBP;
  int unaff_R14;
  reflect_flag unaff_retaddr;
  reflect_Value in_stack_ffffffffffffffd8;
  undefined8 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.typ_ = (internal_abi_Type *)i;
    ~r0.ptr = in_RBX;
    runtime_morestack_noctxt();
    i = (int)~r0.typ_;
    in_RBX = ~r0.ptr;
  }
  pprVar1 = *(reflect_Value ***)(unaff_R14 + 0x20);
  if ((pprVar1 != (reflect_Value **)0x0) && (*pprVar1 == &~r0)) {
    *pprVar1 = (reflect_Value *)&stack0xffffffffffffffd8;
  }
  if ((internal_abi_Type *)i != (internal_abi_Type *)0x0) {
    ~r0_00.ptr = (void *)unaff_RBP;
    ~r0_00.typ_ = (internal_abi_Type *)in_stack_fffffffffffffff0;
    ~r0_00.flag = unaff_retaddr;
    reflect_Value_Index(in_stack_ffffffffffffffd8,*(uintptr *)i,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void reflect___Value__Int(int64 ~r0)

{
  int *piVar1;
  undefined8 *extraout_RAX;
  uint uVar2;
  reflect_Kind k;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  int in_stack_00000008;
  interface___ in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = ~r0;
    runtime_morestack_noctxt();
    ~r0 = in_stack_00000008;
    in_RBX = extraout_RBX;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined8 *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffe0;
  }
  if (~r0 == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  uVar2 = (uint)((dword)*(undefined8 *)(~r0 + 0x10) & 0x1f);
  if (uVar2 < 4) {
    if ((uVar2 != 2) && (uVar2 != 3)) {
LAB_004e5689:
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
      extraout_RAX[1] = 0x11;
      *extraout_RAX = &DAT_008b6deb;
      extraout_RAX[2] = uVar2;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffe0);
    }
  }
  else if (((uVar2 != 4) && (uVar2 != 5)) && (uVar2 != 6)) goto LAB_004e5689;
  return;
}



void reflect___Value__Interface(interface___ i)

{
  interface___ **ppiVar1;
  interface___ ~r0;
  internal_abi_Type *in_RAX;
  void *unaff_RBP;
  int unaff_R14;
  reflect_Value in_stack_ffffffffffffffd8;
  internal_abi_Type *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    i._type = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = i._type;
  }
  ppiVar1 = *(interface___ ***)(unaff_R14 + 0x20);
  if ((ppiVar1 != (interface___ **)0x0) && (*ppiVar1 == &i)) {
    *ppiVar1 = (interface___ *)&stack0xffffffffffffffd8;
  }
  if (in_RAX != (internal_abi_Type *)0x0) {
    ~r0.data = unaff_RBP;
    ~r0._type = in_stack_fffffffffffffff0;
    reflect_valueInterface(in_stack_ffffffffffffffd8,SUB81(in_RAX->Size_,0),~r0);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void reflect___Value__InterfaceData(uintptr ~r0 [2])

{
  uintptr **ppuVar1;
  reflect_Value v;
  int in_RAX;
  int unaff_R14;
  undefined4 in_stack_ffffffffffffffc0;
  undefined4 in_stack_ffffffffffffffc4;
  undefined4 in_stack_ffffffffffffffc8;
  undefined4 in_stack_ffffffffffffffcc;
  reflect_flag in_stack_ffffffffffffffd0;
  uintptr in_stack_ffffffffffffffd8 [2];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ppuVar1 = *(uintptr ***)(unaff_R14 + 0x20);
  if ((ppuVar1 != (uintptr **)0x0) && (*ppuVar1 == ~r0)) {
    *ppuVar1 = (uintptr *)&stack0xffffffffffffffc0;
  }
  if (in_RAX != 0) {
    v.typ_._4_4_ = in_stack_ffffffffffffffc4;
    v.typ_._0_4_ = in_stack_ffffffffffffffc0;
    v.ptr._0_4_ = in_stack_ffffffffffffffc8;
    v.ptr._4_4_ = in_stack_ffffffffffffffcc;
    v.flag = in_stack_ffffffffffffffd0;
    reflect_Value_InterfaceData(v,in_stack_ffffffffffffffd8);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void reflect___Value__IsNil(bool ~r0)

{
  int *piVar1;
  undefined7 in_register_00000001;
  int iVar2;
  undefined8 *extraout_RAX;
  uint uVar3;
  reflect_Kind k;
  void *ptr;
  int unaff_R14;
  int in_stack_00000008;
  interface___ in_stack_ffffffffffffffe0;
  
  iVar2 = CONCAT71(in_register_00000001,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = iVar2;
    runtime_morestack_noctxt();
    iVar2 = in_stack_00000008;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined8 *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffe0;
  }
  if (iVar2 == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  uVar3 = (uint)((dword)*(undefined8 *)(iVar2 + 0x10) & 0x1f);
  if (uVar3 < 0x15) {
    if ((1 < uVar3 - 0x12) && (uVar3 != 0x14)) {
LAB_004e5896:
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,*(void **)(iVar2 + 8));
      extraout_RAX[1] = 0x13;
      *extraout_RAX = &DAT_008b814d;
      extraout_RAX[2] = uVar3;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffe0);
    }
  }
  else if (((0x16 < uVar3) && (uVar3 != 0x17)) && (uVar3 != 0x1a)) goto LAB_004e5896;
  return;
}



void reflect___Value__IsValid(bool ~r0)

{
  int *piVar1;
  undefined7 in_register_00000001;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (CONCAT71(in_register_00000001,~r0) != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void reflect___Value__IsZero(bool ~r0)

{
  int *piVar1;
  undefined7 in_register_00000001;
  undefined8 *puVar2;
  int unaff_R14;
  undefined8 *in_stack_00000008;
  reflect_Value in_stack_ffffffffffffffe0;
  
  puVar2 = (undefined8 *)CONCAT71(in_register_00000001,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = puVar2;
    runtime_morestack_noctxt();
    puVar2 = in_stack_00000008;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined8 **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffe0;
  }
  if (puVar2 != (undefined8 *)0x0) {
    reflect_Value_IsZero(in_stack_ffffffffffffffe0,SUB81(*puVar2,0));
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void reflect___Value__Kind(reflect_Kind ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void reflect___Value__Len(int ~r0)

{
  int *piVar1;
  int unaff_R14;
  int *in_stack_00000008;
  reflect_Value in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = (int *)~r0;
    runtime_morestack_noctxt();
    ~r0 = (int)in_stack_00000008;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffe0;
  }
  if ((int *)~r0 == (int *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  if (((dword)*(int *)(~r0 + 0x10) & 0x1f) != 0x17) {
    reflect_Value_lenNonSlice(in_stack_ffffffffffffffe0,*(int *)~r0);
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void reflect___Value__MapIndex(reflect_Value key,reflect_Value ~r0)

{
  reflect_Value **pprVar1;
  reflect_Value ~r0_00;
  internal_abi_Type *in_RAX;
  internal_abi_Type *unaff_RBP;
  int unaff_R14;
  undefined8 unaff_retaddr;
  reflect_Value in_stack_ffffffffffffffc8;
  reflect_Value in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    key.typ_ = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = key.typ_;
  }
  pprVar1 = *(reflect_Value ***)(unaff_R14 + 0x20);
  if ((pprVar1 != (reflect_Value **)0x0) && (*pprVar1 == &key)) {
    *pprVar1 = (reflect_Value *)&stack0xffffffffffffffc8;
  }
  if (in_RAX != (internal_abi_Type *)0x0) {
    ~r0_00.flag = (reflect_flag)key.typ_;
    ~r0_00.ptr = (void *)unaff_retaddr;
    ~r0_00.typ_ = unaff_RBP;
    reflect_Value_MapIndex(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void reflect___Value__MapKeys(__reflect_Value ~r0)

{
  __reflect_Value **pp_Var1;
  __reflect_Value ~r0_00;
  reflect_Value *in_RAX;
  reflect_Value *unaff_RBP;
  int unaff_R14;
  undefined8 unaff_retaddr;
  __reflect_Value in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.array = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.array;
  }
  pp_Var1 = *(__reflect_Value ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__reflect_Value **)0x0) && (*pp_Var1 == &~r0)) {
    *pp_Var1 = (__reflect_Value *)&stack0xffffffffffffffe0;
  }
  if (in_RAX != (reflect_Value *)0x0) {
    ~r0_00.cap = (int)~r0.array;
    ~r0_00.len = unaff_retaddr;
    ~r0_00.array = unaff_RBP;
    reflect_Value_MapKeys((reflect_Value)in_stack_ffffffffffffffe0,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void reflect___Value__MapRange(reflect_MapIter *~r0)

{
  int *piVar1;
  internal_abi_Type **extraout_RAX;
  internal_abi_Type **extraout_RAX_00;
  internal_abi_Type **ppiVar2;
  internal_abi_Type *extraout_RBX;
  internal_abi_Type *~r0_00;
  internal_abi_Type **extraout_R11;
  int unaff_R14;
  reflect_MapIter *in_stack_00000008;
  undefined auStack_30 [16];
  internal_abi_Type *local_20;
  internal_abi_Type *local_18;
  internal_abi_Type *local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = ~r0;
    runtime_morestack_noctxt();
    ~r0 = in_stack_00000008;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((reflect_MapIter **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_30;
  }
  if (~r0 == (reflect_MapIter *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  local_20 = (internal_abi_Type *)(~r0->m).flag;
  ~r0_00 = (~r0->m).typ_;
  local_18 = (internal_abi_Type *)(~r0->m).ptr;
  local_10 = ~r0_00;
  if (((dword)local_20 & 0x1f) != 0x15) {
    reflect_flag_panicNotMap((reflect_flag)local_20);
    ~r0_00 = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00850ce0,~r0_00);
  extraout_RAX[2] = local_20;
  ppiVar2 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = local_10;
    extraout_R11[1] = local_18;
    ppiVar2 = extraout_RAX_00;
  }
  *ppiVar2 = local_10;
  ppiVar2[1] = local_18;
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void reflect___Value__Method(int i,reflect_Value ~r0)

{
  reflect_Value **pprVar1;
  reflect_Value ~r0_00;
  void *in_RBX;
  undefined8 unaff_RBP;
  int unaff_R14;
  reflect_flag unaff_retaddr;
  reflect_Value in_stack_ffffffffffffffd8;
  undefined8 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.typ_ = (internal_abi_Type *)i;
    ~r0.ptr = in_RBX;
    runtime_morestack_noctxt();
    i = (int)~r0.typ_;
    in_RBX = ~r0.ptr;
  }
  pprVar1 = *(reflect_Value ***)(unaff_R14 + 0x20);
  if ((pprVar1 != (reflect_Value **)0x0) && (*pprVar1 == &~r0)) {
    *pprVar1 = (reflect_Value *)&stack0xffffffffffffffd8;
  }
  if ((internal_abi_Type *)i != (internal_abi_Type *)0x0) {
    ~r0_00.ptr = (void *)unaff_RBP;
    ~r0_00.typ_ = (internal_abi_Type *)in_stack_fffffffffffffff0;
    ~r0_00.flag = unaff_retaddr;
    reflect_Value_Method(in_stack_ffffffffffffffd8,*(uintptr *)i,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void reflect___Value__MethodByName(string name,reflect_Value ~r0)

{
  string **ppsVar1;
  reflect_Value ~r0_00;
  uint8 *in_RAX;
  internal_abi_Type *unaff_RBP;
  int unaff_R14;
  undefined8 unaff_retaddr;
  reflect_Value in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    name.str = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = name.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &name)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffd0;
  }
  if (in_RAX != (uint8 *)0x0) {
    ~r0_00.flag = (reflect_flag)name.str;
    ~r0_00.ptr = (void *)unaff_retaddr;
    ~r0_00.typ_ = unaff_RBP;
    reflect_Value_MethodByName(in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe8,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void reflect___Value__NumField(int ~r0)

{
  int *piVar1;
  int unaff_R14;
  int *in_stack_00000008;
  reflect_Value in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = (int *)~r0;
    runtime_morestack_noctxt();
    ~r0 = (int)in_stack_00000008;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffe0;
  }
  if ((int *)~r0 != (int *)0x0) {
    reflect_Value_NumField(in_stack_ffffffffffffffe0,*(int *)~r0);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void reflect___Value__NumMethod(int ~r0)

{
  int *piVar1;
  int unaff_R14;
  int *in_stack_00000008;
  reflect_Value in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = (int *)~r0;
    runtime_morestack_noctxt();
    ~r0 = (int)in_stack_00000008;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffe0;
  }
  if ((int *)~r0 != (int *)0x0) {
    reflect_Value_NumMethod(in_stack_ffffffffffffffe0,*(int *)~r0);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void reflect___Value__OverflowComplex(complex128 x,bool ~r0)

{
  int *piVar1;
  undefined7 in_register_00000001;
  int iVar2;
  undefined8 *extraout_RAX;
  uint uVar3;
  reflect_Kind k;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  undefined in_XMM0 [16];
  interface___ in_stack_ffffffffffffffe0;
  
  iVar2 = CONCAT71(in_register_00000001,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    x._0_8_ = iVar2;
    x._8_8_ = in_XMM0._0_8_;
    runtime_morestack_noctxt();
    in_XMM0._8_8_ = 0;
    in_XMM0._0_8_ = x._8_8_;
    iVar2 = x._0_8_;
    in_RBX = extraout_RBX;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == x)) {
    *piVar1 = (int)&stack0xffffffffffffffe0;
  }
  if (iVar2 == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  uVar3 = (uint)((dword)*(undefined8 *)(iVar2 + 0x10) & 0x1f);
  if ((uVar3 != 0xf) && (uVar3 != 0x10)) {
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
    extraout_RAX[1] = 0x1d;
    *extraout_RAX = &DAT_008be436;
    extraout_RAX[2] = uVar3;
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe0);
  }
  return;
}



void reflect___Value__OverflowFloat(float64 x,bool ~r0)

{
  int *piVar1;
  undefined7 in_register_00000001;
  int iVar2;
  undefined8 *extraout_RAX;
  uint uVar3;
  reflect_Kind k;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  int in_stack_00000008;
  float64 in_stack_00000010;
  interface___ in_stack_ffffffffffffffe0;
  
  iVar2 = CONCAT71(in_register_00000001,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = iVar2;
    in_stack_00000010 = x;
    runtime_morestack_noctxt();
    iVar2 = in_stack_00000008;
    in_RBX = extraout_RBX;
    x = in_stack_00000010;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined8 *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffe0;
  }
  if (iVar2 == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  uVar3 = (uint)((dword)*(undefined8 *)(iVar2 + 0x10) & 0x1f);
  if ((uVar3 != 0xd) && (uVar3 != 0xe)) {
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
    extraout_RAX[1] = 0x1b;
    *extraout_RAX = &DAT_008bd117;
    extraout_RAX[2] = uVar3;
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe0);
  }
  return;
}



void reflect___Value__OverflowInt(int64 x,bool ~r0)

{
  int *piVar1;
  undefined8 *extraout_RAX;
  uint uVar2;
  reflect_Kind k;
  undefined7 in_register_00000019;
  void *~r0_00;
  int64 trunc;
  int unaff_R14;
  int in_stack_00000008;
  void *in_stack_00000010;
  interface___ in_stack_ffffffffffffffe0;
  
  ~r0_00 = (void *)CONCAT71(in_register_00000019,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = x;
    in_stack_00000010 = ~r0_00;
    runtime_morestack_noctxt();
    x = in_stack_00000008;
    ~r0_00 = in_stack_00000010;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined8 *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffe0;
  }
  if (x != 0) {
    uVar2 = (uint)((dword)*(undefined8 *)(x + 0x10) & 0x1f);
    if (uVar2 - 2 < 5) {
      return;
    }
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_00);
    extraout_RAX[1] = 0x19;
    *extraout_RAX = &DAT_008bbd2f;
    extraout_RAX[2] = uVar2;
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe0);
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void reflect___Value__OverflowUint(uint64 x,bool ~r0)

{
  int *piVar1;
  undefined8 *extraout_RAX;
  uint uVar2;
  reflect_Kind k;
  undefined7 in_register_00000019;
  void *~r0_00;
  uint64 trunc;
  int unaff_R14;
  uint64 in_stack_00000008;
  void *in_stack_00000010;
  interface___ in_stack_ffffffffffffffe0;
  
  ~r0_00 = (void *)CONCAT71(in_register_00000019,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = x;
    in_stack_00000010 = ~r0_00;
    runtime_morestack_noctxt();
    x = in_stack_00000008;
    ~r0_00 = in_stack_00000010;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined8 *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xffffffffffffffe0;
  }
  if (x != 0) {
    uVar2 = (uint)((dword)*(undefined8 *)(x + 0x10) & 0x1f);
    if (uVar2 - 7 < 6) {
      return;
    }
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_00);
    extraout_RAX[1] = 0x1a;
    *extraout_RAX = &DAT_008bc6bb;
    extraout_RAX[2] = uVar2;
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe0);
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
