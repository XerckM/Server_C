    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_R10;
    extraout_R11[1] = powers[0]->array;
    pmVar3 = extraout_R10;
  }
  powers[0]->array = pmVar3;
  dVar14 = math_big_nat_trunc(dVar14);
  powers[1]->len = extraout_RBX_00;
  powers[1]->cap = extraout_RCX;
  pmVar3 = extraout_RAX_04;
  pvVar6 = extraout_RDI_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_05;
    extraout_R11_00[1] = powers[1]->array;
    pmVar3 = extraout_RAX_05;
    pvVar6 = extraout_RDI_02;
  }
  powers[1]->array = pmVar3;
  i_2 = 2;
  while (i_2 < 0x10) {
    if (0xf < (uint)(i_2 / 2)) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    local_a8 = powers[i_2];
    local_b0 = powers[i_2 + 1];
    z_00.cap = in_stack_fffffffffffffe60;
    z_00.array = &(in_stack_fffffffffffffe50._type)->Size_;
    z_00.len = (int)in_stack_fffffffffffffe50.data;
    local_e8 = i_2;
    math_big_nat_sqr(z_00,in_stack_fffffffffffffe68,in_stack_fffffffffffffe80);
    local_a8->len = extraout_RBX_01;
    local_a8->cap = extraout_RCX_00;
    pmVar3 = extraout_RAX_06;
    pmVar4 = local_a8;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_01 = extraout_RAX_07;
      extraout_R11_01[1] = pmVar4->array;
      pmVar3 = extraout_RAX_07;
    }
    pmVar4->array = pmVar3;
    dVar14 = math_big_nat_trunc(dVar14);
    local_a8->len = extraout_RBX_02;
    local_a8->cap = extraout_RCX_01;
    pmVar3 = extraout_RAX_08;
    pmVar4 = local_a8;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_02 = extraout_RAX_09;
      extraout_R11_02[1] = pmVar4->array;
      pmVar3 = extraout_RAX_09;
    }
    pmVar4->array = pmVar3;
    z_01.cap = in_stack_fffffffffffffe60;
    z_01.array = &(in_stack_fffffffffffffe50._type)->Size_;
    z_01.len = (int)in_stack_fffffffffffffe50.data;
    ~r0_00.len = iVar8;
    ~r0_00.array = (math_big_Word *)in_stack_fffffffffffffe98;
    ~r0_00.cap = (int)pmVar7;
    math_big_nat_mul(z_01,in_stack_fffffffffffffe68,in_stack_fffffffffffffe80,~r0_00);
    local_b0->len = extraout_RBX_03;
    local_b0->cap = extraout_RCX_02;
    pmVar3 = extraout_RAX_10;
    pmVar4 = local_b0;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_03 = extraout_RAX_11;
      extraout_R11_03[1] = pmVar4->array;
      pmVar3 = extraout_RAX_11;
    }
    pmVar4->array = pmVar3;
    dVar14 = math_big_nat_trunc(dVar14);
    local_b0->len = extraout_RBX_04;
    local_b0->cap = extraout_RCX_03;
    pmVar3 = extraout_RAX_12;
    pmVar4 = local_b0;
    pvVar6 = extraout_RDI_03;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_04 = extraout_RAX_13;
      extraout_R11_04[1] = pmVar4->array;
      pmVar3 = extraout_RAX_13;
      pvVar6 = extraout_RDI_04;
    }
    pmVar4->array = pmVar3;
    i_2 = local_e8 + 2;
  }
  if (((int)z.array - 1U & 0x3f) == 0) {
    local_130 = 0xffffffffffffffff;
  }
  else {
    local_130 = (1 << ((byte)((int)z.array - 1U) & 0x3f)) - 1;
  }
  uVar13 = in_R10 - 1;
  local_e0 = (int)z.array - 2U >> 6;
  if ((int)local_e0 < (int)uVar13) {
    uVar13 = local_e0;
  }
  if (in_RCX == (math_big_nat *)0x0) {
    local_118 = uVar13;
    runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,pvVar6);
    in_RCX = (math_big_nat *)&DAT_00000001;
    logM = (uint)extraout_RAX_14;
    uVar13 = local_118;
  }
  *(undefined8 *)logM = 1;
  bVar1 = false;
  local_120 = 1;
  uVar5 = local_e0;
  puVar9 = local_c8;
  while (-1 < (int)uVar13) {
    if (in_R10 <= uVar13) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    local_108 = *(uint *)(in_R9 + uVar13 * 8);
    if (uVar13 == uVar5) {
      local_108 = local_108 & local_130;
    }
    local_118 = uVar13;
    for (local_128 = 0; local_128 < 0x40; local_128 = local_128 + 4) {
      if (bVar1) {
        z_03.cap = in_stack_fffffffffffffe60;
        z_03.array = &(in_stack_fffffffffffffe50._type)->Size_;
        z_03.len = (int)in_stack_fffffffffffffe50.data;
        local_f8 = local_120;
        local_f0 = in_RCX;
        local_98 = (undefined8 *)logM;
        math_big_nat_sqr(z_03,in_stack_fffffffffffffe68,in_stack_fffffffffffffe80);
        dVar14 = math_big_nat_trunc(dVar14);
        z_04.cap = in_stack_fffffffffffffe60;
        z_04.array = &(in_stack_fffffffffffffe50._type)->Size_;
        z_04.len = (int)in_stack_fffffffffffffe50.data;
        math_big_nat_sqr(z_04,in_stack_fffffffffffffe68,in_stack_fffffffffffffe80);
        dVar14 = math_big_nat_trunc(dVar14);
        z_05.cap = in_stack_fffffffffffffe60;
        z_05.array = &(in_stack_fffffffffffffe50._type)->Size_;
        z_05.len = (int)in_stack_fffffffffffffe50.data;
        local_e8 = extraout_RBX_06;
        math_big_nat_sqr(z_05,in_stack_fffffffffffffe68,in_stack_fffffffffffffe80);
        dVar14 = math_big_nat_trunc(dVar14);
        z_06.cap = in_stack_fffffffffffffe60;
        z_06.array = &(in_stack_fffffffffffffe50._type)->Size_;
        z_06.len = (int)in_stack_fffffffffffffe50.data;
        math_big_nat_sqr(z_06,in_stack_fffffffffffffe68,in_stack_fffffffffffffe80);
        dVar14 = math_big_nat_trunc(dVar14);
        logM = (uint)extraout_RAX_16;
        local_120 = extraout_RBX_07;
        in_RCX = extraout_RCX_06;
      }
      z_02.cap = in_stack_fffffffffffffe60;
      z_02.array = &(in_stack_fffffffffffffe50._type)->Size_;
      z_02.len = (int)in_stack_fffffffffffffe50.data;
      ~r0_01.len = local_120;
      ~r0_01.array = (math_big_Word *)in_stack_fffffffffffffe98;
      ~r0_01.cap = (int)in_RCX;
      local_c8 = (undefined8 *)logM;
      math_big_nat_mul(z_02,in_stack_fffffffffffffe68,in_stack_fffffffffffffe80,~r0_01);
      iVar8 = local_120;
      pmVar7 = in_RCX;
      dVar14 = math_big_nat_trunc(dVar14);
      bVar1 = true;
      uVar5 = local_e0;
      logM = (uint)extraout_RAX_15;
      puVar9 = local_c8;
      local_120 = extraout_RBX_05;
      in_RCX = extraout_RCX_05;
    }
    uVar13 = local_118 - 1;
  }
  local_d0[1] = iVar8;
  local_d0[2] = pmVar7;
  local_d8 = (undefined8 *)logM;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_05 = extraout_R9;
    extraout_R11_05[1] = *extraout_RCX_04;
    local_d0 = extraout_RCX_04;
    puVar9 = extraout_R9;
  }
  *local_d0 = puVar9;
  sync___Pool__Put(&math_big_natPool,in_stack_fffffffffffffe50);
  i_3 = 0;
  while (pmVar7 = (math_big_nat *)local_120, i_3 < 0x10) {
    local_e8 = i_3 + 1;
    sync___Pool__Put(&math_big_natPool,in_stack_fffffffffffffe50);
    i_3 = local_e8;
  }
  while ((0 < (int)pmVar7 && (local_d8[(int)((int)&pmVar7[-1].cap + 7)] == 0))) {
    pmVar7 = (math_big_nat *)((int)&pmVar7[-1].cap + 7);
  }
  if (in_RCX < pmVar7) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  return;
}



void math_big_nat_expNNMontgomery
               (math_big_nat z,math_big_nat x,math_big_nat y,math_big_nat m,math_big_nat ~r0)

{
  math_big_nat z_00;
  math_big_nat z_01;
  math_big_nat x_00;
  math_big_nat x_01;
  math_big_nat x_02;
  math_big_nat x_03;
  math_big_nat x_04;
  math_big_nat x_05;
  math_big_nat x_06;
  math_big_nat x_07;
  math_big_nat x_08;
  math_big_nat x_09;
  math_big_nat x_10;
  math_big_nat ~r0_00;
  math_big_nat ~r0_01;
  math_big_nat ~r0_02;
  math_big_nat ~r0_03;
  math_big_nat ~r0_04;
  math_big_nat ~r0_05;
  math_big_nat ~r0_06;
  math_big_nat ~r0_07;
  math_big_nat ~r0_08;
  math_big_Word *pmVar1;
  math_big_Word *in_RAX;
  math_big_Word *extraout_RAX;
  math_big_Word *extraout_RAX_00;
  math_big_Word *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  math_big_Word *extraout_RAX_03;
  math_big_Word *extraout_RAX_04;
  math_big_Word *extraout_RAX_05;
  math_big_Word *extraout_RAX_06;
  math_big_Word *extraout_RAX_07;
  math_big_Word *extraout_RAX_08;
  math_big_Word *extraout_RAX_09;
  void *extraout_RAX_10;
  int iVar2;
  void *extraout_RAX_11;
  math_big_Word *extraout_RAX_12;
  math_big_Word extraout_RAX_13;
  math_big_Word extraout_RAX_14;
  math_big_Word *extraout_RAX_15;
  math_big_Word *extraout_RAX_16;
  int in_RCX;
  int extraout_RCX;
  int extraout_RCX_00;
  int extraout_RCX_01;
  void *extraout_RCX_02;
  void *extraout_RCX_03;
  int extraout_RCX_04;
  int extraout_RCX_05;
  int extraout_RCX_06;
  int iVar3;
  math_big_Word t;
  int j;
  int iVar4;
  int extraout_RBX;
  int extraout_RBX_00;
  int extraout_RBX_01;
  void *extraout_RBX_02;
  void *extraout_RBX_03;
  int extraout_RBX_04;
  int extraout_RBX_05;
  int extraout_RBX_06;
  int extraout_RBX_07;
  int extraout_RBX_08;
  int in_RSI;
  int extraout_RSI;
  int extraout_RSI_00;
  void *extraout_RSI_01;
  int i_3;
  void *in_RDI;
  void *extraout_RDI;
  math_big_Word *~r0_09;
  void *extraout_RDI_00;
  void *extraout_RDI_01;
  void *extraout_RDI_02;
  void *extraout_RDI_03;
  void *extraout_RDI_04;
  void *~r0_10;
  void *extraout_RDI_05;
  int in_R8;
  int extraout_R8;
  int extraout_R8_00;
  void *extraout_R8_01;
  int iVar5;
  int in_R9;
  int in_R10;
  math_big_Word yi;
  int iVar6;
  math_big_Word k0;
  int i;
  int iVar7;
  int i_2;
  int iVar8;
  int unaff_R14;
  math_big_Word *in_stack_fffffffffffffd30;
  int in_stack_fffffffffffffd38;
  int in_stack_fffffffffffffd40;
  undefined8 in_stack_fffffffffffffd48;
  undefined8 in_stack_fffffffffffffd50;
  int in_stack_fffffffffffffd58;
  math_big_nat in_stack_fffffffffffffd60;
  math_big_nat in_stack_fffffffffffffd78;
  undefined in_stack_fffffffffffffd90 [16];
  int in_stack_fffffffffffffda0;
  int iVar9;
  int local_250;
  int local_248;
  void *local_240;
  void *local_238;
  int local_230;
  int local_228;
  int local_220;
  int local_218;
  int i_1;
  int local_208;
  int local_200;
  undefined8 local_1f8;
  int local_1f0;
  int local_1e8;
  int local_1e0;
  int local_1d8;
  int local_1d0;
  int local_1c8;
  math_big_Word *local_1c0;
  math_big_Word *local_1b8;
  math_big_Word *local_1b0;
  math_big_Word *local_1a8;
  math_big_Word *local_198;
  math_big_Word local_190;
  math_big_nat powers [16];
  
  while (&local_250 <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (z.len < in_RSI) {
    in_stack_fffffffffffffd30 = z.array;
    in_stack_fffffffffffffd38 = z.len;
    in_stack_fffffffffffffd40 = z.cap;
    math_big_nat_div(0,0);
    in_RSI = extraout_RSI;
    in_RDI = extraout_RDI;
    in_R8 = extraout_R8;
  }
  local_1d0 = in_RSI;
  local_1c8 = in_R8;
  if (in_RSI < z.len) {
    runtime_makeslicecopy((internal_abi_Type *)&DAT_00808860,z.len,in_RSI,in_RDI,(void *)in_RSI);
    local_1d0 = z.len;
    local_1c8 = z.len;
  }
  if (z.len == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  local_228 = -(*z.array - 2);
  iVar3 = *z.array - 1;
  for (i = 1; i < 0x40; i = i << 1) {
    iVar3 = iVar3 * iVar3;
    local_228 = local_228 * (iVar3 + 1);
  }
  local_1f8 = 1;
  z_00.len = in_stack_fffffffffffffd38;
  z_00.array = in_stack_fffffffffffffd30;
  z_00.cap = in_stack_fffffffffffffd40;
  x_00.len = in_stack_fffffffffffffd50;
  x_00.array = (math_big_Word *)in_stack_fffffffffffffd48;
  x_00.cap = in_stack_fffffffffffffd58;
  math_big_nat_shl(z_00,x_00,0,in_stack_fffffffffffffd60);
  local_238 = (void *)extraout_RCX;
  local_1b8 = extraout_RAX;
  math_big_nat_div(0,0);
  local_208 = extraout_RSI_00;
  local_200 = extraout_R8_00;
  if (extraout_RSI_00 < z.len) {
    iVar3 = z.len;
    local_200 = (int)local_238;
    local_208 = extraout_RSI_00;
    local_1b0 = ~r0_09;
    if ((int)local_238 < z.len) {
      if (z.len == 1) {
        runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,~r0_09);
        local_200 = 1;
        iVar3 = 1;
        local_1b8 = extraout_RAX_00;
      }
      else {
        local_248 = z.len + 4;
        runtime_makeslice((internal_abi_Type *)&DAT_00808860,z.len,local_248,~r0_09);
        local_200 = local_248;
        local_1b8 = extraout_RAX_01;
      }
    }
    iVar2 = iVar3;
    if (local_208 < iVar3) {
      iVar2 = local_208;
    }
    local_208 = iVar3;
    local_238 = (void *)local_200;
    if (local_1b0 != local_1b8) {
      local_1d8 = iVar3;
      local_198 = local_1b8;
      runtime_memmove(local_1b8,local_1b0,iVar2 << 3);
      local_208 = local_1d8;
      local_238 = (void *)local_200;
      local_1b8 = local_198;
    }
  }
  runtime_makeslice((internal_abi_Type *)&DAT_00808860,z.len,z.len,local_1b8);
  *extraout_RAX_02 = 1;
  iVar3 = -local_228;
  local_228 = iVar3;
  FUN_0046cd46();
  x_01.len = z.len;
  x_01.array = (math_big_Word *)iVar3;
  x_01.cap = in_stack_fffffffffffffd58;
  ~r0_00.cap = in_stack_fffffffffffffda0;
  ~r0_00.array = (math_big_Word *)in_stack_fffffffffffffd90._0_8_;
  ~r0_00.len = in_stack_fffffffffffffd90._8_8_;
  math_big_nat_montgomery
            (z,x_01,in_stack_fffffffffffffd60,in_stack_fffffffffffffd78,
             (math_big_Word)powers[0].array,0,~r0_00);
  x_02.len = z.len;
  x_02.array = (math_big_Word *)local_228;
  x_02.cap = in_stack_fffffffffffffd58;
  ~r0_01.cap = in_stack_fffffffffffffda0;
  ~r0_01.array = (math_big_Word *)in_stack_fffffffffffffd90._0_8_;
  ~r0_01.len = in_stack_fffffffffffffd90._8_8_;
  powers[0].array = extraout_RAX_03;
  powers[0].len = extraout_RBX;
  math_big_nat_montgomery
            (z,x_02,in_stack_fffffffffffffd60,in_stack_fffffffffffffd78,
             (math_big_Word)powers[1].array,powers[1].len,~r0_01);
  powers[1].array = extraout_RAX_04;
  powers[1].len = extraout_RBX_00;
  powers[1].cap = extraout_RCX_00;
  iVar3 = 2;
  ~r0_10 = extraout_RDI_00;
  while (iVar3 < 0x10) {
    local_1c8 = iVar3 * 3;
    x_03.len = z.len;
    x_03.array = (math_big_Word *)local_228;
    x_03.cap = in_stack_fffffffffffffd58;
    ~r0_02.cap = in_stack_fffffffffffffda0;
    ~r0_02.array = (math_big_Word *)in_stack_fffffffffffffd90._0_8_;
    ~r0_02.len = in_stack_fffffffffffffd90._8_8_;
    i_1 = iVar3;
    math_big_nat_montgomery
              (z,x_03,in_stack_fffffffffffffd60,in_stack_fffffffffffffd78,
               (math_big_Word)powers[iVar3].array,powers[iVar3].len,~r0_02);
    (&powers[0].array)[local_1c8] = extraout_RAX_05;
    (&powers[0].len)[local_1c8] = extraout_RBX_01;
    (&powers[0].cap)[local_1c8] = extraout_RCX_01;
    ~r0_10 = extraout_RDI_01;
    iVar3 = i_1 + 1;
  }
  iVar3 = z.len;
  local_250 = in_RCX;
  if (in_RCX < z.len) {
    if (z.len == 1) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,~r0_10);
      local_250 = 1;
      iVar3 = 1;
      in_RAX = extraout_RAX_06;
      ~r0_10 = extraout_RDI_02;
    }
    else {
      local_250 = z.len + 4;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,z.len,local_250,~r0_10);
      in_RAX = extraout_RAX_07;
      ~r0_10 = extraout_RDI_03;
    }
  }
  iVar2 = iVar3;
  if (powers[0].len < iVar3) {
    iVar2 = powers[0].len;
  }
  local_1c0 = in_RAX;
  if (in_RAX != powers[0].array) {
    runtime_memmove(in_RAX,powers[0].array,iVar2 << 3);
    ~r0_10 = extraout_RDI_04;
  }
  iVar2 = z.len;
  if ((int)local_238 < z.len) {
    if (z.len == 1) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,~r0_10);
      iVar2 = 1;
      local_1b8 = extraout_RAX_08;
    }
    else {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,z.len,z.len + 4,~r0_10);
      local_1b8 = extraout_RAX_09;
    }
  }
  iVar7 = in_R10 + -1;
  iVar4 = local_250;
  iVar5 = local_228;
  iVar8 = iVar7;
  iVar9 = iVar3;
  local_218 = iVar7;
  while (-1 < iVar8) {
    iVar6 = *(int *)(in_R9 + iVar8 * 8);
    local_1e8 = iVar2;
    local_1c8 = iVar8;
    for (local_220 = 0; local_1d0 = iVar4, local_220 < 0x40; local_220 = local_220 + 4) {
      local_230 = iVar6;
      if ((local_1c8 != iVar7) || (iVar7 = iVar2, local_220 != 0)) {
        x_07.len = z.len;
        x_07.array = (math_big_Word *)iVar5;
        x_07.cap = in_stack_fffffffffffffd58;
        ~r0_05.cap = iVar9;
        ~r0_05.array = (math_big_Word *)in_stack_fffffffffffffd90._0_8_;
        ~r0_05.len = in_stack_fffffffffffffd90._8_8_;
        local_1e0 = iVar3;
        local_1a8 = local_1c0;
        math_big_nat_montgomery
                  (z,x_07,in_stack_fffffffffffffd60,in_stack_fffffffffffffd78,
                   (math_big_Word)local_1b8,iVar2,~r0_05);
        x_08.len = z.len;
        x_08.array = (math_big_Word *)local_228;
        x_08.cap = in_stack_fffffffffffffd58;
        ~r0_06.cap = iVar9;
        ~r0_06.array = (math_big_Word *)in_stack_fffffffffffffd90._0_8_;
        ~r0_06.len = in_stack_fffffffffffffd90._8_8_;
        local_240 = (void *)extraout_RBX_05;
        local_1b8 = (math_big_Word *)extraout_RAX_13;
        math_big_nat_montgomery
                  (z,x_08,in_stack_fffffffffffffd60,in_stack_fffffffffffffd78,
                   (math_big_Word)local_1a8,local_1e0,~r0_06);
        x_09.len = z.len;
        x_09.array = (math_big_Word *)local_228;
        x_09.cap = in_stack_fffffffffffffd58;
        ~r0_07.cap = iVar9;
        ~r0_07.array = (math_big_Word *)in_stack_fffffffffffffd90._0_8_;
        ~r0_07.len = in_stack_fffffffffffffd90._8_8_;
        local_1d8 = extraout_RCX_05;
        local_1d0 = extraout_RBX_06;
        local_190 = extraout_RAX_14;
        math_big_nat_montgomery
                  (z,x_09,in_stack_fffffffffffffd60,in_stack_fffffffffffffd78,
                   (math_big_Word)local_1b8,(int)local_240,~r0_07);
        x_10.len = z.len;
        x_10.array = (math_big_Word *)local_228;
        x_10.cap = in_stack_fffffffffffffd58;
        ~r0_08.cap = iVar9;
        ~r0_08.array = (math_big_Word *)in_stack_fffffffffffffd90._0_8_;
        ~r0_08.len = in_stack_fffffffffffffd90._8_8_;
        local_240 = (void *)extraout_RBX_07;
        local_1b8 = extraout_RAX_15;
        math_big_nat_montgomery
                  (z,x_10,in_stack_fffffffffffffd60,in_stack_fffffffffffffd78,local_190,local_1d0,
                   ~r0_08);
        iVar2 = (int)local_240;
        iVar3 = extraout_RBX_08;
        local_1c0 = extraout_RAX_16;
        iVar5 = local_228;
        iVar4 = extraout_RCX_06;
        iVar7 = local_1f0;
      }
      local_1f0 = iVar7;
      local_238 = (void *)iVar4;
      x_06.len = z.len;
      x_06.array = (math_big_Word *)iVar5;
      x_06.cap = in_stack_fffffffffffffd58;
      ~r0_04.cap = iVar9;
      ~r0_04.array = (math_big_Word *)in_stack_fffffffffffffd90._0_8_;
      ~r0_04.len = in_stack_fffffffffffffd90._8_8_;
      local_240 = (void *)iVar3;
      local_1d0 = iVar2;
      pmVar1 = local_1c0;
      math_big_nat_montgomery
                (z,x_06,in_stack_fffffffffffffd60,in_stack_fffffffffffffd78,(math_big_Word)local_1b8
                 ,iVar2,~r0_04);
      local_1b8 = pmVar1;
      iVar6 = local_230 << 4;
      iVar2 = (int)local_240;
      iVar3 = extraout_RBX_04;
      iVar4 = extraout_RCX_04;
      local_1c0 = extraout_RAX_12;
      iVar5 = local_228;
      iVar7 = local_218;
    }
    iVar8 = local_1c8 + -1;
  }
  x_04.len = z.len;
  x_04.array = (math_big_Word *)iVar5;
  x_04.cap = in_stack_fffffffffffffd58;
  ~r0_03.cap = iVar9;
  ~r0_03.array = (math_big_Word *)in_stack_fffffffffffffd90._0_8_;
  ~r0_03.len = in_stack_fffffffffffffd90._8_8_;
  iVar3 = z.len;
  math_big_nat_montgomery
            (z,x_04,in_stack_fffffffffffffd60,in_stack_fffffffffffffd78,(math_big_Word)local_1b8,
             iVar2,~r0_03);
  local_240 = extraout_RBX_02;
  local_238 = extraout_RCX_02;
  local_1b8 = (math_big_Word *)extraout_RAX_10;
  iVar2 = math_big_nat_cmp(extraout_RAX_10,extraout_RBX_02);
  if (-1 < iVar2) {
    z_01.len = z.len;
    z_01.array = z.array;
    z_01.cap = z.cap;
    x_05.len = iVar3;
    x_05.array = (math_big_Word *)iVar5;
    x_05.cap = in_stack_fffffffffffffd58;
    math_big_nat_sub(z_01,x_05,in_stack_fffffffffffffd60,in_stack_fffffffffffffd78);
    local_240 = extraout_RBX_03;
    local_238 = extraout_RCX_03;
    local_1b8 = (math_big_Word *)extraout_RAX_11;
    iVar3 = math_big_nat_cmp(extraout_RAX_11,extraout_RBX_03);
    if (-1 < iVar3) {
      math_big_nat_div(0,0);
      local_240 = extraout_RSI_01;
      local_238 = extraout_R8_01;
      local_1b8 = (math_big_Word *)extraout_RDI_05;
    }
  }
  while ((0 < (int)local_240 && (*(int *)((int)local_1b8 + (int)local_240 * 8 + -8) == 0))) {
    local_240 = (void *)((int)local_240 + -1);
  }
  if (local_238 < local_240) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  return;
}



void math_big_nat_setBytes(math_big_nat z,__uint8 buf,math_big_nat ~r0)

{
  int in_RAX;
  int extraout_RAX;
  int extraout_RAX_00;
  uint in_RCX;
  int i_1;
  uint in_RSI;
  int i;
  void *in_RDI;
  int in_R8;
  int iVar1;
  uint s;
  uint uVar2;
  int k;
  uint uVar3;
  math_big_Word d;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  i_1 = (int)(((uint)((int)(in_RSI + 7) >> 0x3f) >> 0x3d) + in_RSI + 7) >> 3;
  if ((int)in_RCX < i_1) {
    if (i_1 == 1) {
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,in_RDI);
      i_1 = 1;
      in_RCX = 1;
      in_RAX = extraout_RAX;
    }
    else {
      in_RCX = i_1 + 4;
      runtime_makeslice((internal_abi_Type *)&DAT_00808860,i_1,in_RCX,in_RDI);
      in_RAX = extraout_RAX_00;
    }
  }
  else if (in_RCX < (uint)i_1) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  uVar2 = 0;
  i = in_RSI;
  while (7 < i) {
    iVar1 = in_R8 - i;
    i = i - 8;
    uVar3 = *(uint *)((int)in_RDI + (-(iVar1 + 8) >> 0x3f & i));
    if ((uint)i_1 <= uVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(uint *)(in_RAX + uVar2 * 8) =
         uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |
         (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |
         (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;
    uVar2 = uVar2 + 1;
  }
  if (0 < i) {
    uVar3 = 0;
    uVar2 = 0;
    while (0 < i) {
      if (in_RSI <= i - 1U) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      uVar3 = uVar3 | (uint)*(byte *)((i - 1U) + (int)in_RDI) << ((byte)uVar2 & 0x3f) &
                      -(uint)(uVar2 < 0x40);
      i = i - 1U;
      uVar2 = uVar2 + 8;
    }
    if ((uint)i_1 <= i_1 - 1U) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(uint *)(in_RAX + -8 + i_1 * 8) = uVar3;
  }
  for (; (0 < i_1 && (*(int *)(in_RAX + -8 + i_1 * 8) == 0)); i_1 = i_1 - 1) {
  }
  if (in_RCX < (uint)i_1) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  return;
}



double math_big_nat_sqrt(double __x)

{
  math_big_nat z;
  math_big_nat z_00;
  math_big_nat z_01;
  math_big_nat z_02;
  undefined *puVar1;
  void *pvVar2;
  void *in_RAX;
  int iVar3;
  void *extraout_RAX;
  void *extraout_RAX_00;
  uint s;
  void *extraout_RAX_01;
  uint s_00;
  void *extraout_RAX_02;
  void *extraout_RAX_03;
  void *extraout_RAX_04;
  undefined *in_RCX;
  int extraout_RCX;
  int extraout_RCX_00;
  undefined *puVar4;
  undefined *extraout_RBX;
  undefined *puVar5;
  undefined *extraout_RBX_00;
  undefined *in_RSI;
  int i;
  void *in_RDI;
  void *~r0;
  void *~r0_00;
  int in_R8;
  uint top;
  uint uVar6;
  int unaff_R14;
  void *pvStack0000000000000008;
  undefined *puStack0000000000000018;
  void *pvStack0000000000000020;
  undefined *puStack0000000000000028;
  int iStack0000000000000030;
  undefined8 in_stack_ffffffffffffff08;
  undefined8 in_stack_ffffffffffffff10;
  int in_stack_ffffffffffffff18;
  math_big_nat in_stack_ffffffffffffff20;
  math_big_nat in_stack_ffffffffffffff38;
  math_big_nat in_stack_ffffffffffffff50;
  undefined *local_78;
  undefined *local_70;
  undefined *puStack_68;
  undefined *local_60;
  undefined *puStack_58;
  int n;
  int iStack_48;
  void *local_38;
  void *pvStack_30;
  void *pvStack_20;
  void *pvStack_18;
  void *local_10;
  
  pvStack0000000000000008 = in_RAX;
  puStack0000000000000018 = in_RCX;
  puStack0000000000000028 = in_RSI;
  pvStack0000000000000020 = in_RDI;
  iStack0000000000000030 = in_R8;
  while (&local_78 <= *(undefined ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_10 = pvStack0000000000000020;
  iVar3 = math_big_nat_cmp(pvStack0000000000000020,puStack0000000000000028);
  if (iVar3 < 1) {
    local_70 = puStack0000000000000028;
    if ((int)puStack0000000000000018 < (int)puStack0000000000000028) {
      if (puStack0000000000000028 == &DAT_00000001) {
        runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,~r0);
        local_70 = &DAT_00000001;
        puStack0000000000000018 = (undefined *)0x1;
        pvStack0000000000000008 = extraout_RAX;
      }
      else {
        puVar4 = puStack0000000000000028 + 4;
        runtime_makeslice((internal_abi_Type *)&DAT_00808860,(int)puStack0000000000000028,
                          (int)puVar4,~r0);
        local_70 = puStack0000000000000028;
        puStack0000000000000018 = puVar4;
        pvStack0000000000000008 = extraout_RAX_00;
      }
    }
    puVar4 = local_70;
    if ((int)puStack0000000000000028 < (int)local_70) {
      puVar4 = puStack0000000000000028;
    }
    if (local_10 != pvStack0000000000000008) {
      local_60 = puStack0000000000000018;
      runtime_memmove(pvStack0000000000000008,local_10,(int)puVar4 << 3);
    }
    return __x;
  }
  puVar4 = puStack0000000000000018;
  if (((puStack0000000000000018 != (undefined *)0x0) && (iStack0000000000000030 != 0)) &&
     ((int)local_10 + iStack0000000000000030 * 8 + -8 ==
      (int)pvStack0000000000000008 + (int)puStack0000000000000018 * 8 + -8)) {
    pvStack0000000000000008 = (void *)0x0;
    puVar4 = (undefined *)0x0;
  }
  z.len = in_stack_ffffffffffffff10;
  z.array = (math_big_Word *)in_stack_ffffffffffffff08;
  z.cap = in_stack_ffffffffffffff18;
  local_38 = pvStack0000000000000008;
  math_big_nat_setUint64(z,(uint64)pvStack0000000000000008,in_stack_ffffffffffffff20);
  if (-1 < (int)(puStack0000000000000028 + -1)) {
    uVar6 = *(uint *)((int)local_10 + (int)puStack0000000000000028 * 8 + -8);
    uVar6 = uVar6 >> 1 | uVar6;
    uVar6 = uVar6 >> 2 | uVar6;
    uVar6 = uVar6 >> 4 | uVar6;
    uVar6 = uVar6 >> 8 | uVar6;
    uVar6 = uVar6 >> 0x10 | uVar6;
    uVar6 = uVar6 >> 0x20 | uVar6;
    iVar3 = 0x3f;
    if (uVar6 != 0) {
      for (; uVar6 >> iVar3 == 0; iVar3 = iVar3 + -1) {
      }
    }
  }
  z_00.len = in_stack_ffffffffffffff10;
  z_00.array = (math_big_Word *)in_stack_ffffffffffffff08;
  z_00.cap = in_stack_ffffffffffffff18;
  math_big_nat_shl(z_00,in_stack_ffffffffffffff20,s,in_stack_ffffffffffffff38);
  puStack_58 = (undefined *)0x0;
  pvStack_18 = (void *)0x0;
  n = 0;
  pvStack_20 = extraout_RAX_01;
  iStack_48 = extraout_RCX;
  puVar5 = extraout_RBX;
  while( true ) {
    puVar1 = puVar5;
    pvVar2 = pvStack_20;
    math_big_nat_div((int)pvStack_18,(int)puStack_58);
    pvStack_18 = pvVar2;
    puStack_58 = puVar1;
    z_01.len = (int)puVar5;
    z_01.array = (math_big_Word *)pvStack_20;
    z_01.cap = iStack_48;
    math_big_nat_add(z_01,in_stack_ffffffffffffff20,in_stack_ffffffffffffff38,
                     in_stack_ffffffffffffff50);
    z_02.len = (int)puVar5;
    z_02.array = (math_big_Word *)pvStack_20;
    z_02.cap = iStack_48;
    math_big_nat_shr(z_02,in_stack_ffffffffffffff20,s_00,in_stack_ffffffffffffff38);
    iStack_48 = extraout_RCX_00;
    pvStack_20 = extraout_RAX_02;
    iVar3 = math_big_nat_cmp(extraout_RAX_02,extraout_RBX_00);
    if (-1 < iVar3) break;
    n = n + 1;
    puVar5 = extraout_RBX_00;
  }
  if ((n & 1U) != 0) {
    local_78 = puStack_58;
    pvStack_30 = local_38;
    if ((int)puVar4 < (int)puStack_58) {
      if (puStack_58 == &DAT_00000001) {
        runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,~r0_00);
        puVar4 = (undefined *)0x1;
        local_78 = &DAT_00000001;
        pvStack_30 = extraout_RAX_03;
      }
      else {
        puVar4 = puStack_58 + 4;
        runtime_makeslice((internal_abi_Type *)&DAT_00808860,(int)puStack_58,(int)puVar4,~r0_00);
        local_78 = puStack_58;
        pvStack_30 = extraout_RAX_04;
      }
    }
    puVar5 = local_78;
    if ((int)puStack_58 < (int)local_78) {
      puVar5 = puStack_58;
    }
    if (pvStack_30 != pvStack_18) {
      puStack_68 = puVar4;
      runtime_memmove(pvStack_30,pvStack_18,(int)puVar5 << 3);
    }
    return __x;
  }
  return __x;
}



void math_big_nat_subMod2N(math_big_nat z,math_big_nat x,math_big_nat y,uint n,math_big_nat ~r0)

{
  math_big_nat ~r0_00;
  math_big_nat ~r0_01;
  math_big_nat ~r0_02;
  void *extraout_RAX;
  void *extraout_RAX_00;
  void *extraout_RAX_01;
  void *oldPtr;
  void *extraout_RAX_02;
  int in_RCX;
  int extraout_RCX;
  int extraout_RCX_00;
  uint extraout_RCX_01;
  uint oldCap;
  uint extraout_RCX_02;
  int i_1;
  math_big_Word *pmVar1;
  int i_2;
  void *extraout_RBX;
  void *extraout_RBX_00;
  int extraout_RBX_01;
  int extraout_RBX_02;
  uint extraout_RBX_03;
  uint extraout_RBX_04;
  int i;
  void *in_RSI;
  void *in_RDI;
  int in_R8;
  int in_R9;
  int in_R10;
  int in_R11;
  uint top;
  int iVar2;
  uint uVar3;
  uint top_1;
  int unaff_R14;
  double in_XMM0_Qa;
  math_big_nat in_stack_ffffffffffffff78;
  math_big_nat in_stack_ffffffffffffff90;
  math_big_nat in_stack_ffffffffffffffa8;
  
  while (&stack0xfffffffffffffff8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((int)in_RSI + -1 < 0) {
    pmVar1 = (math_big_Word *)0x0;
  }
  else {
    uVar3 = *(uint *)((int)in_RDI + (int)in_RSI * 8 + -8);
    uVar3 = uVar3 | uVar3 >> 1;
    uVar3 = uVar3 | uVar3 >> 2;
    uVar3 = uVar3 | uVar3 >> 4;
    uVar3 = uVar3 | uVar3 >> 8;
    uVar3 = uVar3 | uVar3 >> 0x10;
    uVar3 = uVar3 >> 0x20 | uVar3;
    iVar2 = 0x3f;
    if (uVar3 != 0) {
      for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {
      }
    }
    if (uVar3 == 0) {
      iVar2 = -1;
    }
    pmVar1 = (math_big_Word *)(((int)in_RSI + -1) * 0x40 + iVar2 + 1);
  }
  if (z.array < pmVar1) {
    if (((in_RCX == 0) || (in_R8 == 0)) || ((int)in_RDI + in_R8 * 8 + -8 != n + in_RCX * 8 + -8)) {
      in_XMM0_Qa = math_big_nat_trunc(in_XMM0_Qa);
      in_RSI = extraout_RBX_00;
      in_RDI = extraout_RAX_00;
    }
    else {
      in_XMM0_Qa = math_big_nat_trunc(in_XMM0_Qa);
      in_RSI = extraout_RBX;
      in_RDI = extraout_RAX;
    }
  }
  if (in_R10 + -1 < 0) {
    pmVar1 = (math_big_Word *)0x0;
  }
  else {
    uVar3 = *(uint *)(in_R9 + -8 + in_R10 * 8);
    uVar3 = uVar3 | uVar3 >> 1;
    uVar3 = uVar3 | uVar3 >> 2;
    uVar3 = uVar3 | uVar3 >> 4;
    uVar3 = uVar3 | uVar3 >> 8;
    uVar3 = uVar3 | uVar3 >> 0x10;
    uVar3 = uVar3 >> 0x20 | uVar3;
