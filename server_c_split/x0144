        local_d8 = ~r0_13;
        local_68 = extraout_RAX_15;
        runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_13);
        extraout_RAX_16[1] = local_d8;
        local_38._8_8_ = extraout_RAX_16;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_03 = local_68;
          local_38._8_8_ = extraout_RAX_17;
        }
        *(undefined8 *)local_38._8_8_ = local_68;
        iStack_18 = 0;
        local_38._0_8_ = go_itab__errors_errorString_error;
        (**local_10)();
        return;
      }
      if (local_a8 < 0x1c) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      runtime_makeslice((internal_abi_Type *)&DAT_00807920,size,size,pvVar7);
      buf_02.cap = (int)in_stack_fffffffffffffeb8;
      buf_02.array = in_stack_fffffffffffffea8.str;
      buf_02.len = in_stack_fffffffffffffea8.len;
      ~r0_03.data = in_stack_fffffffffffffec8;
      ~r0_03.tab = in_stack_fffffffffffffec0;
      local_40 = (sdword *)off_03;
      time_preadn(local_b0,buf_02,off_03,~r0_03);
      if (extraout_RAX_11 != 0) {
        a1_02.len = (int)in_stack_fffffffffffffec0;
        a1_02.str = in_stack_fffffffffffffeb8;
        ~r0_06.len = in_stack_fffffffffffffed0;
        ~r0_06.str = in_stack_fffffffffffffec8;
        runtime_concatstring2((runtime_tmpBuf *)0x0,in_stack_fffffffffffffea8,a1_02,~r0_06);
        local_70 = extraout_RAX_12;
        runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_12);
        extraout_RAX_13[1] = ~r0_12;
        local_38._8_8_ = extraout_RAX_13;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_02 = local_70;
          local_38._8_8_ = extraout_RAX_14;
        }
        *(undefined8 *)local_38._8_8_ = local_70;
        iStack_18 = 0;
        local_38._0_8_ = go_itab__errors_errorString_error;
        (**local_10)();
        return;
      }
      local_28 = (int)local_40;
      iStack_20 = size;
      iStack_18 = size;
      (**local_10)();
      return;
    }
  }
  local_28 = 0;
  local_38._8_8_ = &DAT_0095a648;
  local_38._0_8_ = go_itab_syscall_Errno_error;
  (**local_10)();
  return;
}



// WARNING: Unknown calling convention

void time_loadTzinfoFromZip_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  time_closefd(*(uintptr *)(in_RDX + 8));
  return;
}


/*
Unable to decompile 'time.loadTzinfo'
Cause: 
Low-level Error: Overlapping input varnodes
*/


void time_loadLocation(string name,__string sources,time_Location *z,error firstErr)

{
  __uint8 data;
  __uint8 ~r0;
  __uint8 data_00;
  __uint8 data_01;
  string ~r0_00;
  string ~r0_01;
  __uint8 ~r0_02;
  __uint8 ~r0_03;
  error ~r1;
  error ~r1_00;
  error ~r1_01;
  error ~r1_02;
  error ~r1_03;
  byte extraout_AL;
  byte bVar1;
  byte extraout_AL_00;
  byte extraout_AL_01;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *puVar2;
  int in_RCX;
  void *extraout_RCX;
  undefined1 *extraout_RCX_00;
  void *extraout_RCX_01;
  undefined1 *puVar3;
  void *extraout_RCX_02;
  int iVar4;
  error *in_RBX;
  undefined1 *extraout_RBX;
  undefined1 *extraout_RBX_00;
  runtime_itab *extraout_RBX_01;
  runtime_itab *prVar5;
  undefined1 *extraout_RBX_02;
  void *~r0_04;
  undefined1 *puVar6;
  void *extraout_RSI;
  undefined1 *puVar7;
  void *extraout_RSI_00;
  void *pvVar8;
  int in_RDI;
  undefined1 *extraout_RDI;
  void *extraout_RDI_00;
  void *x;
  undefined1 *extraout_RDI_01;
  undefined8 *extraout_R11;
  int unaff_R14;
  bool bVar9;
  string in_stack_ffffffffffffff48;
  string in_stack_ffffffffffffff58;
  uint8 *in_stack_ffffffffffffff68;
  runtime_itab *in_stack_ffffffffffffff70;
  void *in_stack_ffffffffffffff78;
  runtime_itab *in_stack_ffffffffffffff80;
  undefined1 *in_stack_ffffffffffffff88;
  uint8 local_58 [32];
  undefined8 local_38 [2];
  void *local_28;
  void *local_20;
  int local_18;
  void *local_10;
  
  while (local_38 <= *(undefined8 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar4 = 0;
  puVar6 = (undefined1 *)0x0;
  pvVar8 = (void *)0x0;
  while( true ) {
    local_10 = pvVar8;
    if (in_RDI <= iVar4) {
      puVar7 = puVar6;
      if (time_loadFromEmbeddedTZData != (func_string___string__error_ **)0x0) {
        (**time_loadFromEmbeddedTZData)(in_stack_ffffffffffffff48,&z->name,in_RBX);
        puVar3 = extraout_RCX_00;
        x = extraout_RDI_00;
        if (extraout_RCX_00 == (undefined1 *)0x0) {
          ~r0.cap = (int)in_stack_ffffffffffffff68;
          ~r0.array = in_stack_ffffffffffffff58.str;
          ~r0.len = in_stack_ffffffffffffff58.len;
          runtime_stringtoslicebyte(&local_58,in_stack_ffffffffffffff48,~r0);
          data_00.cap = (int)in_stack_ffffffffffffff68;
          data_00.array = in_stack_ffffffffffffff58.str;
          data_00.len = in_stack_ffffffffffffff58.len;
          ~r1_00.data = in_stack_ffffffffffffff78;
          ~r1_00.tab = in_stack_ffffffffffffff70;
          time_LoadLocationFromTZData(in_stack_ffffffffffffff48,data_00,z,~r1_00);
          puVar3 = extraout_RBX_00;
          x = extraout_RCX_01;
          if (extraout_RBX_00 == (undefined1 *)0x0) {
            return;
          }
        }
        pvVar8 = local_10;
        if (puVar6 == (undefined1 *)0x0) {
          if (puVar3 == go_itab_syscall_Errno_error) {
            local_28 = x;
            runtime_ifaceeq((runtime_itab *)go_itab_syscall_Errno_error,x,&DAT_0095a648,SUB81(x,0));
            bVar1 = extraout_AL_00 ^ 1;
            x = local_28;
            in_stack_ffffffffffffff88 = puVar3;
          }
          else {
            bVar1 = 1;
          }
          puVar7 = puVar3;
          pvVar8 = x;
          if (bVar1 == 0) {
            puVar7 = puVar6;
            pvVar8 = local_10;
          }
        }
      }
      local_10 = pvVar8;
      runtime_gogetenv(in_stack_ffffffffffffff48,in_stack_ffffffffffffff58);
      prVar5 = extraout_RBX_01;
      if (extraout_RBX_01 == (runtime_itab *)0x0) {
        prVar5 = (runtime_itab *)runtime_defaultGOROOT.len;
      }
      bVar9 = prVar5 == (runtime_itab *)0x0;
      if (!bVar9) {
        ~r0_00.len = (int)prVar5;
        ~r0_00.str = in_stack_ffffffffffffff68;
        runtime_concatstring2
                  ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff48,in_stack_ffffffffffffff58,~r0_00)
        ;
        bVar9 = prVar5 == (runtime_itab *)0x0;
        in_stack_ffffffffffffff70 = prVar5;
      }
      puVar6 = puVar7;
      if (!bVar9) {
        ~r0_03.len = (int)in_stack_ffffffffffffff70;
        ~r0_03.array = in_stack_ffffffffffffff68;
        ~r0_03.cap = (int)in_stack_ffffffffffffff78;
        ~r1_03.data = in_stack_ffffffffffffff88;
        ~r1_03.tab = in_stack_ffffffffffffff80;
        time_loadTzinfo(in_stack_ffffffffffffff48,in_stack_ffffffffffffff58,~r0_03,~r1_03);
        pvVar8 = extraout_RSI_00;
        puVar3 = extraout_RDI_01;
        if ((extraout_RDI_01 == (undefined1 *)0x0) &&
           (data_01.cap = (int)in_stack_ffffffffffffff68,
           data_01.array = in_stack_ffffffffffffff58.str,
           data_01.len = in_stack_ffffffffffffff58.len, ~r1_01.data = in_stack_ffffffffffffff78,
           ~r1_01.tab = in_stack_ffffffffffffff70,
           time_LoadLocationFromTZData(in_stack_ffffffffffffff48,data_01,z,~r1_01),
           pvVar8 = extraout_RCX_02, puVar3 = extraout_RBX_02, extraout_RBX_02 == (undefined1 *)0x0)
           ) {
          return;
        }
        if (puVar7 == (undefined1 *)0x0) {
          if (puVar3 == go_itab_syscall_Errno_error) {
            runtime_ifaceeq((runtime_itab *)go_itab_syscall_Errno_error,pvVar8,&DAT_0095a648,true);
            bVar1 = extraout_AL_01 ^ 1;
          }
          else {
            bVar1 = 1;
          }
          puVar6 = puVar3;
          if (bVar1 == 0) {
            puVar6 = puVar7;
          }
        }
      }
      if (puVar6 != (undefined1 *)0x0) {
        return;
      }
      ~r0_01.len = (int)in_stack_ffffffffffffff70;
      ~r0_01.str = in_stack_ffffffffffffff68;
      runtime_concatstring2
                ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff48,in_stack_ffffffffffffff58,~r0_01);
      pvVar8 = ~r0_04;
      local_38[0] = extraout_RAX;
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_04);
      extraout_RAX_00[1] = pvVar8;
      puVar2 = extraout_RAX_00;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11 = local_38[0];
        puVar2 = extraout_RAX_01;
      }
      *puVar2 = local_38[0];
      return;
    }
    ~r0_02.len = (int)in_stack_ffffffffffffff70;
    ~r0_02.array = in_stack_ffffffffffffff68;
    ~r0_02.cap = (int)in_stack_ffffffffffffff78;
    ~r1_02.data = in_stack_ffffffffffffff88;
    ~r1_02.tab = in_stack_ffffffffffffff80;
    local_18 = in_RCX;
    time_loadTzinfo(in_stack_ffffffffffffff48,in_stack_ffffffffffffff58,~r0_02,~r1_02);
    local_20 = extraout_RSI;
    puVar7 = extraout_RDI;
    if ((extraout_RDI == (undefined1 *)0x0) &&
       (data.cap = (int)in_stack_ffffffffffffff68, data.array = in_stack_ffffffffffffff58.str,
       data.len = in_stack_ffffffffffffff58.len, ~r1.data = in_stack_ffffffffffffff78,
       ~r1.tab = in_stack_ffffffffffffff70,
       time_LoadLocationFromTZData(in_stack_ffffffffffffff48,data,z,~r1), local_20 = extraout_RCX,
       puVar7 = extraout_RBX, extraout_RBX == (undefined1 *)0x0)) break;
    pvVar8 = local_10;
    puVar3 = puVar6;
    if (puVar6 == (undefined1 *)0x0) {
      if (puVar7 == go_itab_syscall_Errno_error) {
        runtime_ifaceeq((runtime_itab *)go_itab_syscall_Errno_error,local_20,&DAT_0095a648,true);
        bVar1 = extraout_AL ^ 1;
      }
      else {
        bVar1 = 1;
      }
      pvVar8 = local_20;
      puVar3 = puVar7;
      if (bVar1 == 0) {
        pvVar8 = local_10;
        puVar3 = puVar6;
      }
    }
    puVar6 = puVar3;
    in_RCX = local_18 + 0x10;
    iVar4 = iVar4 + 1;
  }
  return;
}



// DWARF original prototype: void time.readFile(string name, []uint8 ~r0, []uint8 ~r0, error ~r1,
// error ~r1)

void time_readFile(string name,__uint8 ~r0,__uint8 ~r0_1,error ~r1,error ~r1_1)

{
  runtime_slice ~r0_00;
  char *in_RAX;
  int __fd;
  uintptr f;
  uint oldCap;
  uint __n;
  int n;
  void *extraout_RAX;
  uint uVar1;
  undefined8 extraout_RAX_00;
  int iVar2;
  uint extraout_RCX;
  int in_RBX;
  int extraout_RBX;
  int extraout_RBX_00;
  uint extraout_RBX_01;
  undefined8 *puVar3;
  uint newLen;
  int unaff_R14;
  byte bVar4;
  string in_stack_ffffffffffffef50;
  int in_stack_ffffffffffffef60;
  undefined local_1058 [16];
  undefined8 local_1048 [3];
  undefined auStack_1030 [4072];
  void *local_48;
  undefined local_38 [16];
  void *local_28;
  undefined local_20 [16];
  code **local_10;
  
  bVar4 = 0;
  while ((&stack0x00000000 < (undefined *)0x1030 ||
         (auStack_1030 <= *(undefined **)(unaff_R14 + 0x10)))) {
    runtime_morestack_noctxt();
  }
  local_28 = (void *)0x0;
  __fd = time_open(in_RAX,in_RBX);
  if (extraout_RBX != 0) {
    return;
  }
  local_1058._8_8_ = __fd;
  local_1058._0_8_ = time_readFile_func1;
  local_10 = (code **)local_1058;
  puVar3 = local_1048;
  for (iVar2 = 0x200; iVar2 != 0; iVar2 = iVar2 + -1) {
    *puVar3 = 0;
    puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
  }
  oldCap = 0;
  uVar1 = 0;
  local_48 = (void *)0x0;
  while( true ) {
    __n = syscall_read(__fd,local_1048,0x1000);
    if (0 < (int)__n) {
      if (0x1000 < __n) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAlen();
      }
      newLen = uVar1 + __n;
      if (oldCap < newLen) {
        ~r0_00.cap = in_stack_ffffffffffffef60;
        ~r0_00.array = in_stack_ffffffffffffef50.str;
        ~r0_00.len = in_stack_ffffffffffffef50.len;
        runtime_growslice(local_48,newLen,oldCap,__n,(internal_abi_Type *)&DAT_00807920,~r0_00);
        local_48 = extraout_RAX;
        newLen = extraout_RBX_01;
        oldCap = extraout_RCX;
      }
      runtime_memmove((void *)(uVar1 + (int)local_48),local_1048,__n);
      uVar1 = newLen;
    }
    if ((__n == 0) || (extraout_RBX_00 != 0)) break;
    if (0xa00000 < (int)uVar1) {
      runtime_convTstring(in_stack_ffffffffffffef50,in_RAX);
      local_28 = (void *)0x0;
      local_38._8_8_ = extraout_RAX_00;
      local_38._0_8_ = go_itab_time_fileSizeError_error;
      (**local_10)();
      return;
    }
  }
  local_28 = local_48;
  local_20._8_8_ = oldCap;
  local_20._0_8_ = uVar1;
  (**local_10)();
  return;
}



// WARNING: Unknown calling convention

void time_readFile_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  time_closefd(*(uintptr *)(in_RDX + 8));
  return;
}



// WARNING: Unknown calling convention

void time_initLocal(void)

{
  __string sources;
  __string sources_00;
  __string sources_01;
  error firstErr;
  error firstErr_00;
  error firstErr_01;
  time_Location *extraout_RAX;
  time_Location *z_00;
  uint8 **src;
  time_Location *z_2;
  uint8 **ppuVar1;
  uint8 **src_00;
  time_Location *z_1;
  undefined8 extraout_RAX_00;
  uint8 **src_01;
  time_Location *z;
  undefined8 extraout_RAX_01;
  undefined8 extraout_RAX_02;
  char extraout_CL;
  bool ok;
  runtime_itab *extraout_RBX;
  runtime_itab *prVar2;
  int extraout_RBX_00;
  int extraout_RBX_01;
  int extraout_RBX_02;
  undefined8 *extraout_R11;
  time_Location **extraout_R11_00;
  undefined8 *extraout_R11_01;
  undefined8 *extraout_R11_02;
  int unaff_R14;
  string in_stack_ffffffffffffff98;
  string in_stack_ffffffffffffffa8;
  int in_stack_ffffffffffffffb8;
  runtime_itab *in_stack_ffffffffffffffc0;
  void *in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  syscall_Getenv(in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8,true,true);
  if (extraout_CL == '\0') {
    sources_01.cap = in_stack_ffffffffffffffb8;
    sources_01.array = (string *)in_stack_ffffffffffffffa8.str;
    sources_01.len = in_stack_ffffffffffffffa8.len;
    firstErr_01.data = in_stack_ffffffffffffffc8;
    firstErr_01.tab = in_stack_ffffffffffffffc0;
    time_loadLocation(in_stack_ffffffffffffff98,sources_01,(time_Location *)&DAT_008b25ee,
                      firstErr_01);
    if (extraout_RBX_02 == 0) {
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_wbMove((internal_abi_Type *)&DAT_00889520,&time_localLoc,src_01);
      }
      time_localLoc.name.str = *src_01;
      FUN_0046d10c();
      time_localLoc.name.len = 5;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_02 = extraout_RAX_02;
      }
      time_localLoc.name.str = &DAT_008aecc3;
      return;
    }
  }
  else if (extraout_RBX != (runtime_itab *)0x0) {
    z_00 = extraout_RAX;
    prVar2 = extraout_RBX;
    if (*(char *)&(extraout_RAX->name).str == ':') {
      prVar2 = (runtime_itab *)((int)extraout_RBX[-1].fun + 7);
      z_00 = (time_Location *)
             ((int)&(extraout_RAX->name).str + (uint)((dword)(-(int)prVar2 >> 0x3f) & 1));
    }
    if (prVar2 != (runtime_itab *)0x0) {
      if (*(char *)&(z_00->name).str == '/') {
        sources_00.cap = in_stack_ffffffffffffffb8;
        sources_00.array = (string *)in_stack_ffffffffffffffa8.str;
        sources_00.len = in_stack_ffffffffffffffa8.len;
        firstErr_00.data = in_stack_ffffffffffffffc8;
        firstErr_00.tab = prVar2;
        time_loadLocation(in_stack_ffffffffffffff98,sources_00,z_00,firstErr_00);
        if (extraout_RBX_01 == 0) {
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_wbMove((internal_abi_Type *)&DAT_00889520,&time_localLoc,src_00);
          }
          time_localLoc.name.str = *src_00;
          FUN_0046d10c();
          time_localLoc.name.len = (int)prVar2;
          if ((((runtime_itab *)time_localLoc.name.len == (runtime_itab *)0xe) &&
              ((z_00->name).str == (uint8 *)0x636f6c2f6374652f)) &&
             ((*(sdword *)&(z_00->name).len == 0x69746c61 &&
              (*(short *)((int)&(z_00->name).len + 4) == 0x656d)))) {
            time_localLoc.name.len = 5;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier1();
              *extraout_R11 = extraout_RAX_00;
            }
            time_localLoc.name.str = &DAT_008aecc3;
            z_00 = (time_Location *)time_localLoc.name.str;
          }
          else if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_00 = z_00;
            extraout_R11_00[1] = (time_Location *)time_localLoc.name.str;
          }
          time_localLoc.name.str = (uint8 *)z_00;
          return;
        }
      }
      else if (((prVar2 != (runtime_itab *)0x0) &&
               (((prVar2 != (runtime_itab *)&DAT_00000003 || (*(short *)&(z_00->name).str != 0x5455)
                 ) || (*(char *)((int)&(z_00->name).str + 2) != 'C')))) &&
              (sources.cap = in_stack_ffffffffffffffb8,
              sources.array = (string *)in_stack_ffffffffffffffa8.str,
              sources.len = in_stack_ffffffffffffffa8.len, firstErr.data = in_stack_ffffffffffffffc8
              , firstErr.tab = in_stack_ffffffffffffffc0,
              time_loadLocation(in_stack_ffffffffffffff98,sources,z_00,firstErr),
              extraout_RBX_00 == 0)) {
        ppuVar1 = src;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_wbMove((internal_abi_Type *)&DAT_00889520,&time_localLoc,src);
        }
        time_localLoc.name.str = *ppuVar1;
        FUN_0046d10c();
        return;
      }
    }
  }
  time_localLoc.name.len = 3;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_01 = extraout_RAX_01;
  }
  time_localLoc.name.str = &DAT_008ae321;
  return;
}



// WARNING: Unknown calling convention

void time_FixedZone_func1(void)

{
  time_Location **extraout_RAX;
  time_Location **extraout_RAX_00;
  time_Location **pptVar1;
  int iVar2;
  time_Location *extraout_RAX_01;
  time_Location *l;
  time_zone *extraout_RAX_02;
  time_zone *extraout_RAX_03;
  time_zone *ptVar3;
  time_zoneTrans *extraout_RAX_04;
  time_zoneTrans *extraout_RAX_05;
  time_zoneTrans *ptVar4;
  int extraout_RAX_06;
  time_Location *extraout_RCX;
  time_Location *ptVar5;
  int64 iVar6;
  int64 extraout_RCX_00;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *~r0;
  void *extraout_RBX_01;
  void *extraout_RBX_02;
  void *pvVar7;
  void *extraout_RBX_03;
  void *extraout_RBX_04;
  time_zone *extraout_RSI;
  time_Location **extraout_RSI_00;
  void *in_RDI;
  void *extraout_RDI;
  undefined8 *extraout_R11;
  time_zone **extraout_R11_00;
  time_zoneTrans **extraout_R11_01;
  time_zone **extraout_R11_02;
  time_Location **extraout_R11_03;
  int unaff_R14;
  int hr;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  runtime_makeslice((internal_abi_Type *)&DAT_0085db80,0x1b,0x1b,in_RDI);
  time_unnamedFixedZones.len = 0x1b;
  time_unnamedFixedZones.cap = 0x1b;
  pptVar1 = extraout_RAX;
  pvVar7 = extraout_RBX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_00;
    extraout_R11[1] = time_unnamedFixedZones.array;
    pptVar1 = extraout_RAX_00;
    pvVar7 = extraout_RBX_00;
  }
  iVar2 = -0xc;
  time_unnamedFixedZones.array = pptVar1;
  while( true ) {
    if (0xe < iVar2) {
      return;
    }
    runtime_newobject((internal_abi_Type *)&DAT_00889520,pvVar7);
    (extraout_RAX_01->name).str = (uint8 *)0x0;
    runtime_newobject((internal_abi_Type *)&DAT_00812b20,~r0);
    (extraout_RAX_02->name).str = (uint8 *)0x0;
    extraout_RAX_02->offset = iVar2 * 0xe10;
    extraout_RAX_02->isDST = false;
    (extraout_RAX_01->zone).len = 1;
    (extraout_RAX_01->zone).cap = 1;
    ptVar3 = extraout_RAX_02;
    ptVar5 = extraout_RAX_01;
    pvVar7 = extraout_RBX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RAX_03;
      extraout_R11_00[1] = (extraout_RCX->zone).array;
      ptVar3 = extraout_RAX_03;
      ptVar5 = extraout_RCX;
      pvVar7 = extraout_RBX_02;
    }
    (ptVar5->zone).array = ptVar3;
    runtime_newobject((internal_abi_Type *)&DAT_00812b80,pvVar7);
    iVar6 = -0x8000000000000000;
    extraout_RAX_04->when = -0x8000000000000000;
    extraout_RAX_04->index = 0;
    extraout_RAX_04->isstd = false;
    extraout_RAX_04->isutc = false;
    (extraout_RAX_01->tx).len = 1;
    (extraout_RAX_01->tx).cap = 1;
    ptVar4 = extraout_RAX_04;
    ptVar5 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_01 = extraout_RAX_05;
      extraout_R11_01[1] = (ptVar5->tx).array;
      ptVar4 = extraout_RAX_05;
      iVar6 = extraout_RCX_00;
    }
    (ptVar5->tx).array = ptVar4;
    ptVar5->cacheStart = iVar6;
    pvVar7 = (void *)0x7fffffffffffffff;
    ptVar5->cacheEnd = 0x7fffffffffffffff;
    if ((ptVar5->zone).len == 0) break;
    ptVar3 = (ptVar5->zone).array;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_02 = extraout_RSI;
      extraout_R11_02[1] = ptVar5->cacheZone;
      pvVar7 = extraout_RBX_03;
      ptVar3 = extraout_RSI;
    }
    ptVar5->cacheZone = ptVar3;
    if ((uint)time_unnamedFixedZones.len <= iVar2 + 0xcU) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    pptVar1 = time_unnamedFixedZones.array;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_03 = ptVar5;
      extraout_R11_03[1] = extraout_RSI_00[extraout_RAX_06 + 0xc];
      iVar2 = extraout_RAX_06;
      pvVar7 = extraout_RBX_04;
      pptVar1 = extraout_RSI_00;
    }
    pptVar1[iVar2 + 0xc] = ptVar5;
    iVar2 = iVar2 + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



int time_init(EVP_PKEY_CTX *ctx)

{
  int64 ~r0;
  int extraout_RAX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_mapinitnoop();
  runtime_nanotime(~r0);
  time_startNano = extraout_RAX + -1;
  return extraout_RAX + -1;
}



void type__eq_time_ParseError(time_ParseError *p,time_ParseError *q,bool r)

{
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  char extraout_AL_02;
  int unaff_R14;
  time_ParseError *ptStack0000000000000008;
  time_ParseError *ptStack0000000000000010;
  
  ptStack0000000000000008 = p;
  ptStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((((((ptStack0000000000000010->Layout).len == (ptStack0000000000000008->Layout).len) &&
         ((ptStack0000000000000008->Value).len == (ptStack0000000000000010->Value).len)) &&
        ((ptStack0000000000000008->LayoutElem).len == (ptStack0000000000000010->LayoutElem).len)) &&
       (((ptStack0000000000000010->ValueElem).len == (ptStack0000000000000008->ValueElem).len &&
        ((ptStack0000000000000008->Message).len == (ptStack0000000000000010->Message).len)))) &&
      ((runtime_memequal(), extraout_AL != '\0' &&
       ((runtime_memequal(), extraout_AL_00 != '\0' && (runtime_memequal(), extraout_AL_01 != '\0'))
       )))) && (runtime_memequal(), extraout_AL_02 != '\0')) {
    runtime_memequal();
  }
  return;
}



void time_parseRFC3339_go_shape___uint8_(_param2 s,time_Location *local,time_Time ~r0,bool ~r1)

{
  byte bVar1;
  char cVar2;
  time_Time ~r0_00;
  _param1 value;
  bool bVar3;
  int iVar4;
  int nsec;
  uint64 extraout_RAX;
  int iVar5;
  int extraout_RAX_00;
  int in_RCX;
  int hr;
  int extraout_RCX;
  int offset;
  int n;
  uint8 c_7;
  int iVar6;
  int hour;
  int mm;
  undefined7 in_register_00000019;
  int64 extraout_RBX;
  int zoneOffset;
  uint8 c_8;
  time_Location *in_RSI;
  int64 end;
  uint uVar7;
  int in_RDI;
  int64 start;
  bool isDST;
  int year;
  int day;
  int month;
  uint8 c;
  uint8 c_1;
  uint8 c_2;
  uint8 c_3;
  int min;
  uint8 c_4;
  int sec;
  int unaff_R14;
  uint8 c_5;
  uint8 c_6;
  uint8 c_9;
  uint uVar8;
  string in_stack_ffffffffffffff40;
  time_Location *in_stack_ffffffffffffff50;
  string in_stack_ffffffffffffff58;
  error in_stack_ffffffffffffff68;
  uint local_40;
  int local_38;
  char *local_30;
  char *local_28;
  time_Time t;
  
  iVar5 = CONCAT71(in_register_00000019,~r1);
  while (&local_40 <= *(uint **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  bVar3 = true;
  if (in_RCX < 0x13) {
    return;
  }
  local_38 = 0;
  for (iVar6 = 0; iVar6 < 4; iVar6 = iVar6 + 1) {
    if (9 < (byte)(*(byte *)(iVar5 + iVar6) - 0x30)) {
      bVar3 = false;
      local_38 = 0;
      goto LAB_00491004;
    }
    local_38 = ((uint)*(byte *)(iVar5 + iVar6) + local_38 * 10) - 0x30;
  }
  if (9999 < (uint)local_38) {
    bVar3 = false;
    local_38 = 0;
  }
LAB_00491004:
  month = 0;
  for (iVar6 = 0; iVar6 < 2; iVar6 = iVar6 + 1) {
    bVar1 = *(byte *)(iVar5 + 5 + iVar6);
    if (9 < (byte)(bVar1 - 0x30)) {
      bVar3 = false;
      month = 1;
      goto LAB_00491058;
    }
    month = (uint)bVar1 + month * 10 + -0x30;
  }
  if (0xb < month - 1U) {
    bVar3 = false;
    month = 1;
  }
LAB_00491058:
  if (((month == 2) && ((local_38 & 3U) == 0)) &&
     ((local_38 !=
       ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(local_38),8) + local_38 >> 6) -
       (local_38 >> 0x3f)) * 100 ||
      ((local_38 * -0x70a3d70a3d70a3d7 << 0x3c |
       local_38 * -0x70a3d70a3d70a3d7 + 0x51eb851eb851eb0U >> 4) < 0xa3d70a3d70a3d7)))) {
    iVar6 = 0x1d;
  }
  else {
    if (0xc < (uint)month) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (0xc < month - 1U) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    iVar6 = (int)(sdword)(time_daysBefore[month] - *(sdword *)(&DAT_00c0f1dc + month * 4));
  }
  day = 0;
  for (iVar4 = 0; iVar4 < 2; iVar4 = iVar4 + 1) {
    bVar1 = *(byte *)(iVar5 + 8 + iVar4);
    if (9 < (byte)(bVar1 - 0x30)) {
      bVar3 = false;
      day = 1;
      goto LAB_00491161;
    }
    day = (uint)bVar1 + day * 10 + -0x30;
  }
  if ((day < 1) || (iVar6 < day)) {
    bVar3 = false;
    day = 1;
  }
LAB_00491161:
  hour = 0;
  for (iVar6 = 0; iVar6 < 2; iVar6 = iVar6 + 1) {
    bVar1 = *(byte *)(iVar5 + 0xb + iVar6);
    if (9 < (byte)(bVar1 - 0x30)) {
      bVar3 = false;
      hour = 0;
      goto LAB_004911a3;
    }
    hour = ((uint)bVar1 + hour * 10) - 0x30;
  }
  if (0x17 < (uint)hour) {
    bVar3 = false;
    hour = 0;
  }
LAB_004911a3:
  min = 0;
  for (iVar6 = 0; iVar6 < 2; iVar6 = iVar6 + 1) {
    bVar1 = *(byte *)(iVar5 + 0xe + iVar6);
    if (9 < (byte)(bVar1 - 0x30)) {
      bVar3 = false;
      min = 0;
      goto LAB_004911f0;
    }
    min = ((uint)bVar1 + min * 10) - 0x30;
  }
  if (0x3b < (uint)min) {
    bVar3 = false;
    min = 0;
  }
LAB_004911f0:
  sec = 0;
  for (iVar6 = 0; iVar6 < 2; iVar6 = iVar6 + 1) {
    bVar1 = *(byte *)(iVar5 + 0x11 + iVar6);
    if (9 < (byte)(bVar1 - 0x30)) {
      bVar3 = false;
      sec = 0;
      goto LAB_0049124e;
    }
    sec = ((uint)bVar1 + sec * 10) - 0x30;
  }
  if (0x3b < (uint)sec) {
    bVar3 = false;
    sec = 0;
  }
LAB_0049124e:
  if ((((!bVar3) || (*(char *)(iVar5 + 4) != '-')) || (*(char *)(iVar5 + 7) != '-')) ||
     (((*(char *)(iVar5 + 10) != 'T' || (*(char *)(iVar5 + 0xd) != ':')) ||
      (*(char *)(iVar5 + 0x10) != ':')))) {
    return;
  }
  uVar8 = (uint)((dword)(-(in_RDI + -0x13) >> 0x3f) & 0x13);
  uVar7 = in_RCX - 0x13;
  local_28 = (char *)(uVar8 + iVar5);
  if ((int)uVar7 < 2) {
    nsec = 0;
  }
  else if (*(char *)(uVar8 + iVar5) == '.') {
    c_6 = *(char *)(uVar8 + 1 + iVar5) - 0x30;
    if (c_6 < 10) {
      for (local_40 = 2; ((int)local_40 < (int)uVar7 && (c_9 = local_28[local_40] - 0x30, c_9 < 10))
          ; local_40 = local_40 + 1) {
      }
      value.cap = (int)in_stack_ffffffffffffff50;
      value.array = in_stack_ffffffffffffff40.str;
      value.len = in_stack_ffffffffffffff40.len;
      local_30 = local_28;
      time_parseNanoseconds_go_shape___uint8_
                (value,(local->name).len,(int)local_28,in_stack_ffffffffffffff58,
                 in_stack_ffffffffffffff68);
      if (uVar7 < local_40) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      local_28 = local_30 + ((int)-((in_RDI - local_40) + -0x13) >> 0x3f & local_40);
      uVar7 = (in_RCX - local_40) - 0x13;
      nsec = extraout_RAX_00;
    }
    else {
      nsec = 0;
    }
  }
  else {
    nsec = 0;
  }
  ~r0_00.loc = in_stack_ffffffffffffff50;
  ~r0_00.wall = (uint64)in_stack_ffffffffffffff40.str;
  ~r0_00.ext = in_stack_ffffffffffffff40.len;
  iVar5 = local_38;
  local_38 = uVar7;
  time_Date(iVar5,month,day,hour,min,sec,nsec,time_UTC,~r0_00);
  if ((local_38 != 1) || (*local_28 != 'Z')) {
    if (local_38 != 6) {
      return;
    }
    hr = 0;
    for (iVar5 = 0; iVar5 < 2; iVar5 = iVar5 + 1) {
      if (9 < (byte)(local_28[iVar5 + 1] - 0x30U)) {
        bVar3 = false;
        hr = 0;
        goto LAB_0049140f;
      }
      hr = ((uint)(byte)local_28[iVar5 + 1] + hr * 10) - 0x30;
    }
