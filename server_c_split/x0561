    a_1.Metadata.data._0_4_ = local_490[0xe];
    a_1.Metadata.data._4_4_ = local_490[0xf];
    addr_02.Addr.len = (int)in_stack_fffffffffffffab0;
    addr_02.Addr.str = (uint8 *)in_stack_fffffffffffffaa8;
    addr_02.ServerName.str = (uint8 *)in_stack_fffffffffffffab8;
    addr_02.ServerName.len = in_stack_fffffffffffffac0._0_8_;
    addr_02.Attributes =
         (google_golang_org_grpc_attributes_Attributes *)in_stack_fffffffffffffac0._8_8_;
    addr_02.BalancerAttributes =
         (google_golang_org_grpc_attributes_Attributes *)in_stack_fffffffffffffac0._16_8_;
    addr_02.Metadata._type = (internal_abi_Type *)SUB168(in_stack_fffffffffffffac0._24_16_,0);
    addr_02.Metadata.data = (void *)SUB168(in_stack_fffffffffffffac0._24_16_,8);
    local_4b0 = pvVar9;
    local_440 = (google_golang_org_grpc_resolver_Address *)local_490;
    google_golang_org_grpc_resolver___AddressMap__Get
              (b->subConns,addr_02,in_stack_fffffffffffffae8,SUB41(a_1.Addr.str._0_4_,0));
    local_498 = extraout_RBX_03;
    runtime_assertE2I((internal_abi_InterfaceType *)&DAT_00846ae0,t,(runtime_itab *)t);
    addr_03.Addr.len = (int)in_stack_fffffffffffffab0;
    addr_03.Addr.str = (uint8 *)in_stack_fffffffffffffaa8;
    addr_03.ServerName.str = (uint8 *)in_stack_fffffffffffffab8;
    addr_03.ServerName.len = in_stack_fffffffffffffac0._0_8_;
    addr_03.Attributes =
         (google_golang_org_grpc_attributes_Attributes *)in_stack_fffffffffffffac0._8_8_;
    addr_03.BalancerAttributes =
         (google_golang_org_grpc_attributes_Attributes *)in_stack_fffffffffffffac0._16_8_;
    addr_03.Metadata._type = (internal_abi_Type *)SUB168(in_stack_fffffffffffffac0._24_16_,0);
    addr_03.Metadata.data = (void *)SUB168(in_stack_fffffffffffffac0._24_16_,8);
    local_458 = extraout_RAX_11;
    google_golang_org_grpc_resolver___AddressMap__Get
              (&local_470,addr_03,in_stack_fffffffffffffae8,SUB41(a_1.Addr.str._0_4_,0));
    ~r0_05 = extraout_RBX_04;
    if (extraout_CL_00 == '\0') {
      (**(code **)(local_458 + 0x28))(local_498);
      addr_04.Addr.len = (int)in_stack_fffffffffffffab0;
      addr_04.Addr.str = (uint8 *)in_stack_fffffffffffffaa8;
      addr_04.ServerName.str = (uint8 *)in_stack_fffffffffffffab8;
      addr_04.ServerName.len = in_stack_fffffffffffffac0._0_8_;
      addr_04.Attributes =
           (google_golang_org_grpc_attributes_Attributes *)in_stack_fffffffffffffac0._8_8_;
      addr_04.BalancerAttributes =
           (google_golang_org_grpc_attributes_Attributes *)in_stack_fffffffffffffac0._16_8_;
      addr_04.Metadata._type = (internal_abi_Type *)SUB168(in_stack_fffffffffffffac0._24_16_,0);
      addr_04.Metadata.data = (void *)SUB168(in_stack_fffffffffffffac0._24_16_,8);
      google_golang_org_grpc_resolver___AddressMap__Delete(b->subConns,addr_04);
      ~r0_05 = extraout_RBX_05;
    }
    local_490 = (undefined4 *)((int)local_440 + 0x40);
    pvVar9 = (void *)((int)local_4b0 + 1);
  }
  if (s.ResolverState.Addresses.len != 0) {
    google_golang_org_grpc_balancer_base___baseBalancer__regeneratePicker(b);
    (*(code *)(b->cc).tab[2].inter)((b->cc).data,b->state,(b->picker).tab,(b->picker).data);
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_05);
  extraout_RAX_12[1] = 0x17;
  *extraout_RAX_12 = &DAT_008ba736;
  err.data = in_stack_fffffffffffffab0;
  err.tab = (runtime_itab *)in_stack_fffffffffffffaa8;
  google_golang_org_grpc_balancer_base___baseBalancer__ResolverError(b,err);
  return;
}



void google_golang_org_grpc_balancer_base___baseBalancer__UpdateClientConnState_func1
               (google_golang_org_grpc_balancer_SubConnState scs)

{
  int in_RDX;
  google_golang_org_grpc_balancer_SubConn *_sc;
  google_golang_org_grpc_balancer_base_baseBalancer *b;
  int unaff_R14;
  google_golang_org_grpc_balancer_SubConn in_stack_ffffffffffffffc8;
  google_golang_org_grpc_balancer_SubConnState in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  google_golang_org_grpc_balancer_base___baseBalancer__updateSubConnState
            (*(google_golang_org_grpc_balancer_base_baseBalancer **)(in_RDX + 8),
             in_stack_ffffffffffffffc8,in_stack_ffffffffffffffd8);
  return;
}



void google_golang_org_grpc_balancer_base___baseBalancer__mergeErrors
               (google_golang_org_grpc_balancer_base_baseBalancer *b,error ~r0)

{
  internal_abi_Type *piVar1;
  int unaff_R14;
  string in_stack_ffffffffffffffa0;
  __interface___ in_stack_ffffffffffffffb0;
  error in_stack_ffffffffffffffc8;
  error ~r0_00;
  error ~r0_01;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((b->connErr).tab != (runtime_itab *)0x0) {
    if ((b->resolverErr).tab != (runtime_itab *)0x0) {
      fmt_Errorf(in_stack_ffffffffffffffa0,in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc8);
      return;
    }
    piVar1 = (internal_abi_Type *)(b->connErr).tab;
    if (piVar1 != (internal_abi_Type *)0x0) {
      piVar1 = (internal_abi_Type *)piVar1->PtrBytes;
    }
    ~r0_00.data = (b->connErr).data;
    ~r0_00.tab = (runtime_itab *)piVar1;
    fmt_Errorf(in_stack_ffffffffffffffa0,in_stack_ffffffffffffffb0,~r0_00);
    return;
  }
  piVar1 = (internal_abi_Type *)(b->resolverErr).tab;
  if (piVar1 != (internal_abi_Type *)0x0) {
    piVar1 = (internal_abi_Type *)piVar1->PtrBytes;
  }
  ~r0_01.data = (b->resolverErr).data;
  ~r0_01.tab = (runtime_itab *)piVar1;
  fmt_Errorf(in_stack_ffffffffffffffa0,in_stack_ffffffffffffffb0,~r0_01);
  return;
}



// WARNING: Unknown calling convention

void google_golang_org_grpc_balancer_base___baseBalancer__regeneratePicker
               (google_golang_org_grpc_balancer_base_baseBalancer *b)

{
  int iVar1;
  undefined4 *puVar2;
  runtime_slice ~r0;
  google_golang_org_grpc_resolver_Address addr_00;
  interface___ value;
  undefined auVar3 [16];
  undefined auVar4 [16];
  undefined auVar5 [16];
  runtime_hmap *extraout_RAX;
  map_google_golang_org_grpc_balancer_SubConn_google_golang_org_grpc_balancer_base_SubConnInfo
  readySCs;
  undefined8 extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *puVar6;
  undefined (*extraout_RAX_04) [16];
  internal_abi_Type *t;
  int *extraout_RAX_05;
  undefined4 *dst;
  void *pvVar7;
  undefined (*extraout_RAX_06) [16];
  void *pvVar8;
  google_golang_org_grpc_balancer_base_baseBalancer *extraout_RCX;
  void *extraout_RCX_00;
  char extraout_BL;
  bool ok;
  runtime_hmap *h;
  void *~r0_00;
  runtime_hmap *h_00;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *extraout_RBX_01;
  bool ~r1;
  void *extraout_RDI;
  void *extraout_RDI_00;
  void *~r0_01;
  void *~r0_02;
  int iVar9;
  google_golang_org_grpc_resolver_addressMapEntry *entry;
  void **extraout_R11;
  void **extraout_R11_00;
  void **extraout_R11_01;
  int iVar10;
  undefined (*dst_00) [16];
  int unaff_R14;
  undefined auVar11 [16];
  google_golang_org_grpc_balancer_base_baseBalancer *pgStack0000000000000008;
  error in_stack_fffffffffffffde0;
  int in_stack_fffffffffffffdf0;
  undefined in_stack_fffffffffffffdf8 [40];
  internal_abi_Type *in_stack_fffffffffffffe20;
  int ret;
  int local_1a0;
  void *local_198;
  void *local_190;
  undefined (*local_188) [16];
  runtime_hmap *local_180;
  void *local_178;
  int local_170;
  google_golang_org_grpc_resolver_AddressMap *local_168;
  undefined (*local_160) [16];
  undefined (*local_158) [16];
  undefined4 *local_150;
  undefined (*local_148) [16];
  undefined8 local_140;
  google_golang_org_grpc_balancer_SubConn sc;
  google_golang_org_grpc_resolver_Address addr;
  undefined4 local_e8;
  undefined4 uStack_e4;
  undefined4 uStack_e0;
  undefined4 uStack_dc;
  undefined4 local_d8;
  undefined4 uStack_d4;
  undefined4 uStack_d0;
  undefined4 uStack_cc;
  undefined4 local_c8;
  undefined4 uStack_c4;
  undefined4 uStack_c0;
  undefined4 uStack_bc;
  undefined4 local_b8;
  undefined4 uStack_b4;
  undefined4 uStack_b0;
  undefined4 uStack_ac;
  undefined local_a8 [8];
  undefined4 uStack_a0;
  undefined4 uStack_9c;
  undefined local_98 [8];
  undefined4 uStack_90;
  undefined4 uStack_8c;
  undefined local_88 [8];
  undefined4 uStack_80;
  undefined4 uStack_7c;
  undefined local_78 [8];
  undefined4 uStack_70;
  undefined4 uStack_6c;
  runtime_hiter local_68;
  
  pgStack0000000000000008 = b;
  while (&local_1a0 <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (pgStack0000000000000008->state == 3) {
    google_golang_org_grpc_balancer_base___baseBalancer__mergeErrors
              (pgStack0000000000000008,in_stack_fffffffffffffde0);
    local_178 = ~r0_00;
    local_140 = extraout_RAX_00;
    runtime_newobject((internal_abi_Type *)&DAT_00841ae0,~r0_00);
    *extraout_RAX_01 = local_140;
    puVar6 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = local_178;
      puVar6 = extraout_RAX_02;
    }
    puVar6[1] = local_178;
    (pgStack0000000000000008->picker).tab =
         (runtime_itab *)
         go_itab__google_golang_org_grpc_balancer_base_errPicker_google_golang_org_grpc_balancer_Picker
    ;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RAX_03;
      extraout_R11_00[1] = (pgStack0000000000000008->picker).data;
      puVar6 = extraout_RAX_03;
    }
    (pgStack0000000000000008->picker).data = puVar6;
    return;
  }
  runtime_makemap_small((runtime_hmap *)pgStack0000000000000008);
  local_168 = pgStack0000000000000008->subConns;
  local_180 = extraout_RAX;
  FUN_0046cdab();
  runtime_mapiterinit((internal_abi_MapType *)&DAT_0082d760,h,&local_68);
  pvVar8 = (void *)0x0;
  pvVar7 = extraout_RDI;
  while (local_68.key != (void *)0x0) {
    iVar9 = *(int *)((int)local_68.elem + 8);
    runtime_mapiternext(&local_68);
    pvVar8 = (void *)((int)pvVar8 + iVar9);
    pvVar7 = extraout_RDI_00;
  }
  runtime_makeslice((internal_abi_Type *)&DAT_00887920,0,(int)pvVar8,pvVar7);
  local_148 = extraout_RAX_04;
  FUN_0046cdab();
  runtime_mapiterinit((internal_abi_MapType *)&DAT_0082d760,h_00,&local_68);
  pvVar7 = (void *)0x0;
  local_188 = local_148;
  while (local_68.key != (void *)0x0) {
                    // WARNING: Load size is inaccurate
    iVar9 = *local_68.elem;
    iVar1 = *(int *)((int)local_68.elem + 8);
    local_170 = iVar9;
    for (local_198 = (void *)0x0; (int)local_198 < iVar1; local_198 = (void *)((int)local_198 + 1))
    {
      puVar2 = *(undefined4 **)(iVar9 + (int)local_198 * 8);
      local_e8 = *puVar2;
      uStack_e4 = puVar2[1];
      uStack_e0 = puVar2[2];
      uStack_dc = puVar2[3];
      local_d8 = puVar2[4];
      uStack_d4 = puVar2[5];
      uStack_d0 = puVar2[6];
      uStack_cc = puVar2[7];
      local_c8 = puVar2[8];
      uStack_c4 = puVar2[9];
      uStack_c0 = puVar2[10];
      uStack_bc = puVar2[0xb];
      local_b8 = puVar2[0xc];
      uStack_b4 = puVar2[0xd];
      uStack_b0 = puVar2[0xe];
      uStack_ac = puVar2[0xf];
      pvVar7 = (void *)((int)pvVar7 + 1);
      if (pvVar8 < pvVar7) {
        ~r0.cap = in_stack_fffffffffffffdf0;
        ~r0.array = in_stack_fffffffffffffde0.tab;
        ~r0.len = (int)in_stack_fffffffffffffde0.data;
        runtime_growslice(local_188,(int)pvVar7,(int)pvVar8,1,(internal_abi_Type *)&DAT_00887920,~r0
                         );
        pvVar8 = extraout_RCX_00;
        local_188 = extraout_RAX_06;
        iVar9 = local_170;
        pvVar7 = extraout_RBX_01;
      }
      iVar10 = ((int)pvVar7 - 1U) * 0x40;
      dst_00 = local_188 + ((int)pvVar7 - 1U) * 4;
      if (runtime_writeBarrier._0_4_ != 0) {
        local_1a0 = iVar10;
        local_158 = dst_00;
        runtime_wbMove((internal_abi_Type *)&DAT_00887920,dst_00,&local_e8);
        iVar9 = local_170;
        iVar10 = local_1a0;
        dst_00 = local_158;
      }
      *(undefined4 *)*dst_00 = local_e8;
      *(undefined4 *)((int)*dst_00 + 4) = uStack_e4;
      *(undefined4 *)((int)*dst_00 + 8) = uStack_e0;
      *(undefined4 *)((int)*dst_00 + 0xc) = uStack_dc;
      *(undefined4 *)dst_00[1] = local_d8;
      *(undefined4 *)(dst_00[1] + 4) = uStack_d4;
      *(undefined4 *)(dst_00[1] + 8) = uStack_d0;
      *(undefined4 *)(dst_00[1] + 0xc) = uStack_cc;
      *(undefined4 *)(local_188[2] + iVar10) = local_c8;
      *(undefined4 *)(local_188[2] + iVar10 + 4) = uStack_c4;
      *(undefined4 *)(local_188[2] + iVar10 + 8) = uStack_c0;
      *(undefined4 *)(local_188[2] + iVar10 + 0xc) = uStack_bc;
      *(undefined4 *)(local_188[3] + iVar10) = local_b8;
      *(undefined4 *)(local_188[3] + iVar10 + 4) = uStack_b4;
      *(undefined4 *)(local_188[3] + iVar10 + 8) = uStack_b0;
      *(undefined4 *)(local_188[3] + iVar10 + 0xc) = uStack_ac;
    }
    local_198 = pvVar7;
    local_160 = local_188;
    runtime_mapiternext(&local_68);
    pvVar7 = local_198;
    local_188 = local_160;
  }
  pvVar8 = (void *)0x0;
  while ((int)pvVar8 < (int)pvVar7) {
    auVar11 = *local_188;
    auVar3 = local_188[1];
    auVar4 = local_188[2];
    auVar5 = local_188[3];
    addr_00.ServerName.str = (uint8 *)in_stack_fffffffffffffdf0;
    addr_00.Addr.str = (uint8 *)in_stack_fffffffffffffde0.tab;
    addr_00.Addr.len = (int)in_stack_fffffffffffffde0.data;
    addr_00.ServerName.len = in_stack_fffffffffffffdf8._0_8_;
    addr_00.Attributes =
         (google_golang_org_grpc_attributes_Attributes *)in_stack_fffffffffffffdf8._8_8_;
    addr_00.BalancerAttributes =
         (google_golang_org_grpc_attributes_Attributes *)in_stack_fffffffffffffdf8._16_8_;
    addr_00.Metadata._type = (internal_abi_Type *)SUB168(in_stack_fffffffffffffdf8._24_16_,0);
    addr_00.Metadata.data = (void *)SUB168(in_stack_fffffffffffffdf8._24_16_,8);
    value.data = pvVar7;
    value._type = in_stack_fffffffffffffe20;
    local_198 = pvVar8;
    local_148 = local_188;
    google_golang_org_grpc_resolver___AddressMap__Get
              (pgStack0000000000000008->subConns,addr_00,value,SUB41(*(undefined4 *)*local_188,0));
    local_190 = extraout_RBX;
    runtime_assertE2I((internal_abi_InterfaceType *)&DAT_00846ae0,t,(runtime_itab *)t);
    sc.data = local_190;
    runtime_mapaccess2((internal_abi_MapType *)&DAT_0082d880,
                       (runtime_hmap *)pgStack0000000000000008->scStates,&sc,~r0_01,~r1);
    if ((extraout_BL != '\0') && (*extraout_RAX_05 == 2)) {
      _local_a8 = auVar11;
      _local_98 = auVar3;
      _local_88 = auVar4;
      _local_78 = auVar5;
      runtime_mapassign((internal_abi_MapType *)&DAT_0082d820,local_180,&sc,~r0_02);
      local_150 = dst;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_wbMove((internal_abi_Type *)&DAT_00841960,dst,local_a8);
      }
      *local_150 = local_a8._0_4_;
      local_150[1] = local_a8._4_4_;
      local_150[2] = uStack_a0;
      local_150[3] = uStack_9c;
      local_150[4] = local_98._0_4_;
      local_150[5] = local_98._4_4_;
      local_150[6] = uStack_90;
      local_150[7] = uStack_8c;
      local_150[8] = local_88._0_4_;
      local_150[9] = local_88._4_4_;
      local_150[10] = uStack_80;
      local_150[0xb] = uStack_7c;
      local_150[0xc] = local_78._0_4_;
      local_150[0xd] = local_78._4_4_;
      local_150[0xe] = uStack_70;
      local_150[0xf] = uStack_6c;
    }
    local_188 = local_148 + 4;
    pvVar8 = (void *)((int)local_198 + 1);
  }
  auVar11 = (*(code *)((pgStack0000000000000008->pickerBuilder).tab)->fun[0])
                      ((pgStack0000000000000008->pickerBuilder).data,local_180);
  pvVar8 = auVar11._8_8_;
  (pgStack0000000000000008->picker).tab = auVar11._0_8_;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_01 = extraout_RBX_00;
    extraout_R11_01[1] = (extraout_RCX->picker).data;
    pgStack0000000000000008 = extraout_RCX;
    pvVar8 = extraout_RBX_00;
  }
  (pgStack0000000000000008->picker).data = pvVar8;
  return;
}



void google_golang_org_grpc_balancer_base___baseBalancer__UpdateSubConnState
               (google_golang_org_grpc_balancer_base_baseBalancer *b,
               google_golang_org_grpc_balancer_SubConn sc,
               google_golang_org_grpc_balancer_SubConnState state)

{
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 extraout_RAX_01;
  undefined8 extraout_RAX_02;
  undefined8 uVar2;
  google_golang_org_grpc_connectivity_State in_RCX;
  void *in_RBX;
  undefined8 *extraout_RDI;
  google_golang_org_grpc_connectivity_State *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  
  state.ConnectivityState = in_RCX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_newobject((internal_abi_Type *)&DAT_0080f8e0,in_RBX);
  if (in_RBX == (void *)0x0) {
    uVar2 = 0;
  }
  else {
    uVar2 = *(undefined8 *)((int)in_RBX + 8);
  }
  *extraout_RAX = uVar2;
  puVar1 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = state.ConnectivityState;
    puVar1 = extraout_RAX_00;
  }
  puVar1[1] = state.ConnectivityState;
  runtime_convT((internal_abi_Type *)&DAT_00851140,&state.ConnectionError,
                (void *)state.ConnectivityState);
  puVar1[2] = &DAT_00851140;
  uVar2 = extraout_RAX_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_02;
    extraout_R11_00[1] = extraout_RDI[3];
    uVar2 = extraout_RAX_02;
    puVar1 = extraout_RDI;
  }
  puVar1[3] = uVar2;
  (*(code *)google_golang_org_grpc_balancer_base_logger.tab[1]._type)
            (google_golang_org_grpc_balancer_base_logger.data,
             "base.baseBalancer: UpdateSubConnState(%v, %+v) called unexpectedlyreceived goaway with non-zero even-numbered numbered stream id: %vmetadata: Pairs got the odd number of input pairs for metadata: %dDescriptor.Options called without importing the descriptor packagex509: certificate is not valid for any names, but wanted to match x509: requested SignatureAlgorithm does not match private key typeServer retry pushback specified multiple values (%q); not retrying.base.baseBalancer: got state changes for an unknown SubConn: %p, %vtransport: cannot send secure credentials on an insecure connectionfield %v with invalid Mutable call on field with non-composite typeinvalid retry throttling config: tokenRatio (%v) may not be negativeAllThreadsSyscall6 results differ between threads; runtime corruptedreflect: reflect.Value.UnsafePointer on an invalid notinheap pointerexpected a JSON struct with one entry; received entry %v at index %dpadding bytes must all be zeros unless AllowIllegalWrites is enabledhttp: message cannot contain multiple Content-Length headers; got %qembedded IPv4 address must replace the final 2 fields of the addressinvalid descriptor: using edition features in a proto with syntax %sextension %v does not implement protoreflect.ExtensionTypeDescriptor2695994666715063979466701508701963067355791626002630814351006629888126959946667150639794667015087019625940457807714424391721682722368061big: invalid 2nd argument to Int.Jacobi: need odd integer but got %sreflect: embedded interface with unexported method(s) not implementedtoo many hex fields to fit an embedded IPv4 at the end of the addressedwards25519: internal error: setShortBytes called with a long stringblockingPicker: the picked transport is not ready, loop back to repickgrpc: received message after decompression larger than max (%d vs. %d)invalid retry throttling config: maxTokens (%v) out of range (0, 1000]sync/atomic: compare and swap of inconsistently typed value into Valuebytes.Buffer: UnreadByte: previous operation was not a successful readgot %s for ..." /* TRUNCATED STRING LITERAL */
             ,0x42,puVar1,2,2);
  return;
}



void google_golang_org_grpc_balancer_base___baseBalancer__updateSubConnState
               (google_golang_org_grpc_balancer_base_baseBalancer *b,
               google_golang_org_grpc_balancer_SubConn sc,
               google_golang_org_grpc_balancer_SubConnState state)

{
  int iVar1;
  google_golang_org_grpc_balancer_ConnectivityStateEvaluator *pgVar2;
  char cVar3;
  void **extraout_RAX;
  void **extraout_RAX_00;
  void *extraout_RAX_01;
  void *extraout_RAX_02;
  int *extraout_RAX_03;
  uint64 *extraout_RAX_04;
  google_golang_org_grpc_balancer_base_baseBalancer *extraout_RAX_05;
  void **extraout_RAX_06;
  void **extraout_RAX_07;
  void *extraout_RAX_08;
  void *extraout_RAX_09;
  void *pvVar4;
  google_golang_org_grpc_balancer_base_baseBalancer *pgVar5;
  void *in_RCX;
  int idx;
  int iVar6;
  google_golang_org_grpc_connectivity_State oldS;
  char extraout_BL;
  bool ok;
  void *in_RBX;
  void *~r0;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *x;
  void *~r0_00;
  void *extraout_RBX_01;
  void *extraout_RBX_02;
  undefined extraout_SIL;
  undefined extraout_SIL_00;
  undefined ~r1;
  internal_abi_Type *in_RSI;
  uint64 in_RDI;
  google_golang_org_grpc_connectivity_State s;
  void *extraout_RDI;
  void **extraout_RDI_00;
  void *extraout_RDI_01;
  void *~r0_01;
  void **extraout_RDI_02;
  void *in_R8;
  google_golang_org_grpc_connectivity_State state_1;
  void **extraout_R11;
  void **extraout_R11_00;
  void **extraout_R11_01;
  void **extraout_R11_02;
  void **extraout_R11_03;
  int unaff_R14;
  void *pvStack0000000000000030;
  undefined local_38 [16];
  void **local_28;
  void **local_20;
  internal_abi_Type *local_18;
  void *local_10;
  
  sc.tab = (runtime_itab *)b;
  sc.data = in_RBX;
  pvStack0000000000000030 = in_R8;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_18 = in_RSI;
  local_10 = pvStack0000000000000030;
  cVar3 = (*(code *)google_golang_org_grpc_balancer_base_logger.tab[3].fun[0])
                    (google_golang_org_grpc_balancer_base_logger.data,2);
  pvVar4 = extraout_RDI;
  ~r1 = extraout_SIL;
  if (cVar3 != '\0') {
    runtime_newobject((internal_abi_Type *)&DAT_0080f8e0,~r0);
    pvVar4 = sc.data;
    if (sc.data != (void *)0x0) {
      pvVar4 = *(void **)((int)sc.data + 8);
    }
    *extraout_RAX = pvVar4;
    local_20 = extraout_RAX;
    pvVar4 = in_RCX;
    x = extraout_RBX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = pvVar4;
      local_20 = extraout_RAX_00;
      x = extraout_RBX_00;
    }
    local_20[1] = pvVar4;
    runtime_convT64(in_RDI,x);
    local_20[2] = &DAT_0081ebe0;
    pvVar4 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RAX_02;
      extraout_R11_00[1] = extraout_RDI_00[3];
      pvVar4 = extraout_RAX_02;
      local_20 = extraout_RDI_00;
    }
    local_20[3] = pvVar4;
    (*(code *)google_golang_org_grpc_balancer_base_logger.tab[3]._type)
              (google_golang_org_grpc_balancer_base_logger.data,&DAT_008c9c7a,0x36,local_20,2,2);
    pvVar4 = extraout_RDI_01;
    ~r1 = extraout_SIL_00;
  }
  runtime_mapaccess2((internal_abi_MapType *)&DAT_0082d880,(runtime_hmap *)sc.tab[1].fun[0],&sc.data
                     ,pvVar4,(bool)~r1);
  if (extraout_BL == '\0') {
    cVar3 = (*(code *)google_golang_org_grpc_balancer_base_logger.tab[3].fun[0])
                      (google_golang_org_grpc_balancer_base_logger.data,2);
    if (cVar3 != '\0') {
      runtime_newobject((internal_abi_Type *)&DAT_0080f8e0,~r0_00);
      if (sc.data != (void *)0x0) {
        sc.data = *(void **)((int)sc.data + 8);
      }
      *extraout_RAX_06 = sc.data;
      local_28 = extraout_RAX_06;
      pvVar4 = extraout_RBX_01;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_02 = in_RCX;
        local_28 = extraout_RAX_07;
        pvVar4 = extraout_RBX_02;
      }
      local_28[1] = in_RCX;
      runtime_convT64(in_RDI,pvVar4);
      local_28[2] = &DAT_0081ebe0;
      pvVar4 = extraout_RAX_08;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_03 = extraout_RAX_09;
        extraout_R11_03[1] = extraout_RDI_02[3];
        pvVar4 = extraout_RAX_09;
        local_28 = extraout_RDI_02;
      }
      local_28[3] = pvVar4;
      (*(code *)google_golang_org_grpc_balancer_base_logger.tab[3]._type)
                (google_golang_org_grpc_balancer_base_logger.data,
                 "base.baseBalancer: got state changes for an unknown SubConn: %p, %vtransport: cannot send secure credentials on an insecure connectionfield %v with invalid Mutable call on field with non-composite typeinvalid retry throttling config: tokenRatio (%v) may not be negativeAllThreadsSyscall6 results differ between threads; runtime corruptedreflect: reflect.Value.UnsafePointer on an invalid notinheap pointerexpected a JSON struct with one entry; received entry %v at index %dpadding bytes must all be zeros unless AllowIllegalWrites is enabledhttp: message cannot contain multiple Content-Length headers; got %qembedded IPv4 address must replace the final 2 fields of the addressinvalid descriptor: using edition features in a proto with syntax %sextension %v does not implement protoreflect.ExtensionTypeDescriptor2695994666715063979466701508701963067355791626002630814351006629888126959946667150639794667015087019625940457807714424391721682722368061big: invalid 2nd argument to Int.Jacobi: need odd integer but got %sreflect: embedded interface with unexported method(s) not implementedtoo many hex fields to fit an embedded IPv4 at the end of the addressedwards25519: internal error: setShortBytes called with a long stringblockingPicker: the picked transport is not ready, loop back to repickgrpc: received message after decompression larger than max (%d vs. %d)invalid retry throttling config: maxTokens (%v) out of range (0, 1000]sync/atomic: compare and swap of inconsistently typed value into Valuebytes.Buffer: UnreadByte: previous operation was not a successful readgot %s for stream %d; expected CONTINUATION following %s for stream %dx509: certificate relies on legacy Common Name field, use SANs insteadtransport: set send compressor called after headers sent or stream donegrpc: error unmarshalling service config %s due to methodConfig[%d]: %vtoo many concurrent operations on a single file or socket (max 1048575)json: invalid use of ,string struct tag, trying to unmarshal %q into %vdynamic table size update MUST occur at the beginn..." /* TRUNCATED STRING LITERAL */
                 ,0x43,local_28,2,2);
    }
    return;
  }
  iVar1 = *extraout_RAX_03;
  if (iVar1 != 3) {
LAB_006aaa52:
    runtime_mapassign((internal_abi_MapType *)&DAT_0082d880,(runtime_hmap *)sc.tab[1].fun[0],
                      &sc.data,~r0_01);
    *extraout_RAX_04 = in_RDI;
    if (in_RDI == 0) {
      (**(code **)((int)sc.data + 0x18))(in_RCX);
      pgVar5 = (google_golang_org_grpc_balancer_base_baseBalancer *)sc.tab;
    }
    else {
      pgVar5 = (google_golang_org_grpc_balancer_base_baseBalancer *)sc.tab;
      if (in_RDI == 3) {
        sc.tab[3]._type = local_18;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_01 = local_10;
          extraout_R11_01[1] = (extraout_RAX_05->connErr).data;
          pgVar5 = extraout_RAX_05;
        }
        (pgVar5->connErr).data = local_10;
      }
      else if (in_RDI == 4) {
        runtime_mapdelete((internal_abi_MapType *)&DAT_0082d880,(runtime_hmap *)sc.tab[1].fun[0],
                          &sc.data);
        pgVar5 = (google_golang_org_grpc_balancer_base_baseBalancer *)sc.tab;
      }
    }
    pgVar2 = pgVar5->csEvltr;
    local_38._8_8_ = in_RDI;
    local_38._0_8_ = iVar1;
    for (idx = 0; idx < 2; idx = idx + 1) {
      iVar6 = *(int *)(local_38 + idx * 8);
      if (iVar6 < 2) {
        if (iVar6 == 0) {
          pgVar2->numIdle = (pgVar2->numIdle + idx * 2) - 1;
        }
        else if (iVar6 == 1) {
          pgVar2->numConnecting = (pgVar2->numConnecting + idx * 2) - 1;
        }
      }
      else if (iVar6 == 2) {
        pgVar2->numReady = (pgVar2->numReady + idx * 2) - 1;
      }
      else if (iVar6 == 3) {
        pgVar2->numTransientFailure = (pgVar2->numTransientFailure + idx * 2) - 1;
      }
    }
    if (pgVar2->numReady == 0) {
      if (pgVar2->numConnecting == 0) {
        if (pgVar2->numIdle == 0) {
          iVar6 = 3;
        }
        else {
          iVar6 = 0;
        }
      }
      else {
        iVar6 = 1;
      }
    }
    else {
      iVar6 = 2;
    }
    pgVar5->state = iVar6;
    if (((iVar1 == 2) != (in_RDI == 2)) || (iVar6 == 3)) {
      google_golang_org_grpc_balancer_base___baseBalancer__regeneratePicker(pgVar5);
      pgVar5 = (google_golang_org_grpc_balancer_base_baseBalancer *)sc.tab;
    }
    (*(code *)(pgVar5->cc).tab[2].inter)
              ((pgVar5->cc).data,pgVar5->state,(pgVar5->picker).tab,(pgVar5->picker).data);
    return;
  }
  if (in_RDI != 1) {
    if (in_RDI != 0) goto LAB_006aaa52;
    (**(code **)((int)sc.data + 0x18))(in_RCX);
  }
  return;
}



// WARNING: Unknown calling convention

void google_golang_org_grpc_balancer_base___baseBalancer__Close
               (google_golang_org_grpc_balancer_base_baseBalancer *b)

{
  return;
}



// WARNING: Unknown calling convention

void google_golang_org_grpc_balancer_base___baseBalancer__ExitIdle
               (google_golang_org_grpc_balancer_base_baseBalancer *b)

{
  return;
}



void google_golang_org_grpc_balancer_base___errPicker__Pick
               (google_golang_org_grpc_balancer_base_errPicker *p,
               google_golang_org_grpc_balancer_PickInfo info,
               google_golang_org_grpc_balancer_PickResult ~r0,error ~r1)

{
  return;
}



int google_golang_org_grpc_balancer_base_init(EVP_PKEY_CTX *ctx)

{
  undefined8 *extraout_RAX;
  google_golang_org_grpc_grpclog_componentData *cData;
  undefined8 *extraout_RAX_00;
  google_golang_org_grpc_grpclog_componentData *c;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *puVar1;
  bool ok;
  void *~r0;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_mapaccess2_faststr
            ((internal_abi_MapType *)&DAT_0082b7e0,
             (runtime_hmap *)google_golang_org_grpc_grpclog_cache,in_stack_ffffffffffffffd0,
             &DAT_008b1cce,true);
  ok = SUB81(~r0,0);
  if (ok == false) {
    runtime_newobject((internal_abi_Type *)&DAT_00842e60,~r0);
    extraout_RAX_00[1] = 8;
    *extraout_RAX_00 = &DAT_008b1cce;
    runtime_mapassign_faststr
              ((internal_abi_MapType *)&DAT_0082b7e0,
               (runtime_hmap *)google_golang_org_grpc_grpclog_cache,in_stack_ffffffffffffffd0,
               &DAT_008b1cce);
    puVar1 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_00;
      extraout_R11[1] = *extraout_RAX_02;
      puVar1 = extraout_RAX_02;
    }
    *puVar1 = extraout_RAX_00;
    puVar1 = extraout_RAX_00;
  }
  else {
    puVar1 = (undefined8 *)*extraout_RAX;
  }
  google_golang_org_grpc_balancer_base_logger.tab =
       (runtime_itab *)
       go_itab__google_golang_org_grpc_grpclog_componentData_google_golang_org_grpc_grpclog_DepthLoggerV2
  ;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_03;
    extraout_R11_00[1] = google_golang_org_grpc_balancer_base_logger.data;
    puVar1 = extraout_RAX_03;
  }
  google_golang_org_grpc_balancer_base_logger.data = puVar1;
  return (int)puVar1;
}



void type__eq_google_golang_org_grpc_balancer_base_SubConnInfo
               (google_golang_org_grpc_balancer_base_SubConnInfo *p,
               google_golang_org_grpc_balancer_base_SubConnInfo *q,bool r)

{
  undefined extraout_CL;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    r = (bool)extraout_CL;
  }
  type__eq_google_golang_org_grpc_resolver_Address(&p->Address,&q->Address,r);
  return;
}



void type__eq_google_golang_org_grpc_balancer_base_baseBuilder
               (google_golang_org_grpc_balancer_base_baseBuilder *p,
               google_golang_org_grpc_balancer_base_baseBuilder *q,bool r)

{
  runtime_itab *tab;
  char extraout_AL;
  bool ~r0;
  int unaff_R14;
  google_golang_org_grpc_balancer_base_baseBuilder *pgStack0000000000000008;
  google_golang_org_grpc_balancer_base_baseBuilder *pgStack0000000000000010;
  
  pgStack0000000000000008 = p;
  pgStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((pgStack0000000000000010->name).len == (pgStack0000000000000008->name).len) &&
      (runtime_memequal(), extraout_AL != '\0')) &&
     (tab = (pgStack0000000000000008->pickerBuilder).tab,
     (pgStack0000000000000010->pickerBuilder).tab == tab)) {
    runtime_ifaceeq(tab,(pgStack0000000000000008->pickerBuilder).data,
                    (pgStack0000000000000010->pickerBuilder).data,~r0);
  }
  return;
}



void type__eq__1_google_golang_org_grpc_resolver_Address
               (google_golang_org_grpc_resolver_Address (*p) [1],
               google_golang_org_grpc_resolver_Address (*q) [1],bool r)

{
  undefined extraout_CL;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    r = (bool)extraout_CL;
  }
  type__eq_google_golang_org_grpc_resolver_Address(*p,*q,r);
  return;
}



void google_golang_org_grpc_internal_balancer_gracefulswitch_ParseConfig
               (encoding_json_RawMessage cfg,
               google_golang_org_grpc_serviceconfig_LoadBalancingConfig ~r0,error ~r1)

{
  __uint8 data;
  google_golang_org_grpc_balancer_Builder ~r0_00;
  runtime_iface r;
  __interface___ a;
  __interface___ a_00;
  __interface___ a_01;
  interface___ v;
  error ~r0_01;
  error ~r0_02;
  error ~r0_03;
  error ~r0_04;
  uint8 *in_RAX;
  int *extraout_RAX;
  __map_string_encoding_json_RawMessage *_lbCfg;
  int extraout_RAX_00;
  uint64 val;
  int extraout_RAX_01;
  undefined8 extraout_RAX_02;
  void *x;
  undefined8 extraout_RAX_03;
  int extraout_RAX_04;
  undefined8 extraout_RAX_05;
  undefined8 extraout_RAX_06;
  int extraout_RAX_07;
  int extraout_RAX_08;
  int extraout_RAX_09;
  int iVar1;
  int extraout_RAX_10;
  int extraout_RAX_11;
  void *x_00;
  int extraout_RCX;
  undefined8 uVar2;
  void *in_RBX;
  map_string_encoding_json_RawMessage e;
  runtime_hmap *h;
  undefined8 extraout_RBX;
  void *~r0_05;
  void *~r0_06;
  undefined8 uVar3;
  undefined8 extraout_RDI;
  int iVar4;
  undefined8 *extraout_R11;
  void **extraout_R11_00;
  undefined8 *extraout_R11_01;
  int unaff_R14;
  string in_stack_fffffffffffffec8;
  runtime_itab *in_stack_fffffffffffffed8;
  internal_abi_Type *in_stack_fffffffffffffee0;
  void *in_stack_fffffffffffffee8;
  runtime_itab *in_stack_fffffffffffffef0;
  void *in_stack_fffffffffffffef8;
  int i;
  undefined8 local_b8;
  undefined8 local_b0;
  int local_a8;
  int *local_a0;
  undefined local_98 [16];
  undefined local_88 [16];
  undefined local_78 [16];
  runtime_hiter local_68;
  
  while (&local_b8 <= *(undefined8 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_newobject((internal_abi_Type *)&DAT_00802ae0,in_RBX);
  *extraout_RAX = 0;
  data.cap = (int)in_stack_fffffffffffffed8;
  data.array = in_stack_fffffffffffffec8.str;
  data.len = in_stack_fffffffffffffec8.len;
  v.data = in_stack_fffffffffffffee8;
  v._type = in_stack_fffffffffffffee0;
  ~r0_01.data = in_stack_fffffffffffffef8;
  ~r0_01.tab = in_stack_fffffffffffffef0;
  local_a0 = extraout_RAX;
  encoding_json_Unmarshal(data,v,~r0_01);
  if (extraout_RAX_00 != 0) {
    return;
  }
  local_a8 = *local_a0;
  iVar1 = local_a0[1];
  val = 0;
  while( true ) {
    if (iVar1 <= (int)val) {
      runtime_slicebytetostring((runtime_tmpBuf *)0x0,in_RAX,(int)in_RBX,in_stack_fffffffffffffec8);
      runtime_convTstring(in_stack_fffffffffffffec8,x);
      local_98._8_8_ = extraout_RAX_03;
      local_98._0_8_ = &DAT_008075e0;
      a_00.len = (int)in_stack_fffffffffffffee0;
      a_00.array = (interface___ *)in_stack_fffffffffffffed8;
      a_00.cap = (int)in_stack_fffffffffffffee8;
      ~r0_03.data = in_stack_fffffffffffffef8;
      ~r0_03.tab = in_stack_fffffffffffffef0;
      fmt_Errorf(in_stack_fffffffffffffec8,a_00,~r0_03);
      return;
    }
    local_88._8_8_ = *(int **)(local_a8 + val * 8);
    if ((int *)local_88._8_8_ == (int *)0x0) {
      iVar4 = 0;
    }
    else {
      iVar4 = *(int *)local_88._8_8_;
    }
    if (iVar4 != 1) {
      local_88._0_8_ = &DAT_0082d460;
      runtime_convT64(val,(void *)local_88._8_8_);
      local_78._8_8_ = extraout_RAX_02;
      local_78._0_8_ = &DAT_00807760;
      a.len = (int)in_stack_fffffffffffffee0;
      a.array = (interface___ *)in_stack_fffffffffffffed8;
      a.cap = (int)in_stack_fffffffffffffee8;
      ~r0_02.data = in_stack_fffffffffffffef8;
      ~r0_02.tab = in_stack_fffffffffffffef0;
      fmt_Errorf(in_stack_fffffffffffffec8,a,~r0_02);
      return;
    }
    FUN_0046cdab();
    runtime_mapiterinit((internal_abi_MapType *)&DAT_0082d460,h,&local_68);
    in_stack_fffffffffffffef0 = (runtime_itab *)0x0;
    x_00 = (void *)0x0;
    uVar2 = 0;
    in_stack_fffffffffffffef8 = (void *)0x0;
    uVar3 = 0;
