  undefined8 uStack_48;
  undefined8 uStack_40;
  
  while (&stack0xfffffffffffffff8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar2 = d->len;
  local_50._1_7_ = in_XMM15._1_7_;
  uStack_48 = in_XMM15._0_8_;
  uStack_40 = in_XMM15._8_8_;
  local_50._0_1_ = 0x80;
  uVar4 = (uint)((dword)uVar2 & 0x3f);
  iVar1 = uVar4 - 0x78;
  if (uVar4 < 0x38) {
    iVar1 = uVar4 - 0x38;
  }
  uVar4 = -iVar1;
  if (0x48 < uVar4 + 8) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlenU();
  }
  if (uVar4 + 8 < uVar4) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceBU();
  }
  uVar3 = uVar2 << 3;
  *(uint *)((int)&local_50 + (uVar4 & (int)(uVar4 - 0x48) >> 0x3f)) =
       uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |
       (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |
       (uVar3 & 0xff00) << 0x28 | uVar2 << 0x3b;
  p.cap = in_stack_ffffffffffffff88;
  p.array = (uint8 *)in_stack_ffffffffffffff78._type;
  p.len = (int)in_stack_ffffffffffffff78.data;
  err.data._4_4_ = in_stack_ffffffffffffff9c;
  err._0_12_ = in_stack_ffffffffffffff90;
  crypto_sha1___digest__Write(d,p,(int)&local_50,err);
  if (d->nx == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffff78);
}



void crypto_sha1___digest__ConstantTimeSum(crypto_sha1_digest *d,__uint8 in,__uint8 ~r0)

{
  uint8 ~r0_00 [20];
  runtime_slice ~r0_01;
  void *extraout_RAX;
  int in_RCX;
  void *in_RBX;
  uint in_RDI;
  int unaff_R14;
  undefined4 in_stack_ffffffffffffff38;
  undefined4 in_stack_ffffffffffffff3c;
  undefined4 in_stack_ffffffffffffff40;
  undefined4 in_stack_ffffffffffffff44;
  undefined4 in_stack_ffffffffffffff48;
  undefined4 in_stack_ffffffffffffff4c;
  undefined local_8c [20];
  crypto_sha1_digest local_78;
  
  while (local_78.x + 0x1c <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_78.h._0_8_ = *(undefined8 *)d->h;
  FUN_0046d10c();
  ~r0_00[4] = (char)in_stack_ffffffffffffff3c;
  ~r0_00[5] = (char)((dword)in_stack_ffffffffffffff3c >> 8);
  ~r0_00[6] = (char)((dword)in_stack_ffffffffffffff3c >> 0x10);
  ~r0_00[7] = (char)((dword)in_stack_ffffffffffffff3c >> 0x18);
  ~r0_00[0] = (char)in_stack_ffffffffffffff38;
  ~r0_00[1] = (char)((dword)in_stack_ffffffffffffff38 >> 8);
  ~r0_00[2] = (char)((dword)in_stack_ffffffffffffff38 >> 0x10);
  ~r0_00[3] = (char)((dword)in_stack_ffffffffffffff38 >> 0x18);
  ~r0_00[8] = (char)in_stack_ffffffffffffff40;
  ~r0_00[9] = (char)((dword)in_stack_ffffffffffffff40 >> 8);
  ~r0_00[10] = (char)((dword)in_stack_ffffffffffffff40 >> 0x10);
  ~r0_00[11] = (char)((dword)in_stack_ffffffffffffff40 >> 0x18);
  ~r0_00[12] = (char)in_stack_ffffffffffffff44;
  ~r0_00[13] = (char)((dword)in_stack_ffffffffffffff44 >> 8);
  ~r0_00[14] = (char)((dword)in_stack_ffffffffffffff44 >> 0x10);
  ~r0_00[15] = (char)((dword)in_stack_ffffffffffffff44 >> 0x18);
  ~r0_00[16] = (char)in_stack_ffffffffffffff48;
  ~r0_00[17] = (char)((dword)in_stack_ffffffffffffff48 >> 8);
  ~r0_00[18] = (char)((dword)in_stack_ffffffffffffff48 >> 0x10);
  ~r0_00[19] = (char)((dword)in_stack_ffffffffffffff48 >> 0x18);
  crypto_sha1___digest__constSum(&local_78,~r0_00);
  if (in_RDI < in_RCX + 0x14U) {
    ~r0_01.array._4_4_ = in_stack_ffffffffffffff3c;
    ~r0_01.array._0_4_ = in_stack_ffffffffffffff38;
    ~r0_01.len._0_4_ = in_stack_ffffffffffffff40;
    ~r0_01.len._4_4_ = in_stack_ffffffffffffff44;
    ~r0_01.cap._0_4_ = in_stack_ffffffffffffff48;
    ~r0_01.cap._4_4_ = in_stack_ffffffffffffff4c;
    runtime_growslice(in_RBX,in_RCX + 0x14U,in_RDI,0x14,(internal_abi_Type *)&DAT_00807920,~r0_01);
    in_RBX = extraout_RAX;
  }
  runtime_memmove((void *)((int)in_RBX + in_RCX),local_8c,0x14);
  return;
}



void crypto_sha1___digest__constSum(crypto_sha1_digest *d,uint8 ~r0 [20])

{
  byte *pbVar1;
  undefined4 uVar2;
  uint64 uVar3;
  char cVar4;
  int i_4;
  uint8 i_1;
  byte bVar5;
  uint8 mask;
  uint8 i_3;
  int i_2;
  uint uVar6;
  uint8 separator;
  uint8 t;
  uint8 mask1b;
  uint32 s;
  uint32 s_1;
  int iVar7;
  uint uVar8;
  uint i;
  byte bVar9;
  int unaff_R14;
  undefined in_XMM15 [16];
  __uint8 in_stack_ffffffffffffff98;
  undefined8 local_40;
  undefined4 local_38;
  undefined4 uStack_34;
  undefined4 uStack_30;
  undefined4 uStack_2c;
  undefined4 uStack_28;
  undefined8 local_24;
  uint32 uStack_1c;
  uint32 uStack_18;
  uint32 uStack_14;
  uint8 *local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_40 = 0;
  uVar3 = d->len;
  for (uVar6 = 0; uVar6 < 8; uVar6 = uVar6 + 1) {
    iVar7 = uVar6 * 8 + -0x38;
    uVar8 = -iVar7;
    bVar5 = (byte)uVar8;
    *(byte *)((int)&local_40 + uVar6) =
         (byte)((uVar3 << 3) >> (bVar5 & 0x3f)) & (bVar5 + (char)iVar7) - (uVar8 < 0x40);
  }
  cVar4 = (char)d->nx;
  t = cVar4 - 0x38;
  t = (char)t >> 7;
  separator = 0x80;
  for (i_1 = 0; i_1 < 0x40; i_1 = i_1 + 1) {
    bVar5 = (char)(i_1 - cVar4) >> 7;
    bVar9 = d->x[i_1] & bVar5 | ~bVar5 & separator;
    d->x[i_1] = bVar9;
    separator = separator & bVar5;
    if (0x37 < i_1) {
      if (7 < (byte)(i_1 - 0x38)) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      d->x[i_1] = *(byte *)((int)&local_40 + (uint)(byte)(i_1 - 0x38)) & t | bVar9;
    }
  }
  local_10 = d->x;
  crypto_sha1_block(d,in_stack_ffffffffffffff98);
  local_38 = in_XMM15._0_4_;
  uStack_30 = in_XMM15._4_4_;
  uStack_2c = in_XMM15._8_4_;
  uStack_28 = in_XMM15._12_4_;
  local_24._0_4_ = (undefined4)*(undefined8 *)d->h;
  local_24 = CONCAT44(d->h[1],(undefined4)local_24);
  uStack_1c = d->h[2];
  uStack_18 = d->h[3];
  uStack_14 = d->h[4];
  i_2 = 0;
  uStack_34 = local_38;
  while( true ) {
    if (4 < i_2) {
      for (i_3 = 0; i_3 < 0x40; i_3 = i_3 + 1) {
        if (i_3 < 0x38) {
          d->x[i_3] = separator;
          separator = 0;
        }
        else {
          if (7 < (byte)(i_3 - 0x38)) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          d->x[i_3] = *(uint8 *)((int)&local_40 + (uint)(byte)(i_3 - 0x38));
        }
      }
      crypto_sha1_block(d,in_stack_ffffffffffffff98);
      local_24._0_4_ = (undefined4)*(undefined8 *)d->h;
      local_24 = CONCAT44(d->h[1],(undefined4)local_24);
      uStack_1c = d->h[2];
      uStack_18 = d->h[3];
      uStack_14 = d->h[4];
      i_4 = 0;
      while( true ) {
        if (4 < i_4) {
          return;
        }
        uVar6 = i_4 * 4;
        if (0x13 < uVar6) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        uVar2 = *(undefined4 *)((int)&local_24 + i_4 * 4);
        bVar5 = ~t;
        *(byte *)(&local_38 + i_4) =
             (byte)((dword)uVar2 >> 0x18) & bVar5 | *(byte *)(&local_38 + i_4);
        if (0x13 < uVar6 + 1) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        pbVar1 = (byte *)((int)&local_38 + i_4 * 4 + 1);
        *pbVar1 = (byte)((dword)uVar2 >> 0x10) & bVar5 | *pbVar1;
        if (0x13 < uVar6 + 2) break;
        pbVar1 = (byte *)((int)&local_38 + i_4 * 4 + 2);
        *pbVar1 = (byte)((dword)uVar2 >> 8) & bVar5 | *pbVar1;
        if (0x13 < uVar6 + 3) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        pbVar1 = (byte *)((int)&local_38 + i_4 * 4 + 3);
        *pbVar1 = (byte)uVar2 & bVar5 | *pbVar1;
        i_4 = i_4 + 1;
      }
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    uVar2 = *(undefined4 *)((int)&local_24 + i_2 * 4);
    uVar6 = i_2 * 4;
    if (0x13 < uVar6) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(byte *)(&local_38 + i_2) = (byte)((dword)uVar2 >> 0x18) & t;
    if (0x13 < uVar6 + 1) break;
    *(byte *)((int)&local_38 + i_2 * 4 + 1) = (byte)((dword)uVar2 >> 0x10) & t;
    if (0x13 < uVar6 + 2) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(byte *)((int)&local_38 + i_2 * 4 + 2) = (byte)((dword)uVar2 >> 8) & t;
    if (0x13 < uVar6 + 3) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(byte *)((int)&local_38 + i_2 * 4 + 3) = (byte)uVar2 & t;
    i_2 = i_2 + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void crypto_sha1_block(crypto_sha1_digest *dig,__uint8 p)

{
  uint in_RCX;
  int safeLen;
  uint uVar1;
  uint in_RDI;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((crypto_sha1_useAVX2 == false) || ((int)in_RCX < 0x100)) {
    crypto_sha1_blockAMD64();
  }
  else {
    uVar1 = in_RCX - 0x80;
    if ((in_RCX - 0x80 & 0x7f) != 0) {
      uVar1 = in_RCX - 0xc0;
    }
    if (in_RDI < uVar1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    crypto_sha1_blockAVX2();
    if (in_RCX < uVar1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    crypto_sha1_blockAMD64();
  }
  return;
}



int crypto_sha1_init(EVP_PKEY_CTX *ctx)

{
  uint uVar1;
  
  if ((internal_cpu_X86.HasAVX2) && (internal_cpu_X86.HasBMI1)) {
    uVar1 = (uint)internal_cpu_X86.HasBMI2;
  }
  else {
    uVar1 = 0;
  }
  crypto_sha1_useAVX2 = (bool)(char)uVar1;
  return uVar1;
}



// WARNING: Unknown calling convention

void crypto_sha1_blockAMD64(void)

{
  dword *pdVar1;
  dword dVar2;
  dword dVar3;
  dword dVar4;
  dword dVar5;
  dword dVar6;
  dword dVar7;
  dword dVar8;
  dword dVar9;
  dword dVar10;
  dword dVar11;
  dword dVar12;
  dword dVar13;
  dword dVar14;
  dword dVar15;
  dword dVar16;
  dword dVar17;
  dword dVar18;
  dword dVar19;
  dword dVar20;
  dword dVar21;
  dword dVar22;
  dword dVar23;
  dword dVar24;
  dword dVar25;
  dword dVar26;
  dword dVar27;
  dword dVar28;
  dword dVar29;
  dword dVar30;
  dword dVar31;
  dword dVar32;
  dword *in_stack_00000008;
  dword *in_stack_00000010;
  uint in_stack_00000018;
  
  pdVar1 = (dword *)((int)in_stack_00000010 + (in_stack_00000018 & 0xffffffffffffffc0));
  dVar3 = *in_stack_00000008;
  dVar10 = in_stack_00000008[1];
  dVar4 = in_stack_00000008[2];
  dVar7 = in_stack_00000008[3];
  dVar14 = in_stack_00000008[4];
  if (in_stack_00000010 != pdVar1) {
    do {
      dVar31 = *in_stack_00000010;
      dVar15 = dVar31 >> 0x18 | (dVar31 & 0xff0000) >> 8 | (dVar31 & 0xff00) << 8 | dVar31 << 0x18;
      dVar8 = dVar10 << 0x1e | dVar10 >> 2;
      dVar11 = dVar14 + ((dVar7 ^ dVar4) & dVar10 ^ dVar7) + 0x5a827999 + dVar15 +
               (dVar3 << 5 | dVar3 >> 0x1b);
      dVar31 = in_stack_00000010[1];
      dVar16 = dVar31 >> 0x18 | (dVar31 & 0xff0000) >> 8 | (dVar31 & 0xff00) << 8 | dVar31 << 0x18;
      dVar2 = dVar3 << 0x1e | dVar3 >> 2;
      dVar5 = dVar7 + ((dVar4 ^ dVar8) & dVar3 ^ dVar4) + 0x5a827999 + dVar16 +
              (dVar11 * 0x20 | dVar11 >> 0x1b);
      dVar31 = in_stack_00000010[2];
      dVar17 = dVar31 >> 0x18 | (dVar31 & 0xff0000) >> 8 | (dVar31 & 0xff00) << 8 | dVar31 << 0x18;
      dVar12 = dVar11 * 0x40000000 | dVar11 >> 2;
      dVar11 = dVar4 + ((dVar8 ^ dVar2) & dVar11 ^ dVar8) + 0x5a827999 + dVar17 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar31 = in_stack_00000010[3];
      dVar18 = dVar31 >> 0x18 | (dVar31 & 0xff0000) >> 8 | (dVar31 & 0xff00) << 8 | dVar31 << 0x18;
      dVar6 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar8 = dVar8 + ((dVar2 ^ dVar12) & dVar5 ^ dVar2) + 0x5a827999 + dVar18 +
              (dVar11 * 0x20 | dVar11 >> 0x1b);
      dVar31 = in_stack_00000010[4];
      dVar19 = dVar31 >> 0x18 | (dVar31 & 0xff0000) >> 8 | (dVar31 & 0xff00) << 8 | dVar31 << 0x18;
      dVar5 = dVar11 * 0x40000000 | dVar11 >> 2;
      dVar2 = dVar2 + ((dVar12 ^ dVar6) & dVar11 ^ dVar12) + 0x5a827999 + dVar19 +
              (dVar8 * 0x20 | dVar8 >> 0x1b);
      dVar31 = in_stack_00000010[5];
      dVar20 = dVar31 >> 0x18 | (dVar31 & 0xff0000) >> 8 | (dVar31 & 0xff00) << 8 | dVar31 << 0x18;
      dVar9 = dVar8 * 0x40000000 | dVar8 >> 2;
      dVar8 = dVar12 + ((dVar6 ^ dVar5) & dVar8 ^ dVar6) + 0x5a827999 + dVar20 +
              (dVar2 * 0x20 | dVar2 >> 0x1b);
      dVar31 = in_stack_00000010[6];
      dVar21 = dVar31 >> 0x18 | (dVar31 & 0xff0000) >> 8 | (dVar31 & 0xff00) << 8 | dVar31 << 0x18;
      dVar11 = dVar2 * 0x40000000 | dVar2 >> 2;
      dVar6 = dVar6 + ((dVar5 ^ dVar9) & dVar2 ^ dVar5) + 0x5a827999 + dVar21 +
              (dVar8 * 0x20 | dVar8 >> 0x1b);
      dVar31 = in_stack_00000010[7];
      dVar22 = dVar31 >> 0x18 | (dVar31 & 0xff0000) >> 8 | (dVar31 & 0xff00) << 8 | dVar31 << 0x18;
      dVar12 = dVar8 * 0x40000000 | dVar8 >> 2;
      dVar2 = dVar5 + ((dVar9 ^ dVar11) & dVar8 ^ dVar9) + 0x5a827999 + dVar22 +
              (dVar6 * 0x20 | dVar6 >> 0x1b);
      dVar31 = in_stack_00000010[8];
      dVar23 = dVar31 >> 0x18 | (dVar31 & 0xff0000) >> 8 | (dVar31 & 0xff00) << 8 | dVar31 << 0x18;
      dVar8 = dVar6 * 0x40000000 | dVar6 >> 2;
      dVar6 = dVar9 + ((dVar11 ^ dVar12) & dVar6 ^ dVar11) + 0x5a827999 + dVar23 +
              (dVar2 * 0x20 | dVar2 >> 0x1b);
      dVar31 = in_stack_00000010[9];
      dVar24 = dVar31 >> 0x18 | (dVar31 & 0xff0000) >> 8 | (dVar31 & 0xff00) << 8 | dVar31 << 0x18;
      dVar5 = dVar2 * 0x40000000 | dVar2 >> 2;
      dVar2 = dVar11 + ((dVar12 ^ dVar8) & dVar2 ^ dVar12) + 0x5a827999 + dVar24 +
              (dVar6 * 0x20 | dVar6 >> 0x1b);
      dVar31 = in_stack_00000010[10];
      dVar25 = dVar31 >> 0x18 | (dVar31 & 0xff0000) >> 8 | (dVar31 & 0xff00) << 8 | dVar31 << 0x18;
      dVar9 = dVar6 * 0x40000000 | dVar6 >> 2;
      dVar12 = dVar12 + ((dVar8 ^ dVar5) & dVar6 ^ dVar8) + 0x5a827999 + dVar25 +
               (dVar2 * 0x20 | dVar2 >> 0x1b);
      dVar31 = in_stack_00000010[0xb];
      dVar26 = dVar31 >> 0x18 | (dVar31 & 0xff0000) >> 8 | (dVar31 & 0xff00) << 8 | dVar31 << 0x18;
      dVar11 = dVar2 * 0x40000000 | dVar2 >> 2;
      dVar6 = dVar8 + ((dVar5 ^ dVar9) & dVar2 ^ dVar5) + 0x5a827999 + dVar26 +
              (dVar12 * 0x20 | dVar12 >> 0x1b);
      dVar31 = in_stack_00000010[0xc];
      dVar27 = dVar31 >> 0x18 | (dVar31 & 0xff0000) >> 8 | (dVar31 & 0xff00) << 8 | dVar31 << 0x18;
      dVar13 = dVar12 * 0x40000000 | dVar12 >> 2;
      dVar2 = dVar5 + ((dVar9 ^ dVar11) & dVar12 ^ dVar9) + 0x5a827999 + dVar27 +
              (dVar6 * 0x20 | dVar6 >> 0x1b);
      dVar31 = in_stack_00000010[0xd];
      dVar28 = dVar31 >> 0x18 | (dVar31 & 0xff0000) >> 8 | (dVar31 & 0xff00) << 8 | dVar31 << 0x18;
      dVar8 = dVar6 * 0x40000000 | dVar6 >> 2;
      dVar6 = dVar9 + ((dVar11 ^ dVar13) & dVar6 ^ dVar11) + 0x5a827999 + dVar28 +
              (dVar2 * 0x20 | dVar2 >> 0x1b);
      dVar31 = in_stack_00000010[0xe];
      dVar29 = dVar31 >> 0x18 | (dVar31 & 0xff0000) >> 8 | (dVar31 & 0xff00) << 8 | dVar31 << 0x18;
      dVar5 = dVar2 * 0x40000000 | dVar2 >> 2;
      dVar2 = dVar11 + ((dVar13 ^ dVar8) & dVar2 ^ dVar13) + 0x5a827999 + dVar29 +
              (dVar6 * 0x20 | dVar6 >> 0x1b);
      dVar31 = in_stack_00000010[0xf];
      dVar30 = dVar31 >> 0x18 | (dVar31 & 0xff0000) >> 8 | (dVar31 & 0xff00) << 8 | dVar31 << 0x18;
      dVar9 = dVar6 * 0x40000000 | dVar6 >> 2;
      dVar6 = dVar13 + ((dVar8 ^ dVar5) & dVar6 ^ dVar8) + 0x5a827999 + dVar30 +
              (dVar2 * 0x20 | dVar2 >> 0x1b);
      dVar31 = dVar15 ^ dVar28 ^ dVar23 ^ dVar17;
      dVar13 = dVar31 << 1 | (dword)((sdword)dVar31 < 0);
      dVar31 = dVar2 * 0x40000000 | dVar2 >> 2;
      dVar11 = dVar8 + ((dVar5 ^ dVar9) & dVar2 ^ dVar5) + 0x5a827999 + dVar13 +
               (dVar6 * 0x20 | dVar6 >> 0x1b);
      dVar2 = dVar16 ^ dVar29 ^ dVar24 ^ dVar18;
      dVar15 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar12 = dVar6 * 0x40000000 | dVar6 >> 2;
      dVar2 = dVar5 + ((dVar9 ^ dVar31) & dVar6 ^ dVar9) + 0x5a827999 + dVar15 +
              (dVar11 * 0x20 | dVar11 >> 0x1b);
      dVar5 = dVar17 ^ dVar30 ^ dVar25 ^ dVar19;
      dVar16 = dVar5 << 1 | (dword)((sdword)dVar5 < 0);
      dVar5 = dVar11 * 0x40000000 | dVar11 >> 2;
      dVar6 = dVar9 + ((dVar31 ^ dVar12) & dVar11 ^ dVar31) + 0x5a827999 + dVar16 +
              (dVar2 * 0x20 | dVar2 >> 0x1b);
      dVar11 = dVar18 ^ dVar13 ^ dVar26 ^ dVar20;
      dVar17 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar11 = dVar2 * 0x40000000 | dVar2 >> 2;
      dVar31 = dVar31 + ((dVar12 ^ dVar5) & dVar2 ^ dVar12) + 0x5a827999 + dVar17 +
               (dVar6 * 0x20 | dVar6 >> 0x1b);
      dVar2 = dVar19 ^ dVar15 ^ dVar27 ^ dVar21;
      dVar18 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar8 = dVar6 * 0x40000000 | dVar6 >> 2;
      dVar6 = dVar12 + (dVar6 ^ dVar11 ^ dVar5) + 0x6ed9eba1 + dVar18 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar2 = dVar20 ^ dVar16 ^ dVar28 ^ dVar22;
      dVar19 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar2 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar5 = dVar5 + (dVar31 ^ dVar8 ^ dVar11) + 0x6ed9eba1 + dVar19 +
              (dVar6 * 0x20 | dVar6 >> 0x1b);
      dVar31 = dVar21 ^ dVar17 ^ dVar29 ^ dVar23;
      dVar20 = dVar31 << 1 | (dword)((sdword)dVar31 < 0);
      dVar9 = dVar6 * 0x40000000 | dVar6 >> 2;
      dVar31 = dVar11 + (dVar6 ^ dVar2 ^ dVar8) + 0x6ed9eba1 + dVar20 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar11 = dVar22 ^ dVar18 ^ dVar30 ^ dVar24;
      dVar21 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar6 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar5 = dVar8 + (dVar5 ^ dVar9 ^ dVar2) + 0x6ed9eba1 + dVar21 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar11 = dVar23 ^ dVar19 ^ dVar13 ^ dVar25;
      dVar22 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar11 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar31 = dVar2 + (dVar31 ^ dVar6 ^ dVar9) + 0x6ed9eba1 + dVar22 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar2 = dVar24 ^ dVar20 ^ dVar15 ^ dVar26;
      dVar23 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar8 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar9 = dVar9 + (dVar5 ^ dVar11 ^ dVar6) + 0x6ed9eba1 + dVar23 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar2 = dVar25 ^ dVar21 ^ dVar16 ^ dVar27;
      dVar24 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar2 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar5 = dVar6 + (dVar31 ^ dVar8 ^ dVar11) + 0x6ed9eba1 + dVar24 +
              (dVar9 * 0x20 | dVar9 >> 0x1b);
      dVar31 = dVar26 ^ dVar22 ^ dVar17 ^ dVar28;
      dVar25 = dVar31 << 1 | (dword)((sdword)dVar31 < 0);
      dVar12 = dVar9 * 0x40000000 | dVar9 >> 2;
      dVar31 = dVar11 + (dVar9 ^ dVar2 ^ dVar8) + 0x6ed9eba1 + dVar25 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar11 = dVar27 ^ dVar23 ^ dVar18 ^ dVar29;
      dVar26 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar6 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar5 = dVar8 + (dVar5 ^ dVar12 ^ dVar2) + 0x6ed9eba1 + dVar26 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar11 = dVar28 ^ dVar24 ^ dVar19 ^ dVar30;
      dVar27 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar11 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar31 = dVar2 + (dVar31 ^ dVar6 ^ dVar12) + 0x6ed9eba1 + dVar27 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar2 = dVar29 ^ dVar25 ^ dVar20 ^ dVar13;
      dVar28 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar8 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar9 = dVar12 + (dVar5 ^ dVar11 ^ dVar6) + 0x6ed9eba1 + dVar28 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar2 = dVar30 ^ dVar26 ^ dVar21 ^ dVar15;
      dVar29 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar2 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar5 = dVar6 + (dVar31 ^ dVar8 ^ dVar11) + 0x6ed9eba1 + dVar29 +
              (dVar9 * 0x20 | dVar9 >> 0x1b);
      dVar31 = dVar13 ^ dVar27 ^ dVar22 ^ dVar16;
      dVar13 = dVar31 << 1 | (dword)((sdword)dVar31 < 0);
      dVar12 = dVar9 * 0x40000000 | dVar9 >> 2;
      dVar31 = dVar11 + (dVar9 ^ dVar2 ^ dVar8) + 0x6ed9eba1 + dVar13 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar11 = dVar15 ^ dVar28 ^ dVar23 ^ dVar17;
      dVar15 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar6 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar5 = dVar8 + (dVar5 ^ dVar12 ^ dVar2) + 0x6ed9eba1 + dVar15 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar11 = dVar16 ^ dVar29 ^ dVar24 ^ dVar18;
      dVar16 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar11 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar31 = dVar2 + (dVar31 ^ dVar6 ^ dVar12) + 0x6ed9eba1 + dVar16 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar2 = dVar17 ^ dVar13 ^ dVar25 ^ dVar19;
      dVar17 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar8 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar9 = dVar12 + (dVar5 ^ dVar11 ^ dVar6) + 0x6ed9eba1 + dVar17 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar2 = dVar18 ^ dVar15 ^ dVar26 ^ dVar20;
      dVar18 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar2 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar5 = dVar6 + (dVar31 ^ dVar8 ^ dVar11) + 0x6ed9eba1 + dVar18 +
              (dVar9 * 0x20 | dVar9 >> 0x1b);
      dVar31 = dVar19 ^ dVar16 ^ dVar27 ^ dVar21;
      dVar19 = dVar31 << 1 | (dword)((sdword)dVar31 < 0);
      dVar12 = dVar9 * 0x40000000 | dVar9 >> 2;
      dVar31 = dVar11 + (dVar9 ^ dVar2 ^ dVar8) + 0x6ed9eba1 + dVar19 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar11 = dVar20 ^ dVar17 ^ dVar28 ^ dVar22;
      dVar20 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar6 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar5 = dVar8 + (dVar5 ^ dVar12 ^ dVar2) + 0x6ed9eba1 + dVar20 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar11 = dVar21 ^ dVar18 ^ dVar29 ^ dVar23;
      dVar21 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar11 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar31 = dVar2 + (dVar31 ^ dVar6 ^ dVar12) + 0x6ed9eba1 + dVar21 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar2 = dVar22 ^ dVar19 ^ dVar13 ^ dVar24;
      dVar22 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar8 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar9 = dVar12 + (dVar5 & dVar11 | (dVar5 | dVar11) & dVar6) + -0x70e44324 + dVar22 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar2 = dVar23 ^ dVar20 ^ dVar15 ^ dVar25;
      dVar23 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar2 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar5 = dVar6 + (dVar31 & dVar8 | (dVar31 | dVar8) & dVar11) + -0x70e44324 + dVar23 +
              (dVar9 * 0x20 | dVar9 >> 0x1b);
      dVar31 = dVar24 ^ dVar21 ^ dVar16 ^ dVar26;
      dVar24 = dVar31 << 1 | (dword)((sdword)dVar31 < 0);
      dVar12 = dVar9 * 0x40000000 | dVar9 >> 2;
      dVar31 = dVar11 + (dVar9 & dVar2 | (dVar9 | dVar2) & dVar8) + -0x70e44324 + dVar24 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar11 = dVar25 ^ dVar22 ^ dVar17 ^ dVar27;
      dVar25 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar6 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar5 = dVar8 + (dVar5 & dVar12 | (dVar5 | dVar12) & dVar2) + -0x70e44324 + dVar25 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar11 = dVar26 ^ dVar23 ^ dVar18 ^ dVar28;
      dVar26 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar11 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar31 = dVar2 + (dVar31 & dVar6 | (dVar31 | dVar6) & dVar12) + -0x70e44324 + dVar26 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar2 = dVar27 ^ dVar24 ^ dVar19 ^ dVar29;
      dVar27 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar8 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar9 = dVar12 + (dVar5 & dVar11 | (dVar5 | dVar11) & dVar6) + -0x70e44324 + dVar27 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar2 = dVar28 ^ dVar25 ^ dVar20 ^ dVar13;
      dVar28 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar2 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar5 = dVar6 + (dVar31 & dVar8 | (dVar31 | dVar8) & dVar11) + -0x70e44324 + dVar28 +
              (dVar9 * 0x20 | dVar9 >> 0x1b);
      dVar31 = dVar29 ^ dVar26 ^ dVar21 ^ dVar15;
      dVar29 = dVar31 << 1 | (dword)((sdword)dVar31 < 0);
      dVar12 = dVar9 * 0x40000000 | dVar9 >> 2;
      dVar31 = dVar11 + (dVar9 & dVar2 | (dVar9 | dVar2) & dVar8) + -0x70e44324 + dVar29 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar11 = dVar13 ^ dVar27 ^ dVar22 ^ dVar16;
      dVar13 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar6 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar5 = dVar8 + (dVar5 & dVar12 | (dVar5 | dVar12) & dVar2) + -0x70e44324 + dVar13 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar11 = dVar15 ^ dVar28 ^ dVar23 ^ dVar17;
      dVar15 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar11 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar31 = dVar2 + (dVar31 & dVar6 | (dVar31 | dVar6) & dVar12) + -0x70e44324 + dVar15 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar2 = dVar16 ^ dVar29 ^ dVar24 ^ dVar18;
      dVar16 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar8 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar9 = dVar12 + (dVar5 & dVar11 | (dVar5 | dVar11) & dVar6) + -0x70e44324 + dVar16 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar2 = dVar17 ^ dVar13 ^ dVar25 ^ dVar19;
      dVar17 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar2 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar5 = dVar6 + (dVar31 & dVar8 | (dVar31 | dVar8) & dVar11) + -0x70e44324 + dVar17 +
              (dVar9 * 0x20 | dVar9 >> 0x1b);
      dVar31 = dVar18 ^ dVar15 ^ dVar26 ^ dVar20;
      dVar18 = dVar31 << 1 | (dword)((sdword)dVar31 < 0);
      dVar12 = dVar9 * 0x40000000 | dVar9 >> 2;
      dVar31 = dVar11 + (dVar9 & dVar2 | (dVar9 | dVar2) & dVar8) + -0x70e44324 + dVar18 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar11 = dVar19 ^ dVar16 ^ dVar27 ^ dVar21;
      dVar19 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar6 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar5 = dVar8 + (dVar5 & dVar12 | (dVar5 | dVar12) & dVar2) + -0x70e44324 + dVar19 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar11 = dVar20 ^ dVar17 ^ dVar28 ^ dVar22;
      dVar20 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar11 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar31 = dVar2 + (dVar31 & dVar6 | (dVar31 | dVar6) & dVar12) + -0x70e44324 + dVar20 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar2 = dVar21 ^ dVar18 ^ dVar29 ^ dVar23;
      dVar21 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar8 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar9 = dVar12 + (dVar5 & dVar11 | (dVar5 | dVar11) & dVar6) + -0x70e44324 + dVar21 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar2 = dVar22 ^ dVar19 ^ dVar13 ^ dVar24;
      dVar22 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar2 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar5 = dVar6 + (dVar31 & dVar8 | (dVar31 | dVar8) & dVar11) + -0x70e44324 + dVar22 +
              (dVar9 * 0x20 | dVar9 >> 0x1b);
      dVar31 = dVar23 ^ dVar20 ^ dVar15 ^ dVar25;
      dVar23 = dVar31 << 1 | (dword)((sdword)dVar31 < 0);
      dVar12 = dVar9 * 0x40000000 | dVar9 >> 2;
      dVar31 = dVar11 + (dVar9 & dVar2 | (dVar9 | dVar2) & dVar8) + -0x70e44324 + dVar23 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar11 = dVar24 ^ dVar21 ^ dVar16 ^ dVar26;
      dVar24 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar6 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar5 = dVar8 + (dVar5 & dVar12 | (dVar5 | dVar12) & dVar2) + -0x70e44324 + dVar24 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar11 = dVar25 ^ dVar22 ^ dVar17 ^ dVar27;
      dVar25 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar11 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar31 = dVar2 + (dVar31 & dVar6 | (dVar31 | dVar6) & dVar12) + -0x70e44324 + dVar25 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar2 = dVar26 ^ dVar23 ^ dVar18 ^ dVar28;
      dVar26 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar8 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar9 = dVar12 + (dVar5 ^ dVar11 ^ dVar6) + -0x359d3e2a + dVar26 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar2 = dVar27 ^ dVar24 ^ dVar19 ^ dVar29;
      dVar27 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar2 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar5 = dVar6 + (dVar31 ^ dVar8 ^ dVar11) + -0x359d3e2a + dVar27 +
              (dVar9 * 0x20 | dVar9 >> 0x1b);
      dVar31 = dVar28 ^ dVar25 ^ dVar20 ^ dVar13;
      dVar28 = dVar31 << 1 | (dword)((sdword)dVar31 < 0);
      dVar12 = dVar9 * 0x40000000 | dVar9 >> 2;
      dVar31 = dVar11 + (dVar9 ^ dVar2 ^ dVar8) + -0x359d3e2a + dVar28 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar11 = dVar29 ^ dVar26 ^ dVar21 ^ dVar15;
      dVar29 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar6 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar5 = dVar8 + (dVar5 ^ dVar12 ^ dVar2) + -0x359d3e2a + dVar29 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar11 = dVar13 ^ dVar27 ^ dVar22 ^ dVar16;
      dVar30 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar11 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar31 = dVar2 + (dVar31 ^ dVar6 ^ dVar12) + -0x359d3e2a + dVar30 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar2 = dVar15 ^ dVar28 ^ dVar23 ^ dVar17;
      dVar32 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar8 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar9 = dVar12 + (dVar5 ^ dVar11 ^ dVar6) + -0x359d3e2a + dVar32 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar2 = dVar16 ^ dVar29 ^ dVar24 ^ dVar18;
      dVar13 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar2 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar5 = dVar6 + (dVar31 ^ dVar8 ^ dVar11) + -0x359d3e2a + dVar13 +
              (dVar9 * 0x20 | dVar9 >> 0x1b);
      dVar31 = dVar17 ^ dVar30 ^ dVar25 ^ dVar19;
      dVar15 = dVar31 << 1 | (dword)((sdword)dVar31 < 0);
      dVar12 = dVar9 * 0x40000000 | dVar9 >> 2;
      dVar31 = dVar11 + (dVar9 ^ dVar2 ^ dVar8) + -0x359d3e2a + dVar15 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar11 = dVar18 ^ dVar32 ^ dVar26 ^ dVar20;
      dVar16 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar6 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar5 = dVar8 + (dVar5 ^ dVar12 ^ dVar2) + -0x359d3e2a + dVar16 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar11 = dVar19 ^ dVar13 ^ dVar27 ^ dVar21;
      dVar17 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar11 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar31 = dVar2 + (dVar31 ^ dVar6 ^ dVar12) + -0x359d3e2a + dVar17 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar2 = dVar20 ^ dVar15 ^ dVar28 ^ dVar22;
      dVar18 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar8 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar9 = dVar12 + (dVar5 ^ dVar11 ^ dVar6) + -0x359d3e2a + dVar18 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar2 = dVar21 ^ dVar16 ^ dVar29 ^ dVar23;
      dVar19 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar2 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar5 = dVar6 + (dVar31 ^ dVar8 ^ dVar11) + -0x359d3e2a + dVar19 +
              (dVar9 * 0x20 | dVar9 >> 0x1b);
      dVar31 = dVar22 ^ dVar17 ^ dVar30 ^ dVar24;
      dVar20 = dVar31 << 1 | (dword)((sdword)dVar31 < 0);
      dVar12 = dVar9 * 0x40000000 | dVar9 >> 2;
      dVar31 = dVar11 + (dVar9 ^ dVar2 ^ dVar8) + -0x359d3e2a + dVar20 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar11 = dVar23 ^ dVar18 ^ dVar32 ^ dVar25;
      dVar21 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar6 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar5 = dVar8 + (dVar5 ^ dVar12 ^ dVar2) + -0x359d3e2a + dVar21 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar11 = dVar24 ^ dVar19 ^ dVar13 ^ dVar26;
      dVar13 = dVar11 << 1 | (dword)((sdword)dVar11 < 0);
      dVar11 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar31 = dVar2 + (dVar31 ^ dVar6 ^ dVar12) + -0x359d3e2a + dVar13 +
               (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar2 = dVar25 ^ dVar20 ^ dVar15 ^ dVar27;
      dVar15 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar8 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar9 = dVar12 + (dVar5 ^ dVar11 ^ dVar6) + -0x359d3e2a + dVar15 +
              (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar2 = dVar26 ^ dVar21 ^ dVar16 ^ dVar28;
      dVar12 = dVar2 << 1 | (dword)((sdword)dVar2 < 0);
      dVar2 = dVar31 * 0x40000000 | dVar31 >> 2;
      dVar5 = dVar6 + (dVar31 ^ dVar8 ^ dVar11) + -0x359d3e2a + dVar12 +
              (dVar9 * 0x20 | dVar9 >> 0x1b);
      dVar31 = dVar27 ^ dVar13 ^ dVar17 ^ dVar29;
      dVar6 = dVar9 * 0x40000000 | dVar9 >> 2;
      dVar31 = dVar11 + (dVar9 ^ dVar2 ^ dVar8) + -0x359d3e2a +
               (dVar31 << 1 | (dword)((sdword)dVar31 < 0)) + (dVar5 * 0x20 | dVar5 >> 0x1b);
      dVar30 = dVar28 ^ dVar15 ^ dVar18 ^ dVar30;
      dVar11 = dVar5 * 0x40000000 | dVar5 >> 2;
      dVar5 = dVar8 + (dVar5 ^ dVar6 ^ dVar2) + -0x359d3e2a +
              (dVar30 << 1 | (dword)((sdword)dVar30 < 0)) + (dVar31 * 0x20 | dVar31 >> 0x1b);
      dVar32 = dVar29 ^ dVar12 ^ dVar19 ^ dVar32;
      dVar3 = dVar2 + (dVar31 ^ dVar11 ^ dVar6) + -0x359d3e2a +
              (dVar32 << 1 | (dword)((sdword)dVar32 < 0)) + (dVar5 * 0x20 | dVar5 >> 0x1b) + dVar3;
      dVar10 = dVar5 + dVar10;
      dVar4 = (dVar31 * 0x40000000 | dVar31 >> 2) + dVar4;
      dVar7 = dVar11 + dVar7;
      dVar14 = dVar6 + dVar14;
      in_stack_00000010 = in_stack_00000010 + 0x10;
    } while (in_stack_00000010 < pdVar1);
  }
  *in_stack_00000008 = dVar3;
  in_stack_00000008[1] = dVar10;
  in_stack_00000008[2] = dVar4;
  in_stack_00000008[3] = dVar7;
  in_stack_00000008[4] = dVar14;
  return;
}



// WARNING: Removing unreachable block (ram,0x0068aad3)
// WARNING: Removing unreachable block (ram,0x0068a888)
// WARNING: Removing unreachable block (ram,0x0068a469)
// WARNING: Removing unreachable block (ram,0x0068a44c)
// WARNING: Removing unreachable block (ram,0x0068a42f)
// WARNING: Removing unreachable block (ram,0x0068a413)
// WARNING: Removing unreachable block (ram,0x0068a9aa)
// WARNING: Removing unreachable block (ram,0x0068abe5)
// WARNING: Unknown calling convention

void crypto_sha1_blockAVX2(void)

{
  sdword sVar1;
  undefined auVar2 [16];
  undefined (*pauVar3) [32];
  dword dVar4;
  dword dVar5;
  dword dVar6;
  dword dVar7;
  undefined (*pauVar8) [16];
  dword dVar9;
  dword dVar10;
  dword dVar11;
  dword dVar12;
  dword dVar13;
  dword dVar14;
  undefined1 *puVar15;
  undefined (*pauVar16) [32];
  undefined (*pauVar17) [32];
  int in_FS_OFFSET;
  undefined auVar18 [32];
  undefined auVar19 [32];
  undefined auVar20 [32];
  undefined auVar21 [32];
  undefined auVar22 [32];
  undefined auVar23 [32];
  undefined auVar24 [32];
  undefined auVar25 [32];
  undefined auVar26 [32];
  undefined auVar27 [32];
  undefined auVar28 [32];
  undefined auVar29 [32];
  dword *in_stack_00000008;
  undefined1 *in_stack_00000010;
  uint in_stack_00000018;
  undefined local_588 [32];
  undefined local_568 [32];
  undefined local_548 [32];
  undefined local_528 [32];
  undefined local_508 [32];
  undefined local_4e8 [32];
  undefined local_4c8 [32];
  undefined local_4a8 [32];
  undefined local_488 [32];
  undefined local_468 [32];
  undefined local_448 [32];
  undefined local_428 [32];
  undefined local_408 [32];
  undefined local_3e8 [32];
  undefined local_3c8 [32];
  undefined local_3a8 [32];
  undefined local_388 [32];
  undefined local_368 [32];
  undefined local_348 [32];
  undefined local_328 [32];
  undefined local_2e8 [736];
  
  while (local_508 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  puVar15 = (undefined1 *)((int)in_stack_00000010 + 0x40);
  pauVar8 = (undefined (*) [16])
            (*(undefined (*) [16])((int)in_stack_00000010 + 0x40) +
            (in_stack_00000018 & 0xffffffffffffffc0));
  if (pauVar8 <= puVar15) {
    puVar15 = K_XMM_AR;
  }
  auVar24 = vmovdqu_avx((undefined  [32])BSWAP_SHUFB_CTL);
  dVar4 = *in_stack_00000008;
  dVar6 = in_stack_00000008[1];
  dVar11 = in_stack_00000008[2];
  dVar7 = in_stack_00000008[3];
  dVar5 = in_stack_00000008[4];
  auVar2 = vmovdqu_avx(*(undefined (*) [16])in_stack_00000010);
  auVar18._16_16_ = *(undefined (*) [16])puVar15;
  auVar18._0_16_ = auVar2;
  auVar28 = vpshufb_avx2(auVar18,auVar24);
  auVar18 = vpaddd_avx2(auVar28,K_XMM_AR._0_32_);
  local_588 = vmovdqu_avx(auVar18);
  auVar2 = vmovdqu_avx(*(undefined (*) [16])((int)in_stack_00000010 + 0x10));
  auVar20._16_16_ = *(undefined (*) [16])((int)puVar15 + 0x10);
  auVar20._0_16_ = auVar2;
  auVar27 = vpshufb_avx2(auVar20,auVar24);
  auVar18 = vpaddd_avx2(auVar27,K_XMM_AR._0_32_);
  local_568 = vmovdqu_avx(auVar18);
  auVar2 = vmovdqu_avx(*(undefined (*) [16])((int)in_stack_00000010 + 0x20));
  auVar22._16_16_ = *(undefined (*) [16])((int)puVar15 + 0x20);
  auVar22._0_16_ = auVar2;
  auVar26 = vpshufb_avx2(auVar22,auVar24);
  auVar18 = vpaddd_avx2(auVar26,K_XMM_AR._0_32_);
  local_548 = vmovdqu_avx(auVar18);
  auVar2 = vmovdqu_avx(*(undefined (*) [16])((int)in_stack_00000010 + 0x30));
  auVar19._16_16_ = *(undefined (*) [16])((int)puVar15 + 0x30);
  auVar19._0_16_ = auVar2;
  auVar25 = vpshufb_avx2(auVar19,auVar24);
  auVar18 = vpaddd_avx2(auVar25,K_XMM_AR._0_32_);
  local_528 = vmovdqu_avx(auVar18);
  auVar20 = vpalignr_avx2(auVar27,auVar28,8);
  auVar18 = vpsrldq_avx2(auVar25,4);
  auVar20 = vpxor_avx2(auVar20,auVar26);
  auVar18 = vpxor_avx2(auVar18,auVar28);
  auVar20 = vpxor_avx2(auVar20,auVar18);
  auVar22 = vpslldq_avx2(auVar20,0xc);
  auVar18 = vpslld_avx2(auVar20,1);
  auVar20 = vpsrld_avx2(auVar20,0x1f);
  auVar18 = vpor_avx2(auVar18,auVar20);
  auVar20 = vpslld_avx2(auVar22,2);
  auVar22 = vpsrld_avx2(auVar22,0x1e);
  auVar18 = vpxor_avx2(auVar18,auVar20);
  auVar21 = vpxor_avx2(auVar18,auVar22);
  auVar18 = vpaddd_avx2(auVar21,K_XMM_AR._0_32_);
  local_508 = vmovdqu_avx(auVar18);
  auVar20 = vpalignr_avx2(auVar26,auVar27,8);
  auVar18 = vpsrldq_avx2(auVar21,4);
  auVar20 = vpxor_avx2(auVar20,auVar25);
  auVar18 = vpxor_avx2(auVar18,auVar27);
  auVar20 = vpxor_avx2(auVar20,auVar18);
  auVar22 = vpslldq_avx2(auVar20,0xc);
  auVar18 = vpslld_avx2(auVar20,1);
  auVar20 = vpsrld_avx2(auVar20,0x1f);
  auVar18 = vpor_avx2(auVar18,auVar20);
  auVar20 = vpslld_avx2(auVar22,2);
  auVar22 = vpsrld_avx2(auVar22,0x1e);
  auVar18 = vpxor_avx2(auVar18,auVar20);
  auVar19 = vpxor_avx2(auVar18,auVar22);
  auVar18 = vpaddd_avx2(auVar19,K_XMM_AR._32_32_);
  local_4e8 = vmovdqu_avx(auVar18);
  auVar20 = vpalignr_avx2(auVar25,auVar26,8);
  auVar18 = vpsrldq_avx2(auVar19,4);
  auVar20 = vpxor_avx2(auVar20,auVar21);
  auVar18 = vpxor_avx2(auVar18,auVar26);
  auVar20 = vpxor_avx2(auVar20,auVar18);
  auVar22 = vpslldq_avx2(auVar20,0xc);
  auVar18 = vpslld_avx2(auVar20,1);
  auVar20 = vpsrld_avx2(auVar20,0x1f);
  auVar18 = vpor_avx2(auVar18,auVar20);
  auVar20 = vpslld_avx2(auVar22,2);
  auVar22 = vpsrld_avx2(auVar22,0x1e);
  auVar18 = vpxor_avx2(auVar18,auVar20);
  auVar22 = vpxor_avx2(auVar18,auVar22);
  auVar18 = vpaddd_avx2(auVar22,K_XMM_AR._32_32_);
  local_4c8 = vmovdqu_avx(auVar18);
  auVar20 = vpalignr_avx2(auVar21,auVar25,8);
  auVar18 = vpsrldq_avx2(auVar22,4);
  auVar20 = vpxor_avx2(auVar20,auVar19);
  auVar18 = vpxor_avx2(auVar18,auVar25);
  auVar20 = vpxor_avx2(auVar20,auVar18);
  auVar23 = vpslldq_avx2(auVar20,0xc);
  auVar18 = vpslld_avx2(auVar20,1);
  auVar20 = vpsrld_avx2(auVar20,0x1f);
  auVar18 = vpor_avx2(auVar18,auVar20);
  auVar20 = vpslld_avx2(auVar23,2);
  auVar23 = vpsrld_avx2(auVar23,0x1e);
  auVar18 = vpxor_avx2(auVar18,auVar20);
  auVar20 = vpxor_avx2(auVar18,auVar23);
  auVar18 = vpaddd_avx2(auVar20,K_XMM_AR._32_32_);
  local_4a8 = vmovdqu_avx(auVar18);
  auVar18 = vpalignr_avx2(auVar20,auVar22,8);
  auVar23 = vpxor_avx2(auVar28,auVar27);
  auVar18 = vpxor_avx2(auVar18,auVar21);
  auVar23 = vpxor_avx2(auVar23,auVar18);
  auVar18 = vpslld_avx2(auVar23,2);
  auVar23 = vpsrld_avx2(auVar23,0x1e);
  auVar28 = vpor_avx2(auVar18,auVar23);
  auVar18 = vpaddd_avx2(auVar28,K_XMM_AR._32_32_);
  local_488 = vmovdqu_avx(auVar18);
  auVar18 = vpalignr_avx2(auVar28,auVar20,8);
  auVar23 = vpxor_avx2(auVar27,auVar26);
  auVar18 = vpxor_avx2(auVar18,auVar19);
  auVar23 = vpxor_avx2(auVar23,auVar18);
  auVar18 = vpslld_avx2(auVar23,2);
  auVar23 = vpsrld_avx2(auVar23,0x1e);
  auVar27 = vpor_avx2(auVar18,auVar23);
  auVar18 = vpaddd_avx2(auVar27,K_XMM_AR._32_32_);
  local_468 = vmovdqu_avx(auVar18);
  auVar18 = vpalignr_avx2(auVar27,auVar28,8);
  auVar23 = vpxor_avx2(auVar26,auVar25);
  auVar18 = vpxor_avx2(auVar18,auVar22);
  auVar23 = vpxor_avx2(auVar23,auVar18);
  auVar18 = vpslld_avx2(auVar23,2);
  auVar23 = vpsrld_avx2(auVar23,0x1e);
  auVar26 = vpor_avx2(auVar18,auVar23);
  auVar18 = vpaddd_avx2(auVar26,K_XMM_AR._64_32_);
  local_448 = vmovdqu_avx(auVar18);
  auVar18 = vpalignr_avx2(auVar26,auVar27,8);
  auVar23 = vpxor_avx2(auVar25,auVar21);
  auVar18 = vpxor_avx2(auVar18,auVar20);
  auVar23 = vpxor_avx2(auVar23,auVar18);
  auVar18 = vpslld_avx2(auVar23,2);
  auVar23 = vpsrld_avx2(auVar23,0x1e);
  auVar23 = vpor_avx2(auVar18,auVar23);
  auVar18 = vpaddd_avx2(auVar23,K_XMM_AR._64_32_);
  local_428 = vmovdqu_avx(auVar18);
  auVar18 = vpalignr_avx2(auVar23,auVar26,8);
  auVar21 = vpxor_avx2(auVar21,auVar19);
  auVar18 = vpxor_avx2(auVar18,auVar28);
  auVar21 = vpxor_avx2(auVar21,auVar18);
  auVar18 = vpslld_avx2(auVar21,2);
  auVar21 = vpsrld_avx2(auVar21,0x1e);
  auVar21 = vpor_avx2(auVar18,auVar21);
  auVar18 = vpaddd_avx2(auVar21,K_XMM_AR._64_32_);
  local_408 = vmovdqu_avx(auVar18);
  auVar18 = vpalignr_avx2(auVar21,auVar23,8);
  auVar19 = vpxor_avx2(auVar19,auVar22);
  auVar18 = vpxor_avx2(auVar18,auVar27);
  auVar19 = vpxor_avx2(auVar19,auVar18);
