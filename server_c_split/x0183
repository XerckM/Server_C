  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffff80);
}



void reflect_newAbiDesc(internal_abi_FuncType *t,internal_abi_Type *rcvr,reflect_abiDesc ~r0)

{
  int iVar1;
  reflect_bitVector *extraout_RAX;
  reflect_bitVector *stackPtrs;
  int extraout_RAX_00;
  reflect_abiStep *stkStep;
  uintptr spill;
  int extraout_RAX_01;
  reflect_abiStep *stkStep_1;
  int extraout_RAX_02;
  reflect_abiStep *stkStep_2;
  int i_3;
  uint8 *extraout_RAX_03;
  uint8 *extraout_RAX_04;
  int i_2;
  uint8 *extraout_RAX_05;
  uint8 *extraout_RAX_06;
  uint8 *puVar2;
  reflect_abiStep *~r0_00;
  internal_abi_Type *res;
  int extraout_RCX;
  int extraout_RCX_00;
  uintptr uadd;
  int iVar3;
  uintptr stackCallArgsSize;
  char extraout_BL;
  bool isPtr;
  int *piVar4;
  reflect_bitVector *prVar5;
  void *~r0_01;
  internal_abi_Type *arg;
  uintptr uadd_1;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  int e;
  int e_1;
  uint uVar6;
  bool ~r1;
  reflect_abiStep *~r0_02;
  uintptr retOffset;
  ushort uVar7;
  int s_1;
  uint uVar8;
  int s;
  uint uVar9;
  uint8 **extraout_R11;
  uint8 **extraout_R11_00;
  int unaff_R14;
  undefined in_XMM15 [16];
  internal_abi_FuncType *piStack00000000000000c0;
  internal_abi_Type *piStack00000000000000c8;
  runtime_slice in_stack_fffffffffffffe50;
  undefined2 local_16c;
  undefined2 local_16a;
  int local_168;
  uint local_160;
  uint local_158;
  uintptr local_150;
  reflect_abiStep *local_148;
  int local_140;
  int local_138;
  int i_1;
  int i;
  undefined4 local_120;
  undefined4 uStack_11c;
  undefined4 uStack_118;
  undefined4 uStack_114;
  undefined4 local_110;
  undefined4 uStack_10c;
  undefined4 uStack_108;
  undefined4 uStack_104;
  undefined4 local_100;
  undefined4 uStack_fc;
  undefined4 uStack_f8;
  undefined4 uStack_f4;
  undefined4 local_f0;
  undefined4 uStack_ec;
  undefined4 uStack_e8;
  undefined4 uStack_e4;
  undefined4 local_e0;
  undefined4 uStack_dc;
  undefined4 uStack_d8;
  undefined4 uStack_d4;
  undefined4 local_d0;
  undefined4 uStack_cc;
  undefined4 uStack_c8;
  undefined4 uStack_c4;
  int local_c0;
  int local_b8;
  reflect_bitVector *local_b0;
  internal_abi_Type *local_a8;
  internal_abi_Type *local_a0;
  reflect_abiSeq out;
  reflect_abiSeq in;
  
  piStack00000000000000c0 = t;
  piStack00000000000000c8 = rcvr;
  while (&i_1 <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  FUN_0046cd8f();
  runtime_newobject((internal_abi_Type *)&DAT_00850e20,~r0_01);
  local_16a = 0;
  in.steps.array = in_XMM15._0_8_;
  in.steps.len._0_4_ = in_XMM15._0_4_;
  in.steps.len._4_4_ = in_XMM15._4_4_;
  in.steps.cap._0_4_ = in_XMM15._8_4_;
  in.steps.cap._4_4_ = in_XMM15._12_4_;
  local_b0 = extraout_RAX;
  in.valueStart._0_16_ = in_XMM15;
  in._40_16_ = in_XMM15;
  if (piStack00000000000000c8 == (internal_abi_Type *)0x0) {
    ~r0_02 = (reflect_abiStep *)0x0;
  }
  else {
    reflect___abiSeq__addRcvr(&in,piStack00000000000000c8,~r0_00,~r1);
    if (extraout_RAX_00 == 0) {
      ~r0_02 = (reflect_abiStep *)0x8;
    }
    else {
      if (extraout_BL == '\0') {
        prVar5 = local_b0;
        if ((local_b0->n & 0x3f) == 0) {
          for (i_3 = 0; i_3 < 8; i_3 = i_3 + 1) {
            uVar6 = (prVar5->data).cap;
            uVar8 = (prVar5->data).len + 1;
            puVar2 = (prVar5->data).array;
            if (uVar6 < uVar8) {
              local_140 = i_3;
              runtime_growslice(puVar2,uVar8,uVar6,1,(internal_abi_Type *)&DAT_00807920,
                                in_stack_fffffffffffffe50);
              (local_b0->data).cap = extraout_RCX;
              puVar2 = extraout_RAX_03;
              prVar5 = local_b0;
              uVar8 = extraout_RBX;
              if (runtime_writeBarrier._0_4_ != 0) {
                runtime_gcWriteBarrier2();
                *extraout_R11 = extraout_RAX_04;
                extraout_R11[1] = (prVar5->data).array;
                puVar2 = extraout_RAX_04;
                uVar8 = extraout_RBX_00;
              }
              (prVar5->data).array = puVar2;
              i_3 = local_140;
            }
            (prVar5->data).len = uVar8;
            puVar2[uVar8 - 1] = 0;
          }
        }
        if ((uint)(prVar5->data).len <= (uint)(prVar5->n >> 3)) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        prVar5->n = prVar5->n + 1;
      }
      else {
        prVar5 = local_b0;
        if ((local_b0->n & 0x3f) == 0) {
          for (i_2 = 0; i_2 < 8; i_2 = i_2 + 1) {
            uVar6 = (prVar5->data).cap;
            uVar8 = (prVar5->data).len + 1;
            puVar2 = (prVar5->data).array;
            if (uVar6 < uVar8) {
              local_138 = i_2;
              runtime_growslice(puVar2,uVar8,uVar6,1,(internal_abi_Type *)&DAT_00807920,
                                in_stack_fffffffffffffe50);
              (local_b0->data).cap = extraout_RCX_00;
              puVar2 = extraout_RAX_05;
              prVar5 = local_b0;
              uVar8 = extraout_RBX_01;
              if (runtime_writeBarrier._0_4_ != 0) {
                runtime_gcWriteBarrier2();
                *extraout_R11_00 = extraout_RAX_06;
                extraout_R11_00[1] = (prVar5->data).array;
                puVar2 = extraout_RAX_06;
                uVar8 = extraout_RBX_02;
              }
              (prVar5->data).array = puVar2;
              i_2 = local_138;
            }
            (prVar5->data).len = uVar8;
            puVar2[uVar8 - 1] = 0;
          }
        }
        uVar6 = (uint)(prVar5->n >> 3);
        if ((uint)(prVar5->data).len <= uVar6) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        puVar2 = (prVar5->data).array;
        puVar2[uVar6] = puVar2[uVar6] | (byte)(1 << (prVar5->n & 7));
        prVar5->n = prVar5->n + 1;
      }
      ~r0_02 = (reflect_abiStep *)0x0;
    }
  }
  if (((piStack00000000000000c0->Type).TFlag & 1) == 0) {
    uadd = 0x38;
  }
  else {
    uadd = 0x48;
  }
  local_160 = (uint)piStack00000000000000c0->InCount;
  if (piStack00000000000000c0->InCount == 0) {
    local_160 = 0;
    local_b8 = 0;
  }
  else {
    local_b8 = (int)&(piStack00000000000000c0->Type).Size_ + uadd;
    if (0x10000 < local_160) {
                    // WARNING: Subroutine does not return
      runtime_panicSlice3Alen();
    }
  }
  iVar3 = 0;
  do {
    local_148 = ~r0_02;
    if ((int)local_160 <= iVar3) {
      local_158 = in.stackBytes + 7 & 0xfffffffffffffff8;
      local_16c = 0;
      out.steps.array = in_XMM15._0_8_;
      out.steps.len._0_4_ = in_XMM15._0_4_;
      out.steps.len._4_4_ = in_XMM15._4_4_;
      out.steps.cap._0_4_ = in_XMM15._8_4_;
      out.steps.cap._4_4_ = in_XMM15._12_4_;
      out.valueStart.cap = (int)out.steps.array;
      uVar7 = piStack00000000000000c0->OutCount & 0x7fff;
      out.stackBytes = local_158;
      if (uVar7 == 0) {
        local_168 = 0;
        local_c0 = 0;
      }
      else {
        if (((piStack00000000000000c0->Type).TFlag & 1) == 0) {
          uadd_1 = 0x38;
        }
        else {
          uadd_1 = 0x48;
        }
        uVar8 = (uint)piStack00000000000000c0->InCount;
        uVar6 = (uint)(ushort)(uVar7 + piStack00000000000000c0->InCount);
        if (uVar6 < uVar8) {
                    // WARNING: Subroutine does not return
          runtime_panicSlice3C();
        }
        local_168 = uVar6 - uVar8;
        local_c0 = (int)&(piStack00000000000000c0->Type).Size_ +
                   (uVar8 << 3 & -local_168 >> 0x3f) + uadd_1;
      }
      local_150 = in.stackBytes;
      iVar3 = 0;
      out.valueStart._0_16_ = in_XMM15;
      do {
        if (local_168 <= iVar3) {
          out.stackBytes = out.stackBytes - local_158;
          FUN_0046cd8f();
          return;
        }
        local_a8 = *(internal_abi_Type **)(local_c0 + iVar3 * 8);
        i_1 = iVar3;
        reflect___abiSeq__addArg(&out,local_a8,(reflect_abiStep *)local_a8);
        if (extraout_RAX_02 == 0) {
          if ((uint)out.valueStart.len <= (uint)i_1) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          uVar6 = out.valueStart.array[i_1];
          if (i_1 == out.valueStart.len + -1) {
            e_1 = CONCAT44(out.steps.len._4_4_,(undefined4)out.steps.len);
          }
          else {
            if ((uint)out.valueStart.len <= i_1 + 1U) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            e_1 = out.valueStart.array[i_1 + 1];
          }
          if (CONCAT44(out.steps.cap._4_4_,(undefined4)out.steps.cap) < (uint)e_1) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceAcap();
          }
          if ((uint)e_1 < uVar6) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          piVar4 = (int *)((int)&(out.steps.array)->kind +
                          ((int)(uVar6 - CONCAT44(out.steps.cap._4_4_,(undefined4)out.steps.cap)) >>
                           0x3f & uVar6 * 0x30));
          for (iVar3 = 0; iVar3 < (int)(e_1 - uVar6); iVar3 = iVar3 + 1) {
            local_120 = *(undefined4 *)piVar4;
            uStack_11c = *(undefined4 *)((int)piVar4 + 4);
            uStack_118 = *(undefined4 *)(piVar4 + 1);
            uStack_114 = *(undefined4 *)((int)piVar4 + 0xc);
            local_110 = *(undefined4 *)(piVar4 + 2);
            uStack_10c = *(undefined4 *)((int)piVar4 + 0x14);
            uStack_108 = *(undefined4 *)(piVar4 + 3);
            uStack_104 = *(undefined4 *)((int)piVar4 + 0x1c);
            iVar1 = piVar4[4];
            local_100 = *(undefined4 *)(piVar4 + 4);
            uStack_fc = *(undefined4 *)((int)piVar4 + 0x24);
            uStack_f8 = *(undefined4 *)(piVar4 + 5);
            uStack_f4 = *(undefined4 *)((int)piVar4 + 0x2c);
            if (*piVar4 == 3) {
              uVar8 = (int)(((uint)(iVar1 >> 0x3f) >> 0x3d) + iVar1) >> 3;
              if (1 < uVar8) {
                    // WARNING: Subroutine does not return
                runtime_panicIndex();
              }
              uVar9 = iVar1 % 8;
              if ((int)uVar9 < 0) {
                    // WARNING: Subroutine does not return
                runtime_panicshift();
              }
              *(byte *)((int)&local_16c + uVar8) =
                   *(byte *)((int)&local_16c + uVar8) |
                   -(uVar9 < 0x20) & (byte)(1 << ((byte)uVar9 & 0x1f));
            }
            piVar4 = piVar4 + 6;
          }
        }
        else {
          reflect_addTypeBits(local_b0,*(uintptr *)(extraout_RAX_02 + 0x18),local_a8);
        }
        iVar3 = i_1 + 1;
      } while( true );
    }
    local_a0 = *(internal_abi_Type **)(local_b8 + iVar3 * 8);
    i = iVar3;
    reflect___abiSeq__addArg(&in,local_a0,~r0_02);
    if (extraout_RAX_01 == 0) {
      ~r0_02 = (reflect_abiStep *)
               ((-(uint)local_a0->Align_ & (int)local_148 + (local_a0->Align_ - 1)) +
               local_a0->Size_);
      if ((uint)in.valueStart.len <= (uint)i) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      uVar6 = in.valueStart.array[i];
      if (i == in.valueStart.len + -1) {
        e = CONCAT44(in.steps.len._4_4_,(undefined4)in.steps.len);
      }
      else {
        if ((uint)in.valueStart.len <= i + 1U) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        e = in.valueStart.array[i + 1];
      }
      if (CONCAT44(in.steps.cap._4_4_,(undefined4)in.steps.cap) < (uint)e) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
      if ((uint)e < uVar6) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      piVar4 = (int *)((int)&(in.steps.array)->kind +
                      ((int)(uVar6 - CONCAT44(in.steps.cap._4_4_,(undefined4)in.steps.cap)) >> 0x3f
                      & uVar6 * 0x30));
      for (iVar3 = 0; iVar3 < (int)(e - uVar6); iVar3 = iVar3 + 1) {
        local_f0 = *(undefined4 *)piVar4;
        uStack_ec = *(undefined4 *)((int)piVar4 + 4);
        uStack_e8 = *(undefined4 *)(piVar4 + 1);
        uStack_e4 = *(undefined4 *)((int)piVar4 + 0xc);
        local_e0 = *(undefined4 *)(piVar4 + 2);
        uStack_dc = *(undefined4 *)((int)piVar4 + 0x14);
        uStack_d8 = *(undefined4 *)(piVar4 + 3);
        uStack_d4 = *(undefined4 *)((int)piVar4 + 0x1c);
        iVar1 = piVar4[4];
        local_d0 = *(undefined4 *)(piVar4 + 4);
        uStack_cc = *(undefined4 *)((int)piVar4 + 0x24);
        uStack_c8 = *(undefined4 *)(piVar4 + 5);
        uStack_c4 = *(undefined4 *)((int)piVar4 + 0x2c);
        if (*piVar4 == 3) {
          uVar8 = (int)(((uint)(iVar1 >> 0x3f) >> 0x3d) + iVar1) >> 3;
          if (1 < uVar8) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          uVar9 = iVar1 % 8;
          if ((int)uVar9 < 0) {
                    // WARNING: Subroutine does not return
            runtime_panicshift();
          }
          *(byte *)((int)&local_16a + uVar8) =
               *(byte *)((int)&local_16a + uVar8) |
               -(uVar9 < 0x20) & (byte)(1 << ((byte)uVar9 & 0x1f));
        }
        piVar4 = piVar4 + 6;
      }
    }
    else {
      reflect_addTypeBits(local_b0,*(uintptr *)(extraout_RAX_01 + 0x18),local_a0);
      ~r0_02 = local_148;
    }
    iVar3 = i + 1;
  } while( true );
}



// WARNING: Unknown calling convention

void reflect_intFromReg(internal_abi_RegArgs *r,int reg,uintptr argSize,void *to)

{
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((argSize < 9) && (argSize != 0)) && ((argSize - 1 & argSize) == 0)) {
    if ((uint)reg < 9) {
      reflect_memmove(to,r->Ints + reg,argSize);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe0);
}



// WARNING: Unknown calling convention

void reflect_intToReg(internal_abi_RegArgs *r,int reg,uintptr argSize,void *from)

{
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((argSize < 9) && (argSize != 0)) && ((argSize - 1 & argSize) == 0)) {
    if ((uint)reg < 9) {
      reflect_memmove(r->Ints + reg,from,argSize);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe0);
}



void reflect_deepValueEqual
               (reflect_Value v1,reflect_Value v2,map_reflect_visit_bool visited,bool ~r0)

{
  reflect_Value v_00;
  reflect_Value v_01;
  reflect_Value v1_00;
  reflect_Value v_02;
  reflect_Value v_03;
  reflect_Value v_04;
  reflect_Value v_05;
  reflect_Value v1_01;
  reflect_Value v_06;
  reflect_Value v_07;
  reflect_Value v_08;
  reflect_Value v_09;
  reflect_Value v_10;
  reflect_Value v_11;
  reflect_Value v_12;
  reflect_Value v_13;
  reflect_Value v_14;
  reflect_Value v1_02;
  reflect_Value v_15;
  reflect_Value v_16;
  reflect_Value v_17;
  reflect_Value v_18;
  reflect_Value v_19;
  reflect_Value v_20;
  reflect_Value v_21;
  reflect_Value v_22;
  reflect_Value v_23;
  reflect_Value v_24;
  reflect_Value v_25;
  reflect_Value v_26;
  reflect_Value v1_03;
  reflect_Value v_27;
  reflect_Value v_28;
  reflect_Value v1_04;
  reflect_Value v_29;
  reflect_Value v_30;
  reflect_Value v1_05;
  reflect_Value v_31;
  reflect_Value v_32;
  reflect_Value v_33;
  reflect_Value v1_06;
  reflect_Value v2_00;
  reflect_Value ~r0_00;
  reflect_Value ~r0_01;
  reflect_Value v2_01;
  __reflect_Value ~r0_02;
  reflect_Value ~r0_03;
  reflect_Value ~r0_04;
  reflect_Value v2_02;
  __uint8 ~r0_05;
  __uint8 ~r0_06;
  reflect_Value ~r0_07;
  reflect_Value ~r0_08;
  reflect_Value v2_03;
  reflect_Value ~r0_09;
  reflect_Value ~r0_10;
  reflect_Value v2_04;
  reflect_Value key;
  reflect_Value key_00;
  reflect_Value v2_05;
  reflect_Value ~r0_11;
  reflect_Value ~r0_12;
  reflect_Value v2_06;
  reflect_Value ~r0_13;
  reflect_Value ~r0_14;
  char extraout_AL;
  char extraout_AL_01;
  char extraout_AL_02;
  char extraout_AL_03;
  char extraout_AL_04;
  char extraout_AL_00;
  runtime_itab *extraout_RAX;
  runtime_itab *extraout_RAX_00;
  runtime_itab *extraout_RAX_01;
  char *extraout_RAX_02;
  undefined *extraout_RAX_03;
  map_reflect_visit_bool extraout_RAX_04;
  int *extraout_RAX_05;
  int *extraout_RAX_06;
  int extraout_RAX_07;
  int extraout_RAX_08;
  undefined8 *extraout_RAX_09;
  int extraout_RAX_10;
  int extraout_RAX_11;
  map_reflect_visit_bool extraout_RAX_12;
  int *extraout_RAX_13;
  int extraout_RAX_14;
  int extraout_RAX_15;
  undefined1 *extraout_RAX_16;
  int *extraout_RAX_17;
  int extraout_RAX_18;
  int n;
  internal_abi_Type *extraout_RAX_19;
  internal_abi_Type *extraout_RAX_20;
  map_reflect_visit_bool extraout_RAX_21;
  map_reflect_visit_bool extraout_RAX_22;
  undefined8 *extraout_RAX_23;
  map_reflect_visit_bool extraout_RAX_24;
  undefined8 *extraout_RAX_25;
  undefined8 *extraout_RAX_26;
  undefined8 *extraout_RAX_27;
  undefined8 *extraout_RAX_28;
  int extraout_RAX_29;
  map_reflect_visit_bool extraout_RAX_30;
  undefined8 *extraout_RAX_31;
  undefined8 *extraout_RAX_32;
  undefined8 *extraout_RAX_33;
  undefined8 *extraout_RAX_34;
  undefined8 *extraout_RAX_35;
  undefined8 *extraout_RAX_36;
  undefined8 *extraout_RAX_37;
  undefined8 *extraout_RAX_38;
  uint in_RCX;
  reflect_Kind k_2;
  reflect_Kind k_3;
  reflect_Kind k_4;
  int iVar1;
  uint extraout_RCX;
  uint extraout_RCX_00;
  int extraout_RCX_01;
  int extraout_RCX_02;
  uint extraout_RCX_03;
  dword dVar2;
  void *addr1;
  dword dVar3;
  reflect_Kind k;
  reflect_Kind k_1;
  int **ppiVar4;
  reflect_Kind k_8;
  int *piVar5;
  undefined extraout_BL;
  undefined extraout_BL_00;
  undefined extraout_BL_01;
  undefined extraout_BL_02;
  undefined extraout_BL_03;
  undefined extraout_BL_04;
  undefined7 in_register_00000019;
  map_reflect_visit_bool extraout_RBX;
  internal_abi_Type *extraout_RBX_00;
  void *extraout_RBX_01;
  internal_abi_Type *extraout_RBX_02;
  void *extraout_RBX_03;
  int extraout_RBX_04;
  internal_abi_Type *extraout_RBX_05;
  internal_abi_Type *piVar6;
  int *extraout_RBX_06;
  int *extraout_RBX_07;
  int *extraout_RBX_08;
  void *extraout_RBX_09;
  void *y;
  void *pvVar7;
  int **in_RSI;
  void *p_1;
  reflect_Kind k_5;
  reflect_Kind k_7;
  int *piVar8;
  bool ~r0_15;
  internal_abi_Type *in_RDI;
  void *extraout_RDI;
  void *~r0_16;
  reflect_Kind k_6;
  void *in_R8;
  runtime_hmap *in_R9;
  undefined1 *puVar9;
  undefined1 *puVar10;
  int unaff_R14;
  bool bVar11;
  bool bVar12;
  undefined auVar13 [16];
  interface___ in_stack_fffffffffffffea0;
  reflect_flag in_stack_fffffffffffffeb0;
  interface___ in_stack_fffffffffffffeb8;
  reflect_flag in_stack_fffffffffffffec8;
  undefined in_stack_fffffffffffffed0 [15];
  undefined in_stack_fffffffffffffedf;
  reflect_flag in_stack_fffffffffffffee0;
  int i_2;
  int i_1;
  int i;
  int local_d8;
  int local_d0;
  int local_c8;
  uint local_c0;
  uint local_b8;
  void *local_b0;
  int *local_a8;
  int *local_a0;
  map_reflect_visit_bool local_98;
  int **local_90;
  int **local_88;
  undefined local_80;
  map_reflect_visit_bool local_78;
  undefined8 local_70;
  map_reflect_visit_bool local_68;
  internal_abi_Type *local_60;
  undefined8 *local_58;
  internal_abi_Type *local_50;
  int **local_48;
  runtime_hmap *local_40;
  int **local_38;
  internal_abi_Type *local_30;
  reflect_visit v;
  
  while (&i <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_RCX == 0) || (in_R8 == (void *)0x0)) {
    return;
  }
  local_b8 = in_RCX;
  local_b0 = in_R8;
  local_50 = (internal_abi_Type *)visited;
  local_48 = (int **)CONCAT71(in_register_00000019,~r0);
  local_40 = in_R9;
  local_38 = in_RSI;
  local_30 = in_RDI;
  if (((dword)in_RCX >> 9 & 1) == 0) {
    puVar9 = go_itab__reflect_rtype_reflect_Type;
  }
  else {
    v_00.flag = in_stack_fffffffffffffeb0;
    v_00.typ_ = in_stack_fffffffffffffea0._type;
    v_00.ptr = in_stack_fffffffffffffea0.data;
    reflect_Value_typeSlow(v_00,(reflect_Type)in_stack_fffffffffffffeb8);
    visited = extraout_RBX;
    puVar9 = (undefined1 *)extraout_RAX;
  }
  if (((dword)local_b0 >> 9 & 1) == 0) {
    puVar10 = go_itab__reflect_rtype_reflect_Type;
    piVar6 = local_30;
  }
  else {
    v_01.flag = in_stack_fffffffffffffeb0;
    v_01.typ_ = in_stack_fffffffffffffea0._type;
    v_01.ptr = in_stack_fffffffffffffea0.data;
    local_98 = visited;
    reflect_Value_typeSlow(v_01,(reflect_Type)in_stack_fffffffffffffeb8);
    visited = local_98;
    piVar6 = extraout_RBX_00;
    puVar10 = (undefined1 *)extraout_RAX_00;
  }
  if ((puVar9 != puVar10) ||
     (runtime_ifaceeq((runtime_itab *)puVar9,visited,piVar6,SUB81(piVar6,0)), extraout_AL == '\0'))
  {
    return;
  }
  v1_00.flag = in_stack_fffffffffffffeb0;
  v1_00.typ_ = in_stack_fffffffffffffea0._type;
  v1_00.ptr = in_stack_fffffffffffffea0.data;
  v2_00.flag = in_stack_fffffffffffffec8;
  v2_00.typ_ = in_stack_fffffffffffffeb8._type;
  v2_00.ptr = in_stack_fffffffffffffeb8.data;
  reflect_deepValueEqual_func1(v1_00,v2_00,SUB81(local_50,0));
  pvVar7 = extraout_RBX_01;
  if (extraout_AL_00 != '\0') {
    dVar2 = (dword)local_b8;
    addr1 = local_48;
    if ((dVar2 & 0x1f) - 0x15 < 2) {
      if ((local_50->Size_ != 8) || (local_50->PtrBytes == 0)) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffea0);
      }
      if ((dVar2 >> 7 & 1) != 0) {
        addr1 = *local_48;
      }
    }
    ppiVar4 = local_38;
    if (((dword)local_b0 & 0x1f) - 0x15 < 2) {
      if ((local_30->Size_ != 8) || (local_30->PtrBytes == 0)) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffea0);
      }
      if (((dword)local_b0 >> 7 & 1) != 0) {
        ppiVar4 = (int **)*local_38;
      }
    }
    v.a2 = ppiVar4;
    if (ppiVar4 < addr1) {
      v.a2 = addr1;
      addr1 = ppiVar4;
    }
    if ((dVar2 >> 9 & 1) == 0) {
      puVar9 = go_itab__reflect_rtype_reflect_Type;
      v.typ.data = local_50;
      pvVar7 = local_b0;
    }
    else {
      v_02.flag = in_stack_fffffffffffffeb0;
      v_02.typ_ = in_stack_fffffffffffffea0._type;
      v_02.ptr = in_stack_fffffffffffffea0.data;
      local_90 = (int **)v.a2;
      local_88 = (int **)addr1;
      reflect_Value_typeSlow(v_02,(reflect_Type)in_stack_fffffffffffffeb8);
      v.typ.data = extraout_RBX_02;
      puVar9 = (undefined1 *)extraout_RAX_01;
      pvVar7 = extraout_RDI;
      addr1 = local_88;
      v.a2 = local_90;
    }
    v.a1 = addr1;
    v.typ.tab = (runtime_itab *)puVar9;
    runtime_mapaccess1((internal_abi_MapType *)&DAT_0082d280,local_40,&v,pvVar7);
    if (*extraout_RAX_02 != '\0') {
      return;
    }
    runtime_mapassign((internal_abi_MapType *)&DAT_0082d280,local_40,&v,~r0_16);
    *extraout_RAX_03 = 1;
    pvVar7 = extraout_RBX_03;
  }
  dVar2 = (dword)local_b8;
  local_c0 = (uint)(dVar2 & 0x1f);
  bVar11 = (dVar2 >> 9 & 1) != 0;
  dVar3 = (dword)local_b0;
  switch(local_c0) {
  case 1:
    if ((dVar3 & 0x1f) != 1) {
      v_03.flag = in_stack_fffffffffffffeb0;
      v_03.typ_ = in_stack_fffffffffffffea0._type;
      v_03.ptr = in_stack_fffffffffffffea0.data;
      reflect_Value_panicNotBool(v_03);
    }
    return;
  case 2:
  case 3:
  case 4:
  case 5:
  case 6:
    if (local_c0 < 4) {
      if ((local_c0 != 2) && (local_c0 != 3)) {
LAB_004c83b7:
        runtime_newobject((internal_abi_Type *)&DAT_00850d80,pvVar7);
        extraout_RAX_38[1] = 0x11;
        *extraout_RAX_38 = &DAT_008b6deb;
        extraout_RAX_38[2] = local_c0;
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffea0);
      }
    }
    else if (((local_c0 != 4) && (local_c0 != 5)) && (local_c0 != 6)) goto LAB_004c83b7;
    local_b0 = (void *)(uint)(dVar3 & 0x1f);
    if (local_b0 < 4) {
      if ((local_b0 != (void *)0x2) && (local_b0 != (void *)0x3)) {
LAB_004c837e:
        runtime_newobject((internal_abi_Type *)&DAT_00850d80,pvVar7);
        extraout_RAX_37[1] = 0x11;
        *extraout_RAX_37 = &DAT_008b6deb;
        extraout_RAX_37[2] = local_b0;
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffea0);
      }
    }
    else if (((local_b0 != (void *)0x4) && (local_b0 != (void *)0x5)) && (local_b0 != (void *)0x6))
    goto LAB_004c837e;
    return;
  case 7:
  case 8:
  case 9:
  case 10:
  case 0xb:
  case 0xc:
    if (local_c0 < 10) {
      if (((local_c0 != 7) && (local_c0 != 8)) && (local_c0 != 9)) {
LAB_004c8345:
        runtime_newobject((internal_abi_Type *)&DAT_00850d80,pvVar7);
        extraout_RAX_36[1] = 0x12;
        *extraout_RAX_36 = &DAT_008b7823;
        extraout_RAX_36[2] = local_c0;
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffea0);
      }
    }
    else if (((local_c0 != 10) && (local_c0 != 0xb)) && (local_c0 != 0xc)) goto LAB_004c8345;
    local_b0 = (void *)(uint)(dVar3 & 0x1f);
    if (local_b0 < 10) {
      if (((local_b0 != (void *)0x7) && (local_b0 != (void *)0x8)) && (local_b0 != (void *)0x9)) {
LAB_004c830c:
        runtime_newobject((internal_abi_Type *)&DAT_00850d80,pvVar7);
        extraout_RAX_35[1] = 0x12;
        *extraout_RAX_35 = &DAT_008b7823;
        extraout_RAX_35[2] = local_b0;
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_fffffffffffffea0);
      }
    }
    else if (((local_b0 != (void *)0xa) && (local_b0 != (void *)0xb)) && (local_b0 != (void *)0xc))
    goto LAB_004c830c;
    return;
  case 0xd:
  case 0xe:
    if ((local_c0 != 0xd) && (local_c0 != 0xe)) {
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,pvVar7);
      extraout_RAX_34[1] = 0x13;
      *extraout_RAX_34 = &DAT_008b8160;
      extraout_RAX_34[2] = local_c0;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_fffffffffffffea0);
    }
    local_b0 = (void *)(uint)(dVar3 & 0x1f);
    if ((local_b0 != (void *)0xd) && (local_b0 != (void *)0xe)) {
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,pvVar7);
      extraout_RAX_33[1] = 0x13;
      *extraout_RAX_33 = &DAT_008b8160;
      extraout_RAX_33[2] = local_b0;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_fffffffffffffea0);
    }
    return;
  case 0xf:
  case 0x10:
    if ((local_c0 != 0xf) && (local_c0 != 0x10)) {
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,pvVar7);
      extraout_RAX_32[1] = 0x15;
      *extraout_RAX_32 = &DAT_008b95a7;
      extraout_RAX_32[2] = local_c0;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_fffffffffffffea0);
    }
    local_b0 = (void *)(uint)(dVar3 & 0x1f);
    if ((local_b0 != (void *)0xf) && (local_b0 != (void *)0x10)) {
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,pvVar7);
      extraout_RAX_31[1] = 0x15;
      *extraout_RAX_31 = &DAT_008b95a7;
      extraout_RAX_31[2] = local_b0;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_fffffffffffffea0);
    }
    return;
  case 0x11:
    i = 0;
    while( true ) {
      v_31.flag = in_stack_fffffffffffffeb0;
      v_31.typ_ = in_stack_fffffffffffffea0._type;
      v_31.ptr = in_stack_fffffffffffffea0.data;
      reflect_Value_lenNonSlice(v_31,(int)local_50);
      if (extraout_RAX_29 <= i) {
        return;
      }
      v_32.flag = in_stack_fffffffffffffeb0;
      v_32.typ_ = in_stack_fffffffffffffea0._type;
      v_32.ptr = in_stack_fffffffffffffea0.data;
      ~r0_11.flag = in_stack_fffffffffffffec8;
      ~r0_11.typ_ = in_stack_fffffffffffffeb8._type;
      ~r0_11.ptr = in_stack_fffffffffffffeb8.data;
      reflect_Value_Index(v_32,(int)local_50,~r0_11);
      v_33.flag = in_stack_fffffffffffffeb0;
      v_33.typ_ = in_stack_fffffffffffffea0._type;
      v_33.ptr = in_stack_fffffffffffffea0.data;
      ~r0_12.flag = in_stack_fffffffffffffec8;
      ~r0_12.typ_ = in_stack_fffffffffffffeb8._type;
      ~r0_12.ptr = in_stack_fffffffffffffeb8.data;
      local_c0 = extraout_RCX_03;
      local_68 = extraout_RAX_30;
      local_58._0_1_ = extraout_BL_04;
      reflect_Value_Index(v_33,(int)local_30,~r0_12);
      v1_06.flag = in_stack_fffffffffffffeb0;
      v1_06.typ_ = in_stack_fffffffffffffea0._type;
      v1_06.ptr = in_stack_fffffffffffffea0.data;
      v2_06.flag = in_stack_fffffffffffffec8;
      v2_06.typ_ = in_stack_fffffffffffffeb8._type;
      v2_06.ptr = in_stack_fffffffffffffeb8.data;
      reflect_deepValueEqual(v1_06,v2_06,local_68,(bool)local_58._0_1_);
      if (extraout_AL_04 == '\0') break;
      i = i + 1;
    }
    return;
  default:
    v_23.flag = in_stack_fffffffffffffeb0;
    v_23.typ_ = in_stack_fffffffffffffea0._type;
    v_23.ptr = in_stack_fffffffffffffea0.data;
    reflect_valueInterface(v_23,SUB81(local_50,0),in_stack_fffffffffffffeb8);
    v_24.flag = in_stack_fffffffffffffeb0;
    v_24.typ_ = in_stack_fffffffffffffea0._type;
    v_24.ptr = in_stack_fffffffffffffea0.data;
    local_60 = extraout_RAX_19;
    local_48 = (int **)extraout_RBX_09;
    reflect_valueInterface(v_24,SUB81(local_30,0),in_stack_fffffffffffffeb8);
    if (extraout_RAX_20 == local_60) {
      runtime_efaceeq(local_60,local_48,y,~r0_15);
    }
    return;
  case 0x13:
    if (bVar11) {
      return;
    }
    ppiVar4 = local_48;
    if ((dVar2 >> 7 & 1) != 0) {
      ppiVar4 = (int **)*local_48;
    }
    if (ppiVar4 != (int **)0x0) {
      return;
    }
    local_b0 = (void *)(uint)(dVar3 & 0x1f);
    if (local_b0 < 0x15) {
      pvVar7 = (void *)((int)local_b0 - 0x12);
      if ((void *)0x1 < pvVar7) {
        if (local_b0 != (void *)0x14) {
LAB_004c80f2:
          runtime_newobject((internal_abi_Type *)&DAT_00850d80,pvVar7);
          extraout_RAX_28[1] = 0x13;
          *extraout_RAX_28 = &DAT_008b814d;
          extraout_RAX_28[2] = local_b0;
                    // WARNING: Subroutine does not return
          runtime_gopanic(in_stack_fffffffffffffea0);
        }
LAB_004c747f:
        local_38 = (int **)*local_38;
        goto LAB_004c74c3;
      }
      bVar11 = (dVar3 >> 9 & 1) != 0;
    }
    else if (local_b0 < 0x17) {
      bVar11 = (dVar3 >> 9 & 1) != 0;
    }
    else {
      if (local_b0 == (void *)0x17) goto LAB_004c747f;
      pvVar7 = (void *)0x0;
      if (local_b0 != (void *)0x1a) goto LAB_004c80f2;
      bVar11 = (dVar3 >> 9 & 1) != 0;
    }
    if (bVar11) {
      return;
    }
    if ((dVar3 >> 7 & 1) != 0) {
      local_38 = (int **)*local_38;
    }
LAB_004c74c3:
    if (local_38 != (int **)0x0) {
      return;
    }
    return;
  case 0x14:
    break;
  case 0x15:
    if (bVar11) {
