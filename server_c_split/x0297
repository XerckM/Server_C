  runtime_slice ~r0_03;
  __uint8 val_00;
  __uint8 out;
  __uint8 out_00;
  __uint8 dst;
  runtime_slice ~r0_04;
  runtime_slice ~r0_05;
  runtime_slice ~r0_06;
  string key;
  string sep;
  string optionName;
  string optionName_00;
  string a1;
  string a1_00;
  __int index;
  __uint8 ~r0_07;
  __uint8 in;
  __uint8 in_00;
  __uint8 src;
  string value;
  string before;
  string a2;
  string a2_00;
  reflect_Type ~r0_08;
  string after;
  string ~r0_09;
  string ~r0_10;
  __uint8 ~r0_11;
  __uint8 ~r0_12;
  __uint8 ~r0_13;
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  bool quoted;
  uint32 ~r0_14;
  undefined4 extraout_EAX;
  runtime_hmap *in_RAX;
  runtime_hmap *prVar2;
  map_reflect_Type_int extraout_RAX;
  int i_1;
  bool ok;
  char cVar1;
  undefined *extraout_RAX_00;
  encoding_json_field *extraout_RAX_01;
  encoding_json_field *extraout_RAX_02;
  undefined8 uVar3;
  uint uVar4;
  encoding_json_encoderFunc **~r0_15;
  undefined8 extraout_RAX_03;
  undefined8 extraout_RAX_04;
  map_string__encoding_json_field exactNameIndex;
  runtime_hmap *extraout_RAX_05;
  map_string__encoding_json_field foldedNameIndex;
  undefined8 *extraout_RAX_06;
  undefined8 *extraout_RAX_07;
  void *~r0_16;
  uint8 *ptr;
  void *~r0_17;
  undefined8 *extraout_RAX_08;
  undefined8 *extraout_RAX_09;
  undefined8 *puVar5;
  undefined *extraout_RAX_10;
  runtime_hmap *prVar6;
  char *extraout_RAX_11;
  undefined *extraout_RAX_12;
  int iVar7;
  char *extraout_RAX_13;
  uint8 *extraout_RAX_14;
  int *__dest;
  uint uVar8;
  undefined8 extraout_RAX_15;
  encoding_json_field *extraout_RAX_16;
  int *extraout_RAX_17;
  encoding_json_field *extraout_RAX_18;
  encoding_json_field *peVar9;
  int *extraout_RAX_19;
  int *extraout_RAX_20;
  encoding_json_field *extraout_RAX_21;
  undefined extraout_CL;
  uint extraout_RCX;
  runtime_hmap *extraout_RCX_00;
  uint extraout_RCX_01;
  runtime_hmap *extraout_RCX_02;
  uint extraout_RCX_03;
  uint extraout_RCX_04;
  encoding_json_field *peVar10;
  runtime_hmap *extraout_RCX_05;
  int extraout_RCX_06;
  int extraout_RCX_07;
  runtime_hmap *extraout_RCX_08;
  runtime_hmap *extraout_RCX_09;
  runtime_hmap *prVar11;
  encoding_json_field *peVar12;
  int *piVar13;
  bool ~r1;
  char extraout_BL;
  bool ok_1;
  runtime_hmap *prVar14;
  runtime_hmap *extraout_RBX;
  runtime_hmap *extraout_RBX_00;
  runtime_hmap *extraout_RBX_01;
  runtime_hmap *oldCap;
  runtime_hmap *extraout_RBX_02;
  runtime_hmap *extraout_RBX_03;
  runtime_hmap *h;
  int n;
  runtime_hmap *extraout_RBX_04;
  int extraout_RBX_05;
  int *extraout_RBX_06;
  int extraout_RBX_07;
  uint extraout_RBX_08;
  uint extraout_RBX_09;
  runtime_hmap *extraout_RBX_10;
  undefined *extraout_RSI;
  int advance;
  map_reflect_Type_int count;
  runtime_hmap *~r0_18;
  void *~r0_19;
  void *~r0_20;
  void *~r0_21;
  void *extraout_RDI;
  void *extraout_RDI_00;
  void *extraout_RDI_01;
  void *pvVar15;
  void *~r0_22;
  void *~r0_23;
  int extraout_R8;
  uint extraout_R9;
  int extraout_R9_00;
  uint extraout_R9_01;
  int extraout_R10;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  undefined *puVar16;
  int unaff_R14;
  bool bVar17;
  undefined in_XMM15 [16];
  undefined auVar18 [16];
  internal_abi_Type *in_stack_fffffffffffff600;
  void *in_stack_fffffffffffff608;
  uint8 *in_stack_fffffffffffff610;
  int in_stack_fffffffffffff618;
  uint8 *in_stack_fffffffffffff620;
  runtime_itab *in_stack_fffffffffffff628;
  uint8 *in_stack_fffffffffffff630;
  int in_stack_fffffffffffff638;
  int in_stack_fffffffffffff640;
  undefined local_988 [7];
  char local_981;
  int *local_980;
  runtime_itab *local_978;
  uint local_970;
  runtime_hmap *local_968;
  runtime_hmap *local_958;
  runtime_hmap *local_950;
  runtime_hmap *local_948;
  int local_940;
  int *local_938;
  uint local_930;
  int i_3;
  int i_2;
  undefined *local_918;
  int i;
  runtime_hmap *local_908;
  runtime_hmap *local_900;
  runtime_hmap *local_8f8;
  int *local_8f0;
  runtime_hmap *local_8e8;
  runtime_hmap *local_8e0;
  runtime_hmap *local_8d8;
  runtime_hmap *local_8d0;
  runtime_hmap *local_8c8;
  undefined *local_8c0;
  runtime_hmap *local_8b8;
  uint8 *local_870;
  void *local_868;
  encoding_json_field *local_860;
  undefined local_858;
  map_reflect_Type_int nextCount;
  encoding_json_field *local_848;
  undefined8 local_840;
  uint8 *local_838;
  uint8 *local_830;
  runtime_hmap *local_828;
  encoding_json_field *local_818;
  map_reflect_Type_int local_810;
  encoding_json_field *local_808;
  encoding_json_field *local_800;
  int *local_7f8;
  encoding_json_field *local_7f0;
  undefined8 local_7e8;
  encoding_json_field *local_7e0;
  encoding_json_field *local_7d8;
  encoding_json_field *local_7d0;
  encoding_json_field *local_7c8;
  runtime_hmap *local_7c0;
  reflect_Type ft;
  __encoding_json_field fields;
  undefined local_758 [16];
  undefined local_748 [32];
  reflect_StructField sf;
  int local_6a8;
  int local_640;
  uint8 *local_5f0;
  encoding_json_field fj;
  encoding_json_field field_1;
  encoding_json_field field;
  encoding_json_field fi;
  encoding_json_field f;
  encoding_json_field dominant;
  encoding_json_field local_238;
  undefined local_1b0 [16];
  int *local_160;
  uint local_158;
  uint local_150;
  reflect_Type local_148;
  uint8 *local_128 [17];
  undefined local_a0 [152];
  
  while (&local_980 <= *(int ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_7c0 = in_RAX;
  local_238.typ = (reflect_Type)FUN_0046cda2();
  local_758._0_12_ = in_XMM15._0_12_;
  local_748._8_8_ = in_XMM15._8_8_;
  ~r0_14 = FUN_0046cd99();
  local_748._0_8_ = local_a0;
  runtime_fastrand(~r0_14);
  local_758._12_4_ = extraout_EAX;
  fields.array = (encoding_json_field *)0x0;
  prVar2 = (runtime_hmap *)&DAT_00000001;
  peVar9 = &local_238;
  prVar11 = (runtime_hmap *)&DAT_00000001;
  count = (map_reflect_Type_int)0x0;
  prVar6 = (runtime_hmap *)0x0;
  uVar3 = 0;
  prVar14 = (runtime_hmap *)0x0;
  peVar12 = (encoding_json_field *)local_988;
  fields._8_16_ = in_XMM15;
  while (prVar2 != (runtime_hmap *)0x0) {
    local_948 = prVar6;
    local_908 = prVar2;
    local_900 = prVar14;
    local_8b8 = prVar11;
    local_840 = uVar3;
    local_818 = peVar12;
    local_810 = count;
    local_7c8 = peVar9;
    runtime_makemap_small(prVar2);
    prVar2 = (runtime_hmap *)0x0;
    puVar16 = (undefined *)0x0;
    peVar10 = local_7c8;
    prVar6 = local_948;
    uVar3 = local_840;
    prVar11 = local_900;
    peVar9 = local_818;
    nextCount = extraout_RAX;
    while (prVar14 = local_8b8, peVar12 = local_7c8, count = nextCount,
          (int)puVar16 < (int)local_908) {
      f.name.str = (peVar10->name).str;
      local_958 = prVar2;
      local_950 = prVar11;
      local_8c8 = prVar6;
      local_8c0 = puVar16;
      local_848 = peVar9;
      local_7e8 = uVar3;
      local_7d0 = peVar10;
      FUN_0046d0f0();
      runtime_mapaccess1((internal_abi_MapType *)&DAT_0082d160,(runtime_hmap *)local_758,&f.typ,
                         ~r0_19);
      prVar6 = local_8c8;
      uVar3 = local_7e8;
      prVar11 = local_950;
      prVar2 = local_958;
      peVar9 = local_848;
      if (*extraout_RAX_11 == '\0') {
        runtime_mapassign((internal_abi_MapType *)&DAT_0082d160,(runtime_hmap *)local_758,&f.typ,
                          ~r0_20);
        *extraout_RAX_12 = 1;
        i = 0;
        local_948 = local_8c8;
        local_840 = local_7e8;
        local_8e8 = local_950;
        local_7f0 = local_848;
        local_8e0 = local_958;
        while( true ) {
          iVar7 = (*(code *)f.typ.tab[6].inter)(f.typ.data);
          prVar6 = local_948;
          uVar3 = local_840;
          prVar11 = local_8e8;
          prVar2 = local_8e0;
          peVar9 = local_7f0;
          if (iVar7 <= i) break;
          (**(code **)&f.typ.tab[2].hash)(f.typ.data);
          sf.Name.str = (uint8 *)in_stack_fffffffffffff600;
          FUN_0046d10c();
          if (sf.Anonymous == false) {
            FUN_0046d10c();
            if (local_6a8 == 0) {
LAB_00558766:
              tag.len = (int)in_stack_fffffffffffff608;
              tag.str = (uint8 *)in_stack_fffffffffffff600;
              key.len = in_stack_fffffffffffff618;
              key.str = in_stack_fffffffffffff610;
              value.len = (int)in_stack_fffffffffffff628;
              value.str = in_stack_fffffffffffff620;
              reflect_StructTag_Lookup(tag,key,value,SUB81(sf.Tag.str,0));
              if ((extraout_RBX_05 != 1) || (*extraout_RAX_13 != '-')) {
                s_01.len = (int)in_stack_fffffffffffff608;
                s_01.str = (uint8 *)in_stack_fffffffffffff600;
                sep.len = in_stack_fffffffffffff618;
                sep.str = in_stack_fffffffffffff610;
                before.len = (int)in_stack_fffffffffffff628;
                before.str = in_stack_fffffffffffff620;
                after.len = in_stack_fffffffffffff638;
                after.str = in_stack_fffffffffffff630;
                strings_Cut(s_01,sep,before,after,SUB81(extraout_RAX_13,0));
                s_02.len = (int)in_stack_fffffffffffff608;
                s_02.str = (uint8 *)in_stack_fffffffffffff600;
                local_980 = extraout_RBX_06;
                local_870 = extraout_RAX_14;
                local_858 = extraout_CL;
                encoding_json_isValidTag(s_02,SUB81(extraout_RAX_14,0));
                local_930 = f.index.len + 1;
                local_981 = extraout_AL_00;
                runtime_makeslice((internal_abi_Type *)&DAT_00807760,local_930,local_930,~r0_21);
                uVar8 = local_930;
                if (f.index.len < (int)local_930) {
                  uVar8 = f.index.len;
                }
                local_938 = (int *)0x0;
                if (local_981 != '\0') {
                  local_938 = local_980;
                }
                local_830 = (uint8 *)0x0;
                if (local_981 != '\0') {
                  local_830 = local_870;
                }
                local_7f8 = __dest;
                if (__dest != f.index.array) {
                  runtime_memmove(__dest,f.index.array,uVar8 << 3);
                }
                if (local_930 <= (uint)f.index.len) {
                    // WARNING: Subroutine does not return
                  runtime_panicIndex();
                }
                local_7f8[f.index.len] = i;
                ft.tab = sf.Type.tab;
                ft.data = sf.Type.data;
                (*(code *)sf.Type.tab[5].fun[0])(sf.Type.data);
                if (extraout_RBX_07 == 0) {
                  iVar7 = (*(code *)ft.tab[4].fun[0])(ft.data);
                  if (iVar7 == 0x16) {
                    ft = (reflect_Type)(*(code *)ft.tab[2]._type)(ft.data);
                  }
                }
                o.len = (int)in_stack_fffffffffffff608;
                o.str = (uint8 *)in_stack_fffffffffffff600;
                optionName.len = in_stack_fffffffffffff618;
                optionName.str = in_stack_fffffffffffff610;
                encoding_json_tagOptions_Contains(o,optionName,(bool)local_858);
                if (extraout_AL_01 == '\0') {
                  quoted = false;
                  pvVar15 = extraout_RDI;
                }
                else {
                  uVar8 = (*(code *)ft.tab[4].fun[0])(ft.data);
                  pvVar15 = extraout_RDI_00;
                  if ((uVar8 == 0) || ((0xe < uVar8 && (uVar8 != 0x18)))) {
                    quoted = false;
                  }
                  else {
                    quoted = true;
                  }
                }
                if (local_938 == (int *)0x0) {
                  if (sf.Anonymous == false) {
                    bVar17 = true;
                  }
                  else {
                    iVar7 = (*(code *)ft.tab[4].fun[0])(ft.data);
                    bVar17 = iVar7 != 0x19;
                    pvVar15 = extraout_RDI_01;
                  }
                }
                else {
                  bVar17 = true;
                }
                if (bVar17) {
                  local_8f0 = local_938;
                  if (local_938 == (int *)0x0) {
                    local_830 = sf.Name.str;
                    local_8f0 = (int *)sf.Name.len;
                  }
                  o_00.len = (int)in_stack_fffffffffffff608;
                  o_00.str = (uint8 *)in_stack_fffffffffffff600;
                  optionName_00.len = in_stack_fffffffffffff618;
                  optionName_00.str = in_stack_fffffffffffff610;
                  encoding_json_tagOptions_Contains(o_00,optionName_00,(bool)local_858);
                  field.omitEmpty = (bool)FUN_0046cda2();
                  field.name.len = (int)local_8f0;
                  field.name.str = local_830;
                  field.tag = local_938 != (int *)0x0;
                  field.index.array = local_7f8;
                  field.index.len = local_930;
                  field.index.cap = local_930;
                  field.quoted = quoted;
                  s_03.len = (int)in_stack_fffffffffffff608;
                  s_03.str = (uint8 *)in_stack_fffffffffffff600;
                  ~r0_07.len = in_stack_fffffffffffff618;
                  ~r0_07.array = in_stack_fffffffffffff610;
                  ~r0_07.cap = (int)in_stack_fffffffffffff620;
                  field.typ = ft;
                  runtime_stringtoslicebyte((runtime_tmpBuf *)0x0,s_03,~r0_07);
                  dst.len = (int)in_stack_fffffffffffff608;
                  dst.array = (uint8 *)in_stack_fffffffffffff600;
                  dst.cap = (int)in_stack_fffffffffffff610;
                  src.len = (int)in_stack_fffffffffffff620;
                  src.array = (uint8 *)in_stack_fffffffffffff618;
                  src.cap = (int)in_stack_fffffffffffff628;
                  ~r0_13.len = in_stack_fffffffffffff638;
                  ~r0_13.array = in_stack_fffffffffffff630;
                  ~r0_13.cap = in_stack_fffffffffffff640;
                  encoding_json_appendHTMLEscape(dst,src,~r0_13);
                  a0.len = (int)in_stack_fffffffffffff608;
                  a0.str = (uint8 *)in_stack_fffffffffffff600;
                  a1.len = in_stack_fffffffffffff618;
                  a1.str = in_stack_fffffffffffff610;
                  a2.len = (int)in_stack_fffffffffffff628;
                  a2.str = in_stack_fffffffffffff620;
                  ~r0_09.len = in_stack_fffffffffffff638;
                  ~r0_09.str = in_stack_fffffffffffff630;
                  local_948 = extraout_RCX_05;
                  local_840 = extraout_RAX_15;
                  runtime_concatstring3((runtime_tmpBuf *)0x0,a0,a1,a2,~r0_09);
                  a0_00.len = (int)in_stack_fffffffffffff608;
                  a0_00.str = (uint8 *)in_stack_fffffffffffff600;
                  a1_00.len = in_stack_fffffffffffff618;
                  a1_00.str = in_stack_fffffffffffff610;
                  a2_00.len = (int)in_stack_fffffffffffff628;
                  a2_00.str = in_stack_fffffffffffff620;
                  ~r0_10.len = in_stack_fffffffffffff638;
                  ~r0_10.str = in_stack_fffffffffffff630;
                  runtime_concatstring3((runtime_tmpBuf *)0x0,a0_00,a1_00,a2_00,~r0_10);
                  fields.len = fields.len + 1;
                  if ((uint)fields.cap < (uint)fields.len) {
                    ~r0_04.len = (int)in_stack_fffffffffffff608;
                    ~r0_04.array = in_stack_fffffffffffff600;
                    ~r0_04.cap = (int)in_stack_fffffffffffff610;
                    runtime_growslice(fields.array,fields.len,fields.cap,1,
                                      (internal_abi_Type *)&DAT_008933c0,~r0_04);
                    fields.len = extraout_RBX_08;
                    fields.array = extraout_RAX_16;
                    fields.cap = extraout_RCX_06;
                  }
                  peVar9 = fields.array;
                  piVar13 = (int *)(fields.len * 0x88);
                  if (runtime_writeBarrier._0_4_ != 0) {
                    local_8f0 = (int *)(fields.len * 0x88);
                    local_800 = fields.array;
                    runtime_wbMove((internal_abi_Type *)&DAT_008933c0,fields.array + fields.len + -1
                                   ,&field);
                    peVar9 = local_800;
                    piVar13 = local_8f0;
                  }
                  *(uint8 **)((int)(piVar13 + -0x11) + (int)peVar9) = field.name.str;
                  FUN_0046d0f0();
                  runtime_mapaccess1((internal_abi_MapType *)&DAT_0082ddc0,(runtime_hmap *)local_810
                                     ,&f.typ,~r0_22);
                  if (1 < *extraout_RAX_17) {
                    if ((uint)fields.len <= fields.len - 1U) {
                    // WARNING: Subroutine does not return
                      runtime_panicIndex();
                    }
                    local_128[0] = fields.array[fields.len - 1].name.str;
                    FUN_0046d0f0();
                    fields.len = fields.len + 1;
                    if ((uint)fields.cap < (uint)fields.len) {
                      ~r0_05.len = (int)in_stack_fffffffffffff608;
                      ~r0_05.array = in_stack_fffffffffffff600;
                      ~r0_05.cap = (int)in_stack_fffffffffffff610;
                      runtime_growslice(fields.array,fields.len,fields.cap,1,
                                        (internal_abi_Type *)&DAT_008933c0,~r0_05);
                      fields.len = extraout_RBX_09;
                      fields.array = extraout_RAX_18;
                      fields.cap = extraout_RCX_07;
                    }
                    peVar9 = fields.array;
                    piVar13 = (int *)(fields.len * 0x88);
                    if (runtime_writeBarrier._0_4_ != 0) {
                      local_8f0 = (int *)(fields.len * 0x88);
                      local_800 = fields.array;
                      runtime_wbMove((internal_abi_Type *)&DAT_008933c0,
                                     fields.array + fields.len + -1,local_128);
                      peVar9 = local_800;
                      piVar13 = local_8f0;
                    }
                    *(uint8 **)((int)(piVar13 + -0x11) + (int)peVar9) = local_128[0];
                    FUN_0046d0f0();
                  }
                }
                else {
                  runtime_mapassign((internal_abi_MapType *)&DAT_0082ddc0,(runtime_hmap *)nextCount,
                                    &ft,pvVar15);
                  *extraout_RAX_19 = *extraout_RAX_19 + 1;
                  runtime_mapaccess1((internal_abi_MapType *)&DAT_0082ddc0,(runtime_hmap *)nextCount
                                     ,&ft,~r0_23);
                  if (*extraout_RAX_20 == 1) {
                    local_8e0 = (runtime_hmap *)((int)&local_8e0->count + 1);
                    (*(code *)ft.tab[5].fun[0])(ft.data);
                    local_1b0 = FUN_0046cda2();
                    local_160 = local_7f8;
                    local_158 = local_930;
                    local_150 = local_930;
                    peVar9 = local_7f0;
                    prVar6 = local_8e8;
                    prVar11 = local_8e0;
                    local_148 = ft;
                    if (local_8e8 < local_8e0) {
                      ~r0_06.len = (int)in_stack_fffffffffffff608;
                      ~r0_06.array = in_stack_fffffffffffff600;
                      ~r0_06.cap = (int)in_stack_fffffffffffff610;
                      runtime_growslice(local_7f0,(int)local_8e0,(int)local_8e8,1,
                                        (internal_abi_Type *)&DAT_008933c0,~r0_06);
                      peVar9 = extraout_RAX_21;
                      prVar6 = extraout_RCX_08;
                      prVar11 = extraout_RBX_10;
                    }
                    prVar2 = (runtime_hmap *)((int)prVar11 * 0x88);
                    if (runtime_writeBarrier._0_4_ != 0) {
                      local_8f8 = prVar6;
                      local_8e8 = (runtime_hmap *)((int)prVar11 * 0x88);
                      local_8e0 = prVar11;
                      local_808 = peVar9;
                      runtime_wbMove((internal_abi_Type *)&DAT_008933c0,peVar9 + (int)prVar11 + -1,
                                     local_1b0);
                      peVar9 = local_808;
                      prVar11 = local_8e0;
                      prVar2 = local_8e8;
                    }
                    *(undefined8 *)(&prVar2[-3].flags + (int)peVar9) = local_1b0._0_8_;
                    local_7f0 = (encoding_json_field *)FUN_0046d0f0();
                    local_8e8 = extraout_RCX_09;
                    local_8e0 = prVar11;
                  }
                }
              }
            }
          }
          else {
            local_978 = sf.Type.tab;
            local_868 = sf.Type.data;
            iVar7 = (*(code *)sf.Type.tab[4].fun[0])();
            if (iVar7 == 0x16) {
              (*(code *)local_978[2]._type)(local_868);
            }
            auVar18 = FUN_0046d10c();
            if (local_640 == 0) {
              bVar17 = false;
            }
            else {
              iVar7 = (**(code **)(auVar18._0_8_ + 0x98))(auVar18._8_8_);
              bVar17 = iVar7 != 0x19;
            }
            if (!bVar17) goto LAB_00558766;
          }
          i = i + 1;
        }
      }
      peVar10 = local_7d0 + 1;
      puVar16 = local_8c0 + 1;
    }
  }
  val.len = (int)in_stack_fffffffffffff608;
  val.array = (uint8 *)in_stack_fffffffffffff600;
  val.cap = (int)in_stack_fffffffffffff610;
  runtime_convTslice(val,fields.array);
  x.data = in_stack_fffffffffffff608;
  x._type = in_stack_fffffffffffff600;
  sort_Slice(x,(func_int__int__bool **)&DAT_00803120);
  i_1 = 0;
  uVar8 = 0;
  peVar9 = fields.array;
  prVar6 = (runtime_hmap *)fields.cap;
  do {
    if (fields.len <= i_1) {
      val_00.len = (int)in_stack_fffffffffffff608;
      val_00.array = (uint8 *)in_stack_fffffffffffff600;
      val_00.cap = (int)in_stack_fffffffffffff610;
      runtime_convTslice(val_00,peVar9);
      data.data = in_stack_fffffffffffff608;
      data.tab = (runtime_itab *)in_stack_fffffffffffff600;
      sort_Sort(data);
      uVar4 = 0;
      local_8b8 = (runtime_hmap *)uVar8;
      while( true ) {
        if ((int)local_8b8 <= (int)uVar4) {
          runtime_makemap((internal_abi_MapType *)&DAT_0082dd60,uVar8,(runtime_hmap *)0x0,local_7c0)
          ;
          runtime_makemap((internal_abi_MapType *)&DAT_0082dd60,uVar8,(runtime_hmap *)0x0,~r0_18);
          iVar7 = 0;
          peVar12 = peVar9;
          local_8b8 = (runtime_hmap *)uVar8;
          local_828 = extraout_RAX_05;
          while( true ) {
            if ((int)local_8b8 <= iVar7) {
              return;
            }
            ~r0_00 = (peVar12->name).str;
            FUN_0046d0f0();
            if (uVar8 <= extraout_RCX_03) break;
            local_8c0 = (undefined *)(extraout_RCX_03 * 0x88);
            s.len = (int)in_stack_fffffffffffff608;
            s.str = (uint8 *)in_stack_fffffffffffff600;
            i_3 = extraout_RCX_03;
            local_7d0 = peVar12;
            local_7c8 = peVar9;
            runtime_mapassign_faststr((internal_abi_MapType *)&DAT_0082dd60,h,s,~r0_00);
            puVar16 = local_8c0 + (int)&local_7c8->name;
            puVar5 = extraout_RAX_06;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier2();
              *extraout_R11_00 = extraout_RSI;
              extraout_R11_00[1] = *extraout_RAX_07;
              puVar5 = extraout_RAX_07;
              puVar16 = extraout_RSI;
            }
            *puVar5 = puVar16;
            out.len = (int)in_stack_fffffffffffff608;
            out.array = (uint8 *)in_stack_fffffffffffff600;
            out.cap = (int)in_stack_fffffffffffff610;
            in.len = (int)in_stack_fffffffffffff620;
            in.array = (uint8 *)in_stack_fffffffffffff618;
            in.cap = (int)in_stack_fffffffffffff628;
            ~r0_11.len = in_stack_fffffffffffff638;
            ~r0_11.array = in_stack_fffffffffffff630;
            ~r0_11.cap = in_stack_fffffffffffff640;
            encoding_json_appendFoldedName(out,in,~r0_11);
            ky.len = (int)in_stack_fffffffffffff608;
            ky.str = (uint8 *)in_stack_fffffffffffff600;
            runtime_mapaccess2_faststr
                      ((internal_abi_MapType *)&DAT_0082dd60,local_828,ky,~r0_16,~r1);
            if (extraout_BL == '\0') {
              out_00.len = (int)in_stack_fffffffffffff608;
              out_00.array = (uint8 *)in_stack_fffffffffffff600;
              out_00.cap = (int)in_stack_fffffffffffff610;
              in_00.len = (int)in_stack_fffffffffffff620;
              in_00.array = (uint8 *)in_stack_fffffffffffff618;
              in_00.cap = (int)in_stack_fffffffffffff628;
              ~r0_12.len = in_stack_fffffffffffff638;
              ~r0_12.array = in_stack_fffffffffffff630;
              ~r0_12.cap = in_stack_fffffffffffff640;
              encoding_json_appendFoldedName(out_00,in_00,~r0_12);
              if (uVar8 <= (uint)i_3) {
                    // WARNING: Subroutine does not return
                runtime_panicIndex();
              }
              ~r0_01.len = (int)in_stack_fffffffffffff608;
              ~r0_01.str = (uint8 *)in_stack_fffffffffffff600;
              local_7c8 = peVar9;
              runtime_slicebytetostring((runtime_tmpBuf *)0x0,ptr,n,~r0_01);
              s_00.len = (int)in_stack_fffffffffffff608;
              s_00.str = (uint8 *)in_stack_fffffffffffff600;
              runtime_mapassign_faststr((internal_abi_MapType *)&DAT_0082dd60,local_828,s_00,~r0_17)
              ;
              puVar16 = local_8c0 + (int)local_7c8;
              puVar5 = extraout_RAX_08;
              if (runtime_writeBarrier._0_4_ != 0) {
                runtime_gcWriteBarrier2();
                *extraout_R11_01 = puVar16;
                extraout_R11_01[1] = *extraout_RAX_09;
                puVar5 = extraout_RAX_09;
              }
              *puVar5 = puVar16;
            }
            peVar12 = local_7d0 + 1;
            iVar7 = i_3 + 1;
          }
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        if (uVar8 <= uVar4) break;
        local_8c0 = (undefined *)(uVar4 * 0x88);
        t_00.data = in_stack_fffffffffffff608;
        t_00.tab = (runtime_itab *)in_stack_fffffffffffff600;
        index.len = in_stack_fffffffffffff618;
        index.array = (int *)in_stack_fffffffffffff610;
        index.cap = (int)in_stack_fffffffffffff620;
        ~r0_08.data = in_stack_fffffffffffff630;
        ~r0_08.tab = in_stack_fffffffffffff628;
        i_2 = uVar4;
        local_7c8 = peVar9;
        encoding_json_typeByIndex(t_00,index,~r0_08);
        t_01.data = in_stack_fffffffffffff608;
        t_01.tab = (runtime_itab *)in_stack_fffffffffffff600;
        encoding_json_typeEncoder(t_01,~r0_15);
        uVar3 = extraout_RAX_03;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11 = extraout_RAX_04;
          extraout_R11[1] = *(undefined8 *)((int)&local_7c8->encoder + (int)local_8c0);
          uVar3 = extraout_RAX_04;
        }
        *(undefined8 *)((int)&local_7c8->encoder + (int)local_8c0) = uVar3;
        uVar4 = i_2 + 1;
      }
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((uint)fields.len <= (uint)i_1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    local_8b8 = (runtime_hmap *)(i_1 * 0x88);
    fi.name.str = fields.array[i_1].name.str;
    local_970 = uVar8;
    local_968 = prVar6;
    local_918 = (undefined *)i_1;
    local_860 = peVar9;
    FUN_0046d0f0();
    local_838 = fi.name.str;
    local_940 = fi.name.len;
    prVar11 = (runtime_hmap *)&DAT_00000001;
    puVar16 = extraout_RAX_00;
    uVar8 = extraout_RCX;
    prVar6 = extraout_RBX;
    while (i_1 = (int)(puVar16 + (int)&prVar11->count), local_8c0 = (undefined *)i_1,
          i_1 < fields.len) {
      if ((uint)fields.len <= (uint)i_1) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      FUN_0046d0f0();
      puVar16 = extraout_RAX_10;
      uVar8 = extraout_RCX_04;
      prVar6 = extraout_RBX_04;
      if (fj.name.len != extraout_R10) break;
      local_8c8 = prVar11;
      runtime_memequal();
      puVar16 = local_918;
      uVar8 = local_970;
      peVar9 = local_860;
      prVar6 = local_968;
      prVar11 = local_8c8;
      i_1 = (int)local_8c0;
      if (extraout_AL == '\0') break;
      prVar11 = (runtime_hmap *)((int)&local_8c8->count + 1);
    }
    local_5f0 = in_XMM15._0_8_;
    if (prVar11 == (runtime_hmap *)&DAT_00000001) {
      prVar11 = (runtime_hmap *)(uVar8 + 1);
      if (prVar6 < prVar11) {
        ~r0_02.len = (int)in_stack_fffffffffffff608;
        ~r0_02.array = in_stack_fffffffffffff600;
        ~r0_02.cap = (int)in_stack_fffffffffffff610;
        runtime_growslice(peVar9,(int)prVar11,(int)prVar6,1,(internal_abi_Type *)&DAT_008933c0,
                          ~r0_02);
        peVar9 = extraout_RAX_01;
        prVar6 = extraout_RCX_00;
        prVar11 = extraout_RBX_00;
        i_1 = (int)local_8c0;
      }
      prVar2 = (runtime_hmap *)((int)prVar11 * 0x88);
      if (runtime_writeBarrier._0_4_ != 0) {
        local_8d0 = prVar6;
        local_8c8 = (runtime_hmap *)((int)prVar11 * 0x88);
        local_8b8 = prVar11;
        local_7d8 = peVar9;
        runtime_wbMove((internal_abi_Type *)&DAT_008933c0,peVar9 + (int)prVar11 + -1,&fi);
        peVar9 = local_7d8;
        prVar2 = local_8c8;
        i_1 = (int)local_8c0;
      }
      *(uint8 **)(&prVar2[-3].flags + (int)peVar9) = fi.name.str;
      FUN_0046d0f0();
      uVar8 = extraout_R9;
      prVar6 = extraout_RBX_01;
    }
    else {
      if ((uint)fields.cap < (uint)i_1) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
      if ((uint)i_1 < puVar16) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      FUN_0046cda2();
      if ((((int)prVar11 < 2) ||
          (*(int *)(extraout_R8 + 0xe0 + extraout_R9_00) !=
           *(int *)(extraout_R8 + 0x58 + extraout_R9_00))) ||
         (*(char *)(extraout_R8 + 0xd0 + extraout_R9_00) !=
          *(char *)(extraout_R8 + 0x48 + extraout_R9_00))) {
        if (prVar11 == (runtime_hmap *)0x0) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        local_5f0 = *(uint8 **)(extraout_R8 + extraout_R9_00);
        FUN_0046d0f0();
      }
      dominant.name.str = local_5f0;
      cVar1 = FUN_0046d0f0();
      uVar8 = extraout_RCX_01;
      prVar6 = oldCap;
      if (cVar1 != '\0') {
        prVar6 = (runtime_hmap *)(extraout_RCX_01 + 1);
        prVar11 = oldCap;
        if (oldCap < prVar6) {
          ~r0_03.len = (int)in_stack_fffffffffffff608;
          ~r0_03.array = in_stack_fffffffffffff600;
          ~r0_03.cap = (int)in_stack_fffffffffffff610;
          runtime_growslice(peVar9,(int)prVar6,(int)oldCap,1,(internal_abi_Type *)&DAT_008933c0,
                            ~r0_03);
          peVar9 = extraout_RAX_02;
          prVar11 = extraout_RCX_02;
          prVar6 = extraout_RBX_02;
          i_1 = (int)local_8c0;
        }
        prVar2 = (runtime_hmap *)((int)prVar6 * 0x88);
        if (runtime_writeBarrier._0_4_ != 0) {
          local_8d8 = prVar11;
          local_8c8 = prVar6;
          local_8b8 = (runtime_hmap *)((int)prVar6 * 0x88);
          local_7e0 = peVar9;
          runtime_wbMove((internal_abi_Type *)&DAT_008933c0,peVar9 + (int)prVar6 + -1,&dominant);
          peVar9 = local_7e0;
          prVar2 = local_8b8;
          i_1 = (int)local_8c0;
        }
        *(uint8 **)(&prVar2[-3].flags + (int)peVar9) = dominant.name.str;
        FUN_0046d0f0();
        uVar8 = extraout_R9_01;
        prVar6 = extraout_RBX_03;
      }
    }
  } while( true );
}



void encoding_json_typeFields_func1(int i,int j,bool ~r0)

{
  uint uVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  char extraout_AL;
  int k;
  int xik;
  int in_RDX;
  __encoding_json_field *_fields;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  uVar1 = (*(int **)(in_RDX + 8))[1];
  if (uVar1 <= (uint)i) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  iVar2 = **(int **)(in_RDX + 8);
  iVar4 = i * 0x88;
  if (uVar1 <= (uint)j) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  iVar5 = j * 0x88;
  if ((*(int *)(iVar2 + 8 + iVar5) == *(int *)(iVar2 + 8 + iVar4)) &&
     (runtime_memequal(), extraout_AL != '\0')) {
    iVar3 = *(int *)(iVar2 + 0x58 + iVar4);
    if (iVar3 != *(int *)(iVar2 + 0x58 + iVar5)) {
      return;
    }
    if (*(char *)(iVar2 + 0x48 + iVar5) == *(char *)(iVar2 + 0x48 + iVar4)) {
      for (k = 0; (k < iVar3 &&
                  (*(int *)(*(int *)(iVar2 + 0x50 + iVar5) + k * 8) ==
                   *(int *)(*(int *)(iVar2 + 0x50 + iVar4) + k * 8))); k = k + 1) {
      }
      return;
    }
    return;
  }
  runtime_cmpstring();
  return;
}



// DWARF original prototype: void encoding/json.cachedTypeFields(reflect.Type t,
// encoding/json.structFields ~r0, encoding/json.structFields ~r0)

void encoding_json_cachedTypeFields
               (reflect_Type t,encoding_json_structFields ~r0,encoding_json_structFields ~r0_1)

{
  undefined8 uVar1;
  encoding_json_structFields ~r0_00;
  interface___ actual;
  encoding_json_structFields ~r0_1_00;
  map_string__encoding_json_field in_RAX;
  internal_abi_Type *have;
  void *pvVar2;
  internal_abi_Type *have_00;
  char extraout_CL;
  bool ok;
  undefined8 extraout_RCX;
  undefined ok_00;
  undefined8 extraout_RBX;
  undefined8 extraout_RSI;
  undefined8 extraout_RDI;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_ffffffffffffff48;
  interface___ in_stack_ffffffffffffff58;
  internal_abi_Type *in_stack_ffffffffffffff68;
  undefined8 in_stack_ffffffffffffff70;
  undefined8 uVar3;
  undefined4 uVar4;
  undefined4 uVar5;
  undefined4 uVar6;
  undefined4 uVar7;
  undefined4 uVar8;
  undefined4 uVar9;
  undefined4 uVar10;
  undefined4 uVar11;
  undefined4 local_50;
  undefined4 uStack_4c;
  undefined4 uStack_48;
  undefined4 uStack_44;
  undefined4 uStack_38;
  undefined4 uStack_34;
  undefined8 local_30;
  undefined4 uStack_28;
  undefined4 uStack_24;
  undefined4 uStack_20;
  undefined4 uStack_1c;
  undefined local_18 [12];
  undefined4 uStack_c;
  
  while (&uStack_38 <= *(undefined4 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar3 = in_XMM15._0_8_;
  uVar4 = in_XMM15._0_4_;
  uVar5 = in_XMM15._4_4_;
  uVar6 = in_XMM15._8_4_;
  uVar7 = in_XMM15._12_4_;
  if (in_RAX == (map_string__encoding_json_field)0x0) {
    ok_00 = false;
  }
  else {
    uVar1._0_1_ = in_RAX->flags;
    uVar1._1_1_ = in_RAX->B;
    uVar1._2_2_ = in_RAX->noverflow;
    uVar1._4_4_ = in_RAX->hash0;
    ok_00 = (undefined)uVar1;
  }
  uVar8 = uVar4;
  uVar9 = uVar5;
  uVar10 = uVar6;
  uVar11 = uVar7;
  sync___Map__Load(&encoding_json_fieldCache,in_stack_ffffffffffffff48,in_stack_ffffffffffffff58,
                   (bool)ok_00);
  if (extraout_CL != '\0') {
    local_30 = in_XMM15._0_8_;
    uStack_28 = in_XMM15._0_4_;
    uStack_24 = in_XMM15._4_4_;
    uStack_20 = in_XMM15._8_4_;
    uStack_1c = in_XMM15._12_4_;
    if (have == (internal_abi_Type *)&DAT_00860c40) {
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicdottypeE
              (have,(internal_abi_Type *)&DAT_00860c40,(internal_abi_Type *)&DAT_00821120);
  }
  ~r0_00.list.cap = (int)in_stack_ffffffffffffff68;
  ~r0_00.list.array = (encoding_json_field *)in_stack_ffffffffffffff58._type;
  ~r0_00.list.len = (int)in_stack_ffffffffffffff58.data;
  ~r0_00.byExactName = (map_string__encoding_json_field)in_stack_ffffffffffffff70;
  ~r0_00.byFoldedName = in_RAX;
  ~r0_1_00.list.len._0_4_ = uVar4;
  ~r0_1_00.list.array = (encoding_json_field *)uVar3;
  ~r0_1_00.list.len._4_4_ = uVar5;
  ~r0_1_00.list.cap._0_4_ = uVar6;
  ~r0_1_00.list.cap._4_4_ = uVar7;
  ~r0_1_00.byExactName._0_4_ = uVar8;
  ~r0_1_00.byExactName._4_4_ = uVar9;
  ~r0_1_00.byFoldedName._0_4_ = uVar10;
  ~r0_1_00.byFoldedName._4_4_ = uVar11;
  encoding_json_typeFields((reflect_Type)in_stack_ffffffffffffff48,~r0_00,~r0_1_00);
  local_50 = (undefined4)extraout_RBX;
  uStack_4c = (undefined4)((uint)extraout_RBX >> 0x20);
  uStack_48 = (undefined4)extraout_RCX;
  uStack_44 = (undefined4)((uint)extraout_RCX >> 0x20);
