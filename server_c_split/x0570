  int extraout_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffffa8;
  uint8 *in_stack_ffffffffffffffb8;
  int in_stack_ffffffffffffffc0;
  uint8 *in_stack_ffffffffffffffc8;
  uint8 *puVar2;
  int in_stack_ffffffffffffffd0;
  int iVar3;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0.len = in_stack_ffffffffffffffc0;
  ~r0.str = in_stack_ffffffffffffffb8;
  strings_TrimLeftFunc(in_stack_ffffffffffffffa8,in_RAX,~r0);
  if ((extraout_RBX == 0) || (*extraout_RAX != ';')) {
    return;
  }
  ~r0_00.len = in_stack_ffffffffffffffc0;
  ~r0_00.str = in_stack_ffffffffffffffb8;
  strings_TrimLeftFunc
            (in_stack_ffffffffffffffa8,
             (func_int32__bool **)(extraout_RAX + ((dword)(-(extraout_RBX + -1) >> 0x3f) & 1)),
             ~r0_00);
  token.len = in_stack_ffffffffffffffc0;
  token.str = in_stack_ffffffffffffffb8;
  rest_00.len = in_stack_ffffffffffffffd0;
  rest_00.str = in_stack_ffffffffffffffc8;
  mime_consumeToken(in_stack_ffffffffffffffa8,token,rest_00);
  ~r0_01.len = in_stack_ffffffffffffffc0;
  ~r0_01.str = in_stack_ffffffffffffffb8;
  strings_ToLower(in_stack_ffffffffffffffa8,~r0_01);
  if (extraout_RBX_00 == (uint8 *)0x0) {
    return;
  }
  ~r0_02.len = in_stack_ffffffffffffffc0;
  ~r0_02.str = in_stack_ffffffffffffffb8;
  puVar2 = extraout_RBX_00;
  strings_TrimLeftFunc(in_stack_ffffffffffffffa8,f,~r0_02);
  if ((extraout_RBX_01 != 0) && (*extraout_RAX_00 == '=')) {
    ~r0_03.len = in_stack_ffffffffffffffc0;
    ~r0_03.str = in_stack_ffffffffffffffb8;
    strings_TrimLeftFunc
              (in_stack_ffffffffffffffa8,
               (func_int32__bool **)
               (extraout_RAX_00 + ((dword)(-(extraout_RBX_01 + -1) >> 0x3f) & 1)),~r0_03);
    value_00.len = in_stack_ffffffffffffffc0;
    value_00.str = in_stack_ffffffffffffffb8;
    rest_01.len = extraout_RBX_02;
    rest_01.str = puVar2;
    iVar3 = extraout_RBX_02;
    mime_consumeValue(in_stack_ffffffffffffffa8,value_00,rest_01);
    if (extraout_RBX_03 == 0) {
      if (extraout_RDI == iVar3) {
        runtime_memequal();
        cVar1 = extraout_AL;
      }
      else {
        cVar1 = '\0';
      }
      if (cVar1 != '\0') {
        return;
      }
    }
    return;
  }
  return;
}



void mime_percentHexUnescape(string s,string ~r0,error ~r1)

{
  char cVar1;
  error ~r0_00;
  int in_RAX;
  uint8 *ptr;
  uint uVar2;
  int i;
  uint len;
  int percents;
  int iVar3;
  uint in_RBX;
  int i_1;
  void *in_RDI;
  int j;
  void *extraout_RDI;
  sdword sVar4;
  byte bVar5;
  int unaff_R14;
  string in_stack_ffffffffffffffb8;
  __interface___ in_stack_ffffffffffffffc8;
  runtime_itab *in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  uVar2 = 0;
  iVar3 = 0;
  while( true ) {
    while( true ) {
      if ((int)in_RBX <= (int)uVar2) {
        if (iVar3 == 0) {
          return;
        }
        len = in_RBX + iVar3 * -2;
        runtime_makeslice((internal_abi_Type *)&DAT_00807920,len,len,in_RDI);
        uVar2 = 0;
        j = 0;
        do {
          if ((int)in_RBX <= (int)uVar2) {
            runtime_slicebytetostring((runtime_tmpBuf *)0x0,ptr,len,in_stack_ffffffffffffffb8);
            return;
          }
          if (in_RBX <= uVar2) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          if (*(uint8 *)(in_RAX + uVar2) == 0x25) {
            if (in_RBX <= uVar2 + 1) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            bVar5 = *(byte *)(in_RAX + 1 + uVar2);
            sVar4 = bVar5 - 0x30;
            if (9 < (byte)sVar4) {
              if ((byte)(bVar5 + 0x9f) < 6) {
                sVar4 = bVar5 - 0x57;
              }
              else if ((byte)(bVar5 + 0xbf) < 6) {
                sVar4 = bVar5 - 0x37;
              }
              else {
                sVar4 = 0;
              }
            }
            if (in_RBX <= uVar2 + 2) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            cVar1 = *(char *)(in_RAX + 2 + uVar2);
            bVar5 = cVar1 - 0x30;
            if (9 < bVar5) {
              if ((byte)(cVar1 + 0x9fU) < 6) {
                bVar5 = cVar1 + 0xa9;
              }
              else if ((byte)(cVar1 + 0xbfU) < 6) {
                bVar5 = cVar1 - 0x37;
              }
              else {
                bVar5 = 0;
              }
            }
            if (len <= (uint)j) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            ptr[j] = (byte)(sVar4 << 4) | bVar5;
            uVar2 = uVar2 + 3;
          }
          else {
            if (len <= (uint)j) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            ptr[j] = *(uint8 *)(in_RAX + uVar2);
            uVar2 = uVar2 + 1;
          }
          j = j + 1;
        } while( true );
      }
      if (in_RBX <= uVar2) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if (*(char *)(in_RAX + uVar2) == '%') break;
      uVar2 = uVar2 + 1;
    }
    if ((int)in_RBX <= (int)(uVar2 + 2)) break;
    if (in_RBX <= uVar2 + 1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    cVar1 = *(char *)(in_RAX + 1 + uVar2);
    if (((9 < (byte)(cVar1 - 0x30U)) && (5 < (byte)(cVar1 + 0x9fU))) && (5 < (byte)(cVar1 + 0xbfU)))
    break;
    if (in_RBX <= uVar2 + 2) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    cVar1 = *(char *)(in_RAX + 2 + uVar2);
    if (((9 < (byte)(cVar1 - 0x30U)) && (5 < (byte)(cVar1 + 0x9fU))) && (5 < (byte)(cVar1 + 0xbfU)))
    break;
    iVar3 = iVar3 + 1;
    uVar2 = uVar2 + 3;
  }
  runtime_convTstring(in_stack_ffffffffffffffb8,
                      (void *)(in_RAX + (uVar2 & (int)-(in_RBX - uVar2) >> 0x3f)));
  ~r0_00.data = &DAT_008075e0;
  ~r0_00.tab = in_stack_ffffffffffffffe0;
  fmt_Errorf(in_stack_ffffffffffffffb8,in_stack_ffffffffffffffc8,~r0_00);
  return;
}



// DWARF original prototype: void mime.setExtensionType(string extension, string mimeType, error
// ~r0, error ~r0)

void mime_setExtensionType(string extension,string mimeType,error ~r0,error ~r0_1)

{
  runtime_slice ~r0_00;
  __uint8 val;
  string mediatype;
  string ~r0_01;
  string ~r0_02;
  interface___ value;
  interface___ value_00;
  interface___ value_01;
  interface___ value_02;
  char extraout_CL;
  bool ok;
  char extraout_AL;
  char extraout_AL_00;
  void *in_RAX;
  void *extraout_RAX;
  int extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *puVar1;
  map_string_string extraout_RAX_03;
  void *extraout_RAX_04;
  void *extraout_RAX_05;
  internal_abi_Type *have;
  void *extraout_RAX_06;
  void *extraout_RAX_07;
  map_string_string in_RCX;
  runtime_hmap *h;
  map_string_string param;
  int iVar2;
  int extraout_RCX;
  undefined8 uVar3;
  int extraout_RBX;
  void **extraout_RBX_00;
  void *extraout_RBX_01;
  void *pvVar4;
  char cVar5;
  int in_RDI;
  int extraout_RDI;
  void *pvVar6;
  void *oldCap;
  undefined8 *extraout_R11;
  void **extraout_R11_00;
  int unaff_R14;
  bool bVar7;
  interface___ in_stack_ffffffffffffff10;
  internal_abi_Type *in_stack_ffffffffffffff20;
  void *in_stack_ffffffffffffff28;
  interface___ in_stack_ffffffffffffff30;
  void *local_70;
  void *local_68;
  void *local_60;
  void *local_58;
  void *local_50;
  map_string_string local_48;
  void *local_30;
  undefined local_20 [16];
  code **local_10;
  
  while (&local_70 <= *(void ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  mediatype.len = (int)in_stack_ffffffffffffff28;
  mediatype.str = (uint8 *)in_stack_ffffffffffffff20;
  mime_ParseMediaType((string)in_stack_ffffffffffffff10,mediatype,in_RCX,
                      (error)in_stack_ffffffffffffff30);
  if (extraout_RDI != 0) {
    return;
  }
  local_70 = extraout_RAX;
  if (in_RDI < 5) {
    cVar5 = '\0';
  }
  else {
    runtime_memequal();
    cVar5 = extraout_AL;
  }
  if ((cVar5 != '\0') &&
     (runtime_mapaccess1_faststr
                ((internal_abi_MapType *)&DAT_0082bd20,h,(string)in_stack_ffffffffffffff10,
                 &DAT_008b0d56), *(int *)(extraout_RAX_00 + 8) == 0)) {
    runtime_mapassign_faststr
              ((internal_abi_MapType *)&DAT_0082bd20,h,(string)in_stack_ffffffffffffff10,
               &DAT_008b0d56);
    extraout_RAX_01[1] = 5;
    puVar1 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      uVar3 = *extraout_RAX_01;
      runtime_gcWriteBarrier1();
      *extraout_R11 = uVar3;
      puVar1 = extraout_RAX_02;
    }
    *puVar1 = &DAT_008aeef3;
    ~r0_01.len = (int)in_stack_ffffffffffffff28;
    ~r0_01.str = (uint8 *)in_stack_ffffffffffffff20;
    mime_FormatMediaType((string)in_stack_ffffffffffffff10,in_RCX,~r0_01);
    in_RCX = extraout_RAX_03;
  }
  ~r0_02.len = (int)in_stack_ffffffffffffff28;
  ~r0_02.str = (uint8 *)in_stack_ffffffffffffff20;
  local_48 = in_RCX;
  strings_ToLower((string)in_stack_ffffffffffffff10,~r0_02);
  local_60 = extraout_RAX_04;
  runtime_convTstring((string)in_stack_ffffffffffffff10,in_RAX);
  runtime_convTstring((string)in_stack_ffffffffffffff10,local_48);
  value.data = in_stack_ffffffffffffff28;
  value._type = in_stack_ffffffffffffff20;
  sync___Map__Swap(&mime_mimeTypes,in_stack_ffffffffffffff10,value,in_stack_ffffffffffffff30,true);
  runtime_convTstring((string)in_stack_ffffffffffffff10,local_60);
  local_50 = extraout_RAX_05;
  runtime_convTstring((string)in_stack_ffffffffffffff10,local_48);
  value_00.data = in_stack_ffffffffffffff28;
  value_00._type = in_stack_ffffffffffffff20;
  sync___Map__Swap(&mime_mimeTypesLower,in_stack_ffffffffffffff10,value_00,in_stack_ffffffffffffff30
                   ,true);
  LOCK();
  bVar7 = mime_extensionsMu.state == 0;
  if (bVar7) {
    mime_extensionsMu.state = 1;
  }
  UNLOCK();
  if (!bVar7) {
    sync___Mutex__lockSlow(&mime_extensionsMu);
  }
  local_20._8_8_ = &mime_extensionsMu;
  local_20._0_8_ = mime_setExtensionType_func1;
  local_10 = (code **)local_20;
  local_30 = local_70;
  value_01.data = in_stack_ffffffffffffff28;
  value_01._type = in_stack_ffffffffffffff20;
  sync___Map__Load(&mime_extensions,in_stack_ffffffffffffff10,value_01,true);
  if (extraout_CL == '\0') {
    local_58 = (void *)0x0;
    oldCap = (void *)0x0;
    pvVar4 = (void *)0x0;
  }
  else {
    if (have != (internal_abi_Type *)&DAT_00802320) {
                    // WARNING: Subroutine does not return
      runtime_panicdottypeE
                (have,(internal_abi_Type *)&DAT_00802320,(internal_abi_Type *)&DAT_00821120);
    }
    local_58 = *extraout_RBX_00;
    pvVar4 = extraout_RBX_00[1];
    oldCap = extraout_RBX_00[2];
  }
  iVar2 = 0;
  pvVar6 = local_58;
  local_68 = local_58;
  while( true ) {
    if ((int)pvVar4 <= iVar2) {
      pvVar4 = (void *)((int)pvVar4 + 1);
      if (oldCap < pvVar4) {
        ~r0_00.cap = (int)in_stack_ffffffffffffff20;
        ~r0_00.array = in_stack_ffffffffffffff10._type;
        ~r0_00.len = (int)in_stack_ffffffffffffff10.data;
        runtime_growslice(local_58,(int)pvVar4,(int)oldCap,1,(internal_abi_Type *)&DAT_008075e0,
                          ~r0_00);
        local_58 = extraout_RAX_06;
        pvVar4 = extraout_RBX_01;
      }
      iVar2 = ((int)pvVar4 - 1U) * 0x10;
      *(int *)((int)local_58 + iVar2 + 8) = extraout_RBX;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_00 = local_60;
        extraout_R11_00[1] = *(void **)((int)extraout_RAX_07 + extraout_RCX);
        local_58 = extraout_RAX_07;
        iVar2 = extraout_RCX;
      }
      *(void **)((int)local_58 + iVar2) = local_60;
      runtime_convTstring((string)in_stack_ffffffffffffff10,local_70);
      val.cap = (int)in_stack_ffffffffffffff20;
      val.array = (uint8 *)in_stack_ffffffffffffff10._type;
      val.len = (int)in_stack_ffffffffffffff10.data;
      runtime_convTslice(val,local_58);
      value_02.data = in_stack_ffffffffffffff28;
      value_02._type = in_stack_ffffffffffffff20;
      sync___Map__Swap(&mime_extensions,in_stack_ffffffffffffff10,value_02,in_stack_ffffffffffffff30
                       ,true);
      (**local_10)();
      return;
    }
    if ((extraout_RBX == *(int *)((int)pvVar6 + 8)) &&
       (local_50 = pvVar6, runtime_memequal(), local_58 = local_68, pvVar6 = local_50,
       extraout_AL_00 != '\0')) break;
    pvVar6 = (void *)((int)pvVar6 + 0x10);
    iVar2 = iVar2 + 1;
  }
  (**local_10)();
  return;
}



// WARNING: Unknown calling convention

void mime_setExtensionType_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  sync___Mutex__Unlock(*(sync_Mutex **)(in_RDX + 8));
  return;
}



// WARNING: Unknown calling convention

void mime_init_0(void)

{
  undefined8 extraout_RAX;
  undefined8 *extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RAX;
  }
  mime_osInitMime = (func__ **)&PTR_mime_initMimeUnix_008ec9f8;
  return;
}



// DWARF original prototype: void mime.loadMimeGlobsFile(string filename, error ~r0, error ~r0)

void mime_loadMimeGlobsFile(string filename,error ~r0,error ~r0_1)

{
  char *pcVar1;
  __string ~r0_00;
  error ~r0_1_00;
  undefined auVar2 [16];
  undefined auVar3 [16];
  undefined auVar4 [16];
  undefined auVar5 [16];
  char extraout_AL;
  char extraout_AL_00;
  int in_RAX;
  undefined8 extraout_RAX;
  os_File *f;
  int sepSave;
  char **extraout_RAX_00;
  int extraout_RAX_01;
  char extraout_CL;
  bool ok;
  io_fs_FileMode in_EBX;
  int extraout_RBX;
  int n;
  int extraout_RBX_00;
  char *pcVar6;
  undefined8 extraout_RBX_01;
  undefined8 extraout_RBX_02;
  undefined8 extraout_RBX_03;
  bool ~r0_01;
  int unaff_R14;
  undefined auVar7 [16];
  interface___ in_stack_fffffffffffffef0;
  interface___ in_stack_ffffffffffffff00;
  error in_stack_ffffffffffffff10;
  undefined7 in_stack_ffffffffffffff20;
  undefined uVar8;
  undefined local_a0 [16];
  bufio_Scanner local_90;
  code **local_10;
  
  while (&local_90 <= *(bufio_Scanner **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  os_OpenFile((string)in_stack_fffffffffffffef0,in_RAX,in_EBX,(os_File *)0x0,
              (error)in_stack_ffffffffffffff00);
  if (extraout_RBX != 0) {
    return;
  }
  local_a0._8_8_ = extraout_RAX;
  local_a0._0_8_ = mime_loadMimeGlobsFile_func1;
  local_10 = (code **)local_a0;
  uVar8 = 1;
  auVar7 = FUN_0046cda2();
  local_90.r.tab = (runtime_itab *)go_itab__os_File_io_Reader;
  local_90.split = (bufio_SplitFunc **)&PTR_bufio_ScanLines_008ec8d8;
  local_90.maxTokenSize = 0x10000;
  while( true ) {
    local_90.r.data = auVar7._0_8_;
    bufio___Scanner__Scan(&local_90,auVar7[8]);
    if (extraout_AL == '\0') break;
    runtime_slicebytetostring
              ((runtime_tmpBuf *)0x0,local_90.token.array,local_90.token.len,
               (string)in_stack_fffffffffffffef0);
    ~r0_00.cap._0_7_ = in_stack_ffffffffffffff20;
    ~r0_00.array = (string *)in_stack_ffffffffffffff10.tab;
    ~r0_00.len = (int)in_stack_ffffffffffffff10.data;
    ~r0_00.cap._7_1_ = uVar8;
    strings_genSplit((string)in_stack_fffffffffffffef0,(string)in_stack_ffffffffffffff00,sepSave,n,
                     ~r0_00);
    auVar2._8_8_ = extraout_RBX_00;
    auVar2._0_8_ = local_90.r.data;
    auVar7._8_8_ = extraout_RBX_00;
    auVar7._0_8_ = local_90.r.data;
    if ((2 < extraout_RBX_00) && (auVar7 = auVar2, extraout_RAX_00[1] != (char *)0x0)) {
      pcVar6 = extraout_RAX_00[5];
      auVar5._8_8_ = pcVar6;
      auVar5._0_8_ = local_90.r.data;
      auVar4._8_8_ = pcVar6;
      auVar4._0_8_ = local_90.r.data;
      auVar3._8_8_ = pcVar6;
      auVar3._0_8_ = local_90.r.data;
      auVar7._8_8_ = pcVar6;
      if ((2 < (int)pcVar6) &&
         (((auVar7 = auVar3, **extraout_RAX_00 != '#' &&
           (pcVar1 = extraout_RAX_00[4], auVar7 = auVar4, *pcVar1 == '*')) &&
          (auVar7 = auVar5, pcVar1[1] == '.')))) {
        pcVar6 = pcVar6 + -1;
        strings_IndexAny((string)in_stack_fffffffffffffef0,(string)in_stack_ffffffffffffff00,
                         (int)(pcVar1 + 1));
        auVar7._8_8_ = extraout_RBX_01;
        auVar7._0_8_ = local_90.r.data;
        if (extraout_RAX_01 < 0) {
          sync___Map__Load(&mime_mimeTypes,in_stack_fffffffffffffef0,in_stack_ffffffffffffff00,true)
          ;
          auVar7._8_8_ = extraout_RBX_02;
          auVar7._0_8_ = local_90.r.data;
          if (extraout_CL == '\0') {
            ~r0_1_00.tab._7_1_ = uVar8;
            ~r0_1_00.tab._0_7_ = in_stack_ffffffffffffff20;
            ~r0_1_00.data = pcVar6;
            mime_setExtensionType
                      ((string)in_stack_fffffffffffffef0,(string)in_stack_ffffffffffffff00,
                       in_stack_ffffffffffffff10,~r0_1_00);
            auVar7._8_8_ = extraout_RBX_03;
            auVar7._0_8_ = local_90.r.data;
          }
        }
      }
    }
  }
  if ((io_EOF.tab == local_90.err.tab) &&
     (runtime_ifaceeq(local_90.err.tab,local_90.err.data,io_EOF.data,~r0_01), extraout_AL_00 != '\0'
     )) {
    local_90.err.tab = (runtime_itab *)0x0;
  }
  if (local_90.err.tab == (runtime_itab *)0x0) {
    (**local_10)();
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_fffffffffffffef0);
}



// WARNING: Unknown calling convention

void mime_loadMimeGlobsFile_func1(void)

{
  int *piVar1;
  error ~r0;
  int in_RDX;
  void *unaff_RBP;
  int unaff_R14;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff0;
  }
  ~r0.data = unaff_RBP;
  ~r0.tab = in_stack_fffffffffffffff0;
  os___File__Close(*(os_File **)(in_RDX + 8),~r0);
  return;
}



void mime_loadMimeFile(string filename)

{
  char **ppcVar1;
  __string ~r0;
  string ~r0_00;
  error ~r0_01;
  error ~r0_1;
  undefined auVar2 [16];
  undefined auVar3 [16];
  char extraout_AL;
  char extraout_AL_00;
  int in_RAX;
  undefined8 extraout_RAX;
  os_File *f;
  char **extraout_RAX_00;
  runtime_itab *prVar4;
  io_fs_FileMode in_EBX;
  int extraout_RBX;
  int extraout_RBX_00;
  int extraout_RBX_01;
  int iVar5;
  bool ~r0_02;
  int unaff_R14;
  undefined auVar6 [16];
  interface___ in_stack_ffffffffffffff08;
  string in_stack_ffffffffffffff18;
  int in_stack_ffffffffffffff28;
  undefined7 in_stack_ffffffffffffff30;
  undefined uVar7;
  void *pvVar8;
  undefined local_a0 [16];
  bufio_Scanner local_90;
  code **local_10;
  
  while (&local_90.maxTokenSize <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  os_OpenFile((string)in_stack_ffffffffffffff08,in_RAX,in_EBX,(os_File *)0x0,
              (error)in_stack_ffffffffffffff18);
  if (extraout_RBX != 0) {
    return;
  }
  local_a0._8_8_ = extraout_RAX;
  local_a0._0_8_ = mime_loadMimeFile_func1;
  local_10 = (code **)local_a0;
  uVar7 = 1;
  auVar6 = FUN_0046cda2();
  local_90.r.tab = (runtime_itab *)go_itab__os_File_io_Reader;
  local_90.split = (bufio_SplitFunc **)&PTR_bufio_ScanLines_008ec8d8;
  local_90.maxTokenSize = 0x10000;
  do {
    do {
      do {
        local_90.r.data = auVar6._0_8_;
        bufio___Scanner__Scan(&local_90,auVar6[8]);
        if (extraout_AL == '\0') {
          if ((io_EOF.tab == local_90.err.tab) &&
             (runtime_ifaceeq(local_90.err.tab,local_90.err.data,io_EOF.data,~r0_02),
             extraout_AL_00 != '\0')) {
            local_90.err.tab = (runtime_itab *)0x0;
          }
          if (local_90.err.tab == (runtime_itab *)0x0) {
            (**local_10)();
            return;
          }
                    // WARNING: Subroutine does not return
          runtime_gopanic(in_stack_ffffffffffffff08);
        }
        runtime_slicebytetostring
                  ((runtime_tmpBuf *)0x0,local_90.token.array,local_90.token.len,
                   (string)in_stack_ffffffffffffff08);
        ~r0.cap = in_stack_ffffffffffffff28;
        ~r0.array = (string *)in_stack_ffffffffffffff18.str;
        ~r0.len = in_stack_ffffffffffffff18.len;
        strings_Fields((string)in_stack_ffffffffffffff08,~r0);
        auVar2._8_8_ = extraout_RBX_00;
        auVar2._0_8_ = local_90.r.data;
        auVar6._8_8_ = extraout_RBX_00;
        auVar6._0_8_ = local_90.r.data;
      } while (extraout_RBX_00 < 2);
      if (extraout_RAX_00[1] == (char *)0x0) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      auVar6 = auVar2;
    } while (**extraout_RAX_00 == '#');
    pvVar8 = (void *)(extraout_RBX_00 + -1);
    prVar4 = (runtime_itab *)0x0;
    iVar5 = extraout_RBX_00;
    ppcVar1 = extraout_RAX_00;
    while( true ) {
      auVar3._8_8_ = iVar5;
      auVar3._0_8_ = local_90.r.data;
      auVar6._8_8_ = iVar5;
      auVar6._0_8_ = local_90.r.data;
      if ((int)pvVar8 <= (int)prVar4) break;
      if (ppcVar1[3] == (char *)0x0) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      auVar6 = auVar3;
      if (*ppcVar1[2] == '#') break;
      ~r0_00.len._0_7_ = in_stack_ffffffffffffff30;
      ~r0_00.str = (uint8 *)in_stack_ffffffffffffff28;
      ~r0_00.len._7_1_ = uVar7;
      runtime_concatstring2
                ((runtime_tmpBuf *)0x0,(string)in_stack_ffffffffffffff08,in_stack_ffffffffffffff18,
                 ~r0_00);
      ~r0_01.data._0_7_ = in_stack_ffffffffffffff30;
      ~r0_01.tab = (runtime_itab *)in_stack_ffffffffffffff28;
      ~r0_01.data._7_1_ = uVar7;
      ~r0_1.data = pvVar8;
      ~r0_1.tab = prVar4;
      mime_setExtensionType
                ((string)in_stack_ffffffffffffff08,in_stack_ffffffffffffff18,~r0_01,~r0_1);
      prVar4 = (runtime_itab *)((int)&prVar4->inter + 1);
      iVar5 = extraout_RBX_01;
      ppcVar1 = ppcVar1 + 2;
    }
  } while( true );
}



// WARNING: Unknown calling convention

void mime_loadMimeFile_func1(void)

{
  int *piVar1;
  error ~r0;
  int in_RDX;
  void *unaff_RBP;
  int unaff_R14;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff0;
  }
  ~r0.data = unaff_RBP;
  ~r0.tab = in_stack_fffffffffffffff0;
  os___File__Close(*(os_File **)(in_RDX + 8),~r0);
  return;
}



// WARNING: Unknown calling convention

void mime_initMimeUnix(void)

{
  error ~r0;
  error ~r0_1;
  runtime_itab *prVar1;
  int extraout_RAX;
  int iVar2;
  runtime_itab *prVar3;
  void *unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  void *pvVar4;
  int iVar5;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  prVar1 = (runtime_itab *)0x0;
  prVar3 = (runtime_itab *)mime_mimeGlobs.array;
  pvVar4 = (void *)mime_mimeGlobs.len;
  while( true ) {
    if ((int)pvVar4 <= (int)prVar1) {
      iVar5 = mime_typeFiles.len;
      for (iVar2 = 0; iVar2 < iVar5; iVar2 = iVar2 + 1) {
        mime_loadMimeFile(in_stack_ffffffffffffffd0);
      }
      return;
    }
    ~r0.data = pvVar4;
    ~r0.tab = prVar1;
    ~r0_1.data = unaff_RBP;
    ~r0_1.tab = prVar3;
    mime_loadMimeGlobsFile(in_stack_ffffffffffffffd0,~r0,~r0_1);
    if (extraout_RAX == 0) break;
    prVar3 = (runtime_itab *)&prVar3->hash;
    prVar1 = (runtime_itab *)((int)&prVar1->inter + 1);
  }
  return;
}



int mime_init(EVP_PKEY_CTX *ctx)

{
  int extraout_RAX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  mime_maxBase64Len = 0x2d;
  if (encoding_base64_StdEncoding->padChar == -1) {
    mime_maxBase64Len = 0x2f;
  }
  runtime_mapinitnoop();
  return extraout_RAX;
}



void mime_quotedprintable_fromHex(uint8 b,uint8 ~r0,error ~r1)

{
  int unaff_R14;
  string in_stack_ffffffffffffffc0;
  __interface___ in_stack_ffffffffffffffd0;
  error ~r0_00;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((byte)(b - 0x30) < 10) {
    return;
  }
  if ((byte)(b + 0xbf) < 6) {
    return;
  }
  if ((byte)(b + 0x9f) < 6) {
    return;
  }
  ~r0_00.data = runtime_staticuint64s + b;
  ~r0_00.tab = (runtime_itab *)&DAT_00807920;
  fmt_Errorf(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,~r0_00);
  return;
}



void mime_quotedprintable_readHexByte(__uint8 v,uint8 b,error err)

{
  error ~r1;
  error ~r1_00;
  undefined extraout_AL;
  uint8 hb;
  uint8 lb;
  undefined7 in_register_00000001;
  int in_RBX;
  int extraout_RBX;
  int extraout_RBX_00;
  int unaff_R14;
  undefined in_stack_ffffffffffffffe8 [15];
  undefined in_stack_fffffffffffffff7;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RBX < 2) {
    return;
  }
  ~r1.data._7_1_ = in_stack_fffffffffffffff7;
  ~r1._0_15_ = in_stack_ffffffffffffffe8;
  mime_quotedprintable_fromHex(*(uint8 *)CONCAT71(in_register_00000001,b),(uint8)in_RBX,~r1);
  if (extraout_RBX != 0) {
    return;
  }
  ~r1_00.data._7_1_ = extraout_AL;
  ~r1_00._0_15_ = in_stack_ffffffffffffffe8;
  mime_quotedprintable_fromHex(((uint8 *)CONCAT71(in_register_00000001,b))[1],0,~r1_00);
  if (extraout_RBX_00 != 0) {
    return;
  }
  return;
}



void mime_quotedprintable_isQPDiscardWhitespace(int32 r,bool ~r0)

{
  if (((1 < (dword)(r - 9U)) && (r != 0xd)) && (r != 0x20)) {
    return;
  }
  return;
}



void mime_quotedprintable___Reader__Read(mime_quotedprintable_Reader *r,__uint8 p,int n,error err)

{
  uint8 uVar1;
  byte *pbVar2;
  uint uVar3;
  __uint8 v;
  __uint8 line;
  __uint8 s;
  __uint8 val;
  runtime_slice ~r0;
  runtime_slice ~r0_00;
  __interface___ a;
  __interface___ a_00;
  __uint8 ~r0_01;
  error ~r0_02;
  error ~r0_03;
  byte extraout_AL;
  byte extraout_AL_00;
  undefined extraout_AL_01;
  bool hasLF;
  undefined extraout_AL_02;
  char cVar4;
  char extraout_AL_03;
  char extraout_AL_04;
  byte extraout_AL_05;
  byte extraout_AL_06;
  mime_quotedprintable_Reader *pmVar5;
  mime_quotedprintable_Reader *extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *extraout_RAX_01;
  uint8 *extraout_RAX_02;
  uint8 *extraout_RAX_03;
  undefined8 extraout_RAX_04;
  runtime_itab *extraout_RAX_05;
  uint8 *extraout_RAX_06;
  uint8 *extraout_RAX_07;
  uint8 *extraout_RAX_08;
  uint8 *extraout_RAX_09;
  bool hasCR;
  int in_RCX;
  int extraout_RCX;
  int extraout_RCX_00;
  int extraout_RCX_01;
  int extraout_RCX_02;
  int extraout_RCX_03;
  byte bVar6;
  int extraout_RBX;
  int extraout_RBX_00;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  void *extraout_RBX_03;
  void *extraout_RBX_04;
  void *pvVar7;
  uint extraout_RBX_05;
  uint extraout_RBX_06;
  uint uVar8;
  uint extraout_RBX_07;
  uint extraout_RBX_08;
  void *extraout_RSI;
  void *extraout_RSI_00;
  void *extraout_RSI_01;
  undefined extraout_DIL;
  undefined extraout_DIL_00;
  undefined extraout_DIL_01;
  undefined extraout_DIL_02;
  undefined extraout_DIL_03;
  undefined ~r0_04;
  int in_RDI;
  runtime_itab *extraout_RDI;
  runtime_itab *extraout_RDI_00;
  runtime_itab *prVar9;
  uint8 *puVar10;
  uint8 *extraout_R8;
  byte *extraout_R8_00;
  int iVar11;
  int extraout_R9;
  uint8 b;
  uint8 *extraout_R10;
  uint8 **extraout_R11;
  uint8 **extraout_R11_00;
  uint8 **extraout_R11_01;
  void **extraout_R11_02;
  uint8 **extraout_R11_03;
  void **extraout_R11_04;
  uint8 **extraout_R11_05;
  uint8 **extraout_R11_06;
  int iVar12;
  int unaff_R14;
  string in_stack_ffffffffffffff50;
  interface___ *in_stack_ffffffffffffff60;
  error in_stack_ffffffffffffff68;
  runtime_itab *in_stack_ffffffffffffff78;
  void *in_stack_ffffffffffffff80;
  func_int32__bool **local_30;
  void *local_28;
  byte *local_20;
  undefined local_18 [16];
