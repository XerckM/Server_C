  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x30);
  if (*(int *)(in_FS_OFFSET + -8) == *piVar1) {
    runtime_badmorestackg0();
                    // WARNING: Subroutine does not return
    runtime_abort();
  }
  if (*(int *)(in_FS_OFFSET + -8) == piVar1[10]) {
    runtime_badmorestackgsignal();
                    // WARNING: Subroutine does not return
    runtime_abort();
  }
  piVar1[2] = in_stack_00000008;
  piVar1[1] = (int)&stack0x00000010;
  iVar2 = *(int *)(in_FS_OFFSET + -8);
  piVar1[3] = iVar2;
  *(undefined8 *)(iVar2 + 0x40) = unaff_retaddr;
  *(int **)(iVar2 + 0x38) = &stack0x00000008;
  *(undefined8 *)(iVar2 + 0x68) = unaff_RBP;
  *(undefined8 *)(iVar2 + 0x50) = in_RDX;
  iVar2 = *piVar1;
  *(int *)(in_FS_OFFSET + -8) = iVar2;
  iVar2 = *(int *)(iVar2 + 0x38);
  *(undefined8 *)(iVar2 + -8) = 0x46a80f;
  runtime_newstack();
                    // WARNING: Subroutine does not return
  *(undefined **)(iVar2 + -8) = &UNK_0046a814;
  runtime_abort();
}



// WARNING: Unknown calling convention

void runtime_morestack_noctxt(void)

{
  runtime_morestack();
  return;
}



// WARNING: Unknown calling convention

void runtime_spillArgs(void)

{
  undefined8 in_RAX;
  undefined8 in_RCX;
  undefined8 in_RBX;
  undefined8 in_RSI;
  undefined8 in_RDI;
  undefined8 in_R8;
  undefined8 in_R9;
  undefined8 in_R10;
  undefined8 in_R11;
  undefined8 *in_R12;
  undefined8 in_XMM0_Qa;
  undefined8 in_XMM1_Qa;
  undefined8 in_XMM2_Qa;
  undefined8 in_XMM3_Qa;
  undefined8 in_XMM4_Qa;
  undefined8 in_XMM5_Qa;
  undefined8 in_XMM6_Qa;
  undefined8 in_XMM7_Qa;
  undefined8 in_XMM8_Qa;
  undefined8 in_XMM9_Qa;
  undefined8 in_XMM10_Qa;
  undefined8 in_XMM11_Qa;
  undefined8 in_XMM12_Qa;
  undefined8 in_XMM13_Qa;
  undefined8 in_XMM14_Qa;
  
  *in_R12 = in_RAX;
  in_R12[1] = in_RBX;
  in_R12[2] = in_RCX;
  in_R12[3] = in_RDI;
  in_R12[4] = in_RSI;
  in_R12[5] = in_R8;
  in_R12[6] = in_R9;
  in_R12[7] = in_R10;
  in_R12[8] = in_R11;
  in_R12[9] = in_XMM0_Qa;
  in_R12[10] = in_XMM1_Qa;
  in_R12[0xb] = in_XMM2_Qa;
  in_R12[0xc] = in_XMM3_Qa;
  in_R12[0xd] = in_XMM4_Qa;
  in_R12[0xe] = in_XMM5_Qa;
  in_R12[0xf] = in_XMM6_Qa;
  in_R12[0x10] = in_XMM7_Qa;
  in_R12[0x11] = in_XMM8_Qa;
  in_R12[0x12] = in_XMM9_Qa;
  in_R12[0x13] = in_XMM10_Qa;
  in_R12[0x14] = in_XMM11_Qa;
  in_R12[0x15] = in_XMM12_Qa;
  in_R12[0x16] = in_XMM13_Qa;
  in_R12[0x17] = in_XMM14_Qa;
  return;
}



// WARNING: Unknown calling convention

void runtime_unspillArgs(void)

{
  return;
}



// WARNING: Unknown calling convention

void runtime_reflectcall(void)

{
  int *piVar1;
  uint uVar2;
  undefined *puVar3;
  int in_FS_OFFSET;
  byte bVar4;
  code **in_stack_00000010;
  undefined *in_stack_00000018;
  dword in_stack_00000020;
  dword in_stack_00000028;
  undefined auStack_80008 [128];
  undefined auStack_7ff88 [262016];
  undefined auStack_40008 [128];
  undefined auStack_3ff88 [130944];
  undefined auStack_20008 [128];
  undefined auStack_1ff88 [65400];
  undefined8 uStack_10010;
  undefined auStack_10008 [128];
  undefined auStack_ff88 [32632];
  undefined8 uStack_8010;
  undefined auStack_8008 [128];
  undefined auStack_7f88 [16248];
  undefined8 uStack_4010;
  undefined auStack_4008 [128];
  undefined auStack_3f88 [8056];
  undefined8 uStack_2010;
  undefined auStack_2008 [128];
  undefined auStack_1f88 [3960];
  undefined8 uStack_1010;
  undefined auStack_1008 [128];
  undefined auStack_f88 [1912];
  undefined8 uStack_810;
  undefined auStack_808 [128];
  undefined auStack_788 [888];
  undefined8 uStack_410;
  undefined auStack_408 [128];
  undefined auStack_388 [376];
  undefined8 uStack_210;
  undefined auStack_208 [128];
  undefined auStack_188 [120];
  undefined8 uStack_110;
  undefined auStack_108 [120];
  undefined8 uStack_90;
  undefined auStack_88 [56];
  undefined8 uStack_50;
  undefined auStack_48 [24];
  undefined8 uStack_30;
  undefined auStack_28 [8];
  undefined8 uStack_20;
  undefined auStack_18 [16];
  
  bVar4 = 0;
  if (in_stack_00000028 < 0x11) {
    while (&stack0x00000000 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)auStack_18;
    }
    puVar3 = auStack_18;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    uStack_20 = 0x46abf8;
    runtime_unspillArgs();
    uStack_20 = 0x46ac03;
    (**in_stack_00000010)();
    uStack_20 = 0x46ac0d;
    runtime_spillArgs();
    uStack_20 = 0x46ac30;
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x21) {
    while (&stack0x00000000 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)auStack_28;
    }
    puVar3 = auStack_28;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    uStack_30 = 0x46ac98;
    runtime_unspillArgs();
    uStack_30 = 0x46aca3;
    (**in_stack_00000010)();
    uStack_30 = 0x46acad;
    runtime_spillArgs();
    uStack_30 = 0x46acd0;
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x41) {
    while (&stack0x00000000 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)auStack_48;
    }
    puVar3 = auStack_48;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    uStack_50 = 0x46ad38;
    runtime_unspillArgs();
    uStack_50 = 0x46ad43;
    (**in_stack_00000010)();
    uStack_50 = 0x46ad4d;
    runtime_spillArgs();
    uStack_50 = 0x46ad70;
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x81) {
    while (&stack0xfffffffffffffff8 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)auStack_88;
    }
    puVar3 = auStack_88;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    uStack_90 = 0x46adea;
    runtime_unspillArgs();
    uStack_90 = 0x46adf8;
    (**in_stack_00000010)();
    uStack_90 = 0x46ae05;
    runtime_spillArgs();
    uStack_90 = 0x46ae34;
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x101) {
    while (auStack_88 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)auStack_108;
    }
    puVar3 = auStack_108;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    uStack_110 = 0x46aeb0;
    runtime_unspillArgs();
    uStack_110 = 0x46aebe;
    (**in_stack_00000010)();
    uStack_110 = 0x46aecb;
    runtime_spillArgs();
    uStack_110 = 0x46aefa;
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x201) {
    while (auStack_188 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)auStack_208;
    }
    puVar3 = auStack_208;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    uStack_210 = 0x46af90;
    runtime_unspillArgs();
    uStack_210 = 0x46af9e;
    (**in_stack_00000010)();
    uStack_210 = 0x46afab;
    runtime_spillArgs();
    uStack_210 = 0x46afda;
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x401) {
    while (auStack_388 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)auStack_408;
    }
    puVar3 = auStack_408;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    uStack_410 = 0x46b070;
    runtime_unspillArgs();
    uStack_410 = 0x46b07e;
    (**in_stack_00000010)();
    uStack_410 = 0x46b08b;
    runtime_spillArgs();
    uStack_410 = 0x46b0ba;
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x801) {
    while (auStack_788 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)auStack_808;
    }
    puVar3 = auStack_808;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    uStack_810 = 0x46b150;
    runtime_unspillArgs();
    uStack_810 = 0x46b15e;
    (**in_stack_00000010)();
    uStack_810 = 0x46b16b;
    runtime_spillArgs();
    uStack_810 = 0x46b19a;
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x1001) {
    while( true ) {
      if (((undefined *)0xf87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < auStack_f88)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)auStack_1008;
    }
    puVar3 = auStack_1008;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    uStack_1010 = 0x46b238;
    runtime_unspillArgs();
    uStack_1010 = 0x46b246;
    (**in_stack_00000010)();
    uStack_1010 = 0x46b253;
    runtime_spillArgs();
    uStack_1010 = 0x46b282;
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x2001) {
    while( true ) {
      if (((undefined *)0x1f87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < auStack_1f88)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)auStack_2008;
    }
    puVar3 = auStack_2008;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    uStack_2010 = 0x46b318;
    runtime_unspillArgs();
    uStack_2010 = 0x46b326;
    (**in_stack_00000010)();
    uStack_2010 = 0x46b333;
    runtime_spillArgs();
    uStack_2010 = 0x46b362;
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x4001) {
    while( true ) {
      if (((undefined *)0x3f87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < auStack_3f88)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)auStack_4008;
    }
    puVar3 = auStack_4008;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    uStack_4010 = 0x46b3f8;
    runtime_unspillArgs();
    uStack_4010 = 0x46b406;
    (**in_stack_00000010)();
    uStack_4010 = 0x46b413;
    runtime_spillArgs();
    uStack_4010 = 0x46b442;
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x8001) {
    while( true ) {
      if (((undefined *)0x7f87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < auStack_7f88)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)auStack_8008;
    }
    puVar3 = auStack_8008;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    uStack_8010 = 0x46b4d8;
    runtime_unspillArgs();
    uStack_8010 = 0x46b4e6;
    (**in_stack_00000010)();
    uStack_8010 = 0x46b4f3;
    runtime_spillArgs();
    uStack_8010 = 0x46b522;
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x10001) {
    while( true ) {
      if (((undefined *)0xff87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < auStack_ff88)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)auStack_10008;
    }
    puVar3 = auStack_10008;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    uStack_10010 = 0x46b5b8;
    runtime_unspillArgs();
    uStack_10010 = 0x46b5c6;
    (**in_stack_00000010)();
    uStack_10010 = 0x46b5d3;
    runtime_spillArgs();
    uStack_10010 = 0x46b602;
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x20001) {
    while( true ) {
      if (((undefined *)0x1ff87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < auStack_1ff88)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)auStack_20008;
    }
    puVar3 = auStack_20008;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    runtime_unspillArgs();
    (**in_stack_00000010)();
    runtime_spillArgs();
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x40001) {
    while( true ) {
      if (((undefined *)0x3ff87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < auStack_3ff88)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)auStack_40008;
    }
    puVar3 = auStack_40008;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    runtime_unspillArgs();
    (**in_stack_00000010)();
    runtime_spillArgs();
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x80001) {
    while( true ) {
      if (((undefined *)0x7ff87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < auStack_7ff88)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)auStack_80008;
    }
    puVar3 = auStack_80008;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    runtime_unspillArgs();
    (**in_stack_00000010)();
    runtime_spillArgs();
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x100001) {
    while( true ) {
      if (((undefined *)0xfff87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < &stack0xfffffffffff00078)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)&stack0xffffffffffeffff8;
    }
    puVar3 = &stack0xffffffffffeffff8;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    runtime_unspillArgs();
    (**in_stack_00000010)();
    runtime_spillArgs();
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x200001) {
    while( true ) {
      if (((undefined *)0x1fff87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < &stack0xffffffffffe00078)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)&stack0xffffffffffdffff8;
    }
    puVar3 = &stack0xffffffffffdffff8;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    runtime_unspillArgs();
    (**in_stack_00000010)();
    runtime_spillArgs();
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x400001) {
    while( true ) {
      if (((undefined *)0x3fff87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < &stack0xffffffffffc00078)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)&stack0xffffffffffbffff8;
    }
    puVar3 = &stack0xffffffffffbffff8;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    runtime_unspillArgs();
    (**in_stack_00000010)();
    runtime_spillArgs();
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x800001) {
    while( true ) {
      if ((&UNK_007fff87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < &stack0xffffffffff800078)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)&stack0xffffffffff7ffff8;
    }
    puVar3 = &stack0xffffffffff7ffff8;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    runtime_unspillArgs();
    (**in_stack_00000010)();
    runtime_spillArgs();
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x1000001) {
    while( true ) {
      if (((undefined *)0xffff87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < &stack0xffffffffff000078)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)&stack0xfffffffffefffff8;
    }
    puVar3 = &stack0xfffffffffefffff8;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    runtime_unspillArgs();
    (**in_stack_00000010)();
    runtime_spillArgs();
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x2000001) {
    while( true ) {
      if (((undefined *)0x1ffff87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < &stack0xfffffffffe000078)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)&stack0xfffffffffdfffff8;
    }
    puVar3 = &stack0xfffffffffdfffff8;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    runtime_unspillArgs();
    (**in_stack_00000010)();
    runtime_spillArgs();
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x4000001) {
    while( true ) {
      if (((undefined *)0x3ffff87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < &stack0xfffffffffc000078)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)&stack0xfffffffffbfffff8;
    }
    puVar3 = &stack0xfffffffffbfffff8;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    runtime_unspillArgs();
    (**in_stack_00000010)();
    runtime_spillArgs();
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x8000001) {
    while( true ) {
      if (((undefined *)0x7ffff87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < &stack0xfffffffff8000078)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)&stack0xfffffffff7fffff8;
    }
    puVar3 = &stack0xfffffffff7fffff8;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    runtime_unspillArgs();
    (**in_stack_00000010)();
    runtime_spillArgs();
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x10000001) {
    while( true ) {
      if (((undefined *)0xfffff87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < &stack0xfffffffff0000078)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)&stack0xffffffffeffffff8;
    }
    puVar3 = &stack0xffffffffeffffff8;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    runtime_unspillArgs();
    (**in_stack_00000010)();
    runtime_spillArgs();
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x20000001) {
    while( true ) {
      if (((undefined *)0x1fffff87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < &stack0xffffffffe0000078)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)&stack0xffffffffdffffff8;
    }
    puVar3 = &stack0xffffffffdffffff8;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    runtime_unspillArgs();
    (**in_stack_00000010)();
    runtime_spillArgs();
    callRet();
    return;
  }
  if (in_stack_00000028 < 0x40000001) {
    while( true ) {
      if (((undefined *)0x3fffff87 < &stack0x00000000) &&
         (*(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10) < &stack0xffffffffc0000078)) break;
      runtime_morestack_noctxt();
    }
    piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
    if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
      *piVar1 = (int)&stack0xffffffffbffffff8;
    }
    puVar3 = &stack0xffffffffbffffff8;
    for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
      *puVar3 = *in_stack_00000018;
      in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
      puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
    }
    runtime_unspillArgs();
    (**in_stack_00000010)();
    runtime_spillArgs();
    callRet();
    return;
  }
  runtime_badreflectcall();
  return;
}



// WARNING: Unknown calling convention

void runtime_call16(void)

{
  int *piVar1;
  uint uVar2;
  undefined *puVar3;
  int in_FS_OFFSET;
  byte bVar4;
  code **in_stack_00000010;
  undefined *in_stack_00000018;
  dword in_stack_00000020;
  undefined auStack_18 [16];
  
  bVar4 = 0;
  while (&stack0x00000000 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_18;
  }
  puVar3 = auStack_18;
  for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
    *puVar3 = *in_stack_00000018;
    in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
    puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
  }
  runtime_unspillArgs();
  (**in_stack_00000010)();
  runtime_spillArgs();
  callRet();
  return;
}



// WARNING: Unknown calling convention

void runtime_call32(void)

{
  int *piVar1;
  uint uVar2;
  undefined *puVar3;
  int in_FS_OFFSET;
  byte bVar4;
  code **in_stack_00000010;
  undefined *in_stack_00000018;
  dword in_stack_00000020;
  undefined auStack_28 [32];
  
  bVar4 = 0;
  while (&stack0x00000000 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_28;
  }
  puVar3 = auStack_28;
  for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
    *puVar3 = *in_stack_00000018;
    in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
    puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
  }
  runtime_unspillArgs();
  (**in_stack_00000010)();
  runtime_spillArgs();
  callRet();
  return;
}



// WARNING: Unknown calling convention

void runtime_call64(void)

{
  int *piVar1;
  uint uVar2;
  undefined *puVar3;
  int in_FS_OFFSET;
  byte bVar4;
  code **in_stack_00000010;
  undefined *in_stack_00000018;
  dword in_stack_00000020;
  undefined auStack_48 [64];
  
  bVar4 = 0;
  while (&stack0x00000000 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_48;
  }
  puVar3 = auStack_48;
  for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
    *puVar3 = *in_stack_00000018;
    in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
    puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
  }
  runtime_unspillArgs();
  (**in_stack_00000010)();
  runtime_spillArgs();
  callRet();
  return;
}



// WARNING: Unknown calling convention

void runtime_call128(void)

{
  int *piVar1;
  uint uVar2;
  undefined *puVar3;
  int in_FS_OFFSET;
  byte bVar4;
  code **in_stack_00000010;
  undefined *in_stack_00000018;
  dword in_stack_00000020;
  undefined auStack_88 [128];
  
  bVar4 = 0;
  while (&stack0xfffffffffffffff8 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_88;
  }
  puVar3 = auStack_88;
  for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
    *puVar3 = *in_stack_00000018;
    in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
    puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
  }
  runtime_unspillArgs();
  (**in_stack_00000010)();
  runtime_spillArgs();
  callRet();
  return;
}



// WARNING: Unknown calling convention

void runtime_call256(void)

{
  int *piVar1;
  uint uVar2;
  undefined *puVar3;
  int in_FS_OFFSET;
  byte bVar4;
  code **in_stack_00000010;
  undefined *in_stack_00000018;
  dword in_stack_00000020;
  undefined auStack_108 [128];
  undefined local_88 [128];
  
  bVar4 = 0;
  while (local_88 <= *(undefined **)(*(int *)(in_FS_OFFSET + -8) + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(*(int *)(in_FS_OFFSET + -8) + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_108;
  }
  puVar3 = auStack_108;
  for (uVar2 = (uint)in_stack_00000020; uVar2 != 0; uVar2 = uVar2 - 1) {
    *puVar3 = *in_stack_00000018;
    in_stack_00000018 = in_stack_00000018 + (uint)bVar4 * -2 + 1;
    puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
  }
  runtime_unspillArgs();
  (**in_stack_00000010)();
  runtime_spillArgs();
  callRet();
  return;
}



// WARNING: Unknown calling convention

void runtime_call512(void)

{
