  }
  if ((in_RSI != 0) && (in_R11 == in_RSI)) {
    runtime_memequal();
  }
  return;
}



void vendor_golang_org_x_net_http_httpproxy_domainMatch_match
               (vendor_golang_org_x_net_http_httpproxy_domainMatch m,string host,string port,
               net_IP ip,bool ~r0)

{
  char extraout_AL;
  char cVar1;
  char extraout_AL_00;
  int in_RBX;
  char in_SIL;
  int in_RDI;
  uint in_R9;
  int in_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((int)in_R9 < in_RBX) {
    cVar1 = '\0';
  }
  else {
    if (in_R9 < in_R9 - in_RBX) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    if (in_RBX == in_R9 - (in_R9 - in_RBX)) {
      runtime_memequal();
      cVar1 = extraout_AL;
    }
    else {
      cVar1 = '\0';
    }
  }
  if (cVar1 == '\0') {
    if (in_SIL == '\0') {
      cVar1 = '\0';
    }
    else {
      if (in_RBX == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      if (in_R9 == in_RBX - 1U) {
        runtime_memequal();
        cVar1 = extraout_AL_00;
      }
      else {
        cVar1 = '\0';
      }
    }
    if (cVar1 == '\0') {
      return;
    }
  }
  if ((in_RDI != 0) && (in_R11 == in_RDI)) {
    runtime_memequal();
  }
  return;
}



int vendor_golang_org_x_net_http_httpproxy_init(EVP_PKEY_CTX *ctx)

{
  map_string_string h;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *puVar1;
  runtime_hmap *extraout_RAX_05;
  undefined8 extraout_RCX;
  undefined8 uVar2;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ctx = (EVP_PKEY_CTX *)extraout_RAX_05;
  }
  runtime_makemap_small((runtime_hmap *)ctx);
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_0082bd20,(runtime_hmap *)h,in_stack_ffffffffffffffd0,
             &DAT_008ae617);
  extraout_RAX[1] = 2;
  puVar1 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar2 = *extraout_RAX;
    runtime_gcWriteBarrier1();
    *extraout_R11 = uVar2;
    puVar1 = extraout_RAX_00;
  }
  *puVar1 = &DAT_008ae1be;
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_0082bd20,(runtime_hmap *)h,in_stack_ffffffffffffffd0,
             &DAT_008aecf0);
  extraout_RAX_01[1] = 3;
  puVar1 = extraout_RAX_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    uVar2 = *extraout_RAX_01;
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = uVar2;
    puVar1 = extraout_RAX_02;
  }
  *puVar1 = &DAT_008ae3b7;
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_0082bd20,(runtime_hmap *)h,in_stack_ffffffffffffffd0,
             &DAT_008afa42);
  extraout_RAX_03[1] = 4;
  puVar1 = extraout_RAX_03;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier3();
    *extraout_R11_01 = extraout_RCX;
    extraout_R11_01[1] = h;
    extraout_R11_01[2] = vendor_golang_org_x_net_http_httpproxy_portMap;
    puVar1 = extraout_RAX_04;
  }
  *puVar1 = &DAT_008ae73f;
  vendor_golang_org_x_net_http_httpproxy_portMap = h;
  return (int)puVar1;
}



void type__eq_vendor_golang_org_x_net_http_httpproxy_domainMatch
               (vendor_golang_org_x_net_http_httpproxy_domainMatch *p,
               vendor_golang_org_x_net_http_httpproxy_domainMatch *q,bool r)

{
  char extraout_AL;
  int unaff_R14;
  vendor_golang_org_x_net_http_httpproxy_domainMatch *pvStack0000000000000008;
  vendor_golang_org_x_net_http_httpproxy_domainMatch *pvStack0000000000000010;
  
  pvStack0000000000000008 = p;
  pvStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((((pvStack0000000000000010->host).len == (pvStack0000000000000008->host).len) &&
       ((pvStack0000000000000010->port).len == (pvStack0000000000000008->port).len)) &&
      (pvStack0000000000000010->matchHost == pvStack0000000000000008->matchHost)) &&
     (runtime_memequal(), extraout_AL != '\0')) {
    runtime_memequal();
  }
  return;
}



void vendor_golang_org_x_net_http_httpproxy___config__proxyForURL_fm
               (net_url_URL *reqURL,net_url_URL *~r0,error ~r1)

{
  error **ppeVar1;
  int in_RDX;
  int unaff_R14;
  error in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r1.tab = (runtime_itab *)reqURL;
    runtime_morestack();
    reqURL = (net_url_URL *)~r1.tab;
  }
  ppeVar1 = *(error ***)(unaff_R14 + 0x20);
  if ((ppeVar1 != (error **)0x0) && (*ppeVar1 == &~r1)) {
    *ppeVar1 = (error *)&stack0xffffffffffffffe8;
  }
  vendor_golang_org_x_net_http_httpproxy___config__proxyForURL
            (*(vendor_golang_org_x_net_http_httpproxy_config **)(in_RDX + 8),reqURL,
             (net_url_URL *)*(vendor_golang_org_x_net_http_httpproxy_config **)(in_RDX + 8),
             in_stack_ffffffffffffffe8);
  return;
}



void vendor_golang_org_x_net_http_httpproxy___allMatch__match
               (string host,string port,net_IP ip,bool ~r0)

{
  string **ppsVar1;
  undefined7 in_register_00000001;
  int unaff_R14;
  
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &host)) {
    *ppsVar1 = (string *)&stack0xfffffffffffffff8;
  }
  if (CONCAT71(in_register_00000001,~r0) != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void vendor_golang_org_x_net_http_httpproxy___cidrMatch__match
               (string host,string port,net_IP ip,bool ~r0)

{
  string **ppsVar1;
  undefined7 in_register_00000001;
  net_IPNet **ppnVar2;
  int in_RBX;
  bool in_R8B;
  int unaff_R14;
  net_IP in_stack_ffffffffffffffd8;
  
  ppnVar2 = (net_IPNet **)CONCAT71(in_register_00000001,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    host.str = (uint8 *)ppnVar2;
    host.len = in_RBX;
    runtime_morestack_noctxt();
    ppnVar2 = (net_IPNet **)host.str;
    in_RBX = host.len;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &host)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffd8;
  }
  if (ppnVar2 != (net_IPNet **)0x0) {
    net___IPNet__Contains(*ppnVar2,in_stack_ffffffffffffffd8,in_R8B);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void vendor_golang_org_x_net_http_httpproxy___ipMatch__match
               (string host,string port,net_IP ip,bool ~r0)

{
  string **ppsVar1;
  int iVar2;
  char extraout_AL;
  undefined7 in_register_00000001;
  undefined8 *puVar3;
  int in_RBX;
  int in_RSI;
  int unaff_R14;
  net_IP in_stack_ffffffffffffffa0;
  net_IP in_stack_ffffffffffffffb8;
  
  puVar3 = (undefined8 *)CONCAT71(in_register_00000001,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    host.str = (uint8 *)puVar3;
    host.len = in_RBX;
    runtime_morestack_noctxt();
    puVar3 = (undefined8 *)host.str;
    in_RBX = host.len;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &host)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffa0;
  }
  if (puVar3 == (undefined8 *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  iVar2 = puVar3[4];
  net_IP_Equal(in_stack_ffffffffffffffa0,in_stack_ffffffffffffffb8,SUB81(*puVar3,0));
  if (((extraout_AL != '\0') && (iVar2 != 0)) && (in_RSI == iVar2)) {
    runtime_memequal();
  }
  return;
}



void vendor_golang_org_x_net_http_httpproxy___domainMatch__match
               (string host,string port,net_IP ip,bool ~r0)

{
  string **ppsVar1;
  int iVar2;
  char extraout_AL;
  char cVar3;
  char extraout_AL_00;
  undefined7 in_register_00000001;
  undefined8 *puVar4;
  uint in_RCX;
  int in_RSI;
  int unaff_R14;
  string sStack_48;
  undefined8 local_30;
  undefined4 local_28;
  undefined4 uStack_24;
  undefined4 uStack_20;
  undefined4 uStack_1c;
  undefined4 local_18;
  undefined4 uStack_14;
  undefined4 uStack_10;
  undefined4 uStack_c;
  
  puVar4 = (undefined8 *)CONCAT71(in_register_00000001,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    host.str = (uint8 *)puVar4;
    runtime_morestack_noctxt();
    puVar4 = (undefined8 *)host.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &host)) {
    *ppsVar1 = &sStack_48;
  }
  if (puVar4 == (undefined8 *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  local_30 = *puVar4;
  local_28 = *(undefined4 *)(puVar4 + 1);
  uStack_24 = *(undefined4 *)((int)puVar4 + 0xc);
  iVar2 = puVar4[1];
  uStack_20 = *(undefined4 *)(puVar4 + 2);
  uStack_1c = *(undefined4 *)((int)puVar4 + 0x14);
  local_18 = *(undefined4 *)(puVar4 + 3);
  uStack_14 = *(undefined4 *)((int)puVar4 + 0x1c);
  uStack_10 = *(undefined4 *)(puVar4 + 4);
  uStack_c = *(undefined4 *)((int)puVar4 + 0x24);
  if ((int)in_RCX < iVar2) {
    cVar3 = '\0';
  }
  else {
    if (in_RCX < in_RCX - iVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    if (iVar2 == in_RCX - (in_RCX - iVar2)) {
      runtime_memequal();
      cVar3 = extraout_AL;
    }
    else {
      cVar3 = '\0';
    }
  }
  if (cVar3 == '\0') {
    if ((char)uStack_10 == '\0') {
      cVar3 = '\0';
    }
    else {
      if (CONCAT44(uStack_24,local_28) == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      if (in_RCX == CONCAT44(uStack_24,local_28) - 1U) {
        runtime_memequal();
        cVar3 = extraout_AL_00;
      }
      else {
        cVar3 = '\0';
      }
    }
  }
  else {
    cVar3 = '\x01';
  }
  if (((cVar3 != '\0') && (CONCAT44(uStack_14,local_18) != 0)) &&
     (in_RSI == CONCAT44(uStack_14,local_18))) {
    runtime_memequal();
  }
  return;
}



void type__eq_vendor_golang_org_x_net_http_httpproxy_Config
               (vendor_golang_org_x_net_http_httpproxy_Config *p,
               vendor_golang_org_x_net_http_httpproxy_Config *q,bool r)

{
  char extraout_AL;
  char extraout_AL_00;
  int unaff_R14;
  vendor_golang_org_x_net_http_httpproxy_Config *pvStack0000000000000008;
  vendor_golang_org_x_net_http_httpproxy_Config *pvStack0000000000000010;
  
  pvStack0000000000000008 = p;
  pvStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((((pvStack0000000000000010->HTTPProxy).len == (pvStack0000000000000008->HTTPProxy).len) &&
       ((pvStack0000000000000008->HTTPSProxy).len == (pvStack0000000000000010->HTTPSProxy).len)) &&
      ((pvStack0000000000000010->NoProxy).len == (pvStack0000000000000008->NoProxy).len)) &&
     (((pvStack0000000000000010->CGI == pvStack0000000000000008->CGI &&
       (runtime_memequal(), extraout_AL != '\0')) && (runtime_memequal(), extraout_AL_00 != '\0'))))
  {
    runtime_memequal();
  }
  return;
}



void net_http_cloneURLValues(net_url_Values v,net_url_Values ~r0)

{
  runtime_hmap *h;
  void *extraout_RAX;
  runtime_hmap *h_00;
  net_http_Header h2;
  void *extraout_RAX_00;
  int n;
  void **extraout_RAX_01;
  void **extraout_RAX_02;
  void **ppvVar1;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *puVar2;
  void *pvVar3;
  void *len;
  undefined8 extraout_RCX;
  void *pvVar4;
  void *extraout_RDI;
  void *extraout_RDI_00;
  runtime_hmap *~r0_00;
  void **extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  undefined in_XMM15 [16];
  net_url_Values phStack0000000000000008;
  string in_stack_ffffffffffffff28;
  int nv;
  undefined local_68 [96];
  
  phStack0000000000000008 = v;
  while (local_68 + 0x10 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (phStack0000000000000008 == (net_url_Values)0x0) {
    return;
  }
  h = (runtime_hmap *)FUN_0046cdab();
  runtime_mapiterinit((internal_abi_MapType *)&DAT_008909e0,h,(runtime_hiter *)local_68);
  len = (void *)0x0;
  pvVar3 = extraout_RDI;
  while ((void **)local_68._0_8_ != (void **)0x0) {
    pvVar3 = *(void **)(local_68._8_8_ + 8);
    runtime_mapiternext((runtime_hiter *)local_68);
    len = (void *)((int)len + (int)pvVar3);
    pvVar3 = extraout_RDI_00;
  }
  runtime_makeslice((internal_abi_Type *)&DAT_008075e0,(int)len,(int)len,pvVar3);
  runtime_makemap((internal_abi_MapType *)&DAT_008909e0,phStack0000000000000008->count,
                  (runtime_hmap *)0x0,~r0_00);
  FUN_0046cdab();
  runtime_mapiterinit((internal_abi_MapType *)&DAT_008909e0,(runtime_hmap *)phStack0000000000000008,
                      (runtime_hiter *)local_68);
  pvVar3 = extraout_RAX;
  do {
    if ((void **)local_68._0_8_ == (void **)0x0) {
      return;
    }
    pvVar4 = *(void **)local_68._0_8_;
    if (*(void **)local_68._8_8_ == (void *)0x0) {
      runtime_mapassign_faststr
                ((internal_abi_MapType *)&DAT_008909e0,h_00,in_stack_ffffffffffffff28,pvVar4);
      *(undefined (*) [16])(extraout_RAX_03 + 1) = in_XMM15;
      puVar2 = extraout_RAX_03;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_00 = extraout_RCX;
        puVar2 = extraout_RAX_04;
      }
      *puVar2 = 0;
    }
    else {
      runtime_typedslicecopy
                ((internal_abi_Type *)&DAT_008075e0,pvVar3,(int)len,*(void **)local_68._8_8_,
                 (int)*(void **)(local_68._8_8_ + 8),local_68._8_8_);
      if (len < extraout_RAX_00) {
                    // WARNING: Subroutine does not return
        runtime_panicSlice3Acap();
      }
      runtime_mapassign_faststr
                ((internal_abi_MapType *)&DAT_008909e0,h_00,in_stack_ffffffffffffff28,pvVar4);
      extraout_RAX_01[1] = extraout_RAX_00;
      extraout_RAX_01[2] = extraout_RAX_00;
      ppvVar1 = extraout_RAX_01;
      pvVar4 = extraout_RAX_00;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = pvVar3;
        extraout_R11[1] = *extraout_RAX_02;
        ppvVar1 = extraout_RAX_02;
      }
      *ppvVar1 = pvVar3;
      if (len < pvVar4) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      len = (void *)((int)len - (int)pvVar4);
      pvVar3 = (void *)((int)pvVar3 + ((int)pvVar4 << 4 & -(int)len >> 0x3f));
    }
    runtime_mapiternext((runtime_hiter *)local_68);
  } while( true );
}



void net_http_cloneMultipartForm(mime_multipart_Form *f,mime_multipart_Form *~r0)

{
  int len;
  int iVar1;
  void *extraout_RAX;
  runtime_hmap *extraout_RAX_00;
  net_http_Header h2;
  void *extraout_RAX_01;
  int n;
  void **extraout_RAX_02;
  void **extraout_RAX_03;
  void **ppvVar2;
  undefined8 *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  undefined8 *puVar3;
  runtime_hmap *extraout_RAX_06;
  mime_multipart_Form *f2;
  runtime_hmap *extraout_RAX_07;
  runtime_hmap *extraout_RAX_08;
  map_string____mime_multipart_FileHeader m;
  int *piVar4;
  int extraout_RAX_09;
  int *extraout_RAX_10;
  int *extraout_RAX_11;
  mime_multipart_FileHeader *pmVar5;
  mime_multipart_FileHeader *v;
  mime_multipart_FileHeader *extraout_RAX_12;
  void *pvVar6;
  void *len_00;
  undefined8 extraout_RCX;
  runtime_hmap *prVar7;
  int i;
  void *pvVar8;
  runtime_hmap *h;
  void *extraout_RBX;
  void *extraout_RBX_00;
  runtime_hmap *h_00;
  mime_multipart_FileHeader *extraout_RBX_01;
  mime_multipart_FileHeader *~r0_00;
  mime_multipart_FileHeader *extraout_RBX_02;
  mime_multipart_FileHeader *extraout_RBX_03;
  void *extraout_RDI;
  void *extraout_RDI_00;
  runtime_hmap *~r0_01;
  void **extraout_R11;
  undefined8 *extraout_R11_00;
  runtime_hmap **extraout_R11_01;
  int *extraout_R11_02;
  runtime_hmap **extraout_R11_03;
  mime_multipart_FileHeader **extraout_R11_04;
  int unaff_R14;
  undefined in_XMM15 [16];
  mime_multipart_Form *pmStack0000000000000008;
  string in_stack_fffffffffffffe80;
  int nv;
  runtime_hmap *local_100;
  void *local_f8;
  void *local_f0;
  runtime_hmap *local_e8;
  runtime_hmap *local_e0;
  void *local_d8;
  map_string___string local_d0;
  runtime_hiter local_c8;
  runtime_hiter local_68;
  
  pmStack0000000000000008 = f;
  while (&local_100 <= *(runtime_hmap ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (pmStack0000000000000008 == (mime_multipart_Form *)0x0) {
    return;
  }
  if (pmStack0000000000000008->Value == (map_string___string)0x0) {
    pvVar8 = (void *)0x0;
    prVar7 = (runtime_hmap *)0x0;
  }
  else {
    local_d0 = pmStack0000000000000008->Value;
    FUN_0046cdab();
    runtime_mapiterinit((internal_abi_MapType *)&DAT_008909e0,h,&local_68);
    len_00 = (void *)0x0;
    pvVar6 = extraout_RDI;
    while ((void **)local_68.key != (void **)0x0) {
      pvVar6 = *(void **)((int)local_68.elem + 8);
      runtime_mapiternext(&local_68);
      len_00 = (void *)((int)len_00 + (int)pvVar6);
      pvVar6 = extraout_RDI_00;
    }
    runtime_makeslice((internal_abi_Type *)&DAT_008075e0,(int)len_00,(int)len_00,pvVar6);
    local_d8 = extraout_RAX;
    runtime_makemap((internal_abi_MapType *)&DAT_008909e0,local_d0->count,(runtime_hmap *)0x0,~r0_01
                   );
    local_e0 = extraout_RAX_00;
    FUN_0046cdab();
    runtime_mapiterinit((internal_abi_MapType *)&DAT_008909e0,(runtime_hmap *)local_d0,&local_68);
    pvVar6 = local_d8;
    pvVar8 = extraout_RBX;
    while (prVar7 = local_e0, (void **)local_68.key != (void **)0x0) {
                    // WARNING: Load size is inaccurate
                    // WARNING: Load size is inaccurate
      if (*local_68.elem == (void *)0x0) {
        runtime_mapassign_faststr
                  ((internal_abi_MapType *)&DAT_008909e0,local_e0,in_stack_fffffffffffffe80,
                   *local_68.key);
        *(undefined (*) [16])(extraout_RAX_04 + 1) = in_XMM15;
        puVar3 = extraout_RAX_04;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_00 = extraout_RCX;
          puVar3 = extraout_RAX_05;
        }
        *puVar3 = 0;
      }
      else {
        local_f0 = *local_68.key;
        runtime_typedslicecopy
                  ((internal_abi_Type *)&DAT_008075e0,pvVar6,(int)len_00,*local_68.elem,
                   (int)*(void **)((int)local_68.elem + 8),(int)local_68.elem);
        if (len_00 < extraout_RAX_01) {
                    // WARNING: Subroutine does not return
          runtime_panicSlice3Acap();
        }
        runtime_mapassign_faststr
                  ((internal_abi_MapType *)&DAT_008909e0,local_e0,in_stack_fffffffffffffe80,local_f0
                  );
        extraout_RAX_02[1] = extraout_RAX_01;
        extraout_RAX_02[2] = extraout_RAX_01;
        ppvVar2 = extraout_RAX_02;
        pvVar8 = extraout_RAX_01;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11 = pvVar6;
          extraout_R11[1] = *extraout_RAX_03;
          ppvVar2 = extraout_RAX_03;
        }
        *ppvVar2 = pvVar6;
        if (len_00 < pvVar8) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        len_00 = (void *)((int)len_00 - (int)pvVar8);
        pvVar6 = (void *)((int)pvVar6 + ((int)pvVar8 << 4 & -(int)len_00 >> 0x3f));
      }
      runtime_mapiternext(&local_68);
      pvVar8 = extraout_RBX_00;
    }
  }
  runtime_newobject((internal_abi_Type *)&DAT_008552e0,pvVar8);
  local_e8 = extraout_RAX_06;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_01 = prVar7;
    local_e8 = extraout_RAX_07;
  }
  local_e8->count = (int)prVar7;
  if (pmStack0000000000000008->File != (map_string____mime_multipart_FileHeader)0x0) {
    runtime_makemap_small(local_e8);
    local_100 = extraout_RAX_08;
    FUN_0046cdab();
    runtime_mapiterinit((internal_abi_MapType *)&DAT_0082e000,h_00,&local_c8);
    while ((void **)local_c8.key != (void **)0x0) {
      len = *(int *)((int)local_c8.elem + 8);
                    // WARNING: Load size is inaccurate
      local_f8 = *local_c8.key;
                    // WARNING: Load size is inaccurate
      iVar1 = *local_c8.elem;
      runtime_makeslice((internal_abi_Type *)&DAT_008296e0,len,len,local_f8);
      ~r0_00 = extraout_RBX_01;
      local_d8 = (void *)extraout_RAX_09;
      for (i = 0; i < len; i = i + 1) {
        net_http_cloneMultipartFileHeader(*(mime_multipart_FileHeader **)(iVar1 + i * 8),~r0_00);
        pmVar5 = v;
        ~r0_00 = extraout_RBX_02;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_04 = extraout_RAX_12;
          extraout_R11_04[1] = *(mime_multipart_FileHeader **)((int)local_d8 + i * 8);
          pmVar5 = extraout_RAX_12;
          ~r0_00 = extraout_RBX_03;
        }
        *(mime_multipart_FileHeader **)((int)local_d8 + i * 8) = pmVar5;
      }
      runtime_mapassign_faststr
                ((internal_abi_MapType *)&DAT_0082e000,local_100,in_stack_fffffffffffffe80,local_f8)
      ;
      extraout_RAX_10[1] = len;
      extraout_RAX_10[2] = len;
      piVar4 = extraout_RAX_10;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_02 = (int)local_d8;
        extraout_R11_02[1] = *extraout_RAX_11;
        piVar4 = extraout_RAX_11;
      }
      *piVar4 = (int)local_d8;
      runtime_mapiternext(&local_c8);
    }
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_03 = local_100;
      extraout_R11_03[1] = *(runtime_hmap **)&local_e8->flags;
    }
    *(runtime_hmap **)&local_e8->flags = local_100;
  }
  return;
}



void net_http_cloneMultipartFileHeader(mime_multipart_FileHeader *fh,mime_multipart_FileHeader *~r0)

{
  uint8 **dst;
  mime_multipart_FileHeader *fh2;
  uint8 **ppuVar1;
  uint8 **extraout_RAX;
  void *extraout_RAX_00;
  runtime_hmap *h;
  net_http_Header h2;
  void *extraout_RAX_01;
  int n;
  void **extraout_RAX_02;
  void **extraout_RAX_03;
  void **ppvVar2;
  undefined8 *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  undefined8 *puVar3;
  int extraout_RCX;
  runtime_hmap *prVar4;
  runtime_hmap *extraout_RCX_00;
  void *pvVar5;
  void *len;
  undefined8 extraout_RCX_01;
  void *pvVar6;
  runtime_hmap *h_00;
  mime_multipart_FileHeader *extraout_RBX;
  void *extraout_RDI;
  void *extraout_RDI_00;
  runtime_hmap *~r0_00;
  runtime_hmap **extraout_R11;
  void **extraout_R11_00;
  undefined8 *extraout_R11_01;
  int unaff_R14;
  undefined in_XMM15 [16];
  mime_multipart_FileHeader *pmStack0000000000000008;
  string in_stack_ffffffffffffff18;
  int nv;
  runtime_hiter local_68;
  
  pmStack0000000000000008 = fh;
  while (&local_68 <= *(runtime_hiter **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0 = extraout_RBX;
  }
  if (pmStack0000000000000008 == (mime_multipart_FileHeader *)0x0) {
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0088b4a0,~r0);
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_wbMove((internal_abi_Type *)&DAT_0088b4a0,dst,pmStack0000000000000008);
  }
  *dst = (pmStack0000000000000008->Filename).str;
  ppuVar1 = (uint8 **)FUN_0046d11a();
  prVar4 = *(runtime_hmap **)(extraout_RCX + 0x10);
  if (prVar4 == (runtime_hmap *)0x0) {
    prVar4 = (runtime_hmap *)0x0;
  }
  else {
    FUN_0046cdab();
    runtime_mapiterinit((internal_abi_MapType *)&DAT_008909e0,h_00,&local_68);
    len = (void *)0x0;
    pvVar5 = extraout_RDI;
    while ((void **)local_68.key != (void **)0x0) {
      pvVar5 = *(void **)((int)local_68.elem + 8);
      runtime_mapiternext(&local_68);
      len = (void *)((int)len + (int)pvVar5);
      pvVar5 = extraout_RDI_00;
    }
    runtime_makeslice((internal_abi_Type *)&DAT_008075e0,(int)len,(int)len,pvVar5);
    runtime_makemap((internal_abi_MapType *)&DAT_008909e0,prVar4->count,(runtime_hmap *)0x0,~r0_00);
    FUN_0046cdab();
    runtime_mapiterinit((internal_abi_MapType *)&DAT_008909e0,prVar4,&local_68);
    pvVar5 = extraout_RAX_00;
    while (ppuVar1 = dst, prVar4 = h, (void **)local_68.key != (void **)0x0) {
                    // WARNING: Load size is inaccurate
                    // WARNING: Load size is inaccurate
      pvVar6 = *local_68.key;
      if (*local_68.elem == (void *)0x0) {
        runtime_mapassign_faststr
                  ((internal_abi_MapType *)&DAT_008909e0,h,in_stack_ffffffffffffff18,pvVar6);
        *(undefined (*) [16])(extraout_RAX_04 + 1) = in_XMM15;
        puVar3 = extraout_RAX_04;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_01 = extraout_RCX_01;
          puVar3 = extraout_RAX_05;
        }
        *puVar3 = 0;
      }
      else {
        runtime_typedslicecopy
                  ((internal_abi_Type *)&DAT_008075e0,pvVar5,(int)len,*local_68.elem,
                   (int)*(void **)((int)local_68.elem + 8),(int)local_68.elem);
        if (len < extraout_RAX_01) {
                    // WARNING: Subroutine does not return
          runtime_panicSlice3Acap();
        }
        runtime_mapassign_faststr
                  ((internal_abi_MapType *)&DAT_008909e0,h,in_stack_ffffffffffffff18,pvVar6);
        extraout_RAX_02[1] = extraout_RAX_01;
        extraout_RAX_02[2] = extraout_RAX_01;
        ppvVar2 = extraout_RAX_02;
        pvVar6 = extraout_RAX_01;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_00 = pvVar5;
          extraout_R11_00[1] = *extraout_RAX_03;
          ppvVar2 = extraout_RAX_03;
        }
        *ppvVar2 = pvVar5;
        if (len < pvVar6) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        len = (void *)((int)len - (int)pvVar6);
        pvVar5 = (void *)((int)pvVar5 + ((int)pvVar6 << 4 & -(int)len >> 0x3f));
      }
      runtime_mapiternext(&local_68);
    }
  }
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RCX_00;
    extraout_R11[1] = (runtime_hmap *)extraout_RAX[2];
    ppuVar1 = extraout_RAX;
    prVar4 = extraout_RCX_00;
  }
  ppuVar1[2] = (uint8 *)prVar4;
  return;
}



void net_http_readSetCookies(net_http_Header h,___net_http_Cookie ~r0)

{
  char cVar1;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  string sep;
  string sep_00;
  string sep_01;
  string lower;
  string value;
  string value_00;
  error ~r1;
  string lower_00;
  __string ~r0_03;
  time_Time ~r0_04;
  time_Time ~r0_05;
  string after;
  string after_00;
  error ~r1_00;
  error ~r1_01;
  bool ok_00;
  int extraout_RAX;
  void *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  uint cap;
  char **extraout_RAX_02;
  char **extraout_RAX_03;
  func_int32__bool **extraout_RAX_04;
  func_int32__bool **f;
  int extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  net_http_Cookie *c;
  char extraout_CL;
  bool isASCII;
  char extraout_CL_00;
  bool ascii;
  undefined8 *extraout_RAX_07;
  undefined8 *extraout_RAX_08;
  undefined8 *extraout_RAX_09;
  undefined8 *puVar2;
  undefined8 *extraout_RAX_10;
  int *extraout_RAX_11;
  void *extraout_RAX_12;
  undefined8 *extraout_RAX_13;
  void *extraout_RAX_14;
  void *extraout_RAX_15;
  void *extraout_RAX_16;
  uint extraout_RAX_17;
  uint extraout_RAX_18;
  undefined8 *extraout_RAX_19;
  int extraout_RAX_20;
  int secs;
  sdword *extraout_RAX_21;
  void *extraout_RAX_22;
  void *extraout_RAX_23;
  void *extraout_RAX_24;
  char *extraout_RCX;
  int i;
  char *pcVar3;
  char *extraout_RCX_00;
  char *extraout_RCX_01;
  uint extraout_RCX_02;
  uint extraout_RCX_03;
  int i_2;
  undefined8 extraout_RCX_04;
  char *extraout_RCX_05;
  undefined8 extraout_RCX_06;
  char *extraout_RCX_07;
  char **ppcVar4;
  int i_1;
  undefined *puVar5;
  char *pcVar6;
  undefined8 uVar7;
  undefined *extraout_RBX;
  void *extraout_RBX_00;
  void *pvVar8;
  char *extraout_RBX_01;
  int extraout_RBX_02;
  uint newLen;
  uint extraout_RBX_03;
  uint extraout_RBX_04;
  uint uVar9;
  uint extraout_RBX_05;
  uint extraout_RBX_06;
  int extraout_RBX_07;
  int extraout_RBX_08;
  int extraout_RBX_09;
  int extraout_RBX_10;
  uint extraout_RBX_11;
  uint extraout_RBX_12;
  char extraout_SIL;
  bool ok;
  undefined8 *extraout_RSI;
  void *~r0_06;
  int extraout_RDI;
  int iVar10;
  int iVar11;
  int extraout_RDI_00;
  int extraout_RDI_01;
  int extraout_RDI_02;
  char **extraout_R9;
  char **extraout_R9_00;
  undefined8 extraout_R9_01;
  char **extraout_R9_02;
  int iVar12;
  int extraout_R10;
  undefined8 *extraout_R10_00;
  undefined8 *extraout_R10_01;
  char **extraout_R11;
  undefined8 *extraout_R11_00;
  char **extraout_R11_01;
  char **extraout_R11_02;
  char **extraout_R11_03;
  undefined8 *extraout_R11_04;
  void **extraout_R11_05;
  char **extraout_R11_06;
  char **extraout_R11_07;
  char **extraout_R11_08;
  char **extraout_R11_09;
  undefined8 *extraout_R11_10;
  undefined8 *extraout_R11_11;
  void **extraout_R11_12;
  char **extraout_R11_13;
  char *pcVar13;
  int unaff_R14;
  bool bVar14;
  undefined in_XMM15 [16];
  string in_stack_ffffffffffffff00;
  runtime_itab *in_stack_ffffffffffffff10;
  void *in_stack_ffffffffffffff18;
  string in_stack_ffffffffffffff20;
  time_Location *in_stack_ffffffffffffff30;
  runtime_itab *in_stack_ffffffffffffff38;
  undefined *puVar15;
  char *local_80;
