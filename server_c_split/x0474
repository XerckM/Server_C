                (pcVar10,*(crypto_internal_nistec_P224Point **)
                          ((int)crypto_internal_nistec_p224GeneratorTable[-1][0x37] +
                          (int)~r0 * 8 + iVar13 + 0x70),local_38,~r0);
      iVar12 = (int)(*crypto_internal_nistec_p224GeneratorTable)[0] + iVar13;
      uVar9 = extraout_RAX_13;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_03 = extraout_RAX_14;
        extraout_R11_03[1] = *(undefined8 *)(iVar12 + (int)~r0 * 8);
        uVar9 = extraout_RAX_14;
      }
      *(undefined8 *)(iVar12 + (int)~r0 * 8) = uVar9;
      pcVar10 = ~r0;
      q = local_38;
      pcVar6 = (crypto_internal_nistec_P224Point *)((int)&~r0->x + 1);
    }
    crypto_internal_nistec___P224Point__Double(q,q,pcVar10);
    crypto_internal_nistec___P224Point__Double(local_38,local_38,~r0_00);
    crypto_internal_nistec___P224Point__Double(local_38,local_38,~r0_01);
    crypto_internal_nistec___P224Point__Double(local_38,local_38,~r0_02);
    ~r0_03 = extraout_RBX_02;
  }
  return;
}



// WARNING: Unknown calling convention

void crypto_internal_nistec_p256OrdLittleToBig(void)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  uint *in_stack_00000008;
  uint *in_stack_00000010;
  
  uVar1 = *in_stack_00000010;
  uVar2 = in_stack_00000010[1];
  uVar3 = in_stack_00000010[2];
  uVar4 = in_stack_00000010[3];
  *in_stack_00000008 =
       uVar4 >> 0x38 | (uVar4 & 0xff000000000000) >> 0x28 | (uVar4 & 0xff0000000000) >> 0x18 |
       (uVar4 & 0xff00000000) >> 8 | (uVar4 & 0xff000000) << 8 | (uVar4 & 0xff0000) << 0x18 |
       (uVar4 & 0xff00) << 0x28 | uVar4 << 0x38;
  in_stack_00000008[1] =
       uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |
       (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |
       (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;
  in_stack_00000008[2] =
       uVar2 >> 0x38 | (uVar2 & 0xff000000000000) >> 0x28 | (uVar2 & 0xff0000000000) >> 0x18 |
       (uVar2 & 0xff00000000) >> 8 | (uVar2 & 0xff000000) << 8 | (uVar2 & 0xff0000) << 0x18 |
       (uVar2 & 0xff00) << 0x28 | uVar2 << 0x38;
  in_stack_00000008[3] =
       uVar1 >> 0x38 | (uVar1 & 0xff000000000000) >> 0x28 | (uVar1 & 0xff0000000000) >> 0x18 |
       (uVar1 & 0xff00000000) >> 8 | (uVar1 & 0xff000000) << 8 | (uVar1 & 0xff0000) << 0x18 |
       (uVar1 & 0xff00) << 0x28 | uVar1 << 0x38;
  return;
}



// WARNING: Unknown calling convention

void crypto_internal_nistec_p256OrdBigToLittle(void)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  uint *in_stack_00000008;
  uint *in_stack_00000010;
  
  uVar1 = *in_stack_00000010;
  uVar2 = in_stack_00000010[1];
  uVar3 = in_stack_00000010[2];
  uVar4 = in_stack_00000010[3];
  *in_stack_00000008 =
       uVar4 >> 0x38 | (uVar4 & 0xff000000000000) >> 0x28 | (uVar4 & 0xff0000000000) >> 0x18 |
       (uVar4 & 0xff00000000) >> 8 | (uVar4 & 0xff000000) << 8 | (uVar4 & 0xff0000) << 0x18 |
       (uVar4 & 0xff00) << 0x28 | uVar4 << 0x38;
  in_stack_00000008[1] =
       uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |
       (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |
       (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;
  in_stack_00000008[2] =
       uVar2 >> 0x38 | (uVar2 & 0xff000000000000) >> 0x28 | (uVar2 & 0xff0000000000) >> 0x18 |
       (uVar2 & 0xff00000000) >> 8 | (uVar2 & 0xff000000) << 8 | (uVar2 & 0xff0000) << 0x18 |
       (uVar2 & 0xff00) << 0x28 | uVar2 << 0x38;
  in_stack_00000008[3] =
       uVar1 >> 0x38 | (uVar1 & 0xff000000000000) >> 0x28 | (uVar1 & 0xff0000000000) >> 0x18 |
       (uVar1 & 0xff00000000) >> 8 | (uVar1 & 0xff000000) << 8 | (uVar1 & 0xff0000) << 0x18 |
       (uVar1 & 0xff00) << 0x28 | uVar1 << 0x38;
  return;
}



// WARNING: Unknown calling convention

void crypto_internal_nistec_p256LittleToBig(void)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  uint *in_stack_00000008;
  uint *in_stack_00000010;
  
  uVar1 = *in_stack_00000010;
  uVar2 = in_stack_00000010[1];
  uVar3 = in_stack_00000010[2];
  uVar4 = in_stack_00000010[3];
  *in_stack_00000008 =
       uVar4 >> 0x38 | (uVar4 & 0xff000000000000) >> 0x28 | (uVar4 & 0xff0000000000) >> 0x18 |
       (uVar4 & 0xff00000000) >> 8 | (uVar4 & 0xff000000) << 8 | (uVar4 & 0xff0000) << 0x18 |
       (uVar4 & 0xff00) << 0x28 | uVar4 << 0x38;
  in_stack_00000008[1] =
       uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |
       (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |
       (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;
  in_stack_00000008[2] =
       uVar2 >> 0x38 | (uVar2 & 0xff000000000000) >> 0x28 | (uVar2 & 0xff0000000000) >> 0x18 |
       (uVar2 & 0xff00000000) >> 8 | (uVar2 & 0xff000000) << 8 | (uVar2 & 0xff0000) << 0x18 |
       (uVar2 & 0xff00) << 0x28 | uVar2 << 0x38;
  in_stack_00000008[3] =
       uVar1 >> 0x38 | (uVar1 & 0xff000000000000) >> 0x28 | (uVar1 & 0xff0000000000) >> 0x18 |
       (uVar1 & 0xff00000000) >> 8 | (uVar1 & 0xff000000) << 8 | (uVar1 & 0xff0000) << 0x18 |
       (uVar1 & 0xff00) << 0x28 | uVar1 << 0x38;
  return;
}



// WARNING: Unknown calling convention

void crypto_internal_nistec_p256BigToLittle(void)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  uint *in_stack_00000008;
  uint *in_stack_00000010;
  
  uVar1 = *in_stack_00000010;
  uVar2 = in_stack_00000010[1];
  uVar3 = in_stack_00000010[2];
  uVar4 = in_stack_00000010[3];
  *in_stack_00000008 =
       uVar4 >> 0x38 | (uVar4 & 0xff000000000000) >> 0x28 | (uVar4 & 0xff0000000000) >> 0x18 |
       (uVar4 & 0xff00000000) >> 8 | (uVar4 & 0xff000000) << 8 | (uVar4 & 0xff0000) << 0x18 |
       (uVar4 & 0xff00) << 0x28 | uVar4 << 0x38;
  in_stack_00000008[1] =
       uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |
       (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |
       (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;
  in_stack_00000008[2] =
       uVar2 >> 0x38 | (uVar2 & 0xff000000000000) >> 0x28 | (uVar2 & 0xff0000000000) >> 0x18 |
       (uVar2 & 0xff00000000) >> 8 | (uVar2 & 0xff000000) << 8 | (uVar2 & 0xff0000) << 0x18 |
       (uVar2 & 0xff00) << 0x28 | uVar2 << 0x38;
  in_stack_00000008[3] =
       uVar1 >> 0x38 | (uVar1 & 0xff000000000000) >> 0x28 | (uVar1 & 0xff0000000000) >> 0x18 |
       (uVar1 & 0xff00000000) >> 8 | (uVar1 & 0xff000000) << 8 | (uVar1 & 0xff0000) << 0x18 |
       (uVar1 & 0xff00) << 0x28 | uVar1 << 0x38;
  return;
}



// WARNING: Unknown calling convention

void crypto_internal_nistec_p256MovCond(void)

{
  dword dVar1;
  dword dVar2;
  dword dVar3;
  dword dVar4;
  dword dVar5;
  dword dVar6;
  dword dVar7;
  dword dVar8;
  dword dVar9;
  dword dVar10;
  dword dVar11;
  dword dVar12;
  dword dVar13;
  dword dVar14;
  dword dVar15;
  dword dVar16;
  dword dVar17;
  dword dVar18;
  dword dVar19;
  dword dVar20;
  dword dVar21;
  dword dVar22;
  dword dVar23;
  dword dVar24;
  dword dVar25;
  dword dVar26;
  dword dVar27;
  dword dVar28;
  dword dVar29;
  dword dVar30;
  dword dVar31;
  dword dVar32;
  dword dVar33;
  dword dVar34;
  dword dVar35;
  dword dVar36;
  dword dVar37;
  dword dVar38;
  dword dVar39;
  dword dVar40;
  dword dVar41;
  dword dVar42;
  dword dVar43;
  dword dVar44;
  dword dVar45;
  dword dVar46;
  dword dVar47;
  dword dVar48;
  dword dVar49;
  dword dVar50;
  dword *in_stack_00000008;
  dword *in_stack_00000010;
  dword *in_stack_00000018;
  sdword in_stack_00000020;
  
  dVar47 = -(dword)(in_stack_00000020 == 0);
  dVar48 = -(dword)(in_stack_00000020 == 0);
  dVar49 = -(dword)(in_stack_00000020 == 0);
  dVar50 = -(dword)(in_stack_00000020 == 0);
  dVar21 = in_stack_00000010[1];
  dVar22 = in_stack_00000010[2];
  dVar23 = in_stack_00000010[3];
  dVar17 = in_stack_00000010[4];
  dVar18 = in_stack_00000010[5];
  dVar19 = in_stack_00000010[6];
  dVar20 = in_stack_00000010[7];
  dVar13 = in_stack_00000010[8];
  dVar14 = in_stack_00000010[9];
  dVar15 = in_stack_00000010[10];
  dVar16 = in_stack_00000010[0xb];
  dVar9 = in_stack_00000010[0xc];
  dVar10 = in_stack_00000010[0xd];
  dVar11 = in_stack_00000010[0xe];
  dVar12 = in_stack_00000010[0xf];
  dVar5 = in_stack_00000010[0x10];
  dVar6 = in_stack_00000010[0x11];
  dVar7 = in_stack_00000010[0x12];
  dVar8 = in_stack_00000010[0x13];
  dVar1 = in_stack_00000010[0x14];
  dVar2 = in_stack_00000010[0x15];
  dVar3 = in_stack_00000010[0x16];
  dVar4 = in_stack_00000010[0x17];
  dVar44 = in_stack_00000018[1];
  dVar45 = in_stack_00000018[2];
  dVar46 = in_stack_00000018[3];
  dVar40 = in_stack_00000018[4];
  dVar41 = in_stack_00000018[5];
  dVar42 = in_stack_00000018[6];
  dVar43 = in_stack_00000018[7];
  dVar36 = in_stack_00000018[8];
  dVar37 = in_stack_00000018[9];
  dVar38 = in_stack_00000018[10];
  dVar39 = in_stack_00000018[0xb];
  dVar32 = in_stack_00000018[0xc];
  dVar33 = in_stack_00000018[0xd];
  dVar34 = in_stack_00000018[0xe];
  dVar35 = in_stack_00000018[0xf];
  dVar28 = in_stack_00000018[0x10];
  dVar29 = in_stack_00000018[0x11];
  dVar30 = in_stack_00000018[0x12];
  dVar31 = in_stack_00000018[0x13];
  dVar24 = in_stack_00000018[0x14];
  dVar25 = in_stack_00000018[0x15];
  dVar26 = in_stack_00000018[0x16];
  dVar27 = in_stack_00000018[0x17];
  *in_stack_00000008 = ~dVar47 & *in_stack_00000010 ^ *in_stack_00000018 & dVar47;
  in_stack_00000008[1] = ~dVar48 & dVar21 ^ dVar44 & dVar48;
  in_stack_00000008[2] = ~dVar49 & dVar22 ^ dVar45 & dVar49;
  in_stack_00000008[3] = ~dVar50 & dVar23 ^ dVar46 & dVar50;
  in_stack_00000008[4] = ~dVar47 & dVar17 ^ dVar40 & dVar47;
  in_stack_00000008[5] = ~dVar48 & dVar18 ^ dVar41 & dVar48;
  in_stack_00000008[6] = ~dVar49 & dVar19 ^ dVar42 & dVar49;
  in_stack_00000008[7] = ~dVar50 & dVar20 ^ dVar43 & dVar50;
  in_stack_00000008[8] = ~dVar47 & dVar13 ^ dVar36 & dVar47;
  in_stack_00000008[9] = ~dVar48 & dVar14 ^ dVar37 & dVar48;
  in_stack_00000008[10] = ~dVar49 & dVar15 ^ dVar38 & dVar49;
  in_stack_00000008[0xb] = ~dVar50 & dVar16 ^ dVar39 & dVar50;
  in_stack_00000008[0xc] = ~dVar47 & dVar9 ^ dVar32 & dVar47;
  in_stack_00000008[0xd] = ~dVar48 & dVar10 ^ dVar33 & dVar48;
  in_stack_00000008[0xe] = ~dVar49 & dVar11 ^ dVar34 & dVar49;
  in_stack_00000008[0xf] = ~dVar50 & dVar12 ^ dVar35 & dVar50;
  in_stack_00000008[0x10] = ~dVar47 & dVar5 ^ dVar28 & dVar47;
  in_stack_00000008[0x11] = ~dVar48 & dVar6 ^ dVar29 & dVar48;
  in_stack_00000008[0x12] = ~dVar49 & dVar7 ^ dVar30 & dVar49;
  in_stack_00000008[0x13] = ~dVar50 & dVar8 ^ dVar31 & dVar50;
  in_stack_00000008[0x14] = ~dVar47 & dVar1 ^ dVar24 & dVar47;
  in_stack_00000008[0x15] = ~dVar48 & dVar2 ^ dVar25 & dVar48;
  in_stack_00000008[0x16] = ~dVar49 & dVar3 ^ dVar26 & dVar49;
  in_stack_00000008[0x17] = ~dVar50 & dVar4 ^ dVar27 & dVar50;
  return;
}



// WARNING: Unknown calling convention

void crypto_internal_nistec_p256NegCond(void)

{
  uint uVar1;
  int iVar2;
  uint uVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int *in_stack_00000008;
  int in_stack_00000010;
  
  uVar1 = in_stack_00000008[1];
  iVar2 = in_stack_00000008[2];
  iVar6 = (-0xffffffff - in_stack_00000008[3]) -
          (uint)(iVar2 != 0 || (uint)-iVar2 < (uint)(0xffffffff < uVar1));
  uVar3 = 0xffffffff - uVar1;
  iVar4 = -1 - *in_stack_00000008;
  iVar5 = -iVar2 - (uint)(0xffffffff < uVar1);
  if (in_stack_00000010 == 0) {
    iVar6 = in_stack_00000008[3];
    uVar3 = uVar1;
    iVar4 = *in_stack_00000008;
    iVar5 = iVar2;
  }
  *in_stack_00000008 = iVar4;
  in_stack_00000008[1] = uVar3;
  in_stack_00000008[2] = iVar5;
  in_stack_00000008[3] = iVar6;
  return;
}



// WARNING: Unknown calling convention

void crypto_internal_nistec_p256Sqr(void)

{
  undefined auVar1 [16];
  undefined auVar2 [16];
  undefined auVar3 [16];
  undefined auVar4 [16];
  undefined auVar5 [16];
  undefined auVar6 [16];
  undefined auVar7 [16];
  undefined auVar8 [16];
  undefined auVar9 [16];
  undefined auVar10 [16];
  undefined auVar11 [16];
  undefined auVar12 [16];
  undefined auVar13 [16];
  undefined auVar14 [16];
  undefined auVar15 [16];
  undefined auVar16 [16];
  undefined auVar17 [16];
  undefined auVar18 [16];
  undefined auVar19 [16];
  undefined auVar20 [16];
  undefined auVar21 [16];
  undefined auVar22 [16];
  undefined auVar23 [16];
  undefined auVar24 [16];
  undefined auVar25 [16];
  undefined auVar26 [16];
  undefined auVar27 [16];
  undefined auVar28 [16];
  undefined auVar29 [16];
  uint uVar30;
  uint uVar31;
  uint uVar32;
  uint uVar33;
  uint uVar34;
  uint uVar35;
  uint uVar36;
  uint uVar37;
  uint uVar38;
  uint uVar39;
  uint uVar40;
  uint uVar41;
  uint uVar42;
  uint uVar43;
  uint uVar44;
  uint *in_stack_00000008;
  uint *in_stack_00000010;
  int in_stack_00000018;
  
  do {
    uVar31 = *in_stack_00000010;
    auVar1._8_8_ = 0;
    auVar1._0_8_ = in_stack_00000010[1];
    auVar15._8_8_ = 0;
    auVar15._0_8_ = uVar31;
    auVar25._8_8_ = 0;
    auVar25._0_8_ = SUB168(auVar1 * auVar15,8);
    uVar30 = SUB168(auVar1 * auVar15,0);
    auVar2._8_8_ = 0;
    auVar2._0_8_ = in_stack_00000010[2];
    auVar16._8_8_ = 0;
    auVar16._0_8_ = uVar31;
    auVar25 = auVar2 * auVar16 + auVar25;
    uVar35 = auVar25._0_8_;
    auVar26._8_8_ = 0;
    auVar26._0_8_ = auVar25._8_8_;
    auVar3._8_8_ = 0;
    auVar3._0_8_ = in_stack_00000010[3];
    auVar17._8_8_ = 0;
    auVar17._0_8_ = uVar31;
    auVar26 = auVar3 * auVar17 + auVar26;
    auVar27._8_8_ = 0;
    auVar27._0_8_ = auVar26._0_8_;
    uVar31 = auVar26._8_8_;
    auVar4._8_8_ = 0;
    auVar4._0_8_ = in_stack_00000010[2];
    auVar18._8_8_ = 0;
    auVar18._0_8_ = in_stack_00000010[1];
    auVar27 = auVar4 * auVar18 + auVar27;
    uVar38 = auVar27._0_8_;
    uVar32 = auVar27._8_8_;
    auVar5._8_8_ = 0;
    auVar5._0_8_ = in_stack_00000010[3];
    auVar19._8_8_ = 0;
    auVar19._0_8_ = in_stack_00000010[1];
    auVar29[8] = CARRY8(uVar31,uVar32);
    auVar29._0_8_ = uVar31 + uVar32;
    auVar29._9_7_ = 0;
    auVar29 = auVar5 * auVar19 + auVar29;
    uVar32 = auVar29._0_8_;
    auVar28._8_8_ = 0;
    auVar28._0_8_ = auVar29._8_8_;
    auVar6._8_8_ = 0;
    auVar6._0_8_ = in_stack_00000010[3];
    auVar20._8_8_ = 0;
    auVar20._0_8_ = in_stack_00000010[2];
    auVar28 = auVar6 * auVar20 + auVar28;
    uVar43 = auVar28._0_8_;
    uVar33 = auVar28._8_8_;
    uVar36 = uVar35 * 2 + (uint)CARRY8(uVar30,uVar30);
    uVar31 = (uint)(CARRY8(uVar35,uVar35) || CARRY8(uVar35 * 2,(uint)CARRY8(uVar30,uVar30)));
    uVar39 = uVar38 * 2 + uVar31;
    uVar31 = (uint)(CARRY8(uVar38,uVar38) || CARRY8(uVar38 * 2,uVar31));
    uVar41 = uVar32 * 2 + uVar31;
    uVar31 = (uint)(CARRY8(uVar32,uVar32) || CARRY8(uVar32 * 2,uVar31));
    uVar44 = uVar43 * 2 + uVar31;
    uVar31 = (uint)(CARRY8(uVar43,uVar43) || CARRY8(uVar43 * 2,uVar31));
    uVar43 = uVar33 * 2 + uVar31;
    auVar7._8_8_ = 0;
    auVar7._0_8_ = *in_stack_00000010;
    auVar21._8_8_ = 0;
    auVar21._0_8_ = *in_stack_00000010;
    uVar32 = SUB168(auVar7 * auVar21,8);
    uVar35 = SUB168(auVar7 * auVar21,0);
    auVar8._8_8_ = 0;
    auVar8._0_8_ = in_stack_00000010[1];
    auVar22._8_8_ = 0;
    auVar22._0_8_ = in_stack_00000010[1];
    uVar38 = SUB168(auVar8 * auVar22,0);
    uVar34 = uVar30 * 2 + uVar32;
    uVar30 = (uint)CARRY8(uVar30 * 2,uVar32);
    uVar32 = uVar36 + uVar38;
    uVar37 = uVar32 + uVar30;
    uVar30 = SUB168(auVar8 * auVar22,8) + (uint)(CARRY8(uVar36,uVar38) || CARRY8(uVar32,uVar30));
    auVar9._8_8_ = 0;
    auVar9._0_8_ = in_stack_00000010[2];
    auVar23._8_8_ = 0;
    auVar23._0_8_ = in_stack_00000010[2];
    uVar38 = SUB168(auVar9 * auVar23,0);
    uVar40 = uVar39 + uVar30;
    uVar30 = (uint)CARRY8(uVar39,uVar30);
    uVar32 = uVar41 + uVar38;
    uVar42 = uVar32 + uVar30;
    uVar30 = SUB168(auVar9 * auVar23,8) + (uint)(CARRY8(uVar41,uVar38) || CARRY8(uVar32,uVar30));
    auVar10._8_8_ = 0;
    auVar10._0_8_ = in_stack_00000010[3];
    auVar24._8_8_ = 0;
    auVar24._0_8_ = in_stack_00000010[3];
    uVar38 = SUB168(auVar10 * auVar24,0);
    uVar41 = uVar44 + uVar30;
    uVar30 = (uint)CARRY8(uVar44,uVar30);
    uVar32 = uVar43 + uVar38;
    uVar36 = uVar32 + uVar30;
    uVar44 = (uint)(CARRY8(uVar33,uVar33) || CARRY8(uVar33 * 2,uVar31)) +
             SUB168(auVar10 * auVar24,8) + (uint)(CARRY8(uVar43,uVar38) || CARRY8(uVar32,uVar30));
    auVar11._8_8_ = 0;
    auVar11._0_8_ = uVar35;
    uVar32 = SUB168(auVar11 * ZEXT816(0xffffffff00000001),0);
    uVar38 = uVar34 + (uVar35 << 0x20);
    uVar31 = (uint)CARRY8(uVar34,uVar35 << 0x20);
    uVar30 = uVar37 + (uVar35 >> 0x20);
    uVar43 = uVar30 + uVar31;
    uVar31 = (uint)(CARRY8(uVar37,uVar35 >> 0x20) || CARRY8(uVar30,uVar31));
    uVar30 = uVar40 + uVar32;
    uVar37 = uVar30 + uVar31;
    uVar35 = SUB168(auVar11 * ZEXT816(0xffffffff00000001),8) +
             (uint)(CARRY8(uVar40,uVar32) || CARRY8(uVar30,uVar31));
    auVar12._8_8_ = 0;
    auVar12._0_8_ = uVar38;
    uVar32 = SUB168(auVar12 * ZEXT816(0xffffffff00000001),0);
    uVar38 = uVar38 >> 0x20;
    uVar33 = uVar43 + (uVar34 << 0x20);
    uVar31 = (uint)CARRY8(uVar43,uVar34 << 0x20);
    uVar30 = uVar37 + uVar38;
    uVar39 = uVar30 + uVar31;
    uVar31 = (uint)(CARRY8(uVar37,uVar38) || CARRY8(uVar30,uVar31));
    uVar30 = uVar35 + uVar32;
    uVar38 = uVar30 + uVar31;
    uVar35 = SUB168(auVar12 * ZEXT816(0xffffffff00000001),8) +
             (uint)(CARRY8(uVar35,uVar32) || CARRY8(uVar30,uVar31));
    auVar13._8_8_ = 0;
    auVar13._0_8_ = uVar33;
    uVar32 = SUB168(auVar13 * ZEXT816(0xffffffff00000001),0);
    uVar33 = uVar33 >> 0x20;
    uVar37 = uVar39 + (uVar43 << 0x20);
    uVar31 = (uint)CARRY8(uVar39,uVar43 << 0x20);
    uVar30 = uVar38 + uVar33;
    uVar43 = uVar30 + uVar31;
    uVar31 = (uint)(CARRY8(uVar38,uVar33) || CARRY8(uVar30,uVar31));
    uVar30 = uVar35 + uVar32;
    uVar33 = uVar30 + uVar31;
    uVar35 = SUB168(auVar13 * ZEXT816(0xffffffff00000001),8) +
             (uint)(CARRY8(uVar35,uVar32) || CARRY8(uVar30,uVar31));
    auVar14._8_8_ = 0;
    auVar14._0_8_ = uVar37;
    uVar38 = SUB168(auVar14 * ZEXT816(0xffffffff00000001),8);
    uVar32 = SUB168(auVar14 * ZEXT816(0xffffffff00000001),0);
    uVar37 = uVar37 >> 0x20;
    uVar34 = uVar43 + (uVar39 << 0x20);
    uVar31 = (uint)CARRY8(uVar43,uVar39 << 0x20);
    uVar30 = uVar33 + uVar37;
    uVar43 = uVar30 + uVar31;
    uVar31 = (uint)(CARRY8(uVar33,uVar37) || CARRY8(uVar30,uVar31));
    uVar30 = uVar35 + uVar32;
    uVar39 = uVar30 + uVar31;
    uVar31 = (uint)(CARRY8(uVar35,uVar32) || CARRY8(uVar30,uVar31));
    uVar33 = uVar38 + uVar31;
    uVar31 = (uint)CARRY8(uVar38,uVar31);
    uVar30 = uVar34 + uVar42;
    uVar37 = uVar30 + uVar31;
    uVar31 = (uint)(CARRY8(uVar34,uVar42) || CARRY8(uVar30,uVar31));
    uVar30 = uVar43 + uVar41;
    uVar34 = uVar30 + uVar31;
    uVar31 = (uint)(CARRY8(uVar43,uVar41) || CARRY8(uVar30,uVar31));
    uVar30 = uVar39 + uVar36;
    uVar40 = uVar30 + uVar31;
    uVar31 = (uint)(CARRY8(uVar39,uVar36) || CARRY8(uVar30,uVar31));
    uVar30 = uVar33 + uVar44;
    uVar39 = uVar30 + uVar31;
    uVar32 = (uint)(uVar34 < 0xffffffff ||
                   uVar34 - 0xffffffff < (uint)(uVar37 != 0xffffffffffffffff));
    uVar35 = (uint)(uVar40 < uVar32);
    uVar36 = (uVar39 + 0xffffffff) - uVar35;
    uVar38 = (uVar34 - 0xffffffff) - (uint)(uVar37 != 0xffffffffffffffff);
    uVar43 = uVar37 + 1;
    uVar32 = uVar40 - uVar32;
    if ((CARRY8(uVar33,uVar44) || CARRY8(uVar30,uVar31)) <
        (uVar39 < 0xffffffff00000001 || uVar39 + 0xffffffff < uVar35)) {
      uVar36 = uVar39;
      uVar38 = uVar34;
      uVar43 = uVar37;
      uVar32 = uVar40;
    }
    *in_stack_00000008 = uVar43;
    in_stack_00000008[1] = uVar38;
    in_stack_00000008[2] = uVar32;
    in_stack_00000008[3] = uVar36;
    in_stack_00000018 = in_stack_00000018 + -1;
    in_stack_00000010 = in_stack_00000008;
  } while (in_stack_00000018 != 0);
  return;
}



// WARNING: Unknown calling convention

void crypto_internal_nistec_p256Mul(void)

{
  undefined auVar1 [16];
  undefined auVar2 [16];
  undefined auVar3 [16];
  undefined auVar4 [16];
  undefined auVar5 [16];
  undefined auVar6 [16];
  undefined auVar7 [16];
  undefined auVar8 [16];
  undefined auVar9 [16];
  undefined auVar10 [16];
  undefined auVar11 [16];
  undefined auVar12 [16];
  undefined auVar13 [16];
  undefined auVar14 [16];
  undefined auVar15 [16];
  undefined auVar16 [16];
  undefined auVar17 [16];
  undefined auVar18 [16];
  undefined auVar19 [16];
  undefined auVar20 [16];
  undefined auVar21 [16];
  undefined auVar22 [16];
  undefined auVar23 [16];
  undefined auVar24 [16];
  undefined auVar25 [16];
  undefined auVar26 [16];
  undefined auVar27 [16];
  undefined auVar28 [16];
  undefined auVar29 [16];
  undefined auVar30 [16];
  undefined auVar31 [16];
  undefined auVar32 [16];
  undefined auVar33 [16];
  undefined auVar34 [16];
  undefined auVar35 [16];
  undefined auVar36 [16];
  undefined auVar37 [16];
  undefined auVar38 [16];
  undefined auVar39 [16];
  undefined auVar40 [16];
  undefined auVar41 [16];
  undefined auVar42 [16];
  undefined auVar43 [16];
  undefined auVar44 [16];
  undefined auVar45 [16];
  undefined auVar46 [16];
  undefined auVar47 [16];
  undefined auVar48 [16];
  int iVar49;
  uint uVar50;
  uint uVar51;
  uint uVar52;
  uint uVar53;
  uint uVar54;
  uint uVar55;
  uint uVar56;
  uint uVar57;
  uint uVar58;
  uint uVar59;
  uint uVar60;
  uint uVar61;
  uint uVar62;
  int iVar63;
  uint uVar64;
  uint uVar65;
  int *in_stack_00000008;
  uint *in_stack_00000010;
  uint *in_stack_00000018;
  
  uVar52 = *in_stack_00000018;
  auVar1._8_8_ = 0;
  auVar1._0_8_ = *in_stack_00000010;
  auVar21._8_8_ = 0;
  auVar21._0_8_ = uVar52;
  auVar37._8_8_ = 0;
  auVar37._0_8_ = SUB168(auVar1 * auVar21,8);
  uVar50 = SUB168(auVar1 * auVar21,0);
  auVar2._8_8_ = 0;
  auVar2._0_8_ = in_stack_00000010[1];
  auVar22._8_8_ = 0;
  auVar22._0_8_ = uVar52;
  auVar37 = auVar2 * auVar22 + auVar37;
  uVar55 = auVar37._0_8_;
  auVar38._8_8_ = 0;
  auVar38._0_8_ = auVar37._8_8_;
  auVar3._8_8_ = 0;
  auVar3._0_8_ = in_stack_00000010[2];
  auVar23._8_8_ = 0;
  auVar23._0_8_ = uVar52;
  auVar38 = auVar3 * auVar23 + auVar38;
  uVar57 = auVar38._0_8_;
  auVar39._8_8_ = 0;
  auVar39._0_8_ = auVar38._8_8_;
  auVar4._8_8_ = 0;
  auVar4._0_8_ = in_stack_00000010[3];
  auVar24._8_8_ = 0;
  auVar24._0_8_ = uVar52;
  auVar39 = auVar4 * auVar24 + auVar39;
  uVar59 = auVar39._0_8_;
  uVar53 = auVar39._8_8_;
  auVar5._8_8_ = 0;
  auVar5._0_8_ = uVar50;
  uVar54 = SUB168(auVar5 * ZEXT816(0xffffffff00000001),8);
  uVar51 = SUB168(auVar5 * ZEXT816(0xffffffff00000001),0);
  auVar40._8_8_ = 0;
  auVar40._0_8_ = uVar55 + (uVar50 << 0x20);
  uVar52 = (uint)CARRY8(uVar55,uVar50 << 0x20);
  uVar55 = uVar57 + (uVar50 >> 0x20);
  uVar58 = uVar55 + uVar52;
  uVar52 = (uint)(CARRY8(uVar57,uVar50 >> 0x20) || CARRY8(uVar55,uVar52));
  uVar55 = uVar59 + uVar51;
  uVar57 = uVar55 + uVar52;
  uVar52 = (uint)(CARRY8(uVar59,uVar51) || CARRY8(uVar55,uVar52));
  uVar55 = uVar53 + uVar54;
  uVar51 = uVar55 + uVar52;
  uVar55 = (uint)(CARRY8(uVar53,uVar54) || CARRY8(uVar55,uVar52));
  uVar52 = in_stack_00000018[1];
  auVar6._8_8_ = 0;
  auVar6._0_8_ = *in_stack_00000010;
  auVar25._8_8_ = 0;
  auVar25._0_8_ = uVar52;
  auVar40 = auVar6 * auVar25 + auVar40;
  uVar59 = auVar40._0_8_;
  uVar50 = auVar40._8_8_;
  auVar7._8_8_ = 0;
  auVar7._0_8_ = in_stack_00000010[1];
  auVar26._8_8_ = 0;
  auVar26._0_8_ = uVar52;
  auVar43[8] = CARRY8(uVar58,uVar50);
  auVar43._0_8_ = uVar58 + uVar50;
  auVar43._9_7_ = 0;
  auVar43 = auVar7 * auVar26 + auVar43;
  uVar53 = auVar43._0_8_;
  uVar50 = auVar43._8_8_;
  auVar8._8_8_ = 0;
  auVar8._0_8_ = in_stack_00000010[2];
  auVar27._8_8_ = 0;
  auVar27._0_8_ = uVar52;
  auVar44[8] = CARRY8(uVar57,uVar50);
  auVar44._0_8_ = uVar57 + uVar50;
  auVar44._9_7_ = 0;
  auVar44 = auVar8 * auVar27 + auVar44;
  uVar60 = auVar44._0_8_;
  uVar50 = auVar44._8_8_;
  auVar9._8_8_ = 0;
  auVar9._0_8_ = in_stack_00000010[3];
  auVar28._8_8_ = 0;
  auVar28._0_8_ = uVar52;
  uVar52 = SUB168(auVar9 * auVar28,0);
  uVar54 = uVar51 + uVar50;
  uVar57 = SUB168(auVar9 * auVar28,8) + (uint)CARRY8(uVar51,uVar50);
  uVar62 = uVar54 + uVar52;
  uVar52 = (uint)CARRY8(uVar54,uVar52);
  uVar51 = uVar55 + uVar57;
  uVar64 = uVar51 + uVar52;
  auVar10._8_8_ = 0;
  auVar10._0_8_ = uVar59;
  uVar58 = SUB168(auVar10 * ZEXT816(0xffffffff00000001),8);
  uVar54 = SUB168(auVar10 * ZEXT816(0xffffffff00000001),0);
  auVar41._8_8_ = 0;
  auVar41._0_8_ = uVar53 + (uVar59 << 0x20);
  uVar50 = (uint)CARRY8(uVar53,uVar59 << 0x20);
  uVar53 = uVar60 + (uVar59 >> 0x20);
  uVar61 = uVar53 + uVar50;
  uVar50 = (uint)(CARRY8(uVar60,uVar59 >> 0x20) || CARRY8(uVar53,uVar50));
  uVar53 = uVar62 + uVar54;
  uVar59 = uVar53 + uVar50;
  uVar50 = (uint)(CARRY8(uVar62,uVar54) || CARRY8(uVar53,uVar50));
  uVar53 = uVar64 + uVar58;
  uVar54 = uVar53 + uVar50;
  uVar58 = (uint)(CARRY8(uVar55,uVar57) || CARRY8(uVar51,uVar52)) +
           (uint)(CARRY8(uVar64,uVar58) || CARRY8(uVar53,uVar50));
  uVar52 = in_stack_00000018[2];
  auVar11._8_8_ = 0;
  auVar11._0_8_ = *in_stack_00000010;
  auVar29._8_8_ = 0;
  auVar29._0_8_ = uVar52;
  auVar41 = auVar11 * auVar29 + auVar41;
  uVar60 = auVar41._0_8_;
  uVar55 = auVar41._8_8_;
  auVar12._8_8_ = 0;
  auVar12._0_8_ = in_stack_00000010[1];
  auVar30._8_8_ = 0;
  auVar30._0_8_ = uVar52;
  auVar45[8] = CARRY8(uVar61,uVar55);
  auVar45._0_8_ = uVar61 + uVar55;
  auVar45._9_7_ = 0;
  auVar45 = auVar12 * auVar30 + auVar45;
  uVar51 = auVar45._0_8_;
  uVar55 = auVar45._8_8_;
  auVar13._8_8_ = 0;
  auVar13._0_8_ = in_stack_00000010[2];
  auVar31._8_8_ = 0;
  auVar31._0_8_ = uVar52;
  auVar46[8] = CARRY8(uVar59,uVar55);
  auVar46._0_8_ = uVar59 + uVar55;
  auVar46._9_7_ = 0;
  auVar46 = auVar13 * auVar31 + auVar46;
  uVar61 = auVar46._0_8_;
  uVar55 = auVar46._8_8_;
  auVar14._8_8_ = 0;
  auVar14._0_8_ = in_stack_00000010[3];
  auVar32._8_8_ = 0;
  auVar32._0_8_ = uVar52;
  uVar52 = SUB168(auVar14 * auVar32,0);
  uVar50 = uVar54 + uVar55;
  uVar54 = SUB168(auVar14 * auVar32,8) + (uint)CARRY8(uVar54,uVar55);
  uVar62 = uVar50 + uVar52;
  uVar52 = (uint)CARRY8(uVar50,uVar52);
  uVar50 = uVar58 + uVar54;
  uVar59 = uVar50 + uVar52;
  auVar15._8_8_ = 0;
  auVar15._0_8_ = uVar60;
  uVar57 = SUB168(auVar15 * ZEXT816(0xffffffff00000001),8);
  uVar53 = SUB168(auVar15 * ZEXT816(0xffffffff00000001),0);
  auVar42._8_8_ = 0;
  auVar42._0_8_ = uVar51 + (uVar60 << 0x20);
  uVar55 = (uint)CARRY8(uVar51,uVar60 << 0x20);
  uVar51 = uVar61 + (uVar60 >> 0x20);
  uVar64 = uVar51 + uVar55;
  uVar55 = (uint)(CARRY8(uVar61,uVar60 >> 0x20) || CARRY8(uVar51,uVar55));
  uVar51 = uVar62 + uVar53;
  uVar60 = uVar51 + uVar55;
  uVar55 = (uint)(CARRY8(uVar62,uVar53) || CARRY8(uVar51,uVar55));
  uVar51 = uVar59 + uVar57;
  uVar53 = uVar51 + uVar55;
  uVar62 = (uint)(CARRY8(uVar58,uVar54) || CARRY8(uVar50,uVar52)) +
           (uint)(CARRY8(uVar59,uVar57) || CARRY8(uVar51,uVar55));
  uVar52 = in_stack_00000018[3];
  auVar16._8_8_ = 0;
  auVar16._0_8_ = *in_stack_00000010;
  auVar33._8_8_ = 0;
  auVar33._0_8_ = uVar52;
  auVar42 = auVar16 * auVar33 + auVar42;
  uVar57 = auVar42._0_8_;
  uVar55 = auVar42._8_8_;
  auVar17._8_8_ = 0;
  auVar17._0_8_ = in_stack_00000010[1];
  auVar34._8_8_ = 0;
  auVar34._0_8_ = uVar52;
  auVar47[8] = CARRY8(uVar64,uVar55);
  auVar47._0_8_ = uVar64 + uVar55;
  auVar47._9_7_ = 0;
  auVar47 = auVar17 * auVar34 + auVar47;
  uVar51 = auVar47._0_8_;
  uVar55 = auVar47._8_8_;
  auVar18._8_8_ = 0;
  auVar18._0_8_ = in_stack_00000010[2];
  auVar35._8_8_ = 0;
  auVar35._0_8_ = uVar52;
  auVar48[8] = CARRY8(uVar60,uVar55);
  auVar48._0_8_ = uVar60 + uVar55;
  auVar48._9_7_ = 0;
  auVar48 = auVar18 * auVar35 + auVar48;
  uVar58 = auVar48._0_8_;
  uVar55 = auVar48._8_8_;
  auVar19._8_8_ = 0;
  auVar19._0_8_ = in_stack_00000010[3];
  auVar36._8_8_ = 0;
  auVar36._0_8_ = uVar52;
  uVar52 = SUB168(auVar19 * auVar36,0);
  uVar50 = uVar53 + uVar55;
  uVar59 = SUB168(auVar19 * auVar36,8) + (uint)CARRY8(uVar53,uVar55);
  uVar54 = uVar50 + uVar52;
  uVar52 = (uint)CARRY8(uVar50,uVar52);
  uVar50 = uVar62 + uVar59;
  uVar64 = uVar50 + uVar52;
  auVar20._8_8_ = 0;
  auVar20._0_8_ = uVar57;
  uVar60 = SUB168(auVar20 * ZEXT816(0xffffffff00000001),8);
  uVar53 = SUB168(auVar20 * ZEXT816(0xffffffff00000001),0);
  iVar63 = uVar51 + (uVar57 << 0x20);
  uVar55 = (uint)CARRY8(uVar51,uVar57 << 0x20);
  uVar51 = uVar58 + (uVar57 >> 0x20);
  uVar65 = uVar51 + uVar55;
  uVar55 = (uint)(CARRY8(uVar58,uVar57 >> 0x20) || CARRY8(uVar51,uVar55));
  uVar51 = uVar54 + uVar53;
  uVar61 = uVar51 + uVar55;
  uVar55 = (uint)(CARRY8(uVar54,uVar53) || CARRY8(uVar51,uVar55));
  uVar51 = uVar64 + uVar60;
  uVar56 = uVar51 + uVar55;
  uVar53 = (uint)(uVar65 < 0xffffffff || uVar65 - 0xffffffff < (uint)(iVar63 != -1));
  uVar54 = (uint)(uVar61 < uVar53);
  uVar58 = (uVar56 + 0xffffffff) - uVar54;
  uVar57 = (uVar65 - 0xffffffff) - (uint)(iVar63 != -1);
  iVar49 = iVar63 + 1;
  uVar53 = uVar61 - uVar53;
  if ((byte)((CARRY8(uVar62,uVar59) || CARRY8(uVar50,uVar52)) +
            (CARRY8(uVar64,uVar60) || CARRY8(uVar51,uVar55))) <
      (uVar56 < 0xffffffff00000001 || uVar56 + 0xffffffff < uVar54)) {
    uVar58 = uVar56;
    uVar57 = uVar65;
    iVar49 = iVar63;
    uVar53 = uVar61;
  }
  *in_stack_00000008 = iVar49;
  in_stack_00000008[1] = uVar57;
  in_stack_00000008[2] = uVar53;
  in_stack_00000008[3] = uVar58;
  return;
}



// WARNING: Unknown calling convention

void crypto_internal_nistec_p256FromMont(void)

{
  uint uVar1;
  uint uVar2;
  undefined auVar3 [16];
  undefined auVar4 [16];
  undefined auVar5 [16];
  undefined auVar6 [16];
  int iVar7;
  uint uVar8;
  uint uVar9;
  uint uVar10;
  uint uVar11;
  uint uVar12;
  uint uVar13;
  uint uVar14;
  int iVar15;
  int *in_stack_00000008;
  uint *in_stack_00000010;
  
  uVar1 = *in_stack_00000010;
  uVar2 = in_stack_00000010[1];
  auVar3._8_8_ = 0;
  auVar3._0_8_ = uVar1;
  uVar8 = SUB168(auVar3 * ZEXT816(0xffffffff00000001),0);
  uVar10 = uVar2 + (uVar1 << 0x20);
  uVar9 = (uint)CARRY8(uVar2,uVar1 << 0x20);
  uVar12 = in_stack_00000010[2] + (uVar1 >> 0x20);
  uVar11 = uVar12 + uVar9;
  uVar1 = (uint)(CARRY8(in_stack_00000010[2],uVar1 >> 0x20) || CARRY8(uVar12,uVar9));
  uVar9 = in_stack_00000010[3] + uVar8;
  uVar13 = uVar9 + uVar1;
  uVar14 = SUB168(auVar3 * ZEXT816(0xffffffff00000001),8) +
           (uint)(CARRY8(in_stack_00000010[3],uVar8) || CARRY8(uVar9,uVar1));
  auVar4._8_8_ = 0;
  auVar4._0_8_ = uVar10;
  uVar9 = SUB168(auVar4 * ZEXT816(0xffffffff00000001),0);
  uVar10 = uVar10 >> 0x20;
  uVar12 = uVar11 + (uVar2 << 0x20);
  uVar1 = (uint)CARRY8(uVar11,uVar2 << 0x20);
  uVar2 = uVar13 + uVar10;
  uVar8 = uVar2 + uVar1;
  uVar1 = (uint)(CARRY8(uVar13,uVar10) || CARRY8(uVar2,uVar1));
  uVar2 = uVar14 + uVar9;
  uVar13 = uVar2 + uVar1;
  uVar14 = SUB168(auVar4 * ZEXT816(0xffffffff00000001),8) +
           (uint)(CARRY8(uVar14,uVar9) || CARRY8(uVar2,uVar1));
  auVar5._8_8_ = 0;
  auVar5._0_8_ = uVar12;
  uVar9 = SUB168(auVar5 * ZEXT816(0xffffffff00000001),0);
  uVar12 = uVar12 >> 0x20;
  uVar10 = uVar8 + (uVar11 << 0x20);
  uVar1 = (uint)CARRY8(uVar8,uVar11 << 0x20);
  uVar2 = uVar13 + uVar12;
  uVar11 = uVar2 + uVar1;
  uVar1 = (uint)(CARRY8(uVar13,uVar12) || CARRY8(uVar2,uVar1));
  uVar2 = uVar14 + uVar9;
  uVar13 = uVar2 + uVar1;
  uVar12 = SUB168(auVar5 * ZEXT816(0xffffffff00000001),8) +
           (uint)(CARRY8(uVar14,uVar9) || CARRY8(uVar2,uVar1));
  auVar6._8_8_ = 0;
  auVar6._0_8_ = uVar10;
  uVar9 = SUB168(auVar6 * ZEXT816(0xffffffff00000001),0);
  uVar10 = uVar10 >> 0x20;
  iVar15 = uVar11 + (uVar8 << 0x20);
  uVar1 = (uint)CARRY8(uVar11,uVar8 << 0x20);
  uVar2 = uVar13 + uVar10;
  uVar11 = uVar2 + uVar1;
  uVar1 = (uint)(CARRY8(uVar13,uVar10) || CARRY8(uVar2,uVar1));
  uVar2 = uVar12 + uVar9;
  uVar8 = uVar2 + uVar1;
  uVar10 = SUB168(auVar6 * ZEXT816(0xffffffff00000001),8) +
           (uint)(CARRY8(uVar12,uVar9) || CARRY8(uVar2,uVar1));
  uVar1 = (uint)(uVar11 < 0xffffffff || uVar11 - 0xffffffff < (uint)(iVar15 != -1));
  uVar2 = (uint)(uVar8 < uVar1);
  uVar12 = (uVar10 + 0xffffffff) - uVar2;
  uVar9 = (uVar11 - 0xffffffff) - (uint)(iVar15 != -1);
  iVar7 = iVar15 + 1;
  uVar1 = uVar8 - uVar1;
  if (uVar10 < 0xffffffff00000001 || uVar10 + 0xffffffff < uVar2) {
    uVar12 = uVar10;
    uVar9 = uVar11;
    iVar7 = iVar15;
    uVar1 = uVar8;
  }
  *in_stack_00000008 = iVar7;
  in_stack_00000008[1] = uVar9;
  in_stack_00000008[2] = uVar1;
  in_stack_00000008[3] = uVar12;
  return;
}



// WARNING: Unknown calling convention

void crypto_internal_nistec_p256Select(void)

{
