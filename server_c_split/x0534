      ~r0_04.len = in_stack_ffffffffffffffb0;
      ~r0_04.str = in_stack_ffffffffffffffa8;
      runtime_concatstring2((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff88,a1,~r0_04);
      ppcVar1[1] = extraout_RBX_01;
      pcVar2 = extraout_RAX_00;
      ppcVar5 = ppcVar1;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_RAX_01;
        extraout_R11[1] = *ppcVar5;
        pcVar2 = extraout_RAX_01;
      }
      *ppcVar5 = pcVar2;
      elem_01.cap = (int)in_stack_ffffffffffffff98;
      elem_01.array = (string *)in_stack_ffffffffffffff88.str;
      elem_01.len = in_stack_ffffffffffffff88.len;
      ~r0_03.len = (int)in_stack_ffffffffffffffa8;
      ~r0_03.str = in_stack_ffffffffffffffa0;
      path_Join(elem_01,~r0_03);
      if (extraout_RBX_02 == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      ~r0_06 = (void *)(extraout_RBX_02 + -1);
    }
    if (ppcVar1[dstLen * 2 + 1] == (char *)0x0) {
      cVar3 = '\0';
    }
    else {
      runtime_memequal();
      cVar3 = extraout_AL;
    }
    if (cVar3 != '\0') {
      if (~r0_06 == (void *)0x0) {
        cVar3 = '\0';
      }
      else {
        runtime_memequal();
        cVar3 = extraout_AL_00;
      }
      if (cVar3 == '\0') {
        a1_00.len = (int)in_stack_ffffffffffffffa0;
        a1_00.str = (uint8 *)in_stack_ffffffffffffff98;
        ~r0_05.len = (int)~r0_06;
        ~r0_05.str = in_stack_ffffffffffffffa8;
        runtime_concatstring2((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff88,a1_00,~r0_05);
        ~r0_06 = extraout_RBX_03;
      }
    }
    runtime_newobject((internal_abi_Type *)&DAT_00895b20,~r0_06);
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_wbMove((internal_abi_Type *)&DAT_00895b20,dst,u);
    }
    u_00 = (net_url_URL *)FUN_0046d0e2();
    ~r0_01.data = in_stack_ffffffffffffffa0;
    ~r0_01.tab = in_stack_ffffffffffffff98;
    net_url___URL__setPath(u_00,in_stack_ffffffffffffff88,~r0_01);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void type__eq_net_url_Error(net_url_Error *p,net_url_Error *q,bool r)

{
  runtime_itab *tab;
  char extraout_AL;
  char extraout_AL_00;
  bool ~r0;
  int unaff_R14;
  net_url_Error *pnStack0000000000000008;
  net_url_Error *pnStack0000000000000010;
  
  pnStack0000000000000008 = p;
  pnStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((((pnStack0000000000000010->Op).len == (pnStack0000000000000008->Op).len) &&
       ((pnStack0000000000000008->URL).len == (pnStack0000000000000010->URL).len)) &&
      (runtime_memequal(), extraout_AL != '\0')) &&
     ((runtime_memequal(), extraout_AL_00 != '\0' &&
      (tab = (pnStack0000000000000008->Err).tab, (pnStack0000000000000010->Err).tab == tab)))) {
    runtime_ifaceeq(tab,(pnStack0000000000000008->Err).data,(pnStack0000000000000010->Err).data,~r0)
    ;
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void net_url___EscapeError__Error(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  uint8 *in_RAX;
  uint8 *unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  net_url_EscapeError in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffe8;
  }
  if (in_RAX != (uint8 *)0x0) {
    ~r0_00.len = unaff_retaddr;
    ~r0_00.str = unaff_RBP;
    net_url_EscapeError_Error(in_stack_ffffffffffffffe8,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void net_url___InvalidHostError__Error(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  uint8 *in_RAX;
  uint8 *unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  net_url_InvalidHostError in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffe8;
  }
  if (in_RAX != (uint8 *)0x0) {
    ~r0_00.len = unaff_retaddr;
    ~r0_00.str = unaff_RBP;
    net_url_InvalidHostError_Error(in_stack_ffffffffffffffe8,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void net_url___Values__Add(string key,string value)

{
  string **ppsVar1;
  runtime_slice ~r0;
  runtime_hmap **in_RAX;
  void **extraout_RAX;
  void *extraout_RAX_00;
  void *extraout_RAX_01;
  void *oldPtr;
  void **ppvVar2;
  int iVar3;
  int extraout_RAX_02;
  void *extraout_RCX;
  void *in_RBX;
  void *newLen;
  void *extraout_RBX;
  void *extraout_RBX_00;
  undefined8 in_RSI;
  undefined8 in_RDI;
  void **extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  string in_stack_ffffffffffffffb0;
  int in_stack_ffffffffffffffc0;
  
  key.len = (int)in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    key.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (runtime_hmap **)key.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &key)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffb0;
  }
  if (in_RAX == (runtime_hmap **)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_00879e60,*in_RAX,in_stack_ffffffffffffffb0,(void *)key.len
            );
  newLen = (void *)((int)extraout_RAX[1] + 1);
  oldPtr = *extraout_RAX;
  ppvVar2 = extraout_RAX;
  if (extraout_RAX[2] < newLen) {
    ~r0.cap = in_stack_ffffffffffffffc0;
    ~r0.array = in_stack_ffffffffffffffb0.str;
    ~r0.len = in_stack_ffffffffffffffb0.len;
    runtime_growslice(oldPtr,(int)newLen,(int)extraout_RAX[2],1,(internal_abi_Type *)&DAT_008075e0,
                      ~r0);
    extraout_RAX[2] = extraout_RCX;
    oldPtr = extraout_RAX_00;
    newLen = extraout_RBX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_01;
      extraout_R11[1] = *ppvVar2;
      oldPtr = extraout_RAX_01;
      newLen = extraout_RBX_00;
    }
    *ppvVar2 = oldPtr;
  }
  ppvVar2[1] = newLen;
  iVar3 = ((int)newLen + -1) * 0x10;
  *(undefined8 *)((int)oldPtr + iVar3 + 8) = in_RSI;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = in_RDI;
    extraout_R11_00[1] = *(undefined8 *)((int)oldPtr + extraout_RAX_02);
    iVar3 = extraout_RAX_02;
  }
  *(undefined8 *)((int)oldPtr + iVar3) = in_RDI;
  return;
}



void net_url___Values__Del(string key)

{
  string **ppsVar1;
  runtime_hmap **in_RAX;
  int unaff_R14;
  string in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    key.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (runtime_hmap **)key.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &key)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffd8;
  }
  if (in_RAX != (runtime_hmap **)0x0) {
    runtime_mapdelete_faststr
              ((internal_abi_MapType *)&DAT_00879e60,*in_RAX,in_stack_ffffffffffffffd8);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void net_url___Values__Encode(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  net_url_Values *in_RAX;
  int unaff_RBP;
  int unaff_R14;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (net_url_Values *)~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xfffffffffffffff0;
  }
  if (in_RAX != (net_url_Values *)0x0) {
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    net_url_Values_Encode(*in_RAX,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void net_url___Values__Get(string key,string ~r0)

{
  string **ppsVar1;
  runtime_hmap **in_RAX;
  void *in_RBX;
  int unaff_R14;
  string in_stack_ffffffffffffffd8;
  
  key.len = (int)in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    key.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (runtime_hmap **)key.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &key)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffd8;
  }
  if (in_RAX != (runtime_hmap **)0x0) {
    runtime_mapaccess1_faststr
              ((internal_abi_MapType *)&DAT_00879e60,*in_RAX,in_stack_ffffffffffffffd8,
               (void *)key.len);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void net_url___Values__Has(string key,bool ~r0)

{
  string **ppsVar1;
  undefined7 in_register_00000001;
  runtime_hmap **pprVar2;
  bool in_CL;
  bool ok;
  void *in_RBX;
  int unaff_R14;
  string in_stack_ffffffffffffffd8;
  
  pprVar2 = (runtime_hmap **)CONCAT71(in_register_00000001,~r0);
  key.len = (int)in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    key.str = (uint8 *)pprVar2;
    runtime_morestack_noctxt();
    pprVar2 = (runtime_hmap **)key.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &key)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffd8;
  }
  if (pprVar2 != (runtime_hmap **)0x0) {
    runtime_mapaccess2_faststr
              ((internal_abi_MapType *)&DAT_00879e60,*pprVar2,in_stack_ffffffffffffffd8,
               (void *)key.len,in_CL);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void net_url___Values__Set(string key,string value)

{
  string **ppsVar1;
  runtime_hmap *h;
  runtime_hmap **in_RAX;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar2;
  int *extraout_RAX_01;
  int *extraout_RAX_02;
  int *piVar3;
  void *in_RBX;
  undefined8 in_RSI;
  undefined8 in_RDI;
  undefined8 *extraout_R11;
  int *extraout_R11_00;
  int unaff_R14;
  string in_stack_ffffffffffffffc8;
  
  key.len = (int)in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    key.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (runtime_hmap **)key.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &key)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffc8;
  }
  if (in_RAX == (runtime_hmap **)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  h = *in_RAX;
  runtime_newobject((internal_abi_Type *)&DAT_008117e0,(void *)key.len);
  extraout_RAX[1] = in_RSI;
  puVar2 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = in_RDI;
    puVar2 = extraout_RAX_00;
  }
  *puVar2 = in_RDI;
  runtime_mapassign_faststr
            ((internal_abi_MapType *)&DAT_00879e60,h,in_stack_ffffffffffffffc8,(void *)key.len);
  extraout_RAX_01[1] = 1;
  extraout_RAX_01[2] = 1;
  piVar3 = extraout_RAX_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = (int)puVar2;
    extraout_R11_00[1] = *extraout_RAX_02;
    piVar3 = extraout_RAX_02;
  }
  *piVar3 = (int)puVar2;
  return;
}



void type__eq_net_url_Userinfo(net_url_Userinfo *p,net_url_Userinfo *q,bool r)

{
  char extraout_AL;
  int unaff_R14;
  net_url_Userinfo *pnStack0000000000000008;
  net_url_Userinfo *pnStack0000000000000010;
  
  pnStack0000000000000008 = p;
  pnStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((((pnStack0000000000000010->username).len == (pnStack0000000000000008->username).len) &&
       ((pnStack0000000000000010->password).len == (pnStack0000000000000008->password).len)) &&
      (pnStack0000000000000010->passwordSet == pnStack0000000000000008->passwordSet)) &&
     (runtime_memequal(), extraout_AL != '\0')) {
    runtime_memequal();
  }
  return;
}



void type__eq_net_url_URL(net_url_URL *p,net_url_URL *q,bool r)

{
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  char extraout_AL_02;
  char extraout_AL_03;
  char extraout_AL_04;
  char extraout_AL_05;
  int unaff_R14;
  net_url_URL *pnStack0000000000000008;
  net_url_URL *pnStack0000000000000010;
  
  pnStack0000000000000008 = p;
  pnStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((((((pnStack0000000000000010->Scheme).len == (pnStack0000000000000008->Scheme).len) &&
          ((pnStack0000000000000008->Opaque).len == (pnStack0000000000000010->Opaque).len)) &&
         (pnStack0000000000000010->User == pnStack0000000000000008->User)) &&
        (((pnStack0000000000000008->Host).len == (pnStack0000000000000010->Host).len &&
         ((pnStack0000000000000008->Path).len == (pnStack0000000000000010->Path).len)))) &&
       (((pnStack0000000000000008->RawPath).len == (pnStack0000000000000010->RawPath).len &&
        ((pnStack0000000000000010->OmitHost == pnStack0000000000000008->OmitHost &&
         (pnStack0000000000000010->ForceQuery == pnStack0000000000000008->ForceQuery)))))) &&
      ((pnStack0000000000000010->RawQuery).len == (pnStack0000000000000008->RawQuery).len)) &&
     ((((((pnStack0000000000000008->Fragment).len == (pnStack0000000000000010->Fragment).len &&
         ((pnStack0000000000000008->RawFragment).len == (pnStack0000000000000010->RawFragment).len))
        && (runtime_memequal(), extraout_AL != '\0')) &&
       (((runtime_memequal(), extraout_AL_00 != '\0' && (runtime_memequal(), extraout_AL_01 != '\0')
         ) && ((runtime_memequal(), extraout_AL_02 != '\0' &&
               ((runtime_memequal(), extraout_AL_03 != '\0' &&
                (runtime_memequal(), extraout_AL_04 != '\0')))))))) &&
      (runtime_memequal(), extraout_AL_05 != '\0')))) {
    runtime_memequal();
  }
  return;
}



// WARNING: Unknown calling convention

void crypto_md5_init_0(void)

{
  func___hash_Hash ***extraout_RAX;
  func___hash_Hash ***pppfVar1;
  undefined8 extraout_RCX;
  undefined8 *extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (2 < (uint)crypto_hashes.len) {
    pppfVar1 = crypto_hashes.array;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = extraout_RCX;
      pppfVar1 = extraout_RAX;
    }
    pppfVar1[2] = (func___hash_Hash **)&PTR_crypto_md5_New_008ec900;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndexU();
}



// WARNING: Unknown calling convention

void crypto_md5___digest__Reset(crypto_md5_digest *d)

{
  undefined4 in_XMM15_Da;
  undefined4 in_XMM15_Db;
  undefined4 in_XMM15_Dc;
  undefined4 in_XMM15_Dd;
  
  *(undefined8 *)d->s = 0xefcdab8967452301;
  *(undefined8 *)(d->s + 2) = 0x1032547698badcfe;
  *(undefined4 *)&d->nx = in_XMM15_Da;
  *(undefined4 *)((int)&d->nx + 4) = in_XMM15_Db;
  *(undefined4 *)&d->len = in_XMM15_Dc;
  *(undefined4 *)((int)&d->len + 4) = in_XMM15_Dd;
  return;
}



// WARNING: Removing unreachable block (ram,0x006860a3)
// WARNING: Removing unreachable block (ram,0x006860dc)

void crypto_md5___digest__MarshalBinary(crypto_md5_digest *d,__uint8 ~r0,error ~r1)

{
  dword dVar1;
  undefined4 *oldPtr;
  undefined4 *extraout_RAX;
  undefined4 *extraout_RAX_00;
  undefined4 *oldPtr_00;
  uint extraout_RCX;
  uint oldCap;
  int iVar2;
  uint uVar3;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint uVar4;
  void *in_RDI;
  void *extraout_RDI;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffff88;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,0x5c,in_RDI);
  *oldPtr = 0x135646d;
  dVar1 = d->s[0];
  oldPtr[1] = dVar1 >> 0x18 | (dVar1 & 0xff0000) >> 8 | (dVar1 & 0xff00) << 8 | dVar1 << 0x18;
  dVar1 = d->s[1];
  oldPtr[2] = dVar1 >> 0x18 | (dVar1 & 0xff0000) >> 8 | (dVar1 & 0xff00) << 8 | dVar1 << 0x18;
  dVar1 = d->s[2];
  oldPtr[3] = dVar1 >> 0x18 | (dVar1 & 0xff0000) >> 8 | (dVar1 & 0xff00) << 8 | dVar1 << 0x18;
  dVar1 = d->s[3];
  oldCap = 0x5c;
  oldPtr[4] = dVar1 >> 0x18 | (dVar1 & 0xff0000) >> 8 | (dVar1 & 0xff00) << 8 | dVar1 << 0x18;
  uVar4 = d->nx;
  if (0x40 < uVar4) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  uVar3 = uVar4 + 0x14;
  oldPtr_00 = oldPtr;
  if (0x5c < uVar3) {
    runtime_growslice(oldPtr,uVar3,0x5c,uVar4,(internal_abi_Type *)&DAT_00807920,
                      in_stack_ffffffffffffff88);
    oldPtr_00 = extraout_RAX;
    oldCap = extraout_RCX;
    uVar3 = extraout_RBX;
  }
  runtime_memmove(oldPtr_00 + 5,d->x,uVar4);
  iVar2 = uVar3 - d->nx;
  if (oldCap < iVar2 + 0x40U) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  uVar4 = iVar2 + 0x48;
  uVar3 = d->len;
  if (oldCap < uVar4) {
    runtime_growslice(oldPtr_00,uVar4,oldCap,8,(internal_abi_Type *)&DAT_00807920,
                      in_stack_ffffffffffffff88);
    oldPtr_00 = extraout_RAX_00;
    uVar4 = extraout_RBX_00;
  }
  *(uint *)((uVar4 - 8) + (int)oldPtr_00) =
       uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |
       (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |
       (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;
  return;
}



void crypto_md5___digest__UnmarshalBinary(crypto_md5_digest *d,__uint8 b,error ~r0)

{
  dword dVar1;
  int iVar2;
  int iVar3;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  int in_RCX;
  sdword *in_RBX;
  uint uVar4;
  int in_RDI;
  uint uVar5;
  uint uVar6;
  undefined *__src;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((3 < in_RCX) && (*in_RBX == 0x135646d)) {
    if (in_RCX == 0x5c) {
      uVar4 = (uint)((dword)(-(in_RDI + -8) >> 0x3f) & 4);
      iVar2 = uVar4 + 4;
      uVar5 = (uint)((dword)(-(in_RDI + -0xc) >> 0x3f) & 4);
      iVar3 = uVar5 + iVar2;
      uVar6 = (uint)((dword)(-(in_RDI + -0x10) >> 0x3f) & 4);
      __src = (undefined *)
              ((int)in_RBX + (uint)((dword)(-(in_RDI + -0x14) >> 0x3f) & 4) + uVar6 + iVar3);
      dVar1 = in_RBX[1];
      d->s[0] = dVar1 >> 0x18 | (dVar1 & 0xff0000) >> 8 | (dVar1 & 0xff00) << 8 | dVar1 << 0x18;
      dVar1 = *(dword *)((int)in_RBX + uVar4 + 4);
      d->s[1] = dVar1 >> 0x18 | (dVar1 & 0xff0000) >> 8 | (dVar1 & 0xff00) << 8 | dVar1 << 0x18;
      dVar1 = *(dword *)((int)in_RBX + uVar5 + iVar2);
      d->s[2] = dVar1 >> 0x18 | (dVar1 & 0xff0000) >> 8 | (dVar1 & 0xff00) << 8 | dVar1 << 0x18;
      dVar1 = *(dword *)((int)in_RBX + uVar6 + iVar3);
      d->s[3] = dVar1 >> 0x18 | (dVar1 & 0xff0000) >> 8 | (dVar1 & 0xff00) << 8 | dVar1 << 0x18;
      if (d->x != __src) {
        runtime_memmove(d->x,__src,0x40);
      }
      uVar4 = *(uint *)(__src + ((dword)(-(in_RDI + -0x54) >> 0x3f) & 0x40));
      uVar5 = uVar4 >> 0x38 | (uVar4 & 0xff000000000000) >> 0x28 | (uVar4 & 0xff0000000000) >> 0x18
              | (uVar4 & 0xff00000000) >> 8;
      d->len = uVar5 | (uVar4 & 0xff000000) << 8 | (uVar4 & 0xff0000) << 0x18 |
               (uVar4 & 0xff00) << 0x28 | uVar4 << 0x38;
      d->nx = (uint)((dword)uVar5 & 0x3f);
      return;
    }
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,in_RBX);
    extraout_RAX_00[1] = 0x23;
    *extraout_RAX_00 = &DAT_008c20e7;
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0083e560,in_RBX);
  extraout_RAX[1] = 0x29;
  *extraout_RAX = &DAT_008c543d;
  return;
}



void crypto_md5_New(hash_Hash ~r0)

{
  undefined8 *extraout_RAX;
  crypto_md5_digest *d;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  undefined in_XMM15 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00878920,in_RBX);
  *extraout_RAX = 0xefcdab8967452301;
  extraout_RAX[1] = 0x1032547698badcfe;
  *(undefined (*) [16])(extraout_RAX + 10) = in_XMM15;
  return;
}



void crypto_md5___digest__Size(crypto_md5_digest *d,int ~r0)

{
  return;
}



void crypto_md5___digest__BlockSize(crypto_md5_digest *d,int ~r0)

{
  return;
}



void crypto_md5___digest__Write(crypto_md5_digest *d,__uint8 p,int nn,error err)

{
  uint uVar1;
  uint in_RCX;
  int iVar2;
  int n;
  size_t __n;
  int in_RDI;
  int n_1;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  d->len = d->len + in_RCX;
  uVar1 = d->nx;
  if (0 < (int)uVar1) {
    if (0x40 < uVar1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    iVar2 = uVar1 - 0x40;
    n = -iVar2;
    if (SBORROW8(in_RCX,-iVar2) != (int)(in_RCX + iVar2) < 0) {
      n = in_RCX;
    }
    if ((uint8 *)nn != d->x + (iVar2 >> 0x3f & uVar1)) {
      runtime_memmove(d->x + (iVar2 >> 0x3f & uVar1),(void *)nn,n);
    }
    iVar2 = d->nx + n;
    d->nx = iVar2;
    if (iVar2 == 0x40) {
      crypto_md5_block();
      d->nx = 0;
    }
    if (in_RCX < (uint)n) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    in_RDI = in_RDI - n;
    in_RCX = in_RCX - n;
    nn = nn + (-in_RDI >> 0x3f & n);
  }
  if (0x3f < (int)in_RCX) {
    crypto_md5_block();
    nn = nn + ((int)((in_RCX & 0xffffffffffffffc0) - in_RDI) >> 0x3f & in_RCX & 0xffffffffffffffc0);
    in_RCX = in_RCX - (in_RCX & 0xffffffffffffffc0);
  }
  if (in_RCX != 0) {
    __n = 0x40;
    if ((int)in_RCX < 0x40) {
      __n = in_RCX;
    }
    if ((uint8 *)nn != d->x) {
      runtime_memmove(d->x,(void *)nn,__n);
    }
    d->nx = __n;
  }
  return;
}



void crypto_md5___digest__Sum(crypto_md5_digest *d,__uint8 in,__uint8 ~r0)

{
  uint8 ~r0_00 [16];
  runtime_slice ~r0_01;
  void *extraout_RAX;
  int in_RCX;
  undefined4 *puVar1;
  void *in_RBX;
  uint in_RDI;
  int unaff_R14;
  undefined4 in_stack_ffffffffffffff58;
  undefined4 in_stack_ffffffffffffff5c;
  undefined4 in_stack_ffffffffffffff60;
  undefined4 in_stack_ffffffffffffff64;
  int in_stack_ffffffffffffff68;
  crypto_md5_digest local_68;
  
  while (local_68.x + 0x30 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  FUN_0046d10c();
  ~r0_00[4] = (char)in_stack_ffffffffffffff5c;
  ~r0_00[5] = (char)((dword)in_stack_ffffffffffffff5c >> 8);
  ~r0_00[6] = (char)((dword)in_stack_ffffffffffffff5c >> 0x10);
  ~r0_00[7] = (char)((dword)in_stack_ffffffffffffff5c >> 0x18);
  ~r0_00[0] = (char)in_stack_ffffffffffffff58;
  ~r0_00[1] = (char)((dword)in_stack_ffffffffffffff58 >> 8);
  ~r0_00[2] = (char)((dword)in_stack_ffffffffffffff58 >> 0x10);
  ~r0_00[3] = (char)((dword)in_stack_ffffffffffffff58 >> 0x18);
  ~r0_00[8] = (char)in_stack_ffffffffffffff60;
  ~r0_00[9] = (char)((dword)in_stack_ffffffffffffff60 >> 8);
  ~r0_00[10] = (char)((dword)in_stack_ffffffffffffff60 >> 0x10);
  ~r0_00[11] = (char)((dword)in_stack_ffffffffffffff60 >> 0x18);
  ~r0_00[12] = (char)in_stack_ffffffffffffff64;
  ~r0_00[13] = (char)((dword)in_stack_ffffffffffffff64 >> 8);
  ~r0_00[14] = (char)((dword)in_stack_ffffffffffffff64 >> 0x10);
  ~r0_00[15] = (char)((dword)in_stack_ffffffffffffff64 >> 0x18);
  crypto_md5___digest__checkSum(&local_68,~r0_00);
  if (in_RDI < in_RCX + 0x10U) {
    ~r0_01.array._4_4_ = in_stack_ffffffffffffff5c;
    ~r0_01.array._0_4_ = in_stack_ffffffffffffff58;
    ~r0_01.len._0_4_ = in_stack_ffffffffffffff60;
    ~r0_01.len._4_4_ = in_stack_ffffffffffffff64;
    ~r0_01.cap = in_stack_ffffffffffffff68;
    runtime_growslice(in_RBX,in_RCX + 0x10U,in_RDI,0x10,(internal_abi_Type *)&DAT_00807920,~r0_01);
    in_RBX = extraout_RAX;
  }
  puVar1 = (undefined4 *)(in_RCX + (int)in_RBX);
  *puVar1 = in_stack_ffffffffffffff58;
  puVar1[1] = in_stack_ffffffffffffff5c;
  puVar1[2] = in_stack_ffffffffffffff60;
  puVar1[3] = in_stack_ffffffffffffff64;
  return;
}



void crypto_md5___digest__checkSum(crypto_md5_digest *d,uint8 ~r0 [16])

{
  int iVar1;
  __uint8 p;
  error err;
  uint uVar2;
  uint64 pad;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff80;
  int in_stack_ffffffffffffff90;
  undefined8 in_stack_ffffffffffffff98;
  undefined4 in_stack_ffffffffffffffa0;
  undefined4 in_stack_ffffffffffffffa4;
  int local_50 [9];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_50[0] = 0x80;
  uVar2 = (uint)(-((sdword)d->len + -0x37) & 0x3f);
  iVar1 = uVar2 - 0x47;
  if (6 < (uint)-iVar1 && iVar1 != -7) {
    *(uint64 *)((int)local_50 + (uVar2 + 1 & iVar1 >> 0x3f)) = d->len << 3;
    p.cap = in_stack_ffffffffffffff90;
    p.array = (uint8 *)in_stack_ffffffffffffff80._type;
    p.len = (int)in_stack_ffffffffffffff80.data;
    err.data._0_4_ = in_stack_ffffffffffffffa0;
    err.tab = (runtime_itab *)in_stack_ffffffffffffff98;
    err.data._4_4_ = in_stack_ffffffffffffffa4;
    crypto_md5___digest__Write(d,p,(int)local_50,err);
    if (d->nx == 0) {
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff80);
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Unknown calling convention

void crypto_md5_block(void)

{
  sdword *psVar1;
  dword dVar2;
  sdword sVar3;
  dword dVar4;
  dword dVar5;
  dword dVar6;
  dword dVar7;
  dword dVar8;
  dword dVar9;
  sdword *in_stack_00000008;
  sdword *in_stack_00000010;
  uint in_stack_00000018;
  
  psVar1 = (sdword *)((int)in_stack_00000010 + (in_stack_00000018 & 0xffffffffffffffc0));
  sVar3 = *in_stack_00000008;
  dVar9 = in_stack_00000008[1];
  dVar4 = in_stack_00000008[2];
  dVar7 = in_stack_00000008[3];
  if (in_stack_00000010 != psVar1) {
    do {
      dVar2 = sVar3 + -0x28955b88 + *in_stack_00000010 + ((dVar7 ^ dVar4) & dVar9 ^ dVar7);
      dVar2 = (dVar2 * 0x80 | dVar2 >> 0x19) + dVar9;
      dVar5 = dVar7 + 0xe8c7b756 + in_stack_00000010[1] + ((dVar4 ^ dVar9) & dVar2 ^ dVar4);
      dVar6 = (dVar5 * 0x1000 | dVar5 >> 0x14) + dVar2;
      dVar5 = dVar4 + 0x242070db + in_stack_00000010[2] + ((dVar9 ^ dVar2) & dVar6 ^ dVar9);
      dVar5 = (dVar5 * 0x20000 | dVar5 >> 0xf) + dVar6;
      dVar8 = dVar9 + 0xc1bdceee + in_stack_00000010[3] + ((dVar2 ^ dVar6) & dVar5 ^ dVar2);
      dVar8 = (dVar8 * 0x400000 | dVar8 >> 10) + dVar5;
      dVar2 = dVar2 + 0xf57c0faf + in_stack_00000010[4] + ((dVar6 ^ dVar5) & dVar8 ^ dVar6);
      dVar2 = (dVar2 * 0x80 | dVar2 >> 0x19) + dVar8;
      dVar6 = dVar6 + 0x4787c62a + in_stack_00000010[5] + ((dVar5 ^ dVar8) & dVar2 ^ dVar5);
      dVar6 = (dVar6 * 0x1000 | dVar6 >> 0x14) + dVar2;
      dVar5 = dVar5 + 0xa8304613 + in_stack_00000010[6] + ((dVar8 ^ dVar2) & dVar6 ^ dVar8);
      dVar5 = (dVar5 * 0x20000 | dVar5 >> 0xf) + dVar6;
      dVar8 = dVar8 + 0xfd469501 + in_stack_00000010[7] + ((dVar2 ^ dVar6) & dVar5 ^ dVar2);
      dVar8 = (dVar8 * 0x400000 | dVar8 >> 10) + dVar5;
      dVar2 = dVar2 + 0x698098d8 + in_stack_00000010[8] + ((dVar6 ^ dVar5) & dVar8 ^ dVar6);
      dVar2 = (dVar2 * 0x80 | dVar2 >> 0x19) + dVar8;
      dVar6 = dVar6 + 0x8b44f7af + in_stack_00000010[9] + ((dVar5 ^ dVar8) & dVar2 ^ dVar5);
      dVar6 = (dVar6 * 0x1000 | dVar6 >> 0x14) + dVar2;
      dVar5 = (dVar5 - 0xa44f) + in_stack_00000010[10] + ((dVar8 ^ dVar2) & dVar6 ^ dVar8);
      dVar5 = (dVar5 * 0x20000 | dVar5 >> 0xf) + dVar6;
      dVar8 = dVar8 + 0x895cd7be + in_stack_00000010[0xb] + ((dVar2 ^ dVar6) & dVar5 ^ dVar2);
      dVar8 = (dVar8 * 0x400000 | dVar8 >> 10) + dVar5;
      dVar2 = dVar2 + 0x6b901122 + in_stack_00000010[0xc] + ((dVar6 ^ dVar5) & dVar8 ^ dVar6);
      dVar2 = (dVar2 * 0x80 | dVar2 >> 0x19) + dVar8;
      dVar6 = dVar6 + 0xfd987193 + in_stack_00000010[0xd] + ((dVar5 ^ dVar8) & dVar2 ^ dVar5);
      dVar6 = (dVar6 * 0x1000 | dVar6 >> 0x14) + dVar2;
      dVar5 = dVar5 + 0xa679438e + in_stack_00000010[0xe] + ((dVar8 ^ dVar2) & dVar6 ^ dVar8);
      dVar5 = (dVar5 * 0x20000 | dVar5 >> 0xf) + dVar6;
      dVar8 = dVar8 + 0x49b40821 + in_stack_00000010[0xf] + ((dVar2 ^ dVar6) & dVar5 ^ dVar2);
      dVar8 = (dVar8 * 0x400000 | dVar8 >> 10) + dVar5;
      dVar2 = dVar2 + 0xf61e2562 + in_stack_00000010[1] + (dVar6 & dVar8 | ~dVar6 & dVar5);
      dVar2 = (dVar2 * 0x20 | dVar2 >> 0x1b) + dVar8;
      dVar6 = dVar6 + 0xc040b340 + in_stack_00000010[6] + (dVar5 & dVar2 | ~dVar5 & dVar8);
      dVar6 = (dVar6 * 0x200 | dVar6 >> 0x17) + dVar2;
      dVar5 = dVar5 + 0x265e5a51 + in_stack_00000010[0xb] + (dVar8 & dVar6 | ~dVar8 & dVar2);
      dVar5 = (dVar5 * 0x4000 | dVar5 >> 0x12) + dVar6;
      dVar8 = dVar8 + 0xe9b6c7aa + *in_stack_00000010 + (dVar2 & dVar5 | ~dVar2 & dVar6);
      dVar8 = (dVar8 * 0x100000 | dVar8 >> 0xc) + dVar5;
      dVar2 = dVar2 + 0xd62f105d + in_stack_00000010[5] + (dVar6 & dVar8 | ~dVar6 & dVar5);
      dVar2 = (dVar2 * 0x20 | dVar2 >> 0x1b) + dVar8;
      dVar6 = dVar6 + 0x2441453 + in_stack_00000010[10] + (dVar5 & dVar2 | ~dVar5 & dVar8);
      dVar6 = (dVar6 * 0x200 | dVar6 >> 0x17) + dVar2;
      dVar5 = dVar5 + 0xd8a1e681 + in_stack_00000010[0xf] + (dVar8 & dVar6 | ~dVar8 & dVar2);
      dVar5 = (dVar5 * 0x4000 | dVar5 >> 0x12) + dVar6;
      dVar8 = dVar8 + 0xe7d3fbc8 + in_stack_00000010[4] + (dVar2 & dVar5 | ~dVar2 & dVar6);
      dVar8 = (dVar8 * 0x100000 | dVar8 >> 0xc) + dVar5;
      dVar2 = dVar2 + 0x21e1cde6 + in_stack_00000010[9] + (dVar6 & dVar8 | ~dVar6 & dVar5);
      dVar2 = (dVar2 * 0x20 | dVar2 >> 0x1b) + dVar8;
      dVar6 = dVar6 + 0xc33707d6 + in_stack_00000010[0xe] + (dVar5 & dVar2 | ~dVar5 & dVar8);
      dVar6 = (dVar6 * 0x200 | dVar6 >> 0x17) + dVar2;
      dVar5 = dVar5 + 0xf4d50d87 + in_stack_00000010[3] + (dVar8 & dVar6 | ~dVar8 & dVar2);
      dVar5 = (dVar5 * 0x4000 | dVar5 >> 0x12) + dVar6;
      dVar8 = dVar8 + 0x455a14ed + in_stack_00000010[8] + (dVar2 & dVar5 | ~dVar2 & dVar6);
      dVar8 = (dVar8 * 0x100000 | dVar8 >> 0xc) + dVar5;
      dVar2 = dVar2 + 0xa9e3e905 + in_stack_00000010[0xd] + (dVar6 & dVar8 | ~dVar6 & dVar5);
      dVar2 = (dVar2 * 0x20 | dVar2 >> 0x1b) + dVar8;
      dVar6 = dVar6 + 0xfcefa3f8 + in_stack_00000010[2] + (dVar5 & dVar2 | ~dVar5 & dVar8);
      dVar6 = (dVar6 * 0x200 | dVar6 >> 0x17) + dVar2;
      dVar5 = dVar5 + 0x676f02d9 + in_stack_00000010[7] + (dVar8 & dVar6 | ~dVar8 & dVar2);
      dVar5 = (dVar5 * 0x4000 | dVar5 >> 0x12) + dVar6;
      dVar8 = dVar8 + 0x8d2a4c8a + in_stack_00000010[0xc] + (dVar2 & dVar5 | ~dVar2 & dVar6);
      dVar8 = (dVar8 * 0x100000 | dVar8 >> 0xc) + dVar5;
      dVar2 = (dVar2 - 0x5c6be) + in_stack_00000010[5] + (dVar5 ^ dVar6 ^ dVar8);
      dVar2 = (dVar2 * 0x10 | dVar2 >> 0x1c) + dVar8;
      dVar6 = dVar6 + 0x8771f681 + in_stack_00000010[8] + (dVar8 ^ dVar5 ^ dVar2);
      dVar6 = (dVar6 * 0x800 | dVar6 >> 0x15) + dVar2;
      dVar5 = dVar5 + 0x6d9d6122 + in_stack_00000010[0xb] + (dVar2 ^ dVar8 ^ dVar6);
      dVar5 = (dVar5 * 0x10000 | dVar5 >> 0x10) + dVar6;
      dVar8 = dVar8 + 0xfde5380c + in_stack_00000010[0xe] + (dVar6 ^ dVar2 ^ dVar5);
      dVar8 = (dVar8 * 0x800000 | dVar8 >> 9) + dVar5;
      dVar2 = dVar2 + 0xa4beea44 + in_stack_00000010[1] + (dVar5 ^ dVar6 ^ dVar8);
      dVar2 = (dVar2 * 0x10 | dVar2 >> 0x1c) + dVar8;
      dVar6 = dVar6 + 0x4bdecfa9 + in_stack_00000010[4] + (dVar8 ^ dVar5 ^ dVar2);
      dVar6 = (dVar6 * 0x800 | dVar6 >> 0x15) + dVar2;
      dVar5 = dVar5 + 0xf6bb4b60 + in_stack_00000010[7] + (dVar2 ^ dVar8 ^ dVar6);
      dVar5 = (dVar5 * 0x10000 | dVar5 >> 0x10) + dVar6;
      dVar8 = dVar8 + 0xbebfbc70 + in_stack_00000010[10] + (dVar6 ^ dVar2 ^ dVar5);
      dVar8 = (dVar8 * 0x800000 | dVar8 >> 9) + dVar5;
      dVar2 = dVar2 + 0x289b7ec6 + in_stack_00000010[0xd] + (dVar5 ^ dVar6 ^ dVar8);
      dVar2 = (dVar2 * 0x10 | dVar2 >> 0x1c) + dVar8;
      dVar6 = dVar6 + 0xeaa127fa + *in_stack_00000010 + (dVar8 ^ dVar5 ^ dVar2);
      dVar6 = (dVar6 * 0x800 | dVar6 >> 0x15) + dVar2;
      dVar5 = dVar5 + 0xd4ef3085 + in_stack_00000010[3] + (dVar2 ^ dVar8 ^ dVar6);
      dVar5 = (dVar5 * 0x10000 | dVar5 >> 0x10) + dVar6;
      dVar8 = dVar8 + 0x4881d05 + in_stack_00000010[6] + (dVar6 ^ dVar2 ^ dVar5);
      dVar8 = (dVar8 * 0x800000 | dVar8 >> 9) + dVar5;
      dVar2 = dVar2 + 0xd9d4d039 + in_stack_00000010[9] + (dVar5 ^ dVar6 ^ dVar8);
      dVar2 = (dVar2 * 0x10 | dVar2 >> 0x1c) + dVar8;
