


void net_addrPortToSockaddrInet4(net_netip_AddrPort ap,syscall_SockaddrInet4 ~r0,error ~r1)

{
  net_netip_Addr ip;
  net_netip_Addr ip_00;
  string ~r0_00;
  uint8 in_EAX [4];
  char *extraout_RAX;
  char **extraout_RAX_00;
  char **extraout_RAX_01;
  char **ppcVar1;
  internal_intern_Value *in_RCX;
  char *~r0_01;
  char **extraout_R11;
  int unaff_R14;
  undefined4 in_stack_ffffffffffffffa0;
  undefined in_stack_ffffffffffffffa4 [20];
  unkbyte10 in_stack_ffffffffffffffb8;
  undefined2 in_stack_ffffffffffffffc2;
  undefined4 in_stack_ffffffffffffffc4;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (net_netip_z4 == in_RCX) {
    ip_00._4_20_ = in_stack_ffffffffffffffa4;
    ip_00.addr.hi._0_4_ = in_stack_ffffffffffffffa0;
    net_netip_Addr_As4(ip_00,in_EAX);
    return;
  }
  ip._4_20_ = in_stack_ffffffffffffffa4;
  ip.addr.hi._0_4_ = in_stack_ffffffffffffffa0;
  ~r0_00.len._2_2_ = in_stack_ffffffffffffffc2;
  ~r0_00._0_10_ = in_stack_ffffffffffffffb8;
  ~r0_00.len._4_4_ = in_stack_ffffffffffffffc4;
  net_netip_Addr_String(ip,~r0_00);
  runtime_newobject((internal_abi_Type *)&DAT_0084eb20,~r0_01);
  extraout_RAX_00[1] = (char *)0x10;
  *extraout_RAX_00 =
       "non-IPv4 addressnon-IPv6 addressunknown network no colon on line: value of type integer overflowgcshrinkstackofftracefpunwindoffGC scavenge waitGC worker (idle)SIGNONE: no trap out of bounds [/gc/gogc:percent, not a functiongc: unswept span KiB work (bg),  mheap.sweepgen=runtime: nelems=workbuf is emptymSpanList.removemSpanList.insertbad special kindbad summary dataruntime: addr = runtime: base = runtime: head =  already; errno=\nruntime stack:\ninvalid g statuscastogscanstatusbad g transitionschedule: in cgoGOTRACEBACK=nonereflect mismatch untyped locals missing stackmapbad symbol tablenon-Go function\n not in ranges:\nsigaction failedinvalid argumentinvalid exchangeobject is remotemessage too longno route to hostremote I/O errorsource_code_infocc_enable_arenascsharp_namespacephp_class_prefixclient_streamingserver_streamingedition_defaultsmessage_encodingidentifier_valueleading_commentsunknown type: %Treflect.MakeFuncDeadlineExceededPermissionDeniedINVALID_ARGUMENTinvalid code: %dinvalid code: %q\"ALREADY_EXISTS\"ServerName: %q, Attributes: %v, <stream: %p, %v>^{h(?::(\\d+))?}$^{m(?::(\\d+))?}$after object keyhttp: nil Cookiecontent-encodingcontent-languagecontent-locationwww-authenticate%s %s HTTP/1.1\r\nUser-Agent: %s\r\nAlready ReportedMultiple ChoicesPayment RequiredUpgrade RequiredContent-Length: SETTINGS_TIMEOUTFRAME_SIZE_ERRORout of range: %q2384185791015625Imperial_AramaicMeroitic_CursiveZanabazar_Squareinvalid ip:port invalid AddrPortinvalid dns nameunpacking headerRCodeFormatErrorGODEBUG: value \"must be positiveinvalid encodingregexp: Compile(quoted-printableContent-Language"
  ;
  extraout_RAX_00[3] = ~r0_01;
  ppcVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RAX;
    ppcVar1 = extraout_RAX_01;
  }
  ppcVar1[2] = extraout_RAX;
  return;
}



void net_addrPortToSockaddrInet6(net_netip_AddrPort ap,syscall_SockaddrInet6 ~r0,error ~r1)

{
  net_netip_Addr ip;
  net_netip_Addr ip_00;
  char *extraout_RAX;
  char **extraout_RAX_00;
  char **extraout_RAX_01;
  char **ppcVar1;
  internal_intern_Value *in_RCX;
  char *~r0_00;
  int __c;
  char **extraout_R11;
  int unaff_R14;
  undefined4 in_stack_ffffffffffffff68;
  undefined4 in_stack_ffffffffffffff6c;
  undefined4 in_stack_ffffffffffffff70;
  undefined4 in_stack_ffffffffffffff74;
  internal_intern_Value *in_stack_ffffffffffffff78;
  string in_stack_ffffffffffffff80;
  char *local_18;
  internal_intern_Value *local_10;
  
  while (&local_18 <= *(char ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (net_netip_z0 == in_RCX) {
    ip_00.addr.hi._4_4_ = in_stack_ffffffffffffff6c;
    ip_00.addr.hi._0_4_ = in_stack_ffffffffffffff68;
    ip_00.addr.lo._0_4_ = in_stack_ffffffffffffff70;
    ip_00.addr.lo._4_4_ = in_stack_ffffffffffffff74;
    ip_00.z = in_stack_ffffffffffffff78;
    net_netip_Addr_String(ip_00,in_stack_ffffffffffffff80);
    local_18 = extraout_RAX;
    runtime_newobject((internal_abi_Type *)&DAT_0084eb20,~r0_00);
    extraout_RAX_00[1] = (char *)0x10;
    *extraout_RAX_00 =
         "non-IPv6 addressunknown network no colon on line: value of type integer overflowgcshrinkstackofftracefpunwindoffGC scavenge waitGC worker (idle)SIGNONE: no trap out of bounds [/gc/gogc:percent, not a functiongc: unswept span KiB work (bg),  mheap.sweepgen=runtime: nelems=workbuf is emptymSpanList.removemSpanList.insertbad special kindbad summary dataruntime: addr = runtime: base = runtime: head =  already; errno=\nruntime stack:\ninvalid g statuscastogscanstatusbad g transitionschedule: in cgoGOTRACEBACK=nonereflect mismatch untyped locals missing stackmapbad symbol tablenon-Go function\n not in ranges:\nsigaction failedinvalid argumentinvalid exchangeobject is remotemessage too longno route to hostremote I/O errorsource_code_infocc_enable_arenascsharp_namespacephp_class_prefixclient_streamingserver_streamingedition_defaultsmessage_encodingidentifier_valueleading_commentsunknown type: %Treflect.MakeFuncDeadlineExceededPermissionDeniedINVALID_ARGUMENTinvalid code: %dinvalid code: %q\"ALREADY_EXISTS\"ServerName: %q, Attributes: %v, <stream: %p, %v>^{h(?::(\\d+))?}$^{m(?::(\\d+))?}$after object keyhttp: nil Cookiecontent-encodingcontent-languagecontent-locationwww-authenticate%s %s HTTP/1.1\r\nUser-Agent: %s\r\nAlready ReportedMultiple ChoicesPayment RequiredUpgrade RequiredContent-Length: SETTINGS_TIMEOUTFRAME_SIZE_ERRORout of range: %q2384185791015625Imperial_AramaicMeroitic_CursiveZanabazar_Squareinvalid ip:port invalid AddrPortinvalid dns nameunpacking headerRCodeFormatErrorGODEBUG: value \"must be positiveinvalid encodingregexp: Compile(quoted-printableContent-Language"
    ;
    extraout_RAX_00[3] = ~r0_00;
    ppcVar1 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = local_18;
      ppcVar1 = extraout_RAX_01;
    }
    ppcVar1[2] = local_18;
    return;
  }
  ip.addr.hi._4_4_ = in_stack_ffffffffffffff6c;
  ip.addr.hi._0_4_ = in_stack_ffffffffffffff68;
  ip.addr.lo._0_4_ = in_stack_ffffffffffffff70;
  ip.addr.lo._4_4_ = in_stack_ffffffffffffff74;
  ip.z = in_stack_ffffffffffffff78;
  local_10 = in_RCX;
  net_netip_Addr_As16(ip,(uint8  [16])in_stack_ffffffffffffff80);
  if (local_10 == (internal_intern_Value *)0x0) {
    __c = 0;
  }
  else if ((local_10->cmpVal)._type == (internal_abi_Type *)&DAT_008075e0) {
                    // WARNING: Load size is inaccurate
    __c = *(local_10->cmpVal).data;
  }
  else {
    __c = 0;
  }
  net___ipv6ZoneCache__index((char *)&net_zoneCache,__c);
  return;
}



void net_lookupPortMap(string network,string service,int port,error error)

{
  string ~r0;
  runtime_hmap **extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 extraout_RAX_02;
  undefined8 uVar1;
  int port_1;
  unkbyte9 *in_RCX;
  int n;
  undefined8 *extraout_RCX;
  map_string_int m;
  runtime_hmap *h;
  bool ok;
  bool ok_1;
  int in_RBX;
  void *extraout_RBX;
  void *~r0_00;
  undefined8 extraout_RBX_00;
  void *extraout_RBX_01;
  uint in_RDI;
  int i;
  uint8 b;
  undefined8 *extraout_R11;
  int unaff_R14;
  undefined in_XMM15 [16];
  string in_stack_ffffffffffffff78;
  string in_stack_ffffffffffffff88;
  string in_stack_ffffffffffffff98;
  uint8 *in_stack_ffffffffffffffa8;
  unkbyte9 local_39;
  undefined7 uStack_30;
  unkbyte9 Stack_29;
  runtime_hmap *local_20;
  undefined8 *local_18;
  undefined *local_10;
  
  while (&stack0xfffffffffffffff8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RBX == 4) {
    if (*(char *)port < 'u') {
      if ((*(sdword *)port == 0x34706374) || (*(sdword *)port == 0x36706374)) {
        in_RBX = 3;
        port = (int)&DAT_008ae2d3;
      }
    }
    else if ((*(sdword *)port == 0x34706475) || (*(sdword *)port == 0x36706475)) {
      in_RBX = 3;
      port = (int)&DAT_008ae330;
    }
  }
  local_10 = (undefined *)port;
  runtime_mapaccess2_faststr
            ((internal_abi_MapType *)&DAT_0082c740,(runtime_hmap *)net_services,
             in_stack_ffffffffffffff78,(void *)port,SUB81(in_RBX,0));
  ~r0_00 = extraout_RBX;
  if ((char)extraout_RBX != '\0') {
    local_39 = in_XMM15._0_9_;
    uStack_30 = in_XMM15._0_7_;
    Stack_29 = in_XMM15._7_9_;
    n = 0x19;
    if ((int)in_RDI < 0x19) {
      n = in_RDI;
    }
    h = *extraout_RAX;
    if (in_RCX != &local_39) {
      local_20 = *extraout_RAX;
      runtime_memmove(&local_39,in_RCX,n);
      h = local_20;
    }
    if (0x19 < (uint)n) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    for (i = 0; i < n; i = i + 1) {
      if ((byte)(*(char *)((int)&local_39 + i) + 0xbfU) < 0x1a) {
        *(char *)((int)&local_39 + i) = *(char *)((int)&local_39 + i) + ' ';
      }
    }
    runtime_mapaccess2_faststr
              ((internal_abi_MapType *)&DAT_0082c560,h,in_stack_ffffffffffffff78,&local_39,
               SUB81(n,0));
    ok_1 = SUB81(extraout_RBX_01,0);
    ~r0_00 = extraout_RBX_01;
    if ((ok_1 != false) && (in_RDI == n)) {
      return;
    }
  }
  runtime_newobject((internal_abi_Type *)&DAT_0084eb20,~r0_00);
  extraout_RAX_00[1] = 0xc;
  *extraout_RAX_00 = &DAT_008b432d;
  ~r0.len = n;
  ~r0.str = in_stack_ffffffffffffffa8;
  local_18 = extraout_RAX_00;
  runtime_concatstring3
            ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff78,in_stack_ffffffffffffff88,
             in_stack_ffffffffffffff98,~r0);
  local_18[3] = extraout_RBX_00;
  uVar1 = extraout_RAX_01;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_02;
    extraout_R11[1] = extraout_RCX[2];
    uVar1 = extraout_RAX_02;
    local_18 = extraout_RCX;
  }
  local_18[2] = uVar1;
  return;
}



void net___Resolver__LookupHost
               (net_Resolver *r,context_Context ctx,string host,__string addrs,error err)

{
  net_netip_Addr ~r0;
  __string addrs_00;
  error ~r1;
  error err_00;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  void *~r0_00;
  void *unaff_RBP;
  int in_RSI;
  undefined8 in_RDI;
  int extraout_RDI;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  int unaff_R14;
  undefined auVar2 [16];
  string in_stack_ffffffffffffffb8;
  net_netip_uint128 in_stack_ffffffffffffffc8;
  internal_intern_Value *in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_ffffffffffffffe0;
  runtime_itab *in_stack_fffffffffffffff0;
  undefined8 uVar3;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RSI != 0) {
    ~r0.z = in_stack_ffffffffffffffd8;
    ~r0.addr = in_stack_ffffffffffffffc8;
    ~r1.data = r;
    ~r1.tab = in_stack_ffffffffffffffe0;
    net_netip_ParseAddr(in_stack_ffffffffffffffb8,~r0,~r1);
    if (extraout_RDI != 0) {
      addrs_00.len = (int)in_stack_ffffffffffffffe0;
      addrs_00.array = (string *)in_stack_ffffffffffffffd8;
      addrs_00.cap = (int)r;
      err_00.data = unaff_RBP;
      err_00.tab = in_stack_fffffffffffffff0;
      net___Resolver__lookupHost
                (r,(context_Context)in_stack_ffffffffffffffb8,(string)in_stack_ffffffffffffffc8,
                 addrs_00,err_00);
      return;
    }
    runtime_newobject((internal_abi_Type *)&DAT_008117e0,~r0_00);
    extraout_RAX_02[1] = in_RSI;
    puVar1 = extraout_RAX_02;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_01 = in_RDI;
      puVar1 = extraout_RAX_03;
    }
    *puVar1 = in_RDI;
    return;
  }
  auVar2 = (*(code *)(net_errNoSuchHost.tab)->fun[0])(net_errNoSuchHost.data);
  runtime_newobject((internal_abi_Type *)&DAT_00885120,auVar2._8_8_);
  uVar3 = auVar2._0_8_;
  extraout_RAX[1] = auVar2._8_8_;
  puVar1 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = uVar3;
    puVar1 = extraout_RAX_00;
  }
  *puVar1 = uVar3;
  puVar1[3] = 0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = in_RDI;
    puVar1 = extraout_RAX_01;
  }
  puVar1[2] = in_RDI;
  *(undefined *)((int)puVar1 + 0x32) = 1;
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void net___Resolver__LookupIPAddr
               (net_Resolver *r,context_Context ctx,string host,__net_IPAddr ~r0,error ~r1)

{
  error ~r1_00;
  __net_IPAddr ~r0_00;
  void *in_RBX;
  undefined8 unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  context_Context in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  undefined8 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ctx.tab = (runtime_itab *)r;
  }
  ~r0_00.len = unaff_RBP;
  ~r0_00.array = (net_IPAddr *)in_stack_fffffffffffffff0;
  ~r0_00.cap = unaff_retaddr;
  ~r1_00.data = in_RBX;
  ~r1_00.tab = ctx.tab;
  net___Resolver__lookupIPAddr
            (r,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,~r0_00,
             ~r1_00);
  return;
}



void net___Resolver__LookupIP
               (net_Resolver *r,context_Context ctx,string network,string host,__net_IP ~r0,
               error ~r1)

{
  runtime_itab *prVar1;
  undefined8 uVar2;
  runtime_slice ~r0_00;
  string network_00;
  string net;
  net_addrList ~r0_01;
  error ~r1_00;
  short *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *puVar3;
  runtime_itab **extraout_RAX_03;
  void *extraout_RAX_04;
  void *oldPtr;
  void *extraout_RAX_05;
  void *extraout_RAX_06;
  int in_RCX;
  uint oldCap;
  uint extraout_RCX;
  uint extraout_RCX_00;
  runtime_itab **pprVar4;
  bool in_BL;
  int extraout_RBX;
  uint cap;
  uint uVar5;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  int iVar6;
  int extraout_RSI;
  void *in_RDI;
  int extraout_RDI;
  int extraout_RDI_00;
  uint newLen;
  internal_abi_InterfaceType *extraout_RDI_01;
  undefined8 in_R8;
  int in_R9;
  uint extraout_R10;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  internal_abi_InterfaceType *piVar7;
  internal_abi_InterfaceType **extraout_R11_01;
  internal_abi_Type *piVar8;
  int iVar9;
  int unaff_R14;
  undefined auVar10 [16];
  string in_stack_ffffffffffffff70;
  uint8 *in_stack_ffffffffffffff80;
  int in_stack_ffffffffffffff88;
  string in_stack_ffffffffffffff90;
  error in_stack_ffffffffffffffa0;
  int in_stack_ffffffffffffffb0;
  uint uVar11;
  runtime_itab *in_stack_ffffffffffffffb8;
  void *in_stack_ffffffffffffffc0;
  net_Resolver *local_10;
  
  while (&local_10 <= *(net_Resolver ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  network_00.len = in_stack_ffffffffffffff88;
  network_00.str = in_stack_ffffffffffffff80;
  local_10 = r;
  net_parseNetwork((context_Context)in_stack_ffffffffffffff70,network_00,in_BL,
                   in_stack_ffffffffffffff90,in_RCX,in_stack_ffffffffffffffa0);
  if (extraout_RDI != 0) {
    return;
  }
  if (extraout_RBX == 2) {
    if (*extraout_RAX == 0x7069) {
LAB_005f1cf5:
      if (in_R9 == 0) {
        auVar10 = (*(code *)(net_errNoSuchHost.tab)->fun[0])(net_errNoSuchHost.data);
        runtime_newobject((internal_abi_Type *)&DAT_00885120,auVar10._8_8_);
        extraout_RAX_00[1] = auVar10._8_8_;
        puVar3 = extraout_RAX_00;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11 = auVar10._0_8_;
          puVar3 = extraout_RAX_01;
        }
        *puVar3 = auVar10._0_8_;
        puVar3[3] = 0;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_00 = in_R8;
          puVar3 = extraout_RAX_02;
        }
        puVar3[2] = in_R8;
        *(undefined *)((int)puVar3 + 0x32) = 1;
        return;
      }
      net.len = in_stack_ffffffffffffff88;
      net.str = in_stack_ffffffffffffff80;
      ~r0_01.cap = in_stack_ffffffffffffffb0;
      ~r0_01.array = (net_Addr *)in_stack_ffffffffffffffa0.tab;
      ~r0_01.len = (int)in_stack_ffffffffffffffa0.data;
      ~r1_00.data = in_stack_ffffffffffffffc0;
      ~r1_00.tab = in_stack_ffffffffffffffb8;
      net___Resolver__internetAddrList
                (local_10,(context_Context)in_stack_ffffffffffffff70,net,in_stack_ffffffffffffff90,
                 ~r0_01,~r1_00);
      if (extraout_RDI_00 != 0) {
        return;
      }
      oldCap = cap;
      runtime_makeslice((internal_abi_Type *)&DAT_00891f40,0,cap,(void *)0x0);
      iVar6 = 0;
      newLen = 0;
      oldPtr = extraout_RAX_04;
      pprVar4 = extraout_RAX_03;
      uVar5 = oldCap;
      uVar11 = oldCap;
      while( true ) {
        if ((int)uVar5 <= iVar6) {
          return;
        }
        if (*pprVar4 != (runtime_itab *)go_itab__net_IPAddr_net_Addr) break;
        prVar1 = pprVar4[1];
        newLen = newLen + 1;
        piVar7 = prVar1->inter;
        piVar8 = prVar1->_type;
        uVar2 = *(undefined8 *)&prVar1->hash;
        if (oldCap < newLen) {
          ~r0_00.cap = (int)in_stack_ffffffffffffff80;
          ~r0_00.array = in_stack_ffffffffffffff70.str;
          ~r0_00.len = in_stack_ffffffffffffff70.len;
          uVar5 = uVar11;
          runtime_growslice(oldPtr,newLen,oldCap,1,(internal_abi_Type *)&DAT_00891f40,~r0_00);
          oldPtr = extraout_RAX_05;
          oldCap = extraout_RCX;
          newLen = extraout_RBX_00;
          uVar11 = uVar5;
        }
        iVar9 = newLen * 3;
        *(internal_abi_Type **)((int)oldPtr + newLen * 0x18 + -0x10) = piVar8;
        *(undefined8 *)((int)oldPtr + newLen * 0x18 + -8) = uVar2;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_01 = extraout_RDI_01;
          extraout_R11_01[1] =
               *(internal_abi_InterfaceType **)((int)extraout_RAX_06 + iVar9 * 8 + -0x18);
          oldPtr = extraout_RAX_06;
          oldCap = extraout_RCX_00;
          uVar5 = extraout_RBX_01;
          iVar6 = extraout_RSI;
          newLen = extraout_R10;
          piVar7 = extraout_RDI_01;
        }
        *(internal_abi_InterfaceType **)((int)oldPtr + iVar9 * 8 + -0x18) = piVar7;
        pprVar4 = pprVar4 + 2;
        iVar6 = iVar6 + 1;
      }
                    // WARNING: Subroutine does not return
      runtime_panicdottypeI
                (*pprVar4,(internal_abi_Type *)0x871c60,(internal_abi_Type *)&DAT_0083c720);
    }
  }
  else if ((extraout_RBX == 3) &&
          (((*extraout_RAX == 0x7069 && (*(char *)(extraout_RAX + 1) == '4')) ||
           ((*extraout_RAX == 0x7069 && (*(char *)(extraout_RAX + 1) == '6')))))) goto LAB_005f1cf5;
  runtime_convTstring(in_stack_ffffffffffffff70,in_RDI);
  return;
}



void net___Resolver__LookupNetIP
               (net_Resolver *r,context_Context ctx,string network,string host,__net_netip_Addr ~r0,
               error ~r1)

{
  __uint8 slice;
  runtime_slice ~r0_00;
  string network_00;
  net_netip_Addr ip;
  __net_IP ~r0_01;
  error ~r1_00;
  undefined8 *extraout_RAX;
  void *extraout_RAX_00;
  void *oldPtr;
  undefined8 extraout_RAX_01;
  void *extraout_RAX_02;
  int iVar1;
  undefined8 extraout_RCX;
  uint extraout_RCX_00;
  undefined8 extraout_RCX_01;
  uint newLen;
  uint cap;
  uint oldCap;
  undefined8 extraout_RBX;
  uint extraout_RBX_00;
  void *extraout_RSI;
  char extraout_DIL;
  bool ok;
  int extraout_RDI;
  uint extraout_R8;
  int extraout_R9;
  int iVar2;
  undefined8 *extraout_R11;
  int unaff_R14;
  context_Context in_stack_ffffffffffffff68;
  uint8 *in_stack_ffffffffffffff78;
  uint64 in_stack_ffffffffffffff80;
  string in_stack_ffffffffffffff88;
  undefined in_stack_ffffffffffffff98 [16];
  int in_stack_ffffffffffffffa8;
  runtime_itab *in_stack_ffffffffffffffb0;
  void *in_stack_ffffffffffffffb8;
  uint uVar3;
  undefined8 local_18;
  undefined8 *local_10;
  
  while (&local_18 <= *(undefined8 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  network_00.len = in_stack_ffffffffffffff80;
  network_00.str = in_stack_ffffffffffffff78;
  ~r0_01.cap = in_stack_ffffffffffffffa8;
  ~r0_01.array = (net_IP *)in_stack_ffffffffffffff98._0_8_;
  ~r0_01.len = in_stack_ffffffffffffff98._8_8_;
  ~r1_00.data = in_stack_ffffffffffffffb8;
  ~r1_00.tab = in_stack_ffffffffffffffb0;
  net___Resolver__LookupIP
            (r,in_stack_ffffffffffffff68,network_00,in_stack_ffffffffffffff88,~r0_01,~r1_00);
  if (extraout_RDI != 0) {
    return;
  }
  oldCap = cap;
  runtime_makeslice((internal_abi_Type *)&DAT_008a7080,0,cap,(void *)0x0);
  newLen = 0;
  oldPtr = extraout_RAX_00;
  local_10 = extraout_RAX;
  uVar3 = oldCap;
  for (iVar1 = 0; iVar1 < (int)uVar3; iVar1 = iVar1 + 1) {
    slice.cap = (int)in_stack_ffffffffffffff78;
    slice.array = (uint8 *)in_stack_ffffffffffffff68.tab;
    slice.len = (int)in_stack_ffffffffffffff68.data;
    ip.addr.lo = (uint64)in_stack_ffffffffffffff88.str;
    ip.z = in_stack_ffffffffffffff88.len;
    ip.addr.hi = in_stack_ffffffffffffff80;
    net_netip_AddrFromSlice(slice,ip,SUB81(*local_10,0));
    if (extraout_DIL != '\0') {
      newLen = newLen + 1;
      local_18 = extraout_RCX;
      if (oldCap < newLen) {
        ~r0_00.cap = (int)in_stack_ffffffffffffff78;
        ~r0_00.array = in_stack_ffffffffffffff68.tab;
        ~r0_00.len = (int)in_stack_ffffffffffffff68.data;
        runtime_growslice(oldPtr,newLen,oldCap,1,(internal_abi_Type *)&DAT_008a7080,~r0_00);
        newLen = extraout_RBX_00;
        oldPtr = extraout_RAX_02;
        oldCap = extraout_RCX_00;
      }
      iVar2 = newLen * 3;
      *(undefined8 *)((int)oldPtr + newLen * 0x18 + -0x18) = extraout_RAX_01;
      *(undefined8 *)((int)oldPtr + newLen * 0x18 + -0x10) = extraout_RBX;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_RCX_01;
        extraout_R11[1] = *(undefined8 *)((int)extraout_RSI + extraout_R9 * 8 + -8);
        local_18 = extraout_RCX_01;
        oldPtr = extraout_RSI;
        oldCap = extraout_R8;
        iVar2 = extraout_R9;
      }
      *(undefined8 *)((int)oldPtr + iVar2 * 8 + -8) = local_18;
    }
    local_10 = local_10 + 3;
  }
  return;
}



void net___onlyValuesCtx__Value(net_onlyValuesCtx *ovc,interface___ key,interface___ ~r0)

{
  char extraout_AL;
  runtime_hchan *c;
  bool selected;
  undefined8 in_RCX;
  undefined8 in_RBX;
  bool received;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  c = (runtime_hchan *)(*(code *)(ovc->lookupValues).tab[1].inter)((ovc->lookupValues).data);
  runtime_selectnbrecv((void *)0x0,c,selected,received);
  if (extraout_AL != '\0') {
    return;
  }
  (**(code **)&(ovc->lookupValues).tab[1].hash)((ovc->lookupValues).data,in_RBX,in_RCX);
  return;
}



void net___Resolver__lookupIPAddr
               (net_Resolver *r,context_Context ctx,string network,string host,__net_IPAddr ~r0,
               error ~r1)

{
  void *tolen;
  net_Resolver *pnVar1;
  __interface___ _Var2;
  net_netip_Addr ip;
  __interface___ _Var3;
  context_Context ctx_00;
  string a1;
  runtime_iface r_00;
  net_netip_Addr ~r0_00;
  error eVar4;
  error eVar5;
  __uint8 ~r0_01;
  string a2;
  error ~r1_00;
  string ~r0_02;
  void **ppvVar6;
  undefined auVar7 [16];
  undefined auVar8 [16];
  undefined auVar9 [16];
  internal_abi_Type *have;
  undefined4 uVar10;
  undefined4 uVar11;
  undefined4 uVar12;
  undefined4 uVar13;
  char extraout_AL;
  bool isTimeout;
  undefined extraout_AL_03;
  func_context_Context__string__string_____net_IPAddr__error_ **extraout_RAX;
  func_context_Context__string__string_____net_IPAddr__error_ **resolverFunc;
  func_context_Context__string__string_____net_IPAddr__error_ **extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *puVar14;
  code *extraout_RAX_03;
  func____interface_____error_ **extraout_RAX_04;
  code **extraout_RAX_05;
  code **extraout_RAX_06;
  code **extraout_RAX_07;
  code **extraout_RAX_08;
  code **ppcVar15;
  runtime_hchan *extraout_RAX_09;
  <_chan_internal_singleflight_Result ch;
  char extraout_AL_00;
  char extraout_AL_01;
  char extraout_AL_02;
  int extraout_RAX_10;
  int extraout_RAX_11;
  int *extraout_RAX_12;
  int *extraout_RAX_13;
  int *extraout_RAX_14;
  int *x;
  int extraout_RAX_15;
  runtime_funcval *extraout_RAX_16;
  runtime_funcval *extraout_RAX_17;
  runtime_funcval *prVar16;
  runtime_funcval *extraout_RAX_18;
  runtime_funcval *extraout_RAX_19;
  undefined8 *extraout_RAX_20;
  net_DNSError *err;
  undefined8 *extraout_RAX_21;
  undefined8 *extraout_RAX_22;
  undefined *extraout_RAX_23;
  undefined *extraout_RAX_24;
  undefined8 *extraout_RAX_25;
  undefined8 *extraout_RAX_26;
  undefined8 *extraout_RAX_27;
  undefined8 *extraout_RAX_28;
  undefined8 *extraout_RAX_29;
  undefined8 *extraout_RAX_30;
  int iVar17;
  undefined8 extraout_RAX_31;
  undefined8 extraout_RAX_32;
  undefined8 in_RCX;
  undefined8 *extraout_RCX;
  runtime_hchan *extraout_RCX_00;
  context_CancelFunc **lookupGroupCancel;
  undefined8 extraout_RCX_01;
  undefined8 uVar18;
  int iVar19;
  void *extraout_RCX_02;
  undefined8 uVar20;
  uint8 **ppuVar21;
  int in_RBX;
  internal_nettrace_Trace *trace;
  internal_nettrace_Trace *extraout_RBX;
  func_context_Context__string__string_____net_IPAddr__error_ **alt;
  code *extraout_RBX_00;
  <_chan_internal_singleflight_Result ~r0_03;
  void *~r0_04;
  undefined8 extraout_RBX_01;
  undefined1 *tab;
  void *~r0_05;
  void *~r0_06;
  void *extraout_RBX_02;
  void *pvVar22;
  code *in_RSI;
  void *extraout_RSI;
  void *extraout_RSI_00;
  void *extraout_RSI_01;
  void *extraout_RSI_02;
  int extraout_RSI_03;
  void *extraout_RSI_04;
  bool ~r0_07;
  bool ~r0_08;
  undefined extraout_DIL;
  undefined uVar23;
  undefined extraout_DIL_00;
  undefined extraout_DIL_01;
  undefined extraout_DIL_02;
  code *in_RDI;
  int extraout_RDI;
  int ~r0_09;
  code *in_R8;
  code *in_R9;
  int ~r0_10;
  bool ~r1_01;
  net_Resolver **extraout_R11;
  undefined8 *extraout_R11_00;
  code **extraout_R11_01;
  code **extraout_R11_02;
  code **extraout_R11_03;
  int *extraout_R11_04;
  code **extraout_R11_05;
  runtime_hchan **extraout_R11_06;
  runtime_hchan **extraout_R11_07;
  undefined8 *extraout_R11_08;
  code **extraout_R11_09;
  undefined8 *extraout_R11_10;
  undefined8 *extraout_R11_11;
  undefined8 *extraout_R11_12;
  code **extraout_R11_13;
  undefined8 *extraout_R11_14;
  int unaff_R14;
  bool bVar24;
  undefined in_XMM15 [16];
  undefined auVar25 [16];
  net_netip_uint128 in_stack_fffffffffffffe28;
  runtime_itab *in_stack_fffffffffffffe38;
  runtime_itab *in_stack_fffffffffffffe40;
  internal_intern_Value *in_stack_fffffffffffffe48;
  runtime_itab *in_stack_fffffffffffffe50;
  void *in_stack_fffffffffffffe58;
  undefined4 in_stack_fffffffffffffe60;
  undefined in_stack_fffffffffffffe64;
  undefined uVar26;
  undefined in_stack_fffffffffffffe65;
  undefined uVar27;
  undefined in_stack_fffffffffffffe66;
  byte bVar28;
  undefined in_stack_fffffffffffffe67;
  int i;
  runtime_itab *local_158;
  void *local_150;
  uint16 local_148 [4];
  undefined8 local_140;
  undefined *local_138;
  internal_singleflight_Group *local_130;
  internal_nettrace_Trace *local_128;
  func_context_Context__string__string_____net_IPAddr__error_ **local_120;
  func____interface_____error_ **local_118;
  code *local_110;
  runtime_hchan *local_108;
  int *local_100;
  undefined8 *local_f8;
  runtime_hchan *local_f0;
  uint8 **local_e8;
  uint8 **local_e0;
  undefined8 *local_d8;
  runtime_itab *local_d0;
  int local_c8;
  int *local_c0;
  code *local_b8;
  func_context_Context__string__string_____net_IPAddr__error_ **local_b0;
  void *local_a8;
  runtime_scase local_a0;
  undefined local_90 [16];
  net_IPAddr v;
  internal_singleflight_Result r_1;
  internal_abi_Type *local_30;
  undefined4 uStack_28;
  undefined4 uStack_24;
  undefined4 uStack_20;
  undefined4 uStack_1c;
  unkbyte9 local_18;
  
  while (&local_158 <= *(runtime_itab ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_R9 == (code *)0x0) {
    auVar25 = (*(code *)(net_errNoSuchHost.tab)->fun[0])(net_errNoSuchHost.data);
    local_150 = auVar25._8_8_;
    local_a8 = auVar25._0_8_;
    runtime_newobject((internal_abi_Type *)&DAT_00885120,local_150);
    extraout_RAX_28[1] = local_150;
    puVar14 = extraout_RAX_28;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_12 = local_a8;
      puVar14 = extraout_RAX_29;
    }
    *puVar14 = local_a8;
    puVar14[3] = 0;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_13 = in_R8;
      puVar14 = extraout_RAX_30;
    }
    puVar14[2] = in_R8;
    *(undefined *)((int)puVar14 + 0x32) = 1;
    return;
  }
  ~r0_00.addr.lo = (uint64)in_stack_fffffffffffffe40;
  ~r0_00.addr.hi = (uint64)in_stack_fffffffffffffe38;
  ~r0_00.z = in_stack_fffffffffffffe48;
  ~r1_00.data = in_stack_fffffffffffffe58;
  ~r1_00.tab = in_stack_fffffffffffffe50;
  local_a8 = (void *)in_RBX;
  net_netip_ParseAddr((string)in_stack_fffffffffffffe28,~r0_00,~r1_00);
  if (extraout_RDI == 0) {
    ip.z = (internal_intern_Value *)in_stack_fffffffffffffe38;
    ip.addr = in_stack_fffffffffffffe28;
    ~r0_01.len = (int)in_stack_fffffffffffffe48;
    ~r0_01.array = (uint8 *)in_stack_fffffffffffffe40;
    ~r0_01.cap = (int)in_stack_fffffffffffffe50;
    local_d8 = extraout_RCX;
    net_netip_Addr_AsSlice(ip,~r0_01);
    if (extraout_RBX_02 == (void *)0x4) {
      uVar23 = *extraout_RAX_23;
      bVar28 = extraout_RAX_23[1];
      uVar27 = extraout_RAX_23[2];
      uVar26 = extraout_RAX_23[3];
      runtime_makeslicecopy
                ((internal_abi_Type *)&DAT_00807920,0x10,net_v4InV6Prefix.len,net_v4InV6Prefix.array
                 ,(void *)(uint)bVar28);
      extraout_RAX_24[0xc] = uVar23;
      extraout_RAX_24[0xd] = bVar28;
      extraout_RAX_24[0xe] = uVar27;
      extraout_RAX_24[0xf] = uVar26;
      uVar18 = 0x10;
      pvVar22 = (void *)0x10;
      local_138 = extraout_RAX_24;
    }
    else {
      local_138 = extraout_RAX_23;
      uVar18 = extraout_RCX_01;
      pvVar22 = extraout_RBX_02;
      if (extraout_RBX_02 != (void *)0x10) {
        local_138 = (undefined *)0x0;
        uVar18 = 0;
        pvVar22 = (void *)0x0;
      }
    }
    if (local_d8 == (undefined8 *)0x0) {
      local_140 = 0;
      uVar20 = 0;
    }
    else if ((undefined *)*local_d8 == &DAT_008075e0) {
      local_140 = *(undefined8 *)local_d8[1];
      uVar20 = ((undefined8 *)local_d8[1])[1];
    }
    else {
      uVar20 = 0;
      local_140 = 0;
    }
    runtime_newobject((internal_abi_Type *)&DAT_00813960,pvVar22);
    extraout_RAX_25[1] = pvVar22;
    extraout_RAX_25[2] = uVar18;
    puVar14 = extraout_RAX_25;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_10 = local_138;
      puVar14 = extraout_RAX_26;
    }
    *puVar14 = local_138;
    puVar14[4] = uVar20;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_11 = local_140;
      puVar14 = extraout_RAX_27;
    }
    puVar14[3] = local_140;
    return;
  }
  auVar25 = (**(code **)((int)local_a8 + 0x30))(in_RCX,&DAT_008325e0,&runtime_zerobase);
  trace = auVar25._8_8_;
  if (auVar25._0_8_ != &DAT_007fcb20) {
    trace = (internal_nettrace_Trace *)0x0;
  }
  local_128 = trace;
  if ((trace != (internal_nettrace_Trace *)0x0) && (trace->DNSStart != (func_string_ **)0x0)) {
    (**trace->DNSStart)((string)in_stack_fffffffffffffe28);
    trace = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00847c60,trace);
  *extraout_RAX = net___Resolver__lookupIP_fm;
  local_b0 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = r;
    local_b0 = extraout_RAX_00;
  }
  local_b0[1] = (func_context_Context__string__string_____net_IPAddr__error_ *)r;
  auVar25 = (**(code **)((int)local_a8 + 0x30))(in_RCX,&DAT_00832580,&runtime_zerobase);
  local_120 = auVar25._8_8_;
  if (auVar25._0_8_ != &DAT_008336c0) {
    local_120 = (func_context_Context__string__string_____net_IPAddr__error_ **)0x0;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00874f60,local_120);
  *extraout_RAX_01 = go_itab_context_backgroundCtx_context_Context;
  extraout_RAX_01[1] = &runtime_zerobase;
  extraout_RAX_01[2] = local_a8;
  if (local_120 != (func_context_Context__string__string_____net_IPAddr__error_ **)0x0) {
    local_b0 = local_120;
  }
  puVar14 = extraout_RAX_01;
  local_120 = local_b0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = in_RCX;
    puVar14 = extraout_RAX_02;
  }
  puVar14[3] = in_RCX;
  ctx_00.data = in_stack_fffffffffffffe40;
  ctx_00.tab = in_stack_fffffffffffffe38;
  context_WithCancel((context_Context)in_stack_fffffffffffffe28,ctx_00,
                     (context_CancelFunc **)go_itab__net_onlyValuesCtx_context_Context);
