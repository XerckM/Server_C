  bVar2 = pnVar9[j].Scope;
  if (bVar2 >= bVar1 && bVar2 != bVar1) {
    return;
  }
  if (bVar2 < bVar1) {
    return;
  }
  if (iVar6 != 4) {
    if (iVar6 == 0x10) {
      for (i_1 = 0; i_1 < 10; i_1 = i_1 + 1) {
        if (puVar11[i_1] != 0) goto LAB_005d4cca;
      }
      if ((puVar11[10] == 0xff) && (puVar11[0xb] == 0xff)) {
        puVar11 = puVar11 + 0xc;
        goto LAB_005d4ccc;
      }
    }
LAB_005d4cca:
    puVar11 = (uint8 *)0x0;
  }
LAB_005d4ccc:
  if (puVar11 != (uint8 *)0x0) {
    return;
  }
  if (iVar7 != 4) {
    if (iVar7 == 0x10) {
      for (i_2 = 0; i_2 < 10; i_2 = i_2 + 1) {
        if (puVar12[i_2] != 0) goto LAB_005d4d6c;
      }
      if ((puVar12[10] == 0xff) && (puVar12[0xb] == 0xff)) {
        puVar12 = puVar12 + 0xc;
        goto LAB_005d4d03;
      }
    }
LAB_005d4d6c:
    puVar12 = (uint8 *)0x0;
  }
LAB_005d4d03:
  if (puVar12 == (uint8 *)0x0) {
    net_commonPrefixLen(in_stack_ffffffffffffff78,in_stack_ffffffffffffff90,pnVar8[i].addr.hi);
    net_commonPrefixLen(in_stack_ffffffffffffff78,in_stack_ffffffffffffff90,cpl);
    if (extraout_RAX_00 < extraout_RAX) {
      return;
    }
    if (extraout_RAX < extraout_RAX_00) {
      return;
    }
  }
  return;
}



// DWARF original prototype: void net.policyTable.Classify(net.policyTable t, net/netip.Addr ip,
// net.policyTableEntry ~r0, net.policyTableEntry ~r0)

void net_policyTable_Classify
               (net_policyTable t,net_netip_Addr ip,net_policyTableEntry ~r0,
               net_policyTableEntry ~r0_1)

{
  uint8 addr [16];
  net_netip_Addr ip_00;
  net_netip_Prefix p;
  net_netip_Addr ~r0_00;
  uint8 a16 [16];
  net_netip_Addr ip_01;
  char extraout_AL;
  uint64 *in_RAX;
  int iVar1;
  int in_RBX;
  internal_intern_Value *in_R8;
  int unaff_R14;
  undefined in_XMM15 [16];
  undefined4 in_stack_ffffffffffffff38;
  undefined4 in_stack_ffffffffffffff3c;
  undefined4 in_stack_ffffffffffffff40;
  undefined4 in_stack_ffffffffffffff44;
  internal_intern_Value *in_stack_ffffffffffffff48;
  uint64 in_stack_ffffffffffffff50;
  internal_intern_Value *in_stack_ffffffffffffff58;
  undefined in_stack_ffffffffffffff60 [16];
  undefined4 local_48;
  undefined4 uStack_44;
  net_policyTableEntry ent;
  
  while (&local_48 <= *(undefined4 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_48 = in_XMM15._8_4_;
  uStack_44 = in_XMM15._12_4_;
  if (net_netip_z4 == in_R8) {
    ip_00.addr.hi._4_4_ = in_stack_ffffffffffffff3c;
    ip_00.addr.hi._0_4_ = in_stack_ffffffffffffff38;
    ip_00.addr.lo._0_4_ = in_stack_ffffffffffffff40;
    ip_00.addr.lo._4_4_ = in_stack_ffffffffffffff44;
    ip_00.z = in_stack_ffffffffffffff48;
    a16._8_8_ = in_stack_ffffffffffffff58;
    a16[0] = (char)in_stack_ffffffffffffff50;
    a16[1] = (char)(in_stack_ffffffffffffff50 >> 8);
    a16[2] = (char)(in_stack_ffffffffffffff50 >> 0x10);
    a16[3] = (char)(in_stack_ffffffffffffff50 >> 0x18);
    a16[4] = (char)(in_stack_ffffffffffffff50 >> 0x20);
    a16[5] = (char)(in_stack_ffffffffffffff50 >> 0x28);
    a16[6] = (char)(in_stack_ffffffffffffff50 >> 0x30);
    a16[7] = (char)(in_stack_ffffffffffffff50 >> 0x38);
    net_netip_Addr_As16(ip_00,a16);
    addr[4] = (char)in_stack_ffffffffffffff3c;
    addr[5] = (char)((dword)in_stack_ffffffffffffff3c >> 8);
    addr[6] = (char)((dword)in_stack_ffffffffffffff3c >> 0x10);
    addr[7] = (char)((dword)in_stack_ffffffffffffff3c >> 0x18);
    addr[0] = (char)in_stack_ffffffffffffff38;
    addr[1] = (char)((dword)in_stack_ffffffffffffff38 >> 8);
    addr[2] = (char)((dword)in_stack_ffffffffffffff38 >> 0x10);
    addr[3] = (char)((dword)in_stack_ffffffffffffff38 >> 0x18);
    addr[8] = (char)in_stack_ffffffffffffff40;
    addr[9] = (char)((dword)in_stack_ffffffffffffff40 >> 8);
    addr[10] = (char)((dword)in_stack_ffffffffffffff40 >> 0x10);
    addr[11] = (char)((dword)in_stack_ffffffffffffff40 >> 0x18);
    addr[12] = (char)in_stack_ffffffffffffff44;
    addr[13] = (char)((dword)in_stack_ffffffffffffff44 >> 8);
    addr[14] = (char)((dword)in_stack_ffffffffffffff44 >> 0x10);
    addr[15] = (char)((dword)in_stack_ffffffffffffff44 >> 0x18);
    ~r0_00.addr.lo = in_stack_ffffffffffffff50;
    ~r0_00.addr.hi = (uint64)in_stack_ffffffffffffff48;
    ~r0_00.z = in_stack_ffffffffffffff58;
    net_netip_AddrFrom16(addr,~r0_00);
  }
  iVar1 = 0;
  while( true ) {
    if (in_RBX <= iVar1) {
      return;
    }
    ent.Prefix.ip.addr.hi = *in_RAX;
    ent.Prefix.ip.addr.lo._0_4_ = *(undefined4 *)(in_RAX + 1);
    ent.Prefix.ip.addr.lo._4_4_ = *(undefined4 *)((int)in_RAX + 0xc);
    ent.Prefix.ip.z._0_4_ = *(undefined4 *)(in_RAX + 2);
    ent.Prefix.ip.z._4_4_ = *(undefined4 *)((int)in_RAX + 0x14);
    ent.Prefix._24_4_ = *(undefined4 *)(in_RAX + 3);
    ent.Prefix._28_4_ = *(undefined4 *)((int)in_RAX + 0x1c);
    ent._32_4_ = *(undefined4 *)(in_RAX + 4);
    ent._36_4_ = *(undefined4 *)((int)in_RAX + 0x24);
    p.ip.addr.hi._4_4_ = in_stack_ffffffffffffff3c;
    p.ip.addr.hi._0_4_ = in_stack_ffffffffffffff38;
    p.ip.addr.lo._0_4_ = in_stack_ffffffffffffff40;
    p.ip.addr.lo._4_4_ = in_stack_ffffffffffffff44;
    p.ip.z = in_stack_ffffffffffffff48;
    p._24_8_ = in_stack_ffffffffffffff50;
    ip_01.addr.lo = in_stack_ffffffffffffff60._0_8_;
    ip_01.z = in_stack_ffffffffffffff60._8_8_;
    ip_01.addr.hi = (uint64)in_stack_ffffffffffffff58;
    net_netip_Prefix_Contains(p,ip_01,SUB81(ent.Prefix.ip.addr.hi,0));
    if (extraout_AL != '\0') break;
    in_RAX = in_RAX + 5;
    iVar1 = iVar1 + 1;
  }
  return;
}



void net_classifyScope(net_netip_Addr ip,net_scope ~r0)

{
  net_netip_Addr ip_00;
  net_netip_Addr ip_01;
  net_netip_Addr ip_02;
  net_netip_Addr ip_03;
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  undefined7 in_register_00000001;
  internal_intern_Value *in_RCX;
  bool ipv6;
  uint in_RBX;
  int unaff_R14;
  bool bVar1;
  undefined4 in_stack_ffffffffffffffa0;
  undefined4 in_stack_ffffffffffffffa4;
  undefined4 in_stack_ffffffffffffffa8;
  undefined4 in_stack_ffffffffffffffac;
  internal_intern_Value *in_stack_ffffffffffffffb0;
  uint8 in_stack_ffffffffffffffb8 [16];
  char local_20;
  byte bStack_1f;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ip_00.addr.hi._4_4_ = in_stack_ffffffffffffffa4;
  ip_00.addr.hi._0_4_ = in_stack_ffffffffffffffa0;
  ip_00.addr.lo._0_4_ = in_stack_ffffffffffffffa8;
  ip_00.addr.lo._4_4_ = in_stack_ffffffffffffffac;
  ip_00.z = in_stack_ffffffffffffffb0;
  net_netip_Addr_IsLoopback(ip_00,(bool)~r0);
  if ((extraout_AL != '\0') ||
     (ip_01.addr.hi._4_4_ = in_stack_ffffffffffffffa4,
     ip_01.addr.hi._0_4_ = in_stack_ffffffffffffffa0,
     ip_01.addr.lo._0_4_ = in_stack_ffffffffffffffa8,
     ip_01.addr.lo._4_4_ = in_stack_ffffffffffffffac, ip_01.z = in_stack_ffffffffffffffb0,
     net_netip_Addr_IsLinkLocalUnicast(ip_01,(bool)~r0), extraout_AL_00 != '\0')) {
    return;
  }
  if ((net_netip_z0 == in_RCX) || (net_netip_z4 == in_RCX)) {
    bVar1 = false;
  }
  else {
    if (CONCAT71(in_register_00000001,~r0) == 0) {
      bVar1 = in_RBX >> 0x20 == 0xffff;
    }
    else {
      bVar1 = false;
    }
    bVar1 = (bool)(bVar1 ^ 1);
  }
  ip_02.addr.hi._4_4_ = in_stack_ffffffffffffffa4;
  ip_02.addr.hi._0_4_ = in_stack_ffffffffffffffa0;
  ip_02.addr.lo._0_4_ = in_stack_ffffffffffffffa8;
  ip_02.addr.lo._4_4_ = in_stack_ffffffffffffffac;
  ip_02.z = in_stack_ffffffffffffffb0;
  net_netip_Addr_As16(ip_02,in_stack_ffffffffffffffb8);
  if ((bVar1) &&
     (ip_03.addr.hi._4_4_ = in_stack_ffffffffffffffa4,
     ip_03.addr.hi._0_4_ = in_stack_ffffffffffffffa0,
     ip_03.addr.lo._0_4_ = in_stack_ffffffffffffffa8,
     ip_03.addr.lo._4_4_ = in_stack_ffffffffffffffac, ip_03.z = in_stack_ffffffffffffffb0,
     net_netip_Addr_IsMulticast(ip_03,(bool)~r0), extraout_AL_01 != '\0')) {
    return;
  }
  if (((bVar1) && (local_20 = (char)in_stack_ffffffffffffffa0, local_20 == -2)) &&
     (bStack_1f = (byte)((dword)in_stack_ffffffffffffffa0 >> 8), (bStack_1f & 0xc0) == 0xc0)) {
    return;
  }
  return;
}



void net_commonPrefixLen(net_netip_Addr a,net_IP b,int cpl)

{
  __uint8 ~r0;
  uint8 *extraout_RAX;
  uint8 *puVar1;
  int bits;
  int extraout_RCX;
  int iVar2;
  int iVar3;
  int i;
  int extraout_RBX;
  int iVar4;
  int in_RSI;
  uint8 *in_RDI;
  uint8 *puVar5;
  int in_R8;
  int iVar6;
  uint8 ab;
  uint8 bb;
  int unaff_R14;
  net_netip_Addr in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar3 = in_RSI;
  puVar5 = in_RDI;
  iVar6 = in_R8;
  if (in_RSI != 4) {
    if (in_RSI == 0x10) {
      for (i = 0; i < 10; i = i + 1) {
        if (in_RDI[i] != 0) goto LAB_005d5314;
      }
      if ((in_RDI[10] == 0xff) && (in_RDI[0xb] == 0xff)) {
        iVar3 = 4;
        puVar5 = in_RDI + 0xc;
        iVar6 = in_R8 + -0xc;
        goto LAB_005d5240;
      }
    }
LAB_005d5314:
    iVar3 = 0;
    puVar5 = (uint8 *)0x0;
    iVar6 = 0;
  }
LAB_005d5240:
  if (puVar5 == (uint8 *)0x0) {
    iVar3 = in_RSI;
    puVar5 = in_RDI;
    iVar6 = in_R8;
  }
  ~r0.len = iVar6;
  ~r0.array = (uint8 *)iVar3;
  ~r0.cap = (int)puVar5;
  net_netip_Addr_AsSlice(in_stack_ffffffffffffffc8,~r0);
  if (extraout_RBX != iVar3) {
    return;
  }
  puVar1 = extraout_RAX;
  iVar2 = extraout_RCX;
  iVar4 = extraout_RBX;
  if (8 < extraout_RBX) {
    iVar4 = 8;
    iVar3 = 8;
  }
  while( true ) {
    if (iVar4 == 0) {
      return;
    }
    if (iVar3 == 0) break;
    ab = *puVar1;
    bb = *puVar5;
    if (bb != ab) {
      do {
        ab = ab >> 1;
        bb = bb >> 1;
      } while (bb != ab);
      return;
    }
    iVar2 = iVar2 + -1;
    iVar6 = iVar6 + -1;
    puVar1 = puVar1 + ((dword)(-iVar2 >> 0x3f) & 1);
    iVar4 = iVar4 + -1;
    puVar5 = puVar5 + ((dword)(-iVar6 >> 0x3f) & 1);
    iVar3 = iVar3 + -1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void net_addrinfoErrno_Error(net_addrinfoErrno eai,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.len = unaff_RBP;
  ~r0_00.str = in_stack_fffffffffffffff0;
  net__C_gai_strerror((net__Ctype_int)eai,~r0_00);
  return;
}



void net_addrinfoErrno_Temporary(net_addrinfoErrno eai,bool ~r0)

{
  return;
}



void net_addrinfoErrno_Timeout(net_addrinfoErrno eai,bool ~r0)

{
  return;
}



void net_cgoLookupHost(context_Context ctx,string name,__string hosts,error err)

{
  runtime_slice ~r0;
  string network;
  __net_IPAddr addrs;
  error err_00;
  uint8 **extraout_RAX;
  undefined8 uVar1;
  uint8 **ppuVar2;
  undefined8 extraout_RAX_00;
  void *extraout_RAX_01;
  undefined8 extraout_RAX_02;
  uint oldCap;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint newLen;
  int extraout_RBX;
  undefined8 extraout_RBX_00;
  uint extraout_RBX_01;
  void *oldPtr;
  void *extraout_RSI;
  int extraout_RDI;
  int iVar3;
  int iVar4;
  int extraout_R8;
  undefined8 *extraout_R11;
  int unaff_R14;
  string in_stack_ffffffffffffff58;
  uint8 *in_stack_ffffffffffffff68;
  int in_stack_ffffffffffffff70;
  string in_stack_ffffffffffffff78;
  undefined in_stack_ffffffffffffff88 [16];
  int in_stack_ffffffffffffff98;
  int iVar5;
  runtime_itab *in_stack_ffffffffffffffa0;
  void *in_stack_ffffffffffffffa8;
  net_IPAddr addr;
  
  while (&addr.IP.len <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  network.len = in_stack_ffffffffffffff70;
  network.str = in_stack_ffffffffffffff68;
  addrs.cap = in_stack_ffffffffffffff98;
  addrs.array = (net_IPAddr *)in_stack_ffffffffffffff88._0_8_;
  addrs.len = in_stack_ffffffffffffff88._8_8_;
  err_00.data = in_stack_ffffffffffffffa8;
  err_00.tab = in_stack_ffffffffffffffa0;
  net_cgoLookupIP((context_Context)in_stack_ffffffffffffff58,network,in_stack_ffffffffffffff78,addrs
                  ,err_00);
  if (extraout_RDI != 0) {
    return;
  }
  oldCap = 0;
  oldPtr = (void *)0x0;
  newLen = 0;
  ppuVar2 = extraout_RAX;
  iVar5 = extraout_RBX;
  for (iVar3 = 0; iVar3 < iVar5; iVar3 = iVar3 + 1) {
    addr.IP.array = *ppuVar2;
    addr.IP.len._0_4_ = *(undefined4 *)(ppuVar2 + 1);
    addr.IP.len._4_4_ = *(undefined4 *)((int)ppuVar2 + 0xc);
    addr.IP.cap._0_4_ = *(undefined4 *)(ppuVar2 + 2);
    addr.IP.cap._4_4_ = *(undefined4 *)((int)ppuVar2 + 0x14);
    addr.Zone.str._0_4_ = *(undefined4 *)(ppuVar2 + 3);
    addr.Zone.str._4_4_ = *(undefined4 *)((int)ppuVar2 + 0x1c);
    addr.Zone.len._0_4_ = *(undefined4 *)(ppuVar2 + 4);
    addr.Zone.len._4_4_ = *(undefined4 *)((int)ppuVar2 + 0x24);
    newLen = newLen + 1;
    net___IPAddr__String(&addr,in_stack_ffffffffffffff58);
    uVar1 = extraout_RBX_00;
    if (oldCap < newLen) {
      ~r0.cap = (int)in_stack_ffffffffffffff68;
      ~r0.array = in_stack_ffffffffffffff58.str;
      ~r0.len = in_stack_ffffffffffffff58.len;
      runtime_growslice(oldPtr,newLen,oldCap,1,(internal_abi_Type *)&DAT_008075e0,~r0);
      oldCap = extraout_RCX;
      newLen = extraout_RBX_01;
      oldPtr = extraout_RAX_01;
    }
    iVar4 = (newLen - 1) * 0x10;
    *(undefined8 *)((int)oldPtr + iVar4 + 8) = uVar1;
    uVar1 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_02;
      extraout_R11[1] = *(undefined8 *)((int)extraout_RSI + extraout_R8);
      uVar1 = extraout_RAX_02;
      oldCap = extraout_RCX_00;
      oldPtr = extraout_RSI;
      iVar4 = extraout_R8;
    }
    *(undefined8 *)((int)oldPtr + iVar4) = uVar1;
    ppuVar2 = ppuVar2 + 5;
  }
  return;
}



void net_cgoLookupPort(context_Context ctx,string network,string service,int port,error err)

{
  code cVar1;
  string ~r0;
  code *extraout_RAX;
  net__Ctype_struct_addrinfo *_hints;
  code **extraout_RAX_00;
  code **extraout_RAX_01;
  code **extraout_RAX_02;
  code **extraout_RAX_03;
  code **ppcVar2;
  char **extraout_RAX_04;
  char *extraout_RAX_05;
  char *extraout_RAX_06;
  char *pcVar3;
  sdword *in_RCX;
  char **extraout_RCX;
  char **ppcVar4;
  uint8 n;
  void *in_RBX;
  void *~r0_00;
  void *~r0_01;
  char *extraout_RBX;
  code *in_RSI;
  code *in_RDI;
  code *in_R8;
  code **extraout_R11;
  sdword **extraout_R11_00;
  code **extraout_R11_01;
  char **extraout_R11_02;
  int unaff_R14;
  string in_stack_ffffffffffffffb0;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  uint8 *in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_newobject((internal_abi_Type *)&DAT_0088d300,in_RBX);
  if (in_RDI == (code *)0x0) goto LAB_005d56f7;
  if (in_RDI == (code *)0x3) {
    if ((*(short *)in_RCX != 0x6374) || (*(char *)((int)in_RCX + 2) != 'p')) {
      if ((*(short *)in_RCX != 0x6475) || (*(char *)((int)in_RCX + 2) != 'p')) goto LAB_005d57dd;
LAB_005d56e9:
      *(undefined4 *)(extraout_RAX + 8) = 2;
      *(undefined4 *)(extraout_RAX + 0xc) = 0x11;
      goto LAB_005d56f7;
    }
  }
  else {
    if (in_RDI != (code *)0x4) {
LAB_005d57dd:
      runtime_newobject((internal_abi_Type *)&DAT_00885120,~r0_00);
      extraout_RAX_04[1] = (char *)0xf;
      *extraout_RAX_04 =
           "unknown networkinvalid address/etc/mdns.allowreflectlite.SetallocmRInternalwrite heap dumpasyncpreemptoffforce gc (idle)sync.Mutex.Lockmalloc deadlockruntime error: elem size wrong  with GC prog\nscan missed a gmisaligned maskruntime: min = runtime: inUse=runtime: max = recovery failedstopm holding pstartm: m has ppreempt SPWRITEmissing mcache?ms: gomaxprocs=]\n\tmorebuf={pc:: no frame (sp=runtime: frame runtimer: bad ptraceback stuckno such processnot a directoryadvertise errornetwork is downno medium foundkey has expiredCardinality(%d)weak_dependencyextension_rangeproto3_optionalunverified_lazyfeature_supportutf8_validationaggregate_valueedition_removedinvalid argSize<invalid Value>InvalidArgumentUnauthenticatedUNAUTHENTICATED\"UNIMPLEMENTED\"AuthInfo is nilAuthInfo: <nil>accept-encodingaccept-languageAccept-EncodingPartial ContentRequest TimeoutLength RequiredNot ImplementedGateway Timeoutunexpected typebad trailer key47683715820312515:04:05.000000/debug/requestsHanifi_RohingyaPsalter_Pahlaviinvalid pointerjstmpllitinterptarinsecurepathzipinsecurepathinvalid kind %vX-Forwarded-For#multipartfilesAccept-Language/etc/mime.types()<>@,;:\\\"/[]?=html/template: contenteditableContainingOneofRequiredNumbersExtensionRanges is unavailable0601021504Z0700invalid booleannon-minimal tagunknown Go typeBelowExactAboveunclosed actionno dot in fieldtemplate clauseDiacriticalDot;DoubleRightTee;DownLeftVector;GreaterGreater;HorizontalLine;InvisibleComma;InvisibleTimes;LeftDownVector;LeftRightArrow;Leftrightarrow;LessSlantEqual;LongRightArrow;Longrightarrow;LowerLeftArrow;NestedLessLess;NotGreaterLess;NotLessGreater;NotSubsetEqual;NotVerticalBar;OpenCurlyQuote;ReverseElement;RightTeeVector;RightVectorBar;ShortDownArrow;ShortLeftArrow;SquareSuperset;TildeFullEqual;UpperLeftArrow;ZeroWidthSpace;curvearrowleft;doublebarwedge;downdownarrows;hookrightarrow;leftleftarrows;leftrightarrow;leftthreetimes;longrightarrow;looparrowright;nshortparallel;ntriangleright;rightarrowtail;rightharpoonup;trianglelefteq;upharpoonright; not a functionavx512vp..." /* TRUNCATED STRING LITERAL */
      ;
      ~r0.len = (int)extraout_RAX_04;
      ~r0.str = in_stack_ffffffffffffffe0;
      ppcVar4 = extraout_RAX_04;
      runtime_concatstring3
                ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc0,
                 in_stack_ffffffffffffffd0,~r0);
      ppcVar4[3] = extraout_RBX;
      pcVar3 = extraout_RAX_05;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_02 = extraout_RAX_06;
        extraout_R11_02[1] = extraout_RCX[2];
        pcVar3 = extraout_RAX_06;
        ppcVar4 = extraout_RCX;
      }
      ppcVar4[2] = pcVar3;
      return;
    }
    if ('t' < *(char *)in_RCX) {
      if ((*in_RCX != 0x34706475) && (*in_RCX != 0x36706475)) goto LAB_005d57dd;
      goto LAB_005d56e9;
    }
    if ((*in_RCX != 0x34706374) && (*in_RCX != 0x36706374)) goto LAB_005d57dd;
  }
  *(undefined4 *)(extraout_RAX + 8) = 1;
  *(undefined4 *)(extraout_RAX + 0xc) = 6;
LAB_005d56f7:
  if (in_RDI == (code *)0x0) {
    ~r0_01 = (void *)0x0;
  }
  else {
    cVar1 = (in_RDI + -1)[(int)in_RCX];
    ~r0_01 = (void *)(uint)(byte)cVar1;
    if ((cVar1 != (code)0x34) && (cVar1 != (code)0x36)) {
      ~r0_01 = (void *)0x0;
    }
  }
  if ((char)~r0_01 == '4') {
    *(undefined4 *)(extraout_RAX + 4) = 2;
  }
  else if ((char)~r0_01 == '6') {
    *(undefined4 *)(extraout_RAX + 4) = 10;
  }
  runtime_newobject((internal_abi_Type *)&DAT_008699e0,~r0_01);
  *extraout_RAX_00 = net_cgoLookupPort_func1;
  ppcVar2 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RAX;
    ppcVar2 = extraout_RAX_01;
  }
  ppcVar2[1] = extraout_RAX;
  ppcVar2[3] = in_RDI;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = in_RCX;
    ppcVar2 = extraout_RAX_02;
  }
  ppcVar2[2] = (code *)in_RCX;
  ppcVar2[5] = in_R8;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_01 = in_RSI;
    ppcVar2 = extraout_RAX_03;
  }
  ppcVar2[4] = in_RSI;
  net_doBlockingWithCtx_go_shape_int_
            ((context_Context)in_stack_ffffffffffffffb0,(_param0)net__dict_doBlockingWithCtx_int_,
             port,(error)in_stack_ffffffffffffffc0);
  return;
}



void net_cgoLookupPort_func1(int ~r0,error ~r1)

{
  error err;
  net__Ctype_struct_addrinfo *_hints;
  int in_RDX;
  void *unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  err.data = unaff_RBP;
  err.tab = in_stack_fffffffffffffff0;
  net_cgoLookupServicePort
            (*(net__Ctype_struct_addrinfo **)(in_RDX + 8),in_stack_ffffffffffffffd0,
             in_stack_ffffffffffffffe0,*(int *)(in_RDX + 0x10),*(int *)(in_RDX + 0x18),err);
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack
// DWARF original prototype: void net.cgoLookupServicePort(net._Ctype_struct_addrinfo * hints,
// string network, string service, int port, int port, error err)

void net_cgoLookupServicePort
               (net__Ctype_struct_addrinfo *hints,string network,string service,int port,int port_1,
               error err)

{
  dword dVar1;
  __uint8 ~r0;
  string a2;
  string a2_00;
  string a2_01;
  error ~r1;
  string ~r0_00;
  string ~r0_01;
  string ~r0_02;
  net__Ctype_char *servname;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 extraout_RAX_02;
  net__Ctype_struct_addrinfo **res;
  net__Ctype_struct_addrinfo **_res;
  uint64 val;
  int gerrno;
  bool isTemporary;
  void *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  undefined8 *puVar2;
  undefined8 extraout_RAX_06;
  undefined8 extraout_RAX_07;
  syscall_RawSockaddrInet6 *sa_1;
  syscall_RawSockaddrInet4 *sa;
  undefined8 *extraout_RAX_08;
  undefined8 extraout_RAX_09;
  undefined8 extraout_RAX_10;
  undefined8 uVar3;
  uint extraout_RCX;
  int i;
  void *extraout_RCX_00;
  net__Ctype_struct_addrinfo *r;
  net__Ctype_struct_addrinfo *pnVar4;
  undefined8 *extraout_RCX_01;
  uint8 b;
  net__Ctype_char nVar5;
  void *~r0_03;
  undefined8 extraout_RBX;
  runtime_itab *x;
  undefined8 extraout_RBX_00;
  code **~r0_04;
  undefined8 extraout_RBX_01;
  uint in_RSI;
  undefined8 extraout_RSI;
  int ~r0_05;
  int extraout_RDI;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  undefined8 *extraout_R11_02;
  undefined8 *extraout_R11_03;
  int unaff_R14;
  undefined auVar6 [16];
  string in_stack_ffffffffffffff48;
  string in_stack_ffffffffffffff58;
  uint8 *in_stack_ffffffffffffff68;
  runtime_itab *in_stack_ffffffffffffff70;
  void *in_stack_ffffffffffffff78;
  undefined6 in_stack_ffffffffffffff80;
  undefined in_stack_ffffffffffffff86;
  undefined uVar7;
  net__Ctype_struct_addrinfo **local_38;
  error err_local;
  undefined local_20 [16];
  code **local_10;
  
  while (&local_38 <= *(net__Ctype_struct_addrinfo ****)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar7 = 0;
  ~r0.cap = (int)in_stack_ffffffffffffff68;
  ~r0.array = in_stack_ffffffffffffff58.str;
  ~r0.len = in_stack_ffffffffffffff58.len;
  ~r1.data = in_stack_ffffffffffffff78;
  ~r1.tab = in_stack_ffffffffffffff70;
  syscall_ByteSliceFromString(in_stack_ffffffffffffff48,~r0,~r1);
  if (extraout_RDI != 0) {
    auVar6 = (**(code **)(extraout_RDI + 0x18))(extraout_RSI);
    runtime_newobject((internal_abi_Type *)&DAT_00885120,auVar6._8_8_);
    extraout_RAX[1] = auVar6._8_8_;
    puVar2 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = auVar6._0_8_;
      puVar2 = extraout_RAX_00;
    }
    *puVar2 = auVar6._0_8_;
    a2.len = (int)in_stack_ffffffffffffff70;
    a2.str = in_stack_ffffffffffffff68;
    ~r0_00.len._0_6_ = in_stack_ffffffffffffff80;
    ~r0_00.str = (uint8 *)in_stack_ffffffffffffff78;
    ~r0_00.len._6_1_ = in_stack_ffffffffffffff86;
    ~r0_00.len._7_1_ = uVar7;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff48,in_stack_ffffffffffffff58,a2,~r0_00);
    puVar2[3] = extraout_RBX;
    uVar3 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RAX_02;
      extraout_R11_00[1] = puVar2[2];
      uVar3 = extraout_RAX_02;
    }
    puVar2[2] = uVar3;
    return;
  }
  if (extraout_RCX < in_RSI) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  for (i = 0; i < (int)in_RSI; i = i + 1) {
    nVar5 = servname[i];
    if ((byte)(nVar5 + 0xbfU) < 0x1a) {
      nVar5 = nVar5 + 0x20;
    }
    if (~r0_03 <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    servname[i] = nVar5;
  }
  runtime_newobject((internal_abi_Type *)&DAT_007f7d60,~r0_03);
  if (~r0_03 == (void *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  local_38 = res;
  net__C_getaddrinfo((net__Ctype_char *)0x0,servname,hints,res,~r0_05,
                     (error)in_stack_ffffffffffffff48);
  err_local.data = extraout_RCX_00;
  err_local.tab = x;
  if (val != 0) {
    if (val == 0xfffffffffffffff5) {
      if (x == (runtime_itab *)0x0) {
        err_local.data = &DAT_0095c660;
        err_local.tab = (runtime_itab *)go_itab_syscall_Errno_error;
      }
      isTemporary = false;
    }
    else {
      runtime_convT64(val,x);
      err_local.data = extraout_RAX_03;
      err_local.tab = (runtime_itab *)go_itab_net_addrinfoErrno_error;
      isTemporary = val == 0xfffffffffffffffd;
    }
    auVar6 = (*(code *)(err_local.tab)->fun[0])(err_local.data);
    runtime_newobject((internal_abi_Type *)&DAT_00885120,auVar6._8_8_);
    extraout_RAX_04[1] = auVar6._8_8_;
    puVar2 = extraout_RAX_04;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_01 = auVar6._0_8_;
      puVar2 = extraout_RAX_05;
    }
    *puVar2 = auVar6._0_8_;
    a2_00.len = (int)in_stack_ffffffffffffff70;
    a2_00.str = in_stack_ffffffffffffff68;
    ~r0_01.len._0_6_ = in_stack_ffffffffffffff80;
    ~r0_01.str = (uint8 *)in_stack_ffffffffffffff78;
    ~r0_01.len._6_1_ = isTemporary;
    ~r0_01.len._7_1_ = uVar7;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff48,in_stack_ffffffffffffff58,a2_00,
               ~r0_01);
    puVar2[3] = extraout_RBX_00;
    uVar3 = extraout_RAX_06;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_02 = extraout_RAX_07;
      extraout_R11_02[1] = puVar2[2];
      uVar3 = extraout_RAX_07;
    }
    puVar2[2] = uVar3;
    *(bool *)((int)puVar2 + 0x31) = isTemporary;
    return;
  }
  local_20._8_8_ = *local_38;
  local_20._0_8_ = net_cgoLookupServicePort_func1;
  local_10 = (code **)local_20;
  uVar7 = 1;
  pnVar4 = *local_38;
  ~r0_04 = local_10;
  while( true ) {
    if (pnVar4 == (net__Ctype_struct_addrinfo *)0x0) {
      runtime_newobject((internal_abi_Type *)&DAT_00885120,~r0_04);
      extraout_RAX_08[1] = 0xc;
      *extraout_RAX_08 = &DAT_008b432d;
      a2_01.len = (int)in_stack_ffffffffffffff70;
      a2_01.str = in_stack_ffffffffffffff68;
      ~r0_02.len._0_6_ = in_stack_ffffffffffffff80;
      ~r0_02.str = (uint8 *)in_stack_ffffffffffffff78;
      ~r0_02.len._6_1_ = in_stack_ffffffffffffff86;
      ~r0_02.len._7_1_ = uVar7;
      runtime_concatstring3
                ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff48,in_stack_ffffffffffffff58,a2_01,
                 ~r0_02);
      extraout_RAX_08[3] = extraout_RBX_01;
      uVar3 = extraout_RAX_09;
      err_local.data = extraout_RAX_08;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_03 = extraout_RAX_10;
        extraout_R11_03[1] = extraout_RCX_01[2];
        uVar3 = extraout_RAX_10;
        err_local.data = extraout_RCX_01;
      }
      *(undefined8 *)((int)err_local.data + 0x10) = uVar3;
      err_local.tab = (runtime_itab *)go_itab__net_DNSError_error;
      (**local_10)();
      return;
    }
    dVar1 = pnVar4->ai_family;
    ~r0_04 = (code **)(uint)dVar1;
    if (dVar1 == 2) break;
    if (dVar1 == 10) {
      net_cgoLookupServicePort_func1();
      return;
    }
    pnVar4 = pnVar4->ai_next;
  }
  net_cgoLookupServicePort_func1();
  return;
}



// WARNING: Unknown calling convention

void net_cgoLookupServicePort_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  net__C_freeaddrinfo(*(net__Ctype_struct_addrinfo **)(in_RDX + 8));
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void net_cgoLookupHostIP(string network,string name,__net_IPAddr addrs,error err)

{
  dword dVar1;
  net__Ctype_struct_sockaddr *pnVar2;
  undefined4 uVar3;
  undefined4 uVar4;
  undefined4 uVar5;
  runtime_slice ~r0;
  runtime_slice ~r0_00;
  __uint8 ~r0_01;
  bool isErrorNoSuchHost;
  int in_RAX;
  net__Ctype_struct_addrinfo *extraout_RAX;
  net__Ctype_struct_addrinfo *_hints;
  uint8 *extraout_RAX_00;
  uint8 *h;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  net__Ctype_struct_addrinfo **res;
  net__Ctype_struct_addrinfo **_res;
  uint64 val;
  int gerrno;
  void *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  undefined8 *extraout_RAX_07;
  undefined8 *puVar6;
  undefined4 *extraout_RAX_08;
  uint8 *extraout_RAX_09;
  net_IPAddr *extraout_RAX_10;
  undefined4 *extraout_RAX_11;
  net_IPAddr *extraout_RAX_12;
  uint8 n;
  char cVar7;
  bool isTemporary;
  undefined8 in_RCX;
  void *extraout_RCX;
  int extraout_RCX_00;
  int extraout_RCX_01;
  syscall_RawSockaddrInet6 *sa_1;
  syscall_RawSockaddrInet4 *sa;
  int in_RBX;
  void *~r0_02;
  void *~r0_03;
  runtime_itab *x;
  int extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  void *extraout_RSI;
  int ~r0_04;
  net__Ctype_struct_addrinfo *r;
  net__Ctype_struct_addrinfo *pnVar8;
  undefined8 in_RDI;
  runtime_itab *extraout_RDI;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  undefined8 *extraout_R11_02;
  int unaff_R14;
  bool bVar9;
  string in_XMM15;
  undefined auVar10 [16];
  string in_stack_fffffffffffffec8;
  uint8 *in_stack_fffffffffffffed8;
  undefined in_stack_fffffffffffffee0 [16];
  error in_stack_fffffffffffffef0;
  undefined8 local_b8;
  net__Ctype_struct_addrinfo **local_b0;
  net__Ctype_struct_addrinfo *local_a8;
  error err_local;
  __net_IPAddr addrs_local;
  net_IPAddr addr_1;
  net_IPAddr addr;
  
  while (&local_b8 <= *(undefined8 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  addrs_local.array = (net_IPAddr *)0x0;
  addrs_local.len = (int)in_XMM15.str;
  addrs_local.cap = in_XMM15.len;
  net_acquireThread();
  runtime_newobject((internal_abi_Type *)&DAT_0088d300,~r0_02);
  extraout_RAX->ai_flags = 0x1a;
  extraout_RAX->ai_socktype = 1;
  extraout_RAX->ai_family = 0;
  if (in_RBX == 0) {
    cVar7 = '\0';
  }
  else {
    cVar7 = *(char *)(in_RBX + -1 + in_RAX);
    if ((cVar7 != '4') && (cVar7 != '6')) {
      cVar7 = '\0';
    }
  }
  if (cVar7 == '4') {
    extraout_RAX->ai_family = 2;
  }
  else if (cVar7 == '6') {
    extraout_RAX->ai_family = 10;
  }
  ~r0_01.len = in_stack_fffffffffffffee0._0_8_;
  ~r0_01.cap = in_stack_fffffffffffffee0._8_8_;
  ~r0_01.array = in_stack_fffffffffffffed8;
  local_a8 = extraout_RAX;
  syscall_ByteSliceFromString(in_stack_fffffffffffffec8,~r0_01,in_stack_fffffffffffffef0);
  if (extraout_RDI == (runtime_itab *)0x0) {
    if (~r0_03 == (void *)0x0) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
