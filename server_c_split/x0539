  char extraout_AL;
  int32 extraout_EAX;
  undefined8 *extraout_RAX;
  void *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  void *extraout_RAX_02;
  undefined8 extraout_RAX_03;
  int extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  void *pvVar2;
  void *extraout_RAX_06;
  undefined8 *extraout_RAX_07;
  int iVar3;
  undefined8 *extraout_RAX_08;
  uint in_RCX;
  uint extraout_RCX;
  int32 r;
  uint cap;
  byte *in_RBX;
  void *~r0_04;
  void *~r0_05;
  int extraout_RBX;
  uint newLen;
  uint extraout_RBX_00;
  void *in_RDI;
  short sVar4;
  int unaff_R14;
  string in_stack_fffffffffffffe78;
  interface___ *in_stack_fffffffffffffe88;
  string in_stack_fffffffffffffe90;
  runtime_itab *in_stack_fffffffffffffea0;
  void *in_stack_fffffffffffffea8;
  undefined in_stack_fffffffffffffeb0 [14];
  short in_stack_fffffffffffffebe;
  undefined local_108 [224];
  void *local_28;
  byte *local_20;
  undefined local_18 [16];
  
  while (local_108 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (tag < 0x14) {
    if (tag == 0xc) {
      p.cap = (int)in_stack_fffffffffffffe88;
      p.array = in_stack_fffffffffffffe78.str;
      p.len = in_stack_fffffffffffffe78.len;
      unicode_utf8_Valid(p,SUB81(in_RBX,0));
      if (extraout_AL == '\0') {
        runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_04);
        extraout_RAX[1] = 0x14;
        *extraout_RAX = &DAT_008b927f;
        return;
      }
      runtime_slicebytetostring((runtime_tmpBuf *)0x0,in_RBX,in_RCX,in_stack_fffffffffffffe78);
      return;
    }
    if (tag == 0x12) {
      iVar3 = 0;
      while( true ) {
        if ((int)in_RCX <= iVar3) {
          runtime_slicebytetostring((runtime_tmpBuf *)0x0,in_RBX,in_RCX,in_stack_fffffffffffffe78);
          return;
        }
        if ((9 < (byte)(in_RBX[iVar3] - 0x30)) && (in_RBX[iVar3] != 0x20)) break;
        iVar3 = iVar3 + 1;
      }
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,in_RBX);
      extraout_RAX_08[1] = 0x15;
      *extraout_RAX_08 = &DAT_008b9aa8;
      return;
    }
    if (tag == 0x13) {
      iVar3 = 0;
      while( true ) {
        if ((int)in_RCX <= iVar3) {
          runtime_slicebytetostring((runtime_tmpBuf *)0x0,in_RBX,in_RCX,in_stack_fffffffffffffe78);
          return;
        }
        uVar1 = in_RBX[iVar3];
        if (((((0x19 < (byte)(uVar1 + 0x9f)) && (0x19 < (byte)(uVar1 + 0xbf))) &&
             ((9 < (byte)(uVar1 - 0x30) &&
              ((((2 < (byte)(uVar1 - 0x27) && (4 < (byte)(uVar1 - 0x2b))) && (uVar1 != 0x20)) &&
               ((uVar1 != 0x3a && (uVar1 != 0x3d)))))))) && (uVar1 != 0x3f)) &&
           ((uVar1 != 0x2a && (uVar1 != 0x26)))) break;
        iVar3 = iVar3 + 1;
      }
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,in_RBX);
      extraout_RAX_07[1] = 0x17;
      *extraout_RAX_07 = &DAT_008baeab;
      return;
    }
  }
  else {
    if (tag == 0x14) {
      runtime_slicebytetostring((runtime_tmpBuf *)0x0,in_RBX,in_RCX,in_stack_fffffffffffffe78);
      return;
    }
    if (tag == 0x16) {
      runtime_slicebytetostring((runtime_tmpBuf *)0x0,in_RBX,in_RCX,in_stack_fffffffffffffe78);
      iVar3 = 0;
      pvVar2 = extraout_RAX_02;
      local_28 = extraout_RAX_02;
      do {
        if ((int)~r0_05 <= iVar3) {
          iVar3 = 0;
          goto LAB_0068d806;
        }
        r = (int32)*(byte *)((int)pvVar2 + iVar3);
        if (*(byte *)((int)pvVar2 + iVar3) < 0x80) {
          iVar3 = iVar3 + 1;
        }
        else {
          runtime_decoderune(in_stack_fffffffffffffe78,(int)pvVar2,(int32)~r0_05,iVar3);
          pvVar2 = local_28;
          iVar3 = extraout_RBX;
          r = extraout_EAX;
        }
      } while (r < 0x80);
      runtime_convTstring(in_stack_fffffffffffffe78,pvVar2);
      local_18._8_8_ = extraout_RAX_03;
      local_18._0_8_ = &DAT_008075e0;
      a_01.len = (int)in_stack_fffffffffffffe90.str;
      a_01.cap = in_stack_fffffffffffffe90.len;
      a_01.array = in_stack_fffffffffffffe88;
      ~r0_02.data = in_stack_fffffffffffffea8;
      ~r0_02.tab = in_stack_fffffffffffffea0;
      fmt_Errorf(in_stack_fffffffffffffe78,a_01,~r0_02);
      iVar3 = extraout_RAX_04;
LAB_0068d806:
      if (iVar3 == 0) {
        return;
      }
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_05);
      extraout_RAX_05[1] = 0x11;
      *extraout_RAX_05 = &DAT_008b7418;
      return;
    }
    if (tag == 0x1e) {
      if ((in_RCX & 1) != 0) {
        runtime_newobject((internal_abi_Type *)&DAT_0083e560,in_RBX);
        extraout_RAX_01[1] = 0x11;
        *extraout_RAX_01 = &DAT_008b7407;
        return;
      }
      if (((1 < (int)in_RCX) && (in_RBX[in_RCX - 1] == 0)) && (in_RBX[in_RCX - 2] == 0)) {
        in_RCX = in_RCX - 2;
      }
      cap = in_RCX >> 1;
      runtime_makeslice((internal_abi_Type *)&DAT_00807a20,0,cap,in_RDI);
      newLen = 0;
      pvVar2 = extraout_RAX_00;
      while( true ) {
        if (in_RCX == 0) {
          FUN_0046cd74();
          s.cap = (int)in_stack_fffffffffffffe88;
          s.array = (uint16 *)in_stack_fffffffffffffe78.str;
          s.len = in_stack_fffffffffffffe78.len;
          buf.cap = (int)in_stack_fffffffffffffea0;
          buf.array = (int32 *)in_stack_fffffffffffffe90.str;
          buf.len = in_stack_fffffffffffffe90.len;
          ~r0_03._8_14_ = in_stack_fffffffffffffeb0;
          ~r0_03.array = (int32 *)in_stack_fffffffffffffea8;
          ~r0_03.cap._6_2_ = in_stack_fffffffffffffebe;
          unicode_utf16_decode(s,buf,~r0_03);
          a.cap = (int)in_stack_fffffffffffffe88;
          a.array = (int32 *)in_stack_fffffffffffffe78.str;
          a.len = in_stack_fffffffffffffe78.len;
          runtime_slicerunetostring((runtime_tmpBuf *)0x0,a,in_stack_fffffffffffffe90);
          return;
        }
        if (in_RCX < 2) break;
        newLen = newLen + 1;
        sVar4 = (ushort)*in_RBX * 0x100 + (ushort)in_RBX[1];
        if (cap < newLen) {
          ~r0_00.cap = (int)in_stack_fffffffffffffe88;
          ~r0_00.array = in_stack_fffffffffffffe78.str;
          ~r0_00.len = in_stack_fffffffffffffe78.len;
          local_20 = in_RBX;
          runtime_growslice(pvVar2,newLen,cap,1,(internal_abi_Type *)&DAT_00807a20,~r0_00);
          pvVar2 = extraout_RAX_06;
          cap = extraout_RCX;
          newLen = extraout_RBX_00;
          in_RBX = local_20;
          in_stack_fffffffffffffebe = sVar4;
        }
        *(short *)((int)pvVar2 + newLen * 2 + -2) = sVar4;
        in_RDI = (void *)((int)in_RDI + -2);
        in_RBX = in_RBX + ((dword)(-(int)in_RDI >> 0x3f) & 2);
        in_RCX = in_RCX - 2;
      }
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
  }
  local_18._8_8_ = runtime_staticuint64s + tag;
  local_18._0_8_ = &DAT_00833000;
  a_00.len = (int)in_stack_fffffffffffffe90.str;
  a_00.cap = in_stack_fffffffffffffe90.len;
  a_00.array = in_stack_fffffffffffffe88;
  ~r0_01.data = in_stack_fffffffffffffea8;
  ~r0_01.tab = in_stack_fffffffffffffea0;
  fmt_Errorf(in_stack_fffffffffffffe78,a_00,~r0_01);
  return;
}



void crypto_x509_parseName
               (vendor_golang_org_x_crypto_cryptobyte_String raw,crypto_x509_pkix_RDNSequence *~r0,
               error ~r1)

{
  runtime_slice ~r0_00;
  __uint8 value;
  runtime_slice ~r0_01;
  __interface___ a;
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  char extraout_AL_02;
  char extraout_AL_03;
  void **extraout_RAX;
  crypto_x509_pkix_RDNSequence *_rdnSeq;
  undefined8 *extraout_RAX_00;
  uint uVar1;
  void *extraout_RAX_01;
  void *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  void *pvVar2;
  void *x;
  void *extraout_RAX_04;
  void *extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  undefined8 *extraout_RAX_07;
  undefined8 *extraout_RAX_08;
  bool ~r0_02;
  void *extraout_RCX;
  void *extraout_RCX_00;
  int extraout_RCX_01;
  uint extraout_RCX_02;
  void **ppvVar3;
  int iVar4;
  int in_RBX;
  void *~r0_03;
  void *~r0_04;
  void *pvVar5;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *~r0_05;
  void *~r0_06;
  void *~r0_07;
  uint newLen;
  uint extraout_RBX_01;
  bool ~r0_08;
  int extraout_RSI;
  undefined8 in_RDI;
  undefined8 extraout_RDI;
  undefined8 extraout_RDI_00;
  undefined8 extraout_RDI_01;
  undefined8 extraout_RDI_02;
  undefined8 extraout_RDI_03;
  undefined8 uVar6;
  undefined8 extraout_RDI_04;
  undefined8 extraout_RDI_05;
  undefined8 extraout_RDI_06;
  undefined8 extraout_RDI_07;
  undefined8 extraout_RDI_08;
  void *extraout_R10;
  void **extraout_R11;
  void **extraout_R11_00;
  int unaff_R14;
  undefined in_XMM15 [16];
  string in_stack_fffffffffffffee0;
  interface___ *in_stack_fffffffffffffef0;
  string in_stack_fffffffffffffef8;
  error in_stack_ffffffffffffff08;
  vendor_golang_org_x_crypto_cryptobyte_asn1_Tag local_d9;
  uint local_d8;
  uint local_d0;
  int local_c8;
  int local_c0;
  uint local_b8;
  uint local_b0;
  void *local_a8;
  undefined8 local_a0;
  void *local_98;
  void **local_90;
  undefined local_88 [16];
  vendor_golang_org_x_crypto_cryptobyte_String set;
  vendor_golang_org_x_crypto_cryptobyte_String rawValue;
  vendor_golang_org_x_crypto_cryptobyte_String atav;
  crypto_x509_pkix_AttributeTypeAndValue attr;
  
  raw.array = (uint8 *)~r0;
  raw.len = in_RBX;
  while (&local_a0 <= *(undefined8 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI_08;
  }
  vendor_golang_org_x_crypto_cryptobyte___String__ReadASN1(&raw,&raw,0x30,SUB81(in_RDI,0));
  if (extraout_AL == '\0') {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_03);
    extraout_RAX_00[1] = 0x19;
    *extraout_RAX_00 = &DAT_008bbfd2;
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0082a220,~r0_03);
  *extraout_RAX = (void *)0x0;
  uVar6 = extraout_RDI;
  local_90 = extraout_RAX;
  do {
    if (raw.len == 0) {
      return;
    }
    set.array = (uint8 *)0x0;
    set._8_16_ = in_XMM15;
    vendor_golang_org_x_crypto_cryptobyte___String__ReadASN1(&raw,&set,0x31,SUB81(uVar6,0));
    if (extraout_AL_00 == '\0') {
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_04);
      extraout_RAX_03[1] = 0x19;
      *extraout_RAX_03 = &DAT_008bbfd2;
      return;
    }
    uVar1 = 0;
    pvVar2 = (void *)0x0;
    newLen = 0;
    uVar6 = extraout_RDI_00;
    while (local_d8 = newLen, local_d0 = uVar1, local_a8 = pvVar2, set.len != 0) {
      atav.array = (uint8 *)0x0;
      vendor_golang_org_x_crypto_cryptobyte___String__ReadASN1(&set,&atav,0x30,SUB81(uVar6,0));
      if (extraout_AL_01 == '\0') {
        runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_05);
        extraout_RAX_08[1] = 0x2c;
        *extraout_RAX_08 = &DAT_008c697a;
        return;
      }
      attr.Type.array = in_XMM15._0_8_;
      attr.Type.len._0_4_ = in_XMM15._0_4_;
      attr.Type.len._4_4_ = in_XMM15._4_4_;
      attr.Type.cap._0_4_ = in_XMM15._8_4_;
      attr.Type.cap._4_4_ = in_XMM15._12_4_;
      vendor_golang_org_x_crypto_cryptobyte___String__ReadASN1ObjectIdentifier
                (&atav,&attr.Type,~r0_02);
      if (extraout_AL_02 == '\0') {
        runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_06);
        extraout_RAX_07[1] = 0x31;
        *extraout_RAX_07 = &DAT_008c8890;
        return;
      }
      rawValue.array = (uint8 *)0x0;
      local_d9 = 0;
      vendor_golang_org_x_crypto_cryptobyte___String__readASN1
                (&atav,&rawValue,&local_d9,true,~r0_08);
      if (extraout_AL_03 == '\0') {
        runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_07);
        extraout_RAX_06[1] = 0x32;
        *extraout_RAX_06 = &DAT_008c8d3b;
        return;
      }
      value.cap = (int)in_stack_fffffffffffffef0;
      value.array = in_stack_fffffffffffffee0.str;
      value.len = in_stack_fffffffffffffee0.len;
      crypto_x509_parseASN1String
                (local_d9,value,in_stack_fffffffffffffef8,in_stack_ffffffffffffff08);
      local_c8 = extraout_RCX_01;
      local_a0 = extraout_RDI_04;
      runtime_convTstring(in_stack_fffffffffffffee0,x);
      attr.Value.data = extraout_RAX_04;
      attr.Value._type = (internal_abi_Type *)&DAT_008075e0;
      if (local_c8 != 0) {
        if (local_c8 == 0) {
          local_88._0_8_ = 0;
        }
        else {
          local_88._0_8_ = *(undefined8 *)(local_c8 + 8);
        }
        local_88._8_8_ = local_a0;
        a.len = (int)in_stack_fffffffffffffef8.str;
        a.cap = in_stack_fffffffffffffef8.len;
        a.array = in_stack_fffffffffffffef0;
        fmt_Errorf(in_stack_fffffffffffffee0,a,in_stack_ffffffffffffff08);
        return;
      }
      newLen = local_d8 + 1;
      pvVar2 = local_a8;
      uVar1 = local_d0;
      uVar6 = extraout_RDI_05;
      if (local_d0 < newLen) {
        ~r0_01.cap = (int)in_stack_fffffffffffffef0;
        ~r0_01.array = in_stack_fffffffffffffee0.str;
        ~r0_01.len = in_stack_fffffffffffffee0.len;
        runtime_growslice(local_a8,newLen,local_d0,1,(internal_abi_Type *)&DAT_00855b00,~r0_01);
        pvVar2 = extraout_RAX_05;
        uVar1 = extraout_RCX_02;
        newLen = extraout_RBX_01;
        uVar6 = extraout_RDI_06;
      }
      iVar4 = newLen * 5;
      if (runtime_writeBarrier._0_4_ != 0) {
        local_c0 = newLen * 5;
        local_b8 = uVar1;
        local_b0 = newLen;
        local_98 = pvVar2;
        runtime_wbMove((internal_abi_Type *)&DAT_00855b00,
                       (void *)((int)pvVar2 + newLen * 0x28 + -0x28),&attr);
        pvVar2 = local_98;
        uVar1 = local_b8;
        iVar4 = local_c0;
        newLen = local_b0;
        uVar6 = extraout_RDI_07;
      }
      *(int **)((int)pvVar2 + iVar4 * 8 + -0x28) = attr.Type.array;
      *(undefined4 *)((int)pvVar2 + iVar4 * 8 + -0x20) = (undefined4)attr.Type.len;
      *(undefined4 *)((int)pvVar2 + iVar4 * 8 + -0x1c) = attr.Type.len._4_4_;
      *(undefined4 *)((int)pvVar2 + iVar4 * 8 + -0x18) = (undefined4)attr.Type.cap;
      *(undefined4 *)((int)pvVar2 + iVar4 * 8 + -0x14) = attr.Type.cap._4_4_;
      *(undefined4 *)((int)pvVar2 + iVar4 * 8 + -0x10) = attr.Value._type._0_4_;
      *(undefined4 *)((int)pvVar2 + iVar4 * 8 + -0xc) = attr.Value._type._4_4_;
      *(undefined4 *)((int)pvVar2 + iVar4 * 8 + -8) = attr.Value.data._0_4_;
      *(undefined4 *)((int)pvVar2 + iVar4 * 8 + -4) = attr.Value.data._4_4_;
    }
    pvVar5 = (void *)((int)local_90[1] + 1);
    pvVar2 = *local_90;
    if (local_90[2] < pvVar5) {
      ~r0_00.cap = (int)in_stack_fffffffffffffef0;
      ~r0_00.array = in_stack_fffffffffffffee0.str;
      ~r0_00.len = in_stack_fffffffffffffee0.len;
      runtime_growslice(pvVar2,(int)pvVar5,(int)local_90[2],1,(internal_abi_Type *)&DAT_0080f5e0,
                        ~r0_00);
      local_90[2] = extraout_RCX;
      pvVar2 = extraout_RAX_01;
      ppvVar3 = local_90;
      pvVar5 = extraout_RBX;
      uVar6 = extraout_RDI_01;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_RAX_02;
        extraout_R11[1] = *ppvVar3;
        pvVar2 = extraout_RAX_02;
        pvVar5 = extraout_RBX_00;
        uVar6 = extraout_RDI_02;
      }
      *ppvVar3 = pvVar2;
    }
    local_90[1] = pvVar5;
    iVar4 = (int)pvVar5 * 3;
    *(uint *)((int)pvVar2 + (int)pvVar5 * 0x18 + -0x10) = local_d8;
    *(uint *)((int)pvVar2 + (int)pvVar5 * 0x18 + -8) = local_d0;
    pvVar5 = local_a8;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RCX_00;
      extraout_R11_00[1] = *(void **)((int)extraout_R10 + extraout_RSI * 8 + -0x18);
      pvVar5 = extraout_RCX_00;
      iVar4 = extraout_RSI;
      uVar6 = extraout_RDI_03;
      pvVar2 = extraout_R10;
    }
    *(void **)((int)pvVar2 + iVar4 * 8 + -0x18) = pvVar5;
  } while( true );
}



void crypto_x509_parseAI(vendor_golang_org_x_crypto_cryptobyte_String der,
                        crypto_x509_pkix_AlgorithmIdentifier ~r0,error ~r1)

{
  char extraout_AL;
  char extraout_AL_00;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  bool ~r0_00;
  int in_RBX;
  void *~r0_01;
  void *~r0_02;
  bool ~r0_03;
  int unaff_R14;
  undefined in_XMM15 [16];
  byte local_81;
  vendor_golang_org_x_crypto_cryptobyte_String params;
  crypto_x509_pkix_AlgorithmIdentifier ai;
  
  ~r0.Parameters.FullBytes.len = in_RBX;
  while (&ai.Parameters.Bytes.cap <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  FUN_0046cdab();
  FUN_0046cdab();
  vendor_golang_org_x_crypto_cryptobyte___String__ReadASN1ObjectIdentifier
            ((vendor_golang_org_x_crypto_cryptobyte_String *)&~r0.Parameters.FullBytes,&ai.Algorithm
             ,~r0_00);
  if (extraout_AL == '\0') {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_01);
    extraout_RAX_00[1] = 0x13;
    *extraout_RAX_00 = &DAT_008b88f2;
    FUN_0046d10c();
    return;
  }
  if (~r0.Parameters.FullBytes.len == 0) {
    FUN_0046d10c();
    return;
  }
  params.array = (uint8 *)0x0;
  local_81 = 0;
  params._8_16_ = in_XMM15;
  vendor_golang_org_x_crypto_cryptobyte___String__readASN1
            ((vendor_golang_org_x_crypto_cryptobyte_String *)&~r0.Parameters.FullBytes,&params,
             &local_81,false,~r0_03);
  if (extraout_AL_00 != '\0') {
    ai.Parameters.Tag = (int)local_81;
    ai.Parameters.FullBytes.array = params.array;
    ai.Parameters.FullBytes.len = params.len;
    ai.Parameters.FullBytes.cap = params.cap;
    FUN_0046d10c();
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_02);
  extraout_RAX[1] = 0x1a;
  *extraout_RAX = &DAT_008bc92b;
  FUN_0046d10c();
  return;
}



void crypto_x509_parseTime
               (vendor_golang_org_x_crypto_cryptobyte_String *der,time_Time ~r0,error ~r1)

{
  uint8 *puVar1;
  char extraout_AL;
  char extraout_AL_00;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  void *in_RBX;
  void *~r0_00;
  void *~r0_01;
  void *extraout_RBX;
  int unaff_R14;
  time_Time t;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  t.loc = (time_Location *)0x0;
  puVar1 = der->array;
  if ((der->len == 0) || (*puVar1 != 0x17)) {
    if ((der->len == 0) || (*puVar1 != 0x18)) {
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,in_RBX);
      extraout_RAX[1] = 0x1d;
      *extraout_RAX = &DAT_008be728;
      return;
    }
    vendor_golang_org_x_crypto_cryptobyte___String__ReadASN1GeneralizedTime(der,&t,SUB81(puVar1,0));
    if (extraout_AL == '\0') {
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_00);
      extraout_RAX_00[1] = 0x1f;
      *extraout_RAX_00 = &DAT_008bfb00;
      return;
    }
  }
  else {
    vendor_golang_org_x_crypto_cryptobyte___String__ReadASN1UTCTime(der,&t,SUB81(puVar1,0));
    if (extraout_AL_00 == '\0') {
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_01);
      extraout_RAX_01[1] = 0x17;
      *extraout_RAX_01 = &DAT_008baec2;
      return;
    }
  }
  return;
}



void crypto_x509_parseValidity
               (vendor_golang_org_x_crypto_cryptobyte_String der,time_Time ~r0,time_Time ~r1,
               error ~r2)

{
  time_Time ~r0_00;
  time_Time ~r0_01;
  error ~r1_00;
  error ~r1_01;
  undefined8 extraout_RAX;
  runtime_itab *extraout_RCX;
  time_Location *extraout_RBX;
  void *unaff_RBP;
  int extraout_RDI;
  int extraout_RDI_00;
  int unaff_R14;
  undefined8 in_stack_ffffffffffffffd8;
  undefined8 in_stack_ffffffffffffffe0;
  time_Location *in_stack_ffffffffffffffe8;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.ext = in_stack_ffffffffffffffe0;
  ~r0_00.wall = in_stack_ffffffffffffffd8;
  ~r0_00.loc = in_stack_ffffffffffffffe8;
  ~r1_00.data = unaff_RBP;
  ~r1_00.tab = in_stack_fffffffffffffff0;
  crypto_x509_parseTime(&der,~r0_00,~r1_00);
  if (extraout_RDI == 0) {
    ~r0_01.ext = extraout_RAX;
    ~r0_01.wall = in_stack_ffffffffffffffd8;
    ~r0_01.loc = extraout_RBX;
    ~r1_01.data = unaff_RBP;
    ~r1_01.tab = extraout_RCX;
    crypto_x509_parseTime(&der,~r0_01,~r1_01);
    if (extraout_RDI_00 != 0) {
      return;
    }
    return;
  }
  return;
}



// DWARF original prototype: void
// crypto/x509.parseExtension(vendor/golang.org/x/crypto/cryptobyte.String der,
// crypto/x509/pkix.Extension ~r0, crypto/x509/pkix.Extension ~r0, error ~r1)

void crypto_x509_parseExtension
               (vendor_golang_org_x_crypto_cryptobyte_String der,crypto_x509_pkix_Extension ~r0,
               crypto_x509_pkix_Extension ~r0_1,error ~r1)

{
  char extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  uint8 *in_RAX;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  bool ~r0_00;
  int in_RCX;
  int in_RBX;
  void *~r0_01;
  void *~r0_02;
  void *~r0_03;
  undefined extraout_DIL;
  undefined extraout_DIL_00;
  undefined ~r0_04;
  int unaff_R14;
  undefined in_XMM15 [16];
  vendor_golang_org_x_crypto_cryptobyte_String val;
  crypto_x509_pkix_Extension ext;
  
  der.array = in_RAX;
  der.cap = in_RCX;
  der.len = in_RBX;
  while (&ext.Critical <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ext.Id.array = in_XMM15._0_8_;
  ext.Id.len._0_4_ = in_XMM15._0_4_;
  ext.Id.len._4_4_ = in_XMM15._4_4_;
  ext.Id.cap._0_4_ = in_XMM15._8_4_;
  ext.Id.cap._4_4_ = in_XMM15._12_4_;
  vendor_golang_org_x_crypto_cryptobyte___String__ReadASN1ObjectIdentifier
            (&der,&ext.Id,SUB81(der.cap,0));
  if (extraout_AL == '\0') {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_01);
    extraout_RAX_01[1] = 0x23;
    *extraout_RAX_01 = &DAT_008c1f66;
    return;
  }
  ~r0_04 = extraout_DIL;
  if ((der.len != 0) && (*der.array == 1)) {
    vendor_golang_org_x_crypto_cryptobyte___String__ReadASN1Boolean(&der,&ext.Critical,~r0_00);
    ~r0_04 = extraout_DIL_00;
    if (extraout_AL_00 == '\0') {
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_02);
      extraout_RAX_00[1] = 0x28;
      *extraout_RAX_00 = &DAT_008c4b7c;
      return;
    }
  }
  val.array = (uint8 *)0x0;
  vendor_golang_org_x_crypto_cryptobyte___String__ReadASN1(&der,&val,4,(bool)~r0_04);
  if (extraout_AL_01 != '\0') {
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_03);
  extraout_RAX[1] = 0x25;
  *extraout_RAX = &DAT_008c332d;
  return;
}



void crypto_x509_parsePublicKey(crypto_x509_publicKeyInfo *keyData,interface___ ~r0,error ~r1)

{
  int *piVar1;
  encoding_asn1_ObjectIdentifier oid;
  __uint8 val;
  __uint8 key;
  encoding_asn1_BitString b;
  __uint8 data;
  crypto_elliptic_Curve ~r0_00;
  error ~r1_00;
  __uint8 ~r0_01;
  char extraout_AL;
  char extraout_AL_05;
  char extraout_AL_06;
  byte extraout_AL_07;
  byte bVar2;
  char extraout_AL_08;
  char extraout_AL_00;
  char extraout_AL_01;
  char extraout_AL_02;
  crypto_ecdh_PublicKey *~r0_02;
  undefined8 *extraout_RAX;
  uint extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  crypto_rsa_PublicKey *pub;
  char extraout_AL_03;
  undefined8 *extraout_RAX_02;
  undefined8 *puVar3;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  undefined8 *extraout_RAX_07;
  math_big_Int *x_00;
  math_big_Int *extraout_RAX_08;
  math_big_Int *x;
  math_big_Int **extraout_RAX_09;
  crypto_ecdsa_PublicKey *pub_1;
  math_big_Int **extraout_RAX_10;
  math_big_Int **ppmVar4;
  undefined8 *extraout_RAX_11;
  undefined8 *extraout_RAX_12;
  undefined8 *extraout_RAX_13;
  undefined8 *extraout_RAX_14;
  undefined8 *extraout_RAX_15;
  undefined8 *extraout_RAX_16;
  undefined8 *extraout_RAX_17;
  int i_4;
  char *extraout_RAX_18;
  math_big_Int *y_1;
  char extraout_AL_04;
  char *extraout_RAX_19;
  char *extraout_RAX_20;
  char *extraout_RAX_21;
  char **extraout_RAX_22;
  crypto_dsa_PublicKey *pub_2;
  char **extraout_RAX_23;
  char **~r0_03;
  int iVar5;
  undefined8 *extraout_RAX_24;
  undefined8 *extraout_RAX_25;
  undefined8 *extraout_RAX_26;
  undefined8 extraout_RCX;
  void *~r0_04;
  void *~r0_05;
  void *~r0_06;
  void *~r0_07;
  void *~r0_08;
  void *~r0_09;
  math_big_Int *y_00;
  math_big_Int *~r0_10;
  math_big_Int *y;
  void *~r0_11;
  void *~r0_12;
  void *~r0_13;
  void *~r0_14;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *extraout_RBX_01;
  void *extraout_RBX_02;
  void *pvVar6;
  bool ~r0_15;
  int i;
  int i_1;
  int i_2;
  int i_3;
  undefined8 *extraout_R11;
  math_big_Int **extraout_R11_00;
  char **extraout_R11_01;
  int unaff_R14;
  interface___ in_stack_fffffffffffffec0;
  int in_stack_fffffffffffffed0;
  runtime_itab *in_stack_fffffffffffffed8;
  void *in_stack_fffffffffffffee0;
  int in_stack_fffffffffffffef0;
  math_big_Int *pmVar7;
  undefined local_c0 [16];
  vendor_golang_org_x_crypto_cryptobyte_String paramsDer_1;
  vendor_golang_org_x_crypto_cryptobyte_String paramsDer;
  vendor_golang_org_x_crypto_cryptobyte_String der;
  encoding_asn1_ObjectIdentifier local_68;
  encoding_asn1_RawValue params;
  
  while (local_c0 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar5 = (keyData->Algorithm).Algorithm.len;
  piVar1 = (keyData->Algorithm).Algorithm.array;
  params.Class = (keyData->Algorithm).Parameters.Class;
  params.Tag._0_4_ = *(undefined4 *)&(keyData->Algorithm).Parameters.Tag;
  params.Tag._4_4_ = *(undefined4 *)((int)&(keyData->Algorithm).Parameters.Tag + 4);
  params.IsCompound = (keyData->Algorithm).Parameters.IsCompound;
  params._17_3_ = *(undefined3 *)&(keyData->Algorithm).Parameters.field_0x11;
  params._20_4_ = *(undefined4 *)&(keyData->Algorithm).Parameters.field_0x14;
  params.Bytes.array._0_4_ = *(undefined4 *)&(keyData->Algorithm).Parameters.Bytes.array;
  params.Bytes.array._4_4_ = *(undefined4 *)((int)&(keyData->Algorithm).Parameters.Bytes.array + 4);
  params.Bytes.len._0_4_ = *(undefined4 *)&(keyData->Algorithm).Parameters.Bytes.len;
  params.Bytes.len._4_4_ = *(undefined4 *)((int)&(keyData->Algorithm).Parameters.Bytes.len + 4);
  params.Bytes.cap._0_4_ = *(undefined4 *)&(keyData->Algorithm).Parameters.Bytes.cap;
  params.Bytes.cap._4_4_ = *(undefined4 *)((int)&(keyData->Algorithm).Parameters.Bytes.cap + 4);
  params.FullBytes.array._0_4_ = *(undefined4 *)&(keyData->Algorithm).Parameters.FullBytes.array;
  params.FullBytes.array._4_4_ =
       *(undefined4 *)((int)&(keyData->Algorithm).Parameters.FullBytes.array + 4);
  params.FullBytes.len._0_4_ = *(undefined4 *)&(keyData->Algorithm).Parameters.FullBytes.len;
  params.FullBytes.len._4_4_ =
       *(undefined4 *)((int)&(keyData->Algorithm).Parameters.FullBytes.len + 4);
  params.FullBytes.cap._0_4_ = *(undefined4 *)&(keyData->Algorithm).Parameters.FullBytes.cap;
  params.FullBytes.cap._4_4_ =
       *(undefined4 *)((int)&(keyData->Algorithm).Parameters.FullBytes.cap + 4);
  b.Bytes.cap = in_stack_fffffffffffffed0;
  b.Bytes.array = (uint8 *)in_stack_fffffffffffffec0._type;
  b.Bytes.len = (int)in_stack_fffffffffffffec0.data;
  b.BitLength = (int)in_stack_fffffffffffffed8;
  ~r0_01.len = iVar5;
  ~r0_01.array = (uint8 *)in_stack_fffffffffffffee0;
  ~r0_01.cap = in_stack_fffffffffffffef0;
  encoding_asn1_BitString_RightAlign(b,~r0_01);
  if (crypto_x509_oidPublicKeyRSA.len == iVar5) {
    i = 0;
    while( true ) {
      if (iVar5 <= i) {
        pvVar6 = ~r0_04;
        if ((encoding_asn1_NullBytes.len !=
             CONCAT44(params.FullBytes.len._4_4_,(undefined4)params.FullBytes.len)) ||
           (runtime_memequal(), pvVar6 = ~r0_05, extraout_AL == '\0')) {
          runtime_newobject((internal_abi_Type *)&DAT_0083e560,pvVar6);
          extraout_RAX[1] = 0x25;
          *extraout_RAX = &DAT_008c3352;
          return;
        }
        runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0_05);
        local_c0._8_8_ = 0;
        local_c0._0_8_ = extraout_RAX_00;
        vendor_golang_org_x_crypto_cryptobyte___String__ReadASN1(&der,&der,0x30,~r0_15);
        if (extraout_AL_00 == '\0') {
          runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_06);
          extraout_RAX_07[1] = 0x1c;
          *extraout_RAX_07 = &DAT_008bdcd5;
          return;
        }
        vendor_golang_org_x_crypto_cryptobyte___String__ReadASN1Integer
                  (&der,in_stack_fffffffffffffec0,false);
        if (extraout_AL_01 != '\0') {
          vendor_golang_org_x_crypto_cryptobyte___String__ReadASN1Integer
                    (&der,in_stack_fffffffffffffec0,true);
          if (extraout_AL_02 == '\0') {
            runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_08);
            extraout_RAX_05[1] = 0x21;
            *extraout_RAX_05 = &DAT_008c1055;
            return;
          }
          if (*(int *)(local_c0._0_8_ + 0x10) == 0) {
            iVar5 = 0;
          }
          else if (*(char *)local_c0._0_8_ == '\0') {
            iVar5 = 1;
          }
          else {
            iVar5 = -1;
          }
          if (iVar5 < 1) {
            runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_08);
            extraout_RAX_04[1] = 0x2a;
            *extraout_RAX_04 = &DAT_008c5bc5;
            return;
          }
          if ((int)local_c0._8_8_ < 1) {
            runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_08);
            extraout_RAX_03[1] = 0x32;
            *extraout_RAX_03 = &DAT_008c8d6d;
            return;
          }
          runtime_newobject((internal_abi_Type *)&DAT_00855920,~r0_08);
          extraout_RAX_01[1] = local_c0._8_8_;
          puVar3 = extraout_RAX_01;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier1();
            *extraout_R11 = extraout_RCX;
            puVar3 = extraout_RAX_02;
            local_c0._0_8_ = extraout_RCX;
          }
          *puVar3 = local_c0._0_8_;
          return;
        }
        runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_07);
        extraout_RAX_06[1] = 0x19;
        *extraout_RAX_06 = &DAT_008bbfeb;
        return;
      }
      if (crypto_x509_oidPublicKeyRSA.array[i] != piVar1[i]) break;
      i = i + 1;
    }
  }
  if (crypto_x509_oidPublicKeyECDSA.len == iVar5) {
    i_1 = 0;
    while( true ) {
      if (iVar5 <= i_1) {
        paramsDer.array =
             (uint8 *)CONCAT44(params.FullBytes.array._4_4_,params.FullBytes.array._0_4_);
        paramsDer.len = CONCAT44(params.FullBytes.len._4_4_,(undefined4)params.FullBytes.len);
        paramsDer.cap = CONCAT44(params.FullBytes.cap._4_4_,(undefined4)params.FullBytes.cap);
        local_68.array = (int *)0x0;
        vendor_golang_org_x_crypto_cryptobyte___String__ReadASN1ObjectIdentifier
                  (&paramsDer,&local_68,SUB41(params.FullBytes.array._0_4_,0));
        if (extraout_AL_03 == '\0') {
          runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_09);
          extraout_RAX_13[1] = 0x1e;
          *extraout_RAX_13 = &DAT_008bf161;
          return;
        }
        oid.cap = in_stack_fffffffffffffed0;
        oid.array = (int *)in_stack_fffffffffffffec0._type;
        oid.len = (int)in_stack_fffffffffffffec0.data;
        ~r0_00.data = in_stack_fffffffffffffee0;
        ~r0_00.tab = in_stack_fffffffffffffed8;
        crypto_x509_namedCurveFromOID(oid,~r0_00);
        if (x_00 == (math_big_Int *)0x0) {
          runtime_newobject((internal_abi_Type *)&DAT_0083e560,y_00);
          extraout_RAX_12[1] = 0x20;
          *extraout_RAX_12 = &DAT_008c0533;
          return;
        }
        data.len = (int)in_stack_fffffffffffffed8;
        data.array = (uint8 *)in_stack_fffffffffffffed0;
        data.cap = (int)in_stack_fffffffffffffee0;
        pmVar7 = x_00;
        crypto_elliptic_Unmarshal((crypto_elliptic_Curve)in_stack_fffffffffffffec0,data,x_00,y_00);
        if (extraout_RAX_08 == (math_big_Int *)0x0) {
          runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_10);
          extraout_RAX_11[1] = 0x2e;
          *extraout_RAX_11 = &DAT_008c7827;
          return;
        }
        runtime_newobject((internal_abi_Type *)&DAT_0088b5c0,~r0_10);
        *extraout_RAX_09 = pmVar7;
        ppmVar4 = extraout_RAX_09;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier3();
          *extraout_R11_00 = y_00;
          extraout_R11_00[1] = extraout_RAX_08;
          extraout_R11_00[2] = ~r0_10;
          ppmVar4 = extraout_RAX_10;
        }
        ppmVar4[1] = y_00;
        ppmVar4[2] = extraout_RAX_08;
        ppmVar4[3] = ~r0_10;
        return;
      }
      if (crypto_x509_oidPublicKeyECDSA.array[i_1] != piVar1[i_1]) break;
      i_1 = i_1 + 1;
    }
  }
  if (crypto_x509_oidPublicKeyEd25519.len == iVar5) {
    i_2 = 0;
    while( true ) {
      if (iVar5 <= i_2) {
        if (CONCAT44(params.FullBytes.len._4_4_,(undefined4)params.FullBytes.len) != 0) {
          runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_04);
          extraout_RAX_15[1] = 0x31;
          *extraout_RAX_15 = &DAT_008c88c1;
          return;
        }
        if (~r0_04 == (void *)0x20) {
          val.cap = in_stack_fffffffffffffed0;
          val.array = (uint8 *)in_stack_fffffffffffffec0._type;
          val.len = (int)in_stack_fffffffffffffec0.data;
          runtime_convTslice(val,~r0_02);
          return;
        }
        runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_04);
        extraout_RAX_14[1] = 0x23;
        *extraout_RAX_14 = &DAT_008c1f89;
        return;
      }
      if (crypto_x509_oidPublicKeyEd25519.array[i_2] != piVar1[i_2]) break;
      i_2 = i_2 + 1;
    }
  }
  if (crypto_x509_oidPublicKeyX25519.len == iVar5) {
    i_3 = 0;
