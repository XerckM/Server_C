  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void text_template_ge(reflect_Value arg1,reflect_Value arg2,bool ~r0,error ~r1)

{
  error ~r1_00;
  bool lessThan;
  int extraout_RBX;
  runtime_itab *unaff_RBP;
  int unaff_R14;
  void *unaff_retaddr;
  reflect_Value in_stack_ffffffffffffffc8;
  reflect_Value in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r1_00.data = unaff_retaddr;
  ~r1_00.tab = unaff_RBP;
  text_template_lt(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffe0,~r0,~r1_00);
  if (extraout_RBX != 0) {
    return;
  }
  return;
}



void text_template_HTMLEscape(io_Writer w,__uint8 b)

{
  byte bVar1;
  int in_RAX;
  int in_RCX;
  int i;
  undefined8 in_RBX;
  int in_RSI;
  uint in_RDI;
  int last;
  uint8 c;
  uint8 *puVar2;
  int iVar3;
  int iVar4;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  i = 0;
  last = 0;
  do {
    if ((int)in_RDI <= i) {
      if (in_RDI < (uint)last) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      (**(code **)(in_RAX + 0x18))
                (in_RBX,in_RCX + (last & -(in_RSI - last) >> 0x3f),in_RDI - last,in_RSI - last);
      return;
    }
    bVar1 = *(byte *)(in_RCX + i);
    if (bVar1 < 0x27) {
      puVar2 = text_template_htmlNull.array;
      iVar3 = text_template_htmlNull.len;
      iVar4 = text_template_htmlNull.cap;
      if (((bVar1 == 0) ||
          (puVar2 = text_template_htmlQuot.array, iVar3 = text_template_htmlQuot.len,
          iVar4 = text_template_htmlQuot.cap, bVar1 == 0x22)) ||
         (puVar2 = text_template_htmlAmp.array, iVar3 = text_template_htmlAmp.len,
         iVar4 = text_template_htmlAmp.cap, bVar1 == 0x26)) {
LAB_00768120:
        if ((uint)i < (uint)last) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        (**(code **)(in_RAX + 0x18))(in_RBX,(last & -(in_RSI - last) >> 0x3f) + in_RCX,i - last);
        (**(code **)(in_RAX + 0x18))(in_RBX,puVar2,iVar3,iVar4);
        last = i + 1;
      }
    }
    else {
      puVar2 = text_template_htmlApos.array;
      iVar3 = text_template_htmlApos.len;
      iVar4 = text_template_htmlApos.cap;
      if (((bVar1 == 0x27) ||
          (puVar2 = text_template_htmlLt.array, iVar3 = text_template_htmlLt.len,
          iVar4 = text_template_htmlLt.cap, bVar1 == 0x3c)) ||
         (puVar2 = text_template_htmlGt.array, iVar3 = text_template_htmlGt.len,
         iVar4 = text_template_htmlGt.cap, bVar1 == 0x3e)) goto LAB_00768120;
    }
    i = i + 1;
  } while( true );
}



void text_template_HTMLEscapeString(string s,string ~r0)

{
  __uint8 ~r0_00;
  __uint8 b;
  int in_RAX;
  int extraout_RAX;
  int extraout_RAX_00;
  strings_Builder *_b;
  void *~r0_01;
  int unaff_R14;
  string in_stack_ffffffffffffffc8;
  string in_stack_ffffffffffffffd8;
  int in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  strings_IndexAny(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffd8,in_RAX);
  if (extraout_RAX < 0) {
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00851780,~r0_01);
  *(undefined8 *)(extraout_RAX_00 + 8) = 0;
  ~r0_00.cap = in_stack_ffffffffffffffe8;
  ~r0_00.array = in_stack_ffffffffffffffd8.str;
  ~r0_00.len = in_stack_ffffffffffffffd8.len;
  runtime_stringtoslicebyte((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc8,~r0_00);
  b.cap = in_stack_ffffffffffffffe8;
  b.array = in_stack_ffffffffffffffd8.str;
  b.len = in_stack_ffffffffffffffd8.len;
  text_template_HTMLEscape((io_Writer)in_stack_ffffffffffffffc8,b);
  if (*(uint *)(extraout_RAX_00 + 0x10) <= (uint)-*(int *)(extraout_RAX_00 + 8)) {
    return;
  }
  if (*(int *)(extraout_RAX_00 + 8) != 0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringlen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafestringnilptr();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void text_template_HTMLEscaper(__interface___ args,string ~r0)

{
  __interface___ args_00;
  string ~r0_00;
  string ~r0_01;
  uint8 *unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  args_00.cap = (int)in_stack_fffffffffffffff0;
  args_00.array = (interface___ *)in_stack_ffffffffffffffe0.str;
  args_00.len = in_stack_ffffffffffffffe0.len;
  ~r0_01.len = unaff_retaddr;
  ~r0_01.str = unaff_RBP;
  text_template_evalArgs(args_00,~r0_01);
  ~r0_00.len = (int)unaff_RBP;
  ~r0_00.str = in_stack_fffffffffffffff0;
  text_template_HTMLEscapeString(in_stack_ffffffffffffffe0,~r0_00);
  return;
}



void text_template_JSEscape(io_Writer w,__uint8 b)

{
  int iVar1;
  __uint8 p;
  string format;
  error err;
  char extraout_AL;
  uint32 r_00;
  int32 r;
  int in_RAX;
  uint uVar2;
  int in_RCX;
  uint uVar3;
  int i;
  undefined8 in_RBX;
  void *extraout_RBX;
  int size;
  void *x;
  uint8 b_1;
  uint in_RSI;
  uint in_RDI;
  int last;
  uint8 c;
  int unaff_R14;
  io_Writer in_stack_ffffffffffffff88;
  uint8 *in_stack_ffffffffffffff98;
  int in_stack_ffffffffffffffa0;
  __interface___ in_stack_ffffffffffffffa8;
  undefined2 in_stack_ffffffffffffffc0;
  byte bVar4;
  byte in_stack_ffffffffffffffc3;
  uint32 val;
  void *pvVar5;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  i = 0;
  last = 0;
  do {
    if ((int)in_RDI <= i) {
      if (in_RDI < (uint)last) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      (**(code **)(in_RAX + 0x18))
                (in_RBX,in_RCX + (last & (int)-(in_RSI - last) >> 0x3f),in_RDI - last,in_RSI - last)
      ;
      return;
    }
    if (in_RDI <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    bVar4 = *(byte *)(in_RCX + i);
    if (bVar4 < 0x28) {
      if ((bVar4 == 0x22) || (0x25 < bVar4)) goto LAB_00768408;
LAB_007683fe:
      if (0x5f < (dword)(bVar4 - 0x20)) goto LAB_00768408;
    }
    else {
      if ((2 < (dword)(bVar4 - 0x3c)) && (bVar4 != 0x5c)) goto LAB_007683fe;
LAB_00768408:
      if ((uint)i < (uint)last) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      (**(code **)(in_RAX + 0x18))(in_RBX,(last & (int)-(in_RSI - last) >> 0x3f) + in_RCX,i - last);
      if (bVar4 < 0x80) {
        if (bVar4 < 0x28) {
          if (bVar4 == 0x22) {
            (**(code **)(in_RAX + 0x18))
                      (in_RBX,text_template_jsQuot.array,text_template_jsQuot.len,
                       text_template_jsQuot.cap);
          }
          else if (bVar4 == 0x26) {
            (**(code **)(in_RAX + 0x18))
                      (in_RBX,text_template_jsAmp.array,text_template_jsAmp.len,
                       text_template_jsAmp.cap);
          }
          else {
            if (bVar4 != 0x27) goto LAB_00768592;
            (**(code **)(in_RAX + 0x18))
                      (in_RBX,text_template_jsApos.array,text_template_jsApos.len,
                       text_template_jsApos.cap);
          }
        }
        else if (bVar4 < 0x3e) {
          if (bVar4 == 0x3c) {
            (**(code **)(in_RAX + 0x18))
                      (in_RBX,text_template_jsLt.array,text_template_jsLt.len,text_template_jsLt.cap
                      );
          }
          else if (bVar4 == 0x3d) {
            (**(code **)(in_RAX + 0x18))
                      (in_RBX,text_template_jsEq.array,text_template_jsEq.len,text_template_jsEq.cap
                      );
          }
          else {
LAB_00768592:
            (**(code **)(in_RAX + 0x18))
                      (in_RBX,text_template_jsLowUni.array,text_template_jsLowUni.len,
                       text_template_jsLowUni.cap);
            uVar3 = (uint)(byte)((bVar4 >> 4) + 1);
            if ((uint)text_template_hex.cap < uVar3) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceAcap();
            }
            uVar2 = (uint)(bVar4 >> 4);
            if (uVar3 < uVar2) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            in_stack_ffffffffffffffc3 = bVar4 & 0xf;
            (**(code **)(in_RAX + 0x18))
                      (in_RBX,text_template_hex.array +
                              ((int)-(text_template_hex.cap - uVar2) >> 0x3f & uVar2),uVar3 - uVar2)
            ;
            uVar3 = (uint)(byte)(in_stack_ffffffffffffffc3 + 1);
            if ((uint)text_template_hex.cap < uVar3) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceAcap();
            }
            uVar2 = (uint)(bVar4 & 0xf);
            if (uVar3 < uVar2) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            (**(code **)(in_RAX + 0x18))
                      (in_RBX,text_template_hex.array +
                              (uVar2 & (int)-(text_template_hex.cap - uVar2) >> 0x3f),uVar3 - uVar2,
                       text_template_hex.cap - uVar2);
          }
        }
        else if (bVar4 == 0x3e) {
          (**(code **)(in_RAX + 0x18))
                    (in_RBX,text_template_jsGt.array,text_template_jsGt.len,text_template_jsGt.cap);
        }
        else {
          if (bVar4 != 0x5c) goto LAB_00768592;
          (**(code **)(in_RAX + 0x18))
                    (in_RBX,text_template_jsBackslash.array,text_template_jsBackslash.len,
                     text_template_jsBackslash.cap);
        }
      }
      else {
        iVar1 = in_RCX + ((int)-(in_RSI - i) >> 0x3f & i);
        p.cap = (int)in_stack_ffffffffffffff98;
        p.array = (uint8 *)in_stack_ffffffffffffff88.tab;
        p.len = (int)in_stack_ffffffffffffff88.data;
        unicode_utf8_DecodeRune(p,(int32)iVar1,in_RDI - i);
        val = r_00;
        pvVar5 = extraout_RBX;
        unicode_IsPrint(r_00,SUB81(extraout_RBX,0));
        if (extraout_AL == '\0') {
          runtime_convT32(val,x);
          format.len = in_stack_ffffffffffffffa0;
          format.str = in_stack_ffffffffffffff98;
          err.tab._2_1_ = bVar4;
          err.tab._0_2_ = in_stack_ffffffffffffffc0;
          err.tab._3_1_ = in_stack_ffffffffffffffc3;
          err.tab._4_4_ = val;
          err.data = pvVar5;
          fmt_Fprintf(in_stack_ffffffffffffff88,format,in_stack_ffffffffffffffa8,in_RAX,err);
        }
        else {
          if (in_RSI < (uint)((int)pvVar5 + i)) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceAcap();
          }
          if ((uint)((int)pvVar5 + i) < (uint)i) {
                    // WARNING: Subroutine does not return
            runtime_panicSliceB();
          }
          (**(code **)(in_RAX + 0x18))(in_RBX,iVar1,pvVar5,in_RSI - i);
        }
        i = (int)pvVar5 + (i - 1U);
      }
      last = i + 1;
    }
    i = i + 1;
  } while( true );
}



void text_template_JSEscapeString(string s,string ~r0)

{
  func_int32__bool **in_RAX;
  int extraout_RAX;
  int extraout_RAX_00;
  strings_Builder *_b;
  int in_RBX;
  void *~r0_00;
  int unaff_R14;
  string in_stack_ffffffffffffffc8;
  __uint8 in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  strings_IndexFunc(in_stack_ffffffffffffffc8,in_RAX,in_RBX);
  if (extraout_RAX < 0) {
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00851780,~r0_00);
  *(undefined8 *)(extraout_RAX_00 + 8) = 0;
  runtime_stringtoslicebyte
            ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffc8,in_stack_ffffffffffffffd8);
  text_template_JSEscape((io_Writer)in_stack_ffffffffffffffc8,in_stack_ffffffffffffffd8);
  if (*(uint *)(extraout_RAX_00 + 0x10) <= (uint)-*(int *)(extraout_RAX_00 + 8)) {
    return;
  }
  if (*(int *)(extraout_RAX_00 + 8) != 0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringlen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafestringnilptr();
}



void text_template_jsIsSpecial(int32 r,bool ~r0)

{
  if (r < 0x28) {
    if ((r == 0x22) || (0x25 < r)) {
      return;
    }
  }
  else {
    if ((dword)(r - 0x3cU) < 3) {
      return;
    }
    if (r == 0x5c) {
      return;
    }
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void text_template_JSEscaper(__interface___ args,string ~r0)

{
  __interface___ args_00;
  string ~r0_00;
  string ~r0_01;
  uint8 *unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  args_00.cap = (int)in_stack_fffffffffffffff0;
  args_00.array = (interface___ *)in_stack_ffffffffffffffe0.str;
  args_00.len = in_stack_ffffffffffffffe0.len;
  ~r0_01.len = unaff_retaddr;
  ~r0_01.str = unaff_RBP;
  text_template_evalArgs(args_00,~r0_01);
  ~r0_00.len = (int)unaff_RBP;
  ~r0_00.str = in_stack_fffffffffffffff0;
  text_template_JSEscapeString(in_stack_ffffffffffffffe0,~r0_00);
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void text_template_URLQueryEscaper(__interface___ args,string ~r0)

{
  __interface___ args_00;
  string ~r0_00;
  string ~r0_01;
  net_url_encoding mode;
  uint8 *unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  args_00.cap = (int)in_stack_fffffffffffffff0;
  args_00.array = (interface___ *)in_stack_ffffffffffffffe0.str;
  args_00.len = in_stack_ffffffffffffffe0.len;
  ~r0_01.len = unaff_retaddr;
  ~r0_01.str = unaff_RBP;
  text_template_evalArgs(args_00,~r0_01);
  ~r0_00.len = (int)unaff_RBP;
  ~r0_00.str = in_stack_fffffffffffffff0;
  net_url_escape(in_stack_ffffffffffffffe0,mode,~r0_00);
  return;
}



void text_template_evalArgs(__interface___ args,string ~r0)

{
  interface___ ~r0_00;
  string ~r0_01;
  int *in_RAX;
  int extraout_RAX;
  char extraout_CL;
  bool ok_1;
  int *piVar1;
  int iVar2;
  int in_RBX;
  undefined8 extraout_RBX;
  undefined8 extraout_RBX_00;
  undefined8 uVar3;
  int i;
  uint8 *extraout_RSI;
  bool ok;
  internal_abi_Type *t;
  int *extraout_RDI;
  int *piVar4;
  reflect_flag f;
  undefined8 *extraout_R11;
  int unaff_R14;
  bool bVar5;
  __interface___ in_stack_ffffffffffffffb8;
  uint8 *in_stack_ffffffffffffffd0;
  int *in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RBX == 1) {
    bVar5 = (undefined *)*in_RAX == &DAT_008075e0;
  }
  else {
    bVar5 = false;
  }
  if (!bVar5) {
    piVar1 = in_RAX;
    for (i = 0; i < in_RBX; i = i + 1) {
      iVar2 = *piVar1;
      if (iVar2 == 0) {
        iVar2 = 0;
      }
      else if (iVar2 == 0) {
        iVar2 = 0;
      }
      ~r0_00.data = piVar1;
      ~r0_00._type = (internal_abi_Type *)i;
      text_template_printableValue((reflect_Value)in_stack_ffffffffffffffb8,~r0_00,SUB81(iVar2,0));
      in_stack_ffffffffffffffd0 = (uint8 *)i;
      in_stack_ffffffffffffffd8 = piVar1;
      if (extraout_CL != '\0') {
        iVar2 = i * 0x10;
        in_RAX[i * 2] = extraout_RAX;
        uVar3 = extraout_RBX;
        piVar4 = in_RAX;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11 = extraout_RBX_00;
          extraout_R11[1] = *(undefined8 *)((int)extraout_RDI + iVar2 + 8);
          uVar3 = extraout_RBX_00;
          i = (int)extraout_RSI;
          piVar4 = extraout_RDI;
        }
        *(undefined8 *)((int)piVar4 + iVar2 + 8) = uVar3;
        in_stack_ffffffffffffffd8 = piVar1;
      }
      piVar1 = in_stack_ffffffffffffffd8 + 2;
    }
    ~r0_01.len = (int)in_stack_ffffffffffffffd8;
    ~r0_01.str = in_stack_ffffffffffffffd0;
    fmt_Sprint(in_stack_ffffffffffffffb8,~r0_01);
  }
  return;
}



// DWARF original prototype: void text/template.(*Template).AddParseTree(text/template.Template * t,
// string name, text/template/parse.Tree * tree, text/template.Template * ~r0,
// text/template.Template * ~r0, error ~r1, error ~r1)
// Local variable nt:text/template.Template *[RAX:8] conflicts with parameter, skipped.

void text_template___Template__AddParseTree
               (text_template_Template *t,string name,text_template_parse_Tree *tree,
               text_template_Template *~r0,text_template_Template *~r0_1,error ~r1,error ~r1_1)

{
  char extraout_AL;
  char extraout_AL_00;
  text_template_common *~r0_00;
  text_template_common *c;
  map_string__text_template_Template extraout_RAX;
  map_string__text_template_Template extraout_RAX_00;
  text_template_FuncMap extraout_RAX_01;
  text_template_FuncMap extraout_RAX_02;
  map_string_reflect_Value extraout_RAX_03;
  map_string_reflect_Value extraout_RAX_04;
  text_template_common *~r0_01;
  text_template_common *c_1;
  map_string__text_template_Template extraout_RAX_05;
  map_string__text_template_Template extraout_RAX_06;
  map_string__text_template_Template phVar1;
  text_template_FuncMap extraout_RAX_07;
  text_template_FuncMap extraout_RAX_08;
  text_template_FuncMap phVar2;
  map_string_reflect_Value extraout_RAX_09;
  map_string_reflect_Value extraout_RAX_10;
  map_string_reflect_Value phVar3;
  text_template_Template *extraout_RAX_11;
  text_template_Template *nt_1;
  text_template_Template *extraout_RAX_12;
  text_template_Template *ptVar4;
  text_template_Template *extraout_RAX_13;
  text_template_Template *extraout_RAX_14;
  text_template_Template *extraout_RAX_15;
  text_template_Template *extraout_RAX_16;
  text_template_Template *ptVar5;
  code *~r0_02;
  text_template_common *extraout_RBX;
  text_template_common *extraout_RBX_00;
  text_template_common *extraout_RSI;
  text_template_common *ptVar6;
  uint8 *extraout_RDI;
  uint8 *extraout_RDI_00;
  uint8 *extraout_RDI_01;
  uint8 *puVar7;
  map_string__text_template_Template *extraout_R11;
  text_template_FuncMap *extraout_R11_00;
  map_string_reflect_Value *extraout_R11_01;
  map_string__text_template_Template *extraout_R11_02;
  text_template_FuncMap *extraout_R11_03;
  map_string_reflect_Value *extraout_R11_04;
  text_template_parse_Tree **extraout_R11_05;
  text_template_common **extraout_R11_06;
  uint8 **extraout_R11_07;
  uint8 **extraout_R11_08;
  text_template_Template **extraout_R11_09;
  int unaff_R14;
  undefined local_20 [16];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (t->common == (text_template_common *)0x0) {
    runtime_newobject((internal_abi_Type *)&DAT_00887220,tree);
    runtime_makemap_small((runtime_hmap *)~r0_00);
    phVar1 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_00;
      extraout_R11[1] = ~r0_00->tmpl;
      phVar1 = extraout_RAX_00;
    }
    ~r0_00->tmpl = phVar1;
    runtime_makemap_small((runtime_hmap *)phVar1);
    phVar2 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RAX_02;
      extraout_R11_00[1] = ~r0_00->parseFuncs;
      phVar2 = extraout_RAX_02;
    }
    ~r0_00->parseFuncs = phVar2;
    runtime_makemap_small((runtime_hmap *)phVar2);
    phVar3 = extraout_RAX_03;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier4();
      *extraout_R11_01 = extraout_RAX_04;
      extraout_R11_01[1] = ~r0_00->execFuncs;
      extraout_R11_01[2] = (map_string_reflect_Value)~r0_00;
      extraout_R11_01[3] = (map_string_reflect_Value)t->common;
      phVar3 = extraout_RAX_04;
    }
    ~r0_00->execFuncs = phVar3;
    t->common = ~r0_00;
  }
  sync___RWMutex__Lock(&t->common->muTmpl);
  ~r0_02 = text_template___Template__AddParseTree_func1;
  local_20._8_8_ = &t->common->muTmpl;
  local_20._0_8_ = text_template___Template__AddParseTree_func1;
  local_10 = (code **)local_20;
  ptVar5 = t;
  if (((text_template_Template *)(t->name).len != ~r0) ||
     (runtime_memequal(), ~r0_02 = (code *)extraout_RBX, puVar7 = extraout_RDI, extraout_AL == '\0')
     ) {
    if (t->common == (text_template_common *)0x0) {
      runtime_newobject((internal_abi_Type *)&DAT_00887220,~r0_02);
      runtime_makemap_small((runtime_hmap *)~r0_01);
      phVar1 = extraout_RAX_05;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_02 = extraout_RAX_06;
        extraout_R11_02[1] = ~r0_01->tmpl;
        phVar1 = extraout_RAX_06;
      }
      ~r0_01->tmpl = phVar1;
      runtime_makemap_small((runtime_hmap *)phVar1);
      phVar2 = extraout_RAX_07;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_03 = extraout_RAX_08;
        extraout_R11_03[1] = ~r0_01->parseFuncs;
        phVar2 = extraout_RAX_08;
      }
      ~r0_01->parseFuncs = phVar2;
      runtime_makemap_small((runtime_hmap *)phVar2);
      phVar3 = extraout_RAX_09;
      ~r0_02 = (code *)extraout_RBX_00;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier4();
        *extraout_R11_04 = extraout_RAX_10;
        extraout_R11_04[1] = ~r0_01->execFuncs;
        extraout_R11_04[2] = (map_string_reflect_Value)~r0_01;
        ~r0_02 = (code *)t->common;
        extraout_R11_04[3] = (map_string_reflect_Value)~r0_02;
        phVar3 = extraout_RAX_10;
      }
      ~r0_01->execFuncs = phVar3;
      t->common = ~r0_01;
    }
    runtime_newobject((internal_abi_Type *)&DAT_008ab7c0,~r0_02);
    (extraout_RAX_11->name).len = (int)~r0;
    ptVar4 = extraout_RAX_11;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_05 = tree;
      ptVar4 = extraout_RAX_12;
    }
    (ptVar4->name).str = (uint8 *)tree;
    ptVar6 = t->common;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_06 = extraout_RSI;
      ptVar4 = extraout_RAX_13;
      ptVar5 = t;
      ptVar6 = extraout_RSI;
    }
    t = ptVar4;
    t->common = ptVar6;
    puVar7 = (ptVar5->leftDelim).str;
    (t->leftDelim).len = (ptVar5->leftDelim).len;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_07 = extraout_RDI_00;
      t = extraout_RAX_14;
      puVar7 = extraout_RDI_00;
    }
    (t->leftDelim).str = puVar7;
    puVar7 = (ptVar5->rightDelim).str;
    (t->rightDelim).len = (ptVar5->rightDelim).len;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_08 = extraout_RDI_01;
      t = extraout_RAX_15;
      puVar7 = extraout_RDI_01;
    }
    (t->rightDelim).str = puVar7;
  }
  text_template___Template__associate(ptVar5,t,(text_template_parse_Tree *)~r0_1,SUB81(puVar7,0));
  if ((extraout_AL_00 != '\0') || (t->Tree == (text_template_parse_Tree *)0x0)) {
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_09 = ~r0_1;
      extraout_R11_09[1] = (text_template_Template *)extraout_RAX_16->Tree;
      t = extraout_RAX_16;
    }
    t->Tree = (text_template_parse_Tree *)~r0_1;
  }
  (**local_10)();
  return;
}



// WARNING: Unknown calling convention

void text_template___Template__AddParseTree_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  sync___RWMutex__Unlock(*(sync_RWMutex **)(in_RDX + 8));
  return;
}



// DWARF original prototype: void text/template.(*Template).Templates(text/template.Template * t,
// []*text/template.Template ~r0, []*text/template.Template ~r0)

void text_template___Template__Templates
               (text_template_Template *t,___text_template_Template ~r0,
               ___text_template_Template ~r0_1)

{
  sync_atomic_Int32 *psVar1;
  sdword sVar2;
  text_template_common *ptVar3;
  map_string__text_template_Template phVar4;
  void *extraout_RAX;
  uint cap;
  void *extraout_RAX_00;
  void *oldPtr;
  uint extraout_RCX;
  void *extraout_RCX_00;
  uint newLen;
  text_template_Template *v;
  undefined8 uVar5;
  runtime_hmap *h;
  uint extraout_RBX;
  uint extraout_RBX_00;
  void *in_RDI;
  void *extraout_RDI;
  void *extraout_RDI_00;
  undefined8 *extraout_R11;
  int unaff_R14;
  runtime_slice in_stack_fffffffffffffef8;
  undefined local_98 [16];
  undefined8 local_88;
  undefined local_80 [16];
  runtime_hiter local_70;
  code **local_10;
  
  while (&local_88 <= *(undefined8 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI_00;
  }
  local_88 = 0;
  if (t->common != (text_template_common *)0x0) {
    ptVar3 = t->common;
    LOCK();
    psVar1 = &(ptVar3->muTmpl).readerCount;
    sVar2 = psVar1->v;
    psVar1->v = psVar1->v + 1;
    UNLOCK();
    if ((sdword)(sVar2 + 1) < 0) {
      sync_runtime_SemacquireRWMutexR(&(ptVar3->muTmpl).readerSem,false,0);
      in_RDI = extraout_RDI;
    }
    local_98._8_8_ = &t->common->muTmpl;
    local_98._0_8_ = text_template___Template__Templates_func1;
    local_10 = (code **)local_98;
    phVar4 = t->common->tmpl;
    if (phVar4 == (map_string__text_template_Template)0x0) {
      cap = 0;
    }
    else {
      cap = phVar4->count;
    }
    runtime_makeslice((internal_abi_Type *)&DAT_008ac1e0,0,cap,in_RDI);
    FUN_0046cdab();
    runtime_mapiterinit((internal_abi_MapType *)&DAT_0082fce0,h,&local_70);
    newLen = 0;
    oldPtr = extraout_RAX;
    while (local_70.key != (void *)0x0) {
      newLen = newLen + 1;
                    // WARNING: Load size is inaccurate
      uVar5 = *local_70.elem;
      if (cap < newLen) {
        runtime_growslice(oldPtr,newLen,cap,1,(internal_abi_Type *)&DAT_008ac1e0,
                          in_stack_fffffffffffffef8);
        cap = extraout_RCX;
        oldPtr = extraout_RAX_00;
        newLen = extraout_RBX;
      }
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = uVar5;
        extraout_R11[1] = *(undefined8 *)((int)extraout_RCX_00 + extraout_RBX_00 * 8 + -8);
        oldPtr = extraout_RCX_00;
        newLen = extraout_RBX_00;
      }
      *(undefined8 *)((int)oldPtr + newLen * 8 + -8) = uVar5;
      runtime_mapiternext(&local_70);
    }
    local_80._8_8_ = cap;
    local_80._0_8_ = newLen;
    (**local_10)();
    return;
  }
  return;
}



// WARNING: Unknown calling convention

void text_template___Template__Templates_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  sync___RWMutex__RUnlock(*(sync_RWMutex **)(in_RDX + 8));
  return;
}



// DWARF original prototype: void text/template.(*Template).Funcs(text/template.Template * t,
// text/template.FuncMap funcMap, text/template.Template * ~r0, text/template.Template * ~r0)

void text_template___Template__Funcs
               (text_template_Template *t,text_template_FuncMap funcMap,text_template_Template *~r0,
               text_template_Template *~r0_1)

{
  undefined8 uVar1;
  undefined8 uVar2;
  text_template_common *~r0_00;
  text_template_common *c;
  map_string__text_template_Template extraout_RAX;
  map_string__text_template_Template extraout_RAX_00;
  map_string__text_template_Template ~r0_01;
  text_template_FuncMap extraout_RAX_01;
  text_template_FuncMap extraout_RAX_02;
  text_template_FuncMap phVar3;
  map_string_reflect_Value extraout_RAX_03;
  map_string_reflect_Value extraout_RAX_04;
  map_string_reflect_Value phVar4;
  undefined8 *puVar5;
  undefined8 *extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  map_string__text_template_Template *extraout_R11;
  text_template_FuncMap *extraout_R11_00;
  map_string_reflect_Value *extraout_R11_01;
  undefined8 *extraout_R11_02;
  int unaff_R14;
  text_template_Template *ptStack0000000000000008;
  string in_stack_ffffffffffffff28;
  undefined local_80 [16];
  undefined local_70 [96];
  code **local_10;
  
  ptStack0000000000000008 = t;
  while (local_70 + 0x18 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (ptStack0000000000000008->common == (text_template_common *)0x0) {
    runtime_newobject((internal_abi_Type *)&DAT_00887220,funcMap);
    runtime_makemap_small((runtime_hmap *)~r0_00);
    ~r0_01 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_00;
      extraout_R11[1] = ~r0_00->tmpl;
      ~r0_01 = extraout_RAX_00;
    }
    ~r0_00->tmpl = ~r0_01;
    runtime_makemap_small((runtime_hmap *)~r0_01);
    phVar3 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RAX_02;
      extraout_R11_00[1] = ~r0_00->parseFuncs;
      phVar3 = extraout_RAX_02;
    }
    ~r0_00->parseFuncs = phVar3;
    runtime_makemap_small((runtime_hmap *)phVar3);
    phVar4 = extraout_RAX_03;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier4();
      *extraout_R11_01 = extraout_RAX_04;
      extraout_R11_01[1] = ~r0_00->execFuncs;
      extraout_R11_01[2] = (map_string_reflect_Value)~r0_00;
      extraout_R11_01[3] = (map_string_reflect_Value)ptStack0000000000000008->common;
      phVar4 = extraout_RAX_04;
    }
    ~r0_00->execFuncs = phVar4;
    ptStack0000000000000008->common = ~r0_00;
  }
  sync___RWMutex__Lock(&ptStack0000000000000008->common->muFuncs);
  local_80._8_8_ = &ptStack0000000000000008->common->muFuncs;
  local_80._0_8_ = text_template___Template__Funcs_func1;
  local_10 = (code **)local_80;
  text_template_addValueFuncs(ptStack0000000000000008->common->execFuncs,funcMap);
  phVar3 = ptStack0000000000000008->common->parseFuncs;
  FUN_0046cdab();
  runtime_mapiterinit((internal_abi_MapType *)&DAT_0083ac40,(runtime_hmap *)funcMap,
                      (runtime_hiter *)local_70);
  while ((void **)local_70._0_8_ != (void **)0x0) {
    uVar1 = *(undefined8 *)local_70._8_8_;
    uVar2 = *(undefined8 *)(local_70._8_8_ + 8);
    runtime_mapassign_faststr
              ((internal_abi_MapType *)&DAT_0083ac40,(runtime_hmap *)phVar3,
               in_stack_ffffffffffffff28,*(void **)local_70._0_8_);
    *extraout_RAX_05 = uVar1;
    puVar5 = extraout_RAX_05;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
