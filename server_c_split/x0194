{
  string ~r0;
  void *x;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  void *~r0_00;
  undefined8 *extraout_R11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffb0;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  uint8 *in_stack_ffffffffffffffe0;
  int in_stack_ffffffffffffffe8;
  void *pvVar2;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (f != 0) {
    if ((f & 0x60) == 0) {
      return;
    }
    reflect_valueMethodName((string)in_stack_ffffffffffffffb0);
    ~r0.len = in_stack_ffffffffffffffe8;
    ~r0.str = in_stack_ffffffffffffffe0;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,(string)in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc0,
               in_stack_ffffffffffffffd0,~r0);
    runtime_convTstring((string)in_stack_ffffffffffffffb0,x);
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  reflect_valueMethodName((string)in_stack_ffffffffffffffb0);
  pvVar2 = ~r0_00;
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_00);
  extraout_RAX_00[1] = pvVar2;
  puVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RAX;
    puVar1 = extraout_RAX_01;
  }
  *puVar1 = extraout_RAX;
  puVar1[2] = 0;
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffb0);
}



// WARNING: Unknown calling convention

void reflect_flag_mustBeAssignableSlow(reflect_flag f)

{
  string ~r0;
  string ~r0_00;
  void *x;
  void *x_00;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  void *~r0_01;
  undefined8 *extraout_R11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffb0;
  string in_stack_ffffffffffffffc0;
  string in_stack_ffffffffffffffd0;
  uint8 *in_stack_ffffffffffffffe0;
  int in_stack_ffffffffffffffe8;
  void *pvVar2;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (f == 0) {
    reflect_valueMethodName((string)in_stack_ffffffffffffffb0);
    pvVar2 = ~r0_01;
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_01);
    extraout_RAX_00[1] = pvVar2;
    puVar1 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = extraout_RAX;
      puVar1 = extraout_RAX_01;
    }
    *puVar1 = extraout_RAX;
    puVar1[2] = 0;
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  if ((f & 0x60) != 0) {
    reflect_valueMethodName((string)in_stack_ffffffffffffffb0);
    ~r0_00.len = in_stack_ffffffffffffffe8;
    ~r0_00.str = in_stack_ffffffffffffffe0;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,(string)in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc0,
               in_stack_ffffffffffffffd0,~r0_00);
    runtime_convTstring((string)in_stack_ffffffffffffffb0,x_00);
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  if (((dword)f >> 8 & 1) != 0) {
    return;
  }
  reflect_valueMethodName((string)in_stack_ffffffffffffffb0);
  ~r0.len = in_stack_ffffffffffffffe8;
  ~r0.str = in_stack_ffffffffffffffe0;
  runtime_concatstring3
            ((runtime_tmpBuf *)0x0,(string)in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc0,
             in_stack_ffffffffffffffd0,~r0);
  runtime_convTstring((string)in_stack_ffffffffffffffb0,x);
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffb0);
}



void reflect_Value_Addr(reflect_Value v,reflect_Value ~r0)

{
  reflect_rtype *in_RAX;
  dword in_ECX;
  reflect_flag fl;
  internal_abi_Type *in_RBX;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_ECX >> 8 & 1) != 0) {
    reflect___rtype__ptrTo(in_RAX,in_RBX);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffd8);
}



void reflect_Value_Bool(reflect_Value v,bool ~r0)

{
  dword in_ECX;
  int unaff_R14;
  reflect_Value in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_ECX & 0x1f) != 1) {
    reflect_Value_panicNotBool(in_stack_ffffffffffffffd8);
  }
  return;
}



void reflect_Value_panicNotBool(reflect_Value v)

{
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  dword in_ECX;
  void *~r0;
  undefined8 *extraout_R11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_ECX & 0x1f) == 1) {
    return;
  }
  reflect_valueMethodName((string)in_stack_ffffffffffffffd0);
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0);
  extraout_RAX_00[1] = ~r0;
  puVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RAX;
    puVar1 = extraout_RAX_01;
  }
  *puVar1 = extraout_RAX;
  puVar1[2] = (uint)(in_ECX & 0x1f);
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffd0);
}


/*
Unable to decompile 'reflect.Value.Bytes'
Cause: 
Low-level Error: Overlapping input varnodes
*/


void reflect_Value_bytesSlow(reflect_Value v,__uint8 ~r0)

{
  int in_RAX;
  undefined8 *extraout_RAX;
  dword in_ECX;
  uint uVar1;
  int n;
  int iVar2;
  void *in_RBX;
  uint8 *p;
  byte bVar3;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar1 = (uint)(in_ECX & 0x1f);
  if (uVar1 != 0x11) {
    if (uVar1 != 0x17) {
      runtime_newobject((internal_abi_Type *)&DAT_00850d80,in_RBX);
      extraout_RAX[1] = 0x13;
      *extraout_RAX = &DAT_008b8588;
      extraout_RAX[2] = uVar1;
                    // WARNING: Subroutine does not return
      runtime_gopanic(in_stack_ffffffffffffffe0);
    }
    bVar3 = *(byte *)(in_RAX + 0x17) & 0x1f;
    if (bVar3 < 0x13) {
      if (bVar3 == 0x11) {
        iVar2 = *(int *)(in_RAX + 0x30);
        goto LAB_004d4c5a;
      }
      if (bVar3 == 0x12) {
        iVar2 = *(int *)(in_RAX + 0x30);
        goto LAB_004d4c5a;
      }
    }
    else {
      if (bVar3 == 0x15) {
        iVar2 = *(int *)(in_RAX + 0x38);
        goto LAB_004d4c5a;
      }
      if (bVar3 == 0x16) {
        iVar2 = *(int *)(in_RAX + 0x30);
        goto LAB_004d4c5a;
      }
      if (bVar3 == 0x17) {
        iVar2 = *(int *)(in_RAX + 0x30);
        goto LAB_004d4c5a;
      }
    }
    iVar2 = 0;
LAB_004d4c5a:
    if ((*(byte *)(iVar2 + 0x17) & 0x1f) == 8) {
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe0);
  }
  bVar3 = *(byte *)(in_RAX + 0x17) & 0x1f;
  if (bVar3 < 0x13) {
    if (bVar3 == 0x11) {
      iVar2 = *(int *)(in_RAX + 0x30);
      goto LAB_004d4bbe;
    }
    if (bVar3 == 0x12) {
      iVar2 = *(int *)(in_RAX + 0x30);
      goto LAB_004d4bbe;
    }
  }
  else {
    if (bVar3 == 0x15) {
      iVar2 = *(int *)(in_RAX + 0x38);
      goto LAB_004d4bbe;
    }
    if (bVar3 == 0x16) {
      iVar2 = *(int *)(in_RAX + 0x30);
      goto LAB_004d4bbe;
    }
    if (bVar3 == 0x17) {
      iVar2 = *(int *)(in_RAX + 0x30);
      goto LAB_004d4bbe;
    }
  }
  iVar2 = 0;
LAB_004d4bbe:
  if ((*(byte *)(iVar2 + 0x17) & 0x1f) != 8) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe0);
  }
  if ((in_ECX >> 8 & 1) == 0) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffe0);
  }
  if ((int)*(uint *)(in_RAX + 0x40) < 0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafeslicelen();
  }
  if (*(uint *)(in_RAX + 0x40) <= (uint)-(int)in_RBX) {
    return;
  }
  if (in_RBX != (void *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafeslicelen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafeslicenilptr();
}



void reflect_Value_runes(reflect_Value v,__int32 ~r0)

{
  int in_RAX;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  dword in_ECX;
  byte bVar2;
  int iVar3;
  void *~r0_00;
  undefined8 *extraout_R11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_ECX & 0x1f) != 0x17) {
    reflect_valueMethodName((string)in_stack_ffffffffffffffd0);
    runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_00);
    extraout_RAX_00[1] = ~r0_00;
    puVar1 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = extraout_RAX;
      puVar1 = extraout_RAX_01;
    }
    *puVar1 = extraout_RAX;
    puVar1[2] = (uint)(in_ECX & 0x1f);
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffd0);
  }
  bVar2 = *(byte *)(in_RAX + 0x17) & 0x1f;
  if (bVar2 < 0x13) {
    if (bVar2 == 0x11) {
      iVar3 = *(int *)(in_RAX + 0x30);
      goto LAB_004d4dba;
    }
    if (bVar2 == 0x12) {
      iVar3 = *(int *)(in_RAX + 0x30);
      goto LAB_004d4dba;
    }
  }
  else {
    if (bVar2 == 0x15) {
      iVar3 = *(int *)(in_RAX + 0x38);
      goto LAB_004d4dba;
    }
    if (bVar2 == 0x16) {
      iVar3 = *(int *)(in_RAX + 0x30);
      goto LAB_004d4dba;
    }
    if (bVar2 == 0x17) {
      iVar3 = *(int *)(in_RAX + 0x30);
      goto LAB_004d4dba;
    }
  }
  iVar3 = 0;
LAB_004d4dba:
  if ((*(byte *)(iVar3 + 0x17) & 0x1f) == 5) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffd0);
}



void reflect_Value_CanAddr(reflect_Value v,bool ~r0)

{
  return;
}



void reflect_Value_CanSet(reflect_Value v,bool ~r0)

{
  return;
}



void reflect_Value_Call(reflect_Value v,__reflect_Value in,__reflect_Value ~r0)

{
  reflect_Value v_00;
  __reflect_Value ~r0_00;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  uint in_RCX;
  uint uVar2;
  void *~r0_01;
  undefined8 *extraout_R11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff90;
  reflect_flag in_stack_ffffffffffffffa0;
  string in_stack_ffffffffffffffa8;
  __reflect_Value in_stack_ffffffffffffffb8;
  undefined8 in_stack_ffffffffffffffd0;
  void *pvVar3;
  uint in_stack_ffffffffffffffd8;
  int in_stack_ffffffffffffffe0;
  undefined8 uVar4;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar2 = (uint)((dword)in_RCX & 0x1f);
  if (uVar2 == 0x13) {
    if ((in_RCX & 0x60) != 0) {
      reflect_flag_mustBeExportedSlow(in_RCX);
      in_stack_ffffffffffffffd8 = in_RCX;
    }
    v_00.flag = in_stack_ffffffffffffffa0;
    v_00.typ_ = in_stack_ffffffffffffff90._type;
    v_00.ptr = in_stack_ffffffffffffff90.data;
    ~r0_00.len = in_stack_ffffffffffffffd8;
    ~r0_00.array = (reflect_Value *)in_stack_ffffffffffffffd0;
    ~r0_00.cap = in_stack_ffffffffffffffe0;
    reflect_Value_call(v_00,in_stack_ffffffffffffffa8,in_stack_ffffffffffffffb8,~r0_00);
    return;
  }
  reflect_valueMethodName((string)in_stack_ffffffffffffff90);
  pvVar3 = ~r0_01;
  uVar4 = extraout_RAX;
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_01);
  extraout_RAX_00[1] = pvVar3;
  puVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = uVar4;
    puVar1 = extraout_RAX_01;
  }
  *puVar1 = uVar4;
  puVar1[2] = uVar2;
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffff90);
}



void reflect_Value_CallSlice(reflect_Value v,__reflect_Value in,__reflect_Value ~r0)

{
  reflect_Value v_00;
  __reflect_Value ~r0_00;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar1;
  undefined8 *extraout_RAX_01;
  uint in_RCX;
  uint uVar2;
  void *~r0_01;
  undefined8 *extraout_R11;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff90;
  reflect_flag in_stack_ffffffffffffffa0;
  string in_stack_ffffffffffffffa8;
  __reflect_Value in_stack_ffffffffffffffb8;
  undefined8 in_stack_ffffffffffffffd0;
  void *pvVar3;
  uint in_stack_ffffffffffffffd8;
  int in_stack_ffffffffffffffe0;
  undefined8 uVar4;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar2 = (uint)((dword)in_RCX & 0x1f);
  if (uVar2 == 0x13) {
    if ((in_RCX & 0x60) != 0) {
      reflect_flag_mustBeExportedSlow(in_RCX);
      in_stack_ffffffffffffffd8 = in_RCX;
    }
    v_00.flag = in_stack_ffffffffffffffa0;
    v_00.typ_ = in_stack_ffffffffffffff90._type;
    v_00.ptr = in_stack_ffffffffffffff90.data;
    ~r0_00.len = in_stack_ffffffffffffffd8;
    ~r0_00.array = (reflect_Value *)in_stack_ffffffffffffffd0;
    ~r0_00.cap = in_stack_ffffffffffffffe0;
    reflect_Value_call(v_00,in_stack_ffffffffffffffa8,in_stack_ffffffffffffffb8,~r0_00);
    return;
  }
  reflect_valueMethodName((string)in_stack_ffffffffffffff90);
  pvVar3 = ~r0_01;
  uVar4 = extraout_RAX;
  runtime_newobject((internal_abi_Type *)&DAT_00850d80,~r0_01);
  extraout_RAX_00[1] = pvVar3;
  puVar1 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = uVar4;
    puVar1 = extraout_RAX_01;
  }
  *puVar1 = uVar4;
  puVar1[2] = uVar2;
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffff90);
}



void reflect_Value_call(reflect_Value v,string op,__reflect_Value in,__reflect_Value ~r0)

{
  uint *puVar1;
  byte bVar2;
  reflect_rtype *t_00;
  internal_abi_Type *target;
  int64 v_00;
  int *piVar3;
  string op_00;
  reflect_Type typ;
  interface___ ~r0_00;
  interface___ x;
  reflect_Type typ_00;
  interface___ e_00;
  interface___ e_01;
  interface___ e_02;
  string ~r0_01;
  string s_00;
  string s_01;
  string s_02;
  interface___ e_03;
  interface___ e_04;
  interface___ e_05;
  interface___ e_06;
  interface___ e_07;
  interface___ e_08;
  string val;
  interface___ e_09;
  string ~r0_02;
  string val_00;
  interface___ e_10;
  string a0;
  string val_01;
  interface___ e_11;
  interface___ e_12;
  interface___ e_13;
  interface___ e_14;
  interface___ e_15;
  interface___ e_16;
  interface___ e_17;
  reflect_Value v_01;
  reflect_Value v_02;
  reflect_Value v_03;
  reflect_Value v_04;
  reflect_Value v_05;
  __string a;
  __string a_00;
  reflect_abiDesc abid_00;
  string a1;
  reflect_Value v_06;
  reflect_Value ~r0_03;
  reflect_Value ~r0_04;
  reflect_Type ~r0_05;
  string context;
  reflect_Type ~r0_06;
  string ~r0_07;
  string ~r0_08;
  reflect_Value ~r0_09;
  reflect_Value x_00;
  string a2;
  reflect_Value ~r0_10;
  internal_abi_InterfaceType *piVar4;
  uint8 *puVar5;
  int iVar6;
  uintptr uVar7;
  uintptr uVar8;
  uint8 *puVar9;
  uint reg;
  char cVar10;
  internal_abi_FuncType *in_RAX;
  int extraout_RAX;
  internal_abi_Type *rcvrtype;
  internal_abi_FuncType *piVar11;
  undefined1 *extraout_RAX_00;
  internal_abi_Type *i_00;
  int extraout_RAX_01;
  internal_abi_FuncType *piVar12;
  internal_abi_Type *typ_01;
  internal_abi_Type *frametype;
  internal_abi_Type *have;
  void **extraout_RAX_02;
  internal_abi_Type *extraout_RAX_03;
  internal_abi_Type *extraout_RAX_04;
  internal_abi_Type *extraout_RAX_05;
  internal_abi_Type *piVar13;
  int extraout_RAX_06;
  int extraout_RAX_07;
  int extraout_RAX_08;
  int extraout_RAX_09;
  int iVar14;
  internal_abi_Type *extraout_RAX_10;
  void *s;
  undefined8 extraout_RAX_11;
  undefined8 extraout_RAX_12;
  undefined8 uVar15;
  internal_abi_Type *extraout_RAX_13;
  internal_abi_Type *extraout_RAX_14;
  int iVar16;
  undefined1 *extraout_RAX_15;
  internal_abi_Type **dstPtr;
  void *x_01;
  void *x_02;
  void *x_03;
  dword in_ECX;
  dword extraout_ECX;
  void *extraout_RCX;
  internal_abi_Type *targ;
  internal_abi_Type *extraout_RCX_00;
  internal_abi_Type *rcvr;
  uint len;
  int nout;
  uint uVar17;
  uint extraout_RCX_01;
  uint extraout_RCX_02;
  undefined8 extraout_RCX_03;
  int *extraout_RCX_04;
  int *piVar18;
  undefined1 *puVar19;
  void **ptr;
  void **stackArgs_00;
  void **in_RBX;
  void *fn;
  internal_abi_FuncType *extraout_RBX;
  internal_abi_FuncType *t;
  internal_abi_Type *extraout_RBX_00;
  uintptr uadd;
  internal_abi_Type *~r0_11;
  sync_Pool *p;
  sync_Pool *framePool;
  void **extraout_RBX_01;
  void *stackArgs;
  uintptr uadd_3;
  void *src;
  void *extraout_RBX_02;
  void *extraout_RBX_03;
  void *extraout_RBX_04;
  undefined8 extraout_RBX_05;
  undefined8 extraout_RBX_06;
  undefined8 uVar20;
  int extraout_RBX_07;
  internal_abi_Type *extraout_RBX_08;
  ushort uVar21;
  internal_abi_Type *in_RSI;
  uintptr uadd_2;
  int inStart;
  void *pvVar22;
  internal_abi_Type *tv;
  internal_abi_Type *extraout_RSI;
  internal_abi_Type *extraout_RSI_00;
  int extraout_RSI_01;
  void *extraout_RSI_02;
  void *extraout_RSI_03;
  int *in_RDI;
  sync_Pool *framePool_00;
  int i_2;
  void *extraout_RDI;
  void *extraout_RDI_00;
  void *extraout_RDI_01;
  uintptr uadd_4;
  int e_1;
  int extraout_RDI_02;
  internal_abi_Type *extraout_RDI_03;
  int extraout_RDI_04;
  void *offset_1;
  int extraout_RDI_05;
  void *offset;
  sdword extraout_R8D;
  internal_abi_Type **in_R8;
  internal_abi_Type **ppiVar24;
  uintptr frameSize;
  sdword extraout_R8D_00;
  sdword extraout_R8D_01;
  sdword sVar23;
  reflect_rtype *targ_1;
  uint uVar25;
  internal_abi_Type *piVar26;
  internal_abi_Type *extraout_R8;
  int extraout_R8_00;
  int extraout_R8_01;
  int iVar27;
  internal_abi_Type *extraout_R8_02;
  int iVar28;
  int ~r0_12;
  internal_abi_Type **extraout_R8_03;
  void *in_R9;
  int m;
  reflect_flag fl;
  void *pvVar29;
  uintptr uadd_1;
  void *extraout_R10;
  void *extraout_R10_00;
  int e;
  int extraout_R10_01;
  int s_2;
  uint uVar30;
  int extraout_R10_02;
  void **extraout_R11;
  void **extraout_R11_00;
  undefined8 *extraout_R11_01;
  void **extraout_R11_02;
  internal_abi_Type **extraout_R11_03;
  internal_abi_Type **extraout_R11_04;
  undefined8 *extraout_R11_05;
  void **extraout_R11_06;
  internal_abi_Type **extraout_R11_07;
  internal_abi_Type **extraout_R11_08;
  bool isSlice;
  int s_1;
  undefined1 *puVar31;
  int unaff_R14;
  int n;
  void *addr;
  bool bVar32;
  undefined auVar33 [16];
  internal_abi_Type *in_stack_fffffffffffff9f8;
  internal_abi_Type *piVar34;
  void *in_stack_fffffffffffffa00;
  uint8 *in_stack_fffffffffffffa08;
  runtime_itab *in_stack_fffffffffffffa10;
  uint8 *in_stack_fffffffffffffa18;
  internal_abi_Type *in_stack_fffffffffffffa20;
  string in_stack_fffffffffffffa28;
  undefined auVar35 [24];
  undefined auVar37 [24];
  undefined in_stack_fffffffffffffa38 [120];
  int i_3;
  int i_1;
  int i;
  int local_480;
  reflect_abiDesc abid;
  internal_abi_RegArgs regArgs;
  undefined auVar36 [72];
  
  while (&stack0xfffffffffffffa78 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_ECX >> 9 & 1) == 0) {
    fn = in_RBX;
    if ((in_ECX >> 7 & 1) != 0) {
      fn = *in_RBX;
    }
    iVar14 = 0;
    in_RBX = (void **)0x0;
    in_ECX = 0;
    piVar11 = in_RAX;
    in_RAX = (internal_abi_FuncType *)0x0;
  }
  else {
    op_00.len = (int)in_stack_fffffffffffffa00;
    op_00.str = (uint8 *)in_stack_fffffffffffff9f8;
    v_06.ptr = in_stack_fffffffffffffa10;
    v_06.typ_ = (internal_abi_Type *)in_stack_fffffffffffffa08;
    v_06.flag = (reflect_flag)in_stack_fffffffffffffa18;
    reflect_methodReceiver(op_00,v_06,(int)in_RDI,in_RSI,in_RAX,in_RBX);
    piVar11 = extraout_RBX;
    iVar14 = extraout_RAX;
    fn = extraout_RCX;
  }
  if (fn == (void *)0x0) {
    e_17.data = in_stack_fffffffffffffa00;
    e_17._type = in_stack_fffffffffffff9f8;
                    // WARNING: Subroutine does not return
    runtime_gopanic(e_17);
  }
  if ((in_RSI == (internal_abi_Type *)0x9) && (*in_RDI == 0x63696c536c6c6143)) {
    bVar32 = *(char *)(in_RDI + 1) == 'e';
  }
  else {
    bVar32 = false;
  }
  uVar21 = piVar11->OutCount;
  n = (int)piVar11->InCount;
  if (bVar32) {
    if ((uVar21 & 0x8000) == 0) {
      e_16.data = in_stack_fffffffffffffa00;
      e_16._type = in_stack_fffffffffffff9f8;
                    // WARNING: Subroutine does not return
      runtime_gopanic(e_16);
    }
    if ((int)in_R9 < n) {
      e_15.data = in_stack_fffffffffffffa00;
      e_15._type = in_stack_fffffffffffff9f8;
                    // WARNING: Subroutine does not return
      runtime_gopanic(e_15);
    }
    if (n < (int)in_R9) {
      e_14.data = in_stack_fffffffffffffa00;
      e_14._type = in_stack_fffffffffffff9f8;
                    // WARNING: Subroutine does not return
      runtime_gopanic(e_14);
    }
  }
  else {
    if ((uVar21 & 0x8000) != 0) {
      n = n + -1;
    }
    if ((int)in_R9 < n) {
      e_13.data = in_stack_fffffffffffffa00;
      e_13._type = in_stack_fffffffffffff9f8;
                    // WARNING: Subroutine does not return
      runtime_gopanic(e_13);
    }
    if (((uVar21 & 0x8000) == 0) && (n < (int)in_R9)) {
      e_12.data = in_stack_fffffffffffffa00;
      e_12._type = in_stack_fffffffffffff9f8;
                    // WARNING: Subroutine does not return
      runtime_gopanic(e_12);
    }
  }
  ppiVar24 = in_R8;
  for (local_480 = 0; local_480 < (int)in_R9; local_480 = local_480 + 1) {
    if (((uint)ppiVar24[2] & 0x1f) == 0) {
      a0.len = (int)in_stack_fffffffffffffa00;
      a0.str = (uint8 *)in_stack_fffffffffffff9f8;
      a1.len = (int)in_stack_fffffffffffffa10;
      a1.str = in_stack_fffffffffffffa08;
      a2.len = (int)in_stack_fffffffffffffa20;
      a2.str = in_stack_fffffffffffffa18;
      runtime_concatstring3((runtime_tmpBuf *)0x0,a0,a1,a2,in_stack_fffffffffffffa28);
      val_01.len = (int)in_stack_fffffffffffffa00;
      val_01.str = (uint8 *)in_stack_fffffffffffff9f8;
      runtime_convTstring(val_01,x_03);
      e_11.data = in_stack_fffffffffffffa00;
      e_11._type = in_stack_fffffffffffff9f8;
                    // WARNING: Subroutine does not return
      runtime_gopanic(e_11);
    }
    ppiVar24 = ppiVar24 + 3;
  }
  for (pvVar29 = (void *)0x0; (int)pvVar29 < n; pvVar29 = (void *)((int)pvVar29 + 1)) {
    if (in_R9 <= pvVar29) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    piVar13 = in_R8[(int)pvVar29 * 3];
    if ((in_R8[(int)pvVar29 * 3 + 2] == (internal_abi_Type *)0x0) ||
       (((dword)in_R8[(int)pvVar29 * 3 + 2] >> 9 & 1) != 0)) {
      v_01.ptr = in_stack_fffffffffffffa00;
      v_01.typ_ = in_stack_fffffffffffff9f8;
      v_01.flag = (reflect_flag)in_stack_fffffffffffffa08;
      ~r0_05.data = in_stack_fffffffffffffa18;
      ~r0_05.tab = in_stack_fffffffffffffa10;
      reflect_Value_typeSlow(v_01,~r0_05);
      puVar19 = extraout_RAX_00;
      piVar13 = extraout_RBX_00;
    }
    else {
      puVar19 = go_itab__reflect_rtype_reflect_Type;
    }
    if (((piVar11->Type).TFlag & 1) == 0) {
      uadd = 0x38;
    }
    else {
      uadd = 0x48;
    }
    pvVar22 = (void *)(uint)piVar11->InCount;
    if (piVar11->InCount == 0) {
      pvVar22 = (void *)0x0;
      iVar16 = 0;
    }
    else {
      iVar16 = (int)&(piVar11->Type).Size_ + uadd;
      if ((void *)0x10000 < pvVar22) {
                    // WARNING: Subroutine does not return
        runtime_panicSlice3Alen();
      }
    }
    if (pvVar22 <= pvVar29) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    t_00 = *(reflect_rtype **)(iVar16 + (int)pvVar29 * 8);
    cVar10 = (**(code **)(puVar19 + 0x20))(piVar13,go_itab__reflect_rtype_reflect_Type);
    if (cVar10 == '\0') {
      (**(code **)(puVar19 + 0xf8))(piVar13);
      ~r0_02.len = (int)in_stack_fffffffffffffa00;
      ~r0_02.str = (uint8 *)in_stack_fffffffffffff9f8;
      reflect___rtype__String(t_00,~r0_02);
      FUN_0046cdab();
      a_00.len = (int)in_stack_fffffffffffffa00;
      a_00.array = (string *)in_stack_fffffffffffff9f8;
      a_00.cap = (int)in_stack_fffffffffffffa08;
      ~r0_08.len = (int)in_stack_fffffffffffffa18;
      ~r0_08.str = (uint8 *)in_stack_fffffffffffffa10;
      runtime_concatstrings((runtime_tmpBuf *)0x0,a_00,~r0_08);
      val_00.len = (int)in_stack_fffffffffffffa00;
      val_00.str = (uint8 *)in_stack_fffffffffffff9f8;
      runtime_convTstring(val_00,x_02);
      e_10.data = in_stack_fffffffffffffa00;
      e_10._type = in_stack_fffffffffffff9f8;
                    // WARNING: Subroutine does not return
      runtime_gopanic(e_10);
    }
  }
  pvVar29 = in_R9;
  if ((!bVar32) && ((uVar21 & 0x8000) != 0)) {
    if (((piVar11->Type).TFlag & 1) == 0) {
      uadd_1 = 0x38;
    }
    else {
      uadd_1 = 0x48;
    }
    pvVar29 = (void *)(uint)piVar11->InCount;
    if (piVar11->InCount == 0) {
      pvVar29 = (void *)0x0;
      iVar16 = 0;
    }
    else {
      iVar16 = (int)&(piVar11->Type).Size_ + uadd_1;
      if ((void *)0x10000 < pvVar29) {
                    // WARNING: Subroutine does not return
        runtime_panicSlice3Alen();
      }
    }
    if (pvVar29 <= (uint)n) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    typ.data = in_stack_fffffffffffffa00;
    typ.tab = (runtime_itab *)in_stack_fffffffffffff9f8;
    ~r0_03.ptr = in_stack_fffffffffffffa10;
    ~r0_03.typ_ = (internal_abi_Type *)in_stack_fffffffffffffa08;
    ~r0_03.flag = (reflect_flag)in_stack_fffffffffffffa18;
    reflect_MakeSlice(typ,0x968c08,*(int *)(iVar16 + n * 8),~r0_03);
    if (((piVar11->Type).TFlag & 1) == 0) {
      uadd_2 = 0x38;
    }
    else {
      uadd_2 = 0x48;
    }
    pvVar29 = (void *)(uint)piVar11->InCount;
    if (piVar11->InCount == 0) {
      pvVar29 = (void *)0x0;
      iVar16 = 0;
    }
    else {
      iVar16 = (int)&(piVar11->Type).Size_ + uadd_2;
      if ((void *)0x10000 < pvVar29) {
                    // WARNING: Subroutine does not return
        runtime_panicSlice3Alen();
      }
    }
    if (pvVar29 <= (uint)n) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    reflect_elem(*(internal_abi_Type **)(iVar16 + n * 8),~r0_11);
    if (extraout_RAX_01 == 0) {
      puVar19 = (undefined1 *)0x0;
      iVar16 = 0;
    }
    else {
      puVar19 = go_itab__reflect_rtype_reflect_Type;
      iVar16 = extraout_RAX_01;
    }
    for (iVar28 = 0; iVar28 < (int)in_R9 - n; iVar28 = iVar28 + 1) {
      pvVar29 = (void *)(n + iVar28);
      if (in_R9 <= pvVar29) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      piVar13 = in_R8[(int)pvVar29 * 3];
      if ((in_R8[(int)pvVar29 * 3 + 2] == (internal_abi_Type *)0x0) ||
         (((dword)in_R8[(int)pvVar29 * 3 + 2] >> 9 & 1) != 0)) {
        v_05.ptr = in_stack_fffffffffffffa00;
        v_05.typ_ = in_stack_fffffffffffff9f8;
        v_05.flag = (reflect_flag)in_stack_fffffffffffffa08;
        ~r0_06.data = in_stack_fffffffffffffa18;
        ~r0_06.tab = in_stack_fffffffffffffa10;
        reflect_Value_typeSlow(v_05,~r0_06);
        piVar13 = extraout_RBX_08;
        puVar31 = extraout_RAX_15;
      }
      else {
