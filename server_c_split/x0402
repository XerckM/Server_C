  error ~r1_00;
  char extraout_AL;
  char **extraout_RAX;
  char **extraout_RAX_00;
  char **extraout_RAX_01;
  char **extraout_RAX_02;
  char **extraout_RAX_03;
  char **extraout_RAX_04;
  char **extraout_RAX_05;
  char **extraout_RAX_06;
  char **ppcVar1;
  undefined8 *extraout_RAX_07;
  undefined8 *extraout_RAX_08;
  char **extraout_RAX_09;
  char **extraout_RAX_10;
  char **extraout_RAX_11;
  char **extraout_RAX_12;
  net_UDPConn *in_RCX;
  int iVar2;
  char *pcVar3;
  char *extraout_RCX;
  char *extraout_RCX_00;
  char *extraout_RCX_01;
  net_UDPAddr *in_RBX;
  void *~r0_01;
  char *extraout_RBX;
  char *extraout_RBX_00;
  char *extraout_RBX_01;
  char *~r0_02;
  void *extraout_RBX_02;
  void *extraout_RBX_03;
  void *pvVar4;
  char *in_RSI;
  char *extraout_RSI;
  uint8 *in_RDI;
  char *extraout_RDI;
  undefined8 in_R8;
  undefined8 in_R9;
  uint8 **extraout_R11;
  char **extraout_R11_00;
  uint8 **extraout_R11_01;
  char **extraout_R11_02;
  char **extraout_R11_03;
  undefined8 *extraout_R11_04;
  uint8 **extraout_R11_05;
  char **extraout_R11_06;
  undefined8 *extraout_R11_07;
  int unaff_R14;
  context_Context in_XMM15;
  context_Context addr;
  string in_stack_ffffffffffffff20;
  string in_stack_ffffffffffffff30;
  string in_stack_ffffffffffffff40;
  net_Addr in_stack_ffffffffffffff50;
  undefined8 in_stack_ffffffffffffff60;
  undefined8 in_stack_ffffffffffffff68;
  int in_stack_ffffffffffffff70;
  runtime_itab *in_stack_ffffffffffffff78;
  void *in_stack_ffffffffffffff80;
  char *local_70;
  char *local_68;
  char **local_60;
  char *local_58;
  undefined8 *local_50;
  char **local_48;
  undefined local_40 [24];
  string local_28;
  
  while (&local_70 <= *(char ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.len = in_stack_ffffffffffffff68;
  ~r0_00.array = (net_Addr *)in_stack_ffffffffffffff60;
  ~r0_00.cap = in_stack_ffffffffffffff70;
  ~r1_00.data = in_stack_ffffffffffffff80;
  ~r1_00.tab = in_stack_ffffffffffffff78;
  addr = in_XMM15;
  net___Resolver__resolveAddrList
            (net_DefaultResolver,in_XMM15,in_stack_ffffffffffffff20,in_stack_ffffffffffffff30,
             in_stack_ffffffffffffff40,in_stack_ffffffffffffff50,~r0_00,~r1_00);
  if (extraout_RDI != (char *)0x0) {
    pcVar3 = extraout_RDI;
    local_68 = extraout_RSI;
    runtime_newobject((internal_abi_Type *)&DAT_0087daa0,~r0_01);
    extraout_RAX_00[1] = (char *)0x6;
    *extraout_RAX_00 =
         "listen.onionndots:sendtoip+netsocketacceptdomaingophertelnet Valuesysmontimersefenceselect, not object next= jobs= goid sweep  B -> % util alloc free  span= prev= list=, i =  code= addr= m->p= p->m=SCHED  curg=], sp= ctxt: min=  max= (...)\n base allow"
    ;
    extraout_RAX_00[3] = in_RSI;
    ppcVar1 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = in_RDI;
      ppcVar1 = extraout_RAX_01;
    }
    ppcVar1[2] = (char *)in_RDI;
    *(context_Context *)(ppcVar1 + 4) = in_XMM15;
    *(context_Context *)(ppcVar1 + 6) = in_XMM15;
    ppcVar1[8] = pcVar3;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = local_68;
      ppcVar1 = extraout_RAX_02;
    }
    ppcVar1[9] = local_68;
    return;
  }
  local_40._17_7_ = in_XMM15.data._1_7_;
  local_40._0_8_ = lc->Control;
  local_40._8_8_ = lc->KeepAlive;
  local_40[16] = lc->mptcpStatus;
  local_28.len = (int)in_RSI;
  local_28.str = in_RDI;
  ppcVar1 = extraout_RAX;
  pvVar4 = ~r0_01;
  local_60 = extraout_RAX;
  for (iVar2 = 0; iVar2 < (int)pvVar4; iVar2 = iVar2 + 1) {
    pcVar3 = *ppcVar1;
    local_58 = ppcVar1[1];
    local_48 = ppcVar1;
    net_isIPv4(addr,SUB81(pcVar3,0));
    local_70 = local_58;
    if (extraout_AL != '\0') goto LAB_005dd4fb;
    ppcVar1 = local_48 + 2;
  }
  if (pvVar4 == (void *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  pcVar3 = *local_60;
  local_70 = local_60[1];
LAB_005dd4fb:
  if (pcVar3 == (char *)0x0) {
LAB_005dd6a1:
    runtime_newobject((internal_abi_Type *)&DAT_0084eb20,local_70);
    extraout_RAX_07[1] = 0x17;
    *extraout_RAX_07 = &DAT_008ba7a9;
    extraout_RAX_07[3] = in_R9;
    local_50 = extraout_RAX_07;
    pvVar4 = extraout_RBX_02;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_04 = in_R8;
      local_50 = extraout_RAX_08;
      pvVar4 = extraout_RBX_03;
    }
    local_50[2] = in_R8;
    runtime_newobject((internal_abi_Type *)&DAT_0087daa0,pvVar4);
    extraout_RAX_09[1] = (char *)0x6;
    *extraout_RAX_09 =
         "listen.onionndots:sendtoip+netsocketacceptdomaingophertelnet Valuesysmontimersefenceselect, not object next= jobs= goid sweep  B -> % util alloc free  span= prev= list=, i =  code= addr= m->p= p->m=SCHED  curg=], sp= ctxt: min=  max= (...)\n base allow"
    ;
    extraout_RAX_09[3] = (char *)local_28.len;
    ppcVar1 = extraout_RAX_09;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_05 = local_28.str;
      ppcVar1 = extraout_RAX_10;
    }
    ppcVar1[2] = (char *)local_28.str;
    *(context_Context *)(ppcVar1 + 4) = in_XMM15;
    ppcVar1[6] = pcVar3;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_06 = local_70;
      ppcVar1 = extraout_RAX_11;
    }
    ppcVar1[7] = local_70;
    ppcVar1[8] = go_itab__net_AddrError_error;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_07 = local_50;
      ppcVar1 = extraout_RAX_12;
    }
    ppcVar1[9] = (char *)local_50;
    return;
  }
  if (pcVar3 == go_itab__net_UDPAddr_net_Addr) {
    net___sysListener__listenUDP
              ((net_sysListener *)local_40,addr,in_RBX,in_RCX,(error)in_stack_ffffffffffffff20);
    local_68 = extraout_RCX;
    ~r0_02 = extraout_RBX;
  }
  else if (pcVar3 == go_itab__net_IPAddr_net_Addr) {
    net___sysListener__listenIP
              ((net_sysListener *)local_40,addr,(net_IPAddr *)in_RBX,(net_IPConn *)in_RCX,
               (error)in_stack_ffffffffffffff20);
    local_68 = extraout_RCX_00;
    ~r0_02 = extraout_RBX_00;
  }
  else {
    if (pcVar3 != go_itab__net_UnixAddr_net_Addr) goto LAB_005dd6a1;
    net___sysListener__listenUnixgram
              ((net_sysListener *)local_40,addr,(net_UnixAddr *)in_RBX,(net_UnixConn *)in_RCX,
               (error)in_stack_ffffffffffffff20);
    local_68 = extraout_RCX_01;
    ~r0_02 = extraout_RBX_01;
  }
  if (~r0_02 == (char *)0x0) {
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0087daa0,~r0_02);
  extraout_RAX_03[1] = (char *)0x6;
  *extraout_RAX_03 =
       "listen.onionndots:sendtoip+netsocketacceptdomaingophertelnet Valuesysmontimersefenceselect, not object next= jobs= goid sweep  B -> % util alloc free  span= prev= list=, i =  code= addr= m->p= p->m=SCHED  curg=], sp= ctxt: min=  max= (...)\n base allow"
  ;
  extraout_RAX_03[3] = (char *)local_28.len;
  ppcVar1 = extraout_RAX_03;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_01 = local_28.str;
    ppcVar1 = extraout_RAX_04;
  }
  ppcVar1[2] = (char *)local_28.str;
  *(context_Context *)(ppcVar1 + 4) = in_XMM15;
  ppcVar1[6] = pcVar3;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_02 = local_70;
    ppcVar1 = extraout_RAX_05;
  }
  ppcVar1[7] = local_70;
  ppcVar1[8] = ~r0_02;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_03 = local_68;
    ppcVar1 = extraout_RAX_06;
  }
  ppcVar1[9] = local_68;
  return;
}



// WARNING: Variable defined which should be unmapped: lc

void net_Listen(string network,string address,net_Listener ~r0,error ~r1)

{
  net_Listener ~r0_00;
  error ~r1_00;
  int unaff_R14;
  undefined in_XMM15 [16];
  context_Context in_stack_ffffffffffffffa8;
  string in_stack_ffffffffffffffb8;
  string in_stack_ffffffffffffffc8;
  runtime_itab *prStack_28;
  net_ListenConfig lc;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  lc.Control = in_XMM15._0_8_;
  lc.KeepAlive = in_XMM15._8_8_;
  lc.mptcpStatus = 0;
  ~r0_00.data = lc.Control;
  ~r0_00.tab = prStack_28;
  ~r1_00.data._0_1_ = 0;
  ~r1_00.tab = (runtime_itab *)lc.KeepAlive;
  ~r1_00.data._1_7_ = lc._17_7_;
  net___ListenConfig__Listen
            (&lc,in_stack_ffffffffffffffa8,in_stack_ffffffffffffffb8,in_stack_ffffffffffffffc8,
             ~r0_00,~r1_00);
  return;
}



void net_reverseaddr(string addr,string arpa,error err)

{
  uint8 uVar1;
  uint8 uVar2;
  char cVar3;
  string s;
  string ~r0;
  string ~r0_00;
  string ~r0_01;
  string ~r0_02;
  string ~r0_03;
  runtime_slice ~r0_04;
  runtime_slice ~r0_05;
  __string a;
  uint8 ~r0_06 [16];
  string ~r0_07;
  char extraout_AL;
  bool valid;
  undefined8 in_RAX;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *puVar4;
  uint8 *extraout_RAX_01;
  uint8 *ptr;
  uint8 *extraout_RAX_02;
  uint8 *extraout_RAX_03;
  undefined *extraout_RAX_04;
  undefined *extraout_RAX_05;
  undefined *extraout_RAX_06;
  uint uVar5;
  undefined8 extraout_RAX_07;
  int i_5;
  uint uVar6;
  uint extraout_RCX;
  int i_2;
  undefined8 extraout_RCX_00;
  undefined4 *puVar7;
  uint cap;
  int i;
  undefined8 uVar8;
  int i_1;
  undefined8 in_RBX;
  void *~r0_08;
  uint extraout_RBX;
  uint extraout_RBX_00;
  undefined8 extraout_RBX_01;
  undefined8 extraout_RBX_02;
  int i_3;
  undefined8 extraout_RSI;
  void *~r0_09;
  int i_4;
  uint8 v;
  undefined *puVar9;
  undefined8 extraout_R8;
  undefined8 extraout_R9;
  undefined8 extraout_R10;
  undefined8 *extraout_R11;
  int unaff_R14;
  undefined in_XMM15 [16];
  undefined4 in_stack_fffffffffffffde8;
  undefined4 in_stack_fffffffffffffdec;
  undefined4 in_stack_fffffffffffffdf0;
  undefined4 in_stack_fffffffffffffdf4;
  int in_stack_fffffffffffffdf8;
  uint8 *in_stack_fffffffffffffe00;
  int in_stack_fffffffffffffe08;
  undefined4 local_198;
  undefined4 uStack_194;
  undefined4 uStack_190;
  undefined4 uStack_18c;
  undefined4 local_188;
  undefined4 uStack_184;
  undefined4 uStack_180;
  undefined4 uStack_17c;
  undefined4 local_178;
  undefined auStack_174 [12];
  undefined4 uStack_168;
  undefined4 local_164;
  undefined auStack_160 [12];
  undefined4 uStack_154;
  undefined4 local_150;
  undefined auStack_14c [12];
  undefined4 uStack_140;
  undefined4 local_13c;
  undefined auStack_138 [12];
  undefined4 uStack_12c;
  uint8 local_128 [32];
  uint8 local_108 [32];
  uint8 local_e8 [32];
  uint8 local_c8 [32];
  undefined *local_a8;
  undefined *local_a0;
  undefined *local_98;
  undefined4 *local_90;
  undefined8 local_88;
  undefined8 local_80;
  undefined *local_78;
  undefined8 local_70;
  undefined8 local_68;
  undefined8 local_60;
  undefined *local_58;
  undefined8 local_50;
  undefined8 local_48;
  undefined8 local_40;
  undefined *local_38;
  undefined8 local_30;
  undefined8 local_28;
  undefined8 local_20;
  char *local_18;
  undefined8 local_10;
  
  while (&local_198 <= *(undefined4 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  s.str._4_4_ = in_stack_fffffffffffffdec;
  s.str._0_4_ = in_stack_fffffffffffffde8;
  s.len._0_4_ = in_stack_fffffffffffffdf0;
  s.len._4_4_ = in_stack_fffffffffffffdf4;
  ~r0_06._8_8_ = in_stack_fffffffffffffe00;
  ~r0_06[0] = (char)in_stack_fffffffffffffdf8;
  ~r0_06[1] = (char)((uint)in_stack_fffffffffffffdf8 >> 8);
  ~r0_06[2] = (char)((uint)in_stack_fffffffffffffdf8 >> 0x10);
  ~r0_06[3] = (char)((uint)in_stack_fffffffffffffdf8 >> 0x18);
  ~r0_06[4] = (char)((uint)in_stack_fffffffffffffdf8 >> 0x20);
  ~r0_06[5] = (char)((uint)in_stack_fffffffffffffdf8 >> 0x28);
  ~r0_06[6] = (char)((uint)in_stack_fffffffffffffdf8 >> 0x30);
  ~r0_06[7] = (char)((uint)in_stack_fffffffffffffdf8 >> 0x38);
  net_parseIP(s,~r0_06,SUB81(in_RAX,0));
  local_188 = in_stack_fffffffffffffde8;
  uStack_184 = in_stack_fffffffffffffdec;
  uStack_180 = in_stack_fffffffffffffdf0;
  uStack_17c = in_stack_fffffffffffffdf4;
  local_198 = in_stack_fffffffffffffde8;
  uStack_194 = in_stack_fffffffffffffdec;
  uStack_190 = in_stack_fffffffffffffdf0;
  uStack_18c = in_stack_fffffffffffffdf4;
  if (extraout_AL == '\0') {
    local_90 = (undefined4 *)0x0;
    uVar6 = 0;
  }
  else {
    local_90 = &local_198;
    uVar6 = 0x10;
  }
  if (local_90 == (undefined4 *)0x0) {
    runtime_newobject((internal_abi_Type *)&DAT_00885120,~r0_08);
    extraout_RAX[1] = 0x14;
    *extraout_RAX = &DAT_008b8c67;
    extraout_RAX[3] = in_RBX;
    puVar4 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = in_RAX;
      puVar4 = extraout_RAX_00;
    }
    puVar4[2] = in_RAX;
    return;
  }
  puVar7 = local_90;
  if (uVar6 != 4) {
    if (uVar6 == 0x10) {
      for (i_1 = 0; i_1 < 10; i_1 = i_1 + 1) {
        if (*(char *)((int)local_90 + i_1) != '\0') goto LAB_005dd98d;
      }
      if ((*(char *)((int)local_90 + 10) == -1) && (*(char *)((int)local_90 + 0xb) == -1)) {
        puVar7 = local_90 + 3;
        goto LAB_005dd98f;
      }
    }
LAB_005dd98d:
    puVar7 = (undefined4 *)0x0;
  }
LAB_005dd98f:
  if (puVar7 == (undefined4 *)0x0) {
    cap = uVar6 * 4 + 9;
    runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,cap,~r0_09);
    uVar5 = 0;
    ptr = extraout_RAX_01;
    puVar7 = local_90;
    while (uVar6 = uVar6 - 1, -1 < (int)uVar6) {
      uVar5 = uVar5 + 4;
      uVar1 = "goal , cons/mark  maxTrigger= pages/byte\n s.sweepgen= allocCount end tracegc\ntimer_deletens} value: {}, want {r1= [recovered]bad recoverybad g statusentersyscallwirep: p->m=) p->status=releasep: m= sysmonwait= preemptoff=cas64 failedGOTRACEBACK= m->gsignal=-byte limit\nruntime: sp=abi mismatchillegal seekinvalid slothost is downnot pollable<unknown:%d>Sfixed32KindSfixed64Kindmessage_typejava_packageoptimize_forswift_prefixruby_packagedebug_redactdouble_valuestring_valueverificationis_extension has no name has no typereflect.CopyOUT_OF_RANGENormalSocketgrpc-messageContent-Typegrpc-timeoutGrpc-MessageAddr: \'%s\', Cookie.Valuemax-forwardshttp2debug=1http2debug=2status code Multi-StatusNot ModifiedUnauthorizedI\'m a teapotNot ExtendedPUSH_PROMISECONTINUATION152587890625762939453125Cypro_MinoanMeetei_MayekPahawh_HmongSora_SompengSyloti_NagriRCodeSuccessRCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen..." /* TRUNCATED STRING LITERAL */
              [(*(byte *)((int)puVar7 + uVar6) & 0xf) + 0x1f44];
      uVar2 = "goal , cons/mark  maxTrigger= pages/byte\n s.sweepgen= allocCount end tracegc\ntimer_deletens} value: {}, want {r1= [recovered]bad recoverybad g statusentersyscallwirep: p->m=) p->status=releasep: m= sysmonwait= preemptoff=cas64 failedGOTRACEBACK= m->gsignal=-byte limit\nruntime: sp=abi mismatchillegal seekinvalid slothost is downnot pollable<unknown:%d>Sfixed32KindSfixed64Kindmessage_typejava_packageoptimize_forswift_prefixruby_packagedebug_redactdouble_valuestring_valueverificationis_extension has no name has no typereflect.CopyOUT_OF_RANGENormalSocketgrpc-messageContent-Typegrpc-timeoutGrpc-MessageAddr: \'%s\', Cookie.Valuemax-forwardshttp2debug=1http2debug=2status code Multi-StatusNot ModifiedUnauthorizedI\'m a teapotNot ExtendedPUSH_PROMISECONTINUATION152587890625762939453125Cypro_MinoanMeetei_MayekPahawh_HmongSora_SompengSyloti_NagriRCodeSuccessRCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen..." /* TRUNCATED STRING LITERAL */
              [(*(byte *)((int)puVar7 + uVar6) >> 4) + 0x1f44];
      if (cap < uVar5) {
        ~r0_04.array._4_4_ = in_stack_fffffffffffffdec;
        ~r0_04.array._0_4_ = in_stack_fffffffffffffde8;
        ~r0_04.len._0_4_ = in_stack_fffffffffffffdf0;
        ~r0_04.len._4_4_ = in_stack_fffffffffffffdf4;
        ~r0_04.cap = in_stack_fffffffffffffdf8;
        runtime_growslice(ptr,uVar5,cap,4,(internal_abi_Type *)&DAT_00807920,~r0_04);
        ptr = extraout_RAX_02;
        uVar5 = extraout_RBX;
        puVar7 = local_90;
        cap = extraout_RCX;
      }
      ptr[uVar5 - 4] = uVar1;
      ptr[uVar5 - 3] = 0x2e;
      ptr[uVar5 - 2] = uVar2;
      ptr[uVar5 - 1] = 0x2e;
    }
    uVar6 = uVar5 + 9;
    if (cap < uVar6) {
      ~r0_05.array._4_4_ = in_stack_fffffffffffffdec;
      ~r0_05.array._0_4_ = in_stack_fffffffffffffde8;
      ~r0_05.len._0_4_ = in_stack_fffffffffffffdf0;
      ~r0_05.len._4_4_ = in_stack_fffffffffffffdf4;
      ~r0_05.cap = in_stack_fffffffffffffdf8;
      runtime_growslice(ptr,uVar6,cap,9,(internal_abi_Type *)&DAT_00807920,~r0_05);
      ptr = extraout_RAX_03;
      uVar6 = extraout_RBX_00;
    }
    *(undefined8 *)(ptr + uVar5) = 0x617072612e367069;
    ptr[uVar5 + 8] = 0x2e;
    ~r0.str._4_4_ = in_stack_fffffffffffffdec;
    ~r0.str._0_4_ = in_stack_fffffffffffffde8;
    ~r0.len._0_4_ = in_stack_fffffffffffffdf0;
    ~r0.len._4_4_ = in_stack_fffffffffffffdf4;
    runtime_slicebytetostring((runtime_tmpBuf *)0x0,ptr,uVar6,~r0);
    return;
  }
  if (uVar6 < 0x10) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  uVar6 = (uint)*(byte *)((int)local_90 + 0xf);
  if (uVar6 == 0) {
    local_98 = &DAT_008ae139;
  }
  else {
    local_13c = in_XMM15._0_4_;
    auStack_138 = in_XMM15._0_12_;
    uStack_12c = in_XMM15._12_4_;
    uVar5 = 0x13;
    while (cVar3 = (char)uVar6, 9 < uVar6) {
      uVar6 = uVar6 / 10;
      if (0x13 < uVar5) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      auStack_138[uVar5 - 4] = cVar3 + (char)uVar6 * -10 + '0';
      uVar5 = uVar5 - 1;
    }
    if (0x13 < uVar5) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    auStack_138[uVar5 - 4] = cVar3 + '0';
    ~r0_00.str._4_4_ = in_stack_fffffffffffffdec;
    ~r0_00.str._0_4_ = in_stack_fffffffffffffde8;
    ~r0_00.len._0_4_ = in_stack_fffffffffffffdf0;
    ~r0_00.len._4_4_ = in_stack_fffffffffffffdf4;
    runtime_slicebytetostring
              (&local_c8,auStack_138 + ((uVar5 & (int)(uVar5 - 0x14) >> 0x3f) - 4),-(uVar5 - 0x14),
               ~r0_00);
    local_98 = extraout_RAX_04;
  }
  uVar6 = (uint)*(byte *)((int)local_90 + 0xe);
  if (uVar6 == 0) {
    uVar8 = 1;
    local_a0 = &DAT_008ae139;
  }
  else {
    local_150 = in_XMM15._0_4_;
    auStack_14c = in_XMM15._0_12_;
    uStack_140 = in_XMM15._12_4_;
    uVar5 = 0x13;
    while (cVar3 = (char)uVar6, 9 < uVar6) {
      uVar6 = uVar6 / 10;
      if (0x13 < uVar5) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      auStack_14c[uVar5 - 4] = cVar3 + (char)uVar6 * -10 + '0';
      uVar5 = uVar5 - 1;
    }
    if (0x13 < uVar5) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    auStack_14c[uVar5 - 4] = cVar3 + '0';
    ~r0_01.str._4_4_ = in_stack_fffffffffffffdec;
    ~r0_01.str._0_4_ = in_stack_fffffffffffffde8;
    ~r0_01.len._0_4_ = in_stack_fffffffffffffdf0;
    ~r0_01.len._4_4_ = in_stack_fffffffffffffdf4;
    runtime_slicebytetostring
              (&local_e8,auStack_14c + ((uVar5 & (int)(uVar5 - 0x14) >> 0x3f) - 4),-(uVar5 - 0x14),
               ~r0_01);
    uVar8 = extraout_RBX_01;
    local_a0 = extraout_RAX_05;
  }
  uVar6 = (uint)*(byte *)((int)local_90 + 0xd);
  if (uVar6 == 0) {
    puVar9 = &DAT_008ae139;
  }
  else {
    local_164 = in_XMM15._0_4_;
    auStack_160 = in_XMM15._0_12_;
    uStack_154 = in_XMM15._12_4_;
    uVar5 = 0x13;
    while (cVar3 = (char)uVar6, 9 < uVar6) {
      uVar6 = uVar6 / 10;
      if (0x13 < uVar5) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      auStack_160[uVar5 - 4] = cVar3 + (char)uVar6 * -10 + '0';
      uVar5 = uVar5 - 1;
    }
    if (0x13 < uVar5) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    auStack_160[uVar5 - 4] = cVar3 + '0';
    ~r0_02.str._4_4_ = in_stack_fffffffffffffdec;
    ~r0_02.str._0_4_ = in_stack_fffffffffffffde8;
    ~r0_02.len._0_4_ = in_stack_fffffffffffffdf0;
    ~r0_02.len._4_4_ = in_stack_fffffffffffffdf4;
    runtime_slicebytetostring
              (&local_108,auStack_160 + ((uVar5 & (int)(uVar5 - 0x14) >> 0x3f) - 4),-(uVar5 - 0x14),
               ~r0_02);
    puVar9 = extraout_RAX_06;
  }
  uVar6 = (uint)*(byte *)(local_90 + 3);
  if (uVar6 != 0) {
    local_178 = in_XMM15._0_4_;
    auStack_174 = in_XMM15._0_12_;
    uStack_168 = in_XMM15._12_4_;
    uVar5 = 0x13;
    while (cVar3 = (char)uVar6, 9 < uVar6) {
      uVar6 = uVar6 / 10;
      if (0x13 < uVar5) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      auStack_174[uVar5 - 4] = cVar3 + (char)uVar6 * -10 + '0';
      uVar5 = uVar5 - 1;
    }
    if (0x13 < uVar5) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    auStack_174[uVar5 - 4] = cVar3 + '0';
    ~r0_03.str._4_4_ = in_stack_fffffffffffffdec;
    ~r0_03.str._0_4_ = in_stack_fffffffffffffde8;
    ~r0_03.len._0_4_ = in_stack_fffffffffffffdf0;
    ~r0_03.len._4_4_ = in_stack_fffffffffffffdf4;
    local_a8 = puVar9;
    runtime_slicebytetostring
              (&local_128,auStack_174 + ((uVar5 & (int)(uVar5 - 0x14) >> 0x3f) - 4),-(uVar5 - 0x14),
               ~r0_03);
  }
  FUN_0046cda2();
  local_70 = 1;
  local_78 = &DAT_0095a710;
  local_50 = 1;
  local_58 = &DAT_0095a710;
  local_30 = 1;
  local_38 = &DAT_0095a710;
  local_10 = 0xe;
  local_18 = 
  ".in-addr.arpa./etc/protocolsunknown mode:  on zero Valueunknown methoduserArenaStateread mem statsallocfreetracegcstoptheworldGC assist waitfinalizer waitsync.Cond.WaitSIGABRT: aborts.allocCount= key size wrongruntime: mmap(nil elem type! to finalizer GC worker initruntime: full=runtime: want=MB; allocated bad restart PC-thread limit\nstopm spinning nmidlelocked= needspinning=store64 failedsemaRoot queuebad allocCountbad span statestack overflow untyped args  out of range no module data in goroutine no such deviceis a directorytext file busyfile too largetoo many linkslevel 3 haltedlevel 2 haltedprotocol errortoo many usersunreachable:  reserved_rangefield_presenceunsafe.PointerALREADY_EXISTS\"OUT_OF_RANGE\"%s Channel #%dgrpc-trace-binunknown ID: %vAuthInfo: \'%s\'Content-Lengthaccept-charsetcontent-lengthNot AcceptableMAX_FRAME_SIZEPROTOCOL_ERRORINTERNAL_ERRORREFUSED_STREAMinvalid syntax1907348632812595367431640625show_sensitiveprefix length not an ip:portinvalid PrefixResourceHeaderRCodeNameErrormime/multipartinvalid kind: protobuf_oneofXXX_OneofFuncsneed more data/etc/ssl/certs\\.+*?()|[]{}^$LOGGER_UNKNOWNAccept-CharsetDkim-SignatureREQUEST_METHOD$htmltemplate_ /* %s */null formnovalidateprotobuf errorReservedRangesdata truncatedInstEmptyWidthunknown node: ApplyFunction;DifferentialD;DoubleLeftTee;DoubleUpArrow;LeftTeeVector;LeftVectorBar;LessFullEqual;LongLeftArrow;Longleftarrow;NotTildeEqual;NotTildeTilde;Poincareplane;PrecedesEqual;PrecedesTilde;RightArrowBar;RightTeeArrow;RightTriangle;RightUpVector;SucceedsEqual;SucceedsTilde;SupersetEqual;UpEquilibrium;VerticalTilde;VeryThinSpace;bigtriangleup;blacktriangle;divideontimes;fallingdotseq;hookleftarrow;leftarrowtail;leftharpoonup;longleftarrow;looparrowleft;measuredangle;ntriangleleft;shortparallel;smallsetminus;triangleright;upharpoonleft;NotEqualTilde;varsubsetneqq;varsupsetneqq;len of type %sFailed to servenegative offsetcopy_file_rangeduplicated nameGroup: bad kind: cannot parse ,M3.2.0,M11.1.0missing addressunknown networkinvalid address/etc/mdns.allowreflect..." /* TRUNCATED STRING LITERAL */
  ;
  a.array._4_4_ = in_stack_fffffffffffffdec;
  a.array._0_4_ = in_stack_fffffffffffffde8;
  a.len._0_4_ = in_stack_fffffffffffffdf0;
  a.len._4_4_ = in_stack_fffffffffffffdf4;
  a.cap = in_stack_fffffffffffffdf8;
  ~r0_07.len = in_stack_fffffffffffffe08;
  ~r0_07.str = in_stack_fffffffffffffe00;
  local_88 = extraout_RCX_00;
  local_80 = extraout_RBX_02;
  local_68 = extraout_RSI;
  local_60 = uVar8;
  local_48 = extraout_R8;
  local_40 = extraout_R10;
  local_28 = extraout_R9;
  local_20 = extraout_RAX_07;
  runtime_concatstrings((runtime_tmpBuf *)0x0,a,~r0_07);
  return;
}



void net_isDomainName(string s,bool ~r0)

{
  uint8 uVar1;
  uint8 last;
  undefined7 in_register_00000001;
  char *pcVar2;
  int iVar3;
  int i;
  int partlen;
  int in_RBX;
  bool nonNumeric;
  uint8 c;
  
  pcVar2 = (char *)CONCAT71(in_register_00000001,~r0);
  if ((in_RBX == 1) && (*pcVar2 == '.')) {
    return;
  }
  if (((in_RBX != 0) && (in_RBX < 0xff)) && ((in_RBX != 0xfe || (pcVar2[0xfd] == '.')))) {
    iVar3 = 0;
    partlen = 0;
    last = 0x2e;
    do {
      if (in_RBX <= iVar3) {
        if ((last != 0x2d) && (partlen < 0x40)) {
          return;
        }
        return;
      }
      uVar1 = pcVar2[iVar3];
      if ((((byte)(uVar1 + 0x9f) < 0x1a) || ((byte)(uVar1 + 0xbf) < 0x1a)) || (uVar1 == 0x5f)) {
        partlen = partlen + 1;
      }
      else if ((byte)(uVar1 - 0x30) < 10) {
        partlen = partlen + 1;
      }
      else if (uVar1 == 0x2d) {
        if (last == 0x2e) {
          return;
        }
        partlen = partlen + 1;
      }
      else {
        if (uVar1 != 0x2e) {
          return;
        }
        if ((last == 0x2e) || (last == 0x2d)) {
          return;
        }
        if ((0x3f < partlen) || (partlen == 0)) {
          return;
        }
        partlen = 0;
      }
      iVar3 = iVar3 + 1;
      last = uVar1;
    } while( true );
  }
  return;
}



void net_byPriorityWeight_Len(net_byPriorityWeight s,int ~r0)

{
  return;
}



void net_byPriorityWeight_Less(net_byPriorityWeight s,int i,int j,bool ~r0)

{
  uint in_RSI;
  uint in_RDI;
  
  if ((uint)j <= in_RDI) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if ((uint)j <= in_RSI) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  return;
}



void net_byPriorityWeight_Swap(net_byPriorityWeight s,int i,int j)

{
  int extraout_RAX;
  undefined8 extraout_RCX;
  undefined8 uVar1;
  undefined8 uVar2;
  uint in_RSI;
  uint extraout_RSI;
  uint in_RDI;
  uint extraout_RDI;
  undefined8 *extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RDI < (uint)j) {
    uVar2 = *(undefined8 *)(i + in_RDI * 8);
    if (in_RSI < (uint)j) {
      uVar1 = *(undefined8 *)(i + in_RSI * 8);
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier4();
        *extraout_R11 = extraout_RCX;
        extraout_R11[1] = *(undefined8 *)(extraout_RAX + extraout_RDI * 8);
        extraout_R11[2] = uVar2;
        extraout_R11[3] = *(undefined8 *)(extraout_RAX + extraout_RSI * 8);
        i = extraout_RAX;
        uVar1 = extraout_RCX;
        in_RSI = extraout_RSI;
        in_RDI = extraout_RDI;
      }
      *(undefined8 *)(i + in_RDI * 8) = uVar1;
      *(undefined8 *)(i + in_RSI * 8) = uVar2;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void net_byPriorityWeight_shuffleByWeight(net_byPriorityWeight addrs)

{
  int *in_RAX;
  uint extraout_RAX;
  int extraout_RAX_00;
  int iVar1;
  int extraout_RCX;
  int sum;
  int n;
  int iVar2;
  int in_RBX;
  int *extraout_RBX;
  net_SRV *addr;
  int extraout_RSI;
  int i;
  int s;
  int extraout_R8;
  int *extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  sum = 0;
  for (iVar1 = 0; iVar1 < in_RBX; iVar1 = iVar1 + 1) {
    addr = (net_SRV *)(uint)*(ushort *)(in_RAX[iVar1] + 0x14);
    sum = (int)&(addr->Target).str + sum;
  }
  do {
    if ((sum < 1) || (in_RBX < 2)) {
      return;
    }
    net_fastrandu((uint)in_RAX);
    s = 0;
    for (i = 0; i < in_RBX; i = i + 1) {
      iVar1 = in_RAX[i];
      s = s + (uint)*(ushort *)(iVar1 + 0x14);
      if ((int)(extraout_RAX >> 1) % sum < s) {
        if (0 < i) {
          iVar2 = *in_RAX;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier4();
            *extraout_R11 = extraout_R8;
            extraout_R11[1] = *extraout_RBX;
            extraout_R11[2] = iVar2;
            extraout_R11[3] = extraout_RBX[extraout_RSI];
            in_RBX = extraout_RAX_00;
            sum = extraout_RCX;
            in_RAX = extraout_RBX;
            i = extraout_RSI;
            iVar1 = extraout_R8;
          }
          *in_RAX = iVar1;
          in_RAX[i] = iVar2;
        }
        break;
      }
    }
    sum = sum - (uint)*(ushort *)(*in_RAX + 0x14);
    in_RAX = in_RAX + 1;
    in_RBX = in_RBX + -1;
  } while( true );
}



void net_byPriorityWeight_sort(net_byPriorityWeight addrs)

{
  __uint8 val;
  net_byPriorityWeight addrs_00;
  net_byPriorityWeight addrs_01;
  void *in_RAX;
  int i;
  int j;
  uint uVar1;
  uint in_RBX;
  int unaff_R14;
  sort_Interface in_stack_ffffffffffffffd0;
  int in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  val.cap = in_stack_ffffffffffffffe0;
  val.array = (uint8 *)in_stack_ffffffffffffffd0.tab;
  val.len = (int)in_stack_ffffffffffffffd0.data;
  runtime_convTslice(val,in_RAX);
  sort_Sort(in_stack_ffffffffffffffd0);
  j = 1;
  uVar1 = 0;
  while( true ) {
    if ((int)in_RBX <= j) {
      if (uVar1 <= in_RBX) {
        addrs_01.cap = in_stack_ffffffffffffffe0;
        addrs_01.array = (net_SRV **)in_stack_ffffffffffffffd0.tab;
        addrs_01.len = (int)in_stack_ffffffffffffffd0.data;
        net_byPriorityWeight_shuffleByWeight(addrs_01);
        return;
      }
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    if (in_RBX <= uVar1) break;
    if (*(short *)(*(int *)((int)in_RAX + j * 8) + 0x12) !=
        *(short *)(*(int *)((int)in_RAX + uVar1 * 8) + 0x12)) {
      if ((uint)j < uVar1) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      addrs_00.cap = in_stack_ffffffffffffffe0;
      addrs_00.array = (net_SRV **)in_stack_ffffffffffffffd0.tab;
      addrs_00.len = (int)in_stack_ffffffffffffffd0.data;
      net_byPriorityWeight_shuffleByWeight(addrs_00);
      uVar1 = j;
    }
    i = j + 1;
    j = i;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void net_byPref_Len(net_byPref s,int ~r0)

{
  return;
}



void net_byPref_Less(net_byPref s,int i,int j,bool ~r0)

{
  uint in_RSI;
  uint in_RDI;
  
  if ((uint)j <= in_RDI) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if (in_RSI < (uint)j) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void net_byPref_Swap(net_byPref s,int i,int j)

{
  int extraout_RAX;
  undefined8 extraout_RCX;
  undefined8 uVar1;
  undefined8 uVar2;
  uint in_RSI;
  uint extraout_RSI;
  uint in_RDI;
  uint extraout_RDI;
  undefined8 *extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RDI < (uint)j) {
    uVar2 = *(undefined8 *)(i + in_RDI * 8);
    if (in_RSI < (uint)j) {
      uVar1 = *(undefined8 *)(i + in_RSI * 8);
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier4();
        *extraout_R11 = extraout_RCX;
        extraout_R11[1] = *(undefined8 *)(extraout_RAX + extraout_RDI * 8);
        extraout_R11[2] = uVar2;
        extraout_R11[3] = *(undefined8 *)(extraout_RAX + extraout_RSI * 8);
        i = extraout_RAX;
        uVar1 = extraout_RCX;
        in_RSI = extraout_RSI;
        in_RDI = extraout_RDI;
      }
      *(undefined8 *)(i + in_RDI * 8) = uVar1;
      *(undefined8 *)(i + in_RSI * 8) = uVar2;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void net_byPref_sort(net_byPref s)

{
  uint ~r0;
  __uint8 val;
  void *in_RAX;
  uint uVar1;
  void *x;
  uint extraout_RAX;
  uint extraout_RAX_00;
  uint uVar2;
  int j;
  uint in_RBX;
