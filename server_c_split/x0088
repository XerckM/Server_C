      *extraout_R11_00 = extraout_RBX_00;
      extraout_R11_00[1] = extraout_RSI_00->parent;
      root = extraout_RAX_00;
      prVar1 = extraout_RCX_00;
      y = extraout_RBX_00;
      prVar3 = extraout_RSI_00;
    }
    prVar3->parent = y;
  }
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_01 = prVar2;
    extraout_R11_01[1] = extraout_RCX_01->parent;
    root = extraout_RAX_01;
    prVar1 = extraout_RCX_01;
    y = extraout_RBX_01;
  }
  prVar1->parent = prVar2;
  if (prVar2 == (runtime_sudog *)0x0) {
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_04 = extraout_RCX_04;
      extraout_R11_04[1] = extraout_RAX_02->treap;
      root = extraout_RAX_02;
      prVar1 = extraout_RCX_04;
    }
    root->treap = prVar1;
  }
  else if (prVar2->prev == y) {
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_02 = extraout_RCX_02;
      extraout_R11_02[1] = prVar2->prev;
      prVar1 = extraout_RCX_02;
    }
    prVar2->prev = prVar1;
  }
  else {
    if (prVar2->next != y) {
                    // WARNING: Subroutine does not return
      runtime_throw(in_stack_ffffffffffffffe8);
    }
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_03 = extraout_RCX_03;
      extraout_R11_03[1] = prVar2->next;
      prVar1 = extraout_RCX_03;
    }
    prVar2->next = prVar1;
  }
  return;
}



// WARNING: Unknown calling convention

void runtime_dumpregs(runtime_sigctxt *c)

{
  uint64 uVar1;
  int unaff_R14;
  runtime_sigctxt *prStack0000000000000008;
  string in_stack_ffffffffffffff50;
  uint64 local_30;
  uint64 local_28;
  uint64 local_20;
  uint64 local_18;
  uint local_10;
  
  prStack0000000000000008 = c;
  while (&local_30 <= *(uint64 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_18 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0x90);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(local_18);
  runtime_printnl();
  runtime_printunlock();
  local_20 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0x80);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(local_20);
  runtime_printnl();
  runtime_printunlock();
  local_28 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0x98);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(local_28);
  runtime_printnl();
  runtime_printunlock();
  local_30 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0x88);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(local_30);
  runtime_printnl();
  runtime_printunlock();
  uVar1 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0x68);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(uVar1);
  runtime_printnl();
  runtime_printunlock();
  uVar1 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0x70);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(uVar1);
  runtime_printnl();
  runtime_printunlock();
  uVar1 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0x78);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(uVar1);
  runtime_printnl();
  runtime_printunlock();
  uVar1 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0xa0);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(uVar1);
  runtime_printnl();
  runtime_printunlock();
  uVar1 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0x28);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(uVar1);
  runtime_printnl();
  runtime_printunlock();
  uVar1 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0x30);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(uVar1);
  runtime_printnl();
  runtime_printunlock();
  uVar1 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0x38);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(uVar1);
  runtime_printnl();
  runtime_printunlock();
  uVar1 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0x40);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(uVar1);
  runtime_printnl();
  runtime_printunlock();
  uVar1 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0x48);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(uVar1);
  runtime_printnl();
  runtime_printunlock();
  uVar1 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0x50);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(uVar1);
  runtime_printnl();
  runtime_printunlock();
  uVar1 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0x58);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(uVar1);
  runtime_printnl();
  runtime_printunlock();
  uVar1 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0x60);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(uVar1);
  runtime_printnl();
  runtime_printunlock();
  uVar1 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0xa8);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(uVar1);
  runtime_printnl();
  runtime_printunlock();
  uVar1 = *(uint64 *)((int)prStack0000000000000008->ctxt + 0xb0);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(uVar1);
  runtime_printnl();
  runtime_printunlock();
  local_10 = (uint)*(ushort *)((int)prStack0000000000000008->ctxt + 0xb8);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(local_10);
  runtime_printnl();
  runtime_printunlock();
  local_10 = (uint)*(ushort *)((int)prStack0000000000000008->ctxt + 0xbc);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(local_10);
  runtime_printnl();
  runtime_printunlock();
  local_10 = (uint)*(ushort *)((int)prStack0000000000000008->ctxt + 0xba);
  runtime_printlock();
  runtime_printstring(in_stack_ffffffffffffff50);
  runtime_printhex(local_10);
  runtime_printnl();
  runtime_printunlock();
  return;
}



// WARNING: Unknown calling convention

void runtime___sigctxt__preparePanic(runtime_sigctxt *c,uint32 sig,runtime_g *gp)

{
  uintptr pc_00;
  char extraout_AL;
  uintptr sp;
  uintptr sp_1;
  uintptr pc;
  undefined in_DIL;
  undefined extraout_DIL;
  int unaff_R14;
  runtime_sigctxt *prStack0000000000000008;
  
  prStack0000000000000008 = c;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  pc_00 = *(uintptr *)((int)prStack0000000000000008->ctxt + 0xa8);
  runtime_shouldPushSigpanic
            (gp,pc_00,**(uintptr **)((int)prStack0000000000000008->ctxt + 0xa0),(bool)in_DIL);
  if (extraout_AL == '\0') {
    *(code **)((int)prStack0000000000000008->ctxt + 0xa8) = runtime_sigpanic0;
  }
  else {
    sp_1 = *(int *)((int)prStack0000000000000008->ctxt + 0xa0) - 8;
    *(uintptr *)sp_1 = pc_00;
    *(uintptr *)((int)prStack0000000000000008->ctxt + 0xa0) = sp_1;
    *(code **)((int)prStack0000000000000008->ctxt + 0xa8) = runtime_sigpanic0;
  }
  return;
}



// WARNING: Unknown calling convention

void runtime_initsig(bool preinit)

{
  bool bVar1;
  uint32 i;
  uint uVar2;
  uint32 i_1;
  undefined in_XMM15 [16];
  _union_1457 local_30;
  uintptr *local_10;
  
  if (!preinit) {
    runtime_signalsOK = true;
  }
  if (((runtime_isarchive) || (runtime_islibrary)) && (!preinit)) {
    return;
  }
  uVar2 = 0;
  do {
    local_30 = in_XMM15._0_8_;
    i = (uint32)uVar2;
    if (0x40 < i) {
      return;
    }
    if ((runtime_sigtable[uVar2].flags != 0) &&
       (((dword)runtime_sigtable[uVar2].flags >> 4 & 1) == 0)) {
      local_10 = runtime_fwdSig + uVar2;
      runtime_sigaction(uVar2,(sigaction *)0x0,(sigaction *)&stack0xffffffffffffffd0);
      *(_union_1457 *)(runtime_fwdSig + uVar2) = local_30;
      if ((i == 0) || ((2 < i || (*local_10 != 1)))) {
        if ((runtime_iscgo == false) && (i == 0x21)) {
          bVar1 = true;
        }
        else if (((dword)runtime_sigtable[uVar2].flags >> 6 & 1) == 0) {
          if ((((runtime_isarchive == false) && (runtime_islibrary == false)) ||
              (((dword)runtime_sigtable[uVar2].flags >> 3 & 1) != 0)) || ((i == 0xd || (i == 0x17)))
             ) {
            bVar1 = true;
          }
          else {
            bVar1 = false;
          }
        }
        else {
          bVar1 = false;
        }
      }
      else {
        bVar1 = false;
      }
      if (bVar1) {
        runtime_handlingSig[uVar2] = 1;
        runtime_setsig(i,0x450240);
      }
      else if (runtime_fwdSig[uVar2] != 0) {
        if (runtime_fwdSig[uVar2] == 1) {
          uVar2 = (uint)(i >> 5);
          if (2 < uVar2) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          LOCK();
          runtime_sig.ignored[uVar2] = runtime_sig.ignored[uVar2] | 1 << (i & 0x1f);
          UNLOCK();
        }
        else {
          runtime_setsigstack(i);
        }
      }
    }
    uVar2 = (uint)(dword)(i + 1);
  } while( true );
}



// WARNING: Unknown calling convention

void runtime_sigpipe(void)

{
  char extraout_AL;
  uint32 i;
  undefined in_BL;
  undefined extraout_BL;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_BL = extraout_BL;
  }
  if ((runtime_sig.ignored[0] >> 0xd & 1) == 0) {
    runtime_sigsend(0xd,(bool)in_BL);
    if (extraout_AL == '\0') {
                    // WARNING: Subroutine does not return
      runtime_dieFromSignal(0xd);
    }
  }
  return;
}



// WARNING: Unknown calling convention

void runtime_doSigPreempt(runtime_g *gp,runtime_sigctxt *ctxt)

{
  runtime_internal_atomic_Uint32 *prVar1;
  runtime_puintptr rVar2;
  uintptr pc;
  char extraout_AL;
  bool ok;
  uintptr sp;
  undefined8 extraout_RBX;
  uintptr newpc;
  uintptr in_R8;
  uintptr extraout_R8;
  int unaff_R14;
  bool bVar3;
  runtime_g *prStack0000000000000008;
  runtime_sigctxt *prStack0000000000000010;
  
  prStack0000000000000008 = gp;
  prStack0000000000000010 = ctxt;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_R8 = extraout_R8;
  }
  if (prStack0000000000000008->preempt == false) {
    rVar2 = prStack0000000000000008->m->p;
    if (rVar2 == 0) {
      bVar3 = false;
      goto LAB_0044fb6f;
    }
    if (*(char *)(rVar2 + 0x22c8) == '\0') {
      bVar3 = false;
      goto LAB_0044fb6f;
    }
  }
  bVar3 = ((prStack0000000000000008->atomicstatus).value & 0xffffefff) == 2;
LAB_0044fb6f:
  if ((bVar3) &&
     (pc = *(uintptr *)((int)prStack0000000000000010->ctxt + 0xa8),
     runtime_isAsyncSafePoint
               (prStack0000000000000008,pc,*(uintptr *)((int)prStack0000000000000010->ctxt + 0xa0),0
                ,SUB81(pc,0),in_R8), extraout_AL != '\0')) {
    sp = *(int *)((int)prStack0000000000000010->ctxt + 0xa0) - 8;
    *(undefined8 *)sp = extraout_RBX;
    *(uintptr *)((int)prStack0000000000000010->ctxt + 0xa0) = sp;
    *(code **)((int)prStack0000000000000010->ctxt + 0xa8) = runtime_asyncPreempt;
  }
  LOCK();
  prVar1 = &prStack0000000000000008->m->preemptGen;
  prVar1->value = prVar1->value + 1;
  UNLOCK();
  LOCK();
  (prStack0000000000000008->m->signalPending).value = 0;
  UNLOCK();
  return;
}



// WARNING: Variable defined which should be unmapped: gp
// WARNING: Unknown calling convention

void runtime_sigtrampgo(uint32 sig,runtime_siginfo *info,void *ctx)

{
  sdword sVar1;
  uintptr *puVar2;
  char extraout_AL;
  char extraout_AL_00;
  bool setStack;
  runtime_g *gp_1;
  bool setitimer;
  bool in_DIL;
  bool ~r0;
  runtime_g *unaff_R14;
  int in_FS_OFFSET;
  bool bVar3;
  uint32 uStack0000000000000008;
  runtime_siginfo *prStack0000000000000010;
  void *pvStack0000000000000018;
  undefined local_48 [32];
  uintptr uStack_28;
  runtime_g *gp;
  runtime_sigctxt local_18;
  
  uStack0000000000000008 = sig;
  prStack0000000000000010 = info;
  pvStack0000000000000018 = ctx;
  runtime_sigfwdgo(sig,info,ctx,in_DIL);
  if (extraout_AL != '\0') {
    return;
  }
  local_18.info = prStack0000000000000010;
  local_18.ctxt = pvStack0000000000000018;
  gp = unaff_R14;
  runtime_setg();
  if ((gp != (runtime_g *)0x0) && ((gp->m == (runtime_m *)0x0 || (gp->m->isExtraInC == false)))) {
    runtime_setg();
    local_48._0_8_ = 0;
    local_48._8_8_ = 0;
    local_48._16_8_ = 0;
    unique0x100000cf = ZEXT816(0);
    runtime_adjustSignalStack(uStack0000000000000008,gp->m,(runtime_gsignalStack *)local_48,~r0);
    if (extraout_AL_00 != '\0') {
      gp->m->gsignal->stktopsp = (uintptr)&stack0x00000008;
    }
    if (gp->stackguard0 == 0xfffffffffffffb2e) {
      runtime_signalDuringFork(uStack0000000000000008);
    }
    runtime_sighandler(uStack0000000000000008,prStack0000000000000010,pvStack0000000000000018,gp);
    runtime_setg();
    if (extraout_AL_00 != '\0') {
      puVar2 = *(uintptr **)(*(int *)(*(int *)(in_FS_OFFSET + -8) + 0x30) + 0x50);
      *puVar2 = local_48._0_8_;
      puVar2[1] = local_48._8_8_;
      puVar2[2] = local_48._16_8_;
      puVar2[3] = local_48._24_8_;
      puVar2[0x10] = uStack_28;
    }
    return;
  }
  if (uStack0000000000000008 == 0x1b) {
    sVar1 = ((local_18.info)->siginfoFields).si_code;
    if ((sVar1 == 0x80) || (sVar1 == -2)) {
      bVar3 = sVar1 == 0x80;
    }
    else {
      bVar3 = true;
    }
    if (bVar3) {
      runtime_sigprofNonGoPC(*(uintptr *)((int)local_18.ctxt + 0xa8));
    }
    return;
  }
  if ((uStack0000000000000008 == 0x17) && (runtime_debug.asyncpreemptoff == 0)) {
    return;
  }
  if (gp != (runtime_g *)0x0) {
    runtime_setg();
  }
  runtime_badsignal((uint)uStack0000000000000008,&local_18);
  if (gp != (runtime_g *)0x0) {
    runtime_setg();
  }
  return;
}



// WARNING: Unknown calling convention

void runtime_sigprofNonGo(uint32 sig,runtime_siginfo *info,void *ctx)

{
  sdword sVar1;
  int n;
  bool setitimer;
  bool bVar2;
  __uintptr in_stack_ffffffffffffffd8;
  
  if (runtime_prof.hz.value != 0) {
    sVar1 = (info->siginfoFields).si_code;
    if ((sVar1 == 0x80) || (sVar1 == -2)) {
      bVar2 = sVar1 == 0x80;
    }
    else {
      bVar2 = true;
    }
    if (bVar2) {
      for (n = 0; (n < 0x20 && (runtime_sigprofCallers[n] != 0)); n = n + 1) {
      }
      if (0x20 < (uint)n) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAlen();
      }
      runtime___cpuProfile__addNonGo(&runtime_cpuprof,in_stack_ffffffffffffffd8);
    }
  }
  LOCK();
  runtime_sigprofCallersUse = 0;
  UNLOCK();
  return;
}



// WARNING: Unknown calling convention

void runtime_sigprofNonGoPC(uintptr pc)

{
  __uintptr in_stack_ffffffffffffffc8;
  
  if (runtime_prof.hz.value != 0) {
    runtime___cpuProfile__addNonGo(&runtime_cpuprof,in_stack_ffffffffffffffc8);
  }
  return;
}



void runtime_adjustSignalStack(uint32 sig,runtime_m *mp,runtime_gsignalStack *gsigStack,bool ~r0)

{
  int iVar1;
  uintptr *puVar2;
  uintptr uVar3;
  runtime_g *prVar4;
  uintptr uVar5;
  uintptr uVar6;
  uintptr uVar7;
  undefined auVar8 [16];
  uintptr stsp;
  uintptr stsp_1;
  uintptr stsp_2;
  int in_FS_OFFSET;
  int32 in_XMM15_Da;
  undefined4 in_XMM15_Db;
  undefined4 in_XMM15_Dc;
  undefined4 in_XMM15_Dd;
  uint32 uStack0000000000000008;
  runtime_m *prStack0000000000000010;
  runtime_gsignalStack *prStack0000000000000018;
  uintptr sp;
  runtime_g *gp_1;
  runtime_g *gp;
  runtime_stackt st_1;
  runtime_stackt st;
  
  if (((uint8 *)(mp->gsignal->stack).lo <= &stack0x00000008) &&
     (&stack0x00000008 < (uint8 *)(mp->gsignal->stack).hi)) {
    return;
  }
  st.ss_sp = (uint8 *)CONCAT44(in_XMM15_Db,in_XMM15_Da);
  auVar8._4_4_ = in_XMM15_Db;
  auVar8._0_4_ = in_XMM15_Da;
  auVar8._8_4_ = in_XMM15_Dc;
  auVar8._12_4_ = in_XMM15_Dd;
  st.ss_size = auVar8._8_8_;
  uStack0000000000000008 = sig;
  prStack0000000000000010 = mp;
  prStack0000000000000018 = gsigStack;
  st.ss_flags = in_XMM15_Da;
  runtime_sigaltstack((sigaltstack *)&st,(sigaltstack *)mp);
  iVar1 = *(int *)(in_FS_OFFSET + -8);
  if (((((dword)st.ss_flags >> 1 & 1) == 0) && (st.ss_sp <= &stack0x00000008)) &&
     (&stack0x00000008 < st.ss_sp + st.ss_size)) {
    if (prStack0000000000000018 != (runtime_gsignalStack *)0x0) {
      puVar2 = *(uintptr **)(*(int *)(iVar1 + 0x30) + 0x50);
      uVar3 = puVar2[1];
      (prStack0000000000000018->stack).lo = *puVar2;
      (prStack0000000000000018->stack).hi = uVar3;
      prStack0000000000000018->stackguard0 =
           *(uintptr *)(*(int *)(*(int *)(iVar1 + 0x30) + 0x50) + 0x10);
      prStack0000000000000018->stackguard1 =
           *(uintptr *)(*(int *)(*(int *)(iVar1 + 0x30) + 0x50) + 0x18);
      prStack0000000000000018->stktopsp =
           *(uintptr *)(*(int *)(*(int *)(iVar1 + 0x30) + 0x50) + 0x80);
    }
    **(uint8 ***)(*(int *)(iVar1 + 0x30) + 0x50) = st.ss_sp;
    *(uint8 **)(*(int *)(*(int *)(iVar1 + 0x30) + 0x50) + 8) = st.ss_sp + st.ss_size;
    *(uint8 **)(*(int *)(*(int *)(iVar1 + 0x30) + 0x50) + 0x10) = st.ss_sp + 0x3a0;
    *(uint8 **)(*(int *)(*(int *)(iVar1 + 0x30) + 0x50) + 0x18) = st.ss_sp + 0x3a0;
    return;
  }
  prVar4 = prStack0000000000000010->g0;
  if (((uint8 *)(prVar4->stack).lo <= &stack0x00000008) &&
     (&stack0x00000008 < (uint8 *)(prVar4->stack).hi)) {
    uVar3 = (prVar4->stack).hi;
    uVar5 = (prVar4->stack).lo;
    uVar6 = (prStack0000000000000010->g0->stack).lo;
    if (prStack0000000000000018 != (runtime_gsignalStack *)0x0) {
      puVar2 = *(uintptr **)(*(int *)(iVar1 + 0x30) + 0x50);
      uVar7 = puVar2[1];
      (prStack0000000000000018->stack).lo = *puVar2;
      (prStack0000000000000018->stack).hi = uVar7;
      prStack0000000000000018->stackguard0 =
           *(uintptr *)(*(int *)(*(int *)(iVar1 + 0x30) + 0x50) + 0x10);
      prStack0000000000000018->stackguard1 =
           *(uintptr *)(*(int *)(*(int *)(iVar1 + 0x30) + 0x50) + 0x18);
      prStack0000000000000018->stktopsp =
           *(uintptr *)(*(int *)(*(int *)(iVar1 + 0x30) + 0x50) + 0x80);
    }
    **(uintptr **)(*(int *)(iVar1 + 0x30) + 0x50) = uVar6;
    *(uintptr *)(*(int *)(*(int *)(iVar1 + 0x30) + 0x50) + 8) = uVar3 + (uVar6 - uVar5);
    *(uintptr *)(*(int *)(*(int *)(iVar1 + 0x30) + 0x50) + 0x10) = uVar6 + 0x3a0;
    *(uintptr *)(*(int *)(*(int *)(iVar1 + 0x30) + 0x50) + 0x18) = uVar6 + 0x3a0;
    return;
  }
  runtime_setg();
  runtime_needm(true);
  if (((dword)st.ss_flags >> 1 & 1) == 0) {
    runtime_sigNotOnStack(uStack0000000000000008,(uintptr)&stack0x00000008,prStack0000000000000010);
  }
  else {
    runtime_noSignalStack(uStack0000000000000008);
  }
  runtime_dropm();
  return;
}



// WARNING: Unknown calling convention

void runtime_sighandler(uint32 sig,runtime_siginfo *info,void *ctxt,runtime_g *gp)

{
  byte bVar1;
  sdword sVar2;
  runtime_m *mp_00;
  string s;
  uint32 uVar3;
  char cVar4;
  char extraout_AL;
  char extraout_AL_00;
  int32 flags;
  runtime_g *gp_00;
  runtime_g *extraout_RAX;
  runtime_g *prVar5;
  __useconds_t __useconds;
  dword dVar6;
  uint32 i;
  uint32 t;
  undefined ~r0;
  undefined extraout_BL;
  runtime_siginfo *extraout_RBX;
  runtime_siginfo *extraout_RBX_00;
  runtime_m *mp;
  runtime_g *extraout_RSI;
  runtime_g *extraout_RSI_00;
  struct___runtime_note_runtime_note__runtime_mask__3_uint32__runtime_wanted__3_uint32__runtime_ignored__3_uint32__runtime_recv__3_uint32__runtime_state_runtime_internal_atomic_Uint32__runtime_delivering_runtime_internal_atomic_Uint32__runtime_inuse_bool__
  *~r0_00;
  runtime_g *extraout_RSI_01;
  bool delayedSignal;
  bool setitimer;
  bool timer_create;
  int32 level;
  uintptr *unaff_R14;
  runtime_g *gsignal;
  runtime_g *gp_1;
  bool bVar7;
  undefined4 in_stack_ffffffffffffffa0;
  undefined in_stack_ffffffffffffffa4 [12];
  runtime_sigctxt local_18;
  
  while (&stack0x00000000 <= (undefined *)unaff_R14[2]) {
    runtime_morestack_noctxt();
  }
  mp_00 = (runtime_m *)unaff_R14[6];
  local_18.ctxt = ctxt;
  local_18.info = info;
  if ((*runtime_cgo_yield == (void *)0x0) || (mp_00 == (runtime_m *)0x0)) {
    bVar7 = false;
  }
  else if ((mp_00->g0->stack).lo == *unaff_R14) {
    bVar7 = (mp_00->g0->stack).hi == unaff_R14[1];
  }
  else {
    bVar7 = false;
  }
  if (sig == 0x1b) {
    if (!bVar7) {
      sVar2 = (info->siginfoFields).si_code;
      if ((sVar2 == 0x80) || (sVar2 == -2)) {
        bVar7 = sVar2 == 0x80;
        if ((mp_00 != (runtime_m *)0x0) && ((mp_00->mOS).profileTimerValid.u.value != 0)) {
          bVar7 = sVar2 == -2;
        }
      }
      else {
        bVar7 = true;
      }
      if (bVar7) {
        runtime_sigprof(*(uintptr *)((int)ctxt + 0xa8),*(uintptr *)((int)ctxt + 0xa0),0,gp,mp_00);
      }
    }
    return;
  }
  if (((sig == 5) &&
      (runtime_testSigtrap != (func__runtime_siginfo___runtime_sigctxt___runtime_g__bool **)0x0)) &&
     (cVar4 = (**runtime_testSigtrap)(info,&local_18,gp,(bool *)gp), info = extraout_RBX,
     cVar4 != '\0')) {
    return;
  }
  if (((sig == 10) && (runtime_testSigusr1 != (func__runtime_g__bool **)0x0)) &&
     (cVar4 = (**runtime_testSigusr1)(gp,(bool *)info), info = extraout_RBX_00, cVar4 != '\0')) {
    return;
  }
  ~r0 = SUB81(info,0);
  if (sig == 0x21) {
    runtime_runPerThreadSyscall();
    return;
  }
  if (((sig == 0x17) && (runtime_debug.asyncpreemptoff == 0)) && (!bVar7)) {
    runtime_doSigPreempt(gp,&local_18);
    ~r0 = extraout_BL;
  }
  if (sig < 0x41) {
    dVar6 = runtime_sigtable[sig].flags;
  }
  else {
    dVar6 = 4;
  }
  sVar2 = ((local_18.info)->siginfoFields).si_code;
  if ((((sVar2 != 0) && (sVar2 != -6)) && ((dVar6 >> 3 & 1) != 0)) &&
     ((gp->throwsplit != false || (mp_00->curg != gp)))) {
    dVar6 = 4;
  }
  runtime_isAbortPC(*(uintptr *)((int)local_18.ctxt + 0xa8),(bool)~r0);
  sVar2 = ((local_18.info)->siginfoFields).si_code;
  if (extraout_AL != '\0') {
    dVar6 = 4;
  }
  if (((sVar2 != 0) && (sVar2 != -6)) && ((dVar6 >> 3 & 1) != 0)) {
    gp->sig = sig;
    gp->sigcode0 = (int)((local_18.info)->siginfoFields).si_code;
    gp->sigcode1 = ((local_18.info)->siginfoFields).si_addr;
    gp->sigpc = *(uintptr *)((int)local_18.ctxt + 0xa8);
    runtime___sigctxt__preparePanic(&local_18,sig,gp);
    return;
  }
  if ((((sVar2 == 0) || (sVar2 == -6)) ||
      (~r0_00 = (struct___runtime_note_runtime_note__runtime_mask__3_uint32__runtime_wanted__3_uint32__runtime_ignored__3_uint32__runtime_recv__3_uint32__runtime_state_runtime_internal_atomic_Uint32__runtime_delivering_runtime_internal_atomic_Uint32__runtime_inuse_bool__
                 *)extraout_RSI, (dVar6 & 1) != 0)) &&
     (runtime_sigsend(sig,true),
     ~r0_00 = (struct___runtime_note_runtime_note__runtime_mask__3_uint32__runtime_wanted__3_uint32__runtime_ignored__3_uint32__runtime_recv__3_uint32__runtime_state_runtime_internal_atomic_Uint32__runtime_delivering_runtime_internal_atomic_Uint32__runtime_inuse_bool__
               *)extraout_RSI_00, extraout_AL_00 != '\0')) {
    return;
  }
  sVar2 = ((local_18.info)->siginfoFields).si_code;
  if ((sVar2 == 0) || (sVar2 == -6)) {
    if (2 < sig >> 5) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    ~r0_00 = &runtime_sig;
    if ((runtime_sig.ignored[sig >> 5] >> (sig & 0x1f) & 1) != 0) {
      return;
    }
  }
  if ((dVar6 >> 1 & 1) != 0) {
                    // WARNING: Subroutine does not return
    runtime_dieFromSignal(sig);
  }
  if ((dVar6 & 0xc) == 0) {
    return;
  }
  mp_00->throwing = 2;
  mp_00->caughtsig = (runtime_guintptr)gp;
  if (runtime_crashing == 0) {
    runtime_startpanic_m(SUB41(sig,0));
    ~r0_00 = (struct___runtime_note_runtime_note__runtime_mask__3_uint32__runtime_wanted__3_uint32__runtime_ignored__3_uint32__runtime_recv__3_uint32__runtime_state_runtime_internal_atomic_Uint32__runtime_delivering_runtime_internal_atomic_Uint32__runtime_inuse_bool__
              *)extraout_RSI_01;
  }
  runtime_fatalsignal(sig,&local_18,gp,mp_00,(runtime_g *)~r0_00);
  uVar3 = runtime_traceback_cache;
  bVar1 = *(byte *)(unaff_R14[6] + 0x129);
  level = (int32)bVar1;
  if ((bVar1 == 0) && (level = runtime_traceback_cache >> 2, 1 < *(dword *)(unaff_R14[6] + 0xf4))) {
    level = 2;
  }
  prVar5 = gp_00;
  if (level != 0) {
    runtime_goroutineheader(gp_00);
    runtime_tracebacktrap
              (*(uintptr *)((int)local_18.ctxt + 0xa8),*(uintptr *)((int)local_18.ctxt + 0xa0),0,
               gp_00);
    if (runtime_crashing < 1) {
      bVar7 = false;
    }
    else {
      prVar5 = mp_00->curg;
      if (gp_00 == prVar5) {
        bVar7 = false;
      }
      else if (prVar5 == (runtime_g *)0x0) {
        bVar7 = false;
      }
      else {
        bVar7 = ((prVar5->atomicstatus).value & 0xffffefff) == 2;
      }
    }
    if (bVar7) {
      runtime_goroutineheader(mp_00->curg);
      runtime_traceback1(0xffffffffffffffff,0xffffffffffffffff,0,mp_00->curg,0);
    }
    else if (runtime_crashing == 0) {
      runtime_tracebackothers(gp_00);
      runtime_printlock();
      runtime_printnl();
      runtime_printunlock();
    }
    runtime_dumpregs(&local_18);
    prVar5 = extraout_RAX;
  }
  if ((uVar3 & 1) == 0) {
                    // WARNING: Subroutine does not return
    runtime_exit((int)prVar5);
  }
  runtime_crashing = runtime_crashing + 1;
  if (runtime_crashing <
      (sdword)(((sdword)runtime_sched.mnext - (sdword)runtime_sched.nmfreed) -
              runtime_extraMLength.value)) {
    runtime_printlock();
    s._4_12_ = in_stack_ffffffffffffffa4;
    s.str._0_4_ = in_stack_ffffffffffffffa0;
    runtime_printstring(s);
    runtime_printunlock();
    runtime_raiseproc();
    runtime_usleep(__useconds);
  }
                    // WARNING: Subroutine does not return
  runtime_dieFromSignal(6);
}



void runtime_fatalsignal(uint32 sig,runtime_sigctxt *c,runtime_g *gp,runtime_m *mp,runtime_g *~r0)

{
  byte bVar1;
  sdword sVar2;
  int64 v;
  uint64 v_00;
  uint uVar3;
  string s;
  string s_00;
  string s_01;
  string s_02;
  string s_03;
  string s_04;
  string s_05;
  int extraout_RAX;
  int extraout_RAX_00;
  int __status;
  uintptr pc;
  uint uVar4;
  uintptr n;
  int unaff_R14;
  uint32 uStack0000000000000008;
  runtime_sigctxt *prStack0000000000000010;
  runtime_g *prStack0000000000000018;
  runtime_m *prStack0000000000000020;
  undefined4 in_stack_ffffffffffffff90;
  undefined in_stack_ffffffffffffff94 [12];
  uintptr i;
  uint8 (*b) [16];
  
  prStack0000000000000018 = gp;
  prStack0000000000000010 = c;
  prStack0000000000000020 = mp;
  uStack0000000000000008 = sig;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (uStack0000000000000008 < 0x41) {
    runtime_printlock();
    s._4_12_ = in_stack_ffffffffffffff94;
    s.str._0_4_ = in_stack_ffffffffffffff90;
    runtime_printstring(s);
    runtime_printnl();
    runtime_printunlock();
    __status = extraout_RAX;
  }
  else {
    runtime_printlock();
    s_00._4_12_ = in_stack_ffffffffffffff94;
    s_00.str._0_4_ = in_stack_ffffffffffffff90;
    runtime_printstring(s_00);
    runtime_printuint((uint)uStack0000000000000008);
    runtime_printnl();
    runtime_printunlock();
    __status = extraout_RAX_00;
  }
  if (runtime_secureMode == false) {
    v = prStack0000000000000020->id;
    sVar2 = (prStack0000000000000010->info->siginfoFields).si_code;
    v_00 = *(uint64 *)((int)prStack0000000000000010->ctxt + 0xa8);
    runtime_printlock();
    s_01._4_12_ = in_stack_ffffffffffffff94;
    s_01.str._0_4_ = in_stack_ffffffffffffff90;
    runtime_printstring(s_01);
    runtime_printhex(v_00);
    s_02._4_12_ = in_stack_ffffffffffffff94;
    s_02.str._0_4_ = in_stack_ffffffffffffff90;
    runtime_printstring(s_02);
    runtime_printint(v);
    s_03._4_12_ = in_stack_ffffffffffffff94;
    s_03.str._0_4_ = in_stack_ffffffffffffff90;
    runtime_printstring(s_03);
    runtime_printuint((int)sVar2);
    runtime_printnl();
    runtime_printunlock();
    if (((prStack0000000000000020->incgo != false) &&
        (prStack0000000000000020->g0 == prStack0000000000000018)) &&
       (prStack0000000000000020->curg != (runtime_g *)0x0)) {
      runtime_printlock();
      s_04._4_12_ = in_stack_ffffffffffffff94;
      s_04.str._0_4_ = in_stack_ffffffffffffff90;
      runtime_printstring(s_04);
      runtime_printunlock();
    }
    if ((uStack0000000000000008 == 4) || (uStack0000000000000008 == 8)) {
      if (runtime_physPageSize == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicdivide();
      }
      uVar3 = *(uint *)((int)prStack0000000000000010->ctxt + 0xa8);
      n = runtime_physPageSize - uVar3 % runtime_physPageSize;
      if (0xf < n) {
        n = 0x10;
      }
      runtime_printlock();
      s_05._4_12_ = in_stack_ffffffffffffff94;
      s_05.str._0_4_ = in_stack_ffffffffffffff90;
      runtime_printstring(s_05);
      runtime_printunlock();
      for (uVar4 = 0; uVar4 < n; uVar4 = uVar4 + 1) {
        if (0xf < uVar4) {
                    // WARNING: Subroutine does not return
          runtime_panicIndexU();
        }
        bVar1 = *(byte *)(uVar3 + uVar4);
        runtime_printlock();
        runtime_printsp();
        runtime_printhex((uint)bVar1);
        runtime_printunlock();
      }
      runtime_printlock();
      runtime_printnl();
      runtime_printunlock();
    }
    runtime_printlock();
    runtime_printnl();
    runtime_printunlock();
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_exit(__status);
}



// WARNING: Variable defined which should be unmapped: gp
// WARNING: Unknown calling convention
// DWARF original prototype: void runtime.sigpanic(void)

void runtime_sigpanic(void)

{
