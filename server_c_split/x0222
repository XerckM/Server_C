  uint8 **extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffb8;
  int in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (b->addr == (strings_Builder *)0x0) {
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX;
      extraout_R11[1] = extraout_RAX->addr;
      b = extraout_RAX;
      c = extraout_BL;
    }
    b->addr = b;
  }
  else if (b != b->addr) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb8);
  }
  oldCap = (b->buf).cap;
  newLen = (b->buf).len + 1;
  oldPtr = (b->buf).array;
  if (oldCap < newLen) {
    ~r0_00.cap = in_stack_ffffffffffffffc8;
    ~r0_00.array = in_stack_ffffffffffffffb8._type;
    ~r0_00.len = (int)in_stack_ffffffffffffffb8.data;
    runtime_growslice(oldPtr,newLen,oldCap,1,(internal_abi_Type *)&DAT_00807920,~r0_00);
    (b->buf).cap = extraout_RCX;
    oldPtr = extraout_RAX_00;
    newLen = extraout_RBX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RAX_01;
      extraout_R11_00[1] = (b->buf).array;
      oldPtr = extraout_RAX_01;
      newLen = extraout_RBX_00;
    }
    (b->buf).array = oldPtr;
  }
  (b->buf).len = newLen;
  oldPtr[newLen - 1] = c;
  return;
}



void strings___Builder__WriteRune(strings_Builder *b,int32 r,int ~r0,error ~r1)

{
  runtime_slice ~r0_00;
  __uint8 p;
  strings_Builder *extraout_RAX;
  uint8 *extraout_RAX_00;
  uint8 *extraout_RAX_01;
  strings_Builder *extraout_RAX_02;
  uint extraout_RCX;
  uint oldCap;
  uint extraout_RCX_00;
  uint8 *oldPtr;
  uint uVar1;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint newLen;
  strings_Builder **extraout_R11;
  uint8 **extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffb0;
  int in_stack_ffffffffffffffc0;
  __uint8 in_stack_ffffffffffffffc8;
  
  uVar1 = (uint)(dword)r;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (b->addr == (strings_Builder *)0x0) {
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX;
      extraout_R11[1] = extraout_RAX->addr;
      b = extraout_RAX;
      uVar1 = extraout_RBX;
    }
    b->addr = b;
  }
  else if (b != b->addr) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  oldCap = (b->buf).cap;
  oldPtr = (b->buf).array;
  if ((dword)uVar1 < 0x80) {
    newLen = (b->buf).len + 1;
    if (oldCap < newLen) {
      ~r0_00.cap = in_stack_ffffffffffffffc0;
      ~r0_00.array = in_stack_ffffffffffffffb0._type;
      ~r0_00.len = (int)in_stack_ffffffffffffffb0.data;
      runtime_growslice(oldPtr,newLen,oldCap,1,(internal_abi_Type *)&DAT_00807920,~r0_00);
      uVar1 = uVar1 & 0xffffffff;
      oldCap = extraout_RCX;
      oldPtr = extraout_RAX_00;
      newLen = extraout_RBX_00;
    }
    oldPtr[newLen - 1] = (uint8)uVar1;
  }
  else {
    p.cap = in_stack_ffffffffffffffc0;
    p.array = (uint8 *)in_stack_ffffffffffffffb0._type;
    p.len = (int)in_stack_ffffffffffffffb0.data;
    unicode_utf8_appendRuneNonASCII(p,(int32)oldPtr,in_stack_ffffffffffffffc8);
    oldCap = extraout_RCX_00;
    oldPtr = extraout_RAX_01;
    newLen = extraout_RBX_01;
  }
  (b->buf).len = newLen;
  (b->buf).cap = oldCap;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = oldPtr;
    extraout_R11_00[1] = (extraout_RAX_02->buf).array;
    b = extraout_RAX_02;
  }
  (b->buf).array = oldPtr;
  return;
}



void strings___Builder__WriteString(strings_Builder *b,string s,int ~r0,error ~r1)

{
  int iVar1;
  runtime_slice ~r0_00;
  strings_Builder *extraout_RAX;
  uint8 *extraout_RAX_00;
  size_t in_RCX;
  size_t extraout_RCX;
  uint extraout_RCX_00;
  uint oldCap;
  void *extraout_RBX;
  uint extraout_RBX_00;
  strings_Builder *extraout_RSI;
  uint newLen;
  uint8 *oldPtr;
  strings_Builder **extraout_R11;
  uint8 **extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffb8;
  int in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (b->addr == (strings_Builder *)0x0) {
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX;
      extraout_R11[1] = extraout_RAX->addr;
      b = extraout_RAX;
      in_RCX = extraout_RCX;
      ~r0 = (int)extraout_RBX;
    }
    b->addr = b;
  }
  else if (b != b->addr) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb8);
  }
  oldCap = (b->buf).cap;
  iVar1 = (b->buf).len;
  newLen = iVar1 + in_RCX;
  oldPtr = (b->buf).array;
  if (oldCap < newLen) {
    ~r0_00.cap = in_stack_ffffffffffffffc8;
    ~r0_00.array = in_stack_ffffffffffffffb8._type;
    ~r0_00.len = (int)in_stack_ffffffffffffffb8.data;
    runtime_growslice(oldPtr,newLen,oldCap,in_RCX,(internal_abi_Type *)&DAT_00807920,~r0_00);
    oldCap = extraout_RCX_00;
    newLen = extraout_RBX_00;
    oldPtr = extraout_RAX_00;
  }
  runtime_memmove(oldPtr + iVar1,(void *)~r0,in_RCX);
  (b->buf).len = newLen;
  (b->buf).cap = oldCap;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = oldPtr;
    extraout_R11_00[1] = (extraout_RSI->buf).array;
    b = extraout_RSI;
  }
  (b->buf).array = oldPtr;
  return;
}



void strings___Reader__Len(strings_Reader *r,int ~r0)

{
  if ((r->s).len <= r->i) {
    return;
  }
  return;
}



void strings___Reader__Size(strings_Reader *r,int64 ~r0)

{
  return;
}



void strings___Reader__Read(strings_Reader *r,__uint8 b,int n,error err)

{
  uint8 *__src;
  uint uVar1;
  uint uVar2;
  size_t in_RCX;
  size_t sVar3;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (r->i < (r->s).len) {
    r->prevRune = -1;
    uVar1 = (r->s).len;
    uVar2 = r->i;
    if (uVar2 <= uVar1) {
      sVar3 = uVar1 - uVar2;
      __src = (r->s).str + (uVar2 & (int)-sVar3 >> 0x3f);
      if ((int)sVar3 < (int)in_RCX) {
        in_RCX = sVar3;
      }
      if ((uint8 *)n != __src) {
        runtime_memmove((void *)n,__src,in_RCX);
      }
      r->i = r->i + in_RCX;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  return;
}



void strings___Reader__ReadAt(strings_Reader *r,__uint8 b,int64 off,int n,error err)

{
  uint8 *__src;
  int iVar1;
  undefined8 *extraout_RAX;
  size_t sVar2;
  uint in_RSI;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (-1 < (int)in_RSI) {
    iVar1 = (r->s).len;
    if ((int)in_RSI < iVar1) {
      sVar2 = iVar1 - in_RSI;
      __src = (r->s).str + (in_RSI & (int)-sVar2 >> 0x3f);
      if ((int)sVar2 < n) {
        n = sVar2;
      }
      if ((uint8 *)off != __src) {
        runtime_memmove((void *)off,__src,n);
      }
      return;
    }
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0083e560,(void *)off);
  extraout_RAX[1] = 0x26;
  *extraout_RAX = &DAT_008c3959;
  return;
}



void strings___Reader__ReadByte(strings_Reader *r,uint8 ~r0,error ~r1)

{
  uint uVar1;
  uint uVar2;
  uint8 b;
  
  r->prevRune = -1;
  uVar1 = (r->s).len;
  uVar2 = r->i;
  if ((int)uVar1 <= (int)uVar2) {
    return;
  }
  if (uVar2 < uVar1) {
    r->i = uVar2 + 1;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void strings___Reader__UnreadByte(strings_Reader *r,error ~r0)

{
  undefined8 *extraout_RAX;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  if (r->i < 1) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,in_RBX);
    extraout_RAX[1] = 0x31;
    *extraout_RAX = &DAT_008c8708;
    return;
  }
  r->prevRune = -1;
  r->i = r->i + -1;
  return;
}



void strings___Reader__ReadRune(strings_Reader *r,int32 ch,int size,error err)

{
  uint uVar1;
  uint uVar2;
  uint8 *puVar3;
  int size_00;
  int extraout_RBX;
  uint8 c;
  int unaff_R14;
  string in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((r->s).len <= r->i) {
    r->prevRune = -1;
    return;
  }
  r->prevRune = r->i;
  uVar1 = (r->s).len;
  uVar2 = r->i;
  if (uVar1 <= uVar2) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  puVar3 = (r->s).str;
  if (puVar3[uVar2] < 0x80) {
    r->i = uVar2 + 1;
    return;
  }
  size_00 = uVar1 - uVar2;
  unicode_utf8_DecodeRuneInString
            (in_stack_ffffffffffffffe8,(sdword)puVar3 + ((dword)uVar2 & (dword)(-size_00 >> 0x3f)),
             size_00);
  r->i = r->i + extraout_RBX;
  return;
}



void strings___Reader__UnreadRune(strings_Reader *r,error ~r0)

{
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  if (0 < r->i) {
    if (r->prevRune < 0) {
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,in_RBX);
      extraout_RAX[1] = 0x3e;
      *extraout_RAX = &DAT_008cb5f8;
      return;
    }
    r->i = r->prevRune;
    r->prevRune = -1;
    return;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0083e560,in_RBX);
  extraout_RAX_00[1] = 0x31;
  *extraout_RAX_00 = &DAT_008c8739;
  return;
}



// Local variable abs:int64[RBX:8] conflicts with parameter, skipped.

void strings___Reader__Seek(strings_Reader *r,int64 offset,int whence,int64 ~r0,error ~r1)

{
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  r->prevRune = -1;
  if (whence != 0) {
    if (whence == 1) {
      offset = offset + r->i;
    }
    else {
      if (whence != 2) {
        runtime_newobject((internal_abi_Type *)&DAT_0083e560,(void *)offset);
        extraout_RAX_00[1] = 0x23;
        *extraout_RAX_00 = &DAT_008c1d9f;
        return;
      }
      offset = offset + (r->s).len;
    }
  }
  if (offset < 0) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,(void *)offset);
    extraout_RAX[1] = 0x26;
    *extraout_RAX = &DAT_008c397f;
    return;
  }
  r->i = offset;
  return;
}



void strings___Reader__WriteTo(strings_Reader *r,io_Writer w,int64 n,error err)

{
  uint uVar1;
  uint uVar2;
  error err_00;
  int extraout_RAX;
  int m;
  void *unaff_RBP;
  runtime_itab *prVar3;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  r->prevRune = -1;
  uVar1 = (r->s).len;
  uVar2 = r->i;
  if ((int)uVar1 <= (int)uVar2) {
    return;
  }
  if (uVar1 < uVar2) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  prVar3 = (runtime_itab *)(uVar1 - uVar2);
  err_00.data = unaff_RBP;
  err_00.tab = prVar3;
  io_WriteString((io_Writer)in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,n,err_00);
  if ((int)prVar3 < extraout_RAX) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffd0);
  }
  r->i = extraout_RAX + r->i;
  return;
}



void strings___Reader__Reset(strings_Reader *r,string s)

{
  strings_Reader *extraout_RAX;
  int in_RCX;
  uint8 *in_RBX;
  uint8 *extraout_RBX;
  uint8 **extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  (r->s).len = in_RCX;
  r->i = 0;
  r->prevRune = -1;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RBX;
    extraout_R11[1] = (extraout_RAX->s).str;
    r = extraout_RAX;
    in_RBX = extraout_RBX;
  }
  (r->s).str = in_RBX;
  return;
}



void strings___Replacer__build(strings_Replacer *b,strings_replacer ~r0)

{
  bool bVar1;
  __string oldnew;
  runtime_slice ~r0_00;
  __uint8 ~r0_01;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *puVar2;
  int extraout_RAX_03;
  strings_byteReplacer *_r_1;
  undefined (*extraout_RAX_04) [16];
  strings_byteStringReplacer *_r;
  undefined8 extraout_RAX_05;
  undefined8 extraout_RAX_06;
  undefined8 uVar3;
  undefined8 extraout_RAX_07;
  void *extraout_RAX_08;
  void *extraout_RAX_09;
  void *oldPtr;
  undefined8 extraout_RAX_10;
  undefined8 extraout_RAX_11;
  undefined8 extraout_RAX_12;
  int iVar4;
  undefined8 extraout_RCX;
  undefined8 extraout_RCX_00;
  int i_1;
  uint8 o;
  uint uVar5;
  int i_3;
  undefined (*pauVar6) [16];
  int i_2;
  void *~r0_02;
  int i;
  undefined8 extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  undefined8 extraout_RBX_02;
  bool allNewBytes;
  uint uVar7;
  int extraout_RSI;
  undefined (*extraout_RSI_00) [16];
  void *~r0_03;
  void *extraout_RDI;
  uint8 n;
  undefined8 *extraout_R11;
  int *extraout_R11_00;
  undefined8 *extraout_R11_01;
  void **extraout_R11_02;
  undefined8 *extraout_R11_03;
  undefined8 *extraout_R11_04;
  int unaff_R14;
  byte bVar8;
  undefined in_XMM15 [16];
  string in_stack_ffffffffffffff48;
  uint8 *in_stack_ffffffffffffff58;
  undefined in_stack_ffffffffffffff60 [16];
  byte local_71;
  uint8 *local_70;
  uint local_68;
  undefined8 local_60;
  undefined8 local_58;
  int local_50;
  uint local_48;
  int local_40;
  strings_genericReplacer *local_38;
  undefined8 local_30;
  undefined8 local_28;
  undefined8 local_20;
  undefined8 local_18;
  undefined (*local_10) [16];
  
  bVar8 = 0;
  while (&local_38 <= *(strings_genericReplacer ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_68 = (b->oldnew).len;
  local_38 = (strings_genericReplacer *)(b->oldnew).array;
  if ((local_68 == 2) && (1 < (local_38->root).value.len)) {
    local_40 = (local_38->root).priority;
    local_70 = (local_38->root).prefix.str;
    strings_makeStringFinder
              (in_stack_ffffffffffffff48,(strings_stringFinder *)(local_38->root).value.str);
    local_18 = extraout_RAX;
    runtime_newobject((internal_abi_Type *)&DAT_00851640,~r0_02);
    puVar2 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = local_18;
      puVar2 = extraout_RAX_01;
    }
    *puVar2 = local_18;
    puVar2[2] = local_70;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = local_40;
      puVar2 = extraout_RAX_02;
    }
    puVar2[1] = local_40;
    return;
  }
  i = 0;
  bVar1 = true;
  while( true ) {
    if ((int)local_68 <= i) {
      if (!bVar1) {
        runtime_newobject((internal_abi_Type *)&DAT_008516e0,(void *)i);
        local_48 = local_68 >> 1;
        local_10 = extraout_RAX_04;
        runtime_makeslice((internal_abi_Type *)&DAT_008075e0,0,local_48,~r0_03);
        local_20 = extraout_RAX_05;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_01 = extraout_RAX_06;
          extraout_R11_01[1] = *(undefined8 *)local_10[0x180];
          runtime_wbZero((internal_abi_Type *)&DAT_008516e0,local_10);
        }
        *local_10 = in_XMM15;
        puVar2 = (undefined8 *)(*local_10 + 8);
        for (iVar4 = 0x302; iVar4 != 0; iVar4 = iVar4 + -1) {
          *puVar2 = 0;
          puVar2 = puVar2 + (uint)bVar8 * -2 + 1;
        }
        *(undefined8 *)local_10[0x180] = local_20;
        *(uint *)local_10[0x181] = local_48;
        pauVar6 = local_10;
        uVar7 = local_68;
        while( true ) {
          uVar5 = uVar7 - 2;
          if ((int)uVar5 < 0) {
            return;
          }
          if (*(int *)(local_38->mapping + uVar7 * 0x10 + -0x68) == 0) break;
          if (local_68 <= uVar7 - 1) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          bVar8 = **(byte **)(local_38->mapping + uVar7 * 0x10 + -0x70);
          local_50 = (uint)bVar8 * 3;
          local_48 = uVar5;
          if (*(int *)((int)pauVar6 + (uint)bVar8 * 0x18) == 0) {
            local_71 = bVar8;
            local_60 = *(undefined8 *)(local_38->mapping + uVar7 * 0x10 + -0x58);
            local_30 = *(undefined8 *)(local_38->mapping + uVar7 * 0x10 + -0x60);
            runtime_slicebytetostring((runtime_tmpBuf *)0x0,&local_71,1,in_stack_ffffffffffffff48);
            uVar7 = *(int *)(local_10[0x180] + 8) + 1;
            oldPtr = *(void **)local_10[0x180];
            local_28 = extraout_RAX_07;
            pauVar6 = local_10;
            local_58 = extraout_RBX;
            if (*(uint *)local_10[0x181] < uVar7) {
              ~r0_00.cap = (int)in_stack_ffffffffffffff58;
              ~r0_00.array = in_stack_ffffffffffffff48.str;
              ~r0_00.len = in_stack_ffffffffffffff48.len;
              runtime_growslice(oldPtr,uVar7,*(uint *)local_10[0x181],1,
                                (internal_abi_Type *)&DAT_008075e0,~r0_00);
              *(undefined8 *)local_10[0x181] = extraout_RCX;
              oldPtr = extraout_RAX_08;
              pauVar6 = local_10;
              uVar7 = extraout_RBX_00;
              if (runtime_writeBarrier._0_4_ != 0) {
                runtime_gcWriteBarrier2();
                *extraout_R11_02 = extraout_RAX_09;
                extraout_R11_02[1] = *(void **)pauVar6[0x180];
                oldPtr = extraout_RAX_09;
                uVar7 = extraout_RBX_01;
              }
              *(void **)pauVar6[0x180] = oldPtr;
            }
            *(uint *)(pauVar6[0x180] + 8) = uVar7;
            iVar4 = (uVar7 - 1) * 0x10;
            *(undefined8 *)((int)oldPtr + iVar4 + 8) = local_58;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier2();
              *extraout_R11_03 = extraout_RAX_10;
              extraout_R11_03[1] = *(undefined8 *)((int)extraout_RDI + extraout_RSI);
              local_28 = extraout_RAX_10;
              iVar4 = extraout_RSI;
              oldPtr = extraout_RDI;
            }
            *(undefined8 *)((int)oldPtr + iVar4) = local_28;
          }
          ~r0_01.len = in_stack_ffffffffffffff60._0_8_;
          ~r0_01.cap = in_stack_ffffffffffffff60._8_8_;
          ~r0_01.array = in_stack_ffffffffffffff58;
          runtime_stringtoslicebyte((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff48,~r0_01);
          *(undefined8 *)(*local_10 + local_50 * 8 + 8) = extraout_RBX_02;
          *(undefined8 *)(local_10[1] + local_50 * 8) = extraout_RCX_00;
          uVar3 = extraout_RAX_11;
          iVar4 = local_50;
          pauVar6 = local_10;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_04 = extraout_RAX_12;
            extraout_R11_04[1] = *(undefined8 *)(*extraout_RSI_00 + iVar4 * 8);
            uVar3 = extraout_RAX_12;
            pauVar6 = extraout_RSI_00;
          }
          *(undefined8 *)(*pauVar6 + iVar4 * 8) = uVar3;
          uVar7 = local_48;
        }
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      runtime_newobject((internal_abi_Type *)&DAT_00826a40,(void *)i);
      for (i_1 = 0; uVar7 = local_68, i_1 < 0x100; i_1 = i_1 + 1) {
        *(char *)(extraout_RAX_03 + i_1) = (char)i_1;
      }
      while( true ) {
        if ((int)(uVar7 - 2) < 0) {
          return;
        }
        if (*(int *)(local_38->mapping + uVar7 * 0x10 + -0x68) == 0) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        if (local_68 <= uVar7 - 1) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        if (*(int *)(local_38->mapping + uVar7 * 0x10 + -0x58) == 0) break;
        *(undefined *)
         (extraout_RAX_03 + (uint)**(byte **)(local_38->mapping + uVar7 * 0x10 + -0x70)) =
             **(undefined **)(local_38->mapping + uVar7 * 0x10 + -0x60);
        uVar7 = uVar7 - 2;
      }
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (local_68 <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (*(int *)(local_38->mapping + i * 0x10 + -0x48) != 1) break;
    if (local_68 <= i + 1U) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (*(int *)(local_38->mapping + i * 0x10 + -0x38) != 1) {
      bVar1 = false;
    }
    i = i + 2;
  }
  oldnew.cap = (int)in_stack_ffffffffffffff58;
  oldnew.array = (string *)in_stack_ffffffffffffff48.str;
  oldnew.len = in_stack_ffffffffffffff48.len;
  strings_makeGenericReplacer(oldnew,local_38);
  return;
}



void strings___Replacer__Replace(strings_Replacer *r,string s,string ~r0)

{
  int unaff_R14;
  undefined local_18 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_18._8_8_ = r;
  local_18._0_8_ = strings___Replacer__buildOnce_fm;
  if ((r->once).done == 0) {
    sync___Once__doSlow(&r->once,(func__ **)local_18);
  }
  (*(code *)((r->r).tab)->fun[0])((r->r).data);
  return;
}



void strings___trieNode__add
               (strings_trieNode *t,string key,string val,int priority,strings_genericReplacer *r)

{
  strings_trieNode *extraout_RAX;
  strings_trieNode *extraout_RAX_00;
  strings_trieNode *extraout_RAX_01;
  strings_trieNode *extraout_RAX_02;
  strings_trieNode *extraout_RAX_03;
  strings_trieNode *extraout_RAX_04;
  strings_trieNode *extraout_RAX_05;
  strings_trieNode *extraout_RAX_06;
  strings_trieNode *extraout_RAX_07;
  strings_trieNode *extraout_RAX_08;
  strings_trieNode *keyNode;
  strings_trieNode **extraout_RAX_09;
  strings_trieNode **extraout_RAX_10;
  strings_trieNode **ppsVar1;
  uint uVar2;
  uint extraout_RAX_11;
  uint uVar3;
  uint extraout_RAX_12;
  undefined8 extraout_RAX_13;
  strings_trieNode *extraout_RAX_14;
  strings_trieNode *next;
  strings_trieNode *extraout_RAX_15;
  strings_trieNode *extraout_RAX_16;
  strings_trieNode *extraout_RAX_17;
  strings_trieNode *psVar4;
  strings_trieNode *extraout_RCX;
  uint8 *puVar5;
  uint8 *extraout_RCX_00;
  uint extraout_RCX_01;
  strings_genericReplacer *extraout_RCX_02;
  strings_genericReplacer *extraout_RCX_03;
  strings_genericReplacer *r_00;
  uint8 *extraout_RCX_04;
  strings_trieNode *extraout_RCX_05;
  strings_trieNode *prefixNode;
  strings_trieNode *psVar6;
  uint extraout_RBX;
  uint8 *extraout_RBX_00;
  void *extraout_RBX_01;
  void *extraout_RBX_02;
  void *extraout_RBX_03;
  void *~r0;
  int extraout_RBX_04;
  int extraout_RBX_05;
  int priority_00;
  int in_RSI;
  uint8 *in_RDI;
  uint8 *extraout_RDI;
  void *~r0_00;
  int in_R8;
  int extraout_R8;
  int in_R9;
  int extraout_R9;
  int extraout_R9_00;
  strings_trieNode **extraout_R10;
  strings_trieNode *extraout_R10_00;
  strings_trieNode *extraout_R10_01;
  strings_trieNode *extraout_R10_02;
  strings_trieNode **extraout_R11;
  uint8 **extraout_R11_00;
  strings_trieNode **extraout_R11_01;
  uint8 **extraout_R11_02;
  int n;
  uint8 **extraout_R11_03;
  strings_trieNode **extraout_R11_04;
  undefined8 *extraout_R11_05;
  strings_trieNode **extraout_R11_06;
  strings_trieNode **extraout_R11_07;
  undefined8 *extraout_R11_08;
  uint8 **extraout_R11_09;
  strings_trieNode **extraout_R11_10;
  strings_trieNode **extraout_R11_11;
  int unaff_R14;
  string in_stack_ffffffffffffff98;
  string in_stack_ffffffffffffffa8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (r == (strings_genericReplacer *)0x0) {
    if (t->priority == 0) {
      (t->value).len = in_RSI;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_02 = extraout_RDI;
        extraout_R11_02[1] = (extraout_RAX_04->value).str;
        t = extraout_RAX_04;
        in_RDI = extraout_RDI;
        in_R8 = extraout_R8;
      }
      (t->value).str = in_RDI;
      t->priority = in_R8;
    }
    return;
  }
  uVar3 = (t->prefix).len;
  if (uVar3 == 0) {
    ppsVar1 = (t->table).array;
    if (ppsVar1 == (strings_trieNode **)0x0) {
      (t->prefix).len = (int)r;
      psVar4 = t;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_00 = extraout_RBX_00;
        extraout_R11_00[1] = (extraout_RAX_01->prefix).str;
        psVar4 = extraout_RAX_01;
        priority = (int)extraout_RBX_00;
      }
      (psVar4->prefix).str = (uint8 *)priority;
      runtime_newobject((internal_abi_Type *)&DAT_0087ea60,(void *)priority);
      psVar4 = extraout_RAX_02;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_01 = extraout_RAX_03;
        extraout_R11_01[1] = t->next;
        psVar4 = extraout_RAX_03;
      }
      t->next = psVar4;
      strings___trieNode__add
                (psVar4,in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8,0,
                 (strings_genericReplacer *)0x0);
    }
    else {
      uVar3 = (uint)*(byte *)(in_R9 + 0x50 + (uint)*(byte *)priority);
      if ((uint)(t->table).len <= uVar3) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if (ppsVar1[uVar3] == (strings_trieNode *)0x0) {
        runtime_newobject((internal_abi_Type *)&DAT_0087ea60,(void *)priority);
        if ((uint)(t->table).len <= uVar3) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        ppsVar1 = (t->table).array;
        psVar4 = extraout_RAX;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11 = extraout_RAX_00;
          extraout_R11[1] = ppsVar1[extraout_RBX];
          psVar4 = extraout_RAX_00;
          t = extraout_RCX;
          uVar3 = extraout_RBX;
        }
        ppsVar1[uVar3] = psVar4;
      }
      if ((uint)(t->table).len <= uVar3) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      strings___trieNode__add
                ((t->table).array[uVar3],in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8,
                 priority +
                 (uint)((dword)(-(int)(strings_genericReplacer *)(r[-1].mapping + 0xff) >> 0x3f) & 1
                       ),(strings_genericReplacer *)(r[-1].mapping + 0xff));
    }
  }
  else {
    puVar5 = (t->prefix).str;
    for (n = 0; ((n < (int)uVar3 && (n < (int)r)) && (*(uint8 *)(priority + n) == puVar5[n]));
        n = n + 1) {
    }
    if (n == uVar3) {
      if (r < (uint)n) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      strings___trieNode__add
                (t->next,in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8,
                 priority + (n & -(int)(strings_genericReplacer *)((int)r - n) >> 0x3f),
                 (strings_genericReplacer *)((int)r - n));
    }
    else if (n == 0) {
      if (uVar3 == 1) {
        psVar4 = t->next;
        ~r0 = (void *)priority;
      }
      else {
        runtime_newobject((internal_abi_Type *)&DAT_0087ea60,(void *)priority);
        (extraout_RAX_05->prefix).len = uVar3 - 1;
        puVar5 = puVar5 + 1;
        psVar4 = extraout_RAX_05;
        ~r0 = extraout_RBX_01;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_03 = extraout_RCX_00;
          psVar4 = extraout_RAX_06;
          puVar5 = extraout_RCX_00;
          ~r0 = extraout_RBX_02;
        }
        (psVar4->prefix).str = puVar5;
        psVar6 = t->next;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_04 = psVar6;
          psVar4 = extraout_RAX_07;
          ~r0 = extraout_RBX_03;
        }
        psVar4->next = psVar6;
      }
