    ~r0_01 = extraout_RBX_01;
  }
  (pmVar6->abs).array = pmVar4;
  pmVar6->neg = false;
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0_01);
  if (uVar7 <= in_RDI) {
    z_00.cap = (int)in_stack_ffffffffffffffb0;
    z_00.array = (math_big_Word *)in_stack_ffffffffffffffa0.tab;
    z_00.len = (int)in_stack_ffffffffffffffa0.data;
    buf_00.len = in_stack_ffffffffffffffc0._0_8_;
    buf_00.cap = in_stack_ffffffffffffffc0._8_8_;
    buf_00.array = in_stack_ffffffffffffffb8;
    ~r0_00.len = uVar7;
    ~r0_00.array = (math_big_Word *)iVar2;
    ~r0_00.cap = (int)extraout_RAX_02;
    pmVar6 = extraout_RAX_02;
    math_big_nat_setBytes(z_00,buf_00,~r0_00);
    (pmVar6->abs).len = extraout_RBX_02;
    (pmVar6->abs).cap = (int)extraout_RCX_00;
    pmVar5 = extraout_RAX_03;
    pmVar4 = extraout_RCX_00;
    x_01 = pmVar6;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RAX_04;
      pmVar4 = (pmVar6->abs).array;
      extraout_R11_00[1] = pmVar4;
      pmVar5 = extraout_RAX_04;
    }
    (pmVar6->abs).array = pmVar5;
    pmVar6->neg = false;
    math_big___Int__Cmp(x_00,y_00,(int)pmVar4);
    if (extraout_RAX_05 < 0) {
      math_big___Int__Cmp(x_01,y_00,r_00);
      if (extraout_RAX_06 < 0) {
        cVar1 = (*(code *)x[1].abs.array)(y,x_00,x_01);
        if (cVar1 != '\0') {
          return;
        }
        return;
      }
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceB();
}



void crypto_elliptic_panicIfNotOnCurve(crypto_elliptic_Curve curve,math_big_Int *x,math_big_Int *y)

{
  char cVar1;
  char *in_RCX;
  int iVar2;
  char *in_RDI;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (*(int *)(in_RCX + 0x10) == 0) {
    iVar2 = 0;
  }
  else if (*in_RCX == '\0') {
    iVar2 = 1;
  }
  else {
    iVar2 = -1;
  }
  if (iVar2 == 0) {
    if (*(int *)(in_RDI + 0x10) == 0) {
      iVar2 = 0;
    }
    else if (*in_RDI == '\0') {
      iVar2 = 1;
    }
    else {
      iVar2 = -1;
    }
    if (iVar2 == 0) {
      return;
    }
  }
  cVar1 = (*(code *)x[1].abs.array)(y,in_RCX,in_RDI);
  if (cVar1 != '\0') {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_gopanic(in_stack_ffffffffffffffe0);
}



// WARNING: Unknown calling convention

void crypto_elliptic_initAll(void)

{
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  crypto_elliptic_initP224();
  crypto_elliptic_initP256();
  crypto_elliptic_initP384();
  crypto_elliptic_initP521();
  return;
}



// WARNING: Unknown calling convention

void crypto_elliptic_initP224(void)

{
  math_big_Int *z;
  math_big_Int *extraout_RAX;
  math_big_Int *b;
  math_big_Int *z_00;
  math_big_Int *extraout_RAX_00;
  math_big_Int *b_1;
  math_big_Int *z_01;
  math_big_Int *extraout_RAX_01;
  math_big_Int *b_2;
  math_big_Int *z_02;
  math_big_Int *extraout_RAX_02;
  math_big_Int *b_3;
  math_big_Int *z_03;
  math_big_Int *extraout_RAX_03;
  math_big_Int *b_4;
  crypto_elliptic_CurveParams *extraout_RAX_04;
  crypto_elliptic_CurveParams *extraout_RAX_05;
  crypto_elliptic_CurveParams *extraout_RAX_06;
  crypto_elliptic_CurveParams *pcVar1;
  crypto_elliptic_nistCurve__crypto_internal_nistec_P224Point_ *extraout_RCX;
  crypto_elliptic_nistCurve__crypto_internal_nistec_P224Point_ *pcVar2;
  bool ok;
  bool ok_1;
  bool ok_2;
  bool ok_3;
  bool ok_4;
  void *in_RBX;
  void *~r0;
  void *~r0_00;
  void *~r0_01;
  void *~r0_02;
  void *~r0_03;
  void *extraout_RBX;
  math_big_Int **extraout_R11;
  crypto_elliptic_CurveParams **extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffb0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,in_RBX);
  math_big___Int__SetString(z,(string)in_stack_ffffffffffffffb0,0x8cc4af,(math_big_Int *)0x44,true);
  ok = SUB81(~r0,0);
  if (ok == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0);
  math_big___Int__SetString
            (z_00,(string)in_stack_ffffffffffffffb0,0x8cc4f3,(math_big_Int *)0x44,true);
  ok_1 = SUB81(~r0_00,0);
  if (ok_1 == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0_00);
  math_big___Int__SetString
            (z_01,(string)in_stack_ffffffffffffffb0,0x8ca76e,(math_big_Int *)0x38,true);
  ok_2 = SUB81(~r0_01,0);
  if (ok_2 == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0_01);
  math_big___Int__SetString
            (z_02,(string)in_stack_ffffffffffffffb0,0x8ca7a6,(math_big_Int *)0x38,true);
  ok_3 = SUB81(~r0_02,0);
  if (ok_3 == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0_02);
  math_big___Int__SetString
            (z_03,(string)in_stack_ffffffffffffffb0,0x8ca7de,(math_big_Int *)0x38,true);
  ok_4 = SUB81(~r0_03,0);
  if (ok_4 == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_0088b6e0,~r0_03);
  (extraout_RAX_04->Name).len = 5;
  (extraout_RAX_04->Name).str = (uint8 *)0x8aefca;
  extraout_RAX_04->BitSize = 0xe0;
  pcVar1 = extraout_RAX_04;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier5();
    *extraout_R11 = extraout_RAX;
    extraout_R11[1] = extraout_RAX_00;
    extraout_R11[2] = extraout_RAX_01;
    extraout_R11[3] = extraout_RAX_02;
    extraout_R11[4] = extraout_RAX_03;
    pcVar1 = extraout_RAX_05;
  }
  pcVar1->P = extraout_RAX;
  pcVar1->N = extraout_RAX_00;
  pcVar1->B = extraout_RAX_01;
  pcVar1->Gx = extraout_RAX_02;
  pcVar1->Gy = extraout_RAX_03;
  pcVar2 = crypto_elliptic_p224;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_06;
    extraout_R11_00[1] = extraout_RCX->params;
    pcVar1 = extraout_RAX_06;
    pcVar2 = extraout_RCX;
  }
  pcVar2->params = pcVar1;
  return;
}



// WARNING: Unknown calling convention

void crypto_elliptic_initP256(void)

{
  math_big_Int *z;
  math_big_Int *extraout_RAX;
  math_big_Int *b;
  math_big_Int *z_00;
  math_big_Int *extraout_RAX_00;
  math_big_Int *b_1;
  math_big_Int *z_01;
  math_big_Int *extraout_RAX_01;
  math_big_Int *b_2;
  math_big_Int *z_02;
  math_big_Int *extraout_RAX_02;
  math_big_Int *b_3;
  math_big_Int *z_03;
  math_big_Int *extraout_RAX_03;
  math_big_Int *b_4;
  crypto_elliptic_CurveParams *extraout_RAX_04;
  crypto_elliptic_CurveParams *extraout_RAX_05;
  crypto_elliptic_CurveParams *extraout_RAX_06;
  crypto_elliptic_CurveParams *pcVar1;
  crypto_elliptic_p256Curve *extraout_RCX;
  crypto_elliptic_p256Curve *pcVar2;
  bool ok;
  bool ok_1;
  bool ok_2;
  bool ok_3;
  bool ok_4;
  void *in_RBX;
  void *~r0;
  void *~r0_00;
  void *~r0_01;
  void *~r0_02;
  void *~r0_03;
  void *extraout_RBX;
  math_big_Int **extraout_R11;
  crypto_elliptic_CurveParams **extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffb0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,in_RBX);
  math_big___Int__SetString(z,(string)in_stack_ffffffffffffffb0,0x8cce94,(math_big_Int *)0x4e,true);
  ok = SUB81(~r0,0);
  if (ok == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0);
  math_big___Int__SetString
            (z_00,(string)in_stack_ffffffffffffffb0,0x8ccee2,(math_big_Int *)0x4e,true);
  ok_1 = SUB81(~r0_00,0);
  if (ok_1 == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0_00);
  math_big___Int__SetString
            (z_01,(string)in_stack_ffffffffffffffb0,0x8cbbe4,(math_big_Int *)0x40,true);
  ok_2 = SUB81(~r0_01,0);
  if (ok_2 == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0_01);
  math_big___Int__SetString
            (z_02,(string)in_stack_ffffffffffffffb0,0x8cbc24,(math_big_Int *)0x40,true);
  ok_3 = SUB81(~r0_02,0);
  if (ok_3 == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0_02);
  math_big___Int__SetString
            (z_03,(string)in_stack_ffffffffffffffb0,0x8cbc64,(math_big_Int *)0x40,true);
  ok_4 = SUB81(~r0_03,0);
  if (ok_4 == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_0088b6e0,~r0_03);
  (extraout_RAX_04->Name).len = 5;
  (extraout_RAX_04->Name).str = (uint8 *)0x8aefcf;
  extraout_RAX_04->BitSize = 0x100;
  pcVar1 = extraout_RAX_04;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier5();
    *extraout_R11 = extraout_RAX;
    extraout_R11[1] = extraout_RAX_00;
    extraout_R11[2] = extraout_RAX_01;
    extraout_R11[3] = extraout_RAX_02;
    extraout_R11[4] = extraout_RAX_03;
    pcVar1 = extraout_RAX_05;
  }
  pcVar1->P = extraout_RAX;
  pcVar1->N = extraout_RAX_00;
  pcVar1->B = extraout_RAX_01;
  pcVar1->Gx = extraout_RAX_02;
  pcVar1->Gy = extraout_RAX_03;
  pcVar2 = crypto_elliptic_p256;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_06;
    extraout_R11_00[1] = (extraout_RCX->nistCurve).params;
    pcVar1 = extraout_RAX_06;
    pcVar2 = extraout_RCX;
  }
  (pcVar2->nistCurve).params = pcVar1;
  return;
}



// WARNING: Unknown calling convention

void crypto_elliptic_initP384(void)

{
  math_big_Int *z;
  math_big_Int *extraout_RAX;
  math_big_Int *b;
  math_big_Int *z_00;
  math_big_Int *extraout_RAX_00;
  math_big_Int *b_1;
  math_big_Int *z_01;
  math_big_Int *extraout_RAX_01;
  math_big_Int *b_2;
  math_big_Int *z_02;
  math_big_Int *extraout_RAX_02;
  math_big_Int *b_3;
  math_big_Int *z_03;
  math_big_Int *extraout_RAX_03;
  math_big_Int *b_4;
  crypto_elliptic_CurveParams *extraout_RAX_04;
  crypto_elliptic_CurveParams *extraout_RAX_05;
  crypto_elliptic_CurveParams *extraout_RAX_06;
  crypto_elliptic_CurveParams *pcVar1;
  crypto_elliptic_nistCurve__crypto_internal_nistec_P384Point_ *extraout_RCX;
  crypto_elliptic_nistCurve__crypto_internal_nistec_P384Point_ *pcVar2;
  bool ok;
  bool ok_1;
  bool ok_2;
  bool ok_3;
  bool ok_4;
  void *in_RBX;
  void *~r0;
  void *~r0_00;
  void *~r0_01;
  void *~r0_02;
  void *~r0_03;
  void *extraout_RBX;
  math_big_Int **extraout_R11;
  crypto_elliptic_CurveParams **extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffb0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,in_RBX);
  math_big___Int__SetString(z,(string)in_stack_ffffffffffffffb0,0x8cddb6,(math_big_Int *)0x74,true);
  ok = SUB81(~r0,0);
  if (ok == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0);
  math_big___Int__SetString
            (z_00,(string)in_stack_ffffffffffffffb0,0x8cde2a,(math_big_Int *)0x74,true);
  ok_1 = SUB81(~r0_00,0);
  if (ok_1 == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0_00);
  math_big___Int__SetString
            (z_01,(string)in_stack_ffffffffffffffb0,0x8cd7bd,(math_big_Int *)0x60,true);
  ok_2 = SUB81(~r0_01,0);
  if (ok_2 == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0_01);
  math_big___Int__SetString
            (z_02,(string)in_stack_ffffffffffffffb0,0x8cd81d,(math_big_Int *)0x60,true);
  ok_3 = SUB81(~r0_02,0);
  if (ok_3 == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0_02);
  math_big___Int__SetString
            (z_03,(string)in_stack_ffffffffffffffb0,0x8cd87d,(math_big_Int *)0x60,true);
  ok_4 = SUB81(~r0_03,0);
  if (ok_4 == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_0088b6e0,~r0_03);
  (extraout_RAX_04->Name).len = 5;
  (extraout_RAX_04->Name).str = (uint8 *)0x8aefd4;
  extraout_RAX_04->BitSize = 0x180;
  pcVar1 = extraout_RAX_04;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier5();
    *extraout_R11 = extraout_RAX;
    extraout_R11[1] = extraout_RAX_00;
    extraout_R11[2] = extraout_RAX_01;
    extraout_R11[3] = extraout_RAX_02;
    extraout_R11[4] = extraout_RAX_03;
    pcVar1 = extraout_RAX_05;
  }
  pcVar1->P = extraout_RAX;
  pcVar1->N = extraout_RAX_00;
  pcVar1->B = extraout_RAX_01;
  pcVar1->Gx = extraout_RAX_02;
  pcVar1->Gy = extraout_RAX_03;
  pcVar2 = crypto_elliptic_p384;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_06;
    extraout_R11_00[1] = extraout_RCX->params;
    pcVar1 = extraout_RAX_06;
    pcVar2 = extraout_RCX;
  }
  pcVar2->params = pcVar1;
  return;
}



// WARNING: Unknown calling convention

void crypto_elliptic_initP521(void)

{
  math_big_Int *z;
  math_big_Int *extraout_RAX;
  math_big_Int *b;
  math_big_Int *z_00;
  math_big_Int *extraout_RAX_00;
  math_big_Int *b_1;
  math_big_Int *z_01;
  math_big_Int *extraout_RAX_01;
  math_big_Int *b_2;
  math_big_Int *z_02;
  math_big_Int *extraout_RAX_02;
  math_big_Int *b_3;
  math_big_Int *z_03;
  math_big_Int *extraout_RAX_03;
  math_big_Int *b_4;
  crypto_elliptic_CurveParams *extraout_RAX_04;
  crypto_elliptic_CurveParams *extraout_RAX_05;
  crypto_elliptic_CurveParams *extraout_RAX_06;
  crypto_elliptic_CurveParams *pcVar1;
  crypto_elliptic_nistCurve__crypto_internal_nistec_P521Point_ *extraout_RCX;
  crypto_elliptic_nistCurve__crypto_internal_nistec_P521Point_ *pcVar2;
  bool ok;
  bool ok_1;
  bool ok_2;
  bool ok_3;
  bool ok_4;
  void *in_RBX;
  void *~r0;
  void *~r0_00;
  void *~r0_01;
  void *~r0_02;
  void *~r0_03;
  void *extraout_RBX;
  math_big_Int **extraout_R11;
  crypto_elliptic_CurveParams **extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffb0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,in_RBX);
  math_big___Int__SetString(z,(string)in_stack_ffffffffffffffb0,0x8ce0a6,(math_big_Int *)0x9d,true);
  ok = SUB81(~r0,0);
  if (ok == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0);
  math_big___Int__SetString
            (z_00,(string)in_stack_ffffffffffffffb0,0x8ce143,(math_big_Int *)0x9d,true);
  ok_1 = SUB81(~r0_00,0);
  if (ok_1 == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0_00);
  math_big___Int__SetString
            (z_01,(string)in_stack_ffffffffffffffb0,0x8cdf1a,(math_big_Int *)0x84,true);
  ok_2 = SUB81(~r0_01,0);
  if (ok_2 == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0_01);
  math_big___Int__SetString
            (z_02,(string)in_stack_ffffffffffffffb0,0x8cdf9e,(math_big_Int *)0x84,true);
  ok_3 = SUB81(~r0_02,0);
  if (ok_3 == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0_02);
  math_big___Int__SetString
            (z_03,(string)in_stack_ffffffffffffffb0,0x8ce022,(math_big_Int *)0x84,true);
  ok_4 = SUB81(~r0_03,0);
  if (ok_4 == false) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffb0);
  }
  runtime_newobject((internal_abi_Type *)&DAT_0088b6e0,~r0_03);
  (extraout_RAX_04->Name).len = 5;
  (extraout_RAX_04->Name).str = (uint8 *)0x8aefd9;
  extraout_RAX_04->BitSize = 0x209;
  pcVar1 = extraout_RAX_04;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier5();
    *extraout_R11 = extraout_RAX;
    extraout_R11[1] = extraout_RAX_00;
    extraout_R11[2] = extraout_RAX_01;
    extraout_R11[3] = extraout_RAX_02;
    extraout_R11[4] = extraout_RAX_03;
    pcVar1 = extraout_RAX_05;
  }
  pcVar1->P = extraout_RAX;
  pcVar1->N = extraout_RAX_00;
  pcVar1->B = extraout_RAX_01;
  pcVar1->Gx = extraout_RAX_02;
  pcVar1->Gy = extraout_RAX_03;
  pcVar2 = crypto_elliptic_p521;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_06;
    extraout_R11_00[1] = extraout_RCX->params;
    pcVar1 = extraout_RAX_06;
    pcVar2 = extraout_RCX;
  }
  pcVar2->params = pcVar1;
  return;
}



void crypto_elliptic_p256Curve_Inverse
               (crypto_elliptic_p256Curve c,math_big_Int *k,math_big_Int *~r0)

{
  __uint8 buf;
  __uint8 k_00;
  math_big_nat z;
  error ~r1;
  math_big_nat ~r0_00;
  int iVar1;
  math_big_Word *extraout_RAX;
  math_big_Word *extraout_RAX_00;
  int extraout_RAX_01;
  math_big_Int *extraout_RAX_02;
  math_big_Int *pmVar2;
  undefined *extraout_RAX_03;
  undefined8 extraout_RAX_04;
  undefined8 extraout_RAX_05;
  undefined8 uVar3;
  math_big_Int *in_RCX;
  undefined8 extraout_RCX;
  void *~r0_01;
  undefined8 extraout_RBX;
  int iVar4;
  int iVar5;
  math_big_Word *~r0_02;
  math_big_Int *~r0_03;
  int extraout_RDI;
  math_big_Word *__dest;
  runtime_itab *cap;
  undefined8 *extraout_R11;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_ffffffffffffff08;
  int in_stack_ffffffffffffff18;
  __uint8 in_stack_ffffffffffffff20;
  runtime_itab *in_stack_ffffffffffffff38;
  runtime_itab *in_stack_ffffffffffffff40;
  int in_stack_ffffffffffffff48;
  math_big_Word *local_78;
  undefined *local_70;
  math_big_Word *local_68;
  math_big_Int *local_58;
  math_big_Int *local_50;
  math_big_Int local_48;
  undefined local_28 [24];
  undefined8 uStack_10;
  
  while (&local_78 <= *(math_big_Word ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((in_RCX->abs).len == 0) {
    iVar1 = 0;
  }
  else if (in_RCX->neg == false) {
    iVar1 = 1;
  }
  else {
    iVar1 = -1;
  }
  local_50 = ~r0;
  if (iVar1 < 0) {
    local_28[0] = false;
    local_28._8_8_ = (math_big_Word *)0x0;
    unique0x10000486 = in_XMM15;
    if (in_RCX != (math_big_Int *)local_28) {
      iVar1 = (in_RCX->abs).len;
      ~r0_02 = (in_RCX->abs).array;
      if (iVar1 < 1) {
        __dest = (math_big_Word *)0x0;
        cap = (runtime_itab *)0x0;
        iVar4 = iVar1;
      }
      else {
        local_68 = ~r0_02;
        if (iVar1 == 1) {
          runtime_makeslice((internal_abi_Type *)&DAT_00808860,1,1,~r0_02);
          cap = (runtime_itab *)&DAT_00000001;
          iVar4 = 1;
          ~r0_02 = local_68;
          __dest = extraout_RAX;
          in_stack_ffffffffffffff48 = iVar1;
        }
        else {
          cap = (runtime_itab *)(iVar1 + 4);
          runtime_makeslice((internal_abi_Type *)&DAT_00808860,iVar1,(int)cap,~r0_02);
          iVar4 = iVar1;
          ~r0_02 = local_68;
          __dest = extraout_RAX_00;
          in_stack_ffffffffffffff38 = cap;
          in_stack_ffffffffffffff48 = iVar1;
        }
      }
      iVar5 = iVar4;
      if (iVar1 < iVar4) {
        iVar5 = iVar1;
      }
      if (__dest != ~r0_02) {
        local_78 = __dest;
        runtime_memmove(__dest,~r0_02,iVar5 << 3);
        __dest = local_78;
        in_stack_ffffffffffffff40 = cap;
      }
      uStack_10 = cap;
      local_28._16_8_ = iVar4;
      local_28[0] = in_RCX->neg;
      local_28._8_8_ = __dest;
    }
    in_RCX = (math_big_Int *)local_28;
    if (local_28._16_8_ == 0) {
      local_28[0] = false;
    }
    else {
      local_28[0] = local_28[0] ^ 1;
    }
  }
  pmVar2 = (math_big_Int *)(local_50->abs).array;
  local_58 = in_RCX;
  math_big___Int__Cmp(in_RCX,pmVar2,(int)pmVar2);
  pmVar2 = local_58;
  if (-1 < extraout_RAX_01) {
    local_48.neg = false;
    local_48.abs.array = (math_big_Word *)0x0;
    math_big___Int__Mod(&local_48,local_58,(math_big_Int *)(local_50->abs).array,~r0_03);
    pmVar2 = extraout_RAX_02;
  }
  buf.cap = in_stack_ffffffffffffff18;
  buf.array = (uint8 *)in_stack_ffffffffffffff08._type;
  buf.len = (int)in_stack_ffffffffffffff08.data;
  math_big___Int__FillBytes(pmVar2,buf,in_stack_ffffffffffffff20);
  k_00.cap = in_stack_ffffffffffffff18;
  k_00.array = (uint8 *)in_stack_ffffffffffffff08._type;
  k_00.len = (int)in_stack_ffffffffffffff08.data;
  ~r1.data = in_stack_ffffffffffffff40;
  ~r1.tab = in_stack_ffffffffffffff38;
  crypto_internal_nistec_P256OrdInverse(k_00,in_stack_ffffffffffffff20,~r1);
  if (extraout_RDI != 0) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffff08);
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0_01);
  z.cap = in_stack_ffffffffffffff18;
  z.array = &(in_stack_ffffffffffffff08._type)->Size_;
  z.len = (int)in_stack_ffffffffffffff08.data;
  ~r0_00.len = (int)in_stack_ffffffffffffff40;
  ~r0_00.array = (math_big_Word *)in_stack_ffffffffffffff38;
  ~r0_00.cap = in_stack_ffffffffffffff48;
  local_70 = extraout_RAX_03;
  math_big_nat_setBytes(z,in_stack_ffffffffffffff20,~r0_00);
  *(undefined8 *)(local_70 + 0x10) = extraout_RBX;
  *(undefined8 *)(local_70 + 0x18) = extraout_RCX;
  uVar3 = extraout_RAX_04;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_05;
    extraout_R11[1] = *(undefined8 *)(local_70 + 8);
    uVar3 = extraout_RAX_05;
  }
  *(undefined8 *)(local_70 + 8) = uVar3;
  *local_70 = 0;
  return;
}



void crypto_elliptic___CurveParams__Params
               (crypto_elliptic_CurveParams *curve,crypto_elliptic_CurveParams *~r0)

{
  return;
}



void crypto_elliptic___CurveParams__polynomial
               (crypto_elliptic_CurveParams *curve,math_big_Int *x,math_big_Int *~r0)

{
  math_big_nat ~r0_00;
  math_big_Int *z;
  math_big_Int *z_00;
  math_big_Int *x3;
  math_big_Int *~r0_01;
  math_big_Int *~r0_02;
  math_big_Int *~r0_03;
  math_big_Int *~r0_04;
  math_big_Int *~r0_05;
  math_big_Int *~r0_06;
  int unaff_R14;
  crypto_elliptic_CurveParams *pcStack0000000000000008;
  math_big_Int *pmStack0000000000000010;
  math_big_nat in_stack_ffffffffffffff98;
  math_big_nat in_stack_ffffffffffffffb0;
  undefined8 in_stack_ffffffffffffffc8;
  math_big_Int *z_01;
  undefined7 in_stack_ffffffffffffffd9;
  
  pcStack0000000000000008 = curve;
  pmStack0000000000000010 = x;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,pmStack0000000000000010);
  math_big___Int__Mul(z,pmStack0000000000000010,pmStack0000000000000010,~r0_01);
  z_01 = z_00;
  math_big___Int__Mul(z_00,z_00,pmStack0000000000000010,~r0_02);
  ~r0_00.len = (int)z_01;
  ~r0_00.array = (math_big_Word *)in_stack_ffffffffffffffc8;
  ~r0_00.cap._0_1_ = 0;
  ~r0_00.cap._1_7_ = in_stack_ffffffffffffffd9;
  math_big_nat_shl(in_stack_ffffffffffffff98,in_stack_ffffffffffffffb0,0,~r0_00);
  math_big___Int__Add((math_big_Int *)&stack0xffffffffffffffd8,
                      (math_big_Int *)&stack0xffffffffffffffd8,pmStack0000000000000010,~r0_03);
  math_big___Int__Sub(z_01,z_01,(math_big_Int *)&stack0xffffffffffffffd8,~r0_04);
  math_big___Int__Add(z_01,z_01,pcStack0000000000000008->B,~r0_05);
  math_big___Int__Mod(z_01,z_01,pcStack0000000000000008->P,~r0_06);
  return;
}



void crypto_elliptic___CurveParams__IsOnCurve
               (crypto_elliptic_CurveParams *curve,math_big_Int *x,math_big_Int *y,bool ~r0)

{
  int extraout_RAX;
  int extraout_RAX_00;
  int extraout_RAX_01;
  math_big_Int *z;
  math_big_Int *y2;
  char extraout_CL;
  bool ok;
  math_big_Int *x_00;
  math_big_Int *~r0_00;
  int r;
  int iVar1;
  undefined8 extraout_RBX;
  undefined extraout_DIL;
  undefined extraout_DIL_00;
  undefined7 extraout_var;
  undefined7 extraout_var_00;
  int unaff_R14;
  bool bVar2;
  crypto_elliptic_CurveParams *pcStack0000000000000008;
  math_big_Int *pmStack0000000000000010;
  math_big_Int *pmStack0000000000000018;
  crypto_elliptic_Curve in_stack_ffffffffffffffb8;
  math_big_Int local_28;
  
  pcStack0000000000000008 = curve;
  pmStack0000000000000018 = y;
  pmStack0000000000000010 = x;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  crypto_elliptic_matchesSpecificCurve
            (pcStack0000000000000008,in_stack_ffffffffffffffb8,SUB81(pmStack0000000000000010,0));
  if (extraout_CL == '\0') {
    if ((pmStack0000000000000010->abs).len == 0) {
      iVar1 = 0;
    }
    else if (pmStack0000000000000010->neg == false) {
      iVar1 = 1;
    }
    else {
      iVar1 = -1;
    }
    if (iVar1 < 0) {
      bVar2 = true;
    }
    else {
      math_big___Int__Cmp(pmStack0000000000000010,pcStack0000000000000008->P,
                          (int)pcStack0000000000000008);
      bVar2 = -1 < extraout_RAX_00;
    }
    if (!bVar2) {
      if ((pmStack0000000000000018->abs).len == 0) {
        iVar1 = 0;
      }
      else if (pmStack0000000000000018->neg == false) {
        iVar1 = 1;
      }
      else {
        iVar1 = -1;
      }
      if (-1 < iVar1) {
        math_big___Int__Cmp(pmStack0000000000000018,pcStack0000000000000008->P,
                            (int)pmStack0000000000000018);
        if (extraout_RAX_01 < 0) {
          local_28.neg = false;
          local_28.abs.array = (math_big_Word *)0x0;
          math_big___Int__Mul(&local_28,pmStack0000000000000018,pmStack0000000000000018,
                              (math_big_Int *)CONCAT71(extraout_var,extraout_DIL));
          math_big___Int__Mod(z,z,pcStack0000000000000008->P,
                              (math_big_Int *)CONCAT71(extraout_var_00,extraout_DIL_00));
          crypto_elliptic___CurveParams__polynomial
                    (pcStack0000000000000008,pmStack0000000000000010,~r0_00);
          math_big___Int__Cmp(x_00,z,r);
          return;
        }
      }
    }
    return;
  }
  (**(code **)(extraout_RAX + 0x28))(extraout_RBX,pmStack0000000000000010,pmStack0000000000000018);
  return;
}



void crypto_elliptic_zForAffine(math_big_Int *x,math_big_Int *y,math_big_Int *~r0)

{
  math_big_Int *z_00;
  math_big_Int *z;
  math_big_Int *~r0_00;
  int unaff_R14;
  math_big_Int *pmStack0000000000000008;
  math_big_Int *pmStack0000000000000010;
  
  pmStack0000000000000008 = x;
  pmStack0000000000000010 = y;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,pmStack0000000000000010);
  if ((pmStack0000000000000008->abs).len == 0) {
    ~r0_00 = (math_big_Int *)0x0;
  }
  else if (pmStack0000000000000008->neg == false) {
    ~r0_00 = (math_big_Int *)&DAT_00000001;
  }
  else {
    ~r0_00 = (math_big_Int *)0xffffffffffffffff;
  }
  if (~r0_00 == (math_big_Int *)0x0) {
    if ((pmStack0000000000000010->abs).len == 0) {
      ~r0_00 = (math_big_Int *)0x0;
    }
    else if (pmStack0000000000000010->neg == false) {
      ~r0_00 = (math_big_Int *)&DAT_00000001;
    }
    else {
      ~r0_00 = (math_big_Int *)0xffffffffffffffff;
    }
    if (~r0_00 == (math_big_Int *)0x0) {
      return;
    }
  }
  math_big___Int__SetInt64(z_00,1,~r0_00);
  return;
}



void crypto_elliptic___CurveParams__affineFromJacobian
               (crypto_elliptic_CurveParams *curve,math_big_Int *x,math_big_Int *y,math_big_Int *z,
               math_big_Int *xOut,math_big_Int *yOut)

{
  math_big_Int *x_00;
  math_big_Int *zinv;
  math_big_Int *y_00;
  math_big_Int *zinvsq;
  math_big_Int *z_00;
  math_big_Int *z_01;
  math_big_Int *z_02;
  math_big_Int *z_03;
  int iVar1;
  void *~r0;
  void *~r0_00;
  void *~r0_01;
  math_big_Int *~r0_02;
  math_big_Int *~r0_03;
  math_big_Int *~r0_04;
  math_big_Int *~r0_05;
  math_big_Int *~r0_06;
  math_big_Int *~r0_07;
  int unaff_R14;
  math_big_Int local_48;
  math_big_Int local_28;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((z->abs).len == 0) {
    iVar1 = 0;
  }
  else if (z->neg == false) {
    iVar1 = 1;
  }
  else {
    iVar1 = -1;
  }
  if (iVar1 == 0) {
    runtime_newobject((internal_abi_Type *)&DAT_00855ba0,x);
    runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0);
    return;
  }
  local_28.neg = false;
  local_28.abs.array = (math_big_Word *)0x0;
  math_big___Int__ModInverse(&local_28,z,curve->P,z);
  local_48.neg = false;
  local_48.abs.array = (math_big_Word *)0x0;
  math_big___Int__Mul(&local_48,x_00,x_00,~r0_02);
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,~r0_00);
  math_big___Int__Mul(z_00,x,y_00,~r0_03);
  math_big___Int__Mod(z_01,z_01,curve->P,~r0_04);
  math_big___Int__Mul(y_00,y_00,x_00,~r0_05);
