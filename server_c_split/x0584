  uVar3 = 0;
  iVar4 = 0;
LAB_006c8c6f:
  for (iVar7 = 0; iVar7 < 2; iVar7 = iVar7 + 1) {
    ~r0_02.len = iVar4;
    ~r0_02.str = in_stack_ffffffffffffff58;
    os_Getenv(in_stack_ffffffffffffff48,~r0_02);
    uVar6 = extraout_RAX_01;
    puVar8 = extraout_RBX_01;
    if (extraout_RBX_01 != (uint8 *)0x0) goto LAB_006c8d11;
  }
  uVar6 = 0;
  puVar8 = (uint8 *)0x0;
LAB_006c8d11:
  ~r0_03.len = iVar4;
  ~r0_03.str = puVar8;
  os_Getenv(in_stack_ffffffffffffff48,~r0_03);
  runtime_newobject((internal_abi_Type *)&DAT_00878620,~r0_04);
  extraout_RAX_02[1] = iVar5;
  puVar2 = extraout_RAX_02;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = uVar1;
    puVar2 = extraout_RAX_03;
  }
  *puVar2 = uVar1;
  puVar2[3] = iVar4;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = uVar3;
    puVar2 = extraout_RAX_04;
  }
  puVar2[2] = uVar3;
  puVar2[5] = puVar8;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_01 = uVar6;
    puVar2 = extraout_RAX_05;
  }
  puVar2[4] = uVar6;
  *(bool *)(puVar2 + 6) = ~r0_04 != (void *)0x0;
  return;
}



void vendor_golang_org_x_net_http_httpproxy___config__proxyForURL
               (vendor_golang_org_x_net_http_httpproxy_config *cfg,net_url_URL *reqURL,
               net_url_URL *~r0,error ~r1)

{
  int iVar1;
  sdword *psVar2;
  bool ~r0_00;
  char extraout_AL;
  char **extraout_RAX;
  net_url_URL *proxy;
  net_url_URL *pnVar3;
  int unaff_R14;
  string in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar1 = (reqURL->Scheme).len;
  psVar2 = (sdword *)(reqURL->Scheme).str;
  if (((iVar1 == 5) && (*psVar2 == 0x70747468)) && (*(char *)(psVar2 + 1) == 's')) {
    pnVar3 = cfg->httpsProxy;
  }
  else if ((iVar1 == 4) && (*psVar2 == 0x70747468)) {
    pnVar3 = cfg->httpProxy;
    if ((pnVar3 != (net_url_URL *)0x0) && ((cfg->Config).CGI != false)) {
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,reqURL);
      extraout_RAX[1] = (char *)0x52;
      *extraout_RAX =
           "refusing to use HTTP_PROXY value in CGI environment; see golang.org/s/cgihttpproxymethod configs in service config will be ignored due to presence of config selectorreflect: embedded type with methods not implemented if there is more than one fieldjson: invalid use of ,string struct tag, trying to unmarshal unquoted value into %vx509: issuer has name constraints but leaf contains unknown or unconstrained name:  (possibly because of %q while trying to verify candidate authority certificate %q)grpc: received message larger than max length allowed on current machine (%d vs. %d)x509: signature algorithm specifies an %s public key, but have public key of type %Treflect.Value.Interface: cannot return value obtained from unexported field or methodattempt to delete child with id %d from a parent (id=%d) that doesn\'t currently existSubchannel health check is unimplemented at server side, thus health check is disabledreflect: New of type that may not be allocated in heap (possibly undefined cgo C type)x509: a root or intermediate certificate is not authorized for an extended key usage: Unsupported codec %q. Defaulting to %q for now. This will start to fail in future releases.attempt to add child of type %T with id %d to a parent (id=%d) that doesn\'t currently existgrpc-status-details-bin mismatch: grpc-status=%v, grpc-message=%q, grpc-status-details-bin=%+vsize mismatch (see https://github.com/golang/protobuf/issues/1609): calculated=%d, measured=%db3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aefaa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab73617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5fgrpc: the credentials require transport level security (use grpc.WithTransportCredentials() to set)Balancer retrieved for name %q. grpc-go will be switching to case sensitive balancer registries soonnum values of :authority: %v, num values of host: %v, both must only have 1 value as per HTTP/2 sp..." /* TRUNCATED STRING LITERAL */
      ;
      return;
    }
  }
  else {
    pnVar3 = (net_url_URL *)0x0;
  }
  if (pnVar3 == (net_url_URL *)0x0) {
    return;
  }
  vendor_golang_org_x_net_http_httpproxy_canonicalAddr(reqURL,in_stack_ffffffffffffffd8);
  vendor_golang_org_x_net_http_httpproxy___config__useProxy(cfg,in_stack_ffffffffffffffd8,~r0_00);
  if (extraout_AL != '\0') {
    return;
  }
  return;
}



void vendor_golang_org_x_net_http_httpproxy_parseProxy(string proxy,net_url_URL *~r0,error ~r1)

{
  sdword *psVar1;
  sdword *psVar2;
  __interface___ a;
  string ~r0_00;
  error ~r0_01;
  sdword **extraout_RAX;
  net_url_URL *proxyURL;
  net_url_URL *~r0_02;
  net_url_URL *proxyURL_1;
  int in_RBX;
  runtime_itab *extraout_RBX;
  int extraout_RBX_00;
  int unaff_R14;
  bool bVar3;
  string in_stack_ffffffffffffff98;
  string in_stack_ffffffffffffffa8;
  uint8 *in_stack_ffffffffffffffb8;
  runtime_itab *prVar4;
  sdword **ppsVar5;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RBX == 0) {
    return;
  }
  net_url_Parse(in_stack_ffffffffffffff98,~r0,(error)in_stack_ffffffffffffffa8);
  prVar4 = extraout_RBX;
  ppsVar5 = extraout_RAX;
  if (extraout_RBX == (runtime_itab *)0x0) {
    psVar1 = extraout_RAX[1];
    psVar2 = *extraout_RAX;
    if ((psVar1 == (sdword *)0x4) && (*psVar2 == 0x70747468)) {
      bVar3 = true;
      goto LAB_006c8fce;
    }
    if (((psVar1 == (sdword *)0x5) && (*psVar2 == 0x70747468)) && (*(char *)(psVar2 + 1) == 's')) {
      bVar3 = true;
      goto LAB_006c8fce;
    }
    if (((psVar1 == (sdword *)&DAT_00000006) && (*psVar2 == 0x6b636f73)) &&
       (*(short *)(psVar2 + 1) == 0x3573)) {
      bVar3 = true;
      goto LAB_006c8fce;
    }
  }
  ~r0_00.len = (int)extraout_RBX;
  ~r0_00.str = in_stack_ffffffffffffffb8;
  runtime_concatstring2
            ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8,~r0_00);
  net_url_Parse(in_stack_ffffffffffffff98,~r0_02,(error)in_stack_ffffffffffffffa8);
  if (extraout_RBX_00 == 0) {
    return;
  }
  bVar3 = prVar4 == (runtime_itab *)0x0;
LAB_006c8fce:
  if (!bVar3) {
    runtime_convTstring(in_stack_ffffffffffffff98,~r0);
    a.cap = (int)in_stack_ffffffffffffffb8;
    a.array = (interface___ *)in_stack_ffffffffffffffa8.str;
    a.len = in_stack_ffffffffffffffa8.len;
    ~r0_01.data = ppsVar5;
    ~r0_01.tab = prVar4;
    fmt_Errorf(in_stack_ffffffffffffff98,a,~r0_01);
    return;
  }
  return;
}



void vendor_golang_org_x_net_http_httpproxy___config__useProxy
               (vendor_golang_org_x_net_http_httpproxy_config *cfg,string addr,bool ~r0)

{
  int iVar1;
  string hostport;
  string s;
  string s_00;
  string s_01;
  net_IP ip;
  string host;
  uint8 ~r0_00 [16];
  string ~r0_01;
  string ~r0_02;
  char extraout_AL;
  bool valid;
  char extraout_AL_00;
  char cVar2;
  int *extraout_RAX;
  undefined4 *extraout_RAX_00;
  uint8 (*_addr) [16];
  undefined8 uVar3;
  undefined8 extraout_RAX_01;
  int in_RCX;
  undefined8 extraout_RCX;
  int iVar4;
  void *~r0_03;
  undefined8 extraout_RBX;
  int extraout_RSI;
  undefined8 extraout_RDI;
  int unaff_R14;
  undefined4 in_stack_ffffffffffffff48;
  undefined4 in_stack_ffffffffffffff4c;
  undefined4 in_stack_ffffffffffffff50;
  undefined4 in_stack_ffffffffffffff54;
  uint8 *in_stack_ffffffffffffff58;
  int in_stack_ffffffffffffff60;
  string in_stack_ffffffffffffff68;
  error in_stack_ffffffffffffff78;
  undefined4 *local_38;
  undefined8 local_30;
  int *local_28;
  vendor_golang_org_x_net_http_httpproxy_matcher *local_20;
  undefined8 local_18;
  undefined4 *local_10;
  
  while (&local_38 <= *(undefined4 ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RCX == 0) {
    return;
  }
  hostport.str._4_4_ = in_stack_ffffffffffffff4c;
  hostport.str._0_4_ = in_stack_ffffffffffffff48;
  hostport.len._0_4_ = in_stack_ffffffffffffff50;
  hostport.len._4_4_ = in_stack_ffffffffffffff54;
  host.len = in_stack_ffffffffffffff60;
  host.str = in_stack_ffffffffffffff58;
  net_SplitHostPort(hostport,host,in_stack_ffffffffffffff68,in_stack_ffffffffffffff78);
  if (extraout_RSI != 0) {
    return;
  }
  if (((~r0_03 == (void *)0x9) && (*extraout_RAX == 0x736f686c61636f6c)) &&
     (*(char *)(extraout_RAX + 1) == 't')) {
    return;
  }
  local_30 = extraout_RCX;
  local_28 = extraout_RAX;
  runtime_newobject((internal_abi_Type *)&DAT_008130c0,~r0_03);
  s.str._4_4_ = in_stack_ffffffffffffff4c;
  s.str._0_4_ = in_stack_ffffffffffffff48;
  s.len._0_4_ = in_stack_ffffffffffffff50;
  s.len._4_4_ = in_stack_ffffffffffffff54;
  ~r0_00[8] = (char)in_stack_ffffffffffffff60;
  ~r0_00[9] = (char)((uint)in_stack_ffffffffffffff60 >> 8);
  ~r0_00[10] = (char)((uint)in_stack_ffffffffffffff60 >> 0x10);
  ~r0_00[11] = (char)((uint)in_stack_ffffffffffffff60 >> 0x18);
  ~r0_00[12] = (char)((uint)in_stack_ffffffffffffff60 >> 0x20);
  ~r0_00[13] = (char)((uint)in_stack_ffffffffffffff60 >> 0x28);
  ~r0_00[14] = (char)((uint)in_stack_ffffffffffffff60 >> 0x30);
  ~r0_00[15] = (char)((uint)in_stack_ffffffffffffff60 >> 0x38);
  ~r0_00._0_8_ = in_stack_ffffffffffffff58;
  local_10 = extraout_RAX_00;
  net_parseIP(s,~r0_00,SUB81(local_28,0));
  *local_10 = in_stack_ffffffffffffff48;
  local_10[1] = in_stack_ffffffffffffff4c;
  local_10[2] = in_stack_ffffffffffffff50;
  local_10[3] = in_stack_ffffffffffffff54;
  if (extraout_AL == '\0') {
    local_10 = (undefined4 *)0x0;
    uVar3 = 0;
  }
  else {
    uVar3 = 0x10;
  }
  local_38 = local_10;
  if (local_10 != (undefined4 *)0x0) {
    ip.array._4_4_ = in_stack_ffffffffffffff4c;
    ip.array._0_4_ = in_stack_ffffffffffffff48;
    ip.len._0_4_ = in_stack_ffffffffffffff50;
    ip.len._4_4_ = in_stack_ffffffffffffff54;
    ip.cap = (int)in_stack_ffffffffffffff58;
    net_IP_IsLoopback(ip,SUB81(local_10,0));
    if (extraout_AL_00 != '\0') {
      return;
    }
  }
  s_00.str._4_4_ = in_stack_ffffffffffffff4c;
  s_00.str._0_4_ = in_stack_ffffffffffffff48;
  s_00.len._0_4_ = in_stack_ffffffffffffff50;
  s_00.len._4_4_ = in_stack_ffffffffffffff54;
  ~r0_01.len = in_stack_ffffffffffffff60;
  ~r0_01.str = in_stack_ffffffffffffff58;
  strings_TrimSpace(s_00,~r0_01);
  s_01.str._4_4_ = in_stack_ffffffffffffff4c;
  s_01.str._0_4_ = in_stack_ffffffffffffff48;
  s_01.len._0_4_ = in_stack_ffffffffffffff50;
  s_01.len._4_4_ = in_stack_ffffffffffffff54;
  ~r0_02.len = in_stack_ffffffffffffff60;
  ~r0_02.str = in_stack_ffffffffffffff58;
  strings_ToLower(s_01,~r0_02);
  local_18 = extraout_RAX_01;
  if (local_38 != (undefined4 *)0x0) {
    local_20 = (cfg->ipMatchers).array;
    iVar1 = (cfg->ipMatchers).len;
    for (iVar4 = 0; iVar4 < iVar1; iVar4 = iVar4 + 1) {
      cVar2 = (*(code *)local_20->tab->fun[0])
                        (local_20->data,local_18,extraout_RBX,local_30,extraout_RDI,local_38,uVar3,
                         uVar3);
      if (cVar2 != '\0') {
        return;
      }
      local_20 = local_20 + 1;
    }
  }
  local_20 = (cfg->domainMatchers).array;
  iVar1 = (cfg->domainMatchers).len;
  iVar4 = 0;
  while( true ) {
    if (iVar1 <= iVar4) {
      return;
    }
    cVar2 = (*(code *)local_20->tab->fun[0])
                      (local_20->data,local_18,extraout_RBX,local_30,extraout_RDI,local_38,uVar3,
                       uVar3);
    if (cVar2 != '\0') break;
    local_20 = local_20 + 1;
    iVar4 = iVar4 + 1;
  }
  return;
}



int vendor_golang_org_x_net_http_httpproxy___config__init(EVP_PKEY_CTX *ctx)

{
  byte bVar1;
  string proxy;
  string proxy_00;
  string s;
  string s_00;
  string s_01;
  string s_02;
  string hostport;
  string s_03;
  string a0;
  string v;
  runtime_slice ~r0;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  error ~r1;
  error ~r1_00;
  string sep;
  string ~r0_02;
  string ~r0_03;
  string host;
  uint8 ~r0_04 [16];
  string a1;
  string ~r0_05;
  net_IP ~r0_06;
  string port;
  string ~r0_07;
  error ~r1_01;
  __string ~r0_08;
  error ~r2;
  error err;
  char extraout_AL;
  bool valid;
  undefined8 extraout_RAX;
  net_url_URL *parsed;
  undefined8 extraout_RAX_00;
  undefined8 extraout_RAX_01;
  net_url_URL *parsed_1;
  undefined8 extraout_RAX_02;
  int extraout_RAX_03;
  net_IPNet *~r1_02;
  void *extraout_RAX_04;
  void *extraout_RAX_05;
  void *extraout_RAX_06;
  net_IPNet *extraout_RAX_07;
  undefined4 *extraout_RAX_08;
  uint8 (*_addr) [16];
  undefined8 uVar2;
  net_IPNet *extraout_RAX_09;
  net_IPNet *pnVar3;
  net_IPNet *extraout_RAX_10;
  undefined8 extraout_RAX_11;
  void *extraout_RAX_12;
  void *extraout_RAX_13;
  void *pvVar4;
  undefined8 extraout_RAX_14;
  undefined8 extraout_RAX_15;
  void *extraout_RAX_16;
  void *extraout_RAX_17;
  undefined8 extraout_RAX_18;
  undefined8 *extraout_RAX_19;
  undefined8 *extraout_RAX_20;
  undefined8 *extraout_RAX_21;
  undefined8 *extraout_RAX_22;
  undefined8 *puVar5;
  int iVar6;
  undefined8 extraout_RCX;
  int iVar7;
  int extraout_RCX_00;
  undefined8 extraout_RCX_01;
  int extraout_RCX_02;
  undefined8 extraout_RCX_03;
  EVP_PKEY_CTX *pEVar8;
  undefined8 extraout_RCX_04;
  EVP_PKEY_CTX *extraout_RCX_05;
  int extraout_RBX;
  int extraout_RBX_00;
  int extraout_RBX_01;
  undefined *extraout_RBX_02;
  uint uVar9;
  uint extraout_RBX_03;
  uint extraout_RBX_04;
  undefined *extraout_RBX_05;
  undefined *~r0_09;
  undefined *extraout_RBX_06;
  undefined *extraout_RBX_07;
  uint extraout_RBX_08;
  uint extraout_RBX_09;
  uint extraout_RBX_10;
  uint extraout_RBX_11;
  EVP_PKEY_CTX *extraout_RBX_12;
  int extraout_RSI;
  int extraout_RSI_00;
  void *extraout_RSI_01;
  void *extraout_RSI_02;
  undefined8 extraout_RDI;
  net_IPNet *pnet;
  undefined8 extraout_RDI_00;
  void *~r0_10;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  void **extraout_R11_01;
  undefined8 *extraout_R11_02;
  void **extraout_R11_03;
  undefined8 *extraout_R11_04;
  void **extraout_R11_05;
  undefined8 *extraout_R11_06;
  undefined8 *extraout_R11_07;
  undefined8 *extraout_R11_08;
  int unaff_R14;
  bool bVar10;
  undefined in_XMM15 [16];
  vendor_golang_org_x_net_http_httpproxy_allMatch _autotmp_44;
  undefined4 in_stack_fffffffffffffee0;
  undefined4 in_stack_fffffffffffffee4;
  undefined4 in_stack_fffffffffffffee8;
  undefined4 in_stack_fffffffffffffeec;
  runtime_itab *in_stack_fffffffffffffef0;
  void *in_stack_fffffffffffffef8;
  runtime_itab *in_stack_ffffffffffffff00;
  runtime_itab *in_stack_ffffffffffffff08;
  runtime_itab *in_stack_ffffffffffffff10;
  void *in_stack_ffffffffffffff18;
  undefined auStack_a0 [8];
  net_IPNet *local_98;
  undefined8 local_90;
  undefined8 local_88;
  net_IPNet *local_80;
  net_IPNet *local_78;
  undefined8 local_70;
  int local_68;
  undefined4 *local_60;
  net_IPNet *local_58;
  undefined *puStack_50;
  undefined8 local_48;
  undefined local_40 [16];
  undefined4 *local_30;
  undefined8 uStack_28;
  undefined8 local_20;
  
  while (auStack_a0 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  proxy.str._4_4_ = in_stack_fffffffffffffee4;
  proxy.str._0_4_ = in_stack_fffffffffffffee0;
  proxy.len._0_4_ = in_stack_fffffffffffffee8;
  proxy.len._4_4_ = in_stack_fffffffffffffeec;
  ~r1.data = in_stack_fffffffffffffef8;
  ~r1.tab = in_stack_fffffffffffffef0;
  vendor_golang_org_x_net_http_httpproxy_parseProxy(proxy,*(net_url_URL **)ctx,~r1);
  if (extraout_RBX == 0) {
    uVar2 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_00;
      extraout_R11[1] = *(undefined8 *)(ctx + 0x40);
      uVar2 = extraout_RAX_00;
    }
    *(undefined8 *)(ctx + 0x40) = uVar2;
  }
  proxy_00.str._4_4_ = in_stack_fffffffffffffee4;
  proxy_00.str._0_4_ = in_stack_fffffffffffffee0;
  proxy_00.len._0_4_ = in_stack_fffffffffffffee8;
  proxy_00.len._4_4_ = in_stack_fffffffffffffeec;
  ~r1_00.data = in_stack_fffffffffffffef8;
  ~r1_00.tab = in_stack_fffffffffffffef0;
  vendor_golang_org_x_net_http_httpproxy_parseProxy(proxy_00,*(net_url_URL **)(ctx + 0x10),~r1_00);
  if (extraout_RBX_00 == 0) {
    uVar2 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RAX_02;
      extraout_R11_00[1] = *(undefined8 *)(ctx + 0x38);
      uVar2 = extraout_RAX_02;
    }
    *(undefined8 *)(ctx + 0x38) = uVar2;
  }
  s.str._4_4_ = in_stack_fffffffffffffee4;
  s.str._0_4_ = in_stack_fffffffffffffee0;
  s.len._0_4_ = in_stack_fffffffffffffee8;
  s.len._4_4_ = in_stack_fffffffffffffeec;
  sep.len = (int)in_stack_fffffffffffffef8;
  sep.str = (uint8 *)in_stack_fffffffffffffef0;
  ~r0_08.len = (int)in_stack_ffffffffffffff08;
  ~r0_08.array = (string *)in_stack_ffffffffffffff00;
  ~r0_08.cap = (int)in_stack_ffffffffffffff10;
  strings_genSplit(s,sep,*(int *)(ctx + 0x20),*(int *)(ctx + 0x28),~r0_08);
  iVar6 = 0;
  local_68 = extraout_RAX_03;
  do {
    if (extraout_RBX_01 <= iVar6) {
      return local_68;
    }
    s_00.str._4_4_ = in_stack_fffffffffffffee4;
    s_00.str._0_4_ = in_stack_fffffffffffffee0;
    s_00.len._0_4_ = in_stack_fffffffffffffee8;
    s_00.len._4_4_ = in_stack_fffffffffffffeec;
    ~r0_02.len = (int)in_stack_fffffffffffffef8;
    ~r0_02.str = (uint8 *)in_stack_fffffffffffffef0;
    strings_TrimSpace(s_00,~r0_02);
    s_01.str._4_4_ = in_stack_fffffffffffffee4;
    s_01.str._0_4_ = in_stack_fffffffffffffee0;
    s_01.len._0_4_ = in_stack_fffffffffffffee8;
    s_01.len._4_4_ = in_stack_fffffffffffffeec;
    ~r0_03.len = (int)in_stack_fffffffffffffef8;
    ~r0_03.str = (uint8 *)in_stack_fffffffffffffef0;
    strings_ToLower(s_01,~r0_03);
    if (extraout_RBX_02 != (undefined *)0x0) {
      if ((extraout_RBX_02 == &DAT_00000001) && (*(char *)&(~r1_02->IP).array == '*')) {
        runtime_newobject((internal_abi_Type *)&DAT_0081c000,&DAT_00000001);
        *extraout_RAX_19 =
             go_itab_vendor_golang_org_x_net_http_httpproxy_allMatch_vendor_golang_org_x_net_http_httpproxy_matcher
        ;
        extraout_RAX_19[1] = &runtime_zerobase;
        *(undefined8 *)(ctx + 0x50) = 1;
        *(undefined8 *)(ctx + 0x58) = 1;
        puVar5 = extraout_RAX_19;
        pEVar8 = ctx;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_07 = extraout_RAX_20;
          extraout_R11_07[1] = *(undefined8 *)(extraout_RBX_12 + 0x48);
          puVar5 = extraout_RAX_20;
          pEVar8 = extraout_RBX_12;
        }
        *(undefined8 **)(pEVar8 + 0x48) = puVar5;
        runtime_newobject((internal_abi_Type *)&DAT_0081c000,pEVar8);
        *extraout_RAX_21 =
             go_itab_vendor_golang_org_x_net_http_httpproxy_allMatch_vendor_golang_org_x_net_http_httpproxy_matcher
        ;
        extraout_RAX_21[1] = &runtime_zerobase;
        *(undefined8 *)(ctx + 0x68) = 1;
        *(undefined8 *)(ctx + 0x70) = 1;
        puVar5 = extraout_RAX_21;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_08 = extraout_RAX_22;
          extraout_R11_08[1] = *(undefined8 *)(extraout_RCX_05 + 0x60);
          puVar5 = extraout_RAX_22;
          ctx = extraout_RCX_05;
        }
        *(undefined8 **)(ctx + 0x60) = puVar5;
        return (int)puVar5;
      }
      s_02.str._4_4_ = in_stack_fffffffffffffee4;
      s_02.str._0_4_ = in_stack_fffffffffffffee0;
      s_02.len._0_4_ = in_stack_fffffffffffffee8;
      s_02.len._4_4_ = in_stack_fffffffffffffeec;
      ~r0_06.len = (int)in_stack_fffffffffffffef8;
      ~r0_06.array = (uint8 *)in_stack_fffffffffffffef0;
      ~r0_06.cap = (int)in_stack_ffffffffffffff00;
      ~r2.data = in_stack_ffffffffffffff10;
      ~r2.tab = in_stack_ffffffffffffff08;
      local_78 = ~r1_02;
      net_ParseCIDR(s_02,~r0_06,~r1_02,~r2);
      if (extraout_RSI == 0) {
        uVar9 = *(int *)(ctx + 0x50) + 1;
        pvVar4 = *(void **)(ctx + 0x48);
        pEVar8 = ctx;
        local_88 = extraout_RDI;
        if (*(uint *)(ctx + 0x58) < uVar9) {
          ~r0.array._4_4_ = in_stack_fffffffffffffee4;
          ~r0.array._0_4_ = in_stack_fffffffffffffee0;
          ~r0.len._0_4_ = in_stack_fffffffffffffee8;
          ~r0.len._4_4_ = in_stack_fffffffffffffeec;
          ~r0.cap = (int)in_stack_fffffffffffffef0;
          runtime_growslice(pvVar4,uVar9,*(uint *)(ctx + 0x58),1,(internal_abi_Type *)&DAT_00839dc0,
                            ~r0);
          *(undefined8 *)(ctx + 0x58) = extraout_RCX;
          pvVar4 = extraout_RAX_04;
          uVar9 = extraout_RBX_03;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_01 = extraout_RAX_05;
            extraout_R11_01[1] = *(void **)(pEVar8 + 0x48);
            pvVar4 = extraout_RAX_05;
            uVar9 = extraout_RBX_04;
          }
          *(void **)(pEVar8 + 0x48) = pvVar4;
        }
        *(uint *)(pEVar8 + 0x50) = uVar9;
        iVar7 = (uVar9 - 1) * 0x10;
        *(undefined1 **)((int)pvVar4 + iVar7) =
             go_itab_vendor_golang_org_x_net_http_httpproxy_cidrMatch_vendor_golang_org_x_net_http_httpproxy_matcher
        ;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_02 = extraout_RDI_00;
          extraout_R11_02[1] = *(undefined8 *)((int)extraout_RAX_06 + extraout_RCX_00 + 8);
          pvVar4 = extraout_RAX_06;
          iVar7 = extraout_RCX_00;
          local_88 = extraout_RDI_00;
        }
        *(undefined8 *)((int)pvVar4 + iVar7 + 8) = local_88;
      }
      else {
        hostport.str._4_4_ = in_stack_fffffffffffffee4;
        hostport.str._0_4_ = in_stack_fffffffffffffee0;
        hostport.len._0_4_ = in_stack_fffffffffffffee8;
        hostport.len._4_4_ = in_stack_fffffffffffffeec;
        host.len = (int)in_stack_fffffffffffffef8;
        host.str = (uint8 *)in_stack_fffffffffffffef0;
        port.len = (int)in_stack_ffffffffffffff08;
        port.str = (uint8 *)in_stack_ffffffffffffff00;
        err.data = in_stack_ffffffffffffff18;
        err.tab = in_stack_ffffffffffffff10;
        net_SplitHostPort(hostport,host,port,err);
        ~r0_09 = extraout_RBX_02;
        if (extraout_RSI_00 == 0) {
          if (extraout_RBX_05 == (undefined *)0x0) goto LAB_006c944e;
          local_78 = extraout_RAX_07;
          ~r0_09 = extraout_RBX_05;
          if ((*(char *)&(extraout_RAX_07->IP).array == '[') &&
             ((extraout_RBX_05 + -1)[(int)extraout_RAX_07] == ']')) {
            if (extraout_RBX_05 == &DAT_00000001) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            ~r0_09 = extraout_RBX_05 + -2;
            local_78 = (net_IPNet *)
                       ((int)&(extraout_RAX_07->IP).array +
                       (uint)((dword)(-(int)~r0_09 >> 0x3f) & 1));
          }
        }
        local_98 = local_78;
        local_90 = extraout_RCX_01;
        runtime_newobject((internal_abi_Type *)&DAT_008130c0,~r0_09);
        s_03.str._4_4_ = in_stack_fffffffffffffee4;
        s_03.str._0_4_ = in_stack_fffffffffffffee0;
        s_03.len._0_4_ = in_stack_fffffffffffffee8;
        s_03.len._4_4_ = in_stack_fffffffffffffeec;
        ~r0_04._8_8_ = in_stack_fffffffffffffef8;
        ~r0_04._0_8_ = in_stack_fffffffffffffef0;
        local_60 = extraout_RAX_08;
        net_parseIP(s_03,~r0_04,SUB81(local_98,0));
        *local_60 = in_stack_fffffffffffffee0;
        local_60[1] = in_stack_fffffffffffffee4;
        local_60[2] = in_stack_fffffffffffffee8;
        local_60[3] = in_stack_fffffffffffffeec;
        if (extraout_AL == '\0') {
          local_60 = (undefined4 *)0x0;
          uVar2 = 0;
        }
        else {
          uVar2 = 0x10;
        }
        if (local_60 == (undefined4 *)0x0) {
          if (~r0_09 != (undefined *)0x0) {
            if ((int)~r0_09 < 2) {
              bVar10 = false;
            }
            else {
              bVar10 = *(short *)&(local_98->IP).array == 0x2e2a;
            }
            pnVar3 = local_98;
            if (bVar10) {
              ~r0_09 = ~r0_09 + -1;
              pnVar3 = (net_IPNet *)
                       ((int)&(local_98->IP).array + (uint)((dword)(-(int)~r0_09 >> 0x3f) & 1));
            }
            if (~r0_09 == (undefined *)0x0) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            bVar1 = *(byte *)&(pnVar3->IP).array;
            if (bVar1 != 0x2e) {
              a0.str._4_4_ = in_stack_fffffffffffffee4;
              a0.str._0_4_ = in_stack_fffffffffffffee0;
              a0.len._0_4_ = in_stack_fffffffffffffee8;
              a0.len._4_4_ = in_stack_fffffffffffffeec;
              a1.len = (int)in_stack_fffffffffffffef8;
              a1.str = (uint8 *)in_stack_fffffffffffffef0;
              ~r0_07.len = (int)in_stack_ffffffffffffff08;
              ~r0_07.str = (uint8 *)in_stack_ffffffffffffff00;
              runtime_concatstring2((runtime_tmpBuf *)0x0,a0,a1,~r0_07);
              pnVar3 = extraout_RAX_09;
              ~r0_09 = extraout_RBX_06;
            }
            v.str._4_4_ = in_stack_fffffffffffffee4;
            v.str._0_4_ = in_stack_fffffffffffffee0;
            v.len._0_4_ = in_stack_fffffffffffffee8;
            v.len._4_4_ = in_stack_fffffffffffffeec;
            ~r0_05.len = (int)in_stack_fffffffffffffef8;
            ~r0_05.str = (uint8 *)in_stack_fffffffffffffef0;
            ~r1_01.data = in_stack_ffffffffffffff08;
            ~r1_01.tab = in_stack_ffffffffffffff00;
            local_80 = pnVar3;
            vendor_golang_org_x_net_http_httpproxy_idnaASCII(v,~r0_05,~r1_01);
            local_58 = extraout_RAX_10;
            puStack_50 = extraout_RBX_07;
            if (extraout_RCX_02 != 0) {
              local_58 = local_80;
              puStack_50 = ~r0_09;
            }
            local_48 = local_90;
            local_40._9_7_ = in_XMM15._9_7_;
            local_40[8] = bVar1 != 0x2e;
            local_40._0_8_ = ~r0_10;
            runtime_convT((internal_abi_Type *)&DAT_00873820,&local_58,(void *)(uint)bVar1);
            uVar9 = *(int *)(ctx + 0x68) + 1;
            pvVar4 = *(void **)(ctx + 0x60);
            local_70 = extraout_RAX_11;
            pEVar8 = ctx;
            if (*(uint *)(ctx + 0x70) < uVar9) {
              ~r0_00.array._4_4_ = in_stack_fffffffffffffee4;
              ~r0_00.array._0_4_ = in_stack_fffffffffffffee0;
              ~r0_00.len._0_4_ = in_stack_fffffffffffffee8;
              ~r0_00.len._4_4_ = in_stack_fffffffffffffeec;
              ~r0_00.cap = (int)in_stack_fffffffffffffef0;
              runtime_growslice(pvVar4,uVar9,*(uint *)(ctx + 0x70),1,
                                (internal_abi_Type *)&DAT_00839dc0,~r0_00);
              *(undefined8 *)(ctx + 0x70) = extraout_RCX_03;
              pvVar4 = extraout_RAX_12;
              uVar9 = extraout_RBX_08;
              if (runtime_writeBarrier._0_4_ != 0) {
                runtime_gcWriteBarrier2();
                *extraout_R11_03 = extraout_RAX_13;
                extraout_R11_03[1] = *(void **)(pEVar8 + 0x60);
                pvVar4 = extraout_RAX_13;
                uVar9 = extraout_RBX_09;
              }
              *(void **)(pEVar8 + 0x60) = pvVar4;
            }
            *(uint *)(pEVar8 + 0x68) = uVar9;
            iVar7 = (uVar9 - 1) * 0x10;
            *(undefined1 **)((int)pvVar4 + iVar7) =
                 go_itab_vendor_golang_org_x_net_http_httpproxy_domainMatch_vendor_golang_org_x_net_http_httpproxy_matcher
            ;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier2();
              *extraout_R11_04 = extraout_RAX_14;
              extraout_R11_04[1] = *(undefined8 *)((int)extraout_RSI_01 + iVar7 + 8);
              local_70 = extraout_RAX_14;
              pvVar4 = extraout_RSI_01;
            }
            *(undefined8 *)((int)pvVar4 + iVar7 + 8) = local_70;
          }
        }
        else {
          local_30 = local_60;
          uStack_28 = uVar2;
          local_20 = uVar2;
          runtime_convT((internal_abi_Type *)&DAT_0085c0c0,&local_30,~r0_10);
          uVar9 = *(int *)(ctx + 0x50) + 1;
          pvVar4 = *(void **)(ctx + 0x48);
          local_70 = extraout_RAX_15;
          pEVar8 = ctx;
          if (*(uint *)(ctx + 0x58) < uVar9) {
            ~r0_01.array._4_4_ = in_stack_fffffffffffffee4;
            ~r0_01.array._0_4_ = in_stack_fffffffffffffee0;
            ~r0_01.len._0_4_ = in_stack_fffffffffffffee8;
            ~r0_01.len._4_4_ = in_stack_fffffffffffffeec;
            ~r0_01.cap = (int)in_stack_fffffffffffffef0;
            runtime_growslice(pvVar4,uVar9,*(uint *)(ctx + 0x58),1,
                              (internal_abi_Type *)&DAT_00839dc0,~r0_01);
            *(undefined8 *)(ctx + 0x58) = extraout_RCX_04;
            pvVar4 = extraout_RAX_16;
            uVar9 = extraout_RBX_10;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier2();
              *extraout_R11_05 = extraout_RAX_17;
              extraout_R11_05[1] = *(void **)(pEVar8 + 0x48);
              pvVar4 = extraout_RAX_17;
              uVar9 = extraout_RBX_11;
            }
            *(void **)(pEVar8 + 0x48) = pvVar4;
          }
          *(uint *)(pEVar8 + 0x50) = uVar9;
          iVar7 = (uVar9 - 1) * 0x10;
          *(undefined1 **)((int)pvVar4 + iVar7) =
               go_itab_vendor_golang_org_x_net_http_httpproxy_ipMatch_vendor_golang_org_x_net_http_httpproxy_matcher
          ;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_06 = extraout_RAX_18;
            extraout_R11_06[1] = *(undefined8 *)((int)extraout_RSI_02 + iVar7 + 8);
            local_70 = extraout_RAX_18;
            pvVar4 = extraout_RSI_02;
          }
          *(undefined8 *)((int)pvVar4 + iVar7 + 8) = local_70;
        }
      }
    }
LAB_006c944e:
    local_68 = local_68 + 0x10;
    iVar6 = iVar6 + 1;
  } while( true );
}



void vendor_golang_org_x_net_http_httpproxy_canonicalAddr(net_url_URL *url,string ~r0)

{
  string hostPort;
  string v;
  string hostPort_00;
  string ky;
  string a0;
  string a0_00;
  string host;
  string ~r0_00;
  string host_00;
  string a1;
  string a1_00;
  string ~r0_01;
  uint8 *extraout_RAX;
  uint8 *extraout_RAX_00;
  int extraout_RAX_01;
  int extraout_RCX;
  int extraout_RBX;
  int extraout_RBX_00;
  uint8 *puVar1;
  int extraout_RDI;
  int iVar2;
  int unaff_R14;
  uint8 *in_stack_ffffffffffffff78;
  int in_stack_ffffffffffffff80;
  int iVar3;
  undefined in_stack_ffffffffffffff88;
  undefined uVar4;
  undefined7 in_stack_ffffffffffffff89;
  int in_stack_ffffffffffffff90;
  string in_stack_ffffffffffffff98;
  string in_stack_ffffffffffffffa8;
  uint8 *in_stack_ffffffffffffffb8;
  
  while (&stack0xfffffffffffffff8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  hostPort.len = in_stack_ffffffffffffff80;
  hostPort.str = in_stack_ffffffffffffff78;
  host.str._1_7_ = in_stack_ffffffffffffff89;
  host.str._0_1_ = in_stack_ffffffffffffff88;
  host.len = in_stack_ffffffffffffff90;
  net_url_splitHostPort(hostPort,host,in_stack_ffffffffffffff98);
  v.len = in_stack_ffffffffffffff80;
  v.str = in_stack_ffffffffffffff78;
  ~r0_00.str._1_7_ = in_stack_ffffffffffffff89;
  ~r0_00.str._0_1_ = in_stack_ffffffffffffff88;
  ~r0_00.len = in_stack_ffffffffffffff90;
  vendor_golang_org_x_net_http_httpproxy_idnaASCII(v,~r0_00,(error)in_stack_ffffffffffffff98);
  hostPort_00.len = in_stack_ffffffffffffff80;
  hostPort_00.str = in_stack_ffffffffffffff78;
  host_00.str._1_7_ = in_stack_ffffffffffffff89;
  host_00.str._0_1_ = in_stack_ffffffffffffff88;
  host_00.len = in_stack_ffffffffffffff90;
  net_url_splitHostPort(hostPort_00,host_00,in_stack_ffffffffffffff98);
  puVar1 = extraout_RAX_00;
  iVar3 = extraout_RBX_00;
  if (extraout_RCX != 0) {
    puVar1 = extraout_RAX;
    iVar3 = extraout_RBX;
  }
  iVar2 = extraout_RDI;
  if (extraout_RDI == 0) {
    ky.len = in_stack_ffffffffffffff80;
    ky.str = in_stack_ffffffffffffff78;
    runtime_mapaccess1_faststr
              ((internal_abi_MapType *)&DAT_0082bd20,
               (runtime_hmap *)vendor_golang_org_x_net_http_httpproxy_portMap,ky,(url->Scheme).str);
    iVar2 = *(int *)(extraout_RAX_01 + 8);
  }
  uVar4 = 0x3a;
  internal_bytealg_IndexByteString();
  if (in_stack_ffffffffffffff90 < 0) {
    a0_00.len = iVar3;
    a0_00.str = puVar1;
    a1_00.str._1_7_ = in_stack_ffffffffffffff89;
    a1_00.str._0_1_ = uVar4;
    a1_00.len = in_stack_ffffffffffffff90;
    runtime_concatstring3
              ((runtime_tmpBuf *)0x0,a0_00,a1_00,in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8
              );
  }
  else {
    a0.len = iVar3;
    a0.str = puVar1;
    a1.str._1_7_ = in_stack_ffffffffffffff89;
    a1.str._0_1_ = uVar4;
    a1.len = in_stack_ffffffffffffff90;
    ~r0_01.len = iVar2;
    ~r0_01.str = in_stack_ffffffffffffffb8;
    runtime_concatstring4
              ((runtime_tmpBuf *)0x0,a0,a1,in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8,
               ~r0_01);
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void vendor_golang_org_x_net_http_httpproxy_idnaASCII(string v,string ~r0,error ~r1)

{
  error ~r1_00;
  int in_RAX;
  int i;
  int in_RBX;
  runtime_itab *unaff_RBP;
  int unaff_R14;
  void *unaff_retaddr;
  string in_stack_ffffffffffffffd8;
  string in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  i = 0;
  while( true ) {
    if (in_RBX <= i) {
      return;
    }
    if (0x7f < *(byte *)(in_RAX + i)) break;
    i = i + 1;
  }
  ~r1_00.data = unaff_retaddr;
  ~r1_00.tab = unaff_RBP;
  vendor_golang_org_x_net_idna___Profile__process
            (vendor_golang_org_x_net_idna_Lookup,in_stack_ffffffffffffffd8,SUB81(in_RAX,0),
             in_stack_ffffffffffffffe8,~r1_00);
  return;
}



void vendor_golang_org_x_net_http_httpproxy_allMatch_match
               (vendor_golang_org_x_net_http_httpproxy_allMatch a,string host,string port,net_IP ip,
               bool ~r0)

{
  return;
}



void vendor_golang_org_x_net_http_httpproxy_cidrMatch_match
               (vendor_golang_org_x_net_http_httpproxy_cidrMatch m,string host,string port,net_IP ip
               ,bool ~r0)

{
  bool in_R8B;
  int unaff_R14;
  net_IP in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  net___IPNet__Contains(m.cidr,in_stack_ffffffffffffffd8,in_R8B);
  return;
}



void vendor_golang_org_x_net_http_httpproxy_ipMatch_match
               (vendor_golang_org_x_net_http_httpproxy_ipMatch m,string host,string port,net_IP ip,
               bool ~r0)

{
  char extraout_AL;
  int in_RSI;
  int in_R11;
  int unaff_R14;
  net_IP in_stack_ffffffffffffffc8;
  net_IP in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  net_IP_Equal(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffe0,~r0);
  if (extraout_AL == '\0') {
    return;
