  char cVar3;
  char cVar4;
  void **ppvVar5;
  net_netip_Addr ip_00;
  runtime_slice ~r0_00;
  runtime_slice ~r0_01;
  runtime_slice ~r0_02;
  runtime_slice ~r0_03;
  undefined7 *extraout_RAX;
  undefined7 *extraout_RAX_00;
  undefined7 *extraout_RAX_01;
  undefined7 *extraout_RAX_02;
  byte bVar6;
  internal_intern_Value *in_RCX;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  dword dVar7;
  uint uVar8;
  void *__n;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  uint oldCap;
  undefined7 *ptr;
  uint newLen;
  void *__src;
  dword dVar9;
  int unaff_R14;
  undefined in_XMM15 [16];
  net_netip_uint128 in_stack_ffffffffffffff28;
  internal_intern_Value *in_stack_ffffffffffffff38;
  string in_stack_ffffffffffffff40;
  uint8 i;
  undefined7 local_6f;
  unkbyte9 Stack_68;
  undefined7 uStack_5f;
  undefined local_58 [16];
  void *local_48;
  undefined7 *local_40;
  internal_intern_Value *local_38;
  undefined local_30 [16];
  undefined local_20 [8];
  undefined local_18 [8];
  internal_intern_Value *local_10;
  
  while (local_58 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((net_netip_z0 != in_RCX) && (net_netip_z4 != in_RCX)) {
    local_6f = in_XMM15._0_7_;
    Stack_68 = in_XMM15._0_9_;
    uStack_5f = in_XMM15._9_7_;
    oldCap = 0x27;
    ptr = &local_6f;
    newLen = 0;
    dVar7 = 0;
    local_38 = in_RCX;
    while ((byte)dVar7 < 8) {
      dVar9 = dVar7;
      if ((byte)dVar7 != 0) {
        newLen = newLen + 1;
        if (oldCap < newLen) {
          ~r0_00.cap = (int)in_stack_ffffffffffffff38;
          ~r0_00.array = (void *)in_stack_ffffffffffffff28.hi;
          ~r0_00.len = in_stack_ffffffffffffff28.lo;
          runtime_growslice(ptr,newLen,oldCap,1,(internal_abi_Type *)&DAT_00807920,~r0_00);
          dVar9 = dVar7 & 0xff;
          in_RCX = local_38;
          oldCap = extraout_RCX;
          ptr = extraout_RAX;
          newLen = extraout_RBX;
        }
        *(undefined *)((newLen - 1) + (int)ptr) = 0x3a;
      }
      local_10 = in_RCX;
      bVar6 = (((byte)dVar9 & 3) - 3) * -0x10;
      newLen = newLen + 4;
      local_30._8_8_ = local_18;
      local_30._0_8_ = local_20;
      uVar8 = **(uint **)(local_30 + (uint)(dVar9 >> 2 & 1) * 8) >> (bVar6 & 0x3f) &
              -(uint)(bVar6 < 0x40);
      cVar1 = "goal , cons/mark  maxTrigger= pages/byte\n s.sweepgen= allocCount end tracegc\ntimer_deletens} value: {}, want {r1= [recovered]bad recoverybad g statusentersyscallwirep: p->m=) p->status=releasep: m= sysmonwait= preemptoff=cas64 failedGOTRACEBACK= m->gsignal=-byte limit\nruntime: sp=abi mismatchillegal seekinvalid slothost is downnot pollable<unknown:%d>Sfixed32KindSfixed64Kindmessage_typejava_packageoptimize_forswift_prefixruby_packagedebug_redactdouble_valuestring_valueverificationis_extension has no name has no typereflect.CopyOUT_OF_RANGENormalSocketgrpc-messageContent-Typegrpc-timeoutGrpc-MessageAddr: \'%s\', Cookie.Valuemax-forwardshttp2debug=1http2debug=2status code Multi-StatusNot ModifiedUnauthorizedI\'m a teapotNot ExtendedPUSH_PROMISECONTINUATION152587890625762939453125Cypro_MinoanMeetei_MayekPahawh_HmongSora_SompengSyloti_NagriRCodeSuccessRCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen..." /* TRUNCATED STRING LITERAL */
              [((ushort)(uVar8 >> 0xc) & 0xf) + 0x1f44];
      cVar2 = "goal , cons/mark  maxTrigger= pages/byte\n s.sweepgen= allocCount end tracegc\ntimer_deletens} value: {}, want {r1= [recovered]bad recoverybad g statusentersyscallwirep: p->m=) p->status=releasep: m= sysmonwait= preemptoff=cas64 failedGOTRACEBACK= m->gsignal=-byte limit\nruntime: sp=abi mismatchillegal seekinvalid slothost is downnot pollable<unknown:%d>Sfixed32KindSfixed64Kindmessage_typejava_packageoptimize_forswift_prefixruby_packagedebug_redactdouble_valuestring_valueverificationis_extension has no name has no typereflect.CopyOUT_OF_RANGENormalSocketgrpc-messageContent-Typegrpc-timeoutGrpc-MessageAddr: \'%s\', Cookie.Valuemax-forwardshttp2debug=1http2debug=2status code Multi-StatusNot ModifiedUnauthorizedI\'m a teapotNot ExtendedPUSH_PROMISECONTINUATION152587890625762939453125Cypro_MinoanMeetei_MayekPahawh_HmongSora_SompengSyloti_NagriRCodeSuccessRCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen..." /* TRUNCATED STRING LITERAL */
              [((dword)(uVar8 >> 8) & 0xf) + 0x1f44];
      cVar3 = "goal , cons/mark  maxTrigger= pages/byte\n s.sweepgen= allocCount end tracegc\ntimer_deletens} value: {}, want {r1= [recovered]bad recoverybad g statusentersyscallwirep: p->m=) p->status=releasep: m= sysmonwait= preemptoff=cas64 failedGOTRACEBACK= m->gsignal=-byte limit\nruntime: sp=abi mismatchillegal seekinvalid slothost is downnot pollable<unknown:%d>Sfixed32KindSfixed64Kindmessage_typejava_packageoptimize_forswift_prefixruby_packagedebug_redactdouble_valuestring_valueverificationis_extension has no name has no typereflect.CopyOUT_OF_RANGENormalSocketgrpc-messageContent-Typegrpc-timeoutGrpc-MessageAddr: \'%s\', Cookie.Valuemax-forwardshttp2debug=1http2debug=2status code Multi-StatusNot ModifiedUnauthorizedI\'m a teapotNot ExtendedPUSH_PROMISECONTINUATION152587890625762939453125Cypro_MinoanMeetei_MayekPahawh_HmongSora_SompengSyloti_NagriRCodeSuccessRCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen..." /* TRUNCATED STRING LITERAL */
              [((dword)(uVar8 >> 4) & 0xf) + 0x1f44];
      cVar4 = "goal , cons/mark  maxTrigger= pages/byte\n s.sweepgen= allocCount end tracegc\ntimer_deletens} value: {}, want {r1= [recovered]bad recoverybad g statusentersyscallwirep: p->m=) p->status=releasep: m= sysmonwait= preemptoff=cas64 failedGOTRACEBACK= m->gsignal=-byte limit\nruntime: sp=abi mismatchillegal seekinvalid slothost is downnot pollable<unknown:%d>Sfixed32KindSfixed64Kindmessage_typejava_packageoptimize_forswift_prefixruby_packagedebug_redactdouble_valuestring_valueverificationis_extension has no name has no typereflect.CopyOUT_OF_RANGENormalSocketgrpc-messageContent-Typegrpc-timeoutGrpc-MessageAddr: \'%s\', Cookie.Valuemax-forwardshttp2debug=1http2debug=2status code Multi-StatusNot ModifiedUnauthorizedI\'m a teapotNot ExtendedPUSH_PROMISECONTINUATION152587890625762939453125Cypro_MinoanMeetei_MayekPahawh_HmongSora_SompengSyloti_NagriRCodeSuccessRCodeRefusedprotobuf_keyprotobuf_val (sensitive)grpc_config=ECDSA-SHA256ECDSA-SHA384ECDSA-SHA512SSL_CERT_DIRTYPE_UNKNOWNempty objectMime-VersionX-ImforwardsX-Powered-By/dev/urandomautocompleteFieldNumbersSERIALNUMBERinvalid baseInstAltMatchunexpected )altmatch -> anynotnl -> caller error{{continue}}block clauseCircleMinus;CircleTimes;Equilibrium;GreaterLess;LeftCeiling;LessGreater;MediumSpace;NotPrecedes;NotSucceeds;OverBracket;RightVector;Rrightarrow;RuleDelayed;SmallCircle;SquareUnion;SubsetEqual;UpDownArrow;Updownarrow;VerticalBar;backepsilon;blacksquare;circledcirc;circleddash;curlyeqprec;curlyeqsucc;diamondsuit;eqslantless;expectation;nRightarrow;nrightarrow;preccurlyeq;precnapprox;quaternions;straightphi;succcurlyeq;succnapprox;thickapprox;updownarrow;NotLessLess;NotSuperset;invalid kindavx5124fmapsavx512bitalgping_responsegot a GetSeedgraceful_stop %v deadline:/etc/zoneinfoparsing time  out of range is too large (default %q) (default %v)Usage of %s:\nlame referral/etc/servicesdalTLDpSugct?profMemActiveprofMemFuturetraceStackTabexecRInternaltestRInternalGC sweep waitSIGQUIT: quitSIGKILL: killout of memory is nil, not value method bad map state span.base()=bad flushGen..." /* TRUNCATED STRING LITERAL */
              [((dword)uVar8 & 0xf) + 0x1f44];
      if (oldCap < newLen) {
        ~r0_01.cap = (int)in_stack_ffffffffffffff38;
        ~r0_01.array = (void *)in_stack_ffffffffffffff28.hi;
        ~r0_01.len = in_stack_ffffffffffffff28.lo;
        runtime_growslice(ptr,newLen,oldCap,4,(internal_abi_Type *)&DAT_00807920,~r0_01);
        dVar9 = dVar7 & 0xff;
        oldCap = extraout_RCX_00;
        ptr = extraout_RAX_00;
        newLen = extraout_RBX_00;
        in_RCX = local_38;
      }
      *(char *)((newLen - 4) + (int)ptr) = cVar1;
      *(char *)((newLen - 3) + (int)ptr) = cVar2;
      *(char *)((newLen - 2) + (int)ptr) = cVar3;
      *(char *)((newLen - 1) + (int)ptr) = cVar4;
      dVar7 = dVar9 + 1;
    }
    if (net_netip_z6noz != in_RCX) {
      uVar8 = newLen + 1;
      if (oldCap < uVar8) {
        ~r0_02.cap = (int)in_stack_ffffffffffffff38;
        ~r0_02.array = (void *)in_stack_ffffffffffffff28.hi;
        ~r0_02.len = in_stack_ffffffffffffff28.lo;
        runtime_growslice(ptr,uVar8,oldCap,1,(internal_abi_Type *)&DAT_00807920,~r0_02);
        in_RCX = local_38;
        uVar8 = extraout_RBX_01;
        oldCap = extraout_RCX_01;
        ptr = extraout_RAX_01;
      }
      *(undefined *)((uVar8 - 1) + (int)ptr) = 0x25;
      if (in_RCX == (internal_intern_Value *)0x0) {
        __n = (void *)0x0;
        __src = (void *)0x0;
      }
      else if ((in_RCX->cmpVal)._type == (internal_abi_Type *)&DAT_008075e0) {
        ppvVar5 = (void **)(in_RCX->cmpVal).data;
        __src = *ppvVar5;
        __n = ppvVar5[1];
      }
      else {
        __n = (void *)0x0;
        __src = (void *)0x0;
      }
      newLen = uVar8 + (int)__n;
      if (oldCap < newLen) {
        ~r0_03.cap = (int)in_stack_ffffffffffffff38;
        ~r0_03.array = (void *)in_stack_ffffffffffffff28.hi;
        ~r0_03.len = in_stack_ffffffffffffff28.lo;
        local_48 = __src;
        runtime_growslice(ptr,newLen,oldCap,(int)__n,(internal_abi_Type *)&DAT_00807920,~r0_03);
        ptr = extraout_RAX_02;
        __src = local_48;
        newLen = extraout_RBX_02;
      }
      local_40 = ptr;
      runtime_memmove((void *)((int)ptr + uVar8),__src,(size_t)__n);
      ptr = local_40;
    }
    runtime_slicebytetostring
              ((runtime_tmpBuf *)0x0,(uint8 *)ptr,newLen,(string)in_stack_ffffffffffffff28);
    return;
  }
  ip_00.z = in_stack_ffffffffffffff38;
  ip_00.addr = in_stack_ffffffffffffff28;
  net_netip_Addr_String(ip_00,in_stack_ffffffffffffff40);
  return;
}



void net_netip_Addr_MarshalText(net_netip_Addr ip,__uint8 ~r0,error ~r1)

{
  void **ppvVar1;
  __uint8 ~r0_00;
  __uint8 ~r0_01;
  __uint8 ~r0_02;
  int in_RAX;
  undefined4 *extraout_RAX;
  void *oldPtr;
  void *extraout_RAX_00;
  void *extraout_RAX_01;
  void *oldPtr_00;
  internal_intern_Value *in_RCX;
  uint oldCap;
  uint extraout_RCX;
  uint oldCap_00;
  void *__n;
  uint in_RBX;
  int extraout_RBX;
  uint newLen;
  uint extraout_RBX_00;
  void *in_RDI;
  void *extraout_RDI;
  void *__src;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffff78;
  __uint8 in_stack_ffffffffffffff90;
  undefined in_stack_ffffffffffffffa8 [16];
  int in_stack_ffffffffffffffb8;
  
  while (&stack0xfffffffffffffff8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  if (net_netip_z0 == in_RCX) {
    return;
  }
  if (net_netip_z4 == in_RCX) {
    runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,0xf,in_RDI);
    ~r0_02.cap = in_stack_ffffffffffffffb8;
    ~r0_02.array = (uint8 *)in_stack_ffffffffffffffa8._0_8_;
    ~r0_02.len = in_stack_ffffffffffffffa8._8_8_;
    net_netip_Addr_appendTo4
              ((net_netip_Addr)in_stack_ffffffffffffff78,in_stack_ffffffffffffff90,~r0_02);
    return;
  }
  runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,0x2e,in_RDI);
  if ((((net_netip_z0 != in_RCX) && (net_netip_z4 != in_RCX)) && (in_RAX == 0)) &&
     (in_RBX >> 0x20 == 0xffff)) {
    *extraout_RAX = 0x66663a3a;
    *(undefined4 *)((int)extraout_RAX + 3) = 0x3a666666;
    ~r0_00.cap = in_stack_ffffffffffffffb8;
    ~r0_00.array = (uint8 *)in_stack_ffffffffffffffa8._0_8_;
    ~r0_00.len = in_stack_ffffffffffffffa8._8_8_;
    net_netip_Addr_appendTo4
              ((net_netip_Addr)in_stack_ffffffffffffff78,in_stack_ffffffffffffff90,~r0_00);
    if (in_RCX == (internal_intern_Value *)0x0) {
      __n = (void *)0x0;
      __src = (void *)0x0;
    }
    else if ((in_RCX->cmpVal)._type == (internal_abi_Type *)&DAT_008075e0) {
      ppvVar1 = (void **)(in_RCX->cmpVal).data;
      __src = *ppvVar1;
      __n = ppvVar1[1];
    }
    else {
      __n = (void *)0x0;
      __src = (void *)0x0;
    }
    if (__n != (void *)0x0) {
      newLen = extraout_RBX + 1;
      oldPtr_00 = oldPtr;
      oldCap_00 = oldCap;
      if (oldCap < newLen) {
        runtime_growslice(oldPtr,newLen,oldCap,1,(internal_abi_Type *)&DAT_00807920,
                          in_stack_ffffffffffffff78);
        oldPtr_00 = extraout_RAX_00;
        oldCap_00 = extraout_RCX;
        newLen = extraout_RBX_00;
      }
      *(undefined *)((newLen - 1) + (int)oldPtr_00) = 0x25;
      if (oldCap_00 < newLen + (int)__n) {
        runtime_growslice(oldPtr_00,newLen + (int)__n,oldCap_00,(int)__n,
                          (internal_abi_Type *)&DAT_00807920,in_stack_ffffffffffffff78);
        oldPtr_00 = extraout_RAX_01;
      }
      runtime_memmove((void *)((int)oldPtr_00 + newLen),__src,(size_t)__n);
    }
    return;
  }
  ~r0_01.cap = in_stack_ffffffffffffffb8;
  ~r0_01.array = (uint8 *)in_stack_ffffffffffffffa8._0_8_;
  ~r0_01.len = in_stack_ffffffffffffffa8._8_8_;
  net_netip_Addr_appendTo6
            ((net_netip_Addr)in_stack_ffffffffffffff78,in_stack_ffffffffffffff90,~r0_01);
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void net_netip___Addr__UnmarshalText(net_netip_Addr *ip,__uint8 text,error ~r0)

{
  error ~r1;
  net_netip_Addr ~r0_00;
  net_netip_Addr *extraout_RAX;
  uint64 extraout_RAX_00;
  int in_RCX;
  undefined8 extraout_RCX;
  internal_intern_Value *extraout_RCX_00;
  internal_intern_Value *extraout_RCX_01;
  internal_intern_Value *piVar1;
  uint8 *in_RBX;
  uint64 extraout_RBX;
  uint64 unaff_RBP;
  undefined8 *extraout_R11;
  internal_intern_Value **extraout_R11_00;
  int unaff_R14;
  net_netip_uint128 in_XMM15;
  internal_intern_Value *unaff_retaddr;
  string in_stack_ffffffffffffffe0;
  uint64 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RCX == 0) {
    ip->addr = in_XMM15;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = extraout_RCX;
      ip = extraout_RAX;
    }
    ip->z = (internal_intern_Value *)0x0;
    return;
  }
  runtime_slicebytetostring((runtime_tmpBuf *)0x0,in_RBX,in_RCX,in_stack_ffffffffffffffe0);
  ~r0_00.addr.lo = unaff_RBP;
  ~r0_00.addr.hi = in_stack_fffffffffffffff0;
  ~r0_00.z = unaff_retaddr;
  ~r1.data = in_RBX;
  ~r1.tab = (runtime_itab *)ip;
  net_netip_ParseAddr(in_stack_ffffffffffffffe0,~r0_00,~r1);
  (ip->addr).hi = extraout_RAX_00;
  (ip->addr).lo = extraout_RBX;
  piVar1 = extraout_RCX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RCX_01;
    extraout_R11_00[1] = ip->z;
    piVar1 = extraout_RCX_01;
  }
  ip->z = piVar1;
  return;
}



void net_netip_Addr_marshalBinaryWithTrailingBytes(net_netip_Addr ip,int trailingBytes,__uint8 ~r0)

{
  uint uVar1;
  uint uVar2;
  void **ppvVar3;
  uint *extraout_RAX;
  dword *extraout_RAX_00;
  internal_intern_Value *in_RCX;
  void *__n;
  dword dVar4;
  void *pvVar5;
  uint in_RBX;
  void *__src;
  void *__dest;
  void *in_RDI;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (net_netip_z0 == in_RCX) {
    runtime_makeslice((internal_abi_Type *)&DAT_00807920,(int)in_RDI,(int)in_RDI,in_RDI);
  }
  else if (net_netip_z4 == in_RCX) {
    uVar1 = (int)in_RDI + 4;
    runtime_makeslice((internal_abi_Type *)&DAT_00807920,uVar1,uVar1,in_RDI);
    if (uVar1 < 4) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    dVar4 = (dword)in_RBX;
    *extraout_RAX_00 =
         dVar4 >> 0x18 | (dVar4 & 0xff0000) >> 8 | (dVar4 & 0xff00) << 8 | dVar4 << 0x18;
  }
  else {
    if (in_RCX == (internal_intern_Value *)0x0) {
      pvVar5 = (void *)0x0;
      __src = (void *)0x0;
    }
    else if ((in_RCX->cmpVal)._type == (internal_abi_Type *)&DAT_008075e0) {
      ppvVar3 = (void **)(in_RCX->cmpVal).data;
      __src = *ppvVar3;
      pvVar5 = ppvVar3[1];
    }
    else {
      pvVar5 = (void *)0x0;
      __src = (void *)0x0;
    }
    uVar1 = (int)in_RDI + (int)pvVar5 + 0x10;
    runtime_makeslice((internal_abi_Type *)&DAT_00807920,uVar1,uVar1,in_RDI);
    __n = (void *)((int)in_RDI + (int)pvVar5);
    if (uVar1 < 8) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    uVar2 = (int)in_RDI + (int)pvVar5 + 8;
    *extraout_RAX =
         (uint)trailingBytes >> 0x38 | (trailingBytes & 0xff000000000000U) >> 0x28 |
         (trailingBytes & 0xff0000000000U) >> 0x18 | (trailingBytes & 0xff00000000U) >> 8 |
         (trailingBytes & 0xff000000U) << 8 | (trailingBytes & 0xff0000U) << 0x18 |
         (trailingBytes & 0xff00U) << 0x28 | trailingBytes << 0x38;
    if (uVar2 < 8) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    *(uint *)((int)extraout_RAX + (uint)((dword)((int)-uVar2 >> 0x3f) & 8)) =
         in_RBX >> 0x38 | (in_RBX & 0xff000000000000) >> 0x28 | (in_RBX & 0xff0000000000) >> 0x18 |
         (in_RBX & 0xff00000000) >> 8 | (in_RBX & 0xff000000) << 8 | (in_RBX & 0xff0000) << 0x18 |
         (in_RBX & 0xff00) << 0x28 | in_RBX << 0x38;
    if (uVar1 < 0x10) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    __dest = (void *)((uint)((dword)(-(int)__n >> 0x3f) & 0x10) + (int)extraout_RAX);
    if ((int)pvVar5 < (int)__n) {
      __n = pvVar5;
    }
    if (__src != __dest) {
      runtime_memmove(__dest,__src,(size_t)__n);
    }
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void net_netip_Addr_MarshalBinary(net_netip_Addr ip,__uint8 ~r0,error ~r1)

{
  __uint8 ~r0_00;
  int in_RAX;
  undefined8 unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  net_netip_Addr in_stack_ffffffffffffffd8;
  undefined8 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.len = unaff_RBP;
  ~r0_00.array = (uint8 *)in_stack_fffffffffffffff0;
  ~r0_00.cap = unaff_retaddr;
  net_netip_Addr_marshalBinaryWithTrailingBytes(in_stack_ffffffffffffffd8,in_RAX,~r0_00);
  return;
}



void net_netip___Addr__UnmarshalBinary(net_netip_Addr *ip,__uint8 b,error ~r0)

{
  dword dVar1;
  string ~r0_00;
  net_netip_Addr ip_00;
  net_netip_Addr ~r0_01;
  net_netip_Addr ~r0_02;
  net_netip_Addr ~r0_03;
  net_netip_Addr *extraout_RAX;
  net_netip_Addr *extraout_RAX_00;
  undefined8 extraout_RAX_01;
  uint64 extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  uint64 extraout_RAX_04;
  int in_RCX;
  int n;
  undefined8 extraout_RCX;
  internal_intern_Value *extraout_RCX_00;
  internal_intern_Value *extraout_RCX_01;
  internal_intern_Value *extraout_RCX_02;
  internal_intern_Value *piVar2;
  internal_intern_Value *extraout_RCX_03;
  internal_intern_Value *extraout_RCX_04;
  uint8 (*in_RBX) [16];
  undefined8 extraout_RBX;
  uint64 extraout_RBX_00;
  uint64 extraout_RBX_01;
  undefined8 *extraout_R11;
  internal_intern_Value **extraout_R11_00;
  internal_intern_Value **extraout_R11_01;
  internal_intern_Value **extraout_R11_02;
  int unaff_R14;
  net_netip_uint128 in_XMM15;
  undefined4 uVar3;
  undefined4 uVar4;
  undefined4 uVar5;
  undefined4 uVar6;
  internal_intern_Value *in_stack_ffffffffffffffa0;
  string in_stack_ffffffffffffffa8;
  undefined8 uVar7;
  undefined8 uVar8;
  undefined4 uVar9;
  undefined4 uVar10;
  
  while (piVar2 = net_netip_z4, &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RCX == 0) {
    ip->addr = in_XMM15;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = extraout_RCX;
      ip = extraout_RAX;
    }
    ip->z = (internal_intern_Value *)0x0;
    return;
  }
  if (in_RCX == 4) {
    dVar1 = *(dword *)*in_RBX;
    (ip->addr).hi = 0;
    (ip->addr).lo =
         (dword)(dVar1 >> 0x18 | (dVar1 & 0xff0000) >> 8 | (dVar1 & 0xff00) << 8 | dVar1 << 0x18) |
         0xffff00000000;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RCX_00;
      extraout_R11_00[1] = extraout_RAX_00->z;
      ip = extraout_RAX_00;
      piVar2 = extraout_RCX_00;
    }
    ip->z = piVar2;
    return;
  }
  if (in_RCX != 0x10) {
    if (0x10 < in_RCX) {
      uVar3 = *(undefined4 *)*in_RBX;
      uVar4 = *(undefined4 *)(*in_RBX + 4);
      uVar5 = *(undefined4 *)(*in_RBX + 8);
      uVar6 = *(undefined4 *)(*in_RBX + 0xc);
      ~r0_01.addr.lo = (uint64)in_stack_ffffffffffffffa8.str;
      ~r0_01.z = in_stack_ffffffffffffffa8.len;
      ~r0_01.addr.hi = (uint64)in_stack_ffffffffffffffa0;
      uVar9 = uVar3;
      uVar10 = uVar4;
      net_netip_AddrFrom16(*in_RBX,~r0_01);
      ~r0_00.str._4_4_ = uVar4;
      ~r0_00.str._0_4_ = uVar3;
      ~r0_00.len._0_4_ = uVar5;
      ~r0_00.len._4_4_ = uVar6;
      uVar7 = extraout_RBX;
      uVar8 = extraout_RAX_01;
      runtime_slicebytetostring((runtime_tmpBuf *)0x0,in_RBX[1],in_RCX + -0x10,~r0_00);
      ip_00.addr.hi._4_4_ = uVar4;
      ip_00.addr.hi._0_4_ = uVar3;
      ip_00.addr.lo._0_4_ = uVar5;
      ip_00.addr.lo._4_4_ = uVar6;
      ip_00.z = in_stack_ffffffffffffffa0;
      ~r0_03.addr.lo = uVar8;
      ~r0_03.addr.hi = uVar7;
      ~r0_03.z._0_4_ = uVar9;
      ~r0_03.z._4_4_ = uVar10;
      net_netip_Addr_WithZone(ip_00,in_stack_ffffffffffffffa8,~r0_03);
      (ip->addr).hi = extraout_RAX_02;
      (ip->addr).lo = extraout_RBX_00;
      piVar2 = extraout_RCX_01;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_01 = extraout_RCX_02;
        extraout_R11_01[1] = ip->z;
        piVar2 = extraout_RCX_02;
      }
      ip->z = piVar2;
      return;
    }
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,in_RBX);
    extraout_RAX_03[1] = 0x15;
    *extraout_RAX_03 = &DAT_008b9a3f;
    return;
  }
  ~r0_02.addr.lo = (uint64)in_stack_ffffffffffffffa8.str;
  ~r0_02.z = in_stack_ffffffffffffffa8.len;
  ~r0_02.addr.hi = (uint64)in_stack_ffffffffffffffa0;
  net_netip_AddrFrom16(*in_RBX,~r0_02);
  (ip->addr).hi = extraout_RAX_04;
  (ip->addr).lo = extraout_RBX_01;
  piVar2 = extraout_RCX_03;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_02 = extraout_RCX_04;
    extraout_R11_02[1] = ip->z;
    piVar2 = extraout_RCX_04;
  }
  ip->z = piVar2;
  return;
}



void net_netip_AddrPort_Addr(net_netip_AddrPort p,net_netip_Addr ~r0)

{
  return;
}



void net_netip_AddrPort_Port(net_netip_AddrPort p,uint16 ~r0)

{
  return;
}



void net_netip_splitAddrPort(string s,string ip,string port,bool v6,error err)

{
  undefined7 in_register_00000001;
  char *pcVar1;
  undefined8 *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  char **extraout_RAX_02;
  void *in_RBX;
  undefined *~r0;
  int i_1;
  int i;
  int unaff_R14;
  
  pcVar1 = (char *)CONCAT71(in_register_00000001,v6);
  while (i = (int)in_RBX, &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  do {
    i = i + -1;
    if (i < 0) {
      i = -1;
      break;
    }
  } while (pcVar1[i] != ':');
  if (i == -1) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,in_RBX);
    extraout_RAX_02[1] = (char *)0xe;
    *extraout_RAX_02 =
         "not an ip:portinvalid PrefixResourceHeaderRCodeNameErrormime/multipartinvalid kind: protobuf_oneofXXX_OneofFuncsneed more data/etc/ssl/certs\\.+*?()|[]{}^$LOGGER_UNKNOWNAccept-CharsetDkim-SignatureREQUEST_METHOD$htmltemplate_ /* %s */null formnovalidateprotobuf errorReservedRangesdata truncatedInstEmptyWidthunknown node: ApplyFunction;DifferentialD;DoubleLeftTee;DoubleUpArrow;LeftTeeVector;LeftVectorBar;LessFullEqual;LongLeftArrow;Longleftarrow;NotTildeEqual;NotTildeTilde;Poincareplane;PrecedesEqual;PrecedesTilde;RightArrowBar;RightTeeArrow;RightTriangle;RightUpVector;SucceedsEqual;SucceedsTilde;SupersetEqual;UpEquilibrium;VerticalTilde;VeryThinSpace;bigtriangleup;blacktriangle;divideontimes;fallingdotseq;hookleftarrow;leftarrowtail;leftharpoonup;longleftarrow;looparrowleft;measuredangle;ntriangleleft;shortparallel;smallsetminus;triangleright;upharpoonleft;NotEqualTilde;varsubsetneqq;varsupsetneqq;len of type %sFailed to servenegative offsetcopy_file_rangeduplicated nameGroup: bad kind: cannot parse ,M3.2.0,M11.1.0missing addressunknown networkinvalid address/etc/mdns.allowreflectlite.SetallocmRInternalwrite heap dumpasyncpreemptoffforce gc (idle)sync.Mutex.Lockmalloc deadlockruntime error: elem size wrong  with GC prog\nscan missed a gmisaligned maskruntime: min = runtime: inUse=runtime: max = recovery failedstopm holding pstartm: m has ppreempt SPWRITEmissing mcache?ms: gomaxprocs=]\n\tmorebuf={pc:: no frame (sp=runtime: frame runtimer: bad ptraceback stuckno such processnot a directoryadvertise errornetwork is downno medium foundkey has expiredCardinality(%d)weak_dependencyextension_rangeproto3_optionalunverified_lazyfeature_supportutf8_validationaggregate_valueedition_removedinvalid argSize<invalid Value>InvalidArgumentUnauthenticatedUNAUTHENTICATED\"UNIMPLEMENTED\"AuthInfo is nilAuthInfo: <nil>accept-encodingaccept-languageAccept-EncodingPartial ContentRequest TimeoutLength RequiredNot ImplementedGateway Timeoutunexpected typebad trailer key47683715820312515:04:05.000000/debug/requestsHanifi_RohingyaPsalter_Pahlav..." /* TRUNCATED STRING LITERAL */
    ;
    return;
  }
  if (in_RBX < (uint)i) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  if (in_RBX < (void *)(i + 1U)) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  ~r0 = (undefined *)((int)in_RBX - i);
  if (i == 0) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0);
    extraout_RAX_01[1] = 5;
    *extraout_RAX_01 = &DAT_008aeead;
    return;
  }
  if (~r0 == &DAT_00000001) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,&DAT_00000001);
    extraout_RAX_00[1] = 7;
    *extraout_RAX_00 = &DAT_008b0cae;
    return;
  }
  if ((*pcVar1 == '[') && ((i < 2 || (pcVar1[i + -1] != ']')))) {
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0);
    extraout_RAX[1] = 9;
    *extraout_RAX = &DAT_008b2b10;
    return;
  }
  return;
}



void net_netip_ParseAddrPort(string s,net_netip_AddrPort ~r0,error ~r1)

{
  __uint8 buf;
  __uint8 buf_00;
  __uint8 buf_01;
  __uint8 buf_02;
  string ip;
  error ~r1_00;
  string a1;
  string a1_00;
  string a1_01;
  net_netip_Addr ~r0_00;
  string s_00;
  string s_01;
  string s_02;
  string s_03;
  string port;
  string a2;
  string a2_00;
  string a2_01;
  error ~r1_01;
  __uint8 ~r0_01;
  __uint8 ~r0_02;
  __uint8 ~r0_03;
  __uint8 ~r0_04;
  error err;
  string a3;
  string ~r0_05;
  string ~r0_06;
  string ~r0_07;
  bool in_AL;
  uint8 quote;
  uint8 quote_00;
  uint8 quote_01;
  uint8 quote_02;
  uint64 port16;
  uint8 *ptr;
  uint8 *ptr_00;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  uint8 *ptr_01;
  undefined8 extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  uint8 *ptr_02;
  undefined8 extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  undefined8 *extraout_RAX_07;
  undefined8 *puVar1;
  int base;
  internal_intern_Value *extraout_RCX;
  int in_RBX;
  int extraout_RBX;
  int n;
  int n_00;
  void *~r0_08;
  int n_01;
  void *~r0_09;
  int n_02;
  void *~r0_10;
  char extraout_SIL;
  bool v6;
  int bitSize;
  void *~r0_11;
  int extraout_RDI;
  int extraout_R8;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  int unaff_R14;
  string in_stack_fffffffffffffeb0;
  runtime_itab *in_stack_fffffffffffffec0;
  uint8 *in_stack_fffffffffffffec8;
  internal_intern_Value *in_stack_fffffffffffffed0;
  runtime_itab *in_stack_fffffffffffffed8;
  runtime_itab *in_stack_fffffffffffffee0;
  void *in_stack_fffffffffffffee8;
  undefined in_stack_fffffffffffffef0 [15];
  char cVar2;
  undefined local_d0 [8];
  void *local_c8;
  int local_c0;
  uint8 local_b8 [32];
  uint8 local_98 [32];
  uint8 local_78 [32];
  uint8 local_58 [40];
  undefined8 local_30;
  undefined8 local_28;
  undefined8 local_20;
  
  while (local_d0 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ip.len = (int)in_stack_fffffffffffffec8;
  ip.str = (uint8 *)in_stack_fffffffffffffec0;
  port.len = (int)in_stack_fffffffffffffed8;
  port.str = (uint8 *)in_stack_fffffffffffffed0;
  err.data = in_stack_fffffffffffffee8;
  err.tab = in_stack_fffffffffffffee0;
  net_netip_splitAddrPort(in_stack_fffffffffffffeb0,ip,port,in_AL,err);
  if (extraout_R8 != 0) {
    return;
  }
  ~r1_00.data = in_stack_fffffffffffffec8;
  ~r1_00.tab = in_stack_fffffffffffffec0;
  cVar2 = extraout_SIL;
  strconv_ParseUint(in_stack_fffffffffffffeb0,base,bitSize,10,~r1_00);
  if (extraout_RBX != 0) {
    local_c0 = (bitSize * 3) / 2;
    local_c8 = (void *)((in_RBX * 3) / 2);
    runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,local_c0,local_c8);
    buf.cap = (int)in_stack_fffffffffffffec0;
    buf.array = in_stack_fffffffffffffeb0.str;
    buf.len = in_stack_fffffffffffffeb0.len;
    s_00.len = (int)in_stack_fffffffffffffed0;
    s_00.str = in_stack_fffffffffffffec8;
    ~r0_01.len = (int)in_stack_fffffffffffffee0;
    ~r0_01.array = (uint8 *)in_stack_fffffffffffffed8;
    ~r0_01.cap = (int)in_stack_fffffffffffffee8;
    strconv_appendQuotedWith(buf,s_00,quote,false,SUB81(local_c0,0),~r0_01);
    runtime_slicebytetostring((runtime_tmpBuf *)local_58,ptr,n,in_stack_fffffffffffffeb0);
    runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,(int)local_c8,~r0_11);
    buf_00.cap = (int)in_stack_fffffffffffffec0;
    buf_00.array = in_stack_fffffffffffffeb0.str;
    buf_00.len = in_stack_fffffffffffffeb0.len;
    s_01.len = (int)in_stack_fffffffffffffed0;
    s_01.str = in_stack_fffffffffffffec8;
    ~r0_02.len = (int)in_stack_fffffffffffffee0;
    ~r0_02.array = (uint8 *)in_stack_fffffffffffffed8;
    ~r0_02.cap = (int)in_stack_fffffffffffffee8;
    strconv_appendQuotedWith(buf_00,s_01,quote_00,false,SUB81(local_c8,0),~r0_02);
    runtime_slicebytetostring(&local_78,ptr_00,n_00,in_stack_fffffffffffffeb0);
    a1.len = (int)in_stack_fffffffffffffec8;
    a1.str = (uint8 *)in_stack_fffffffffffffec0;
    a2.len = (int)in_stack_fffffffffffffed8;
    a2.str = (uint8 *)in_stack_fffffffffffffed0;
    a3.len = (int)in_stack_fffffffffffffee8;
    a3.str = (uint8 *)in_stack_fffffffffffffee0;
    ~r0_07.len._7_1_ = cVar2;
    ~r0_07._0_15_ = in_stack_fffffffffffffef0;
    runtime_concatstring4((runtime_tmpBuf *)0x0,in_stack_fffffffffffffeb0,a1,a2,a3,~r0_07);
    local_20 = extraout_RAX;
    runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_08);
    extraout_RAX_00[1] = ~r0_08;
    puVar1 = extraout_RAX_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = local_20;
      puVar1 = extraout_RAX_01;
    }
    *puVar1 = local_20;
    return;
  }
  ~r0_00.addr.lo = (uint64)in_stack_fffffffffffffec8;
  ~r0_00.addr.hi = (uint64)in_stack_fffffffffffffec0;
  ~r0_00.z = in_stack_fffffffffffffed0;
  ~r1_01.data = in_stack_fffffffffffffee0;
  ~r1_01.tab = in_stack_fffffffffffffed8;
  net_netip_ParseAddr(in_stack_fffffffffffffeb0,~r0_00,~r1_01);
  if (extraout_RDI == 0) {
    if (cVar2 != '\0') {
      if (net_netip_z4 == extraout_RCX) {
        local_c0 = (int)(void *)(in_RBX * 3) / 2;
        runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,local_c0,(void *)(in_RBX * 3));
        buf_01.cap = (int)in_stack_fffffffffffffec0;
        buf_01.array = in_stack_fffffffffffffeb0.str;
        buf_01.len = in_stack_fffffffffffffeb0.len;
        s_02.len = (int)in_stack_fffffffffffffed0;
        s_02.str = in_stack_fffffffffffffec8;
        ~r0_03.len = (int)in_stack_fffffffffffffee0;
        ~r0_03.array = (uint8 *)in_stack_fffffffffffffed8;
        ~r0_03.cap = (int)in_stack_fffffffffffffee8;
        strconv_appendQuotedWith(buf_01,s_02,quote_01,false,SUB81(local_c0,0),~r0_03);
        runtime_slicebytetostring(&local_98,ptr_01,n_01,in_stack_fffffffffffffeb0);
        a1_00.len = (int)in_stack_fffffffffffffec8;
        a1_00.str = (uint8 *)in_stack_fffffffffffffec0;
        a2_00.len = (int)in_stack_fffffffffffffed8;
        a2_00.str = (uint8 *)in_stack_fffffffffffffed0;
        ~r0_05.len = (int)in_stack_fffffffffffffee8;
        ~r0_05.str = (uint8 *)in_stack_fffffffffffffee0;
        runtime_concatstring3((runtime_tmpBuf *)0x0,in_stack_fffffffffffffeb0,a1_00,a2_00,~r0_05);
        local_28 = extraout_RAX_02;
        runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_09);
        extraout_RAX_03[1] = ~r0_09;
        puVar1 = extraout_RAX_03;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_00 = local_28;
          puVar1 = extraout_RAX_04;
        }
        *puVar1 = local_28;
        return;
      }
      if (cVar2 != '\0') {
        return;
      }
    }
    if ((net_netip_z0 != extraout_RCX) && (net_netip_z4 != extraout_RCX)) {
      local_c0 = (int)(void *)(in_RBX * 3) / 2;
      runtime_makeslice((internal_abi_Type *)&DAT_00807920,0,local_c0,(void *)(in_RBX * 3));
      buf_02.cap = (int)in_stack_fffffffffffffec0;
      buf_02.array = in_stack_fffffffffffffeb0.str;
      buf_02.len = in_stack_fffffffffffffeb0.len;
      s_03.len = (int)in_stack_fffffffffffffed0;
      s_03.str = in_stack_fffffffffffffec8;
      ~r0_04.len = (int)in_stack_fffffffffffffee0;
      ~r0_04.array = (uint8 *)in_stack_fffffffffffffed8;
      ~r0_04.cap = (int)in_stack_fffffffffffffee8;
      strconv_appendQuotedWith(buf_02,s_03,quote_02,false,SUB81(local_c0,0),~r0_04);
      runtime_slicebytetostring(&local_b8,ptr_02,n_02,in_stack_fffffffffffffeb0);
      a1_01.len = (int)in_stack_fffffffffffffec8;
      a1_01.str = (uint8 *)in_stack_fffffffffffffec0;
      a2_01.len = (int)in_stack_fffffffffffffed8;
      a2_01.str = (uint8 *)in_stack_fffffffffffffed0;
      ~r0_06.len = (int)in_stack_fffffffffffffee8;
      ~r0_06.str = (uint8 *)in_stack_fffffffffffffee0;
      runtime_concatstring3((runtime_tmpBuf *)0x0,in_stack_fffffffffffffeb0,a1_01,a2_01,~r0_06);
      local_30 = extraout_RAX_05;
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0_10);
      extraout_RAX_06[1] = ~r0_10;
      puVar1 = extraout_RAX_06;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_01 = local_30;
        puVar1 = extraout_RAX_07;
      }
      *puVar1 = local_30;
      return;
    }
    return;
  }
  return;
}



void net_netip_AddrPort_IsValid(net_netip_AddrPort p,bool ~r0)

{
  return;
}



void net_netip_AddrPort_String(net_netip_AddrPort p,string ~r0)

{
  undefined auVar1 [16];
  undefined auVar2 [12];
  string ~r0_00;
  string a0;
  string a0_00;
  string ~r0_01;
  net_netip_Addr ip;
  net_netip_Addr ip_00;
  __uint8 dst;
  runtime_slice ~r0_02;
  __uint8 dst_00;
  string a1;
  string a1_00;
  string ~r0_03;
  __uint8 ~r0_04;
  __uint8 ~r0_05;
  string a2;
  string a2_00;
  string ~r0_06;
  uint8 in_EAX [4];
  int iVar3;
  undefined8 extraout_RAX;
  undefined5 *i_00;
  undefined5 *oldPtr;
  undefined5 *extraout_RAX_00;
  uint8 *ptr;
  internal_intern_Value *in_RCX;
  uint oldCap;
  int extraout_RBX;
  int extraout_RBX_00;
  uint base;
  uint extraout_RBX_01;
  int n;
  ushort in_DI;
  int unaff_R14;
  undefined4 in_XMM15_Da;
  undefined4 in_XMM15_Db;
  undefined4 in_XMM15_Dc;
  undefined4 in_XMM15_Dd;
  undefined4 in_stack_ffffffffffffff68;
  undefined4 uVar4;
  undefined4 in_stack_ffffffffffffff6c;
  undefined4 uVar5;
  int in_stack_ffffffffffffff70;
  undefined in_stack_ffffffffffffff78;
  undefined uVar6;
  undefined7 in_stack_ffffffffffffff79;
  uint8 *in_stack_ffffffffffffff80;
  uint8 *in_stack_ffffffffffffff88;
  int in_stack_ffffffffffffff90;
  string in_stack_ffffffffffffff98;
  unkbyte9 in_stack_ffffffffffffffa8;
  undefined in_stack_ffffffffffffffb1;
  undefined4 in_stack_ffffffffffffffb4;
  int i;
  undefined5 local_2d;
  undefined auStack_28 [11];
  undefined5 uStack_1d;
  undefined local_18 [8];
  undefined8 local_10;
  
  while (local_18 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (net_netip_z0 != in_RCX) {
    if (net_netip_z4 == in_RCX) {
      ip.addr.hi._4_4_ = in_stack_ffffffffffffff6c;
      ip.addr.hi._0_4_ = in_stack_ffffffffffffff68;
      ip.addr.lo = in_stack_ffffffffffffff70;
      ip.z._0_1_ = in_stack_ffffffffffffff78;
      ip.z._1_7_ = in_stack_ffffffffffffff79;
      net_netip_Addr_As4(ip,in_EAX);
      local_2d = (undefined5)CONCAT44(in_XMM15_Db,in_XMM15_Da);
      auVar2._4_4_ = in_XMM15_Db;
      auVar2._0_4_ = in_XMM15_Da;
      auVar2._8_4_ = in_XMM15_Dc;
      auVar1._12_4_ = in_XMM15_Dd;
      auVar1._0_12_ = auVar2;
      auStack_28 = auVar2._0_11_;
      uStack_1d = auVar1._11_5_;
      base = 0;
      i_00 = &local_2d;
      for (iVar3 = 0; iVar3 < 4; iVar3 = iVar3 + 1) {
        dst.array._4_4_ = in_stack_ffffffffffffff6c;
        dst.array._0_4_ = in_stack_ffffffffffffff68;
        dst.len = in_stack_ffffffffffffff70;
        dst.cap._0_1_ = in_stack_ffffffffffffff78;
        dst.cap._1_7_ = in_stack_ffffffffffffff79;
        ~r0_04.len = (int)in_stack_ffffffffffffff88;
        ~r0_04.array = in_stack_ffffffffffffff80;
        ~r0_04.cap = in_stack_ffffffffffffff90;
        strconv_AppendUint(dst,(uint64)i_00,base,~r0_04);
        base = extraout_RBX_00 + 1;
        uVar6 = (&DAT_008ae783)[iVar3];
        i_00 = oldPtr;
        if (oldCap < base) {
