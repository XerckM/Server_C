  local_20._8_8_ = l;
  local_20._0_8_ = log___Logger__SetOutput_func1;
  local_10 = (code **)local_20;
  (l->out).tab = in_RBX;
  plVar2 = l;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RCX;
    extraout_R11[1] = (plVar2->out).data;
    pvStack0000000000000018 = extraout_RCX;
    in_RBX = extraout_RBX;
    in_DIL = extraout_DIL_00;
  }
  (plVar2->out).data = pvStack0000000000000018;
  if (io_Discard.tab == in_RBX) {
    runtime_ifaceeq(in_RBX,pvStack0000000000000018,io_Discard.data,(bool)in_DIL);
    bVar1 = extraout_AL;
  }
  else {
    bVar1 = 0;
    l = plVar2;
  }
  LOCK();
  (l->isDiscard).v = (dword)bVar1;
  UNLOCK();
  (**local_10)();
  return;
}



// WARNING: Unknown calling convention

void log___Logger__SetOutput_func1(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  sync___Mutex__Unlock(*(sync_Mutex **)(in_RDX + 8));
  return;
}



void log_formatHeader(__uint8 *buf,time_Time t,string prefix,int flag,string file,int line)

{
  uint8 *puVar1;
  char cVar2;
  uint8 *extraout_RAX;
  int extraout_RAX_00;
  int year;
  __uint8 *p_Var3;
  uint8 *extraout_RAX_01;
  uint8 *extraout_RAX_02;
  uint8 *extraout_RAX_03;
  uint8 *extraout_RAX_04;
  uint8 *extraout_RAX_05;
  uint8 *extraout_RAX_06;
  uint8 *extraout_RAX_07;
  uint8 *extraout_RAX_08;
  uint8 *extraout_RAX_09;
  uint8 *extraout_RAX_10;
  uint8 *extraout_RAX_11;
  uint8 *extraout_RAX_12;
  uint8 *extraout_RAX_13;
  uint8 *extraout_RAX_14;
  uint8 *extraout_RAX_15;
  uint8 *extraout_RAX_16;
  int extraout_RAX_17;
  int hour;
  uint8 *extraout_RAX_18;
  uint8 *extraout_RAX_19;
  uint8 *extraout_RAX_20;
  uint8 *extraout_RAX_21;
  uint8 *extraout_RAX_22;
  uint8 *extraout_RAX_23;
  uint8 *extraout_RAX_24;
  uint8 *extraout_RAX_25;
  uint8 *extraout_RAX_26;
  uint8 *extraout_RAX_27;
  uint8 *extraout_RAX_28;
  uint8 *extraout_RAX_29;
  uint8 *puVar4;
  void *extraout_RCX;
  int extraout_RCX_00;
  int day;
  void *extraout_RCX_01;
  void *extraout_RCX_02;
  void *extraout_RCX_03;
  int extraout_RCX_04;
  int bp_1;
  void *extraout_RCX_05;
  void *extraout_RCX_06;
  void *extraout_RCX_07;
  void *extraout_RCX_08;
  void *extraout_RCX_09;
  int extraout_RCX_10;
  int bp_2;
  void *extraout_RCX_11;
  void *extraout_RCX_12;
  int extraout_RCX_13;
  void *extraout_RCX_14;
  void *extraout_RCX_15;
  int extraout_RCX_16;
  int extraout_RCX_17;
  int sec;
  void *extraout_RCX_18;
  void *extraout_RCX_19;
  int extraout_RCX_20;
  int bp_5;
  void *extraout_RCX_21;
  void *extraout_RCX_22;
  int extraout_RCX_23;
  void *extraout_RCX_24;
  void *extraout_RCX_25;
  int extraout_RCX_26;
  int extraout_RCX_27;
  void *extraout_RCX_28;
  int iVar5;
  void *pvVar6;
  int i;
  int q_1;
  int iVar7;
  int q;
  int q_2;
  int q_3;
  int q_4;
  int q_5;
  int q_6;
  int q_7;
  void *extraout_RBX;
  int extraout_RBX_00;
  time_Month month;
  void *extraout_RBX_01;
  void *extraout_RBX_02;
  void *extraout_RBX_03;
  void *extraout_RBX_04;
  void *extraout_RBX_05;
  void *extraout_RBX_06;
  void *extraout_RBX_07;
  void *extraout_RBX_08;
  void *pvVar8;
  void *extraout_RBX_09;
  void *extraout_RBX_10;
  void *extraout_RBX_11;
  void *extraout_RBX_12;
  void *extraout_RBX_13;
  void *extraout_RBX_14;
  void *extraout_RBX_15;
  void *extraout_RBX_16;
  int bp_3;
  void *extraout_RBX_17;
  void *extraout_RBX_18;
  void *extraout_RBX_19;
  void *extraout_RBX_20;
  int extraout_RBX_21;
  int min;
  void *extraout_RBX_22;
  void *extraout_RBX_23;
  void *extraout_RBX_24;
  void *extraout_RBX_25;
  void *extraout_RBX_26;
  void *extraout_RBX_27;
  void *extraout_RBX_28;
  void *extraout_RBX_29;
  int bp_6;
  void *extraout_RBX_30;
  void *extraout_RBX_31;
  void *extraout_RBX_32;
  void *extraout_RBX_33;
  uint extraout_RBX_34;
  uint extraout_RBX_35;
  int bp_7;
  void *extraout_RBX_36;
  void *in_RSI;
  __uint8 *extraout_RSI;
  uint uVar9;
  __uint8 *extraout_RSI_00;
  int bp;
  int bp_4;
  __uint8 *extraout_RSI_01;
  time_Month in_RDI;
  size_t __n;
  size_t in_R8;
  void *newLen;
  uint in_R9;
  void *pvVar10;
  void *in_R10;
  void *in_R11;
  uint8 **extraout_R11;
  uint8 **extraout_R11_00;
  uint8 **extraout_R11_01;
  uint8 **extraout_R11_02;
  uint8 **extraout_R11_03;
  uint8 **extraout_R11_04;
  uint8 **extraout_R11_05;
  uint8 **extraout_R11_06;
  uint8 **extraout_R11_07;
  uint8 **extraout_R11_08;
  uint8 **extraout_R11_09;
  uint8 **extraout_R11_10;
  uint8 **extraout_R11_11;
  uint8 **extraout_R11_12;
  uint8 **extraout_R11_13;
  uint8 **extraout_R11_14;
  uint8 **extraout_R11_15;
  uint8 **extraout_R11_16;
  uint8 **extraout_R11_17;
  uint8 **extraout_R11_18;
  int unaff_R14;
  undefined in_XMM15 [16];
  uint uStack0000000000000040;
  void *pvStack0000000000000048;
  void *pvStack0000000000000050;
  runtime_slice in_stack_fffffffffffffe80;
  void *local_100;
  int local_f8;
  uint local_f0;
  undefined8 local_e8;
  undefined4 local_e0;
  undefined auStack_dc [12];
  undefined4 uStack_d0;
  undefined4 local_cc;
  undefined auStack_c8 [12];
  undefined4 uStack_bc;
  undefined4 local_b8;
  undefined auStack_b4 [12];
  undefined4 uStack_a8;
  undefined4 local_a4;
  undefined auStack_a0 [12];
  undefined4 uStack_94;
  undefined4 local_90;
  undefined auStack_8c [12];
  undefined4 uStack_80;
  undefined4 local_7c;
  undefined auStack_78 [12];
  undefined4 uStack_6c;
  undefined4 local_68;
  undefined auStack_64 [12];
  undefined4 uStack_58;
  undefined4 local_54;
  undefined auStack_50 [12];
  undefined4 uStack_44;
  time_Month local_40;
  void *local_38;
  uint8 *local_30;
  time_Month local_28;
  uint local_20;
  int local_18;
  undefined8 local_10;
  
  uStack0000000000000040 = in_R9;
  pvStack0000000000000048 = in_R10;
  pvStack0000000000000050 = in_R11;
  while (&local_100 <= *(void ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_e8 = (void *)(uint)((dword)uStack0000000000000040 & 0x40);
  p_Var3 = buf;
  if (local_e8 == (void *)0x0) {
    pvVar10 = (void *)buf->cap;
    local_100 = (void *)buf->len;
    pvVar6 = (void *)((int)local_100 + in_R8);
    local_30 = buf->array;
    local_f8 = line;
    local_f0 = flag;
    local_28 = in_RDI;
    if (pvVar10 < pvVar6) {
      runtime_growslice(local_30,(int)pvVar6,(int)pvVar10,in_R8,(internal_abi_Type *)&DAT_00807920,
                        in_stack_fffffffffffffe80);
      local_30 = extraout_RAX;
      pvVar10 = extraout_RCX;
      pvVar6 = extraout_RBX;
    }
    puVar4 = local_30 + (int)local_100;
    local_100 = pvVar10;
    runtime_memmove(puVar4,in_RSI,in_R8);
    buf->len = (int)pvVar6;
    buf->cap = (int)local_100;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = local_30;
      extraout_R11[1] = extraout_RSI->array;
      p_Var3 = extraout_RSI;
    }
    p_Var3->array = local_30;
    line = local_f8;
    flag = local_f0;
    in_RDI = local_28;
  }
  if ((uStack0000000000000040 & 7) != 0) {
    if (((dword)uStack0000000000000040 >> 5 & 1) != 0) {
      local_20 = flag;
      local_18 = line;
      if (flag < 0) {
        local_18 = ((uint)(flag << 1) >> 0x1f) + 0xdd7b17f80;
        local_20 = flag & 0x3fffffff;
      }
      local_10 = 0;
      in_RDI = 0;
      line = local_18;
      flag = local_20;
    }
    if ((uStack0000000000000040 & 1) != 0) {
      local_40 = in_RDI;
      time_Time_date((time_Time)in_stack_fffffffffffffe80,SUB81(flag,0),line,in_RDI,1,(int)in_RSI);
      local_54 = in_XMM15._0_4_;
      auStack_50 = in_XMM15._0_12_;
      uStack_44 = in_XMM15._12_4_;
      uVar9 = 0x13;
      iVar7 = extraout_RAX_00;
      for (iVar5 = 4; (cVar2 = (char)iVar7, 9 < iVar7 || (1 < iVar5)); iVar5 = iVar5 + -1) {
        iVar7 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar7),8) + iVar7 >> 3) -
                (iVar7 >> 0x3f);
        if (0x13 < uVar9) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        auStack_50[uVar9 - 4] = cVar2 + (char)iVar7 * -10 + '0';
        uVar9 = uVar9 - 1;
      }
      if (0x13 < uVar9) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      auStack_50[uVar9 - 4] = cVar2 + '0';
      pvVar6 = (void *)buf->cap;
      iVar7 = buf->len;
      pvVar10 = (void *)((iVar7 - uVar9) + 0x14);
      puVar4 = buf->array;
      local_100 = (void *)-(uVar9 - 0x14);
      if (pvVar6 < pvVar10) {
        runtime_growslice(puVar4,(int)pvVar10,(int)pvVar6,(int)local_100,
                          (internal_abi_Type *)&DAT_00807920,in_stack_fffffffffffffe80);
        puVar4 = extraout_RAX_08;
        pvVar6 = extraout_RCX_08;
        pvVar10 = extraout_RBX_09;
      }
      pvVar8 = local_100;
      local_100 = pvVar6;
      local_30 = puVar4;
      runtime_memmove(puVar4 + iVar7,auStack_50 + ((uVar9 & (int)(uVar9 - 0x14) >> 0x3f) - 4),
                      (size_t)pvVar8);
      buf->len = (int)pvVar10;
      buf->cap = (int)local_100;
      pvVar6 = local_100;
      p_Var3 = buf;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_05 = local_30;
        extraout_R11_05[1] = p_Var3->array;
        pvVar6 = extraout_RCX_09;
        pvVar10 = extraout_RBX_10;
      }
      p_Var3->array = local_30;
      pvVar10 = (void *)((int)pvVar10 + 1);
      puVar4 = local_30;
      if (pvVar6 < pvVar10) {
        runtime_growslice(local_30,(int)pvVar10,(int)pvVar6,1,(internal_abi_Type *)&DAT_00807920,
                          in_stack_fffffffffffffe80);
        buf->cap = extraout_RCX_10;
        puVar4 = extraout_RAX_09;
        p_Var3 = buf;
        pvVar10 = extraout_RBX_11;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_06 = extraout_RAX_10;
          extraout_R11_06[1] = p_Var3->array;
          puVar4 = extraout_RAX_10;
          pvVar10 = extraout_RBX_12;
        }
        p_Var3->array = puVar4;
      }
      p_Var3->len = (int)pvVar10;
      puVar4[(int)pvVar10 - 1] = 0x2f;
      local_68 = in_XMM15._0_4_;
      auStack_64 = in_XMM15._0_12_;
      uStack_58 = in_XMM15._12_4_;
      uVar9 = 0x13;
      iVar5 = extraout_RBX_00;
      for (iVar7 = 2; (cVar2 = (char)iVar5, 9 < iVar5 || (1 < iVar7)); iVar7 = iVar7 + -1) {
        iVar5 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar5),8) + iVar5 >> 3) -
                (iVar5 >> 0x3f);
        if (0x13 < uVar9) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        auStack_64[uVar9 - 4] = cVar2 + (char)iVar5 * -10 + '0';
        uVar9 = uVar9 - 1;
      }
      if (0x13 < uVar9) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      auStack_64[uVar9 - 4] = cVar2 + '0';
      pvVar6 = (void *)p_Var3->cap;
      iVar7 = p_Var3->len;
      pvVar10 = (void *)(iVar7 + (0x14 - uVar9));
      puVar4 = p_Var3->array;
      local_100 = (void *)-(uVar9 - 0x14);
      if (pvVar6 < pvVar10) {
        runtime_growslice(puVar4,(int)pvVar10,(int)pvVar6,(int)local_100,
                          (internal_abi_Type *)&DAT_00807920,in_stack_fffffffffffffe80);
        puVar4 = extraout_RAX_11;
        pvVar6 = extraout_RCX_11;
        pvVar10 = extraout_RBX_13;
      }
      pvVar8 = local_100;
      local_100 = pvVar6;
      local_30 = puVar4;
      runtime_memmove(puVar4 + iVar7,auStack_64 + ((uVar9 & (int)(uVar9 - 0x14) >> 0x3f) - 4),
                      (size_t)pvVar8);
      buf->len = (int)pvVar10;
      buf->cap = (int)local_100;
      pvVar6 = local_100;
      p_Var3 = buf;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_07 = local_30;
        extraout_R11_07[1] = p_Var3->array;
        pvVar6 = extraout_RCX_12;
        pvVar10 = extraout_RBX_14;
      }
      p_Var3->array = local_30;
      pvVar10 = (void *)((int)pvVar10 + 1);
      puVar4 = local_30;
      if (pvVar6 < pvVar10) {
        runtime_growslice(local_30,(int)pvVar10,(int)pvVar6,1,(internal_abi_Type *)&DAT_00807920,
                          in_stack_fffffffffffffe80);
        buf->cap = extraout_RCX_13;
        puVar4 = extraout_RAX_12;
        p_Var3 = buf;
        pvVar10 = extraout_RBX_15;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_08 = extraout_RAX_13;
          extraout_R11_08[1] = p_Var3->array;
          puVar4 = extraout_RAX_13;
          pvVar10 = extraout_RBX_16;
        }
        p_Var3->array = puVar4;
      }
      p_Var3->len = (int)pvVar10;
      puVar4[(int)pvVar10 - 1] = 0x2f;
      local_7c = in_XMM15._0_4_;
      auStack_78 = in_XMM15._0_12_;
      uStack_6c = in_XMM15._12_4_;
      uVar9 = 0x13;
      iVar5 = extraout_RCX_00;
      for (iVar7 = 2; (cVar2 = (char)iVar5, 9 < iVar5 || (1 < iVar7)); iVar7 = iVar7 + -1) {
        iVar5 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar5),8) + iVar5 >> 3) -
                (iVar5 >> 0x3f);
        if (0x13 < uVar9) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        auStack_78[uVar9 - 4] = cVar2 + (char)iVar5 * -10 + '0';
        uVar9 = uVar9 - 1;
      }
      if (0x13 < uVar9) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      auStack_78[uVar9 - 4] = cVar2 + '0';
      pvVar6 = (void *)p_Var3->cap;
      iVar7 = p_Var3->len;
      pvVar10 = (void *)(iVar7 + (0x14 - uVar9));
      puVar4 = p_Var3->array;
      local_100 = (void *)-(uVar9 - 0x14);
      if (pvVar6 < pvVar10) {
        runtime_growslice(puVar4,(int)pvVar10,(int)pvVar6,(int)local_100,
                          (internal_abi_Type *)&DAT_00807920,in_stack_fffffffffffffe80);
        puVar4 = extraout_RAX_14;
        pvVar6 = extraout_RCX_14;
        pvVar10 = extraout_RBX_17;
      }
      pvVar8 = local_100;
      local_100 = pvVar6;
      local_30 = puVar4;
      runtime_memmove(puVar4 + iVar7,auStack_78 + ((uVar9 & (int)(uVar9 - 0x14) >> 0x3f) - 4),
                      (size_t)pvVar8);
      buf->len = (int)pvVar10;
      buf->cap = (int)local_100;
      pvVar6 = local_100;
      p_Var3 = buf;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_09 = local_30;
        extraout_R11_09[1] = p_Var3->array;
        pvVar6 = extraout_RCX_15;
        pvVar10 = extraout_RBX_18;
      }
      p_Var3->array = local_30;
      pvVar10 = (void *)((int)pvVar10 + 1);
      puVar4 = local_30;
      if (pvVar6 < pvVar10) {
        runtime_growslice(local_30,(int)pvVar10,(int)pvVar6,1,(internal_abi_Type *)&DAT_00807920,
                          in_stack_fffffffffffffe80);
        buf->cap = extraout_RCX_16;
        puVar4 = extraout_RAX_15;
        p_Var3 = buf;
        pvVar10 = extraout_RBX_19;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_10 = extraout_RAX_16;
          extraout_R11_10[1] = p_Var3->array;
          puVar4 = extraout_RAX_16;
          pvVar10 = extraout_RBX_20;
        }
        p_Var3->array = puVar4;
      }
      p_Var3->len = (int)pvVar10;
      puVar4[(int)pvVar10 - 1] = 0x20;
      in_RDI = local_40;
    }
    if ((uStack0000000000000040 & 6) != 0) {
      time_Time_Clock((time_Time)in_stack_fffffffffffffe80,flag,line,in_RDI);
      local_90 = in_XMM15._0_4_;
      auStack_8c = in_XMM15._0_12_;
      uStack_80 = in_XMM15._12_4_;
      uVar9 = 0x13;
      iVar7 = extraout_RAX_17;
      for (iVar5 = 2; (cVar2 = (char)iVar7, 9 < iVar7 || (1 < iVar5)); iVar5 = iVar5 + -1) {
        iVar7 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar7),8) + iVar7 >> 3) -
                (iVar7 >> 0x3f);
        if (0x13 < uVar9) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        auStack_8c[uVar9 - 4] = cVar2 + (char)iVar7 * -10 + '0';
        uVar9 = uVar9 - 1;
      }
      if (0x13 < uVar9) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      auStack_8c[uVar9 - 4] = cVar2 + '0';
      pvVar6 = (void *)buf->cap;
      iVar7 = buf->len;
      pvVar10 = (void *)((iVar7 - uVar9) + 0x14);
      puVar4 = buf->array;
      local_100 = (void *)-(uVar9 - 0x14);
      if (pvVar6 < pvVar10) {
        runtime_growslice(puVar4,(int)pvVar10,(int)pvVar6,(int)local_100,
                          (internal_abi_Type *)&DAT_00807920,in_stack_fffffffffffffe80);
        puVar4 = extraout_RAX_18;
        pvVar6 = extraout_RCX_18;
        pvVar10 = extraout_RBX_22;
      }
      pvVar8 = local_100;
      local_100 = pvVar6;
      local_30 = puVar4;
      runtime_memmove(puVar4 + iVar7,auStack_8c + ((uVar9 & (int)(uVar9 - 0x14) >> 0x3f) - 4),
                      (size_t)pvVar8);
      buf->len = (int)pvVar10;
      buf->cap = (int)local_100;
      pvVar6 = local_100;
      p_Var3 = buf;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_11 = local_30;
        extraout_R11_11[1] = p_Var3->array;
        pvVar6 = extraout_RCX_19;
        pvVar10 = extraout_RBX_23;
      }
      p_Var3->array = local_30;
      pvVar10 = (void *)((int)pvVar10 + 1);
      puVar4 = local_30;
      if (pvVar6 < pvVar10) {
        runtime_growslice(local_30,(int)pvVar10,(int)pvVar6,1,(internal_abi_Type *)&DAT_00807920,
                          in_stack_fffffffffffffe80);
        buf->cap = extraout_RCX_20;
        puVar4 = extraout_RAX_19;
        p_Var3 = buf;
        pvVar10 = extraout_RBX_24;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_12 = extraout_RAX_20;
          extraout_R11_12[1] = p_Var3->array;
          puVar4 = extraout_RAX_20;
          pvVar10 = extraout_RBX_25;
        }
        p_Var3->array = puVar4;
      }
      p_Var3->len = (int)pvVar10;
      puVar4[(int)pvVar10 - 1] = 0x3a;
      local_a4 = in_XMM15._0_4_;
      auStack_a0 = in_XMM15._0_12_;
      uStack_94 = in_XMM15._12_4_;
      uVar9 = 0x13;
      iVar5 = extraout_RBX_21;
      for (iVar7 = 2; (cVar2 = (char)iVar5, 9 < iVar5 || (1 < iVar7)); iVar7 = iVar7 + -1) {
        iVar5 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar5),8) + iVar5 >> 3) -
                (iVar5 >> 0x3f);
        if (0x13 < uVar9) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        auStack_a0[uVar9 - 4] = cVar2 + (char)iVar5 * -10 + '0';
        uVar9 = uVar9 - 1;
      }
      if (0x13 < uVar9) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      auStack_a0[uVar9 - 4] = cVar2 + '0';
      pvVar6 = (void *)p_Var3->cap;
      iVar7 = p_Var3->len;
      pvVar10 = (void *)(iVar7 + (0x14 - uVar9));
      puVar4 = p_Var3->array;
      local_100 = (void *)-(uVar9 - 0x14);
      if (pvVar6 < pvVar10) {
        runtime_growslice(puVar4,(int)pvVar10,(int)pvVar6,(int)local_100,
                          (internal_abi_Type *)&DAT_00807920,in_stack_fffffffffffffe80);
        puVar4 = extraout_RAX_21;
        pvVar6 = extraout_RCX_21;
        pvVar10 = extraout_RBX_26;
      }
      pvVar8 = local_100;
      local_100 = pvVar6;
      local_30 = puVar4;
      runtime_memmove(puVar4 + iVar7,auStack_a0 + ((uVar9 & (int)(uVar9 - 0x14) >> 0x3f) - 4),
                      (size_t)pvVar8);
      buf->len = (int)pvVar10;
      buf->cap = (int)local_100;
      pvVar6 = local_100;
      p_Var3 = buf;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_13 = local_30;
        extraout_R11_13[1] = p_Var3->array;
        pvVar6 = extraout_RCX_22;
        pvVar10 = extraout_RBX_27;
      }
      p_Var3->array = local_30;
      pvVar10 = (void *)((int)pvVar10 + 1);
      puVar4 = local_30;
      if (pvVar6 < pvVar10) {
        runtime_growslice(local_30,(int)pvVar10,(int)pvVar6,1,(internal_abi_Type *)&DAT_00807920,
                          in_stack_fffffffffffffe80);
        buf->cap = extraout_RCX_23;
        puVar4 = extraout_RAX_22;
        p_Var3 = buf;
        pvVar10 = extraout_RBX_28;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_14 = extraout_RAX_23;
          extraout_R11_14[1] = p_Var3->array;
          puVar4 = extraout_RAX_23;
          pvVar10 = extraout_RBX_29;
        }
        p_Var3->array = puVar4;
      }
      p_Var3->len = (int)pvVar10;
      puVar4[(int)pvVar10 - 1] = 0x3a;
      local_b8 = in_XMM15._0_4_;
      auStack_b4 = in_XMM15._0_12_;
      uStack_a8 = in_XMM15._12_4_;
      uVar9 = 0x13;
      iVar5 = extraout_RCX_17;
      for (iVar7 = 2; (cVar2 = (char)iVar5, 9 < iVar5 || (1 < iVar7)); iVar7 = iVar7 + -1) {
        iVar5 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar5),8) + iVar5 >> 3) -
                (iVar5 >> 0x3f);
        if (0x13 < uVar9) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        auStack_b4[uVar9 - 4] = cVar2 + (char)iVar5 * -10 + '0';
        uVar9 = uVar9 - 1;
      }
      if (0x13 < uVar9) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      auStack_b4[uVar9 - 4] = cVar2 + '0';
      pvVar6 = (void *)p_Var3->cap;
      iVar7 = p_Var3->len;
      pvVar10 = (void *)(iVar7 + (0x14 - uVar9));
      puVar4 = p_Var3->array;
      local_100 = (void *)-(uVar9 - 0x14);
      if (pvVar6 < pvVar10) {
        runtime_growslice(puVar4,(int)pvVar10,(int)pvVar6,(int)local_100,
                          (internal_abi_Type *)&DAT_00807920,in_stack_fffffffffffffe80);
        puVar4 = extraout_RAX_24;
        pvVar6 = extraout_RCX_24;
        pvVar10 = extraout_RBX_30;
      }
      pvVar8 = local_100;
      local_100 = pvVar6;
      local_30 = puVar4;
      runtime_memmove(puVar4 + iVar7,auStack_b4 + ((uVar9 & (int)(uVar9 - 0x14) >> 0x3f) - 4),
                      (size_t)pvVar8);
      buf->len = (int)pvVar10;
      buf->cap = (int)local_100;
      pvVar6 = local_100;
      p_Var3 = buf;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_15 = local_30;
        extraout_R11_15[1] = p_Var3->array;
        pvVar6 = extraout_RCX_25;
        pvVar10 = extraout_RBX_31;
      }
      p_Var3->array = local_30;
      if (((dword)uStack0000000000000040 >> 2 & 1) != 0) {
        pvVar10 = (void *)((int)pvVar10 + 1);
        puVar4 = local_30;
        if (pvVar6 < pvVar10) {
          runtime_growslice(local_30,(int)pvVar10,(int)pvVar6,1,(internal_abi_Type *)&DAT_00807920,
                            in_stack_fffffffffffffe80);
          buf->cap = extraout_RCX_26;
          puVar4 = extraout_RAX_25;
          p_Var3 = buf;
          pvVar10 = extraout_RBX_32;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_16 = extraout_RAX_26;
            extraout_R11_16[1] = p_Var3->array;
            puVar4 = extraout_RAX_26;
            pvVar10 = extraout_RBX_33;
          }
          p_Var3->array = puVar4;
        }
        p_Var3->len = (int)pvVar10;
        puVar4[(int)pvVar10 - 1] = 0x2e;
        uVar9 = (uint)(int)(sdword)((dword)flag & 0x3fffffff) / 1000;
        local_cc = in_XMM15._0_4_;
        auStack_c8 = in_XMM15._0_12_;
        uStack_bc = in_XMM15._12_4_;
        bp_7 = 0x13;
        for (iVar7 = 6; (cVar2 = (char)uVar9, 9 < (int)uVar9 || (1 < iVar7)); iVar7 = iVar7 + -1) {
          uVar9 = ((int)(SUB168(SEXT816(-0x3333333333333333) * SEXT816((int)uVar9),8) + uVar9) >> 3)
                  - ((int)uVar9 >> 0x3f);
          if (0x13 < (uint)bp_7) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          auStack_c8[bp_7 + -4] = cVar2 + (char)uVar9 * -10 + '0';
          bp_7 = bp_7 + -1;
        }
        if (0x13 < (uint)bp_7) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        auStack_c8[bp_7 + -4] = cVar2 + '0';
        pvVar6 = (void *)p_Var3->cap;
        iVar7 = p_Var3->len;
        pvVar10 = (void *)(iVar7 + (0x14 - bp_7));
        puVar4 = p_Var3->array;
        local_100 = (void *)-(bp_7 + -0x14);
        if (pvVar6 < pvVar10) {
          runtime_growslice(puVar4,(int)pvVar10,(int)pvVar6,(int)local_100,
                            (internal_abi_Type *)&DAT_00807920,in_stack_fffffffffffffe80);
          puVar4 = extraout_RAX_29;
          pvVar6 = extraout_RCX_28;
          pvVar10 = extraout_RBX_36;
        }
        pvVar8 = local_100;
        local_100 = pvVar6;
        local_30 = puVar4;
        runtime_memmove(puVar4 + iVar7,auStack_c8 + ((bp_7 & bp_7 + -0x14 >> 0x3f) - 4),
                        (size_t)pvVar8);
        buf->len = (int)pvVar10;
        buf->cap = (int)local_100;
        p_Var3 = buf;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_18 = local_30;
          extraout_R11_18[1] = extraout_RSI_01->array;
          p_Var3 = extraout_RSI_01;
        }
        p_Var3->array = local_30;
      }
      uVar9 = p_Var3->len + 1;
      puVar4 = p_Var3->array;
      if ((uint)p_Var3->cap < uVar9) {
        runtime_growslice(puVar4,uVar9,p_Var3->cap,1,(internal_abi_Type *)&DAT_00807920,
                          in_stack_fffffffffffffe80);
        buf->cap = extraout_RCX_27;
        puVar4 = extraout_RAX_27;
        p_Var3 = buf;
        uVar9 = extraout_RBX_34;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_17 = extraout_RAX_28;
          extraout_R11_17[1] = p_Var3->array;
          puVar4 = extraout_RAX_28;
          uVar9 = extraout_RBX_35;
        }
        p_Var3->array = puVar4;
      }
      p_Var3->len = uVar9;
      puVar4[uVar9 - 1] = 0x20;
    }
  }
  if ((uStack0000000000000040 & 0x18) != 0) {
    pvVar6 = pvStack0000000000000050;
    if (((dword)uStack0000000000000040 >> 4 & 1) != 0) {
      do {
        pvVar10 = pvVar6;
        pvVar6 = (void *)((int)pvVar10 - 1);
        if ((int)pvVar6 < 1) goto LAB_0060cac3;
      } while (*(char *)((int)pvStack0000000000000048 + (int)pvVar6) != '/');
      pvStack0000000000000050 = (void *)((int)pvStack0000000000000050 + (-1 - (int)pvVar6));
      pvStack0000000000000048 =
           (void *)((int)pvStack0000000000000048 +
                   (-(int)pvStack0000000000000050 >> 0x3f & (uint)pvVar10));
    }
LAB_0060cac3:
    pvVar10 = (void *)p_Var3->cap;
    iVar7 = p_Var3->len;
    pvVar6 = (void *)((int)pvStack0000000000000050 + iVar7);
    puVar4 = p_Var3->array;
    if (pvVar10 < pvVar6) {
      local_100 = pvStack0000000000000050;
      local_38 = pvStack0000000000000048;
      runtime_growslice(puVar4,(int)pvVar6,(int)pvVar10,(int)pvStack0000000000000050,
                        (internal_abi_Type *)&DAT_00807920,in_stack_fffffffffffffe80);
      pvVar10 = extraout_RCX_02;
      pvVar6 = extraout_RBX_02;
      pvStack0000000000000048 = local_38;
      pvStack0000000000000050 = local_100;
      puVar4 = extraout_RAX_02;
    }
    local_100 = pvVar10;
    local_30 = puVar4;
    runtime_memmove(puVar4 + iVar7,pvStack0000000000000048,(size_t)pvStack0000000000000050);
    buf->len = (int)pvVar6;
    buf->cap = (int)local_100;
    pvVar10 = local_100;
    p_Var3 = buf;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_01 = local_30;
      extraout_R11_01[1] = p_Var3->array;
      pvVar10 = extraout_RCX_03;
      pvVar6 = extraout_RBX_03;
    }
    p_Var3->array = local_30;
    pvVar6 = (void *)((int)pvVar6 + 1);
    puVar4 = local_30;
    if (pvVar10 < pvVar6) {
      runtime_growslice(local_30,(int)pvVar6,(int)pvVar10,1,(internal_abi_Type *)&DAT_00807920,
                        in_stack_fffffffffffffe80);
      buf->cap = extraout_RCX_04;
      puVar4 = extraout_RAX_03;
      p_Var3 = buf;
      pvVar6 = extraout_RBX_04;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_02 = extraout_RAX_04;
        extraout_R11_02[1] = p_Var3->array;
        puVar4 = extraout_RAX_04;
        pvVar6 = extraout_RBX_05;
      }
      p_Var3->array = puVar4;
    }
    p_Var3->len = (int)pvVar6;
    puVar4[(int)pvVar6 - 1] = 0x3a;
    local_e0 = in_XMM15._0_4_;
    auStack_dc = in_XMM15._0_12_;
    uStack_d0 = in_XMM15._12_4_;
    uVar9 = 0x13;
    for (iVar7 = -1; (cVar2 = (char)t.wall, 9 < (int)t.wall || (1 < iVar7)); iVar7 = iVar7 + -1) {
      t.wall = ((int)(SUB168(SEXT816(-0x3333333333333333) * SEXT816((int)t.wall),8) + t.wall) >> 3)
               - ((int)t.wall >> 0x3f);
      if (0x13 < uVar9) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      auStack_dc[uVar9 - 4] = cVar2 + (char)t.wall * -10 + '0';
      uVar9 = uVar9 - 1;
    }
    if (0x13 < uVar9) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    auStack_dc[uVar9 - 4] = cVar2 + '0';
    pvVar6 = (void *)p_Var3->cap;
    local_100 = (void *)p_Var3->len;
    pvVar10 = (void *)((int)local_100 + (0x14 - uVar9));
    puVar4 = p_Var3->array;
    __n = -(uVar9 - 0x14);
    if (pvVar6 < pvVar10) {
      runtime_growslice(puVar4,(int)pvVar10,(int)pvVar6,__n,(internal_abi_Type *)&DAT_00807920,
                        in_stack_fffffffffffffe80);
      puVar4 = extraout_RAX_05;
      pvVar6 = extraout_RCX_05;
      pvVar10 = extraout_RBX_06;
    }
    puVar1 = puVar4 + (int)local_100;
    local_100 = pvVar6;
    local_30 = puVar4;
    runtime_memmove(puVar1,auStack_dc + ((uVar9 & (int)(uVar9 - 0x14) >> 0x3f) - 4),__n);
    buf->len = (int)pvVar10;
    buf->cap = (int)local_100;
    pvVar6 = local_100;
    p_Var3 = buf;
    pvVar8 = pvVar10;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_03 = local_30;
      extraout_R11_03[1] = p_Var3->array;
      pvVar6 = extraout_RCX_06;
      pvVar8 = extraout_RBX_07;
    }
    p_Var3->array = local_30;
    newLen = (void *)((int)pvVar8 + 2);
    puVar4 = local_30;
    if (pvVar6 < newLen) {
      runtime_growslice(local_30,(int)newLen,(int)pvVar6,2,(internal_abi_Type *)&DAT_00807920,
                        in_stack_fffffffffffffe80);
      puVar4 = extraout_RAX_06;
      pvVar6 = extraout_RCX_07;
      p_Var3 = buf;
      pvVar8 = pvVar10;
      newLen = extraout_RBX_08;
    }
    *(undefined2 *)(puVar4 + (int)pvVar8) = 0x203a;
    p_Var3->len = (int)newLen;
    p_Var3->cap = (int)pvVar6;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_04 = extraout_RAX_07;
      extraout_R11_04[1] = p_Var3->array;
      puVar4 = extraout_RAX_07;
    }
    p_Var3->array = puVar4;
  }
  if (local_e8 != (void *)0x0) {
    pvVar10 = (void *)p_Var3->cap;
    local_e8 = (void *)p_Var3->len;
    pvVar6 = (void *)((int)local_e8 + in_R8);
    puVar4 = p_Var3->array;
    if (pvVar10 < pvVar6) {
      runtime_growslice(puVar4,(int)pvVar6,(int)pvVar10,in_R8,(internal_abi_Type *)&DAT_00807920,
                        in_stack_fffffffffffffe80);
      pvVar10 = extraout_RCX_01;
      pvVar6 = extraout_RBX_01;
      puVar4 = extraout_RAX_01;
    }
    puVar1 = puVar4 + (int)local_e8;
    local_100 = pvVar10;
    local_e8 = pvVar6;
    local_30 = puVar4;
    runtime_memmove(puVar1,in_RSI,in_R8);
    buf->len = (int)local_e8;
    buf->cap = (int)local_100;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = local_30;
      extraout_R11_00[1] = extraout_RSI_00->array;
      buf = extraout_RSI_00;
    }
    buf->array = local_30;
  }
  return;
}



void log_glob__func1(interface___ ~r0)

{
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00801a20,in_RBX);
  return;
}



// WARNING: Unknown calling convention

void log_putBuffer(__uint8 *p)

{
  __uint8 *extraout_RAX;
  uint8 *puVar1;
  uint8 **extraout_R11;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_ffffffffffffffe0;
