  compress_flate_hcode *local_10;
  
  while (local_88._4_12_ = in_XMM15._4_12_, local_30 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  FUN_0046cda6();
  local_88._0_4_ = 1;
  runtime_makeslice((internal_abi_Type *)&DAT_00855240,0x1e,0x1e,~r0_00);
  local_10 = extraout_RAX;
  runtime_newobject((internal_abi_Type *)&DAT_008819a0,~r0);
  (extraout_RAX_00->codes).len = 0x1e;
  (extraout_RAX_00->codes).cap = 0x1e;
  h = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier3();
    *extraout_R11 = local_10;
    extraout_R11[1] = (compress_flate_hcode *)extraout_RAX_01;
    extraout_R11[2] = (compress_flate_hcode *)compress_flate_huffOffset;
    h = extraout_RAX_01;
  }
  (h->codes).array = local_10;
  compress_flate_huffOffset = h;
  compress_flate___huffmanEncoder__generate(h,in_stack_ffffffffffffff50,(int32)local_88);
  return;
}



void compress_flate_generateFixedLiteralEncoding(compress_flate_huffmanEncoder *~r0)

{
  int iVar1;
  int extraout_RAX;
  int *extraout_RAX_00;
  compress_flate_huffmanEncoder *h;
  int *extraout_RAX_01;
  int *piVar2;
  byte bVar3;
  uint16 ch;
  dword dVar4;
  uint16 bits;
  sdword sVar5;
  dword dVar6;
  void *~r0_00;
  uint16 size;
  void *in_RDI;
  uint uVar7;
  void *extraout_RDI;
  int *extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI;
  }
  runtime_makeslice((internal_abi_Type *)&DAT_00855240,0x11e,0x11e,in_RDI);
  runtime_newobject((internal_abi_Type *)&DAT_008819a0,~r0_00);
  extraout_RAX_00[1] = 0x11e;
  extraout_RAX_00[2] = 0x11e;
  piVar2 = extraout_RAX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = extraout_RAX;
    piVar2 = extraout_RAX_01;
  }
  *piVar2 = extraout_RAX;
  iVar1 = *piVar2;
  dVar4 = 0;
  while( true ) {
    ch = (uint16)dVar4;
    if (0x11d < ch) {
      return;
    }
    if (ch < 0x90) {
      sVar5 = dVar4 + 0x30;
      size = 8;
    }
    else if (ch < 0x100) {
      sVar5 = dVar4 + 0x100;
      size = 9;
    }
    else if (ch < 0x118) {
      sVar5 = dVar4 - 0x100;
      size = 7;
    }
    else {
      sVar5 = dVar4 - 0x58;
      size = 8;
    }
    uVar7 = (uint)(dVar4 & 0xffff);
    bVar3 = -((char)size + -0x10);
    dVar6 = sVar5 << (bVar3 & 0x1f) & -(dword)(bVar3 < 0x20);
    if (0x11d < uVar7) break;
    *(ushort *)(iVar1 + uVar7 * 4) =
         CONCAT11("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZgrpc: addrConn.createTransport failed to connect to %s. Err: %vHealth check is requested but health check function is not set.malformed GOMEMLIMIT; see `go doc runtime/debug.SetMemoryLimit`attempt to delete an entry (id=%d) that doesn\'t currently existtransport: received per-RPC creds error with illegal status: %vnet/trace: trace used after finish:\nFinished at:\n%s\nUsed at:\n%selementNoneelementScriptelementStyleelementTextareaelementTitleecdsa: internal error: P256OrdInverse produced an invalid valuegrpc: Compressor is not installed for requested grpc-encoding %qgrpc: client streaming protocol violation: get <nil>, want <EOF>runtime.SetFinalizer: first argument was allocated into an arenareflect.StructOf: struct size would exceed virtual address spacethe stream is rejected because server is draining the connectionjson: invalid number literal, trying to unmarshal %q into Numberheader key %q contains value with non-printable ASCII charactersextension %v has mismatching containing message: got %v, want %vABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credential..." /* TRUNCATED STRING LITERAL */
                  [(dVar6 & 0xff) + 0x2d22],
                  "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZgrpc: addrConn.createTransport failed to connect to %s. Err: %vHealth check is requested but health check function is not set.malformed GOMEMLIMIT; see `go doc runtime/debug.SetMemoryLimit`attempt to delete an entry (id=%d) that doesn\'t currently existtransport: received per-RPC creds error with illegal status: %vnet/trace: trace used after finish:\nFinished at:\n%s\nUsed at:\n%selementNoneelementScriptelementStyleelementTextareaelementTitleecdsa: internal error: P256OrdInverse produced an invalid valuegrpc: Compressor is not installed for requested grpc-encoding %qgrpc: client streaming protocol violation: get <nil>, want <EOF>runtime.SetFinalizer: first argument was allocated into an arenareflect.StructOf: struct size would exceed virtual address spacethe stream is rejected because server is draining the connectionjson: invalid number literal, trying to unmarshal %q into Numberheader key %q contains value with non-printable ASCII charactersextension %v has mismatching containing message: got %v, want %vABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credential..." /* TRUNCATED STRING LITERAL */
                  [(ushort)((ushort)dVar6 >> 8) + 0x2d22]);
    *(uint16 *)(iVar1 + uVar7 * 4 + 2) = size;
    dVar4 = dVar4 + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void compress_flate___huffmanEncoder__bitCounts
               (compress_flate_huffmanEncoder *h,__compress_flate_literalNode list,int32 maxBits,
               __int32 ~r0)

{
  sdword sVar1;
  sdword sVar2;
  int extraout_RAX;
  sdword in_ECX;
  sdword extraout_ECX;
  int bits;
  int32 level;
  sdword sVar3;
  sdword sVar4;
  dword dVar5;
  uint uVar6;
  undefined4 in_register_0000001c;
  int extraout_RBX;
  int32 level_1;
  uint in_RSI;
  uint in_RDI;
  uint uVar8;
  uint uVar9;
  uint extraout_R8;
  uint uVar10;
  uint uVar11;
  int32 n;
  int32 prevFreq;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_fffffffffffffa78;
  int32 local_548;
  sdword asStack_544 [15];
  undefined local_508 [256];
  sdword local_408 [256];
  uint uVar7;
  
  while (local_508 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = in_RSI & 0xffffffff;
  }
  if (0xf < (sdword)in_RSI) {
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_fffffffffffffa78);
  }
  if (in_RDI < (uint)(int)(sdword)(in_ECX + 1)) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  uVar6 = (uint)in_ECX;
  if ((uint)(int)(sdword)(in_ECX + 1) <= uVar6) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  *(undefined2 *)(CONCAT44(in_register_0000001c,maxBits) + uVar6 * 8) = 0xffff;
  *(undefined4 *)(CONCAT44(in_register_0000001c,maxBits) + uVar6 * 8 + 4) = 0x7fffffff;
  uVar6 = (uint)(dword)(in_ECX - 1U);
  if ((sdword)in_RSI <= (sdword)(in_ECX - 1U)) {
    uVar6 = in_RSI & 0xffffffff;
  }
  FUN_0046cd5d();
  runtime_duffzero();
  level_1 = 1;
  while( true ) {
    sVar3 = (sdword)uVar6;
    if (sVar3 < level_1) {
      uVar8 = (uint)sVar3;
      if (0xf < uVar8) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      asStack_544[uVar8 * 5 + 3] = extraout_ECX * 2 + -4;
      uVar7 = uVar6;
      while( true ) {
        while( true ) {
          while( true ) {
            sVar4 = (sdword)uVar7;
            uVar10 = (uint)sVar4;
            if (0xf < uVar10) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            sVar1 = asStack_544[uVar10 * 5 + 2];
            if ((sVar1 != 0x7fffffff) || (asStack_544[uVar10 * 5 + 1] != 0x7fffffff)) break;
            asStack_544[uVar10 * 5 + 3] = 0;
            dVar5 = sVar4 + 1;
            uVar7 = (uint)dVar5;
            if (0xf < (uint)(int)(sdword)dVar5) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            asStack_544[(sdword)dVar5 * 5 + 2] = 0x7fffffff;
          }
          sVar2 = asStack_544[uVar10 * 5];
          if (asStack_544[uVar10 * 5 + 1] < sVar1) {
            sVar4 = local_408[uVar10 * 0x11];
            asStack_544[uVar10 * 5] = asStack_544[uVar10 * 5 + 1];
            sVar4 = sVar4 + 1;
            local_408[uVar10 * 0x11] = sVar4;
            if (extraout_R8 <= (uint)(int)sVar4) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            asStack_544[uVar10 * 5 + 1] = *(sdword *)(extraout_RBX + 4 + sVar4 * 8);
          }
          else {
            asStack_544[uVar10 * 5] = sVar1;
            if (0xf < (uint)(int)(sdword)(sVar4 + -1)) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            if (local_408 + (sdword)(sVar4 + -1) * 0x10 != local_408 + uVar10 * 0x10) {
              runtime_memmove(local_408 + uVar10 * 0x10,local_408 + (sdword)(sVar4 + -1) * 0x10,
                              uVar10 << 2);
              uVar7 = uVar7 & 0xffffffff;
            }
            if (0xf < (uint)(int)(sdword)((&local_548)[uVar10 * 5] + -1)) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            asStack_544[(sdword)((&local_548)[uVar10 * 5] + -1) * 5 + 3] = 2;
          }
          uVar9 = uVar6 & 0xffffffff;
          sVar4 = asStack_544[uVar10 * 5 + 3];
          asStack_544[uVar10 * 5 + 3] = sVar4 + -1;
          uVar11 = uVar7;
          if (sVar4 == 1) break;
          do {
            uVar7 = uVar11;
            dVar5 = (sdword)uVar7 - 1;
            if (0xf < (uint)(int)(sdword)dVar5) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            uVar11 = (uint)dVar5;
          } while (0 < asStack_544[(sdword)dVar5 * 5 + 3]);
        }
        if (sVar3 == (&local_548)[uVar10 * 5]) {
          if (local_408[uVar8 * 0x11] != extraout_ECX) {
                    // WARNING: Subroutine does not return
            runtime_gopanic(in_stack_fffffffffffffa78);
          }
          bits = 1;
          while( true ) {
            sVar4 = (sdword)uVar9;
            if (sVar4 < 1) {
              return;
            }
            uVar9 = (uint)(dword)(sVar4 - 1U);
            if ((uint)(int)(sdword)(sVar3 + 1) <= (uint)bits) break;
            *(sdword *)(extraout_RAX + 0x30 + bits * 4) =
                 local_408[uVar8 * 0x10 + (int)sVar4] -
                 local_408[uVar8 * 0x10 + (int)(sdword)(sVar4 - 1U)];
            bits = bits + 1;
          }
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        uVar11 = (uint)(sdword)((&local_548)[uVar10 * 5] + 1);
        if (0xf < uVar11) break;
        asStack_544[uVar11 * 5 + 2] = sVar2 + asStack_544[uVar10 * 5];
        uVar7 = (uint)(dword)((sdword)uVar7 + 1);
      }
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (extraout_R8 < 2) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (extraout_R8 < 3) break;
    uVar8 = (uint)level_1;
    sVar3 = *(sdword *)(extraout_RBX + 0xc);
    sVar4 = *(sdword *)(extraout_RBX + 4);
    if (0xf < uVar8) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    sVar1 = *(sdword *)(extraout_RBX + 0x14);
    *(undefined (*) [16])(&local_548 + uVar8 * 5) = in_XMM15;
    *(undefined (*) [16])(asStack_544 + uVar8 * 5) = in_XMM15;
    (&local_548)[uVar8 * 5] = level_1;
    asStack_544[uVar8 * 5] = sVar3;
    asStack_544[uVar8 * 5 + 1] = sVar1;
    asStack_544[uVar8 * 5 + 2] = sVar3 + sVar4;
    local_408[uVar8 * 0x11] = 2;
    if (level_1 == 1) {
      asStack_544[uVar8 * 5 + 2] = 0x7fffffff;
    }
    level_1 = level_1 + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void compress_flate___huffmanEncoder__assignEncodingAndSize
               (compress_flate_huffmanEncoder *h,__int32 bitCount,__compress_flate_literalNode list)

{
  sdword sVar1;
  compress_flate_hcode *pcVar2;
  compress_flate_huffmanEncoder *extraout_RAX;
  compress_flate_huffmanEncoder *pcVar3;
  int iVar4;
  byte bVar5;
  int in_RCX;
  int n;
  int in_RBX;
  int in_RSI;
  uint16 code;
  dword dVar6;
  dword dVar7;
  uint in_R8;
  uint uVar8;
  compress_flate_literalNode *pcVar9;
  compress_flate_literalNode *extraout_R8;
  uint uVar10;
  int in_R9;
  int32 bits;
  compress_flate_literalNode **extraout_R11;
  int unaff_R14;
  int iStack0000000000000038;
  sort_Interface in_stack_ffffffffffffffc0;
  
  while (iStack0000000000000038 = in_R9, &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_R9 = iStack0000000000000038;
  }
  n = 0;
  dVar6 = 0;
  do {
    if (in_RCX <= n) {
      return;
    }
    sVar1 = *(sdword *)(in_RBX + n * 4);
    dVar6 = dVar6 << 1;
    uVar8 = in_R8;
    if ((n != 0) && (sVar1 != 0)) {
      uVar8 = in_R8 - (int)sVar1;
      if (in_R8 < uVar8) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      pcVar9 = (compress_flate_literalNode *)((uVar8 * 8 & (int)-(in_R9 - uVar8) >> 0x3f) + in_RSI);
      (h->lns).len = in_R8 - uVar8;
      (h->lns).cap = in_R9 - uVar8;
      pcVar3 = h;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_R8;
        extraout_R11[1] = (extraout_RAX->lns).array;
        pcVar3 = extraout_RAX;
        pcVar9 = extraout_R8;
      }
      (pcVar3->lns).array = pcVar9;
      sort_Sort(in_stack_ffffffffffffffc0);
      dVar6 = dVar6 & 0xffff;
      for (iVar4 = 0; in_R9 = iStack0000000000000038, iVar4 < (int)(in_R8 - uVar8);
          iVar4 = iVar4 + 1) {
        uVar10 = (uint)pcVar9[iVar4].literal;
        bVar5 = -((char)n + -0x10);
        dVar7 = dVar6 << (bVar5 & 0x1f) & -(dword)(bVar5 < 0x20);
        if ((uint)(h->codes).len <= uVar10) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        pcVar2 = (h->codes).array;
        pcVar2[uVar10].code =
             CONCAT11("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZgrpc: addrConn.createTransport failed to connect to %s. Err: %vHealth check is requested but health check function is not set.malformed GOMEMLIMIT; see `go doc runtime/debug.SetMemoryLimit`attempt to delete an entry (id=%d) that doesn\'t currently existtransport: received per-RPC creds error with illegal status: %vnet/trace: trace used after finish:\nFinished at:\n%s\nUsed at:\n%selementNoneelementScriptelementStyleelementTextareaelementTitleecdsa: internal error: P256OrdInverse produced an invalid valuegrpc: Compressor is not installed for requested grpc-encoding %qgrpc: client streaming protocol violation: get <nil>, want <EOF>runtime.SetFinalizer: first argument was allocated into an arenareflect.StructOf: struct size would exceed virtual address spacethe stream is rejected because server is draining the connectionjson: invalid number literal, trying to unmarshal %q into Numberheader key %q contains value with non-printable ASCII charactersextension %v has mismatching containing message: got %v, want %vABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credential..." /* TRUNCATED STRING LITERAL */
                      [(dVar7 & 0xff) + 0x2d22],
                      "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZgrpc: addrConn.createTransport failed to connect to %s. Err: %vHealth check is requested but health check function is not set.malformed GOMEMLIMIT; see `go doc runtime/debug.SetMemoryLimit`attempt to delete an entry (id=%d) that doesn\'t currently existtransport: received per-RPC creds error with illegal status: %vnet/trace: trace used after finish:\nFinished at:\n%s\nUsed at:\n%selementNoneelementScriptelementStyleelementTextareaelementTitleecdsa: internal error: P256OrdInverse produced an invalid valuegrpc: Compressor is not installed for requested grpc-encoding %qgrpc: client streaming protocol violation: get <nil>, want <EOF>runtime.SetFinalizer: first argument was allocated into an arenareflect.StructOf: struct size would exceed virtual address spacethe stream is rejected because server is draining the connectionjson: invalid number literal, trying to unmarshal %q into Numberheader key %q contains value with non-printable ASCII charactersextension %v has mismatching containing message: got %v, want %vABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credential..." /* TRUNCATED STRING LITERAL */
                      [(ushort)((ushort)dVar7 >> 8) + 0x2d22]);
        pcVar2[uVar10].len = (uint16)n;
        dVar6 = dVar6 + 1;
      }
    }
    n = n + 1;
    in_R8 = uVar8;
  } while( true );
}



void compress_flate___huffmanEncoder__generate
               (compress_flate_huffmanEncoder *h,__int32 freq,int32 maxBits)

{
  sdword sVar1;
  compress_flate_hcode *pcVar2;
  __compress_flate_literalNode list;
  __int32 bitCount;
  compress_flate_literalNode *extraout_RAX;
  compress_flate_literalNode *extraout_RAX_00;
  compress_flate_literalNode *pcVar3;
  compress_flate_huffmanEncoder *extraout_RAX_01;
  compress_flate_huffmanEncoder *pcVar4;
  int in_RCX;
  int i_1;
  uint uVar5;
  undefined4 in_register_0000001c;
  compress_flate_huffmanEncoder *extraout_RBX;
  void *in_RDI;
  compress_flate_literalNode *extraout_R8;
  int i;
  int count;
  int32 f;
  compress_flate_literalNode **extraout_R11;
  compress_flate_literalNode **extraout_R11_00;
  int unaff_R14;
  sort_Interface in_stack_ffffffffffffffa0;
  int in_stack_ffffffffffffffb0;
  __compress_flate_literalNode in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  pcVar4 = h;
  if ((h->freqcache).array == (compress_flate_literalNode *)0x0) {
    runtime_makeslice((internal_abi_Type *)&DAT_008551a0,0x11f,0x11f,in_RDI);
    (h->freqcache).len = 0x11f;
    (h->freqcache).cap = 0x11f;
    pcVar3 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_00;
      extraout_R11[1] = (extraout_RBX->freqcache).array;
      pcVar3 = extraout_RAX_00;
      pcVar4 = extraout_RBX;
    }
    (pcVar4->freqcache).array = pcVar3;
  }
  uVar5 = (pcVar4->freqcache).cap;
  if (uVar5 < in_RCX + 1U) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  pcVar3 = (pcVar4->freqcache).array;
  count = 0;
  for (i = 0; i < in_RCX; i = i + 1) {
    sVar1 = *(sdword *)(CONCAT44(in_register_0000001c,maxBits) + i * 4);
    if (sVar1 == 0) {
      if ((uint)(pcVar4->codes).len <= (uint)i) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      (pcVar4->codes).array[i].len = 0;
    }
    else {
      if (in_RCX + 1U <= (uint)count) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      pcVar3[count].literal = (uint16)i;
      pcVar3[count].freq = sVar1;
      count = count + 1;
    }
  }
  if (uVar5 < (uint)count) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  if (count < 3) {
    i_1 = 0;
    while( true ) {
      if (count <= i_1) {
        return;
      }
      uVar5 = (uint)pcVar3[i_1].literal;
      if ((uint)(pcVar4->codes).len <= uVar5) break;
      pcVar2 = (pcVar4->codes).array;
      pcVar2[uVar5].len = 1;
      pcVar2[uVar5].code = (uint16)i_1;
      i_1 = i_1 + 1;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  (pcVar4->lfs).len = count;
  (pcVar4->lfs).cap = uVar5;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_R8;
    extraout_R11_00[1] = (extraout_RAX_01->lfs).array;
    pcVar4 = extraout_RAX_01;
    pcVar3 = extraout_R8;
  }
  (pcVar4->lfs).array = pcVar3;
  sort_Sort(in_stack_ffffffffffffffa0);
  list.cap = in_stack_ffffffffffffffb0;
  list.array = (compress_flate_literalNode *)in_stack_ffffffffffffffa0.tab;
  list.len = (int)in_stack_ffffffffffffffa0.data;
  compress_flate___huffmanEncoder__bitCounts
            (h,list,(int32)pcVar3,(__int32)in_stack_ffffffffffffffb8);
  bitCount.cap = in_stack_ffffffffffffffb0;
  bitCount.array = (int32 *)in_stack_ffffffffffffffa0.tab;
  bitCount.len = (int)in_stack_ffffffffffffffa0.data;
  compress_flate___huffmanEncoder__assignEncodingAndSize(h,bitCount,in_stack_ffffffffffffffb8);
  return;
}



void compress_flate_byLiteral_Len(compress_flate_byLiteral s,int ~r0)

{
  return;
}



void compress_flate_byLiteral_Less(compress_flate_byLiteral s,int i,int j,bool ~r0)

{
  uint in_RSI;
  uint in_RDI;
  
  if ((uint)j <= in_RDI) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if (in_RSI < (uint)j) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void compress_flate_byLiteral_Swap(compress_flate_byLiteral s,int i,int j)

{
  undefined2 uVar1;
  undefined4 uVar2;
  undefined4 uVar3;
  uint in_RSI;
  uint in_RDI;
  
  if ((uint)j <= in_RDI) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  uVar2 = *(undefined4 *)(i + 4 + in_RDI * 8);
  if (in_RSI < (uint)j) {
    uVar3 = *(undefined4 *)(i + 4 + in_RSI * 8);
    uVar1 = *(undefined2 *)(i + in_RDI * 8);
    *(undefined2 *)(i + in_RDI * 8) = *(undefined2 *)(i + in_RSI * 8);
    *(undefined4 *)(i + 4 + in_RDI * 8) = uVar3;
    *(undefined2 *)(i + in_RSI * 8) = uVar1;
    *(undefined4 *)(i + 4 + in_RSI * 8) = uVar2;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void compress_flate_byFreq_Len(compress_flate_byFreq s,int ~r0)

{
  return;
}



void compress_flate_byFreq_Less(compress_flate_byFreq s,int i,int j,bool ~r0)

{
  uint in_RSI;
  uint in_RDI;
  
  if ((uint)j <= in_RDI) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if (in_RSI < (uint)j) {
    if (*(sdword *)(i + 4 + in_RSI * 8) == *(sdword *)(i + 4 + in_RDI * 8)) {
      return;
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void compress_flate_byFreq_Swap(compress_flate_byFreq s,int i,int j)

{
  undefined2 uVar1;
  undefined4 uVar2;
  undefined4 uVar3;
  uint in_RSI;
  uint in_RDI;
  
  if ((uint)j <= in_RDI) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  uVar2 = *(undefined4 *)(i + 4 + in_RDI * 8);
  if (in_RSI < (uint)j) {
    uVar3 = *(undefined4 *)(i + 4 + in_RSI * 8);
    uVar1 = *(undefined2 *)(i + in_RDI * 8);
    *(undefined2 *)(i + in_RDI * 8) = *(undefined2 *)(i + in_RSI * 8);
    *(undefined4 *)(i + 4 + in_RDI * 8) = uVar3;
    *(undefined2 *)(i + in_RSI * 8) = uVar1;
    *(undefined4 *)(i + 4 + in_RSI * 8) = uVar2;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void compress_flate_CorruptInputError_Error(compress_flate_CorruptInputError e,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  strconv_FormatInt(e,10,in_stack_ffffffffffffffd0);
  ~r0_00.len = unaff_RBP;
  ~r0_00.str = in_stack_fffffffffffffff0;
  runtime_concatstring2
            ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,~r0_00);
  return;
}



void compress_flate_InternalError_Error(compress_flate_InternalError e,string ~r0)

{
  string ~r0_00;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  string in_stack_ffffffffffffffe0;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0_00.len = unaff_RBP;
  ~r0_00.str = in_stack_fffffffffffffff0;
  runtime_concatstring2
            ((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffd0,in_stack_ffffffffffffffe0,~r0_00);
  return;
}



int compress_flate___huffmanDecoder__init(EVP_PKEY_CTX *ctx)

{
  int iVar1;
  dword dVar2;
  int iVar3;
  uint extraout_RAX;
  uint uVar4;
  undefined8 extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 uVar5;
  undefined8 extraout_RAX_02;
  undefined8 extraout_RAX_03;
  int i_1;
  int in_RCX;
  int iVar6;
  int max;
  uint extraout_RCX;
  int link;
  uint uVar7;
  uint extraout_RCX_00;
  int n_1;
  uint uVar8;
  int numLinks;
  int reverse;
  undefined (*pauVar9) [16];
  int in_RBX;
  int extraout_RBX;
  int extraout_RBX_00;
  undefined (*extraout_RSI) [16];
  undefined (*extraout_RSI_00) [16];
  int extraout_RSI_01;
  undefined8 *puVar10;
  int i;
  uint uVar11;
  uint uVar12;
  uint off;
  void *~r0;
  int extraout_RDI;
  int code_1;
  int reverse_1;
  int off_1;
  int j_1;
  int min;
  int n;
  int code;
  int off_2;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  byte bVar13;
  undefined in_XMM15 [16];
  undefined (*pauStack0000000000000008) [16];
  int iStack0000000000000010;
  int iStack0000000000000018;
  uint local_108 [8];
  undefined local_c8 [16];
  int local_b8;
  int local_88 [16];
  
  bVar13 = 0;
  pauStack0000000000000008 = (undefined (*) [16])ctx;
  iStack0000000000000018 = in_RCX;
  iStack0000000000000010 = in_RBX;
  while (local_c8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (*(int *)*pauStack0000000000000008 != 0) {
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_wbZero((internal_abi_Type *)&DAT_008783e0,pauStack0000000000000008);
    }
    *pauStack0000000000000008 = in_XMM15;
    puVar10 = (undefined8 *)(*pauStack0000000000000008 + 8);
    for (iVar6 = 0x104; iVar6 != 0; iVar6 = iVar6 + -1) {
      *puVar10 = 0;
      puVar10 = puVar10 + (uint)bVar13 * -2 + 1;
    }
  }
  iVar6 = iStack0000000000000018;
  FUN_0046cda2();
  max = 0;
  i = 0;
  for (iVar3 = 0; iVar3 < iVar6; iVar3 = iVar3 + 1) {
    uVar4 = *(uint *)(extraout_RBX + iVar3 * 8);
    min = i;
    if (uVar4 != 0) {
      min = uVar4;
      if ((i != 0) && (i <= (int)uVar4)) {
        min = i;
      }
      if (max < (int)uVar4) {
        max = uVar4;
      }
      if (0xf < uVar4) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      local_88[uVar4] = local_88[uVar4] + 1;
    }
    i = min;
  }
  if (max == 0) {
    return 1;
  }
  FUN_0046cda2();
  code = 0;
  for (uVar4 = extraout_RAX; (int)uVar4 <= (int)extraout_RCX; uVar4 = uVar4 + 1) {
    if (0xf < uVar4) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    local_108[uVar4] = code << 1;
    code = local_88[uVar4] + code * 2;
  }
  if ((code != (1 << ((byte)extraout_RCX & 0x3f) & -(uint)(extraout_RCX < 0x40))) &&
     ((code != 1 || (extraout_RCX != 1)))) {
    return 0;
  }
  *(uint *)*extraout_RSI = extraout_RAX;
  iVar3 = extraout_RBX_00;
  pauVar9 = extraout_RSI;
  if (9 < (int)extraout_RCX) {
    uVar8 = 1 << ((byte)(extraout_RCX - 9) & 0x3f) & -(uint)(extraout_RCX - 9 < 0x40);
    *(sdword *)extraout_RSI[0x82] = (sdword)(void *)(uVar8 - 1);
    uVar4 = local_b8 >> 1;
    iVar6 = -(uVar4 - 0x200);
    runtime_makeslice((internal_abi_Type *)&DAT_00801aa0,iVar6,iVar6,(void *)(uVar8 - 1));
    *(int *)pauStack0000000000000008[0x81] = iVar6;
    *(int *)(pauStack0000000000000008[0x81] + 8) = iVar6;
    uVar5 = extraout_RAX_00;
    pauVar9 = pauStack0000000000000008;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_01;
      extraout_R11[1] = *(undefined8 *)(extraout_RSI_00[0x80] + 8);
      uVar5 = extraout_RAX_01;
      pauVar9 = extraout_RSI_00;
    }
    *(undefined8 *)(pauVar9[0x80] + 8) = uVar5;
    uVar7 = uVar8;
    for (uVar11 = uVar4; iVar6 = iStack0000000000000018, iVar3 = iStack0000000000000010,
        uVar11 < 0x200; uVar11 = uVar11 + 1) {
      reverse = (int)(uint)CONCAT11("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZgrpc: addrConn.createTransport failed to connect to %s. Err: %vHealth check is requested but health check function is not set.malformed GOMEMLIMIT; see `go doc runtime/debug.SetMemoryLimit`attempt to delete an entry (id=%d) that doesn\'t currently existtransport: received per-RPC creds error with illegal status: %vnet/trace: trace used after finish:\nFinished at:\n%s\nUsed at:\n%selementNoneelementScriptelementStyleelementTextareaelementTitleecdsa: internal error: P256OrdInverse produced an invalid valuegrpc: Compressor is not installed for requested grpc-encoding %qgrpc: client streaming protocol violation: get <nil>, want <EOF>runtime.SetFinalizer: first argument was allocated into an arenareflect.StructOf: struct size would exceed virtual address spacethe stream is rejected because server is draining the connectionjson: invalid number literal, trying to unmarshal %q into Numberheader key %q contains value with non-printable ASCII charactersextension %v has mismatching containing message: got %v, want %vABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credential..." /* TRUNCATED STRING LITERAL */
                                    [(uVar11 & 0xff) + 0x2d22],
                                    "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZgrpc: addrConn.createTransport failed to connect to %s. Err: %vHealth check is requested but health check function is not set.malformed GOMEMLIMIT; see `go doc runtime/debug.SetMemoryLimit`attempt to delete an entry (id=%d) that doesn\'t currently existtransport: received per-RPC creds error with illegal status: %vnet/trace: trace used after finish:\nFinished at:\n%s\nUsed at:\n%selementNoneelementScriptelementStyleelementTextareaelementTitleecdsa: internal error: P256OrdInverse produced an invalid valuegrpc: Compressor is not installed for requested grpc-encoding %qgrpc: client streaming protocol violation: get <nil>, want <EOF>runtime.SetFinalizer: first argument was allocated into an arenareflect.StructOf: struct size would exceed virtual address spacethe stream is rejected because server is draining the connectionjson: invalid number literal, trying to unmarshal %q into Numberheader key %q contains value with non-printable ASCII charactersextension %v has mismatching containing message: got %v, want %vABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credential..." /* TRUNCATED STRING LITERAL */
                                    [((ushort)(uVar11 >> 8) & 0xff) + 0x2d22]) >> 7;
      uVar12 = uVar11 - uVar4;
      if (0x1ff < (uint)reverse) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      ~r0 = (void *)(uVar12 * 0x10 | 10);
      *(sdword *)(*pauVar9 + reverse * 4 + 8) = (sdword)~r0;
      runtime_makeslice((internal_abi_Type *)&DAT_008078e0,uVar7,uVar7,~r0);
      if (*(uint *)pauStack0000000000000008[0x81] <= uVar12) {
                    // WARNING: Subroutine does not return
        runtime_panicIndexU();
      }
      iVar6 = *(int *)(pauStack0000000000000008[0x80] + 8);
      iVar3 = uVar12 * 3;
      *(uint *)(iVar6 + 8 + uVar12 * 0x18) = uVar8;
      *(uint *)(iVar6 + 0x10 + uVar12 * 0x18) = uVar8;
      uVar5 = extraout_RAX_02;
      uVar7 = uVar8;
      pauVar9 = pauStack0000000000000008;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_00 = extraout_RAX_03;
        extraout_R11_00[1] = *(undefined8 *)(extraout_RDI + extraout_RSI_01 * 8);
        uVar5 = extraout_RAX_03;
        uVar7 = extraout_RCX_00;
        iVar3 = extraout_RSI_01;
        iVar6 = extraout_RDI;
      }
      *(undefined8 *)(iVar6 + iVar3 * 8) = uVar5;
    }
  }
  i_1 = 0;
  do {
    if (iVar6 <= i_1) {
      return 1;
    }
    uVar4 = *(uint *)(iVar3 + i_1 * 8);
    if (uVar4 != 0) {
      if (0xf < uVar4) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      uVar8 = local_108[uVar4];
      local_108[uVar4] = uVar8 + 1;
      dVar2 = (dword)(i_1 << 4) | (dword)uVar4;
      uVar8 = (int)(uint)CONCAT11("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZgrpc: addrConn.createTransport failed to connect to %s. Err: %vHealth check is requested but health check function is not set.malformed GOMEMLIMIT; see `go doc runtime/debug.SetMemoryLimit`attempt to delete an entry (id=%d) that doesn\'t currently existtransport: received per-RPC creds error with illegal status: %vnet/trace: trace used after finish:\nFinished at:\n%s\nUsed at:\n%selementNoneelementScriptelementStyleelementTextareaelementTitleecdsa: internal error: P256OrdInverse produced an invalid valuegrpc: Compressor is not installed for requested grpc-encoding %qgrpc: client streaming protocol violation: get <nil>, want <EOF>runtime.SetFinalizer: first argument was allocated into an arenareflect.StructOf: struct size would exceed virtual address spacethe stream is rejected because server is draining the connectionjson: invalid number literal, trying to unmarshal %q into Numberheader key %q contains value with non-printable ASCII charactersextension %v has mismatching containing message: got %v, want %vABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credential..." /* TRUNCATED STRING LITERAL */
                                  [(uVar8 & 0xff) + 0x2d22],
                                  "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZgrpc: addrConn.createTransport failed to connect to %s. Err: %vHealth check is requested but health check function is not set.malformed GOMEMLIMIT; see `go doc runtime/debug.SetMemoryLimit`attempt to delete an entry (id=%d) that doesn\'t currently existtransport: received per-RPC creds error with illegal status: %vnet/trace: trace used after finish:\nFinished at:\n%s\nUsed at:\n%selementNoneelementScriptelementStyleelementTextareaelementTitleecdsa: internal error: P256OrdInverse produced an invalid valuegrpc: Compressor is not installed for requested grpc-encoding %qgrpc: client streaming protocol violation: get <nil>, want <EOF>runtime.SetFinalizer: first argument was allocated into an arenareflect.StructOf: struct size would exceed virtual address spacethe stream is rejected because server is draining the connectionjson: invalid number literal, trying to unmarshal %q into Numberheader key %q contains value with non-printable ASCII charactersextension %v has mismatching containing message: got %v, want %vABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5received context error while waiting for new LB policy update: %suser arena chunk size is not a multiple of the physical page sizeruntime.SetFinalizer: pointer not at beginning of allocated blockbinarylogging: message to log is neither proto.message nor []bytex509: inner and outer signature algorithm identifiers don\'t matchx509: issuer name does not match subject from issuing certificatenistec: internal error: p224Table called with out-of-bounds valuenistec: internal error: p384Table called with out-of-bounds valuenistec: internal error: p521Table called with out-of-bounds valuegrpc: credentials.Bundle must return non-nil transport credential..." /* TRUNCATED STRING LITERAL */
                                  [((ushort)(uVar8 >> 8) & 0xff) + 0x2d22]) >>
              ((~-(-(uVar4 - 0x10) < 0x40) | (byte)-(uVar4 - 0x10)) & 0x3f);
      if ((int)uVar4 < 10) {
        for (; (int)uVar8 < 0x200; uVar8 = uVar8 + (1 << ((byte)uVar4 & 0x3f))) {
          if (0x1ff < uVar8) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          *(dword *)(*pauVar9 + uVar8 * 4 + 8) = dVar2;
        }
      }
      else {
        uVar7 = (uint)(*(dword *)(*pauVar9 + (uint)((dword)uVar8 & 0x1ff) * 4 + 8) >> 4);
        if (*(uint *)pauVar9[0x81] <= uVar7) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        uVar11 = *(uint *)(*(int *)(pauVar9[0x80] + 8) + 8 + uVar7 * 0x18);
        iVar1 = *(int *)(*(int *)(pauVar9[0x80] + 8) + uVar7 * 0x18);
        for (uVar8 = (int)uVar8 >> 9; (int)uVar8 < (int)uVar11;
            uVar8 = uVar8 + (1 << ((byte)(uVar4 - 9) & 0x3f) & -(uint)(uVar4 - 9 < 0x40))) {
          if (uVar11 <= uVar8) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          *(dword *)(iVar1 + uVar8 * 4) = dVar2;
        }
      }
    }
    i_1 = i_1 + 1;
  } while( true );
}



// WARNING: Unknown calling convention

void compress_flate___decompressor__nextBlock(compress_flate_decompressor *f)

{
  error ~r0;
  error ~r0_00;
  runtime_itab *extraout_RAX;
  compress_flate_decompressor *extraout_RAX_00;
  runtime_itab *extraout_RAX_01;
  void *extraout_RAX_02;
  void *extraout_RAX_03;
  void *pvVar1;
  dword dVar2;
  uint32 typ;
  compress_flate_decompressor *extraout_RCX;
  undefined8 extraout_RCX_00;
  compress_flate_decompressor *extraout_RCX_01;
  compress_flate_decompressor *extraout_RCX_02;
  compress_flate_decompressor *f_00;
  compress_flate_huffmanDecoder *pcVar3;
  void *in_RBX;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *extraout_RBX_01;
  void *extraout_RBX_02;
  compress_flate_huffmanDecoder *extraout_RBX_03;
  compress_flate_huffmanDecoder *pcVar4;
  void *extraout_RBX_04;
  void *unaff_RBP;
  void **extraout_R11;
  undefined8 *extraout_R11_00;
  void **extraout_R11_01;
  compress_flate_huffmanDecoder **extraout_R11_02;
  void **extraout_R11_03;
  int unaff_R14;
  compress_flate_decompressor *pcStack0000000000000008;
  runtime_itab *in_stack_fffffffffffffff0;
  
  while (pcStack0000000000000008 = f, &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    f = pcStack0000000000000008;
    in_RBX = extraout_RBX_04;
  }
  do {
    if (2 < f->nb) {
      f->final = (f->b & 1) != 0;
      dVar2 = f->b >> 1 & 3;
      f->b = f->b >> 3;
      f->nb = f->nb - 3;
      if (dVar2 == 0) {
        compress_flate___decompressor__dataBlock(f);
      }
      else if (dVar2 == 1) {
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_00 = extraout_RCX_00;
          extraout_R11_00[1] = extraout_RAX_00->hd;
          f = extraout_RAX_00;
        }
        f->hl = &compress_flate_fixedHuffmanDecoder;
        f->hd = (compress_flate_huffmanDecoder *)0x0;
        compress_flate___decompressor__huffmanBlock(f);
      }
      else if (dVar2 == 2) {
        ~r0_00.data = unaff_RBP;
        ~r0_00.tab = in_stack_fffffffffffffff0;
        compress_flate___decompressor__readHuffman(f,~r0_00);
        (pcStack0000000000000008->err).tab = extraout_RAX_01;
        f_00 = pcStack0000000000000008;
        pvVar1 = extraout_RBX_01;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_01 = extraout_RBX_02;
          extraout_R11_01[1] = (extraout_RCX_01->err).data;
          f_00 = extraout_RCX_01;
          pvVar1 = extraout_RBX_02;
        }
        (f_00->err).data = pvVar1;
        if ((f_00->err).tab == (runtime_itab *)0x0) {
          pcVar3 = &f_00->h1;
          pcVar4 = &f_00->h2;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier4();
            *extraout_R11_02 = pcVar3;
            extraout_R11_02[1] = extraout_RCX_02->hl;
            extraout_R11_02[2] = extraout_RBX_03;
            extraout_R11_02[3] = extraout_RCX_02->hd;
            f_00 = extraout_RCX_02;
            pcVar4 = extraout_RBX_03;
          }
          f_00->hl = pcVar3;
          f_00->hd = pcVar4;
          compress_flate___decompressor__huffmanBlock(f_00);
        }
      }
      else {
        runtime_convT64(f->roffset,in_RBX);
        (pcStack0000000000000008->err).tab =
             (runtime_itab *)go_itab_compress_flate_CorruptInputError_error;
