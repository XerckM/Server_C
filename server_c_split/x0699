  void *extraout_RBX;
  int unaff_R14;
  string sStack_20;
  strings_Builder *local_10;
  
  ~r0.str = in_RAX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = &sStack_20;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00851780,in_RBX);
  (sb->buf).array = (uint8 *)0x0;
  local_10 = sb;
  text_template_parse___BranchNode__writeTo((text_template_parse_BranchNode *)~r0.str,sb);
  puVar2 = (local_10->buf).array;
  if ((uint)(local_10->buf).len <= (uint)-(int)puVar2) {
    return;
  }
  if (puVar2 != (uint8 *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicunsafestringlen();
  }
                    // WARNING: Subroutine does not return
  runtime_panicunsafestringnilptr();
}



void text_template_parse_WithNode_Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___WithNode__Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___WithNode__tree(text_template_parse_Tree *~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void text_template_parse___WithNode__writeTo(strings_Builder *sb)

{
  int *piVar1;
  text_template_parse_BranchNode *in_RAX;
  int unaff_R14;
  text_template_parse_BranchNode *ptStack0000000000000008;
  strings_Builder *in_stack_00000010;
  undefined auStack_18 [16];
  
  ptStack0000000000000008 = in_RAX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000010 = sb;
    runtime_morestack_noctxt();
    sb = in_stack_00000010;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((text_template_parse_BranchNode **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_18;
  }
  text_template_parse___BranchNode__writeTo(ptStack0000000000000008,sb);
  return;
}



void text_template_parse_TemplateNode_Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___TemplateNode__Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse_TemplateNode_Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___TemplateNode__Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse_IdentifierNode_Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___IdentifierNode__Position(text_template_parse_Pos ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse_IdentifierNode_Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



void text_template_parse___IdentifierNode__Type(text_template_parse_NodeType ~r0)

{
  int *piVar1;
  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)register0x00000020;
  }
  return;
}



// WARNING: Unknown calling convention

void html_populateMaps(void)

{
  undefined4 uVar1;
  undefined8 uVar2;
  map_string_int32 h;
  undefined4 *extraout_RAX;
  map_string_int32 extraout_RAX_00;
  map_string_int32 phVar3;
  map_string__2_int32 h_00;
  undefined8 *extraout_RAX_01;
  map_string__2_int32 extraout_RAX_02;
  map_string__2_int32 phVar4;
  int iVar5;
  runtime_hmap *in_RDI;
  runtime_hmap *extraout_RDI;
  runtime_hmap *extraout_RDI_00;
  runtime_hmap *extraout_RDI_01;
  runtime_hmap *~r0;
  runtime_hmap *extraout_RDI_02;
  map_string_int32 *extraout_R11;
  map_string__2_int32 *extraout_R11_00;
  int unaff_R14;
  string in_stack_ffffffffffffffb0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RDI = extraout_RDI_02;
  }
  runtime_makemap((internal_abi_MapType *)&DAT_0082faa0,0x85a,(runtime_hmap *)0x0,in_RDI);
  ~r0 = extraout_RDI;
  for (iVar5 = 0; iVar5 < 0x85a; iVar5 = iVar5 + 1) {
    uVar1 = (&DAT_0096c790)[iVar5];
    runtime_mapassign_faststr
              ((internal_abi_MapType *)&DAT_0082faa0,(runtime_hmap *)h,in_stack_ffffffffffffffb0,
               (&PTR_s_AElig_Acirc_Alpha_Amacr_Aogon_Ar_00973548)[iVar5 * 2]);
    *extraout_RAX = uVar1;
    ~r0 = extraout_RDI_00;
  }
  phVar3 = h;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_00;
    extraout_R11[1] = html_entity;
    phVar3 = extraout_RAX_00;
    ~r0 = extraout_RDI_01;
  }
  html_entity = phVar3;
  runtime_makemap((internal_abi_MapType *)&DAT_00830760,0x5b,(runtime_hmap *)0x0,~r0);
  for (iVar5 = 0; iVar5 < 0x5b; iVar5 = iVar5 + 1) {
    uVar2 = (&DAT_0096a1d0)[iVar5];
    runtime_mapassign_faststr
              ((internal_abi_MapType *)&DAT_00830760,(runtime_hmap *)h_00,in_stack_ffffffffffffffb0,
               (&PTR_s_NotEqualTilde_varsubsetneqq_vars_0096b330)[iVar5 * 2]);
    *extraout_RAX_01 = uVar2;
  }
  phVar4 = h_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_02;
    extraout_R11_00[1] = html_entity2;
    phVar4 = extraout_RAX_02;
  }
  html_entity2 = phVar4;
  return;
}



void html_unescapeEntity(__uint8 b,int dst,int src,int dst1,int src1)

{
  void *__src;
  char cVar1;
  sdword sVar2;
  dword dVar3;
  __uint8 p;
  __uint8 p_00;
  __uint8 p_01;
  __uint8 p_02;
  __uint8 p_03;
  bool bVar4;
  sdword *extraout_RAX;
  undefined8 *extraout_RAX_00;
  int extraout_RAX_01;
  int dst1_1;
  sdword *extraout_RAX_02;
  void *pvVar5;
  uint8 c;
  int32 x;
  uint uVar6;
  int i;
  int iVar7;
  int32 x_1;
  uint in_RSI;
  int maxLen;
  int j;
  int32 x_2;
  int iVar8;
  bool hex;
  uint uVar9;
  uint uVar10;
  uint8 c_1;
  int iVar11;
  int unaff_R14;
  uint __n;
  string in_stack_ffffffffffffff80;
  int in_stack_ffffffffffffff90;
  sdword local_60;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((uint)src < in_RSI) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  iVar8 = src - in_RSI;
  uVar6 = dst1 - in_RSI;
  uVar9 = (int)-uVar6 >> 0x3f & in_RSI;
  __src = (void *)(uVar9 + dst);
  if (iVar8 < 2) {
    if ((uint)src <= in_RSI) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((uint)src1 < (uint)src) {
      *(undefined *)(dst + src1) = *(undefined *)(dst + in_RSI);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  sVar2 = (sdword)dst;
  dVar3 = (dword)src1;
  if (*(char *)(dst + 1 + uVar9) != '#') {
    __n = 1;
    do {
      uVar10 = __n;
      __n = uVar10;
      if (iVar8 <= (int)uVar10) goto LAB_0075b973;
      cVar1 = *(char *)(uVar10 + (int)__src);
      __n = uVar10 + 1;
    } while ((((byte)(cVar1 + 0x9fU) < 0x1a) || ((byte)(cVar1 + 0xbfU) < 0x1a)) ||
            ((byte)(cVar1 - 0x30U) < 10));
    if (cVar1 != ';') {
      __n = uVar10;
    }
LAB_0075b973:
    if (uVar6 < __n) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    if (__n == 0) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    pvVar5 = (void *)(dst + uVar9 + 1);
    if (__n != 1) {
      runtime_mapaccess1_faststr
                ((internal_abi_MapType *)&DAT_0082faa0,(runtime_hmap *)html_entity,
                 in_stack_ffffffffffffff80,pvVar5);
      if (*extraout_RAX != 0) {
        if ((uint)src1 <= (uint)src) {
          p.cap = in_stack_ffffffffffffff90;
          p.array = in_stack_ffffffffffffff80.str;
          p.len = in_stack_ffffffffffffff80.len;
          unicode_utf8_EncodeRune(p,((dword)(-(dst1 - src1) >> 0x3f) & dVar3) + sVar2,src - src1);
          return;
        }
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      runtime_mapaccess1_faststr
                ((internal_abi_MapType *)&DAT_00830760,(runtime_hmap *)html_entity2,
                 in_stack_ffffffffffffff80,pvVar5);
      local_60 = (sdword)*extraout_RAX_00;
      if (local_60 != 0) {
        if ((uint)src < (uint)src1) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        p_00.cap = in_stack_ffffffffffffff90;
        p_00.array = in_stack_ffffffffffffff80.str;
        p_00.len = in_stack_ffffffffffffff80.len;
        unicode_utf8_EncodeRune(p_00,((dword)(-(dst1 - src1) >> 0x3f) & dVar3) + sVar2,src - src1);
        uVar6 = extraout_RAX_01 + src1;
        if (uVar6 <= (uint)src) {
          p_01.cap = in_stack_ffffffffffffff90;
          p_01.array = in_stack_ffffffffffffff80.str;
          p_01.len = in_stack_ffffffffffffff80.len;
          unicode_utf8_EncodeRune
                    (p_01,((dword)((int)-(dst1 - uVar6) >> 0x3f) & (dword)uVar6) + sVar2,src - uVar6
                    );
          return;
        }
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      uVar9 = __n - 2;
      if (6 < (int)uVar9) {
        uVar9 = 6;
      }
      for (; 1 < (int)uVar9; uVar9 = uVar9 - 1) {
        if (uVar6 - 1 < uVar9) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAcap();
        }
        runtime_mapaccess1_faststr
                  ((internal_abi_MapType *)&DAT_0082faa0,(runtime_hmap *)html_entity,
                   in_stack_ffffffffffffff80,pvVar5);
        if (*extraout_RAX_02 != 0) {
          if ((uint)src1 <= (uint)src) {
            p_02.cap = in_stack_ffffffffffffff90;
            p_02.array = in_stack_ffffffffffffff80.str;
            p_02.len = in_stack_ffffffffffffff80.len;
            unicode_utf8_EncodeRune
                      (p_02,((dword)(-(dst1 - src1) >> 0x3f) & dVar3) + sVar2,src - src1);
            return;
          }
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
      }
    }
    if ((uint)dst1 < __n + src1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    if (__n + src1 < (uint)src1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    pvVar5 = (void *)(dst + (src1 - dst1 >> 0x3f & src1));
    if ((uint)dst1 < __n + in_RSI) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    if (in_RSI <= __n + in_RSI) {
      if (pvVar5 != __src) {
        runtime_memmove(pvVar5,__src,__n);
      }
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  if (iVar8 < 4) {
    if ((uint)src <= in_RSI) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((uint)src1 < (uint)src) {
      *(undefined *)(dst + src1) = *(undefined *)(dst + in_RSI);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  cVar1 = *(char *)(dst + 2 + uVar9);
  if ((cVar1 == 'x') || (cVar1 == 'X')) {
    bVar4 = true;
    iVar11 = 3;
  }
  else {
    bVar4 = false;
    iVar11 = 2;
  }
  do {
    while( true ) {
      iVar7 = iVar11;
      iVar11 = iVar7;
      if (iVar8 <= iVar7) goto LAB_0075bdd0;
      cVar1 = *(char *)(iVar7 + (int)__src);
      iVar11 = iVar7 + 1;
      if (bVar4) break;
      if (9 < (byte)(cVar1 - 0x30U)) goto LAB_0075bdc3;
    }
  } while ((((byte)(cVar1 - 0x30U) < 10) || ((byte)(cVar1 + 0x9fU) < 6)) ||
          ((byte)(cVar1 + 0xbfU) < 6));
LAB_0075bdc3:
  if (cVar1 != ';') {
    iVar11 = iVar7;
  }
LAB_0075bdd0:
  if (3 < iVar11) {
    if ((uint)src1 <= (uint)src) {
      p_03.cap = in_stack_ffffffffffffff90;
      p_03.array = in_stack_ffffffffffffff80.str;
      p_03.len = in_stack_ffffffffffffff80.len;
      unicode_utf8_EncodeRune(p_03,sVar2 + ((dword)(-(dst1 - src1) >> 0x3f) & dVar3),src - src1);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  if ((uint)src <= in_RSI) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if ((uint)src1 < (uint)src) {
    *(undefined *)(dst + src1) = *(undefined *)(dst + in_RSI);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void html_UnescapeString(string s,string ~r0)

{
  string s_00;
  string ~r0_00;
  __uint8 b;
  __uint8 b_00;
  __uint8 ~r0_01;
  uint8 *in_RAX;
  int i;
  uint8 *dst_00;
  uint extraout_RAX;
  int dst;
  uint extraout_RAX_00;
  uint n;
  uint dst1;
  uint in_RBX;
  uint src_00;
  uint extraout_RBX;
  int src;
  uint extraout_RBX_00;
  uint uVar1;
  size_t __n;
  size_t sVar2;
  uint uVar3;
  uint8 *puVar4;
  uint8 *__src;
  size_t sVar5;
  int unaff_R14;
  uint8 *puVar6;
  uint uVar7;
  undefined uVar8;
  undefined7 in_stack_ffffffffffffff81;
  size_t in_stack_ffffffffffffff88;
  int in_stack_ffffffffffffff90;
  uint8 local_38 [32];
  uint8 *local_18;
  uint8 *local_10;
  
  while (&local_10 <= *(uint8 ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (html_populateMapsOnce.done == 0) {
    sync___Once__doSlow(&html_populateMapsOnce,(func__ **)&PTR_html_populateMaps_008eccc8);
  }
  uVar8 = 0x26;
  puVar6 = in_RAX;
  uVar7 = in_RBX;
  internal_bytealg_IndexByteString();
  if ((int)in_stack_ffffffffffffff88 < 0) {
    return;
  }
  s_00.len = uVar7;
  s_00.str = puVar6;
  ~r0_01.array._1_7_ = in_stack_ffffffffffffff81;
  ~r0_01.array._0_1_ = uVar8;
  ~r0_01.len = in_stack_ffffffffffffff88;
  ~r0_01.cap = in_stack_ffffffffffffff90;
  sVar2 = in_stack_ffffffffffffff88;
  runtime_stringtoslicebyte(&local_38,s_00,~r0_01);
  b.len = uVar7;
  b.array = puVar6;
  b.cap._0_1_ = uVar8;
  b.cap._1_7_ = in_stack_ffffffffffffff81;
  local_18 = dst_00;
  html_unescapeEntity(b,(int)dst_00,src_00,dst1,in_stack_ffffffffffffff88);
  n = extraout_RAX;
  uVar1 = extraout_RBX;
  do {
    if (in_RBX < uVar1) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    uVar3 = in_RBX - uVar1;
    puVar4 = in_RAX + ((int)-uVar3 >> 0x3f & uVar1);
    if (uVar3 == 0) {
LAB_0075c206:
      if (dst1 < n) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
      ~r0_00.len = uVar7;
      ~r0_00.str = puVar6;
      runtime_slicebytetostring((runtime_tmpBuf *)0x0,local_18,n,~r0_00);
      return;
    }
    if (in_RBX <= uVar1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (in_RAX[uVar1] == 0x26) {
      sVar5 = 0;
      __src = puVar4;
    }
    else {
      uVar8 = 0x26;
      uVar7 = uVar3;
      sVar5 = sVar2;
      local_10 = puVar4;
      internal_bytealg_IndexByteString();
      __src = local_10;
      puVar6 = puVar4;
      sVar2 = sVar5;
    }
    if ((int)sVar5 < 0) {
      if (src_00 < n) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      sVar2 = src_00 - n;
      if ((int)uVar3 < (int)(src_00 - n)) {
        sVar2 = uVar3;
      }
      if (local_18 + ((int)(n - dst1) >> 0x3f & n) != __src) {
        runtime_memmove(local_18 + ((int)(n - dst1) >> 0x3f & n),__src,sVar2);
      }
      n = sVar2 + n;
      goto LAB_0075c206;
    }
    if (0 < (int)sVar5) {
      if (src_00 < n) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      if (in_RBX < sVar5 + uVar1) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAlen();
      }
      if (sVar5 + uVar1 < uVar1) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      __n = src_00 - n;
      if ((int)sVar5 < (int)(src_00 - n)) {
        __n = sVar5;
      }
      if (in_RAX + ((int)-sVar5 >> 0x3f & uVar1) != local_18 + ((int)(n - dst1) >> 0x3f & n)) {
        runtime_memmove(local_18 + ((int)(n - dst1) >> 0x3f & n),
                        in_RAX + ((int)-sVar5 >> 0x3f & uVar1),__n);
      }
    }
    b_00.len = uVar7;
    b_00.array = puVar6;
    b_00.cap._0_1_ = uVar8;
    b_00.cap._1_7_ = in_stack_ffffffffffffff81;
    html_unescapeEntity(b_00,(int)local_18,src_00,dst1,n + sVar5);
    n = extraout_RAX_00;
    uVar1 = extraout_RBX_00;
  } while( true );
}



int html_init(EVP_PKEY_CTX *ctx)

{
  string *dstPtr;
  strings_Replacer *extraout_RAX;
  strings_Replacer *extraout_RAX_00;
  strings_Replacer *psVar1;
  int extraout_RCX;
  void *~r0;
  int ~r0_00;
  string **extraout_R11;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffff20;
  undefined *local_a8;
  undefined8 local_a0;
  undefined *local_98;
  undefined8 local_90;
  undefined *local_88;
  undefined8 local_80;
  undefined *local_78;
  undefined8 local_70;
  undefined *local_68;
  undefined8 local_60;
  undefined *local_58;
  undefined8 local_50;
  undefined *local_48;
  undefined8 local_40;
  undefined *local_38;
  undefined8 local_30;
  undefined *local_28;
  undefined8 local_20;
  undefined *local_18;
  undefined8 local_10;
  
  while (&local_60 <= *(undefined8 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  FUN_0046cd94();
  local_a0 = 1;
  local_a8 = &DAT_0095c808;
  local_90 = 5;
  local_98 = &DAT_008aee30;
  local_80 = 1;
  local_88 = &DAT_0095a990;
  local_70 = 5;
  local_78 = &DAT_008aee3a;
  local_60 = 1;
  local_68 = &DAT_0095a8c0;
  local_50 = 4;
  local_58 = &DAT_008ae737;
  local_40 = 1;
  local_48 = &DAT_0095aa30;
  local_30 = 4;
  local_38 = &DAT_008ae73b;
  local_20 = 1;
  local_28 = &DAT_0095a758;
  local_10 = 5;
  local_18 = &DAT_008aee35;
  runtime_growslice((void *)0x0,10,0,10,(internal_abi_Type *)&DAT_008075e0,in_stack_ffffffffffffff20
                   );
  runtime_typedslicecopy((internal_abi_Type *)&DAT_008075e0,dstPtr,10,&local_a8,10,~r0_00);
  runtime_newobject((internal_abi_Type *)&DAT_008601c0,~r0);
  (extraout_RAX->oldnew).len = 10;
  (extraout_RAX->oldnew).cap = extraout_RCX;
  psVar1 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier3();
    *extraout_R11 = dstPtr;
    extraout_R11[1] = (string *)extraout_RAX_00;
    extraout_R11[2] = (string *)html_htmlEscaper;
    psVar1 = extraout_RAX_00;
  }
  (psVar1->oldnew).array = dstPtr;
  html_htmlEscaper = psVar1;
  return (int)psVar1;
}



// WARNING: Unknown calling convention

void text_template___state__pop(text_template_state *s,int mark)

{
  if ((uint)mark <= (uint)(s->vars).cap) {
    (s->vars).len = mark;
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceAcap();
}



void text_template___state__setVar(text_template_state *s,string name,reflect_Value value)

{
  char extraout_AL;
  text_template_variable *extraout_RAX;
  text_template_variable *ptVar1;
  int in_RCX;
  int extraout_RCX;
  int iVar2;
  uint uVar3;
  int i;
  void *in_RBX;
  internal_abi_Type *in_RSI;
  internal_abi_Type *in_RDI;
  reflect_flag in_R8;
  internal_abi_Type **extraout_R11;
  int unaff_R14;
  string in_stack_ffffffffffffff90;
  __interface___ in_stack_ffffffffffffffa0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar3 = (s->vars).len;
  while( true ) {
    uVar3 = uVar3 - 1;
    if ((int)uVar3 < 0) {
      runtime_convTstring(in_stack_ffffffffffffff90,in_RBX);
      text_template___state__errorf(s,in_stack_ffffffffffffff90,in_stack_ffffffffffffffa0);
      return;
    }
    if ((uint)(s->vars).len <= uVar3) break;
    iVar2 = uVar3 * 5;
    if ((in_RCX == (s->vars).array[uVar3].name.len) && (runtime_memequal(), extraout_AL != '\0')) {
      if ((uint)(s->vars).len <= uVar3) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      ptVar1 = (s->vars).array;
      ptVar1[uVar3].value.flag = in_R8;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier4();
        *extraout_R11 = in_RDI;
        extraout_R11[1] = (&(extraout_RAX->value).typ_)[extraout_RCX];
        extraout_R11[2] = in_RSI;
        extraout_R11[3] = (internal_abi_Type *)(&(extraout_RAX->value).ptr)[extraout_RCX];
        ptVar1 = extraout_RAX;
        iVar2 = extraout_RCX;
      }
      (&(ptVar1->value).typ_)[iVar2] = in_RDI;
      (&(ptVar1->value).ptr)[iVar2] = in_RSI;
      return;
    }
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void text_template___state__varValue(text_template_state *s,string name,reflect_Value ~r0)

{
  char extraout_AL;
  int in_RCX;
  uint uVar1;
  int i;
  void *in_RBX;
  int unaff_R14;
  string in_stack_ffffffffffffffa8;
  __interface___ in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar1 = (s->vars).len;
  while( true ) {
    uVar1 = uVar1 - 1;
    if ((int)uVar1 < 0) {
      runtime_convTstring(in_stack_ffffffffffffffa8,in_RBX);
      text_template___state__errorf(s,in_stack_ffffffffffffffa8,in_stack_ffffffffffffffb8);
      return;
    }
    if ((uint)(s->vars).len <= uVar1) break;
    if ((in_RCX == (s->vars).array[uVar1].name.len) && (runtime_memequal(), extraout_AL != '\0')) {
      if ((uint)(s->vars).len <= uVar1) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      return;
    }
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void text_template_isMissing(reflect_Value v,bool ~r0)

{
  reflect_Type ~r0_00;
  undefined7 in_register_00000001;
  void *x;
  runtime_itab *extraout_RAX;
  int in_RCX;
  undefined1 *tab;
  void *extraout_RBX;
  runtime_itab *unaff_RBP;
  undefined in_DIL;
  undefined extraout_DIL;
  undefined extraout_DIL_00;
  int unaff_R14;
  void *unaff_retaddr;
  reflect_Value in_stack_ffffffffffffffe0;
  
  x = (void *)CONCAT71(in_register_00000001,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL_00;
  }
  if (in_RCX != 0) {
    if (((dword)in_RCX >> 9 & 1) == 0) {
      tab = go_itab__reflect_rtype_reflect_Type;
    }
    else {
      ~r0_00.data = unaff_retaddr;
      ~r0_00.tab = unaff_RBP;
      reflect_Value_typeSlow(in_stack_ffffffffffffffe0,~r0_00);
      x = extraout_RBX;
      tab = (undefined1 *)extraout_RAX;
      in_DIL = extraout_DIL;
    }
    if (text_template_missingValReflectType.tab == (runtime_itab *)tab) {
      runtime_ifaceeq((runtime_itab *)tab,x,text_template_missingValReflectType.data,(bool)in_DIL);
    }
  }
  return;
}



void text_template_ExecError_Error(text_template_ExecError e,string ~r0)

{
  int in_RCX;
  undefined8 in_RDI;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  (**(code **)(in_RCX + 0x18))(in_RDI);
  return;
}



void text_template_ExecError_Unwrap(text_template_ExecError e,error ~r0)

{
  return;
}



void text_template___state__errorf(text_template_state *s,string format,__interface___ args)

{
  uint8 *puVar1;
  __interface___ a;
  __interface___ a_00;
  __interface___ a_01;
  string new;
  string context;
  string new_00;
  string ~r0;
  error ~r0_00;
  string ~r0_01;
  string ~r0_02;
  string ~r0_03;
  void *x;
  void *x_00;
  void *x_01;
  undefined8 extraout_RAX;
  undefined8 extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 extraout_RAX_02;
  undefined8 extraout_RAX_03;
  undefined8 extraout_RAX_04;
  int n;
  void *~r0_04;
  void *in_RBX;
  int unaff_R14;
  interface___ in_stack_ffffffffffffff00;
  string in_stack_ffffffffffffff10;
  uint8 *in_stack_ffffffffffffff20;
  runtime_itab *in_stack_ffffffffffffff28;
  uint8 *in_stack_ffffffffffffff30;
  int in_stack_ffffffffffffff38;
  int iVar2;
  undefined local_88 [32];
  undefined local_68 [16];
  undefined local_58 [16];
  undefined local_48 [16];
  undefined local_38 [16];
  undefined local_28 [16];
  undefined local_18 [16];
  
  while (local_88 + 8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  new.len = (int)in_stack_ffffffffffffff28;
  new.str = in_stack_ffffffffffffff20;
