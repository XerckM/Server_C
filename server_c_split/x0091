// WARNING: Unknown calling convention

void runtime_newstack(void)

{
  uint v;
  void **ppvVar1;
  dword dVar2;
  void **p;
  runtime_g *v_00;
  runtime_g *gp;
  void *pvVar3;
  int iVar4;
  uintptr uVar5;
  uint64 uVar6;
  void *pvVar7;
  runtime_g **pprVar8;
  void *pvVar9;
  string s;
  string s_00;
  string s_01;
  string s_02;
  string s_03;
  string s_04;
  string s_05;
  string s_06;
  string s_07;
  string s_08;
  string s_09;
  runtime_funcInfo ~r0;
  runtime_funcInfo f;
  string s_10;
  string s_11;
  string s_12;
  string s_13;
  string s_14;
  string s_15;
  string s_16;
  string s_17;
  string s_18;
  string s_19;
  string s_20;
  string s_21;
  string s_22;
  string s_23;
  string s_24;
  string s_25;
  string s_26;
  string s_27;
  string s_28;
  runtime_funcInfo ~r0_00;
  string s_29;
  string s_30;
  string s_31;
  string s_32;
  string s_33;
  string s_34;
  string s_35;
  string s_36;
  string s_37;
  string s_38;
  string s_39;
  string s_40;
  string s_41;
  string s_42;
  string s_43;
  string ~r0_01;
  string s_44;
  string s_45;
  string s_46;
  string s_47;
  string s_48;
  string s_49;
  string s_50;
  void *pvVar10;
  void *pc;
  void *lr;
  sdword extraout_EAX;
  int extraout_RAX;
  dword *extraout_RAX_00;
  int extraout_RAX_01;
  uint uVar11;
  uintptr oldsize;
  uint uVar12;
  uintptr max;
  uintptr needed;
  uintptr used;
  uintptr pcoff;
  runtime_moduledata *md;
  uintptr sp;
  int unaff_R14;
  runtime_g *thisg;
  runtime__func *in_stack_fffffffffffffe58;
  runtime_moduledata *in_stack_fffffffffffffe60;
  uintptr local_128;
  void *local_120;
  void *local_118;
  void *local_110;
  uintptr local_108;
  uintptr local_100;
  uintptr local_f8;
  uintptr stackguard0;
  runtime_gobuf morebuf;
  runtime_gobuf morebuf_2;
  runtime_gobuf morebuf_1;
  
  while (&local_128 <= *(uint64 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  p = *(void ***)(unaff_R14 + 0x30);
  v_00 = (runtime_g *)p[3];
  if (v_00->stackguard0 == 0xfffffffffffffb2e) {
    s_50.len = (int)in_stack_fffffffffffffe60;
    s_50.str = (uint8 *)in_stack_fffffffffffffe58;
                    // WARNING: Subroutine does not return
    runtime_throw(s_50);
  }
  gp = (runtime_g *)p[0x18];
  if (v_00 != gp) {
    pvVar3 = *p;
    pvVar9 = p[10];
    runtime_printlock();
    s_44.len = (int)in_stack_fffffffffffffe60;
    s_44.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_44);
    runtime_printhex((uint64)v_00);
    s_45.len = (int)in_stack_fffffffffffffe60;
    s_45.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_45);
    runtime_printpointer(p);
    s_46.len = (int)in_stack_fffffffffffffe60;
    s_46.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_46);
    runtime_printpointer(gp);
    s_47.len = (int)in_stack_fffffffffffffe60;
    s_47.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_47);
    runtime_printpointer(pvVar3);
    s_48.len = (int)in_stack_fffffffffffffe60;
    s_48.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_48);
    runtime_printpointer(pvVar9);
    runtime_printnl();
    runtime_printunlock();
    iVar4 = *(int *)(unaff_R14 + 0x30);
    runtime_traceback1(*(uintptr *)(iVar4 + 0x10),*(uintptr *)(iVar4 + 8),*(uintptr *)(iVar4 + 0x30)
                       ,*(runtime_g **)(iVar4 + 0x18),0);
    s_49.len = (int)in_stack_fffffffffffffe60;
    s_49.str = (uint8 *)in_stack_fffffffffffffe58;
                    // WARNING: Subroutine does not return
    runtime_throw(s_49);
  }
  if (gp->throwsplit != false) {
    pvVar3 = p[1];
    ppvVar1 = p + 2;
    pc = *ppvVar1;
    pvVar10 = *ppvVar1;
    pvVar9 = *ppvVar1;
    lr = p[6];
    pvVar7 = p[6];
    gp->syscallsp = (uintptr)pvVar3;
    gp->syscallpc = (uintptr)pvVar9;
    ~r0_00.datap = in_stack_fffffffffffffe60;
    ~r0_00._func = in_stack_fffffffffffffe58;
    runtime_findfunc((gp->sched).pc,~r0_00);
    if (extraout_RAX_00 == (dword *)0x0) {
      pcoff = 0;
    }
    else {
      ~r0_01.len = (int)in_stack_fffffffffffffe60;
      ~r0_01.str = (uint8 *)in_stack_fffffffffffffe58;
      runtime___moduledata__funcName(md,extraout_RAX_00[1],~r0_01);
      runtime___moduledata__textAddr(md,*extraout_RAX_00,(uint)*extraout_RAX_00);
      pcoff = (gp->sched).pc - extraout_RAX_01;
    }
    local_f8 = (gp->sched).sp;
    local_100 = (gp->stack).lo;
    local_108 = (gp->stack).hi;
    local_128 = (gp->sched).pc;
    uVar6 = (gp->sched).lr;
    pvVar9 = (gp->sched).ctxt;
    local_120 = pvVar7;
    local_118 = pvVar3;
    local_110 = pvVar10;
    runtime_printlock();
    s_29.len = (int)in_stack_fffffffffffffe60;
    s_29.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_29);
    s_30.len = (int)in_stack_fffffffffffffe60;
    s_30.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_30);
    s_31.len = (int)in_stack_fffffffffffffe60;
    s_31.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_31);
    runtime_printhex(pcoff);
    s_32.len = (int)in_stack_fffffffffffffe60;
    s_32.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_32);
    runtime_printhex(local_f8);
    s_33.len = (int)in_stack_fffffffffffffe60;
    s_33.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_33);
    runtime_printhex(local_100);
    s_34.len = (int)in_stack_fffffffffffffe60;
    s_34.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_34);
    runtime_printhex(local_108);
    s_35.len = (int)in_stack_fffffffffffffe60;
    s_35.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_35);
    runtime_printhex((uint64)local_110);
    s_36.len = (int)in_stack_fffffffffffffe60;
    s_36.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_36);
    runtime_printhex((uint64)local_118);
    s_37.len = (int)in_stack_fffffffffffffe60;
    s_37.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_37);
    runtime_printhex((uint64)local_120);
    s_38.len = (int)in_stack_fffffffffffffe60;
    s_38.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_38);
    runtime_printhex(local_128);
    s_39.len = (int)in_stack_fffffffffffffe60;
    s_39.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_39);
    runtime_printhex(local_f8);
    s_40.len = (int)in_stack_fffffffffffffe60;
    s_40.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_40);
    runtime_printhex(uVar6);
    s_41.len = (int)in_stack_fffffffffffffe60;
    s_41.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_41);
    runtime_printpointer(pvVar9);
    s_42.len = (int)in_stack_fffffffffffffe60;
    s_42.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_42);
    runtime_printunlock();
    *(undefined *)(*(int *)(unaff_R14 + 0x30) + 0x129) = 2;
    runtime_traceback1((uintptr)pc,(uintptr)pvVar3,(uintptr)lr,gp,0);
    s_43.len = (int)in_stack_fffffffffffffe60;
    s_43.str = (uint8 *)in_stack_fffffffffffffe58;
                    // WARNING: Subroutine does not return
    runtime_throw(s_43);
  }
  pvVar3 = p[1];
  pvVar9 = p[2];
  pvVar10 = p[6];
  *(undefined8 *)(*(int *)(unaff_R14 + 0x30) + 0x10) = 0;
  *(undefined8 *)(*(int *)(unaff_R14 + 0x30) + 0x30) = 0;
  *(undefined8 *)(*(int *)(unaff_R14 + 0x30) + 8) = 0;
  *(undefined8 *)(*(int *)(unaff_R14 + 0x30) + 0x18) = 0;
  stackguard0 = gp->stackguard0;
  if ((stackguard0 == 0xfffffffffffffade) &&
     ((((iVar4 = *(int *)(unaff_R14 + 0x30), *(sdword *)(iVar4 + 0x108) != 0 ||
        (*(sdword *)(iVar4 + 0xf0) != 0)) || (*(int *)(iVar4 + 0x100) != 0)) ||
      (*(sdword *)(*(int *)(iVar4 + 0xd0) + 4) != 1)))) {
    gp->stackguard0 = (gp->stack).lo + 0x3a0;
    in_stack_fffffffffffffe58 = (runtime__func *)&gp->sched;
    runtime_gogo();
  }
  uVar12 = (gp->stack).lo;
  if (uVar12 == 0) {
    s_28.len = (int)in_stack_fffffffffffffe60;
    s_28.str = (uint8 *)in_stack_fffffffffffffe58;
                    // WARNING: Subroutine does not return
    runtime_throw(s_28);
  }
  uVar5 = (gp->sched).sp;
  v = uVar5 - 8;
  if (v < uVar12) {
    local_108 = (gp->stack).hi;
    local_128 = (gp->sched).pc;
    uVar6 = (gp->sched).lr;
    pvVar7 = (gp->sched).ctxt;
    local_120 = pvVar10;
    local_118 = pvVar3;
    local_110 = pvVar9;
    local_100 = uVar5;
    local_f8 = uVar12;
    runtime_printlock();
    s.len = (int)in_stack_fffffffffffffe60;
    s.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s);
    runtime_printhex(v);
    s_00.len = (int)in_stack_fffffffffffffe60;
    s_00.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_00);
    runtime_printhex(local_f8);
    s_01.len = (int)in_stack_fffffffffffffe60;
    s_01.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_01);
    runtime_printhex(local_108);
    s_02.len = (int)in_stack_fffffffffffffe60;
    s_02.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_02);
    runtime_printhex((uint64)local_110);
    s_03.len = (int)in_stack_fffffffffffffe60;
    s_03.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_03);
    runtime_printhex((uint64)local_118);
    s_04.len = (int)in_stack_fffffffffffffe60;
    s_04.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_04);
    runtime_printhex((uint64)local_120);
    s_05.len = (int)in_stack_fffffffffffffe60;
    s_05.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_05);
    runtime_printhex(local_128);
    s_06.len = (int)in_stack_fffffffffffffe60;
    s_06.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_06);
    runtime_printhex(local_100);
    s_07.len = (int)in_stack_fffffffffffffe60;
    s_07.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_07);
    runtime_printhex(uVar6);
    s_08.len = (int)in_stack_fffffffffffffe60;
    s_08.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_08);
    runtime_printpointer(pvVar7);
    s_09.len = (int)in_stack_fffffffffffffe60;
    s_09.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_09);
    runtime_printunlock();
  }
  if (v < (gp->stack).lo) {
    dVar2 = (gp->atomicstatus).value;
    stackguard0 = gp->goid;
    runtime_printlock();
    s_21.len = (int)in_stack_fffffffffffffe60;
    s_21.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_21);
    runtime_printpointer(gp);
    s_22.len = (int)in_stack_fffffffffffffe60;
    s_22.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_22);
    runtime_printuint(stackguard0);
    s_23.len = (int)in_stack_fffffffffffffe60;
    s_23.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_23);
    runtime_printhex((uint)dVar2);
    s_24.len = (int)in_stack_fffffffffffffe60;
    s_24.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_24);
    runtime_printunlock();
    local_f8 = (gp->stack).lo;
    runtime_printlock();
    s_25.len = (int)in_stack_fffffffffffffe60;
    s_25.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_25);
    runtime_printhex(v);
    s_26.len = (int)in_stack_fffffffffffffe60;
    s_26.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_26);
    runtime_printhex(local_f8);
    runtime_printnl();
    runtime_printunlock();
    s_27.len = (int)in_stack_fffffffffffffe60;
    s_27.str = (uint8 *)in_stack_fffffffffffffe58;
                    // WARNING: Subroutine does not return
    runtime_throw(s_27);
  }
  if (stackguard0 == 0xfffffffffffffade) {
    pprVar8 = *(runtime_g ***)(unaff_R14 + 0x30);
    if (*pprVar8 == gp) {
      s_20.len = (int)in_stack_fffffffffffffe60;
      s_20.str = (uint8 *)in_stack_fffffffffffffe58;
                    // WARNING: Subroutine does not return
      runtime_throw(s_20);
    }
    if ((pprVar8[0x1a] == (runtime_g *)0x0) && (*(sdword *)(pprVar8 + 0x21) == 0)) {
      s_19.len = (int)in_stack_fffffffffffffe60;
      s_19.str = (uint8 *)in_stack_fffffffffffffe58;
                    // WARNING: Subroutine does not return
      runtime_throw(s_19);
    }
    if (gp->preemptShrink != false) {
      gp->preemptShrink = false;
      runtime_shrinkstack(gp);
    }
    if (gp->preemptStop != false) {
      runtime_preemptPark(gp);
    }
    runtime_gopreempt_m(gp);
  }
  uVar11 = (gp->stack).hi - (gp->stack).lo;
  ~r0.datap = in_stack_fffffffffffffe60;
  ~r0._func = in_stack_fffffffffffffe58;
  runtime_findfunc((gp->sched).pc,~r0);
  uVar12 = uVar11 * 2;
  if (extraout_RAX != 0) {
    f.datap = in_stack_fffffffffffffe60;
    f._func = in_stack_fffffffffffffe58;
    runtime_funcMaxSPDelta(f,(int32)extraout_RAX);
    for (; uVar12 - ((gp->stack).hi - (gp->sched).sp) < (int)extraout_EAX + 0x3a0U;
        uVar12 = uVar12 << 1) {
    }
  }
  if (stackguard0 == 0xfffffffffffffeed) {
    uVar12 = uVar11;
  }
  if ((uVar12 <= runtime_maxstacksize) && (uVar12 <= runtime_maxstackceiling)) {
    runtime_casgstatus(gp,2,8);
    runtime_copystack(gp,uVar12);
    runtime_casgstatus(gp,8,2);
    runtime_gogo();
    return;
  }
  if (runtime_maxstacksize < runtime_maxstackceiling) {
    runtime_printlock();
    s_10.len = (int)in_stack_fffffffffffffe60;
    s_10.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_10);
    runtime_printuint(runtime_maxstacksize);
    s_11.len = (int)in_stack_fffffffffffffe60;
    s_11.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_11);
    runtime_printunlock();
  }
  else {
    runtime_printlock();
    s_17.len = (int)in_stack_fffffffffffffe60;
    s_17.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_17);
    runtime_printuint(runtime_maxstackceiling);
    s_18.len = (int)in_stack_fffffffffffffe60;
    s_18.str = (uint8 *)in_stack_fffffffffffffe58;
    runtime_printstring(s_18);
    runtime_printunlock();
  }
  local_f8 = (gp->stack).lo;
  local_100 = (gp->stack).hi;
  runtime_printlock();
  s_12.len = (int)in_stack_fffffffffffffe60;
  s_12.str = (uint8 *)in_stack_fffffffffffffe58;
  runtime_printstring(s_12);
  runtime_printhex(v);
  s_13.len = (int)in_stack_fffffffffffffe60;
  s_13.str = (uint8 *)in_stack_fffffffffffffe58;
  runtime_printstring(s_13);
  runtime_printhex(local_f8);
  s_14.len = (int)in_stack_fffffffffffffe60;
  s_14.str = (uint8 *)in_stack_fffffffffffffe58;
  runtime_printstring(s_14);
  runtime_printhex(local_100);
  s_15.len = (int)in_stack_fffffffffffffe60;
  s_15.str = (uint8 *)in_stack_fffffffffffffe58;
  runtime_printstring(s_15);
  runtime_printunlock();
  s_16.len = (int)in_stack_fffffffffffffe60;
  s_16.str = (uint8 *)in_stack_fffffffffffffe58;
                    // WARNING: Subroutine does not return
  runtime_throw(s_16);
}



// WARNING: Unknown calling convention

void runtime_nilfunc(void)

{
  DAT_00000000 = 0;
  return;
}



// WARNING: Unknown calling convention

void runtime_gostartcallfn(runtime_gobuf *gobuf,runtime_funcval *fv)

{
  runtime_gobuf *extraout_RAX;
  void *fn;
  code *pcVar1;
  uintptr sp;
  runtime_funcval *extraout_RBX;
  runtime_funcval **extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (fv == (runtime_funcval *)0x0) {
    pcVar1 = runtime_nilfunc;
  }
  else {
    pcVar1 = (code *)fv->fn;
  }
  sp = gobuf->sp - 8;
  *(uintptr *)sp = gobuf->pc;
  gobuf->sp = sp;
  gobuf->pc = (uintptr)pcVar1;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RBX;
    extraout_R11[1] = (runtime_funcval *)extraout_RAX->ctxt;
    gobuf = extraout_RAX;
    fv = extraout_RBX;
  }
  gobuf->ctxt = fv;
  return;
}



// WARNING: Unknown calling convention

void runtime_shrinkstack(runtime_g *gp)

{
  dword dVar1;
  runtime_g *prVar2;
  uintptr uVar3;
  int extraout_RAX;
  uint32 s;
  uint uVar4;
  uintptr oldsize;
  uint newsize;
  uintptr used;
  runtime_g *unaff_R14;
  bool bVar5;
  runtime_funcInfo in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= (undefined *)unaff_R14->stackguard0) {
    runtime_morestack_noctxt();
  }
  if ((gp->stack).lo == 0) {
                    // WARNING: Subroutine does not return
    runtime_throw((string)in_stack_ffffffffffffffe8);
  }
  dVar1 = (gp->atomicstatus).value;
  if (((dVar1 >> 0xc & 1) == 0) &&
     (((prVar2 = unaff_R14->m->curg, gp != prVar2 || (unaff_R14 == prVar2)) || (dVar1 != 2)))) {
                    // WARNING: Subroutine does not return
    runtime_throw((string)in_stack_ffffffffffffffe8);
  }
  if (gp->syscallsp == 0) {
    if (gp->asyncSafePoint == false) {
      bVar5 = (gp->parkingOnChan).u.value == 0;
    }
    else {
      bVar5 = false;
    }
  }
  else {
    bVar5 = false;
  }
  if (bVar5) {
    if ((unaff_R14->m->curg == gp) && (gp->m->libcallsp != 0)) {
                    // WARNING: Subroutine does not return
      runtime_throw((string)in_stack_ffffffffffffffe8);
    }
    if (0 < runtime_debug.gcshrinkstackoff) {
      return;
    }
    runtime_findfunc(gp->startpc,in_stack_ffffffffffffffe8);
    if ((extraout_RAX != 0) && (*(char *)(extraout_RAX + 0x28) == '\x06')) {
      return;
    }
    uVar3 = (gp->stack).hi;
    uVar4 = uVar3 - (gp->stack).lo;
    newsize = uVar4 >> 1;
    if (newsize < 0x800) {
      return;
    }
    if (uVar4 >> 2 <= (uVar3 - (gp->sched).sp) + 800) {
      return;
    }
    runtime_copystack(gp,newsize);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_throw((string)in_stack_ffffffffffffffe8);
}



// WARNING: Unknown calling convention

void runtime_freeStackSpans(void)

{
  int i;
  int iVar1;
  runtime_mspan *s;
  runtime_mspan *next_1;
  runtime_mspan *prVar2;
  runtime_mspan *s_1;
  runtime_mspan *prVar3;
  runtime_mSpanList *list;
  runtime_mspan *next;
  int unaff_R14;
  int order;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  for (iVar1 = 0; iVar1 < 4; iVar1 = iVar1 + 1) {
    runtime_lock2((runtime_mutex *)(runtime_stackpool + iVar1));
    prVar3 = runtime_stackpool[iVar1].item.span.first;
    while (prVar2 = prVar3, prVar2 != (runtime_mspan *)0x0) {
      prVar3 = prVar2->next;
      if (prVar2->allocCount == 0) {
        runtime___mSpanList__remove((char *)&runtime_stackpool[iVar1].item.span);
        prVar2->manualFreeList = 0;
        runtime___mheap__freeManual(&runtime_mheap_,prVar2,1);
      }
    }
    runtime_unlock2((runtime_mutex *)(runtime_stackpool + iVar1));
  }
  runtime_lock2(&runtime_stackLarge.lock);
  for (i = 0; i < 0x23; i = i + 1) {
    prVar3 = runtime_stackLarge.free[i].first;
    while (prVar3 != (runtime_mspan *)0x0) {
      prVar2 = prVar3->next;
      runtime___mSpanList__remove((char *)(runtime_stackLarge.free + i));
      runtime___mheap__freeManual(&runtime_mheap_,prVar3,1);
      prVar3 = prVar2;
    }
  }
  runtime_unlock2(&runtime_stackLarge.lock);
  return;
}



// WARNING: Unknown calling convention

void runtime_gcComputeStartingStackSize(void)

{
  runtime_p *prVar1;
  uint64 uVar2;
  uint64 uVar3;
  runtime_p **pprVar4;
  int iVar5;
  int iVar6;
  uint s;
  uint64 scannedStacks;
  uint64 avg;
  uint uVar7;
  uint64 scannedStackSize;
  runtime_p *p;
  undefined4 in_XMM15_Da;
  undefined4 in_XMM15_Db;
  undefined4 in_XMM15_Dc;
  undefined4 in_XMM15_Dd;
  
  iVar5 = runtime_allp.len;
  pprVar4 = runtime_allp.array;
  if (runtime_debug.adaptivestackstart == 0) {
    return;
  }
  scannedStacks = 0;
  uVar7 = 0;
  for (iVar6 = 0; iVar6 < iVar5; iVar6 = iVar6 + 1) {
    prVar1 = pprVar4[iVar6];
    uVar2 = prVar1->scannedStackSize;
    uVar3 = prVar1->scannedStacks;
    *(undefined4 *)&prVar1->scannedStackSize = in_XMM15_Da;
    *(undefined4 *)((int)&prVar1->scannedStackSize + 4) = in_XMM15_Db;
    *(undefined4 *)&prVar1->scannedStacks = in_XMM15_Dc;
    *(undefined4 *)((int)&prVar1->scannedStacks + 4) = in_XMM15_Dd;
    uVar7 = uVar7 + uVar2;
    scannedStacks = scannedStacks + uVar3;
  }
  if (scannedStacks != 0) {
    uVar7 = uVar7 / scannedStacks + 0x3a0;
    if (runtime_maxstacksize < uVar7) {
      uVar7 = runtime_maxstacksize;
    }
    if (uVar7 < 0x800) {
      uVar7 = 0x800;
    }
    s = 0;
    while (runtime_startingStackSize = 1 << ((byte)s & 0x1f) & -(dword)(s < 0x20),
          (sdword)runtime_startingStackSize < (sdword)uVar7) {
      s = s + 1;
    }
    return;
  }
  runtime_startingStackSize = 0x800;
  return;
}



void runtime___stkframe__argBytes(runtime_stkframe *frame,uintptr ~r0)

{
  runtime_bitvector argMap;
  undefined hasReflectStackObj;
  undefined extraout_BL;
  uint8 *unaff_RBP;
  int unaff_R14;
  undefined8 in_stack_fffffffffffffff0;
  
  hasReflectStackObj = (undefined)~r0;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    hasReflectStackObj = extraout_BL;
  }
  if (((frame->fn)._func)->args != -0x80000000) {
    return;
  }
  argMap.bytedata = unaff_RBP;
  argMap._0_8_ = in_stack_fffffffffffffff0;
  runtime___stkframe__argMapInternal(frame,argMap,(bool)hasReflectStackObj);
  return;
}



void runtime___stkframe__argMapInternal
               (runtime_stkframe *frame,runtime_bitvector argMap,bool hasReflectStackObj)

{
  runtime__func *~r0;
  runtime_moduledata *md;
  int **ppiVar1;
  int *piVar2;
  uint64 v;
  uint64 v_00;
  uintptr uVar3;
  char extraout_AL;
  char extraout_AL_00;
  char cVar4;
  uintptr extraout_RAX;
  int extraout_RAX_00;
  int extraout_RAX_01;
  runtime_reflectMethodValue *mv;
  int extraout_RBX;
  uintptr minSP;
  int unaff_R14;
  string in_stack_ffffffffffffff80;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0 = (frame->fn)._func;
  if (~r0->args != -0x80000000) {
    return;
  }
  md = (frame->fn).datap;
  runtime___moduledata__funcName(md,~r0->nameOff,in_stack_ffffffffffffff80);
  if (extraout_RBX == 0x14) {
    runtime_memequal();
    cVar4 = extraout_AL_00;
  }
  else {
    if (extraout_RBX != 0x17) {
      return;
    }
    runtime_memequal();
    cVar4 = extraout_AL;
  }
  if (cVar4 != '\0') {
    ppiVar1 = (int **)frame->sp;
    minSP = frame->fp - 8;
    if (minSP <= ppiVar1) {
      runtime___moduledata__textAddr(md,~r0->entryOff,(uintptr)~r0);
      if (frame->pc != extraout_RAX) {
        runtime___moduledata__funcName(md,~r0->nameOff,in_stack_ffffffffffffff80);
        runtime___moduledata__textAddr(md,~r0->entryOff,(uint)~r0->entryOff);
        v = frame->sp;
        v_00 = frame->fp;
        uVar3 = frame->pc;
        runtime_printlock();
        runtime_printstring(in_stack_ffffffffffffff80);
        runtime_printstring(in_stack_ffffffffffffff80);
        runtime_printstring(in_stack_ffffffffffffff80);
        runtime_printhex(v);
        runtime_printstring(in_stack_ffffffffffffff80);
        runtime_printhex(v_00);
        runtime_printstring(in_stack_ffffffffffffff80);
        runtime_printhex(uVar3 - extraout_RAX_01);
        runtime_printnl();
        runtime_printunlock();
                    // WARNING: Subroutine does not return
        runtime_throw(in_stack_ffffffffffffff80);
      }
      return;
    }
    piVar2 = *ppiVar1;
    runtime___moduledata__textAddr(md,~r0->entryOff,(uint)*(byte *)(ppiVar1 + 4));
    if (*piVar2 != extraout_RAX_00) {
      runtime___moduledata__funcName(md,~r0->nameOff,in_stack_ffffffffffffff80);
      runtime_printlock();
      runtime_printstring(in_stack_ffffffffffffff80);
      runtime_printstring(in_stack_ffffffffffffff80);
      runtime_printnl();
      runtime_printunlock();
                    // WARNING: Subroutine does not return
      runtime_throw(in_stack_ffffffffffffff80);
    }
  }
  return;
}



void runtime___stkframe__getStackMap
               (runtime_stkframe *frame,runtime_pcvalueCache *cache,bool debug,
               runtime_bitvector locals,runtime_bitvector args,__runtime_stackObjectRecord objs)

{
  sdword sVar1;
  undefined auVar2 [16];
  sdword extraout_EAX;
  int32 pcdata;
  int32 stackid;
  sdword extraout_EAX_00;
  uintptr extraout_RAX;
  char extraout_CL;
  bool isReflect;
  uint32 off_1;
  uintptr targetpc;
  uint64 uVar3;
  uintptr size;
  uintptr p_2;
  uintptr mask_1;
  uintptr n;
  uint32 off;
  int extraout_RBX;
  uintptr uVar4;
  uintptr p_1;
  uintptr mask;
  uint32 off_2;
  uintptr base;
  uintptr raw;
  runtime_stackmap *stkmap;
  uintptr mask_2;
  uintptr base_1;
  uintptr raw_1;
  void *p;
  uintptr base_2;
  uintptr raw_2;
  runtime_stackmap *stackmap;
  int unaff_R14;
  runtime_funcInfo in_stack_ffffffffffffff20;
  int local_60;
  runtime_moduledata *local_58;
  runtime__func *local_50;
  runtime_stackmap *local_28;
  runtime_stackmap *local_20;
  uint8 *local_18;
  runtime_pcvalueCache *local_10;
  
  while (&local_60 <= *(int **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar4 = frame->continpc;
  if (uVar4 == 0) {
    return;
  }
  local_50 = (frame->fn)._func;
  local_58 = (frame->fn).datap;
  local_10 = cache;
  runtime___moduledata__textAddr(local_58,local_50->entryOff,(uintptr)local_50);
  if (extraout_RAX == uVar4) {
    stackid = -1;
  }
  else {
    uVar4 = uVar4 - 1;
    runtime_pcdatavalue(in_stack_ffffffffffffff20,(uint32)local_50,(uintptr)local_58,
                        (runtime_pcvalueCache *)&DAT_00000001,(int32)uVar4);
    stackid = extraout_EAX;
  }
  uVar3 = frame->varp - frame->sp;
  if (stackid == -1) {
    stackid = 0;
  }
  if (uVar3 == 0) {
    local_18 = (uint8 *)0x0;
  }
  else {
    if (local_50->nfuncdata < 2) {
      stkmap = (runtime_stackmap *)0x0;
    }
    else {
      p_1 = (uintptr)*(dword *)(local_50[1]._ + (uint)local_50->npcdata * 4 + -0x26);
      mask = (*(dword *)(local_50[1]._ + (uint)local_50->npcdata * 4 + -0x26) == 0xffffffff) - 1;
      stkmap = (runtime_stackmap *)(local_58->gofunc + p_1 & mask);
    }
    if ((stkmap == (runtime_stackmap *)0x0) || (stkmap->n < 1)) {
      runtime___moduledata__funcName(local_58,local_50->nameOff,(string)in_stack_ffffffffffffff20);
      uVar4 = frame->varp;
      runtime_printlock();
      runtime_printstring((string)in_stack_ffffffffffffff20);
      runtime_printstring((string)in_stack_ffffffffffffff20);
      runtime_printstring((string)in_stack_ffffffffffffff20);
      runtime_printhex(uVar4 - uVar3);
      runtime_printstring((string)in_stack_ffffffffffffff20);
      runtime_printhex(uVar3);
      runtime_printnl();
      runtime_printunlock();
                    // WARNING: Subroutine does not return
      runtime_throw((string)in_stack_ffffffffffffff20);
    }
    if (stkmap->nbit < 1) {
      local_18 = (uint8 *)0x0;
    }
    else {
      local_20 = stkmap;
      if ((stackid < 0) || (stkmap->n <= stackid)) {
        local_60 = (int)stackid;
        runtime___moduledata__funcName(local_58,local_50->nameOff,(string)in_stack_ffffffffffffff20)
        ;
        sVar1 = local_20->n;
        runtime_printlock();
        runtime_printstring((string)in_stack_ffffffffffffff20);
        runtime_printint(local_60);
        runtime_printstring((string)in_stack_ffffffffffffff20);
        runtime_printint((int)sVar1);
        runtime_printstring((string)in_stack_ffffffffffffff20);
        runtime_printstring((string)in_stack_ffffffffffffff20);
        runtime_printstring((string)in_stack_ffffffffffffff20);
        runtime_printhex(uVar4);
        runtime_printstring((string)in_stack_ffffffffffffff20);
        runtime_printunlock();
                    // WARNING: Subroutine does not return
        runtime_throw((string)in_stack_ffffffffffffff20);
      }
      local_18 = stkmap->bytedata + (sdword)(((sdword)(stkmap->nbit + 7) >> 3) * stackid);
    }
  }
  runtime___stkframe__argMapInternal
            (frame,(runtime_bitvector)in_stack_ffffffffffffff20,SUB81(local_18,0));
  if ((0 < extraout_EAX_00) && (extraout_RBX == 0)) {
    if (local_50->nfuncdata == 0) {
      local_28 = (runtime_stackmap *)0x0;
    }
    else {
      mask_2 = (*(dword *)(local_50[1]._ + (uint)local_50->npcdata * 4 + -0x2a) == 0xffffffff) - 1;
      local_28 = (runtime_stackmap *)
                 (local_58->gofunc +
                  (uint)*(dword *)(local_50[1]._ + (uint)local_50->npcdata * 4 + -0x2a) & mask_2);
    }
    if ((local_28 == (runtime_stackmap *)0x0) || (local_28->n < 1)) {
      runtime___moduledata__funcName(local_58,local_50->nameOff,(string)in_stack_ffffffffffffff20);
      uVar3 = frame->argp;
      runtime_printlock();
      runtime_printstring((string)in_stack_ffffffffffffff20);
      runtime_printstring((string)in_stack_ffffffffffffff20);
      runtime_printstring((string)in_stack_ffffffffffffff20);
      runtime_printhex(uVar3);
      runtime_printstring((string)in_stack_ffffffffffffff20);
      runtime_printhex((int)(sdword)(extraout_EAX_00 << 3));
      runtime_printnl();
      runtime_printunlock();
                    // WARNING: Subroutine does not return
      runtime_throw((string)in_stack_ffffffffffffff20);
    }
    if ((stackid < 0) || (local_28->n <= stackid)) {
      local_60 = (int)stackid;
      runtime___moduledata__funcName(local_58,local_50->nameOff,(string)in_stack_ffffffffffffff20);
      sVar1 = local_28->n;
      runtime_printlock();
      runtime_printstring((string)in_stack_ffffffffffffff20);
      runtime_printint(local_60);
      runtime_printstring((string)in_stack_ffffffffffffff20);
      runtime_printint((int)sVar1);
      runtime_printstring((string)in_stack_ffffffffffffff20);
      runtime_printstring((string)in_stack_ffffffffffffff20);
      runtime_printstring((string)in_stack_ffffffffffffff20);
      runtime_printhex(uVar4);
      runtime_printstring((string)in_stack_ffffffffffffff20);
      runtime_printunlock();
                    // WARNING: Subroutine does not return
      runtime_throw((string)in_stack_ffffffffffffff20);
    }
  }
  if (extraout_CL == '\0') {
    if (local_50->nfuncdata < 3) {
      p = (void *)0x0;
    }
    else {
      p_2 = (uintptr)*(dword *)(local_50[1]._ + (uint)local_50->npcdata * 4 + -0x22);
      mask_1 = (*(dword *)(local_50[1]._ + (uint)local_50->npcdata * 4 + -0x22) == 0xffffffff) - 1;
      p = (void *)(local_58->gofunc + p_2 & mask_1);
    }
    if (p != (void *)0x0) {
                    // WARNING: Load size is inaccurate
      if ((int)*p < 0) {
                    // WARNING: Subroutine does not return
        runtime_panicunsafeslicelen();
      }
      auVar2._8_8_ = 0;
      auVar2._0_8_ = *p;
      if ((SUB168(ZEXT816(0x10) * auVar2,8) != 0) ||
         ((uint)-((int)p + 8) < SUB168(ZEXT816(0x10) * auVar2,0))) {
                    // WARNING: Subroutine does not return
        runtime_panicunsafeslicelen();
      }
    }
  }
