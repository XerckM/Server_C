          }
          regexp_syntax_cleanAlt(*(regexp_syntax_Regexp **)((int)pvVar13 + (int)local_a0 * 8));
          uVar15 = uVar15 + 1;
          prVar12 = *(regexp_syntax_Regexp **)((int)local_10 + (int)local_a0 * 8);
          if (local_b0 < uVar15) {
            local_18 = prVar12;
            runtime_growslice(local_58,uVar15,(int)local_b0,1,(internal_abi_Type *)&DAT_00865800,
                              (runtime_slice)in_stack_fffffffffffffe78);
            local_58 = extraout_RAX_19;
            prVar12 = local_18;
            uVar15 = extraout_RBX_10;
            local_b0 = extraout_RCX_17;
          }
          pvVar13 = local_10;
          if (runtime_writeBarrier._0_4_ == 0) {
            bVar29 = local_e8 < (uint)start;
            bVar31 = SBORROW8((int)local_e8,start);
            iVar6 = (int)local_e8 - start;
          }
          else {
            runtime_gcWriteBarrier2();
            *extraout_R11_14 = extraout_RCX_18;
            extraout_R11_14[1] =
                 *(regexp_syntax_Regexp **)((int)extraout_RAX_20 + extraout_RBX_11 * 8 + -8);
            bVar29 = local_e8 < (uint)start;
            bVar31 = SBORROW8((int)local_e8,start);
            iVar6 = (int)local_e8 - start;
            local_58 = extraout_RAX_20;
            prVar12 = extraout_RCX_18;
            uVar15 = extraout_RBX_11;
            local_b0 = extraout_RSI_03;
          }
          bVar30 = iVar6 < 0;
          *(regexp_syntax_Regexp **)((int)local_58 + uVar15 * 8 + -8) = prVar12;
          i_2 = (int)local_e8;
          prVar11 = (regexp_syntax_Regexp *)start;
        }
      }
      if (bVar31 != bVar30) {
        if (!bVar29) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        uVar15 = uVar15 + 1;
        prVar12 = *(regexp_syntax_Regexp **)((int)pvVar13 + i_2 * 8);
        if (local_b0 < uVar15) {
          local_18 = prVar12;
          runtime_growslice(local_58,uVar15,(int)local_b0,1,(internal_abi_Type *)&DAT_00865800,
                            (runtime_slice)in_stack_fffffffffffffe78);
          pvVar13 = local_10;
          i_2 = (int)local_e8;
          local_58 = extraout_RAX_21;
          local_b0 = extraout_RCX_19;
          uVar15 = extraout_RBX_12;
          prVar12 = local_18;
          prVar11 = (regexp_syntax_Regexp *)start;
        }
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_15 = extraout_R9_07;
          extraout_R11_15[1] =
               *(regexp_syntax_Regexp **)((int)extraout_RBX_13 + extraout_R8_08 * 8 + -8);
          pvVar13 = extraout_RCX_20;
          local_58 = extraout_RBX_13;
          local_b0 = extraout_RDI_04;
          uVar15 = extraout_R8_08;
          prVar12 = extraout_R9_07;
          prVar11 = extraout_R10_03;
        }
        *(regexp_syntax_Regexp **)((int)local_58 + uVar15 * 8 + -8) = prVar12;
      }
      max = i_2 + 1;
    }
    pvVar9 = local_58;
  }
  newLen = 0;
  uVar23 = 0;
  pvVar13 = pvVar9;
  uVar20 = uVar15;
LAB_006f3400:
  i_3 = uVar23;
  if ((int)uVar20 <= i_3) {
    return;
  }
  uVar23 = i_3 + 1;
  if (((int)uVar23 < (int)uVar20) && (**(char **)((int)pvVar9 + i_3 * 8) == '\x02'))
  goto code_r0x006f3420;
  goto LAB_006f3434;
code_r0x006f3420:
  if (uVar20 <= uVar23) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if (**(char **)((int)pvVar9 + i_3 * 8 + 8) != '\x02') {
LAB_006f3434:
    newLen = newLen + 1;
    prVar12 = *(regexp_syntax_Regexp **)((int)pvVar9 + i_3 * 8);
    if (local_b0 < newLen) {
      local_b8 = uVar23;
      local_18 = prVar12;
      runtime_growslice(pvVar13,newLen,(int)local_b0,1,(internal_abi_Type *)&DAT_00865800,
                        (runtime_slice)in_stack_fffffffffffffe78);
      pvVar9 = local_58;
      newLen = extraout_RBX_14;
      pvVar13 = extraout_RAX_22;
      local_b0 = extraout_RCX_21;
      uVar20 = uVar15;
      uVar23 = local_b8;
      prVar12 = local_18;
    }
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_16 = extraout_R10_04;
      extraout_R11_16[1] = *(regexp_syntax_Regexp **)((int)extraout_RBX_15 + newLen * 8 + -8);
      pvVar9 = extraout_RAX_23;
      pvVar13 = extraout_RBX_15;
      local_b0 = extraout_RDI_05;
      uVar20 = extraout_R8_09;
      uVar23 = extraout_R9_08;
      prVar12 = extraout_R10_04;
    }
    *(regexp_syntax_Regexp **)((int)pvVar13 + newLen * 8 + -8) = prVar12;
  }
  goto LAB_006f3400;
}



// Local variable old:regexp/syntax.Regexp *[RBX:8] conflicts with parameter, skipped.

void regexp_syntax___parser__removeLeadingString
               (regexp_syntax_parser *p,regexp_syntax_Regexp *re,int n,regexp_syntax_Regexp *~r0)

{
  int dstLen;
  int32 *__dest;
  regexp_syntax_Regexp *extraout_RAX;
  regexp_syntax_Regexp *extraout_RAX_00;
  regexp_syntax_Regexp *extraout_RAX_01;
  regexp_syntax_Regexp *prVar1;
  regexp_syntax_Regexp *extraout_RCX;
  regexp_syntax_Regexp *extraout_RCX_00;
  regexp_syntax_Regexp *extraout_RCX_01;
  regexp_syntax_Regexp *extraout_RCX_02;
  regexp_syntax_Regexp *key;
  uint uVar2;
  uint uVar3;
  regexp_syntax_Regexp *sub;
  regexp_syntax_Regexp **pprVar4;
  regexp_syntax_parser *prVar5;
  regexp_syntax_Regexp *extraout_RBX;
  regexp_syntax_Regexp *extraout_RDI;
  regexp_syntax_Regexp *extraout_R8;
  regexp_syntax_Regexp *prVar6;
  regexp_syntax_Regexp **extraout_R11;
  regexp_syntax_Regexp **extraout_R11_00;
  undefined8 *extraout_R11_01;
  regexp_syntax_Regexp **extraout_R11_02;
  int unaff_R14;
  undefined in_XMM15 [16];
  regexp_syntax_Regexp *prStack0000000000000010;
  
  prStack0000000000000010 = re;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0 = extraout_RDI;
  }
  if ((prStack0000000000000010->Op != 0x12) || ((prStack0000000000000010->Sub).len == 0)) {
    if (prStack0000000000000010->Op == 3) {
      uVar2 = (prStack0000000000000010->Rune).len;
      if (uVar2 < (uint)n) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      __dest = (prStack0000000000000010->Rune).array;
      uVar3 = n - (prStack0000000000000010->Rune).cap >> 0x3f & n << 2;
      if ((int)(uVar2 - n) < (int)uVar2) {
        uVar2 = uVar2 - n;
      }
      if (uVar3 != 0) {
        runtime_memmove(__dest,(void *)((int)__dest + uVar3),uVar2 << 2);
      }
      if ((uint)(prStack0000000000000010->Rune).cap < uVar2) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
      (prStack0000000000000010->Rune).len = uVar2;
      if (uVar2 == 0) {
        prStack0000000000000010->Op = 2;
      }
    }
    return;
  }
  regexp_syntax___parser__removeLeadingString(p,*(prStack0000000000000010->Sub).array,n,~r0);
  if ((prStack0000000000000010->Sub).len == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  pprVar4 = (prStack0000000000000010->Sub).array;
  prVar1 = extraout_RAX;
  key = prStack0000000000000010;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_00;
    extraout_R11[1] = *pprVar4;
    prVar1 = extraout_RAX_00;
    key = extraout_RCX;
  }
  *pprVar4 = prVar1;
  if (prVar1->Op == 2) {
    if (p->height != (map__regexp_syntax_Regexp_int)0x0) {
      runtime_mapdelete_fast64
                ((internal_abi_MapType *)&DAT_00830520,(runtime_hmap *)p->height,(uint64)prVar1);
      key = prStack0000000000000010;
    }
    prVar6 = p->free;
    prVar5 = p;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier4();
      *extraout_R11_00 = extraout_R8;
      extraout_R11_00[1] = extraout_RAX_01->Sub0[0];
      extraout_R11_00[2] = extraout_RAX_01;
      extraout_R11_00[3] = prVar5->free;
      prVar1 = extraout_RAX_01;
      key = extraout_RCX_00;
      prVar6 = extraout_R8;
    }
    prVar1->Sub0[0] = prVar6;
    prVar5->free = prVar1;
    dstLen = (key->Sub).len;
    if (dstLen < 2) {
      key->Op = 2;
      (key->Sub).len = in_XMM15._0_8_;
      (key->Sub).cap = in_XMM15._8_8_;
      if (runtime_writeBarrier._0_4_ != 0) {
        pprVar4 = (key->Sub).array;
        runtime_gcWriteBarrier1();
        *extraout_R11_01 = pprVar4;
        key = extraout_RCX_01;
      }
      (key->Sub).array = (regexp_syntax_Regexp **)0x0;
    }
    else {
      pprVar4 = (key->Sub).array;
      if (dstLen == 2) {
        if (prVar5->height != (map__regexp_syntax_Regexp_int)0x0) {
          runtime_mapdelete_fast64
                    ((internal_abi_MapType *)&DAT_00830520,(runtime_hmap *)prVar5->height,
                     (uint64)key);
          key = prStack0000000000000010;
          prVar5 = p;
        }
        prVar1 = prVar5->free;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier4();
          *extraout_R11_02 = extraout_RBX;
          extraout_R11_02[1] = extraout_RCX_02->Sub0[0];
          extraout_R11_02[2] = extraout_RCX_02;
          extraout_R11_02[3] = prVar5->free;
          key = extraout_RCX_02;
          prVar1 = extraout_RBX;
        }
        key->Sub0[0] = prVar1;
        prVar5->free = key;
      }
      else {
        if (dstLen == 0) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        runtime_typedslicecopy
                  ((internal_abi_Type *)&DAT_00865800,pprVar4,dstLen,
                   (void *)((int)pprVar4 + (uint)((dword)(-((key->Sub).cap + -1) >> 0x3f) & 8)),
                   dstLen + -1,dstLen + -1);
        uVar2 = (prStack0000000000000010->Sub).len - 1;
        if ((uint)(prStack0000000000000010->Sub).cap < uVar2) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAcap();
        }
        (prStack0000000000000010->Sub).len = uVar2;
      }
    }
  }
  return;
}



// Local variable old:regexp/syntax.Regexp *[RBX:8] conflicts with parameter, skipped.

void regexp_syntax___parser__removeLeadingRegexp
               (regexp_syntax_parser *p,regexp_syntax_Regexp *re,bool reuse,
               regexp_syntax_Regexp *~r0)

{
  int dstLen;
  regexp_syntax_parser *extraout_RAX;
  regexp_syntax_parser *prVar1;
  uint extraout_RAX_00;
  regexp_syntax_parser *extraout_RAX_01;
  int extraout_RAX_02;
  regexp_syntax_Regexp *extraout_RAX_03;
  regexp_syntax_Regexp *prVar2;
  regexp_syntax_Regexp *extraout_RCX;
  regexp_syntax_Regexp *extraout_RCX_00;
  regexp_syntax_Regexp *extraout_RCX_01;
  regexp_syntax_Regexp *extraout_RCX_02;
  undefined8 extraout_RCX_03;
  regexp_syntax_Regexp *prVar3;
  regexp_syntax_Regexp **pprVar4;
  regexp_syntax_Regexp *extraout_RBX;
  regexp_syntax_Regexp *extraout_RBX_00;
  regexp_syntax_Regexp *extraout_RBX_01;
  regexp_syntax_parser *extraout_RSI;
  regexp_syntax_Regexp *re_1;
  void *dst;
  uint ~r0_00;
  regexp_syntax_Regexp **extraout_R11;
  undefined8 *extraout_R11_00;
  regexp_syntax_Regexp **extraout_R11_01;
  regexp_syntax_Regexp **extraout_R11_02;
  undefined8 *extraout_R11_03;
  int unaff_R14;
  undefined in_XMM15 [16];
  regexp_syntax_parser *prStack0000000000000008;
  regexp_syntax_Regexp *prStack0000000000000010;
  
  while (prStack0000000000000010 = re, prStack0000000000000008 = p,
        &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    p = prStack0000000000000008;
    re = prStack0000000000000010;
  }
  if ((re->Op != 0x12) || ((re->Sub).len == 0)) {
    if (reuse) {
      if (p->height != (map__regexp_syntax_Regexp_int)0x0) {
        runtime_mapdelete_fast64
                  ((internal_abi_MapType *)&DAT_00830520,(runtime_hmap *)p->height,(uint64)re);
      }
      prVar2 = prStack0000000000000008->free;
      p = prStack0000000000000008;
      re = prStack0000000000000010;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier4();
        *extraout_R11_02 = extraout_RCX_02;
        extraout_R11_02[1] = extraout_RBX_01->Sub0[0];
        extraout_R11_02[2] = extraout_RBX_01;
        extraout_R11_02[3] = extraout_RAX_01->free;
        p = extraout_RAX_01;
        prVar2 = extraout_RCX_02;
        re = extraout_RBX_01;
      }
      re->Sub0[0] = prVar2;
      p->free = re;
    }
    prVar2 = p->free;
    if (prVar2 == (regexp_syntax_Regexp *)0x0) {
      runtime_newobject((internal_abi_Type *)&DAT_00893c00,re);
      prStack0000000000000008->numRegexp = prStack0000000000000008->numRegexp + 1;
      prVar2 = extraout_RAX_03;
    }
    else {
      prVar3 = prVar2->Sub0[0];
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_03 = extraout_RCX_03;
        extraout_R11_03[1] = *(undefined8 *)(extraout_RAX_02 + 0x20);
        runtime_wbZero((internal_abi_Type *)&DAT_00893c00,dst);
        p = prStack0000000000000008;
      }
      p->free = prVar3;
      FUN_0046cda6();
    }
    prVar2->Op = 2;
    return;
  }
  if (reuse) {
    prVar2 = *(re->Sub).array;
    if (p->height != (map__regexp_syntax_Regexp_int)0x0) {
      runtime_mapdelete_fast64
                ((internal_abi_MapType *)&DAT_00830520,(runtime_hmap *)p->height,(uint64)prVar2);
    }
    prVar3 = prStack0000000000000008->free;
    prVar1 = prStack0000000000000008;
    re = prStack0000000000000010;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier4();
      *extraout_R11 = prVar3;
      extraout_R11[1] = extraout_RCX->Sub0[0];
      extraout_R11[2] = extraout_RCX;
      extraout_R11[3] = extraout_RAX->free;
      prVar1 = extraout_RAX;
      prVar2 = extraout_RCX;
      re = extraout_RBX;
    }
    prVar2->Sub0[0] = prVar3;
    prVar1->free = prVar2;
  }
  dstLen = (re->Sub).len;
  if (dstLen != 0) {
    pprVar4 = (re->Sub).array;
    ~r0_00 = (uint)((dword)(-((re->Sub).cap + -1) >> 0x3f) & 8);
    runtime_typedslicecopy
              ((internal_abi_Type *)&DAT_00865800,pprVar4,dstLen,(void *)((int)pprVar4 + ~r0_00),
               dstLen + -1,~r0_00);
    if (extraout_RAX_00 <= (uint)(prStack0000000000000010->Sub).cap) {
      (prStack0000000000000010->Sub).len = extraout_RAX_00;
      if (extraout_RAX_00 == 0) {
        prStack0000000000000010->Op = 2;
        (prStack0000000000000010->Sub).len = in_XMM15._0_8_;
        (prStack0000000000000010->Sub).cap = in_XMM15._8_8_;
        if (runtime_writeBarrier._0_4_ != 0) {
          pprVar4 = (prStack0000000000000010->Sub).array;
          runtime_gcWriteBarrier1();
          *extraout_R11_00 = pprVar4;
          prStack0000000000000010 = extraout_RCX_00;
        }
        (prStack0000000000000010->Sub).array = (regexp_syntax_Regexp **)0x0;
      }
      else if (extraout_RAX_00 == 1) {
        if (prStack0000000000000008->height != (map__regexp_syntax_Regexp_int)0x0) {
          runtime_mapdelete_fast64
                    ((internal_abi_MapType *)&DAT_00830520,
                     (runtime_hmap *)prStack0000000000000008->height,(uint64)prStack0000000000000010
                    );
        }
        prVar2 = prStack0000000000000008->free;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier4();
          *extraout_R11_01 = extraout_RBX_00;
          extraout_R11_01[1] = extraout_RCX_01->Sub0[0];
          extraout_R11_01[2] = extraout_RCX_01;
          extraout_R11_01[3] = extraout_RSI->free;
          prStack0000000000000010 = extraout_RCX_01;
          prVar2 = extraout_RBX_00;
          prStack0000000000000008 = extraout_RSI;
        }
        prStack0000000000000010->Sub0[0] = prVar2;
        prStack0000000000000008->free = prStack0000000000000010;
      }
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceB();
}



// WARNING: Variable defined which should be unmapped: op
// DWARF original prototype: void regexp/syntax.parse(string s, regexp/syntax.Flags flags,
// regexp/syntax.Regexp * ~b0, regexp/syntax.Regexp * ~b0, error err)

void regexp_syntax_parse(string s,regexp_syntax_Flags flags,regexp_syntax_Regexp *~b0,
                        regexp_syntax_Regexp *~b0_1,error err)

{
  byte bVar1;
  uint8 uVar2;
  int iVar3;
  string s_00;
  string s_01;
  string s_02;
  string s_03;
  error ~r0;
  string s_04;
  string s_05;
  string s_06;
  string s_07;
  string s_08;
  string before;
  string s_09;
  error ~r0_00;
  string s_10;
  string before_00;
  string s_11;
  __int32 ~r0_01;
  __int32 r;
  __int32 r_00;
  error err_00;
  string before_01;
  error err_01;
  error err_02;
  string lastRepeat;
  error err_03;
  string lastRepeat_00;
  error err_04;
  __int32 out;
  __int32 out_00;
  error err_05;
  char extraout_AL;
  int32 extraout_EAX_00;
  int32 r_01;
  int32 c;
  int32 r_03;
  int32 c_1;
  sdword extraout_EAX;
  undefined6 in_register_00000002;
  runtime_itab *k;
  regexp_syntax_parser *extraout_RAX;
  regexp_syntax_parser *_p;
  regexp_syntax_parser *extraout_RAX_00;
  int extraout_RAX_01;
  undefined *extraout_RAX_02;
  regexp_syntax_Regexp *re_1;
  int32 r_02;
  undefined *extraout_RAX_03;
  undefined *puVar4;
  undefined8 extraout_RAX_04;
  undefined8 extraout_RAX_05;
  undefined8 uVar5;
  int extraout_RAX_06;
  runtime_itab *extraout_RAX_07;
  int extraout_RAX_08;
  int extraout_RAX_09;
  undefined8 extraout_RAX_10;
  int extraout_RAX_11;
  regexp_syntax_parser *prVar6;
  regexp_syntax_Regexp *extraout_RAX_12;
  int32 *extraout_RAX_13;
  int32 *extraout_RAX_14;
  int32 *piVar7;
  int32 *extraout_RAX_15;
  int32 *extraout_RAX_16;
  regexp_syntax_parser *extraout_RAX_17;
  runtime_itab *extraout_RAX_18;
  runtime_itab *extraout_RAX_19;
  int extraout_RAX_20;
  uint min_00;
  int min;
  runtime_itab *extraout_RAX_21;
  undefined8 *extraout_RAX_22;
  undefined8 *extraout_RAX_23;
  undefined8 *extraout_RAX_24;
  undefined8 *extraout_RAX_25;
  undefined8 *extraout_RAX_26;
  undefined8 *extraout_RAX_27;
  regexp_syntax_Regexp *extraout_RCX;
  undefined *extraout_RCX_00;
  undefined *puVar8;
  int iVar9;
  undefined8 extraout_RCX_01;
  regexp_syntax_Regexp *~r0_02;
  int extraout_RCX_02;
  runtime_itab *extraout_RCX_03;
  regexp_syntax_Regexp *extraout_RCX_04;
  regexp_syntax_Regexp *extraout_RCX_05;
  regexp_syntax_Regexp *prVar10;
  regexp_syntax_Regexp *extraout_RCX_06;
  regexp_syntax_Regexp *extraout_RCX_07;
  int extraout_RCX_08;
  int extraout_RCX_09;
  regexp_syntax_Regexp *extraout_RCX_10;
  int extraout_RCX_11;
  uint uVar11;
  int extraout_RCX_12;
  runtime_itab *prVar12;
  regexp_syntax_Regexp *prVar13;
  bool ~r0_03;
  void *~r0_04;
  void *~r0_05;
  int extraout_RBX;
  undefined8 extraout_RBX_00;
  regexp_syntax_Regexp *extraout_RBX_01;
  int extraout_RBX_02;
  int extraout_RBX_03;
  int extraout_RBX_04;
  runtime_itab *extraout_RBX_05;
  regexp_syntax_Regexp *extraout_RBX_06;
  regexp_syntax_Regexp *extraout_RBX_07;
  runtime_itab *extraout_RBX_08;
  void *~r0_06;
  int max;
  char extraout_SIL;
  bool ok;
  regexp_syntax_Regexp *extraout_RBX_09;
  regexp_syntax_Regexp *~r0_07;
  void *~r0_08;
  undefined8 extraout_RBX_10;
  int32 c_2;
  regexp_syntax_Regexp *extraout_RSI;
  regexp_syntax_Regexp *extraout_RSI_00;
  regexp_syntax_Op ok_00;
  regexp_syntax_Regexp *extraout_RDI;
  runtime_itab *extraout_RDI_00;
  runtime_itab *extraout_RDI_01;
  int extraout_RDI_02;
  int extraout_RDI_03;
  int extraout_RDI_04;
  int extraout_RDI_05;
  regexp_syntax_Regexp *prVar14;
  int extraout_R8;
  runtime_itab *prVar15;
  regexp_syntax_Regexp *re_2;
  void *dst;
  regexp_syntax_Regexp *extraout_R9;
  regexp_syntax_Regexp *re;
  undefined8 extraout_R10;
  runtime_itab **extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  undefined8 *extraout_R11_02;
  int32 **extraout_R11_03;
  int32 **extraout_R11_04;
  regexp_syntax_Regexp **extraout_R11_05;
  runtime_itab **extraout_R11_06;
  runtime_itab **extraout_R11_07;
  runtime_itab **extraout_R11_08;
  int unaff_R14;
  runtime_itab *in_stack_fffffffffffffec0;
  regexp_syntax_Regexp *in_stack_fffffffffffffec8;
  string in_stack_fffffffffffffed0;
  runtime_itab *in_stack_fffffffffffffee0;
  int32 *in_stack_fffffffffffffee8;
  string in_stack_fffffffffffffef0;
  string in_stack_ffffffffffffff00;
  undefined7 uStack_f0;
  regexp_syntax_Op op;
  undefined local_c8 [24];
  func__ **local_b0;
  regexp_syntax_Regexp *local_80;
  runtime_itab *local_78;
  regexp_syntax_Regexp *local_70;
  regexp_syntax_Regexp *local_68;
  undefined *local_60;
  undefined8 local_58;
  runtime_itab *local_50;
  regexp_syntax_Regexp *local_48;
  regexp_syntax_parser *local_40;
  error err_local;
  undefined local_28 [16];
  undefined local_18 [16];
  
  k = (runtime_itab *)CONCAT62(in_register_00000002,flags);
  while (local_c8 + 8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~b0_1 = (regexp_syntax_Regexp *)((uint)~b0_1 & 0xffff);
  }
  local_80 = (regexp_syntax_Regexp *)0x0;
  local_28._8_8_ = &err_local;
  local_28._0_8_ = regexp_syntax_parse_func1;
  local_18._8_8_ = ~b0;
  local_18._0_8_ = k;
  local_b0 = (func__ **)local_28;
  runtime_deferprocStack((runtime__defer *)local_c8);
  if (extraout_EAX != 0) {
    runtime_deferreturn();
    return;
  }
  if (((uint)~b0_1 & 2) != 0) {
    s_00.len = (int)in_stack_fffffffffffffec8;
    s_00.str = (uint8 *)in_stack_fffffffffffffec0;
    regexp_syntax_checkUTF8(s_00,(error)in_stack_fffffffffffffed0);
    if (extraout_RAX_01 != 0) {
      local_80 = (regexp_syntax_Regexp *)0x0;
      runtime_deferreturn();
      return;
    }
    runtime_newobject((internal_abi_Type *)&DAT_00893c00,~r0_05);
    *extraout_RAX_02 = 3;
    *(regexp_syntax_Flags *)(extraout_RAX_02 + 2) = (regexp_syntax_Flags)~b0_1;
    *(undefined8 *)(extraout_RAX_02 + 0x30) = 0;
    *(undefined8 *)(extraout_RAX_02 + 0x38) = 2;
    puVar8 = extraout_RAX_02 + 0x40;
    puVar4 = extraout_RAX_02;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_00 = extraout_RCX_00;
      puVar4 = extraout_RAX_03;
      puVar8 = extraout_RCX_00;
    }
    *(undefined **)(puVar4 + 0x28) = puVar8;
    iVar9 = 0;
    local_60 = puVar4;
    do {
      if ((int)~b0 <= iVar9) {
LAB_006f4265:
        runtime_deferreturn();
        return;
      }
      c_2 = (int32)k->_[iVar9 + -0x14];
      if ((dword)c_2 < 0x80) {
        iVar9 = iVar9 + 1;
      }
      else {
        s_01.len = (int)in_stack_fffffffffffffec8;
        s_01.str = (uint8 *)in_stack_fffffffffffffec0;
        runtime_decoderune(s_01,(int)k,(int32)~b0,iVar9);
        puVar4 = local_60;
        iVar9 = extraout_RBX;
        c_2 = extraout_EAX_00;
      }
      iVar3 = *(int *)(puVar4 + 0x30);
      if (*(int *)(puVar4 + 0x38) <= iVar3) {
        s_02.len = (int)in_stack_fffffffffffffec8;
        s_02.str = (uint8 *)in_stack_fffffffffffffec0;
        ~r0_01.cap = (int)in_stack_fffffffffffffee0;
        ~r0_01.array = (int32 *)in_stack_fffffffffffffed0.str;
        ~r0_01.len = in_stack_fffffffffffffed0.len;
        runtime_stringtoslicerune((int32 (*) [32])0x0,s_02,~r0_01);
        *(undefined8 *)(local_60 + 0x30) = extraout_RBX_00;
        *(undefined8 *)(local_60 + 0x38) = extraout_RCX_01;
        uVar5 = extraout_RAX_04;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_01 = extraout_RAX_05;
          extraout_R11_01[1] = *(undefined8 *)(local_60 + 0x28);
          uVar5 = extraout_RAX_05;
        }
        *(undefined8 *)(local_60 + 0x28) = uVar5;
        goto LAB_006f4265;
      }
      *(int *)(puVar4 + 0x30) = iVar3 + 1;
      *(int32 *)(*(int *)(puVar4 + 0x28) + iVar3 * 4) = c_2;
    } while( true );
  }
  runtime_newobject((internal_abi_Type *)&DAT_008965a0,~r0_04);
  extraout_RAX->flags = (regexp_syntax_Flags)~b0_1;
  (extraout_RAX->wholeRegexp).len = (int)~b0;
  local_40 = extraout_RAX;
  prVar10 = ~b0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11 = k;
    local_40 = extraout_RAX_00;
    prVar10 = extraout_RCX;
  }
  (local_40->wholeRegexp).str = (uint8 *)k;
  ok_00 = false;
  prVar12 = k;
  prVar13 = prVar10;
  prVar14 = (regexp_syntax_Regexp *)0x0;
  prVar15 = (runtime_itab *)0x0;
LAB_006f42c2:
  do {
    ~r0_02 = prVar10;
    if (~r0_02 == (regexp_syntax_Regexp *)0x0) {
      regexp_syntax___parser__concat(local_40,prVar13);
      regexp_syntax___parser__swapVerticalBar(local_40,~r0_03);
      if (extraout_AL != '\0') {
        uVar11 = (local_40->stack).len - 1;
        if ((uint)(local_40->stack).cap < uVar11) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAcap();
        }
        (local_40->stack).len = uVar11;
      }
      regexp_syntax___parser__alternate(local_40,~r0_07);
      if ((local_40->stack).len == 1) {
        local_80 = *(local_40->stack).array;
        runtime_deferreturn();
        return;
      }
      runtime_newobject((internal_abi_Type *)&DAT_00855c40,~r0_08);
      extraout_RAX_26[1] = 0x11;
      *extraout_RAX_26 = &DAT_008b74f5;
      extraout_RAX_26[3] = ~b0;
      err_local.data = extraout_RAX_26;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_08 = k;
        err_local.data = extraout_RAX_27;
      }
      *(runtime_itab **)((int)err_local.data + 0x10) = k;
      local_80 = (regexp_syntax_Regexp *)0x0;
      err_local.tab = (runtime_itab *)go_itab__regexp_syntax_Error_error;
      runtime_deferreturn();
      return;
    }
    bVar1 = *(byte *)&prVar12->inter;
    local_78 = prVar12;
    if (bVar1 < 0x2f) {
      if (bVar1 < 0x29) {
        if (bVar1 == 0x24) {
          if ((local_40->flags & 0x10) == 0) {
            regexp_syntax___parser__op(local_40,8,~r0_02);
          }
          else {
            regexp_syntax___parser__op(local_40,10,~r0_02);
            *(ushort *)(extraout_RAX_06 + 2) = *(ushort *)(extraout_RAX_06 + 2) | 0x100;
          }
          prVar10 = (regexp_syntax_Regexp *)((int)&~r0_02[-1].Name.len + 7);
          prVar12 = (runtime_itab *)(local_78->_ + (((dword)(-(int)prVar10 >> 0x3f) & 1) - 0x14));
          prVar13 = ~b0;
          prVar14 = (regexp_syntax_Regexp *)0x0;
          prVar15 = (runtime_itab *)0x0;
          goto LAB_006f42c2;
        }
        if (bVar1 == 0x28) {
          if ((((local_40->flags & 0x40) == 0) || ((int)~r0_02 < 2)) ||
             (*(uint8 *)((int)&prVar12->inter + 1) != 0x3f)) {
            local_40->numCap = local_40->numCap + 1;
            regexp_syntax___parser__op(local_40,0x80,~r0_02);
            *(int *)(extraout_RAX_08 + 0x58) = local_40->numCap;
            prVar10 = (regexp_syntax_Regexp *)((int)&~r0_02[-1].Name.len + 7);
            prVar12 = (runtime_itab *)(local_78->_ + (((dword)(-(int)prVar10 >> 0x3f) & 1) - 0x14));
            prVar13 = ~b0;
            prVar14 = (regexp_syntax_Regexp *)0x0;
            prVar15 = (runtime_itab *)0x0;
          }
          else {
            s_03.len = (int)in_stack_fffffffffffffec8;
            s_03.str = (uint8 *)in_stack_fffffffffffffec0;
            err_00.data = in_stack_fffffffffffffee8;
            err_00.tab = in_stack_fffffffffffffee0;
            regexp_syntax___parser__parsePerlFlags(local_40,s_03,in_stack_fffffffffffffed0,err_00);
            if (extraout_RCX_02 != 0) {
              local_80 = (regexp_syntax_Regexp *)0x0;
              runtime_deferreturn();
              return;
            }
            prVar10 = extraout_RBX_01;
            prVar12 = extraout_RAX_07;
            prVar13 = ~b0;
            prVar14 = (regexp_syntax_Regexp *)0x0;
            prVar15 = (runtime_itab *)0x0;
          }
          goto LAB_006f42c2;
        }
      }
      else {
        if (bVar1 == 0x29) {
          ~r0.data = in_stack_fffffffffffffec8;
          ~r0.tab = in_stack_fffffffffffffec0;
          regexp_syntax___parser__parseRightParen(local_40,~r0);
          if (extraout_RAX_09 != 0) {
            local_80 = (regexp_syntax_Regexp *)0x0;
            runtime_deferreturn();
            return;
          }
          prVar10 = (regexp_syntax_Regexp *)((int)&~r0_02[-1].Name.len + 7);
          prVar12 = (runtime_itab *)(local_78->_ + (((dword)(-(int)prVar10 >> 0x3f) & 1) - 0x14));
          prVar13 = ~b0;
          prVar14 = (regexp_syntax_Regexp *)0x0;
          prVar15 = (runtime_itab *)0x0;
          goto LAB_006f42c2;
        }
        if (bVar1 < 0x2c) goto LAB_006f4a45;
        if (bVar1 == 0x2e) {
          if ((local_40->flags & 8) == 0) {
            regexp_syntax___parser__op(local_40,5,~r0_02);
          }
          else {
            regexp_syntax___parser__op(local_40,6,~r0_02);
          }
          prVar10 = (regexp_syntax_Regexp *)((int)&~r0_02[-1].Name.len + 7);
          prVar12 = (runtime_itab *)(local_78->_ + (((dword)(-(int)prVar10 >> 0x3f) & 1) - 0x14));
          prVar13 = ~b0;
          prVar14 = (regexp_syntax_Regexp *)0x0;
          prVar15 = (runtime_itab *)0x0;
          goto LAB_006f42c2;
        }
      }
LAB_006f4b55:
      s_09.len = (int)in_stack_fffffffffffffec8;
      s_09.str = (uint8 *)in_stack_fffffffffffffec0;
      err_03.data = in_stack_fffffffffffffee8;
      err_03.tab = in_stack_fffffffffffffee0;
      regexp_syntax_nextRune(s_09,(int32)prVar12,in_stack_fffffffffffffed0,err_03);
      if (extraout_RDI_03 != 0) {
        local_80 = (regexp_syntax_Regexp *)0x0;
        runtime_deferreturn();
        return;
      }
      local_78 = extraout_RBX_08;
      regexp_syntax___parser__literal(local_40,r_02);
      prVar10 = extraout_RCX_10;
      prVar12 = local_78;
      prVar13 = ~b0;
      prVar14 = (regexp_syntax_Regexp *)0x0;
      prVar15 = (runtime_itab *)0x0;
      goto LAB_006f42c2;
    }
    if (0x5c < bVar1) {
      if (bVar1 == 0x5e) {
        if ((local_40->flags & 0x10) == 0) {
          regexp_syntax___parser__op(local_40,7,~r0_02);
        }
        else {
          regexp_syntax___parser__op(local_40,9,~r0_02);
        }
        prVar10 = (regexp_syntax_Regexp *)((int)&~r0_02[-1].Name.len + 7);
        prVar12 = (runtime_itab *)(local_78->_ + (((dword)(-(int)prVar10 >> 0x3f) & 1) - 0x14));
        prVar13 = ~b0;
        prVar14 = (regexp_syntax_Regexp *)0x0;
        prVar15 = (runtime_itab *)0x0;
      }
      else if (bVar1 == 0x7b) {
        s_10.len = (int)in_stack_fffffffffffffec8;
        s_10.str = (uint8 *)in_stack_fffffffffffffec0;
        local_50 = prVar15;
        regexp_syntax___parser__parseRepeat
                  (local_40,s_10,(int)prVar12,(int)~r0_02,in_stack_fffffffffffffed0,(bool)ok_00);
        if (extraout_SIL == '\0') {
          regexp_syntax___parser__literal(local_40,0x7b);
          prVar10 = (regexp_syntax_Regexp *)((int)&~r0_02[-1].Name.len + 7);
          prVar12 = (runtime_itab *)(local_78->_ + (((dword)(-(int)prVar10 >> 0x3f) & 1) - 0x14));
          ok_00 = 0x11;
          prVar13 = ~b0;
          prVar14 = (regexp_syntax_Regexp *)0x0;
          prVar15 = (runtime_itab *)0x0;
        }
        else {
          if (((1000 < min_00) || (1000 < (int)~r0_06)) ||
             ((-1 < (int)~r0_06 && ((int)~r0_06 < (int)min_00)))) {
            if (~r0_02 < (regexp_syntax_Regexp *)((int)~r0_02 - extraout_RDI_04)) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceAlen();
            }
            runtime_newobject((internal_abi_Type *)&DAT_00855c40,~r0_06);
            extraout_RAX_24[1] = 0x14;
            *extraout_RAX_24 = &DAT_008b9383;
            extraout_RAX_24[3] = (regexp_syntax_Regexp *)((int)~r0_02 - extraout_RDI_04);
            err_local.data = extraout_RAX_24;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier1();
              *extraout_R11_07 = local_78;
              err_local.data = extraout_RAX_25;
            }
            *(runtime_itab **)((int)err_local.data + 0x10) = local_78;
            local_80 = (regexp_syntax_Regexp *)0x0;
            err_local.tab = (runtime_itab *)go_itab__regexp_syntax_Error_error;
            runtime_deferreturn();
            return;
          }
          before_00.len = (int)prVar14;
          before_00.str = (uint8 *)local_50;
          lastRepeat_00.len = (int)in_stack_fffffffffffffee8;
          lastRepeat_00.str = (uint8 *)in_stack_fffffffffffffee0;
          in_stack_fffffffffffffec0 = local_50;
          in_stack_fffffffffffffec8 = prVar14;
          regexp_syntax___parser__repeat
                    (local_40,0x11,min_00,(int)~r0_06,before_00,in_stack_fffffffffffffed0,
                     lastRepeat_00,in_stack_fffffffffffffef0,(error)in_stack_ffffffffffffff00);
          if (extraout_RCX_11 != 0) {
            local_80 = (regexp_syntax_Regexp *)0x0;
            runtime_deferreturn();
            return;
          }
          ok_00 = 0x11;
          prVar10 = extraout_RBX_09;
          prVar12 = extraout_RAX_21;
          prVar13 = ~b0;
          prVar14 = ~r0_02;
          prVar15 = local_78;
        }
      }
      else {
        if (bVar1 != 0x7c) goto LAB_006f4b55;
        ~r0_00.data = in_stack_fffffffffffffec8;
        ~r0_00.tab = in_stack_fffffffffffffec0;
        regexp_syntax___parser__parseVerticalBar(local_40,~r0_00);
        if (extraout_RAX_20 != 0) {
          local_80 = (regexp_syntax_Regexp *)0x0;
          runtime_deferreturn();
          return;
        }
        prVar10 = (regexp_syntax_Regexp *)((int)&~r0_02[-1].Name.len + 7);
        prVar12 = (runtime_itab *)(local_78->_ + (((dword)(-(int)prVar10 >> 0x3f) & 1) - 0x14));
        prVar13 = ~b0;
        prVar14 = (regexp_syntax_Regexp *)0x0;
        prVar15 = (runtime_itab *)0x0;
      }
      goto LAB_006f42c2;
    }
    if (bVar1 != 0x3f) {
      if (bVar1 != 0x5b) {
        if (bVar1 != 0x5c) goto LAB_006f4b55;
        if (((local_40->flags & 0x40) != 0) && (1 < (int)~r0_02)) {
          bVar1 = *(uint8 *)((int)&prVar12->inter + 1);
          if (bVar1 < 0x44) {
            if (bVar1 == 0x41) {
              regexp_syntax___parser__op(local_40,9,~r0_02);
              prVar10 = (regexp_syntax_Regexp *)((int)&~r0_02[-1].Name.len + 6);
              prVar12 = (runtime_itab *)
                        (local_78->_ + (((dword)(-(int)prVar10 >> 0x3f) & 2) - 0x14));
              prVar13 = ~b0;
              prVar14 = (regexp_syntax_Regexp *)0x0;
              prVar15 = (runtime_itab *)0x0;
              goto LAB_006f42c2;
            }
            if (bVar1 == 0x42) {
              regexp_syntax___parser__op(local_40,0xc,~r0_02);
              prVar10 = (regexp_syntax_Regexp *)((int)&~r0_02[-1].Name.len + 6);
              prVar12 = (runtime_itab *)
                        (local_78->_ + (((dword)(-(int)prVar10 >> 0x3f) & 2) - 0x14));
              prVar13 = ~b0;
              prVar14 = (regexp_syntax_Regexp *)0x0;
              prVar15 = (runtime_itab *)0x0;
              goto LAB_006f42c2;
            }
            if (bVar1 == 0x43) {
              runtime_newobject((internal_abi_Type *)&DAT_00855c40,prVar13);
              extraout_RAX_22[1] = 0x17;
              *extraout_RAX_22 = &DAT_008bb004;
              extraout_RAX_22[3] = 2;
              err_local.data = extraout_RAX_22;
              if (runtime_writeBarrier._0_4_ != 0) {
