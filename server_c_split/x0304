  int unaff_R14;
  
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)&stack0xfffffffffffffff8;
  }
  if (~r0 != 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void encoding_json___byIndex__Less(int i,int j,bool ~r0)

{
  int *piVar1;
  uint uVar2;
  int iVar3;
  int k;
  undefined7 in_register_00000009;
  uint uVar4;
  int xik;
  int unaff_R14;
  undefined auStack_18 [16];
  
  uVar4 = CONCAT71(in_register_00000009,~r0);
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_18;
  }
  if (i != 0) {
    uVar2 = *(uint *)(i + 8);
    if (uVar2 <= (uint)j) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    iVar3 = *(int *)i;
    k = 0;
    while( true ) {
      if (*(int *)(iVar3 + 0x58 + j * 0x88) <= k) {
        if (uVar4 < uVar2) {
          return;
        }
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if (uVar2 <= uVar4) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if (*(int *)(iVar3 + 0x58 + uVar4 * 0x88) <= k) break;
      if (*(int *)(*(int *)(iVar3 + 0x50 + uVar4 * 0x88) + k * 8) !=
          *(int *)(*(int *)(j * 0x88 + 0x50 + iVar3) + k * 8)) {
        return;
      }
      k = k + 1;
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Unknown calling convention

void encoding_json___byIndex__Swap(int i,int j)

{
  int *piVar1;
  int *in_RAX;
  uint extraout_RCX;
  void *dst;
  uint uVar2;
  int iVar3;
  int extraout_R8;
  int extraout_R8_00;
  int iVar4;
  int extraout_R9;
  int unaff_R14;
  int *piStack0000000000000008;
  uint in_stack_00000010;
  int in_stack_00000018;
  undefined auStack_d0 [24];
  int local_b8;
  int local_b0;
  int local_a8;
  void *local_a0;
  int local_98;
  undefined8 local_90 [8];
  undefined local_50 [72];
  
  piStack0000000000000008 = in_RAX;
  while (local_50 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000010 = i;
    in_stack_00000018 = j;
    runtime_morestack_noctxt();
    j = in_stack_00000018;
    i = in_stack_00000010;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_d0;
  }
  if (piStack0000000000000008 == (int *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  uVar2 = piStack0000000000000008[1];
  if (uVar2 <= (uint)i) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  local_90[0] = *(undefined8 *)(*piStack0000000000000008 + i * 0x88);
  local_98 = *piStack0000000000000008 + i * 0x88 + 8;
  FUN_0046d0f0();
  if (extraout_RCX < uVar2) {
    local_b0 = extraout_RCX * 0x88;
    local_a0 = (void *)(extraout_R8 + local_b0);
    iVar3 = extraout_R9;
    local_a8 = extraout_R8;
    if (runtime_writeBarrier._0_4_ != 0) {
      local_b8 = extraout_R9;
      runtime_wbMove((internal_abi_Type *)&DAT_008933c0,(void *)(extraout_R8 + extraout_R9),local_a0
                    );
      iVar3 = local_b8;
    }
    *(undefined8 *)(local_a8 + iVar3) = *(undefined8 *)(local_a8 + local_b0);
    local_a0 = (void *)(local_a8 + local_b0 + 8);
    iVar3 = local_b0;
    FUN_0046d0f0();
    iVar4 = extraout_R8_00;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_wbMove((internal_abi_Type *)&DAT_008933c0,dst,local_90);
      iVar3 = local_b0;
      iVar4 = local_a8;
    }
    *(undefined8 *)(iVar4 + iVar3) = local_90[0];
    FUN_0046d0f0();
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void encoding_json___RawMessage__MarshalJSON(__uint8 ~r0,error ~r1)

{
  __uint8 **pp_Var1;
  int *in_RAX;
  undefined4 *extraout_RAX;
  void *in_RBX;
  void *extraout_RBX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.array = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (int *)~r0.array;
    in_RBX = extraout_RBX;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &~r0)) {
    *pp_Var1 = (__uint8 *)&stack0xffffffffffffffe8;
  }
  if (in_RAX == (int *)0x0) {
                    // WARNING: Subroutine does not return
    runtime_panicwrap();
  }
  if (*in_RAX == 0) {
    runtime_newobject((internal_abi_Type *)&DAT_00812c40,in_RBX);
    *extraout_RAX = 0x6c6c756e;
  }
  return;
}



void encoding_json_floatEncoder_encode_fm
               (encoding_json_encodeState *e,reflect_Value v,encoding_json_encOpts opts)

{
  reflect_Value **pprVar1;
  int in_RDX;
  undefined6 in_register_0000001a;
  int unaff_R14;
  reflect_Value in_stack_ffffffffffffffc8;
  
  v.ptr = (void *)CONCAT62(in_register_0000001a,opts);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    v.typ_ = (internal_abi_Type *)e;
    runtime_morestack();
    e = (encoding_json_encodeState *)v.typ_;
  }
  pprVar1 = *(reflect_Value ***)(unaff_R14 + 0x20);
  if ((pprVar1 != (reflect_Value **)0x0) && (*pprVar1 == &v)) {
    *pprVar1 = (reflect_Value *)&stack0xffffffffffffffc8;
  }
  encoding_json_floatEncoder_encode
            (*(encoding_json_floatEncoder *)(in_RDX + 8),e,in_stack_ffffffffffffffc8,SUB82(v.ptr,0))
  ;
  return;
}



void encoding_json_condAddrEncoder_encode_fm
               (encoding_json_encodeState *e,reflect_Value v,encoding_json_encOpts opts)

{
  reflect_Value **pprVar1;
  int in_RDX;
  undefined6 in_register_0000001a;
  int unaff_R14;
  encoding_json_condAddrEncoder in_stack_ffffffffffffffc0;
  reflect_Value in_stack_ffffffffffffffd0;
  
  v.ptr = (void *)CONCAT62(in_register_0000001a,opts);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    v.typ_ = (internal_abi_Type *)e;
    runtime_morestack();
    e = (encoding_json_encodeState *)v.typ_;
  }
  pprVar1 = *(reflect_Value ***)(unaff_R14 + 0x20);
  if ((pprVar1 != (reflect_Value **)0x0) && (*pprVar1 == &v)) {
    *pprVar1 = (reflect_Value *)&stack0xffffffffffffffc0;
  }
  encoding_json_condAddrEncoder_encode
            (in_stack_ffffffffffffffc0,*(encoding_json_encodeState **)(in_RDX + 8),
             in_stack_ffffffffffffffd0,SUB82(*(undefined8 *)(in_RDX + 0x10),0));
  return;
}



void encoding_json_ptrEncoder_encode_fm
               (encoding_json_encodeState *e,reflect_Value v,encoding_json_encOpts opts)

{
  reflect_Value **pprVar1;
  int in_RDX;
  undefined6 in_register_0000001a;
  int unaff_R14;
  reflect_Value in_stack_ffffffffffffffc8;
  
  v.ptr = (void *)CONCAT62(in_register_0000001a,opts);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    v.typ_ = (internal_abi_Type *)e;
    runtime_morestack();
    e = (encoding_json_encodeState *)v.typ_;
  }
  pprVar1 = *(reflect_Value ***)(unaff_R14 + 0x20);
  if ((pprVar1 != (reflect_Value **)0x0) && (*pprVar1 == &v)) {
    *pprVar1 = (reflect_Value *)&stack0xffffffffffffffc8;
  }
  encoding_json_ptrEncoder_encode
            ((encoding_json_ptrEncoder)*(encoding_json_encoderFunc ***)(in_RDX + 8),e,
             in_stack_ffffffffffffffc8,SUB82(v.ptr,0));
  return;
}



void encoding_json_arrayEncoder_encode_fm
               (encoding_json_encodeState *e,reflect_Value v,encoding_json_encOpts opts)

{
  reflect_Value **pprVar1;
  int in_RDX;
  undefined6 in_register_0000001a;
  int unaff_R14;
  reflect_Value in_stack_ffffffffffffffc8;
  
  v.ptr = (void *)CONCAT62(in_register_0000001a,opts);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    v.typ_ = (internal_abi_Type *)e;
    runtime_morestack();
    e = (encoding_json_encodeState *)v.typ_;
  }
  pprVar1 = *(reflect_Value ***)(unaff_R14 + 0x20);
  if ((pprVar1 != (reflect_Value **)0x0) && (*pprVar1 == &v)) {
    *pprVar1 = (reflect_Value *)&stack0xffffffffffffffc8;
  }
  encoding_json_arrayEncoder_encode
            ((encoding_json_arrayEncoder)*(encoding_json_encoderFunc ***)(in_RDX + 8),e,
             in_stack_ffffffffffffffc8,SUB82(v.ptr,0));
  return;
}



void encoding_json_sliceEncoder_encode_fm
               (encoding_json_encodeState *e,reflect_Value v,encoding_json_encOpts opts)

{
  reflect_Value **pprVar1;
  int in_RDX;
  undefined6 in_register_0000001a;
  int unaff_R14;
  reflect_Value in_stack_ffffffffffffffc8;
  
  v.ptr = (void *)CONCAT62(in_register_0000001a,opts);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    v.typ_ = (internal_abi_Type *)e;
    runtime_morestack();
    e = (encoding_json_encodeState *)v.typ_;
  }
  pprVar1 = *(reflect_Value ***)(unaff_R14 + 0x20);
  if ((pprVar1 != (reflect_Value **)0x0) && (*pprVar1 == &v)) {
    *pprVar1 = (reflect_Value *)&stack0xffffffffffffffc8;
  }
  encoding_json_sliceEncoder_encode
            ((encoding_json_sliceEncoder)*(encoding_json_encoderFunc ***)(in_RDX + 8),e,
             in_stack_ffffffffffffffc8,SUB82(v.ptr,0));
  return;
}



void encoding_json_mapEncoder_encode_fm
               (encoding_json_encodeState *e,reflect_Value v,encoding_json_encOpts opts)

{
  reflect_Value **pprVar1;
  int in_RDX;
  undefined6 in_register_0000001a;
  int unaff_R14;
  reflect_Value in_stack_ffffffffffffffc8;
  
  v.ptr = (void *)CONCAT62(in_register_0000001a,opts);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    v.typ_ = (internal_abi_Type *)e;
    runtime_morestack();
    e = (encoding_json_encodeState *)v.typ_;
  }
  pprVar1 = *(reflect_Value ***)(unaff_R14 + 0x20);
  if ((pprVar1 != (reflect_Value **)0x0) && (*pprVar1 == &v)) {
    *pprVar1 = (reflect_Value *)&stack0xffffffffffffffc8;
  }
  encoding_json_mapEncoder_encode
            ((encoding_json_mapEncoder)*(encoding_json_encoderFunc ***)(in_RDX + 8),e,
             in_stack_ffffffffffffffc8,SUB82(v.ptr,0));
  return;
}



void encoding_json_structEncoder_encode_fm
               (encoding_json_encodeState *e,reflect_Value v,encoding_json_encOpts opts)

{
  reflect_Value **pprVar1;
  encoding_json_structEncoder se;
  int in_RDX;
  undefined6 in_register_0000001a;
  undefined in_SIL;
  undefined in_R8B;
  int unaff_R14;
  undefined in_stack_ffffffffffffffaa [38];
  reflect_Value in_stack_ffffffffffffffd0;
  
  v.ptr = (void *)CONCAT62(in_register_0000001a,opts);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    v.typ_ = (internal_abi_Type *)e;
    runtime_morestack();
    e = (encoding_json_encodeState *)v.typ_;
  }
  pprVar1 = *(reflect_Value ***)(unaff_R14 + 0x20);
  if ((pprVar1 != (reflect_Value **)0x0) && (*pprVar1 == &v)) {
    *pprVar1 = (reflect_Value *)&stack0xffffffffffffffa8;
  }
  se.fields.list.array._1_1_ = in_R8B;
  se.fields.list.array._0_1_ = in_SIL;
  se.fields._2_38_ = in_stack_ffffffffffffffaa;
  encoding_json_structEncoder_encode
            (se,*(encoding_json_encodeState **)(in_RDX + 8),in_stack_ffffffffffffffd0,
             SUB82(*(undefined8 *)(in_RDX + 0x10),0));
  return;
}



void type__eq_encoding_json_reflectWithString
               (encoding_json_reflectWithString *p,encoding_json_reflectWithString *q,bool r)

{
  char extraout_AL;
  int unaff_R14;
  encoding_json_reflectWithString *peStack0000000000000008;
  encoding_json_reflectWithString *peStack0000000000000010;
  
  peStack0000000000000008 = p;
  peStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((peStack0000000000000010->ks).len == (peStack0000000000000008->ks).len) &&
     (runtime_memequal(), extraout_AL != '\0')) {
    runtime_memequal();
  }
  return;
}



// DWARF original name: type:.eq.struct { encoding/json.ptr interface {}; encoding/json.len int }

void type__eq_struct___encoding_json_ptr_interface_____encoding_json_len_int__
               (struct___encoding_json_ptr_interface_____encoding_json_len_int__ *p,
               struct___encoding_json_ptr_interface_____encoding_json_len_int__ *q,bool r)

{
  internal_abi_Type *t;
  undefined in_DIL;
  undefined extraout_DIL;
  int unaff_R14;
  struct___encoding_json_ptr_interface_____encoding_json_len_int__ *psStack0000000000000008;
  struct___encoding_json_ptr_interface_____encoding_json_len_int__ *psStack0000000000000010;
  
  psStack0000000000000008 = p;
  psStack0000000000000010 = q;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_DIL = extraout_DIL;
  }
  t = (psStack0000000000000008->ptr)._type;
  if ((psStack0000000000000010->ptr)._type == t) {
    runtime_efaceeq(t,(psStack0000000000000008->ptr).data,(psStack0000000000000010->ptr).data,
                    (bool)in_DIL);
  }
  return;
}



// WARNING: Unknown calling convention

void hash_crc32_ieeeInit(void)

{
  hash_crc32_slicing8Table *extraout_RAX;
  hash_crc32_slicing8Table *extraout_RAX_00;
  hash_crc32_slicing8Table *paauVar1;
  hash_crc32_slicing8Table *extraout_RAX_01;
  hash_crc32_slicing8Table *extraout_RAX_02;
  hash_crc32_slicing8Table *in_RBX;
  hash_crc32_slicing8Table *extraout_RBX;
  hash_crc32_slicing8Table **extraout_R11;
  hash_crc32_slicing8Table **extraout_R11_00;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  if ((internal_cpu_X86.HasPCLMULQDQ == false) || (internal_cpu_X86.HasSSE41 == false)) {
    hash_crc32_slicingMakeTable(0xedb88320,in_RBX);
    paauVar1 = extraout_RAX_01;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier3();
      *extraout_R11_00 = extraout_RAX_02;
      extraout_R11_00[1] = hash_crc32_ieeeTable8;
      extraout_R11_00[2] = (hash_crc32_slicing8Table *)hash_crc32_updateIEEE;
      paauVar1 = extraout_RAX_02;
    }
    hash_crc32_updateIEEE = (func_uint32____uint8__uint32 **)&PTR_hash_crc32_ieeeInit_func1_008ec9e0
    ;
    hash_crc32_ieeeTable8 = paauVar1;
  }
  else {
    hash_crc32_slicingMakeTable(0xedb88320,in_RBX);
    paauVar1 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier3();
      *extraout_R11 = extraout_RAX_00;
      extraout_R11[1] = hash_crc32_archIeeeTable8;
      extraout_R11[2] = (hash_crc32_slicing8Table *)hash_crc32_updateIEEE;
      paauVar1 = extraout_RAX_00;
    }
    hash_crc32_updateIEEE = (func_uint32____uint8__uint32 **)&PTR_hash_crc32_archUpdateIEEE_008ec9d0
    ;
    hash_crc32_archIeeeTable8 = paauVar1;
  }
  return;
}



void hash_crc32_update(uint32 crc,hash_crc32_Table *tab,__uint8 p,bool checkInitIEEE,uint32 ~r0)

{
  undefined7 in_register_00000009;
  int iVar1;
  uint8 v;
  undefined4 in_register_0000003c;
  char in_R8B;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((hash_crc32_haveCastagnoli.v != 0) && (hash_crc32_castagnoliTable == tab)) {
    (**hash_crc32_updateCastagnoli)
              (crc,in_stack_ffffffffffffffd8,(uint32 *)CONCAT71(in_register_00000009,checkInitIEEE))
    ;
    return;
  }
  if (hash_crc32_IEEETable != tab) {
    for (iVar1 = 0; iVar1 < CONCAT44(in_register_0000003c,~r0); iVar1 = iVar1 + 1) {
    }
    return;
  }
  if ((in_R8B != '\0') && (hash_crc32_ieeeOnce.done == 0)) {
    sync___Once__doSlow(&hash_crc32_ieeeOnce,(func__ **)&PTR_hash_crc32_ieeeInit_008ec9d8);
  }
  (**hash_crc32_updateIEEE)
            (crc,in_stack_ffffffffffffffd8,(uint32 *)CONCAT71(in_register_00000009,checkInitIEEE));
  return;
}



void hash_crc32_ChecksumIEEE(__uint8 data,uint32 ~r0)

{
  undefined4 in_register_00000004;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffffd8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (hash_crc32_ieeeOnce.done == 0) {
    sync___Once__doSlow(&hash_crc32_ieeeOnce,(func__ **)&PTR_hash_crc32_ieeeInit_008ec9d8);
  }
  (**hash_crc32_updateIEEE)
            (0,in_stack_ffffffffffffffd8,(uint32 *)CONCAT44(in_register_00000004,~r0));
  return;
}



void hash_crc32_archUpdateIEEE(uint32 crc,__uint8 p,uint32 ~r0)

{
  interface___ e;
  __uint8 p_00;
  uint in_RCX;
  undefined4 in_register_0000001c;
  void *pvVar1;
  int left;
  uint in_RDI;
  uint uVar2;
  int do;
  int unaff_R14;
  dword in_stack_ffffffffffffffc8;
  undefined4 in_stack_ffffffffffffffcc;
  void *in_stack_ffffffffffffffd0;
  uint in_stack_ffffffffffffffd8;
  dword local_18;
  
  pvVar1 = (void *)CONCAT44(in_register_0000001c,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((internal_cpu_X86.HasPCLMULQDQ == false) || (internal_cpu_X86.HasSSE41 == false)) {
    e._type._4_4_ = in_stack_ffffffffffffffcc;
    e._type._0_4_ = in_stack_ffffffffffffffc8;
    e.data = in_stack_ffffffffffffffd0;
                    // WARNING: Subroutine does not return
    runtime_gopanic(e);
  }
  if (0x3f < (int)in_RCX) {
    uVar2 = in_RCX - ((dword)in_RCX & 0xf);
    if (in_RDI < uVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    in_stack_ffffffffffffffc8 = ~crc;
    in_stack_ffffffffffffffd0 = pvVar1;
    in_stack_ffffffffffffffd8 = uVar2;
    hash_crc32_ieeeCLMUL();
    if (in_RCX < uVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    crc = ~local_18;
    in_RCX = in_RCX - uVar2;
    pvVar1 = (void *)((int)pvVar1 + ((int)-(in_RDI - uVar2) >> 0x3f & uVar2));
  }
  if (in_RCX != 0) {
    p_00.array._4_4_ = in_stack_ffffffffffffffcc;
    p_00.array._0_4_ = in_stack_ffffffffffffffc8;
    p_00.len = (int)in_stack_ffffffffffffffd0;
    p_00.cap = in_stack_ffffffffffffffd8;
    hash_crc32_slicingUpdate(crc,hash_crc32_archIeeeTable8,p_00,(uint32)pvVar1);
    return;
  }
  return;
}



void hash_crc32_slicingMakeTable(uint32 poly,hash_crc32_slicing8Table *~r0)

{
  int extraout_RAX;
  hash_crc32_slicing8Table *t;
  int i;
  uint32 crc;
  dword dVar1;
  uint32 crc_1;
  int i_1;
  uint uVar2;
  int j;
  hash_crc32_slicing8Table *extraout_RBX;
  int j_1;
  int unaff_R14;
  uint32 uStack0000000000000008;
  
  uStack0000000000000008 = poly;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r0 = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00829680,~r0);
  for (i_1 = 0; i_1 < 0x100; i_1 = i_1 + 1) {
    uVar2 = i_1;
    for (j_1 = 0; dVar1 = (dword)uVar2, j_1 < 8; j_1 = j_1 + 1) {
      if ((uVar2 & 1) == 0) {
        crc_1 = dVar1 >> 1;
      }
      else {
        crc_1 = dVar1 >> 1 ^ uStack0000000000000008;
      }
      uVar2 = (uint)crc_1;
    }
    *(dword *)(extraout_RAX + i_1 * 4) = dVar1;
  }
  for (i = 0; i < 0x100; i = i + 1) {
    dVar1 = *(dword *)(extraout_RAX + i * 4);
    for (j = 1; j < 8; j = j + 1) {
      dVar1 = dVar1 >> 8 ^ *(dword *)(extraout_RAX + (uint)(dVar1 & 0xff) * 4);
      *(dword *)(j * 0x400 + extraout_RAX + i * 4) = dVar1;
    }
  }
  return;
}



void hash_crc32_slicingUpdate(uint32 crc,hash_crc32_slicing8Table *tab,__uint8 p,uint32 ~r0)

{
  int iVar1;
  uint8 v;
  int in_RDI;
  
  if (0xf < in_RDI) {
    for (; 8 < in_RDI; in_RDI = in_RDI + -8) {
    }
  }
  if (in_RDI == 0) {
    return;
  }
  for (iVar1 = 0; iVar1 < in_RDI; iVar1 = iVar1 + 1) {
  }
  return;
}



void hash_crc32_ieeeInit_func1(uint32 crc,__uint8 p,uint32 ~r0)

{
  int unaff_R14;
  __uint8 in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  hash_crc32_slicingUpdate(crc,hash_crc32_ieeeTable8,in_stack_ffffffffffffffd0,~r0);
  return;
}



int hash_crc32_init(EVP_PKEY_CTX *ctx)

{
  hash_crc32_Table *extraout_RAX;
  hash_crc32_Table *t;
  uint32 crc;
  hash_crc32_Table *extraout_RAX_00;
  hash_crc32_Table *pauVar1;
  dword dVar2;
  int i;
  uint uVar3;
  void *in_RBX;
  int j;
  void *extraout_RBX;
  hash_crc32_Table **extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  runtime_newobject((internal_abi_Type *)&DAT_00829620,in_RBX);
  for (i = 0; i < 0x100; i = i + 1) {
    uVar3 = i;
    for (j = 0; dVar2 = (dword)uVar3, j < 8; j = j + 1) {
      if ((uVar3 & 1) == 0) {
        crc = dVar2 >> 1;
      }
      else {
        crc = dVar2 >> 1 ^ 0xedb88320;
      }
      uVar3 = (uint)crc;
    }
    (*extraout_RAX)[i] = dVar2;
  }
  pauVar1 = extraout_RAX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_00;
    extraout_R11[1] = hash_crc32_IEEETable;
    pauVar1 = extraout_RAX_00;
  }
  hash_crc32_IEEETable = pauVar1;
  return (int)pauVar1;
}



// WARNING: Unknown calling convention

void hash_crc32_ieeeCLMUL(void)

{
  dword dVar1;
  undefined auVar2 [16];
  undefined auVar3 [16];
  undefined auVar4 [16];
  undefined auVar5 [16];
  undefined auVar6 [16];
  undefined auVar7 [16];
  undefined auVar8 [16];
  undefined auVar9 [16];
  undefined auVar10 [16];
  undefined auVar11 [16];
  undefined auVar12 [16];
  undefined auVar13 [16];
  undefined auVar14 [16];
  undefined auVar15 [16];
  undefined auVar16 [16];
  undefined auVar17 [16];
  undefined auVar18 [16];
  undefined auVar19 [16];
  undefined auVar20 [16];
  undefined auVar21 [16];
  undefined auVar22 [16];
  undefined auVar23 [16];
  undefined auVar24 [16];
  undefined auVar25 [16];
  undefined auVar26 [16];
  undefined auVar27 [16];
  undefined auVar28 [16];
  undefined auVar29 [16];
  undefined auVar30 [16];
  uint uVar31;
  undefined (*pauVar32) [16];
  uint uVar33;
  uint uVar34;
  undefined auVar35 [16];
  undefined auVar36 [16];
  undefined auVar37 [16];
  undefined auVar38 [16];
  dword in_stack_00000008;
  undefined (*in_stack_00000010) [16];
  int in_stack_00000018;
  
  auVar36 = in_stack_00000010[1];
  auVar37 = in_stack_00000010[2];
  auVar38 = in_stack_00000010[3];
  auVar35 = *in_stack_00000010 ^ ZEXT416(in_stack_00000008);
  pauVar32 = in_stack_00000010 + 4;
  uVar31 = in_stack_00000018 - 0x40;
  if (0x3f < uVar31) {
    do {
      auVar3._8_8_ = 0;
      auVar3._0_8_ = auVar35._0_8_;
      uVar33 = r2r1._0_8_;
      auVar8._8_8_ = 0;
      auVar8._0_8_ = uVar33;
      auVar2 = (undefined  [16])0x0;
      for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
        if ((auVar3 & (undefined  [16])0x1 << dVar1) != (undefined  [16])0x0) {
          auVar2 = auVar2 ^ auVar8 << dVar1;
        }
      }
      auVar4._8_8_ = 0;
      auVar4._0_8_ = auVar36._0_8_;
      auVar9._8_8_ = 0;
      auVar9._0_8_ = uVar33;
      auVar3 = (undefined  [16])0x0;
      for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
        if ((auVar4 & (undefined  [16])0x1 << dVar1) != (undefined  [16])0x0) {
          auVar3 = auVar3 ^ auVar9 << dVar1;
        }
      }
      auVar5._8_8_ = 0;
      auVar5._0_8_ = auVar37._0_8_;
      auVar10._8_8_ = 0;
      auVar10._0_8_ = uVar33;
      auVar8 = (undefined  [16])0x0;
      for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
        if ((auVar5 & (undefined  [16])0x1 << dVar1) != (undefined  [16])0x0) {
          auVar8 = auVar8 ^ auVar10 << dVar1;
        }
      }
      auVar6._8_8_ = 0;
      auVar6._0_8_ = auVar38._0_8_;
      auVar11._8_8_ = 0;
      auVar11._0_8_ = uVar33;
      auVar4 = (undefined  [16])0x0;
      for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
        if ((auVar6 & (undefined  [16])0x1 << dVar1) != (undefined  [16])0x0) {
          auVar4 = auVar4 ^ auVar11 << dVar1;
        }
      }
      auVar16._8_8_ = 0;
      auVar16._0_8_ = auVar35._8_8_;
      uVar33 = r2r1._8_8_;
      auVar24._8_8_ = 0;
      auVar24._0_8_ = uVar33;
      auVar35 = (undefined  [16])0x0;
      for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
        if ((auVar16 & (undefined  [16])0x1 << dVar1) != (undefined  [16])0x0) {
          auVar35 = auVar35 ^ auVar24 << dVar1;
        }
      }
      auVar17._8_8_ = 0;
      auVar17._0_8_ = auVar36._8_8_;
      auVar25._8_8_ = 0;
      auVar25._0_8_ = uVar33;
      auVar36 = (undefined  [16])0x0;
      for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
        if ((auVar17 & (undefined  [16])0x1 << dVar1) != (undefined  [16])0x0) {
          auVar36 = auVar36 ^ auVar25 << dVar1;
        }
      }
      auVar18._8_8_ = 0;
      auVar18._0_8_ = auVar37._8_8_;
      auVar26._8_8_ = 0;
      auVar26._0_8_ = uVar33;
      auVar37 = (undefined  [16])0x0;
      for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
        if ((auVar18 & (undefined  [16])0x1 << dVar1) != (undefined  [16])0x0) {
          auVar37 = auVar37 ^ auVar26 << dVar1;
        }
      }
      auVar19._8_8_ = 0;
      auVar19._0_8_ = auVar38._8_8_;
      auVar27._8_8_ = 0;
      auVar27._0_8_ = uVar33;
      auVar38 = (undefined  [16])0x0;
      for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
        if ((auVar19 & (undefined  [16])0x1 << dVar1) != (undefined  [16])0x0) {
          auVar38 = auVar38 ^ auVar27 << dVar1;
        }
      }
      auVar35 = auVar2 ^ auVar35 ^ *pauVar32;
      auVar36 = auVar3 ^ auVar36 ^ pauVar32[1];
      auVar37 = auVar8 ^ auVar37 ^ pauVar32[2];
      auVar38 = auVar4 ^ auVar38 ^ pauVar32[3];
      pauVar32 = pauVar32 + 4;
      uVar31 = uVar31 - 0x40;
    } while (0x3f < (int)uVar31);
  }
  auVar7._8_8_ = 0;
  auVar7._0_8_ = auVar35._0_8_;
  uVar33 = r4r3._0_8_;
  auVar12._8_8_ = 0;
  auVar12._0_8_ = uVar33;
  auVar2 = (undefined  [16])0x0;
  for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
    if ((auVar7 & (undefined  [16])0x1 << dVar1) != (undefined  [16])0x0) {
      auVar2 = auVar2 ^ auVar12 << dVar1;
    }
  }
  auVar20._8_8_ = 0;
  auVar20._0_8_ = auVar35._8_8_;
  uVar34 = r4r3._8_8_;
  auVar28._8_8_ = 0;
  auVar28._0_8_ = uVar34;
  auVar35 = (undefined  [16])0x0;
  for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
    if ((auVar20 & (undefined  [16])0x1 << dVar1) != (undefined  [16])0x0) {
      auVar35 = auVar35 ^ auVar28 << dVar1;
    }
  }
  auVar36 = auVar2 ^ auVar35 ^ auVar36;
  auVar2._8_8_ = 0;
  auVar2._0_8_ = auVar36._0_8_;
  auVar13._8_8_ = 0;
  auVar13._0_8_ = uVar33;
  auVar35 = (undefined  [16])0x0;
  for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
    if ((auVar2 & (undefined  [16])0x1 << dVar1) != (undefined  [16])0x0) {
      auVar35 = auVar35 ^ auVar13 << dVar1;
    }
  }
  auVar21._8_8_ = 0;
  auVar21._0_8_ = auVar36._8_8_;
  auVar29._8_8_ = 0;
  auVar29._0_8_ = uVar34;
  auVar36 = (undefined  [16])0x0;
  for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
    if ((auVar21 & (undefined  [16])0x1 << dVar1) != (undefined  [16])0x0) {
      auVar36 = auVar36 ^ auVar29 << dVar1;
    }
  }
  auVar37 = auVar35 ^ auVar36 ^ auVar37;
  auVar35._8_8_ = 0;
  auVar35._0_8_ = auVar37._0_8_;
  auVar14._8_8_ = 0;
  auVar14._0_8_ = uVar33;
  auVar36 = (undefined  [16])0x0;
  for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
    if ((auVar35 & (undefined  [16])0x1 << dVar1) != (undefined  [16])0x0) {
      auVar36 = auVar36 ^ auVar14 << dVar1;
    }
  }
  auVar22._8_8_ = 0;
  auVar22._0_8_ = auVar37._8_8_;
  auVar30._8_8_ = 0;
  auVar30._0_8_ = uVar34;
  auVar37 = (undefined  [16])0x0;
  for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
    if ((auVar22 & (undefined  [16])0x1 << dVar1) != (undefined  [16])0x0) {
      auVar37 = auVar37 ^ auVar30 << dVar1;
    }
  }
  auVar38 = auVar36 ^ auVar37 ^ auVar38;
  if (0xf < uVar31) {
    do {
      auVar37._8_8_ = 0;
      auVar37._0_8_ = auVar38._0_8_;
      auVar15._8_8_ = 0;
      auVar15._0_8_ = uVar33;
      auVar36 = (undefined  [16])0x0;
      for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
        if ((auVar37 & (undefined  [16])0x1 << dVar1) != (undefined  [16])0x0) {
          auVar36 = auVar36 ^ auVar15 << dVar1;
        }
      }
      auVar23._8_8_ = 0;
      auVar23._0_8_ = auVar38._8_8_;
      auVar38._8_8_ = 0;
      auVar38._0_8_ = uVar34;
      auVar37 = (undefined  [16])0x0;
      for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
        if ((auVar23 & (undefined  [16])0x1 << dVar1) != (undefined  [16])0x0) {
          auVar37 = auVar37 ^ auVar38 << dVar1;
        }
      }
      auVar38 = auVar36 ^ auVar37 ^ *pauVar32;
      uVar31 = uVar31 - 0x10;
      pauVar32 = pauVar32 + 1;
    } while (0xf < (int)uVar31);
  }
  for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
  }
  for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
  }
  for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
  }
  for (dVar1 = 0; dVar1 < 0x40; dVar1 = dVar1 + 1) {
  }
  return;
}



// WARNING: Removing unreachable block (ram,0x00562155)
// WARNING: Removing unreachable block (ram,0x00562335)

void google_golang_org_protobuf_internal_encoding_tag_Unmarshal
               (string tag,reflect_Type goType,
               google_golang_org_protobuf_reflect_protoreflect_EnumValueDescriptors evs,
               google_golang_org_protobuf_reflect_protoreflect_FieldDescriptor ~r0)

