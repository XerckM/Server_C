  string rest_03;
  string rest_04;
  error err_02;
  error err_03;
  bool bVar1;
  sdword extraout_EAX;
  int32 hi;
  sdword extraout_EAX_00;
  int extraout_RAX;
  regexp_syntax_parser *extraout_RAX_00;
  regexp_syntax_Regexp *extraout_RAX_01;
  regexp_syntax_parser *extraout_RAX_02;
  int32 *piVar2;
  int32 *extraout_RAX_03;
  regexp_syntax_parser *p_00;
  int32 *extraout_RAX_04;
  int32 *extraout_RAX_05;
  int32 *extraout_RAX_06;
  int32 *extraout_RAX_07;
  undefined8 *extraout_RAX_08;
  undefined8 *extraout_RAX_09;
  undefined8 *extraout_RAX_10;
  undefined8 *extraout_RAX_11;
  undefined8 *puVar3;
  int32 *extraout_RAX_12;
  int32 *extraout_RAX_13;
  int32 *extraout_RAX_14;
  int32 *piVar4;
  int in_RCX;
  undefined8 extraout_RCX;
  int extraout_RCX_00;
  int extraout_RCX_01;
  void *pvVar5;
  void *extraout_RCX_02;
  void *extraout_RCX_03;
  void *extraout_RCX_04;
  undefined *extraout_RCX_05;
  undefined *extraout_RCX_06;
  void *extraout_RCX_07;
  void *extraout_RCX_08;
  regexp_syntax_Regexp *extraout_RCX_09;
  regexp_syntax_Regexp *extraout_RCX_10;
  regexp_syntax_Regexp *prVar6;
  uint uVar7;
  char *pcVar8;
  void *in_RBX;
  void *extraout_RBX;
  void *extraout_RBX_00;
  runtime_itab *prVar9;
  runtime_itab *extraout_RBX_01;
  runtime_itab *extraout_RBX_02;
  runtime_itab *extraout_RBX_03;
  char *extraout_RBX_04;
  char *extraout_RBX_05;
  char *pcVar10;
  runtime_itab *extraout_RBX_06;
  runtime_itab *extraout_RBX_07;
  void *~r0_03;
  int size;
  undefined *puVar11;
  int extraout_RBX_08;
  int extraout_RBX_09;
  int iVar12;
  regexp_syntax_Regexp *re;
  regexp_syntax_Regexp *extraout_RSI;
  undefined *extraout_RSI_00;
  undefined *extraout_RSI_01;
  undefined *extraout_RSI_02;
  regexp_syntax_Regexp *extraout_RSI_03;
  regexp_syntax_Regexp *re_1;
  void *dst;
  int32 *extraout_RDI;
  int sign;
  char *extraout_RDI_00;
  char *extraout_RDI_01;
  char *extraout_RDI_02;
  int extraout_RDI_03;
  int extraout_RDI_04;
  bool first;
  int extraout_R8;
  int extraout_R8_00;
  undefined *extraout_R9;
  undefined *extraout_R9_00;
  char *extraout_R10;
  char *extraout_R10_00;
  int32 *extraout_R10_01;
  undefined8 *extraout_R11;
  int32 **extraout_R11_00;
  char **extraout_R11_01;
  char **extraout_R11_02;
  int32 **extraout_R11_03;
  int32 **extraout_R11_04;
  int unaff_R14;
  string in_stack_ffffffffffffff70;
  uint8 *in_stack_ffffffffffffff80;
  int in_stack_ffffffffffffff88;
  uint8 *in_stack_ffffffffffffff90;
  int in_stack_ffffffffffffff98;
  undefined4 in_stack_ffffffffffffffa0;
  sdword in_stack_ffffffffffffffa4;
  undefined *puVar13;
  int in_stack_ffffffffffffffb8;
  int32 hi_00;
  runtime_itab *prVar14;
  void *pvVar15;
  regexp_syntax_Regexp *local_10;
  
  while (&local_10 <= *(regexp_syntax_Regexp ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RCX == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  puVar11 = (undefined *)(in_RCX + -1);
  uVar7 = (uint)((dword)(-(int)puVar11 >> 0x3f) & 1);
  re = p->free;
  pcVar8 = (char *)((int)in_RBX + uVar7);
  if (re == (regexp_syntax_Regexp *)0x0) {
    runtime_newobject((internal_abi_Type *)&DAT_00893c00,in_RBX);
    p->numRegexp = p->numRegexp + 1;
    p_00 = p;
    re = extraout_RAX_01;
  }
  else {
    prVar6 = re->Sub0[0];
    if (runtime_writeBarrier._0_4_ != 0) {
      local_10 = re->Sub0[0];
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RCX;
      extraout_R11[1] = *(undefined8 *)(extraout_RAX + 0x20);
      runtime_wbZero((internal_abi_Type *)&DAT_00893c00,dst);
      prVar6 = local_10;
    }
    p->free = prVar6;
    FUN_0046cda6();
    p_00 = extraout_RAX_00;
    in_RCX = extraout_RCX_00;
    in_RBX = extraout_RBX;
    puVar11 = extraout_R9;
    pcVar8 = extraout_R10;
  }
  re->Op = 4;
  re->Flags = p_00->flags;
  (re->Rune).len = 0;
  (re->Rune).cap = 2;
  piVar4 = re->Rune0;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RDI;
    extraout_R11_00[1] = (extraout_RSI->Rune).array;
    p_00 = extraout_RAX_02;
    in_RCX = extraout_RCX_01;
    in_RBX = extraout_RBX_00;
    re = extraout_RSI;
    puVar11 = extraout_R9_00;
    pcVar8 = extraout_R10_00;
    piVar4 = extraout_RDI;
  }
  (re->Rune).array = piVar4;
  if (in_RCX == 1) {
    sign = 1;
  }
  else if (*(char *)((int)in_RBX + uVar7) == '^') {
    puVar11 = (undefined *)(in_RCX + -2);
    pcVar8 = pcVar8 + ((dword)(-(int)puVar11 >> 0x3f) & 1);
    if ((p_00->flags & 4) == 0) {
      (re->Rune).len = 2;
      *(undefined8 *)(re->Rune).array = 0xa0000000a;
    }
    sign = -1;
  }
  else {
    sign = 1;
  }
  prVar9 = (runtime_itab *)(re->Rune).len;
  pvVar5 = (void *)(re->Rune).cap;
  bVar1 = true;
  piVar4 = (re->Rune).array;
  do {
    puVar13 = puVar11;
    prVar14 = prVar9;
    pvVar15 = pvVar5;
    if (puVar11 == (undefined *)0x0) {
LAB_006f7813:
      r_03.len = in_stack_ffffffffffffff88;
      r_03.array = (int32 *)in_stack_ffffffffffffff80;
      r_03.cap = (int)in_stack_ffffffffffffff90;
      out_00.len._0_4_ = in_stack_ffffffffffffffa0;
      out_00.array = (int32 *)in_stack_ffffffffffffff98;
      out_00.len._4_4_ = in_stack_ffffffffffffffa4;
      out_00.cap = (int)puVar13;
      rest_03.len = in_stack_ffffffffffffffb8;
      rest_03.str = (uint8 *)sign;
      err_03.data = pvVar15;
      err_03.tab = prVar14;
      regexp_syntax___parser__parseUnicodeClass
                (p_00,in_stack_ffffffffffffff70,r_03,out_00,rest_03,err_03);
      hi_00 = (int32)prVar14;
      if (extraout_R8_00 != 0) {
        return;
      }
      piVar2 = extraout_RAX_04;
      pvVar5 = extraout_RCX_03;
      prVar9 = extraout_RBX_02;
      puVar11 = extraout_RSI_01;
      pcVar10 = extraout_RDI_01;
      if ((extraout_RAX_04 == (int32 *)0x0) &&
         (r_04.len = in_stack_ffffffffffffff88, r_04.array = (int32 *)in_stack_ffffffffffffff80,
         r_04.cap = (int)in_stack_ffffffffffffff90, out_01.len._0_4_ = in_stack_ffffffffffffffa0,
         out_01.array = (int32 *)in_stack_ffffffffffffff98,
         out_01.len._4_4_ = in_stack_ffffffffffffffa4, out_01.cap = (int)puVar13,
         rest_04.len = in_stack_ffffffffffffffb8, rest_04.str = (uint8 *)sign,
         regexp_syntax___parser__parsePerlClassEscape
                   (p,in_stack_ffffffffffffff70,r_04,out_01,rest_04), piVar2 = extraout_RAX_05,
         pvVar5 = extraout_RCX_04, prVar9 = extraout_RBX_03, puVar11 = extraout_RSI_02,
         pcVar10 = extraout_RDI_02, extraout_RAX_05 == (int32 *)0x0)) {
        wholeClass.len = in_stack_ffffffffffffff88;
        wholeClass.str = in_stack_ffffffffffffff80;
        rest_00.len = in_stack_ffffffffffffff98;
        rest_00.str = in_stack_ffffffffffffff90;
        err_00.tab._4_4_ = in_stack_ffffffffffffffa4;
        err_00.tab._0_4_ = in_stack_ffffffffffffffa0;
        err_00.data = puVar13;
        regexp_syntax___parser__parseClassChar
                  (p,in_stack_ffffffffffffff70,wholeClass,(sdword)pcVar8,rest_00,err_00);
        if (extraout_RDI_03 != 0) {
          return;
        }
        puVar11 = extraout_RCX_05;
        pcVar10 = extraout_RBX_04;
        if (((1 < (int)extraout_RCX_05) && (*extraout_RBX_04 == '-')) && (extraout_RBX_04[1] != ']')
           ) {
          wholeClass_00.len = in_stack_ffffffffffffff88;
          wholeClass_00.str = in_stack_ffffffffffffff80;
          rest_01.len = in_stack_ffffffffffffff98;
          rest_01.str = in_stack_ffffffffffffff90;
          err_01.tab._4_4_ = extraout_EAX;
          err_01.tab._0_4_ = in_stack_ffffffffffffffa0;
          err_01.data = puVar13;
          in_stack_ffffffffffffffa4 = extraout_EAX;
          regexp_syntax___parser__parseClassChar
                    (p,in_stack_ffffffffffffff70,wholeClass_00,(sdword)extraout_RBX_04 + 1,rest_01,
                     err_01);
          if (extraout_RDI_04 != 0) {
            return;
          }
          puVar11 = extraout_RCX_06;
          pcVar10 = extraout_RBX_05;
          if (extraout_EAX_00 < in_stack_ffffffffffffffa4) {
            puVar11 = puVar13 + -(int)extraout_RCX_06;
            if (puVar13 < puVar11) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceAlen();
            }
            runtime_newobject((internal_abi_Type *)&DAT_00855c40,puVar11);
            extraout_RAX_10[1] = 0x1d;
            *extraout_RAX_10 = &DAT_008be932;
            extraout_RAX_10[3] = puVar11;
            puVar3 = extraout_RAX_10;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier1();
              *extraout_R11_02 = pcVar8;
              puVar3 = extraout_RAX_11;
            }
            puVar3[2] = pcVar8;
            return;
          }
        }
        if ((p->flags & 1) == 0) {
          r.cap = (int)in_stack_ffffffffffffff80;
          r.array = (int32 *)in_stack_ffffffffffffff70.str;
          r.len = in_stack_ffffffffffffff70.len;
          ~r0_00.len = (int)in_stack_ffffffffffffff90;
          ~r0_00.array = (int32 *)in_stack_ffffffffffffff88;
          ~r0_00.cap = in_stack_ffffffffffffff98;
          regexp_syntax_appendRange(r,(int32)piVar4,hi_00,~r0_00);
          piVar2 = extraout_RAX_06;
          pvVar5 = extraout_RCX_07;
          prVar9 = extraout_RBX_06;
        }
        else {
          r_00.cap = (int)in_stack_ffffffffffffff80;
          r_00.array = (int32 *)in_stack_ffffffffffffff70.str;
          r_00.len = in_stack_ffffffffffffff70.len;
          ~r0_01.len = (int)in_stack_ffffffffffffff90;
          ~r0_01.array = (int32 *)in_stack_ffffffffffffff88;
          ~r0_01.cap = in_stack_ffffffffffffff98;
          regexp_syntax_appendFoldedRange(r_00,(int32)piVar4,hi_00,~r0_01);
          piVar2 = extraout_RAX_07;
          pvVar5 = extraout_RCX_08;
          prVar9 = extraout_RBX_07;
        }
      }
    }
    else {
      if ((*pcVar8 == ']') && (!bVar1)) {
        (re->Rune).len = (int)prVar9;
        (re->Rune).cap = (int)pvVar5;
        prVar6 = re;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_03 = extraout_R10_01;
          extraout_R11_03[1] = (extraout_RSI_03->Rune).array;
          prVar6 = extraout_RSI_03;
          piVar4 = extraout_R10_01;
        }
        (prVar6->Rune).array = piVar4;
        ~r0.cap = (int)in_stack_ffffffffffffff80;
        ~r0.array = (int32 *)in_stack_ffffffffffffff70.str;
        ~r0.len = in_stack_ffffffffffffff70.len;
        regexp_syntax_cleanClass(&prVar6->Rune,~r0);
        piVar4 = extraout_RAX_12;
        prVar6 = extraout_RCX_09;
        iVar12 = extraout_RBX_08;
        if (sign < 0) {
          r_01.cap = (int)in_stack_ffffffffffffff80;
          r_01.array = (int32 *)in_stack_ffffffffffffff70.str;
          r_01.len = in_stack_ffffffffffffff70.len;
          ~r0_02.len = (int)in_stack_ffffffffffffff90;
          ~r0_02.array = (int32 *)in_stack_ffffffffffffff88;
          ~r0_02.cap = in_stack_ffffffffffffff98;
          regexp_syntax_negateClass(r_01,~r0_02);
          piVar4 = extraout_RAX_13;
          prVar6 = extraout_RCX_10;
          iVar12 = extraout_RBX_09;
        }
        (re->Rune).len = iVar12;
        (re->Rune).cap = (int)prVar6;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_04 = extraout_RAX_14;
          prVar6 = (regexp_syntax_Regexp *)(re->Rune).array;
          extraout_R11_04[1] = (int32 *)prVar6;
          piVar4 = extraout_RAX_14;
        }
        (re->Rune).array = piVar4;
        regexp_syntax___parser__push(p,re,prVar6);
        return;
      }
      if (puVar11 == (undefined *)0x0) goto LAB_006f7813;
      if ((((*pcVar8 == '-') && ((p_00->flags & 0x40) == 0)) && (!bVar1)) &&
         ((puVar11 == &DAT_00000001 || (pcVar8[1] != ']')))) {
        unicode_utf8_DecodeRuneInString
                  (in_stack_ffffffffffffff70,
                   (sdword)pcVar8 + ((dword)(-(int)(puVar11 + -1) >> 0x3f) & 1),(int)(puVar11 + -1))
        ;
        if (puVar11 < (undefined *)((int)~r0_03 + 1)) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAlen();
        }
        runtime_newobject((internal_abi_Type *)&DAT_00855c40,~r0_03);
        extraout_RAX_08[1] = 0x1d;
        *extraout_RAX_08 = &DAT_008be932;
        extraout_RAX_08[3] = (undefined *)((int)~r0_03 + 1);
        puVar3 = extraout_RAX_08;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_01 = pcVar8;
          puVar3 = extraout_RAX_09;
        }
        puVar3[2] = pcVar8;
        return;
      }
      if ((((int)puVar11 < 3) || (*pcVar8 != '[')) || (pcVar8[1] != ':')) goto LAB_006f7813;
      r_02.len = in_stack_ffffffffffffff88;
      r_02.array = (int32 *)in_stack_ffffffffffffff80;
      r_02.cap = (int)in_stack_ffffffffffffff90;
      out.len._0_4_ = in_stack_ffffffffffffffa0;
      out.array = (int32 *)in_stack_ffffffffffffff98;
      out.len._4_4_ = in_stack_ffffffffffffffa4;
      out.cap = (int)puVar11;
      rest_02.len = in_stack_ffffffffffffffb8;
      rest_02.str = (uint8 *)sign;
      err_02.data = pvVar5;
      err_02.tab = prVar9;
      regexp_syntax___parser__parseNamedClass
                (p_00,in_stack_ffffffffffffff70,r_02,out,rest_02,err_02);
      if (extraout_R8 != 0) {
        return;
      }
      p_00 = p;
      piVar2 = extraout_RAX_03;
      pvVar5 = extraout_RCX_02;
      prVar9 = extraout_RBX_01;
      puVar11 = extraout_RSI_00;
      pcVar10 = extraout_RDI_00;
      if (extraout_RAX_03 == (int32 *)0x0) goto LAB_006f7813;
    }
    pcVar8 = pcVar10;
    bVar1 = false;
    p_00 = p;
    piVar4 = piVar2;
  } while( true );
}



void regexp_syntax_cleanClass(__int32 *rp,__int32 ~r0)

{
  sdword sVar1;
  uint uVar2;
  int32 *piVar3;
  uint uVar4;
  int i;
  int w;
  int32 lo;
  int32 hi;
  int unaff_R14;
  sort_Interface in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  sort_Sort(in_stack_ffffffffffffffe8);
  uVar2 = rp->len;
  piVar3 = rp->array;
  uVar4 = rp->cap;
  if ((int)uVar2 < 2) {
    return;
  }
  i = 2;
  w = 2;
  while( true ) {
    if ((int)uVar2 <= i) {
      if ((uint)w <= uVar4) {
        return;
      }
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    if (uVar2 <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (uVar2 <= i + 1U) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    sVar1 = piVar3[i + 1];
    if (uVar2 <= w - 1U) break;
    if ((sdword)(piVar3[w - 1] + 1) < piVar3[i]) {
      if (uVar2 <= (uint)w) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      piVar3[w] = piVar3[i];
      if (uVar2 <= w + 1U) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      piVar3[w + 1] = sVar1;
      w = w + 2;
    }
    else if (piVar3[w - 1] < sVar1) {
      piVar3[w - 1] = sVar1;
    }
    i = i + 2;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void regexp_syntax_appendLiteral(__int32 r,int32 x,regexp_syntax_Flags flags,__int32 ~r0)

{
  __int32 ~r0_00;
  __int32 ~r0_01;
  int32 hi;
  undefined6 in_register_0000001a;
  undefined8 unaff_RBP;
  uint in_RSI;
  int unaff_R14;
  int unaff_retaddr;
  __int32 in_stack_ffffffffffffffd8;
  undefined8 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RSI = in_RSI & 0xffff;
  }
  hi = (int32)CONCAT62(in_register_0000001a,flags);
  if ((in_RSI & 1) != 0) {
    ~r0_00.len = unaff_RBP;
    ~r0_00.array = (int32 *)in_stack_fffffffffffffff0;
    ~r0_00.cap = unaff_retaddr;
    regexp_syntax_appendFoldedRange(in_stack_ffffffffffffffd8,x,hi,~r0_00);
    return;
  }
  ~r0_01.len = unaff_RBP;
  ~r0_01.array = (int32 *)in_stack_fffffffffffffff0;
  ~r0_01.cap = unaff_retaddr;
  regexp_syntax_appendRange(in_stack_ffffffffffffffd8,x,hi,~r0_01);
  return;
}



void regexp_syntax_appendRange(__int32 r,int32 lo,int32 hi,__int32 ~r0)

{
  sdword sVar1;
  sdword sVar2;
  undefined4 in_register_00000004;
  void *oldPtr;
  void *extraout_RAX;
  uint in_RCX;
  int i;
  undefined4 in_register_0000001c;
  uint uVar3;
  uint extraout_RBX;
  sdword in_ESI;
  sdword in_EDI;
  uint uVar4;
  int32 rhi;
  int32 rlo;
  int unaff_R14;
  runtime_slice in_stack_ffffffffffffffb8;
  
  uVar3 = CONCAT44(in_register_0000001c,hi);
  oldPtr = (void *)CONCAT44(in_register_00000004,lo);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  i = 2;
  do {
    if (4 < i) {
      uVar3 = uVar3 + 2;
      if (in_RCX < uVar3) {
        runtime_growslice(oldPtr,uVar3,in_RCX,2,(internal_abi_Type *)&DAT_008077e0,
                          in_stack_ffffffffffffffb8);
        oldPtr = extraout_RAX;
        uVar3 = extraout_RBX;
      }
      *(sdword *)((int)oldPtr + uVar3 * 4 + -8) = in_EDI;
      *(sdword *)((int)oldPtr + uVar3 * 4 + -4) = in_ESI;
      return;
    }
    if (i <= (int)uVar3) {
      uVar4 = uVar3 - i;
      if (uVar3 <= uVar4) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      sVar1 = *(sdword *)((int)oldPtr + uVar4 * 4);
      if (uVar3 <= uVar4 + 1) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      sVar2 = *(sdword *)((int)oldPtr + uVar4 * 4 + 4);
      if ((in_EDI <= (sdword)(sVar2 + 1)) && (sVar1 <= (sdword)(in_ESI + 1))) {
        if (in_EDI < sVar1) {
          *(sdword *)((int)oldPtr + uVar4 * 4) = in_EDI;
        }
        if (sVar2 < in_ESI) {
          *(sdword *)((int)oldPtr + uVar4 * 4 + 4) = in_ESI;
        }
        return;
      }
    }
    i = i + 2;
  } while( true );
}



void regexp_syntax_appendFoldedRange(__int32 r,int32 lo,int32 hi,__int32 ~r0)

{
  __int32 ~r0_00;
  __int32 ~r0_01;
  __int32 ~r0_02;
  __int32 ~r0_03;
  __int32 ~r0_04;
  __int32 ~r0_05;
  int32 f;
  sdword r_00;
  uint uVar1;
  uint extraout_RAX;
  uint extraout_RAX_00;
  uint extraout_RAX_01;
  undefined8 extraout_RAX_02;
  uint extraout_RAX_03;
  undefined8 extraout_RAX_04;
  undefined8 uVar2;
  uint uVar3;
  uint extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  sdword in_ESI;
  int32 c;
  int unaff_R14;
  __int32 in_stack_ffffffffffffffb0;
  undefined in_stack_ffffffffffffffc8 [12];
  int32 in_stack_ffffffffffffffd4;
  undefined4 in_stack_ffffffffffffffd8;
  undefined4 in_stack_ffffffffffffffdc;
  
  uVar3 = (uint)(dword)hi;
  uVar1 = (uint)(dword)lo;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((c < 0x42) && (0x1e942 < in_ESI)) {
    ~r0_00.len._4_4_ = in_stack_ffffffffffffffd4;
    ~r0_00._0_12_ = in_stack_ffffffffffffffc8;
    ~r0_00.cap._0_4_ = in_stack_ffffffffffffffd8;
    ~r0_00.cap._4_4_ = in_stack_ffffffffffffffdc;
    regexp_syntax_appendRange(in_stack_ffffffffffffffb0,lo,hi,~r0_00);
    return;
  }
  if ((0x40 < in_ESI) && (c < 0x1e944)) {
    if (c < 0x41) {
      ~r0_01.len._4_4_ = in_stack_ffffffffffffffd4;
      ~r0_01._0_12_ = in_stack_ffffffffffffffc8;
      ~r0_01.cap._0_4_ = in_stack_ffffffffffffffd8;
      ~r0_01.cap._4_4_ = in_stack_ffffffffffffffdc;
      regexp_syntax_appendRange(in_stack_ffffffffffffffb0,lo,hi,~r0_01);
      c = 0x41;
      uVar1 = extraout_RAX;
      uVar3 = extraout_RBX;
    }
    if (0x1e943 < in_ESI) {
      ~r0_02.len._4_4_ = in_stack_ffffffffffffffd4;
      ~r0_02._0_12_ = in_stack_ffffffffffffffc8;
      ~r0_02.cap._0_4_ = c;
      ~r0_02.cap._4_4_ = in_stack_ffffffffffffffdc;
      regexp_syntax_appendRange(in_stack_ffffffffffffffb0,(int32)uVar1,(int32)uVar3,~r0_02);
      in_ESI = 0x1e943;
      uVar1 = extraout_RAX_00;
      uVar3 = extraout_RBX_00;
    }
    for (; c <= in_ESI; c = c + 1) {
      ~r0_04.len._4_4_ = in_stack_ffffffffffffffd4;
      ~r0_04._0_12_ = in_stack_ffffffffffffffc8;
      ~r0_04.cap._0_4_ = c;
      ~r0_04.cap._4_4_ = in_ESI;
      regexp_syntax_appendRange(in_stack_ffffffffffffffb0,(int32)uVar1,(int32)uVar3,~r0_04);
      unicode_SimpleFold(c,(int32)extraout_RBX_01);
      uVar2 = extraout_RAX_02;
      uVar3 = extraout_RBX_01;
      uVar1 = extraout_RAX_01;
      while (r_00 = (sdword)uVar2, r_00 != c) {
        ~r0_05.len._4_4_ = r_00;
        ~r0_05._0_12_ = in_stack_ffffffffffffffc8;
        ~r0_05.cap._0_4_ = c;
        ~r0_05.cap._4_4_ = in_ESI;
        regexp_syntax_appendRange(in_stack_ffffffffffffffb0,(int32)uVar1,(int32)uVar3,~r0_05);
        unicode_SimpleFold(r_00,(int32)extraout_RBX_02);
        uVar2 = extraout_RAX_04;
        uVar3 = extraout_RBX_02;
        uVar1 = extraout_RAX_03;
        in_stack_ffffffffffffffd4 = r_00;
      }
    }
    return;
  }
  ~r0_03.len._4_4_ = in_stack_ffffffffffffffd4;
  ~r0_03._0_12_ = in_stack_ffffffffffffffc8;
  ~r0_03.cap._0_4_ = in_stack_ffffffffffffffd8;
  ~r0_03.cap._4_4_ = in_stack_ffffffffffffffdc;
  regexp_syntax_appendRange(in_stack_ffffffffffffffb0,lo,hi,~r0_03);
  return;
}



// WARNING: Variable defined which should be unmapped: i

void regexp_syntax_appendClass(__int32 r,__int32 x,__int32 ~r0)

{
  __int32 ~r0_00;
  undefined8 in_RAX;
  undefined8 extraout_RAX;
  uint uVar1;
  undefined8 in_RBX;
  undefined8 extraout_RBX;
  int unaff_RBP;
  uint in_RSI;
  int unaff_R14;
  __int32 in_stack_ffffffffffffffd0;
  undefined8 uStack_18;
  int i;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar1 = 0;
  while( true ) {
    if ((int)in_RSI <= (int)uVar1) {
      return;
    }
    if (in_RSI <= uVar1) break;
    if (in_RSI <= uVar1 + 1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    ~r0_00.len = uVar1;
    ~r0_00.array = (int32 *)uStack_18;
    ~r0_00.cap = unaff_RBP;
    regexp_syntax_appendRange(in_stack_ffffffffffffffd0,(int32)in_RAX,(int32)in_RBX,~r0_00);
    uVar1 = uVar1 + 2;
    in_RAX = extraout_RAX;
    in_RBX = extraout_RBX;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Variable defined which should be unmapped: i

void regexp_syntax_appendFoldedClass(__int32 r,__int32 x,__int32 ~r0)

{
  __int32 ~r0_00;
  undefined8 in_RAX;
  undefined8 extraout_RAX;
  uint uVar1;
  undefined8 in_RBX;
  undefined8 extraout_RBX;
  int unaff_RBP;
  uint in_RSI;
  int unaff_R14;
  __int32 in_stack_ffffffffffffffd0;
  undefined8 uStack_18;
  int i;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar1 = 0;
  while( true ) {
    if ((int)in_RSI <= (int)uVar1) {
      return;
    }
    if (in_RSI <= uVar1) break;
    if (in_RSI <= uVar1 + 1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    ~r0_00.len = uVar1;
    ~r0_00.array = (int32 *)uStack_18;
    ~r0_00.cap = unaff_RBP;
    regexp_syntax_appendFoldedRange(in_stack_ffffffffffffffd0,(int32)in_RAX,(int32)in_RBX,~r0_00);
    uVar1 = uVar1 + 2;
    in_RAX = extraout_RAX;
    in_RBX = extraout_RBX;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void regexp_syntax_appendNegatedClass(__int32 r,__int32 x,__int32 ~r0)

{
  __int32 ~r0_00;
  __int32 ~r0_01;
  undefined8 in_RAX;
  undefined8 extraout_RAX;
  uint uVar1;
  int i;
  undefined8 in_RBX;
  undefined8 extraout_RBX;
  uint in_RSI;
  int in_RDI;
  int32 nextLo;
  sdword sVar2;
  int32 lo;
  int32 hi;
  int unaff_R14;
  __int32 in_stack_ffffffffffffffc8;
  undefined in_stack_ffffffffffffffe0 [12];
  sdword in_stack_ffffffffffffffec;
  uint in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar1 = 0;
  nextLo = 0;
  while( true ) {
    if ((int)in_RSI <= (int)uVar1) {
      if (nextLo < 0x110000) {
        ~r0_01.len._4_4_ = in_stack_ffffffffffffffec;
        ~r0_01._0_12_ = in_stack_ffffffffffffffe0;
        ~r0_01.cap = in_stack_fffffffffffffff0;
        regexp_syntax_appendRange(in_stack_ffffffffffffffc8,(int32)in_RAX,(int32)in_RBX,~r0_01);
      }
      return;
    }
    if (in_RSI <= uVar1) break;
    if (in_RSI <= uVar1 + 1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    sVar2 = *(sdword *)(in_RDI + 4 + uVar1 * 4);
    if (nextLo <= (sdword)(*(sdword *)(in_RDI + uVar1 * 4) + -1)) {
      ~r0_00.len._4_4_ = sVar2;
      ~r0_00._0_12_ = in_stack_ffffffffffffffe0;
      ~r0_00.cap = uVar1;
      regexp_syntax_appendRange(in_stack_ffffffffffffffc8,(int32)in_RAX,(int32)in_RBX,~r0_00);
      in_RAX = extraout_RAX;
      in_RBX = extraout_RBX;
      in_stack_ffffffffffffffec = sVar2;
      in_stack_fffffffffffffff0 = uVar1;
    }
    uVar1 = uVar1 + 2;
    nextLo = sVar2 + 1;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



// WARNING: Variable defined which should be unmapped: c_1

void regexp_syntax_appendTable(__int32 r,unicode_RangeTable *x,__int32 ~r0)

{
  ushort uVar1;
  ushort uVar2;
  sdword sVar3;
  sdword sVar4;
  ushort *puVar5;
  __int32 ~r0_00;
  __int32 ~r0_01;
  __int32 ~r0_02;
  __int32 ~r0_03;
  sdword sVar6;
  unicode_RangeTable *extraout_RAX;
  unicode_RangeTable *extraout_RAX_00;
  unicode_RangeTable *extraout_RAX_01;
  unicode_RangeTable *extraout_RAX_02;
  ushort *puVar7;
  sdword *psVar8;
  undefined8 in_RBX;
  undefined8 extraout_RBX;
  undefined8 extraout_RBX_00;
  undefined8 extraout_RBX_01;
  undefined8 extraout_RBX_02;
  int iVar9;
  sdword sVar10;
  ushort **in_RDI;
  dword dVar11;
  int unaff_R14;
  __int32 in_stack_ffffffffffffffa8;
  undefined8 uStack_40;
  int32 c_1;
  int32 c;
  sdword local_30;
  sdword local_2c;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  puVar7 = *in_RDI;
  puVar5 = in_RDI[1];
  for (iVar9 = 0; iVar9 < (int)puVar5; iVar9 = iVar9 + 1) {
    uVar1 = puVar7[2];
    dVar11 = (dword)*puVar7;
    uVar2 = puVar7[1];
    if (uVar1 == 1) {
      ~r0_00.len._0_4_ = c_1;
      ~r0_00.array = (int32 *)uStack_40;
      ~r0_00.len._4_4_ = c;
      ~r0_00.cap._0_4_ = local_30;
      ~r0_00.cap._4_4_ = local_2c;
      regexp_syntax_appendRange(in_stack_ffffffffffffffa8,(int32)x,(int32)in_RBX,~r0_00);
      x = extraout_RAX;
      in_RBX = extraout_RBX;
    }
    else {
      for (; (sdword)dVar11 <= (sdword)(dword)uVar2; dVar11 = uVar1 + dVar11) {
        ~r0_03.len._0_4_ = c_1;
        ~r0_03.array = (int32 *)uStack_40;
        ~r0_03.len._4_4_ = dVar11;
        ~r0_03.cap._0_4_ = local_30;
        ~r0_03.cap._4_4_ = local_2c;
        regexp_syntax_appendRange(in_stack_ffffffffffffffa8,(int32)x,(int32)in_RBX,~r0_03);
        x = extraout_RAX_02;
        in_RBX = extraout_RBX_02;
        c = dVar11;
      }
    }
    puVar7 = puVar7 + 3;
  }
  psVar8 = (sdword *)in_RDI[3];
  puVar7 = in_RDI[4];
  for (iVar9 = 0; iVar9 < (int)puVar7; iVar9 = iVar9 + 1) {
    sVar3 = psVar8[2];
    sVar4 = psVar8[1];
    sVar6 = *psVar8;
    if (sVar3 == 1) {
      ~r0_01.len._0_4_ = c_1;
      ~r0_01.array = (int32 *)uStack_40;
      ~r0_01.len._4_4_ = c;
      ~r0_01.cap._0_4_ = local_30;
      ~r0_01.cap._4_4_ = local_2c;
      regexp_syntax_appendRange(in_stack_ffffffffffffffa8,(int32)x,(int32)in_RBX,~r0_01);
      x = extraout_RAX_00;
      in_RBX = extraout_RBX_00;
    }
    else {
      while (sVar10 = sVar6, local_30 = sVar4, local_2c = sVar3, sVar10 <= sVar4) {
        ~r0_02.len._0_4_ = sVar10;
        ~r0_02.array = (int32 *)uStack_40;
        ~r0_02.len._4_4_ = c;
        ~r0_02.cap._0_4_ = sVar4;
        ~r0_02.cap._4_4_ = sVar3;
        regexp_syntax_appendRange(in_stack_ffffffffffffffa8,(int32)x,(int32)in_RBX,~r0_02);
        x = extraout_RAX_01;
        in_RBX = extraout_RBX_01;
        c_1 = sVar10;
        sVar6 = sVar10 + sVar3;
      }
    }
    psVar8 = psVar8 + 3;
  }
  return;
}



void regexp_syntax_appendNegatedTable(__int32 r,unicode_RangeTable *x,__int32 ~r0)

{
  ushort uVar1;
  ushort uVar2;
  ushort *puVar3;
  __int32 ~r0_00;
  __int32 ~r0_01;
  __int32 ~r0_02;
  __int32 ~r0_03;
  __int32 ~r0_04;
  unicode_RangeTable *extraout_RAX;
  unicode_RangeTable *extraout_RAX_00;
  unicode_RangeTable *extraout_RAX_01;
  unicode_RangeTable *extraout_RAX_02;
  ushort *puVar4;
  sdword *psVar5;
  undefined8 in_RBX;
  undefined8 extraout_RBX;
  undefined8 extraout_RBX_00;
  undefined8 extraout_RBX_01;
  undefined8 extraout_RBX_02;
  int iVar6;
  ushort **in_RDI;
  int32 nextLo;
  sdword sVar7;
  sdword sVar8;
  int32 c_1;
  int32 c;
  sdword sVar9;
  dword dVar10;
  int unaff_R14;
  __int32 in_stack_ffffffffffffffa8;
  undefined8 in_stack_ffffffffffffffc0;
  sdword in_stack_ffffffffffffffc8;
  dword in_stack_ffffffffffffffcc;
  sdword in_stack_ffffffffffffffd0;
  sdword sVar11;
  sdword in_stack_ffffffffffffffd4;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  puVar4 = *in_RDI;
  puVar3 = in_RDI[1];
  nextLo = 0;
  for (iVar6 = 0; iVar6 < (int)puVar3; iVar6 = iVar6 + 1) {
    uVar1 = puVar4[2];
    dVar10 = (dword)*puVar4;
    uVar2 = puVar4[1];
    if (uVar1 == 1) {
      if (nextLo <= (sdword)(*puVar4 - 1)) {
        ~r0_00.len._0_4_ = in_stack_ffffffffffffffc8;
        ~r0_00.array = (int32 *)in_stack_ffffffffffffffc0;
        ~r0_00.len._4_4_ = in_stack_ffffffffffffffcc;
        ~r0_00.cap._0_4_ = in_stack_ffffffffffffffd0;
        ~r0_00.cap._4_4_ = in_stack_ffffffffffffffd4;
        regexp_syntax_appendRange(in_stack_ffffffffffffffa8,(int32)x,(int32)in_RBX,~r0_00);
        x = extraout_RAX;
        in_RBX = extraout_RBX;
      }
      nextLo = uVar2 + 1;
    }
    else {
      for (; (sdword)dVar10 <= (sdword)(dword)uVar2; dVar10 = uVar1 + dVar10) {
