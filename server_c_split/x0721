void html_template_tAttr(html_template_context c,__uint8 s,html_template_context ~r0,
                        html_template_context ~r0_1,int ~r1)

{
  return;
}



// DWARF original prototype: void html/template.tURL(html/template.context c, []uint8 s,
// html/template.context ~r0, html/template.context ~r0, int ~r1)

void html_template_tURL(html_template_context c,__uint8 s,html_template_context ~r0,
                       html_template_context ~r0_1,int ~r1)

{
  char cVar1;
  int extraout_RAX;
  int j;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffffb0;
  string in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  bytes_IndexAny(in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc8,c._0_8_);
  if (extraout_RAX < 0) {
    for (j = 0; (j < (int)c.n.tab &&
                (((cVar1 = *(char *)(c._0_8_ + j), (byte)(cVar1 - 9U) < 2 ||
                  ((byte)(cVar1 - 0xcU) < 2)) || (cVar1 == ' ')))); j = j + 1) {
    }
  }
  return;
}



// DWARF original prototype: void html/template.tJS(html/template.context c, []uint8 s,
// html/template.context ~r0, html/template.context ~r0, int ~r1)

void html_template_tJS(html_template_context c,__uint8 s,html_template_context ~r0,
                      html_template_context ~r0_1,int ~r1)

{
  runtime_itab *prVar1;
  byte bVar2;
  __uint8 s_00;
  __uint8 s_01;
  __uint8 val;
  __uint8 s_02;
  __interface___ a;
  string ~r0_00;
  char extraout_AL;
  runtime_itab *extraout_RAX;
  int i;
  undefined8 extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *puVar3;
  void *~r0_01;
  undefined8 *extraout_R11;
  int unaff_R14;
  undefined in_XMM15 [16];
  interface___ in_stack_ffffffffffffff88;
  interface___ *in_stack_ffffffffffffff98;
  string in_stack_ffffffffffffffa0;
  runtime_itab *prVar4;
  int in_stack_ffffffffffffffb8;
  void *pvVar5;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  s_00.cap = (int)in_stack_ffffffffffffff98;
  s_00.array = (uint8 *)in_stack_ffffffffffffff88._type;
  s_00.len = (int)in_stack_ffffffffffffff88.data;
  bytes_IndexAny(s_00,in_stack_ffffffffffffffa0,c._0_8_);
  if (extraout_RAX == (runtime_itab *)0xffffffffffffffff) {
    s_02.cap = (int)in_stack_ffffffffffffff98;
    s_02.array = (uint8 *)in_stack_ffffffffffffff88._type;
    s_02.len = (int)in_stack_ffffffffffffff88.data;
    html_template_nextJSCtx(s_02,c.state,c.n);
    return;
  }
  if (c.n.data < extraout_RAX) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  s_01.cap = (int)in_stack_ffffffffffffff98;
  s_01.array = (uint8 *)in_stack_ffffffffffffff88._type;
  s_01.len = (int)in_stack_ffffffffffffff88.data;
  prVar4 = extraout_RAX;
  html_template_nextJSCtx(s_01,c.state,(html_template_jsCtx)extraout_RAX);
  if (c.n.tab <= prVar4) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  bVar2 = prVar4->_[c._0_8_ + -0x14];
  if (bVar2 < 0x28) {
    if (bVar2 != 0x22) {
      if (bVar2 == 0x23) {
        prVar4 = (runtime_itab *)((int)&prVar4->inter + 1);
        if (((int)prVar4 < (int)c.n.tab) && (c.n.tab <= prVar4)) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
      }
      else if (bVar2 != 0x27) goto LAB_0077a52f;
    }
  }
  else if (bVar2 < 0x30) {
    if (bVar2 == 0x2d) {
      if ((int)((int)&prVar4->inter + 2) < (int)c.n.tab) {
        prVar1 = (runtime_itab *)((int)&prVar4->inter + 3);
        if (c.n.data < prVar1) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAcap();
        }
        if (prVar1 < prVar4) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        if (html_template_commentEnd.len == 3) {
          runtime_memequal();
        }
      }
    }
    else {
      if (bVar2 != 0x2f) {
LAB_0077a52f:
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffff88);
      }
      prVar1 = (runtime_itab *)((int)&prVar4->inter + 1);
      if ((int)prVar1 < (int)c.n.tab) {
        if (c.n.tab <= prVar1) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        if (prVar4->_[c._0_8_ + -0x13] == 0x2f) {
          return;
        }
        if ((int)prVar1 < (int)c.n.tab) {
          if (c.n.tab <= prVar1) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          if (prVar4->_[c._0_8_ + -0x13] == 0x2a) {
            return;
          }
        }
      }
      if ((extraout_AL != '\0') && (extraout_AL != '\x01')) {
        val.cap = (int)in_stack_ffffffffffffff98;
        val.array = (uint8 *)in_stack_ffffffffffffff88._type;
        val.len = (int)in_stack_ffffffffffffff88.data;
        runtime_convTslice(val,(void *)((-((int)c.n.data - (int)prVar4) >> 0x3f & (uint)prVar4) +
                                       c._0_8_));
        a.len = (int)in_stack_ffffffffffffffa0.str;
        a.cap = in_stack_ffffffffffffffa0.len;
        a.array = in_stack_ffffffffffffff98;
        ~r0_00.len = in_stack_ffffffffffffffb8;
        ~r0_00.str = (uint8 *)prVar4;
        fmt_Sprintf((string)in_stack_ffffffffffffff88,a,~r0_00);
        pvVar5 = ~r0_01;
        runtime_newobject((internal_abi_Type *)&DAT_00881b60,~r0_01);
        *extraout_RAX_01 = 10;
        *(undefined (*) [16])(extraout_RAX_01 + 1) = in_XMM15;
        *(undefined (*) [16])(extraout_RAX_01 + 3) = in_XMM15;
        extraout_RAX_01[5] = 0;
        extraout_RAX_01[7] = pvVar5;
        puVar3 = extraout_RAX_01;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11 = extraout_RAX_00;
          puVar3 = extraout_RAX_02;
        }
        puVar3[6] = extraout_RAX_00;
        return;
      }
    }
  }
  else if (bVar2 == 0x3c) {
    if ((int)((int)&prVar4->inter + 3) < (int)c.n.tab) {
      prVar1 = (runtime_itab *)((int)&prVar4->inter + 4);
      if (c.n.data < prVar1) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
      if (prVar1 < prVar4) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      if (html_template_commentStart.len == 4) {
        runtime_memequal();
      }
    }
  }
  else if (bVar2 != 0x60) goto LAB_0077a52f;
  return;
}



// WARNING: Variable defined which should be unmapped: inCharset
// DWARF original prototype: void html/template.tJSDelimited(html/template.context c, []uint8 s,
// html/template.context ~r0, html/template.context ~r0, int ~r1)

void html_template_tJSDelimited
               (html_template_context c,__uint8 s,html_template_context ~r0,
               html_template_context ~r0_1,int ~r1)

{
  uint8 *puVar1;
  byte bVar2;
  __uint8 s_00;
  __uint8 s_01;
  __uint8 val;
  __uint8 val_00;
  __interface___ a;
  __interface___ a_00;
  __uint8 ~r0_00;
  string ~r0_01;
  string ~r0_02;
  int extraout_RAX;
  int extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *puVar3;
  undefined8 extraout_RAX_05;
  undefined8 *extraout_RAX_06;
  undefined8 *extraout_RAX_07;
  runtime_itab *prVar4;
  char cVar5;
  void *~r0_03;
  void *~r0_04;
  int i;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  bool bVar6;
  undefined in_XMM15 [16];
  string in_stack_ffffffffffffff48;
  interface___ *in_stack_ffffffffffffff58;
  string in_stack_ffffffffffffff60;
  int in_stack_ffffffffffffff70;
  undefined7 uStack_88;
  bool inCharset;
  int k;
  undefined local_38 [48];
  
  while (local_38 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  prVar4 = (runtime_itab *)0x0;
  cVar5 = '\0';
  do {
    if (c.n.tab < prVar4) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    s_00.cap = (int)in_stack_ffffffffffffff58;
    s_00.array = in_stack_ffffffffffffff48.str;
    s_00.len = in_stack_ffffffffffffff48.len;
    bytes_IndexAny(s_00,in_stack_ffffffffffffff60,
                   (-((int)c.n.data - (int)prVar4) >> 0x3f & (uint)prVar4) + c._0_8_);
    i = (int)(prVar4->_ + extraout_RAX + -0x14);
    if (i < (int)prVar4) {
      if (cVar5 != '\0') {
        val_00.cap = (int)in_stack_ffffffffffffff58;
        val_00.array = in_stack_ffffffffffffff48.str;
        val_00.len = in_stack_ffffffffffffff48.len;
        runtime_convTslice(val_00,(void *)c._0_8_);
        a_00.len = (int)in_stack_ffffffffffffff60.str;
        a_00.cap = in_stack_ffffffffffffff60.len;
        a_00.array = in_stack_ffffffffffffff58;
        ~r0_02.len._0_7_ = uStack_88;
        ~r0_02.str = (uint8 *)in_stack_ffffffffffffff70;
        ~r0_02.len._7_1_ = cVar5;
        fmt_Sprintf(in_stack_ffffffffffffff48,a_00,~r0_02);
        runtime_newobject((internal_abi_Type *)&DAT_00881b60,~r0_04);
        *extraout_RAX_06 = 7;
        *(undefined (*) [16])(extraout_RAX_06 + 1) = in_XMM15;
        *(undefined (*) [16])(extraout_RAX_06 + 3) = in_XMM15;
        extraout_RAX_06[5] = 0;
        extraout_RAX_06[7] = ~r0_04;
        puVar3 = extraout_RAX_06;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_00 = extraout_RAX_05;
          puVar3 = extraout_RAX_07;
        }
        puVar3[6] = extraout_RAX_05;
        return;
      }
      return;
    }
    if (c.n.tab <= (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    bVar2 = ((uint8 *)(i + 0x14))[c._0_8_ + -0x14];
    if (bVar2 < 0x5c) {
      if (bVar2 == 0x2f) {
        if (i < 1) {
          bVar6 = false;
        }
        else {
          puVar1 = prVar4->_ + extraout_RAX + -0xd;
          if ((int)c.n.tab < (int)puVar1) {
            bVar6 = false;
          }
          else {
            if (c.n.data < puVar1) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceAcap();
            }
            if (puVar1 < prVar4->_ + extraout_RAX + -0x15) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            s_01.cap = (int)in_stack_ffffffffffffff58;
            s_01.array = in_stack_ffffffffffffff48.str;
            s_01.len = in_stack_ffffffffffffff48.len;
            ~r0_00.cap = in_stack_ffffffffffffff70;
            ~r0_00.array = in_stack_ffffffffffffff60.str;
            ~r0_00.len = in_stack_ffffffffffffff60.len;
            bytes_ToLower(s_01,~r0_00);
            internal_bytealg_Compare();
            bVar6 = extraout_RAX_00 == 0;
          }
        }
        if (bVar6) {
          i = (int)(prVar4->_ + extraout_RAX + -0x13);
        }
        else if (cVar5 == '\0') {
          return;
        }
      }
      else if (bVar2 == 0x5b) {
        cVar5 = '\x01';
      }
      else {
LAB_0077a8c6:
        if (cVar5 == '\0') {
          return;
        }
      }
    }
    else if (bVar2 == 0x5c) {
      i = (int)(prVar4->_ + extraout_RAX + -0x13);
      if (c.n.tab == (runtime_itab *)i) {
        val.cap = (int)in_stack_ffffffffffffff58;
        val.array = in_stack_ffffffffffffff48.str;
        val.len = in_stack_ffffffffffffff48.len;
        runtime_convTslice(val,(void *)c._0_8_);
        local_38._8_8_ = extraout_RAX_01;
        local_38._0_8_ = &DAT_00801a20;
        a.len = (int)in_stack_ffffffffffffff60.str;
        a.cap = in_stack_ffffffffffffff60.len;
        a.array = in_stack_ffffffffffffff58;
        ~r0_01.len._0_7_ = uStack_88;
        ~r0_01.str = (uint8 *)in_stack_ffffffffffffff70;
        ~r0_01.len._7_1_ = cVar5;
        fmt_Sprintf(in_stack_ffffffffffffff48,a,~r0_01);
        runtime_newobject((internal_abi_Type *)&DAT_00881b60,~r0_03);
        *extraout_RAX_03 = 8;
        *(undefined (*) [16])(extraout_RAX_03 + 1) = in_XMM15;
        *(undefined (*) [16])(extraout_RAX_03 + 3) = in_XMM15;
        extraout_RAX_03[5] = 0;
        extraout_RAX_03[7] = ~r0_03;
        puVar3 = extraout_RAX_03;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11 = extraout_RAX_02;
          puVar3 = extraout_RAX_04;
        }
        puVar3[6] = extraout_RAX_02;
        return;
      }
    }
    else {
      if (bVar2 != 0x5d) goto LAB_0077a8c6;
      cVar5 = '\0';
    }
    prVar4 = (runtime_itab *)(i + 1);
  } while( true );
}



// DWARF original prototype: void html/template.tBlockCmt(html/template.context c, []uint8 s,
// html/template.context ~r0, html/template.context ~r0, int ~r1)

void html_template_tBlockCmt
               (html_template_context c,__uint8 s,html_template_context ~r0,
               html_template_context ~r0_1,int ~r1)

{
  __uint8 s_00;
  html_template_state i_00;
  int extraout_RAX;
  int i;
  void *x;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffa8;
  int in_stack_ffffffffffffffb8;
  __uint8 in_stack_ffffffffffffffc0;
  
  while (i_00 = (html_template_state)~r1, &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r1 = ~r1 & 0xff;
  }
  s_00.cap = in_stack_ffffffffffffffb8;
  s_00.array = (uint8 *)in_stack_ffffffffffffffa8._type;
  s_00.len = (int)in_stack_ffffffffffffffa8.data;
  bytes_Index(s_00,in_stack_ffffffffffffffc0,c._0_8_);
  if (extraout_RAX == -1) {
    return;
  }
  if ((i_00 != 0xf) && (i_00 != 0x19)) {
    html_template_state_String(i_00,(string)in_stack_ffffffffffffffa8);
    runtime_convTstring((string)in_stack_ffffffffffffffa8,x);
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffa8);
  }
  return;
}



// DWARF original prototype: void html/template.tLineCmt(html/template.context c, []uint8 s,
// html/template.context ~r0, html/template.context ~r0, int ~r1)

void html_template_tLineCmt
               (html_template_context c,__uint8 s,html_template_context ~r0,
               html_template_context ~r0_1,int ~r1)

{
  __uint8 s_00;
  html_template_state i_00;
  int extraout_RAX;
  int i;
  void *x;
  html_template_state endState;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffa8;
  int in_stack_ffffffffffffffb8;
  string in_stack_ffffffffffffffc0;
  
  while (i_00 = (html_template_state)~r1, &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r1 = ~r1 & 0xff;
  }
  if ((2 < (byte)(i_00 - 0x10)) && (i_00 != 0x1a)) {
    html_template_state_String(i_00,(string)in_stack_ffffffffffffffa8);
    runtime_convTstring((string)in_stack_ffffffffffffffa8,x);
                    // WARNING: Subroutine does not return
    runtime_gopanic(in_stack_ffffffffffffffa8);
  }
  s_00.cap = in_stack_ffffffffffffffb8;
  s_00.array = (uint8 *)in_stack_ffffffffffffffa8._type;
  s_00.len = (int)in_stack_ffffffffffffffa8.data;
  bytes_IndexAny(s_00,in_stack_ffffffffffffffc0,c._0_8_);
  if (extraout_RAX != -1) {
    return;
  }
  return;
}



// WARNING: Variable defined which should be unmapped: k
// DWARF original prototype: void html/template.tCSS(html/template.context c, []uint8 s,
// html/template.context ~r0, html/template.context ~r0, int ~r1)

void html_template_tCSS(html_template_context c,__uint8 s,html_template_context ~r0,
                       html_template_context ~r0_1,int ~r1)

{
  runtime_itab *prVar1;
  byte bVar2;
  __uint8 ~r0_00;
  __uint8 ~r0_01;
  bool ~r0_02;
  char extraout_AL;
  int extraout_RAX;
  runtime_itab *prVar3;
  int j;
  int i;
  int extraout_RBX;
  int unaff_R14;
  __uint8 in_stack_ffffffffffffff98;
  string in_stack_ffffffffffffffb0;
  int k;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  prVar3 = (runtime_itab *)0x0;
  do {
    if (c.n.tab < prVar3) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    bytes_IndexAny(in_stack_ffffffffffffff98,in_stack_ffffffffffffffb0,
                   (-((int)c.n.data - (int)prVar3) >> 0x3f & (uint)prVar3) + c._0_8_);
    prVar1 = (runtime_itab *)(prVar3->_ + extraout_RAX + -0x14);
    if ((int)prVar1 < (int)prVar3) {
      return;
    }
    if (c.n.tab <= prVar1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    bVar2 = prVar1->_[c._0_8_ + -0x14];
    if (bVar2 < 0x28) {
      if (bVar2 == 0x22) {
        return;
      }
      if (bVar2 == 0x27) {
        return;
      }
    }
    else if (bVar2 == 0x28) {
      ~r0_00.len = (int)prVar1;
      ~r0_00.array = (uint8 *)prVar3;
      ~r0_00.cap = extraout_RAX;
      bytes_TrimRight(in_stack_ffffffffffffff98,in_stack_ffffffffffffffb0,~r0_00);
      html_template_endsWithCSSKeyword(in_stack_ffffffffffffff98,in_stack_ffffffffffffffb0,~r0_02);
      if (extraout_AL != '\0') {
        ~r0_01.len = (int)prVar1;
        ~r0_01.array = (uint8 *)prVar3;
        ~r0_01.cap = extraout_RAX;
        bytes_TrimLeft(in_stack_ffffffffffffff98,in_stack_ffffffffffffffb0,~r0_01);
        prVar3 = (runtime_itab *)((int)c.n.tab - extraout_RBX);
        if (c.n.tab != prVar3) {
          if (c.n.tab <= prVar3) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          if (((prVar3->_[c._0_8_ + -0x14] != 0x22) && (c.n.tab != prVar3)) && (c.n.tab <= prVar3))
          {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
        }
        return;
      }
    }
    else if ((bVar2 == 0x2f) &&
            ((int)(runtime_itab *)(prVar3->_ + extraout_RAX + -0x13) < (int)c.n.tab)) {
      if (c.n.tab <= (runtime_itab *)(prVar3->_ + extraout_RAX + -0x13)) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if (prVar1->_[c._0_8_ + -0x13] == 0x2a) {
        return;
      }
      if (prVar1->_[c._0_8_ + -0x13] == 0x2f) {
        return;
      }
    }
    prVar3 = (runtime_itab *)(prVar3->_ + extraout_RAX + -0x13);
  } while( true );
}



// DWARF original prototype: void html/template.tCSSStr(html/template.context c, []uint8 s,
// html/template.context ~r0, html/template.context ~r0, int ~r1)

void html_template_tCSSStr
               (html_template_context c,__uint8 s,html_template_context ~r0,
               html_template_context ~r0_1,int ~r1)

{
  runtime_itab *prVar1;
  string format;
  string ~r0_00;
  string val;
  interface___ e;
  __uint8 s_00;
  __uint8 s_01;
  __uint8 val_00;
  __uint8 s_02;
  html_template_context c_00;
  html_template_context c_01;
  __interface___ a;
  string chars;
  __uint8 ~r0_01;
  __uint8 ~r0_02;
  __uint8 s_03;
  __uint8 s_04;
  string ~r0_03;
  html_template_context ~r0_04;
  html_template_context ~r0_05;
  html_template_context ~r0_1_00;
  html_template_context ~r0_1_01;
  byte extraout_AL;
  undefined8 uVar2;
  internal_abi_Type *extraout_RAX;
  int extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *puVar3;
  undefined8 extraout_RAX_05;
  void *x;
  undefined *puVar4;
  int extraout_RCX;
  undefined8 extraout_RCX_00;
  int k;
  int nread;
  void *extraout_RBX;
  void *~r0_06;
  undefined8 extraout_RBX_00;
  undefined extraout_SIL;
  undefined extraout_R8B;
  int iVar5;
  html_template_Error *~r0_07;
  int i;
  html_template_Error *phVar6;
  undefined8 *extraout_R11;
  int unaff_R14;
  undefined in_XMM15 [16];
  internal_abi_Type *in_stack_ffffffffffffff10;
  void *in_stack_ffffffffffffff18;
  int in_stack_ffffffffffffff20;
  html_template_Error *in_stack_ffffffffffffff28;
  int in_stack_ffffffffffffff30;
  uint8 *in_stack_ffffffffffffff38;
  int in_stack_ffffffffffffff40;
  undefined8 in_stack_ffffffffffffff48;
  void *pvVar7;
  undefined8 in_stack_ffffffffffffff78;
  undefined local_78 [52];
  undefined4 uStack_44;
  
  while (s.array._0_1_ = (byte)~r1, local_78 + 8 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    ~r1 = ~r1 & 0xff;
  }
  if ((byte)s.array < 0x16) {
    if ((byte)s.array == 0x14) {
LAB_0077b731:
      uVar2 = 2;
      puVar4 = &DAT_008ae220;
      goto LAB_0077b766;
    }
    if ((byte)s.array != 0x15) {
LAB_0077bc46:
      ~r0_00.len = (int)in_stack_ffffffffffffff18;
      ~r0_00.str = (uint8 *)in_stack_ffffffffffffff10;
      html_template_state_String((byte)s.array,~r0_00);
      val.len = (int)in_stack_ffffffffffffff18;
      val.str = (uint8 *)in_stack_ffffffffffffff10;
      runtime_convTstring(val,x);
      e.data = in_stack_ffffffffffffff18;
      e._type = in_stack_ffffffffffffff10;
                    // WARNING: Subroutine does not return
      runtime_gopanic(e);
    }
  }
  else {
    if ((byte)s.array == 0x16) goto LAB_0077b731;
    if ((byte)s.array != 0x17) {
      if ((byte)s.array != 0x18) goto LAB_0077bc46;
      uVar2 = 7;
      puVar4 = &DAT_008b0d6b;
      goto LAB_0077b766;
    }
  }
  uVar2 = 2;
  puVar4 = &DAT_008ae25e;
LAB_0077b766:
  k = 0;
  while( true ) {
    if (c.n.tab < (uint)k) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    iVar5 = (int)c.n.data - k;
    phVar6 = (html_template_Error *)((int)c.n.tab - k);
    ~r0_07 = (html_template_Error *)((-iVar5 >> 0x3f & k) + c._0_8_);
    s_01.len = (int)in_stack_ffffffffffffff18;
    s_01.array = (uint8 *)in_stack_ffffffffffffff10;
    s_01.cap = in_stack_ffffffffffffff20;
    chars.len = in_stack_ffffffffffffff30;
    chars.str = (uint8 *)in_stack_ffffffffffffff28;
    bytes_IndexAny(s_01,chars,(int)~r0_07);
    prVar1 = (runtime_itab *)(k + extraout_RAX_00);
    if ((int)prVar1 < k) {
      s_02.len = (int)in_stack_ffffffffffffff18;
      s_02.array = (uint8 *)in_stack_ffffffffffffff10;
      s_02.cap = in_stack_ffffffffffffff20;
      ~r0_02.len = in_stack_ffffffffffffff30;
      ~r0_02.array = (uint8 *)in_stack_ffffffffffffff28;
      ~r0_02.cap = (int)in_stack_ffffffffffffff38;
      html_template_decodeCSS(s_02,~r0_02);
      c_01.n.tab = (runtime_itab *)extraout_RBX_00;
      c_01.state = (char)extraout_RAX_05;
      c_01.delim = (char)((uint)extraout_RAX_05 >> 8);
      c_01.urlPart = (char)((uint)extraout_RAX_05 >> 0x10);
      c_01.jsCtx = (char)((uint)extraout_RAX_05 >> 0x18);
      c_01.attr = (char)((uint)extraout_RAX_05 >> 0x20);
      c_01.element = (char)((uint)extraout_RAX_05 >> 0x28);
      c_01._6_2_ = (short)((uint)extraout_RAX_05 >> 0x30);
      c_01.n.data = (void *)extraout_RCX_00;
      c_01.err = in_stack_ffffffffffffff28;
      s_04.len = (int)in_stack_ffffffffffffff38;
      s_04.array = (uint8 *)in_stack_ffffffffffffff30;
      s_04.cap = in_stack_ffffffffffffff40;
      ~r0_05.n.tab = (runtime_itab *)k;
      ~r0_05.state = (char)in_stack_ffffffffffffff48;
      ~r0_05.delim = (char)((uint)in_stack_ffffffffffffff48 >> 8);
      ~r0_05.urlPart = (char)((uint)in_stack_ffffffffffffff48 >> 0x10);
      ~r0_05.jsCtx = (char)((uint)in_stack_ffffffffffffff48 >> 0x18);
      ~r0_05.attr = (char)((uint)in_stack_ffffffffffffff48 >> 0x20);
      ~r0_05.element = (char)((uint)in_stack_ffffffffffffff48 >> 0x28);
      ~r0_05._6_2_ = (short)((uint)in_stack_ffffffffffffff48 >> 0x30);
      ~r0_05.n.data = (void *)uVar2;
      ~r0_05.err = phVar6;
      ~r0_1_01.n.tab = (runtime_itab *)puVar4;
      ~r0_1_01.state = (char)iVar5;
      ~r0_1_01.delim = (char)((uint)iVar5 >> 8);
      ~r0_1_01.urlPart = (char)((uint)iVar5 >> 0x10);
      ~r0_1_01.jsCtx = (char)((uint)iVar5 >> 0x18);
      ~r0_1_01.attr = (char)((uint)iVar5 >> 0x20);
      ~r0_1_01.element = (char)((uint)iVar5 >> 0x28);
      ~r0_1_01._6_2_ = (short)((uint)iVar5 >> 0x30);
      ~r0_1_01.n.data = (void *)in_stack_ffffffffffffff78;
      ~r0_1_01.err = ~r0_07;
      html_template_tURL(c_01,s_04,~r0_05,~r0_1_01,(uint)(byte)s.array);
      return;
    }
    if (c.n.tab <= prVar1) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (prVar1->_[c._0_8_ + -0x14] != 0x5c) break;
    if (c.n.tab == (runtime_itab *)(k + extraout_RAX_00 + 1)) {
      val_00.len = (int)in_stack_ffffffffffffff18;
      val_00.array = (uint8 *)in_stack_ffffffffffffff10;
      val_00.cap = in_stack_ffffffffffffff20;
      runtime_convTslice(val_00,(void *)c._0_8_);
      local_78._8_8_ = extraout_RAX_01;
      local_78._0_8_ = &DAT_00801a20;
      format.len = (int)in_stack_ffffffffffffff18;
      format.str = (uint8 *)in_stack_ffffffffffffff10;
      a.len = (int)in_stack_ffffffffffffff28;
      a.array = (interface___ *)in_stack_ffffffffffffff20;
      a.cap = in_stack_ffffffffffffff30;
      ~r0_03.len = in_stack_ffffffffffffff40;
      ~r0_03.str = in_stack_ffffffffffffff38;
      fmt_Sprintf(format,a,~r0_03);
      pvVar7 = ~r0_06;
      uVar2 = extraout_RAX_02;
      runtime_newobject((internal_abi_Type *)&DAT_00881b60,~r0_06);
      *extraout_RAX_03 = 8;
      *(undefined (*) [16])(extraout_RAX_03 + 1) = in_XMM15;
      *(undefined (*) [16])(extraout_RAX_03 + 3) = in_XMM15;
      extraout_RAX_03[5] = 0;
      extraout_RAX_03[7] = pvVar7;
      puVar3 = extraout_RAX_03;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11 = uVar2;
        puVar3 = extraout_RAX_04;
      }
      puVar3[6] = uVar2;
      return;
    }
    pvVar7 = (void *)(k + extraout_RAX_00 + 2);
    if (c.n.data < pvVar7) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAcap();
    }
    s_00.len = (int)in_stack_ffffffffffffff18;
    s_00.array = (uint8 *)in_stack_ffffffffffffff10;
    s_00.cap = in_stack_ffffffffffffff20;
    ~r0_01.len = in_stack_ffffffffffffff30;
    ~r0_01.array = (uint8 *)in_stack_ffffffffffffff28;
    ~r0_01.cap = (int)in_stack_ffffffffffffff38;
    html_template_decodeCSS(s_00,~r0_01);
    c_00.n.tab = (runtime_itab *)extraout_RBX;
    c_00._0_8_ = extraout_RAX;
    c_00.n.data = (void *)extraout_RCX;
    c_00.err = in_stack_ffffffffffffff28;
    s_03.len = (int)in_stack_ffffffffffffff38;
    s_03.array = (uint8 *)in_stack_ffffffffffffff30;
    s_03.cap = in_stack_ffffffffffffff40;
    ~r0_04.n.tab = (runtime_itab *)k;
    ~r0_04.state = (char)in_stack_ffffffffffffff48;
    ~r0_04.delim = (char)((uint)in_stack_ffffffffffffff48 >> 8);
    ~r0_04.urlPart = (char)((uint)in_stack_ffffffffffffff48 >> 0x10);
    ~r0_04.jsCtx = (char)((uint)in_stack_ffffffffffffff48 >> 0x18);
    ~r0_04.attr = (char)((uint)in_stack_ffffffffffffff48 >> 0x20);
    ~r0_04.element = (char)((uint)in_stack_ffffffffffffff48 >> 0x28);
    ~r0_04._6_2_ = (short)((uint)in_stack_ffffffffffffff48 >> 0x30);
    ~r0_04.n.data = (void *)uVar2;
    ~r0_04.err = phVar6;
    ~r0_1_00.n.tab = (runtime_itab *)puVar4;
    ~r0_1_00._0_8_ = pvVar7;
    ~r0_1_00.n.data = (void *)in_stack_ffffffffffffff78;
    ~r0_1_00.err = ~r0_07;
    in_stack_ffffffffffffff10 = extraout_RAX;
    in_stack_ffffffffffffff18 = extraout_RBX;
    in_stack_ffffffffffffff20 = extraout_RCX;
    k = (int)pvVar7;
    html_template_tURL(c_00,s_03,~r0_04,~r0_1_00,(uint)(byte)s.array);
    s.array._0_1_ = extraout_AL;
  }
  return;
}



// DWARF original prototype: void html/template.tError(html/template.context c, []uint8 s,
// html/template.context ~r0, html/template.context ~r0, int ~r1)

void html_template_tError
               (html_template_context c,__uint8 s,html_template_context ~r0,
               html_template_context ~r0_1,int ~r1)

{
  return;
}



// Local variable j:int[RDI:8] conflicts with parameter, skipped.

void html_template_eatAttrName(__uint8 s,int i,int ~r0,html_template_Error *~r1)

{
  byte bVar1;
  __uint8 val;
  __uint8 val_00;
  __interface___ a;
  string ~r0_00;
  undefined8 extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *puVar2;
  undefined8 uVar3;
  void *~r0_01;
  uint in_RDI;
  undefined8 *extraout_R11;
  int unaff_R14;
  undefined in_XMM15 [16];
  string in_stack_ffffffffffffffa0;
  interface___ *in_stack_ffffffffffffffb0;
  undefined in_stack_ffffffffffffffb8 [16];
  uint8 *in_stack_ffffffffffffffc8;
  void *pvVar4;
  int in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  do {
    if (~r0 <= (int)in_RDI) {
      return;
    }
    if ((uint)~r0 <= in_RDI) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    bVar1 = *(byte *)(i + in_RDI);
    if (bVar1 < 0x21) {
      if ((((byte)(bVar1 - 9) < 2) || ((byte)(bVar1 - 0xc) < 2)) || (bVar1 == 0x20)) {
        return;
      }
    }
    else if (bVar1 < 0x28) {
      if ((bVar1 == 0x22) || (bVar1 == 0x27)) {
LAB_0077be04:
        if (in_RDI <= in_RDI + 1) {
          val.cap = (int)in_stack_ffffffffffffffb0;
          val.array = in_stack_ffffffffffffffa0.str;
          val.len = in_stack_ffffffffffffffa0.len;
          runtime_convTslice(val,(void *)(i + (in_RDI & (int)-((int)~r1 - in_RDI) >> 0x3f)));
          val_00.cap = (int)in_stack_ffffffffffffffb0;
          val_00.array = in_stack_ffffffffffffffa0.str;
          val_00.len = in_stack_ffffffffffffffa0.len;
          runtime_convTslice(val_00,(void *)i);
          a.len = in_stack_ffffffffffffffb8._0_8_;
          a.cap = in_stack_ffffffffffffffb8._8_8_;
          a.array = in_stack_ffffffffffffffb0;
          ~r0_00.len = in_stack_ffffffffffffffd0;
          ~r0_00.str = in_stack_ffffffffffffffc8;
          fmt_Sprintf(in_stack_ffffffffffffffa0,a,~r0_00);
          pvVar4 = ~r0_01;
          uVar3 = extraout_RAX;
          runtime_newobject((internal_abi_Type *)&DAT_00881b60,~r0_01);
          *extraout_RAX_00 = 2;
          *(undefined (*) [16])(extraout_RAX_00 + 1) = in_XMM15;
          *(undefined (*) [16])(extraout_RAX_00 + 3) = in_XMM15;
          extraout_RAX_00[5] = 0;
          extraout_RAX_00[7] = pvVar4;
          puVar2 = extraout_RAX_00;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier1();
            *extraout_R11 = uVar3;
            puVar2 = extraout_RAX_01;
          }
          puVar2[6] = uVar3;
          return;
        }
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
    }
    else {
      if (bVar1 == 0x3c) goto LAB_0077be04;
      if ((byte)(bVar1 - 0x3d) < 2) {
        return;
      }
    }
    in_RDI = in_RDI + 1;
  } while( true );
}



void html_template_eatTagName(__uint8 s,int i,int ~r0,html_template_element ~r1)

{
  char cVar1;
  void *~r0_00;
  undefined7 in_register_00000009;
  int j;
  uint uVar2;
  uint in_RDI;
  uint8 x;
  int unaff_R14;
  string in_stack_ffffffffffffffb0;
  string in_stack_ffffffffffffffc0;
  uint8 local_28 [32];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (~r0 != in_RDI) {
    if ((uint)~r0 <= in_RDI) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if (((byte)(*(char *)(in_RDI + i) + 0xbfU) < 0x1a) ||
       ((byte)(*(char *)(in_RDI + i) + 0x9fU) < 0x1a)) {
      uVar2 = in_RDI + 1;
      while ((int)uVar2 < ~r0) {
        if ((uint)~r0 <= uVar2) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        cVar1 = *(char *)(i + uVar2);
        if ((((byte)(cVar1 + 0xbfU) < 0x1a) || ((byte)(cVar1 + 0x9fU) < 0x1a)) ||
           ((byte)(cVar1 - 0x30U) < 10)) {
          uVar2 = uVar2 + 1;
        }
        else {
          if (((cVar1 != ':') && (cVar1 != '-')) || (~r0 <= (int)(uVar2 + 1))) break;
          if ((uint)~r0 <= uVar2 + 1) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          cVar1 = *(char *)(uVar2 + 1 + i);
          if (((0x19 < (byte)(cVar1 + 0xbfU)) && (0x19 < (byte)(cVar1 + 0x9fU))) &&
             (9 < (byte)(cVar1 - 0x30U))) break;
          uVar2 = uVar2 + 2;
        }
      }
      if (CONCAT71(in_register_00000009,~r1) < uVar2) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAcap();
      }
      if (in_RDI <= uVar2) {
        runtime_slicebytetostring
                  (&local_28,
                   (uint8 *)(i + (in_RDI & (int)(in_RDI - CONCAT71(in_register_00000009,~r1)) >>
                                           0x3f)),uVar2 - in_RDI,in_stack_ffffffffffffffb0);
        strings_ToLower(in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc0);
        runtime_mapaccess1_faststr
                  ((internal_abi_MapType *)&DAT_0082fec0,
                   (runtime_hmap *)html_template_elementNameMap,in_stack_ffffffffffffffb0,~r0_00);
        return;
      }
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
  }
  return;
}

