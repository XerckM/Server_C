          piVar11 = (int *)&DAT_00000003;
          local_f0 = (int *)&DAT_008ae2d6;
        }
        cVar20 = '\x01';
      }
      cVar22 = '\x01';
      piVar10 = piVar11;
    }
    else {
      if (pnVar19 == (net_dnsConfig *)0x0) {
        return;
      }
      if (((piVar21 == (int *)0xa) && (ppiVar17 = local_100, *piVar5 == 0x616e74736f68796d)) &&
         (*(short *)(piVar5 + 1) == 0x656d)) {
        h.len = (int)in_stack_fffffffffffffe88;
        h.str = (uint8 *)in_stack_fffffffffffffe80;
        net_isLocalhost(h,SUB81(prStack0000000000000018,0));
        if (extraout_AL_03 != '\0') {
          return;
        }
        if (pnVar19 == (net_dnsConfig *)0x8) {
          i_2 = 0;
          while( true ) {
            if (7 < i_2) {
              return;
            }
            uVar16 = prStack0000000000000018->_[i_2 + -0x14];
            if ((byte)(uVar16 + 0xbf) < 0x1a) {
              uVar16 = uVar16 + 0x20;
            }
            uVar18 = (&DAT_008b1ac6)[i_2];
            if ((byte)(uVar18 + 0xbf) < 0x1a) {
              uVar18 = uVar18 + 0x20;
            }
            if (uVar18 != uVar16) break;
            i_2 = i_2 + 1;
          }
        }
        if (pnVar19 == (net_dnsConfig *)0x9) {
          i_3 = 0;
          while( true ) {
            if (8 < i_3) {
              return;
            }
            uVar16 = prStack0000000000000018->_[i_3 + -0x14];
            if ((byte)(uVar16 + 0xbf) < 0x1a) {
              uVar16 = uVar16 + 0x20;
            }
            uVar18 = (&DAT_008b2600)[i_3];
            if ((byte)(uVar18 + 0xbf) < 0x1a) {
              uVar18 = uVar18 + 0x20;
            }
            if (uVar18 != uVar16) break;
            i_3 = i_3 + 1;
          }
        }
        (**net_getHostname)((string *)*net_getHostname,extraout_RBX);
        if (extraout_RCX_00 != 0) {
          return;
        }
        piVar10 = piVar11;
        ppiVar17 = local_100;
        if (extraout_RBX_00 == pnVar19) {
          i_4 = 0;
          while( true ) {
            if ((int)pnVar19 <= i_4) {
              return;
            }
            uVar16 = prStack0000000000000018->_[i_4 + -0x14];
            if ((byte)(uVar16 + 0xbf) < 0x1a) {
              uVar16 = uVar16 + 0x20;
            }
            uVar18 = *(uint8 *)(i_4 + extraout_RAX_03);
            if ((byte)(uVar18 + 0xbf) < 0x1a) {
              uVar18 = uVar18 + 0x20;
            }
            if (uVar18 != uVar16) break;
            i_4 = i_4 + 1;
          }
        }
      }
      else {
        if (pnVar19 == (net_dnsConfig *)0x0) {
          return;
        }
        if ((int)piVar21 < 4) {
          bVar24 = false;
        }
        else {
          bVar24 = *(sdword *)piVar5 == 0x736e646d;
        }
        if (!bVar24) {
          return;
        }
        if (c->mdnsTest == 0) {
          name_00.len = (int)in_stack_fffffffffffffe88;
          name_00.str = (uint8 *)in_stack_fffffffffffffe80;
          ~r0.tab._1_7_ = in_stack_fffffffffffffe91;
          ~r0.tab._0_1_ = in_stack_fffffffffffffe90;
          ~r0.data = in_stack_fffffffffffffe98;
          ~r1.tab._4_1_ = cVar23;
          ~r1.tab._0_4_ = _uStack_160;
          ~r1.tab._5_1_ = filesSource;
          ~r1.tab._6_1_ = cVar20;
          ~r1.tab._7_1_ = canUseCgo;
          ~r1.data = pvVar4;
          os_Stat(name_00,~r0,~r1);
          if ((extraout_RCX != 0) &&
             (err_03.data = in_stack_fffffffffffffe88, err_03.tab = in_stack_fffffffffffffe80,
             target_03.tab._1_7_ = in_stack_fffffffffffffe91,
             target_03.tab._0_1_ = in_stack_fffffffffffffe90,
             target_03.data = in_stack_fffffffffffffe98,
             errors_Is(err_03,target_03,SUB81(extraout_RCX,0)), extraout_AL_04 == '\0')) {
            return;
          }
          bVar24 = extraout_RCX == 0;
          ppiVar17 = local_100;
        }
        else if (c->mdnsTest == 1) {
          bVar24 = true;
        }
        else {
          bVar24 = false;
        }
        piVar10 = piVar11;
        if (bVar24) {
          return;
        }
      }
    }
    local_e0 = local_e0 + 5;
    i = i + 1;
    piVar11 = piVar10;
  } while( true );
}



// DWARF original prototype: void net.goDebugNetDNS(string dnsMode, int debugLevel, int debugLevel)

void net_goDebugNetDNS(string dnsMode,int debugLevel,int debugLevel_1)

{
  string ~r0;
  string s;
  string s_00;
  string s_01;
  uint8 *extraout_RAX;
  int i;
  uint extraout_RBX;
  int unaff_R14;
  uint8 *in_stack_ffffffffffffff90;
  uint8 *puVar1;
  int in_stack_ffffffffffffff98;
  uint uVar2;
  uint local_58;
  string dnsMode_local;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ~r0.len = in_stack_ffffffffffffff98;
  ~r0.str = in_stack_ffffffffffffff90;
  internal_godebug___Setting__Value(net_netdns,~r0);
  puVar1 = extraout_RAX;
  uVar2 = extraout_RBX;
  internal_bytealg_IndexByteString();
  if (local_58 == 0xffffffffffffffff) {
    s_01.len = uVar2;
    s_01.str = puVar1;
    net_goDebugNetDNS_func1(s_01);
    return;
  }
  if (extraout_RBX < local_58) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  s.len = uVar2;
  s.str = puVar1;
  net_goDebugNetDNS_func1(s);
  if (local_58 + 1 <= extraout_RBX) {
    s_00.len = uVar2;
    s_00.str = puVar1;
    net_goDebugNetDNS_func1(s_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceB();
}



void net_goDebugNetDNS_func1(string s)

{
  byte bVar1;
  byte *in_RAX;
  byte *extraout_RAX;
  int *_debugLevel;
  string *_dnsMode;
  byte **extraout_RCX;
  byte **ppbVar2;
  int iVar3;
  int in_RDX;
  byte *in_RBX;
  int iVar4;
  byte **extraout_R11;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  if (in_RBX == (byte *)0x0) {
    return;
  }
  if ((*in_RAX < 0x30) || (0x39 < *in_RAX)) {
    ppbVar2 = *(byte ***)(in_RDX + 0x10);
    ppbVar2[1] = in_RBX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX;
      extraout_R11[1] = *extraout_RCX;
      in_RAX = extraout_RAX;
      ppbVar2 = extraout_RCX;
    }
    *ppbVar2 = in_RAX;
  }
  else {
    iVar4 = 0;
    for (iVar3 = 0;
        ((iVar3 < (int)in_RBX && (bVar1 = in_RAX[iVar3], 0x2f < bVar1)) && (bVar1 < 0x3a));
        iVar3 = iVar3 + 1) {
      iVar4 = (uint)(byte)(bVar1 - 0x30) + iVar4 * 10;
      if (0xfffffe < iVar4) {
        iVar4 = 0xffffff;
        goto LAB_005d93db;
      }
    }
    if (iVar3 == 0) {
      iVar4 = 0;
    }
LAB_005d93db:
    **(int **)(in_RDX + 8) = iVar4;
  }
  return;
}



void net_isLocalhost(string h,bool ~r0)

{
  char extraout_AL;
  undefined7 in_register_00000001;
  int i;
  int i_1;
  char cVar1;
  int in_RBX;
  char cVar2;
  int unaff_R14;
  string in_stack_ffffffffffffffd8;
  string in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RBX == 9) {
    for (i = 0; i < 9; i = i + 1) {
      cVar1 = *(char *)(CONCAT71(in_register_00000001,~r0) + i);
      if ((byte)(cVar1 + 0xbfU) < 0x1a) {
        cVar1 = cVar1 + ' ';
      }
      cVar2 = (&DAT_008b25af)[i];
      if ((byte)(cVar2 + 0xbfU) < 0x1a) {
        cVar2 = cVar2 + ' ';
      }
      if (cVar1 != cVar2) goto LAB_005d9478;
    }
  }
  else {
LAB_005d9478:
    if (in_RBX == 0x15) {
      for (i_1 = 0; i_1 < 0x15; i_1 = i_1 + 1) {
        cVar1 = *(char *)(i_1 + CONCAT71(in_register_00000001,~r0));
        if ((byte)(cVar1 + 0xbfU) < 0x1a) {
          cVar1 = cVar1 + ' ';
        }
        cVar2 = (&DAT_008b95bc)[i_1];
        if ((byte)(cVar2 + 0xbfU) < 0x1a) {
          cVar2 = cVar2 + ' ';
        }
        if (cVar1 != cVar2) goto LAB_005d948d;
      }
    }
    else {
LAB_005d948d:
      net_stringsHasSuffixFold(in_stack_ffffffffffffffd8,in_stack_ffffffffffffffe8,~r0);
      if (extraout_AL == '\0') {
        net_stringsHasSuffixFold(in_stack_ffffffffffffffd8,in_stack_ffffffffffffffe8,~r0);
      }
    }
  }
  return;
}



void net___mptcpStatus__get(net_mptcpStatus *m,bool ~r0)

{
  string ~r0_00;
  char *extraout_RAX;
  undefined extraout_BL;
  undefined7 extraout_var;
  int unaff_RBP;
  int unaff_R14;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (*m == 1) {
    return;
  }
  if (*m == 2) {
    return;
  }
  ~r0_00.len = unaff_RBP;
  ~r0_00.str = in_stack_fffffffffffffff0;
  internal_godebug___Setting__Value(net_multipathtcp,~r0_00);
  if ((CONCAT71(extraout_var,extraout_BL) == 1) && (*extraout_RAX == '1')) {
    internal_godebug___Setting__IncNonDefault(net_multipathtcp);
    return;
  }
  return;
}



void net_minNonzeroTime(time_Time a,time_Time b,time_Time ~r0)

{
  char extraout_AL;
  uint in_RAX;
  int in_RBX;
  int in_RSI;
  uint in_RDI;
  int unaff_R14;
  time_Time in_stack_ffffffffffffff68;
  time_Time in_stack_ffffffffffffff80;
  undefined local_18 [16];
  
  while (local_18 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((int)in_RAX < 0) {
    in_RBX = ((in_RAX << 1) >> 0x1f) + 0xdd7b17f80;
  }
  if ((in_RBX == 0) && ((in_RAX & 0x3fffffff) == 0)) {
    return;
  }
  if ((int)in_RDI < 0) {
    in_RSI = ((in_RDI << 1) >> 0x1f) + 0xdd7b17f80;
  }
  if (((in_RSI != 0) || ((in_RDI & 0x3fffffff) != 0)) &&
     (time_Time_Before(in_stack_ffffffffffffff68,in_stack_ffffffffffffff80,SUB81(in_RAX,0)),
     extraout_AL == '\0')) {
    return;
  }
  return;
}



void net___Dialer__deadline(net_Dialer *d,context_Context ctx,time_Time now,time_Time earliest)

{
  time_Time ~r0;
  time_Time ~r0_00;
  undefined8 extraout_RAX;
  undefined8 in_RCX;
  time_Location *extraout_RCX;
  undefined8 uVar1;
  int in_RBX;
  undefined8 extraout_RBX;
  undefined8 uVar2;
  char extraout_DIL;
  bool ok;
  time_Duration in_RDI;
  time_Location *ptVar3;
  int unaff_R14;
  time_Time in_stack_ffffffffffffffb0;
  time_Time in_stack_ffffffffffffffc8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (d->Timeout == 0) {
    uVar1 = 0;
    uVar2 = 0;
    ptVar3 = (time_Location *)0x0;
  }
  else {
    time_Time_Add(in_stack_ffffffffffffffb0,in_RDI,in_stack_ffffffffffffffc8);
    uVar1 = extraout_RBX;
    uVar2 = extraout_RAX;
    ptVar3 = extraout_RCX;
  }
  (**(code **)(in_RBX + 0x18))(in_RCX);
  if (extraout_DIL != '\0') {
    ~r0.ext = uVar1;
    ~r0.wall = uVar2;
    ~r0.loc = ptVar3;
    net_minNonzeroTime(in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc8,~r0);
  }
  ~r0_00.ext = uVar1;
  ~r0_00.wall = uVar2;
  ~r0_00.loc = ptVar3;
  net_minNonzeroTime(in_stack_ffffffffffffffb0,in_stack_ffffffffffffffc8,~r0_00);
  return;
}



void net_partialDeadline(time_Time now,time_Time deadline,int addrsRemaining,time_Time ~r0,error ~r1
                        )

{
  int extraout_RAX;
  time_Duration timeRemaining;
  int in_RSI;
  uint in_RDI;
  int in_R9;
  int unaff_R14;
  time_Time in_stack_ffffffffffffff98;
  time_Time in_stack_ffffffffffffffb0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((int)in_RDI < 0) {
    in_RSI = ((in_RDI << 1) >> 0x1f) + 0xdd7b17f80;
  }
  if ((in_RSI == 0) && ((in_RDI & 0x3fffffff) == 0)) {
    return;
  }
  time_Time_Sub(in_stack_ffffffffffffff98,in_stack_ffffffffffffffb0,in_RDI);
  if (extraout_RAX < 1) {
    return;
  }
  if (in_R9 != 0) {
    time_Time_Add(in_stack_ffffffffffffff98,addrsRemaining,in_stack_ffffffffffffffb0);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicdivide();
}



void net_parseNetwork(context_Context ctx,string network,bool needsProto,string afnet,int proto,
                     error err)

{
  byte bVar1;
  uint uVar2;
  bool bVar3;
  undefined7 in_register_00000001;
  int *in_RCX;
  int extraout_RBX;
  char in_SIL;
  int i_1;
  uint in_RDI;
  int i_2;
  int iVar4;
  int i;
  bool ok;
  int iVar5;
  int proto_1;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  error in_stack_ffffffffffffffe0;
  
  while (i = in_RDI, &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  do {
    uVar2 = i;
    i = uVar2 - 1;
    if (i < 0) goto LAB_005d9ad4;
  } while (*(char *)((int)in_RCX + i) != ':');
  if (-1 < i) {
    if (in_RDI < (uint)i) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    if (i == 2) {
      if (*(short *)in_RCX != 0x7069) {
LAB_005d9ab2:
        runtime_convTstring(in_stack_ffffffffffffffd0,in_RCX);
        return;
      }
    }
    else if ((i != 3) ||
            (((*(short *)in_RCX != 0x7069 || (*(char *)((int)in_RCX + 2) != '4')) &&
             ((*(short *)in_RCX != 0x7069 || (*(char *)((int)in_RCX + 2) != '6'))))))
    goto LAB_005d9ab2;
    if (in_RDI < uVar2) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    iVar4 = (in_RDI - i) + -1;
    iVar5 = 0;
    for (i_1 = 0; ((i_1 < iVar4 &&
                   (bVar1 = *(byte *)((int)in_RCX + i_1 + (uVar2 & -iVar4 >> 0x3f)), 0x2f < bVar1))
                  && (bVar1 < 0x3a)); i_1 = i_1 + 1) {
      iVar5 = (uint)(byte)(bVar1 - 0x30) + iVar5 * 10;
      if (0xfffffe < iVar5) {
        bVar3 = false;
        goto LAB_005d9c78;
      }
    }
    if (i_1 == 0) {
      bVar3 = false;
      i_1 = 0;
    }
    else {
      bVar3 = true;
    }
LAB_005d9c78:
    if (((!bVar3) || (i_1 != iVar4)) &&
       (net_lookupProtocol(in_stack_ffffffffffffffd0,CONCAT71(in_register_00000001,needsProto),
                           in_stack_ffffffffffffffe0), extraout_RBX != 0)) {
      return;
    }
    return;
  }
LAB_005d9ad4:
  if ((int)in_RDI < 4) {
    if (in_RDI == 2) {
      if (*(short *)in_RCX != 0x7069) goto LAB_005d9bff;
    }
    else {
      if (in_RDI != 3) {
LAB_005d9bff:
        runtime_convTstring(in_stack_ffffffffffffffd0,in_RCX);
        return;
      }
      if ('i' < *(char *)in_RCX) {
        if ((*(short *)in_RCX == 0x6374) && (*(char *)((int)in_RCX + 2) == 'p')) {
          return;
        }
        if ((*(short *)in_RCX == 0x6475) && (*(char *)((int)in_RCX + 2) == 'p')) {
          return;
        }
        goto LAB_005d9bff;
      }
      if (((*(short *)in_RCX != 0x7069) || (*(char *)((int)in_RCX + 2) != '4')) &&
         ((*(short *)in_RCX != 0x7069 || (*(char *)((int)in_RCX + 2) != '6')))) goto LAB_005d9bff;
    }
    if (in_SIL != '\0') {
      runtime_convTstring(in_stack_ffffffffffffffd0,in_RCX);
      return;
    }
  }
  else if (in_RDI == 4) {
    if (*(char *)in_RCX < 'u') {
      if ((*(sdword *)in_RCX != 0x34706374) && (*(sdword *)in_RCX != 0x36706374)) goto LAB_005d9bff;
    }
    else if (((*(sdword *)in_RCX != 0x34706475) && (*(sdword *)in_RCX != 0x36706475)) &&
            (*(sdword *)in_RCX != 0x78696e75)) goto LAB_005d9bff;
  }
  else if (in_RDI == 8) {
    if (*in_RCX != 0x6d61726778696e75) goto LAB_005d9bff;
  }
  else if (((in_RDI != 10) || (*in_RCX != 0x6b63617078696e75)) || (*(short *)(in_RCX + 1) != 0x7465)
          ) goto LAB_005d9bff;
  return;
}



void net___Resolver__resolveAddrList
               (net_Resolver *r,context_Context ctx,string op,string network,string addr,
               net_Addr hint,net_addrList ~r0,error ~r1)

{
  net_IP ip;
  net_IP ip_00;
  net_IP ip_01;
  net_IP ip_02;
  net_IP ip_03;
  runtime_slice ~r0_00;
  net_IP ip_04;
  net_IP ip_05;
  runtime_slice ~r0_01;
  net_IP ip_06;
  net_IP ip_07;
  runtime_slice ~r0_02;
  string network_00;
  string net;
  net_IP x;
  net_IP x_00;
  net_IP x_01;
  net_addrList ~r0_03;
  error ~r1_00;
  byte extraout_AL;
  char extraout_AL_00;
  char extraout_AL_01;
  char cVar2;
  byte extraout_AL_02;
  byte bVar3;
  char extraout_AL_03;
  byte extraout_AL_04;
  char extraout_AL_05;
  byte extraout_AL_06;
  dword extraout_EAX;
  int *x_02;
  net_UnixAddr *extraout_RAX;
  net_UnixAddr *extraout_RAX_00;
  net_UnixAddr *extraout_RAX_01;
  net_UnixAddr *addr_1;
  byte bVar1;
  dword extraout_EAX_00;
  dword extraout_EAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  int *extraout_RAX_06;
  net_TCPAddr *addr_2;
  int *extraout_RAX_07;
  int *extraout_RAX_08;
  int *extraout_RAX_09;
  int *extraout_RAX_10;
  int *extraout_RAX_11;
  int *extraout_RAX_12;
  undefined8 *extraout_RAX_13;
  undefined8 *extraout_RAX_14;
  undefined8 *extraout_RAX_15;
  undefined8 *extraout_RAX_16;
  undefined8 *extraout_RAX_17;
  undefined8 *puVar4;
  int in_RCX;
  undefined1 *puVar5;
  uint extraout_RCX;
  uint extraout_RCX_00;
  uint extraout_RCX_01;
  uint extraout_RCX_02;
  uint extraout_RCX_03;
  uint extraout_RCX_04;
  uint extraout_RCX_05;
  uint oldCap;
  bool in_BL;
  void *~r0_04;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *extraout_RBX_01;
  void *extraout_RBX_02;
  void *extraout_RBX_03;
  void *extraout_RBX_04;
  void *pvVar6;
  int extraout_RBX_05;
  void *extraout_RBX_06;
  uint newLen;
  uint extraout_RBX_07;
  uint extraout_RBX_08;
  uint extraout_RBX_09;
  uint extraout_RBX_10;
  uint extraout_RBX_11;
  uint extraout_RBX_12;
  bool wildcard;
  dword dVar7;
  int in_RSI;
  int *extraout_RSI;
  sdword *in_RDI;
  int extraout_RDI;
  int extraout_RDI_00;
  int extraout_R8;
  int extraout_R8_00;
  int extraout_R8_01;
  uint8 *in_R10;
  int *extraout_R10;
  int *piVar8;
  int in_R11;
  uint8 **extraout_R11;
  int **extraout_R11_00;
  undefined8 *extraout_R11_01;
  net_UnixAddr **extraout_R11_02;
  int **extraout_R11_03;
  int **extraout_R11_04;
  int **extraout_R11_05;
  undefined8 *extraout_R11_06;
  undefined8 *extraout_R11_07;
  undefined8 *extraout_R11_08;
  int iVar9;
  int unaff_R14;
  undefined auVar10 [16];
  string in_stack_ffffffffffffff08;
  uint8 *in_stack_ffffffffffffff18;
  uint8 *in_stack_ffffffffffffff20;
  string in_stack_ffffffffffffff28;
  error in_stack_ffffffffffffff38;
  undefined7 in_stack_ffffffffffffff48;
  undefined in_stack_ffffffffffffff4f;
  runtime_itab *in_stack_ffffffffffffff50;
  void *in_stack_ffffffffffffff58;
  void *local_78;
  void *local_70;
  uint8 *local_68;
  net_UnixAddr *local_60;
  void *local_58;
  void *local_50;
  int *local_48;
  void *local_40;
  int *local_38;
  int *local_30;
  undefined8 local_28;
  int *local_20;
  int *local_18;
  net_Resolver *local_10;
  
  while (&local_78 <= *(void ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  network_00.len = (int)in_stack_ffffffffffffff20;
  network_00.str = in_stack_ffffffffffffff18;
  local_10 = r;
  net_parseNetwork((context_Context)in_stack_ffffffffffffff08,network_00,in_BL,
                   in_stack_ffffffffffffff28,in_RCX,in_stack_ffffffffffffff38);
  if (extraout_RDI != 0) {
    return;
  }
  if (((in_RSI == 4) && (*in_RDI == 0x6c616964)) && (in_R11 == 0)) {
    return;
  }
  if (~r0_04 == (void *)0x4) {
    if (*(sdword *)x_02 != 0x78696e75) goto LAB_005da118;
  }
  else if (~r0_04 == (void *)0x8) {
    if (*x_02 != 0x6d61726778696e75) {
LAB_005da118:
      net.len = (int)in_stack_ffffffffffffff20;
      net.str = in_stack_ffffffffffffff18;
      ~r0_03.cap._0_7_ = in_stack_ffffffffffffff48;
      ~r0_03.array = (net_Addr *)in_stack_ffffffffffffff38.tab;
      ~r0_03.len = (int)in_stack_ffffffffffffff38.data;
      ~r0_03.cap._7_1_ = in_stack_ffffffffffffff4f;
      ~r1_00.data = in_stack_ffffffffffffff58;
      ~r1_00.tab = in_stack_ffffffffffffff50;
      net___Resolver__internetAddrList
                (local_10,(context_Context)in_stack_ffffffffffffff08,net,in_stack_ffffffffffffff28,
                 ~r0_03,~r1_00);
      if (((extraout_RDI_00 == 0) && (in_RSI == 4)) &&
         ((*in_RDI == 0x6c616964 && (ctx.tab != (runtime_itab *)0x0)))) {
        local_48 = extraout_RAX_06;
        if (ctx.tab == (runtime_itab *)0x0) {
          local_50 = (void *)0x0;
          local_58 = (void *)0x0;
          dVar7 = 0;
          local_40 = (void *)0x0;
        }
        else {
          local_30 = extraout_RAX_06;
          if (ctx.tab == (runtime_itab *)go_itab__net_TCPAddr_net_Addr) {
                    // WARNING: Load size is inaccurate
            if ((ctx.data == (void *)0x0) || (*ctx.data == 0)) {
              dVar7 = 1;
            }
            else {
              ip.cap = (int)in_stack_ffffffffffffff18;
              ip.array = in_stack_ffffffffffffff08.str;
              ip.len = in_stack_ffffffffffffff08.len;
              net_IP_IsUnspecified(ip,SUB81(*ctx.data,0));
              dVar7 = extraout_EAX;
            }
            local_48 = local_30;
            local_58 = (void *)0x0;
            local_50 = ctx.data;
            local_40 = (void *)0x0;
          }
          else if (ctx.tab == (runtime_itab *)go_itab__net_UDPAddr_net_Addr) {
                    // WARNING: Load size is inaccurate
            if ((ctx.data == (void *)0x0) || (*ctx.data == 0)) {
              dVar7 = 1;
            }
            else {
              ip_00.cap = (int)in_stack_ffffffffffffff18;
              ip_00.array = in_stack_ffffffffffffff08.str;
              ip_00.len = in_stack_ffffffffffffff08.len;
              net_IP_IsUnspecified(ip_00,SUB81(*ctx.data,0));
              dVar7 = extraout_EAX_00;
            }
            local_50 = (void *)0x0;
            local_48 = local_30;
            local_58 = ctx.data;
            local_40 = (void *)0x0;
          }
          else if (ctx.tab == (runtime_itab *)go_itab__net_IPAddr_net_Addr) {
                    // WARNING: Load size is inaccurate
            if ((ctx.data == (void *)0x0) || (*ctx.data == 0)) {
              dVar7 = 1;
            }
            else {
              ip_01.cap = (int)in_stack_ffffffffffffff18;
              ip_01.array = in_stack_ffffffffffffff08.str;
              ip_01.len = in_stack_ffffffffffffff08.len;
              net_IP_IsUnspecified(ip_01,SUB81(*ctx.data,0));
              dVar7 = extraout_EAX_01;
            }
            local_50 = (void *)0x0;
            local_58 = (void *)0x0;
            local_48 = local_30;
            local_40 = ctx.data;
          }
          else {
            local_50 = (void *)0x0;
            local_58 = (void *)0x0;
            dVar7 = 0;
            local_40 = (void *)0x0;
          }
        }
        bVar1 = (byte)dVar7;
        iVar9 = 0;
        newLen = 0;
        oldCap = extraout_RCX;
        piVar8 = local_48;
        while( true ) {
          if (extraout_RBX_05 <= iVar9) {
            if (newLen != 0) {
              return;
            }
            auVar10 = (*(code *)(net_errNoSuitableAddress.tab)->fun[0])
                                (net_errNoSuitableAddress.data,extraout_RBX_05,
                                 (code *)(net_errNoSuitableAddress.tab)->fun[0],local_58,dVar7,
                                 local_50);
            local_70 = auVar10._8_8_;
            local_18 = auVar10._0_8_;
            auVar10 = (*(code *)ctx.tab[1].inter)(ctx.data);
            local_78 = auVar10._8_8_;
            local_28 = auVar10._0_8_;
            runtime_newobject((internal_abi_Type *)&DAT_0084eb20,local_78);
            extraout_RAX_15[1] = local_70;
            puVar4 = extraout_RAX_15;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier1();
              *extraout_R11_07 = local_18;
              puVar4 = extraout_RAX_16;
            }
            *puVar4 = local_18;
            puVar4[3] = local_78;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier1();
              *extraout_R11_08 = local_28;
              puVar4 = extraout_RAX_17;
            }
            puVar4[2] = local_28;
            return;
          }
          local_18 = (int *)piVar8[1];
          puVar5 = (undefined1 *)*piVar8;
          local_70 = (void *)iVar9;
          local_20 = piVar8;
          auVar10 = (**(code **)(puVar5 + 0x18))();
          local_78 = auVar10._8_8_;
          local_28 = auVar10._0_8_;
          (*(code *)(ctx.tab)->fun[0])(ctx.data);
          if ((extraout_RBX_06 != local_78) || (runtime_memequal(), extraout_AL_00 == '\0')) break;
          if (puVar5 != (undefined1 *)0x0) {
            if (puVar5 == go_itab__net_TCPAddr_net_Addr) {
              if (bVar1 == 0) {
                if ((local_18 == (int *)0x0) || (*local_18 == 0)) {
                  cVar2 = '\x01';
                }
                else {
                  ip_02.cap = (int)in_stack_ffffffffffffff18;
                  ip_02.array = in_stack_ffffffffffffff08.str;
                  ip_02.len = in_stack_ffffffffffffff08.len;
                  net_IP_IsUnspecified(ip_02,SUB81(*local_18,0));
                  cVar2 = extraout_AL_01;
                }
                if (cVar2 == '\0') {
                  ip_03.cap = (int)in_stack_ffffffffffffff18;
                  ip_03.array = in_stack_ffffffffffffff08.str;
                  ip_03.len = in_stack_ffffffffffffff08.len;
                  x.len = (int)in_stack_ffffffffffffff28.str;
                  x.cap = in_stack_ffffffffffffff28.len;
                  x.array = in_stack_ffffffffffffff20;
                  net_IP_matchAddrFamily(ip_03,x,SUB81(*local_18,0));
                  bVar3 = extraout_AL_02 ^ 1;
                }
                else {
                  bVar3 = 0;
                }
              }
              else {
                bVar3 = 0;
              }
              if (bVar3 == 0) {
                newLen = newLen + 1;
                if (oldCap < newLen) {
                  ~r0_00.cap = (int)in_stack_ffffffffffffff18;
                  ~r0_00.array = in_stack_ffffffffffffff08.str;
                  ~r0_00.len = in_stack_ffffffffffffff08.len;
                  runtime_growslice(local_48,newLen,oldCap,1,(internal_abi_Type *)&DAT_0083c720,
                                    ~r0_00);
                  local_48 = extraout_RAX_07;
                  oldCap = extraout_RCX_00;
                  newLen = extraout_RBX_07;
                }
                iVar9 = (newLen - 1) * 0x10;
                local_48[(newLen - 1) * 2] = (int)go_itab__net_TCPAddr_net_Addr;
                piVar8 = local_18;
                if (runtime_writeBarrier._0_4_ != 0) {
                  runtime_gcWriteBarrier2();
                  *extraout_R11_03 = extraout_R10;
                  extraout_R11_03[1] = *(int **)((int)extraout_RAX_08 + extraout_R8 + 8);
                  local_48 = extraout_RAX_08;
                  oldCap = extraout_RCX_01;
                  newLen = extraout_RBX_08;
                  iVar9 = extraout_R8;
                  piVar8 = extraout_R10;
                }
                *(int **)((int)local_48 + iVar9 + 8) = piVar8;
              }
            }
            else if (puVar5 == go_itab__net_UDPAddr_net_Addr) {
              if (bVar1 == 0) {
                if ((local_18 == (int *)0x0) || (*local_18 == 0)) {
                  cVar2 = '\x01';
                }
                else {
                  ip_04.cap = (int)in_stack_ffffffffffffff18;
                  ip_04.array = in_stack_ffffffffffffff08.str;
                  ip_04.len = in_stack_ffffffffffffff08.len;
                  net_IP_IsUnspecified(ip_04,SUB81(*local_18,0));
                  cVar2 = extraout_AL_03;
                }
                if (cVar2 == '\0') {
                  ip_05.cap = (int)in_stack_ffffffffffffff18;
                  ip_05.array = in_stack_ffffffffffffff08.str;
                  ip_05.len = in_stack_ffffffffffffff08.len;
                  x_00.len = (int)in_stack_ffffffffffffff28.str;
                  x_00.cap = in_stack_ffffffffffffff28.len;
                  x_00.array = in_stack_ffffffffffffff20;
                  net_IP_matchAddrFamily(ip_05,x_00,SUB81(*local_18,0));
                  bVar3 = extraout_AL_04 ^ 1;
                }
                else {
                  bVar3 = 0;
                }
              }
              else {
                bVar3 = 0;
              }
              if (bVar3 == 0) {
                newLen = newLen + 1;
                if (oldCap < newLen) {
                  ~r0_01.cap = (int)in_stack_ffffffffffffff18;
                  ~r0_01.array = in_stack_ffffffffffffff08.str;
                  ~r0_01.len = in_stack_ffffffffffffff08.len;
                  runtime_growslice(local_48,newLen,oldCap,1,(internal_abi_Type *)&DAT_0083c720,
                                    ~r0_01);
                  local_48 = extraout_RAX_09;
                  oldCap = extraout_RCX_02;
                  newLen = extraout_RBX_09;
                }
                iVar9 = (newLen - 1) * 0x10;
                local_48[(newLen - 1) * 2] = (int)go_itab__net_UDPAddr_net_Addr;
                piVar8 = local_18;
                if (runtime_writeBarrier._0_4_ != 0) {
                  runtime_gcWriteBarrier2();
                  *extraout_R11_04 = extraout_RSI;
                  extraout_R11_04[1] = *(int **)((int)extraout_RAX_10 + extraout_R8_00 + 8);
                  local_48 = extraout_RAX_10;
                  oldCap = extraout_RCX_03;
                  newLen = extraout_RBX_10;
                  iVar9 = extraout_R8_00;
                  piVar8 = extraout_RSI;
                }
                *(int **)((int)local_48 + iVar9 + 8) = piVar8;
              }
            }
            else if (puVar5 == go_itab__net_IPAddr_net_Addr) {
              if (bVar1 == 0) {
                if ((local_18 == (int *)0x0) || (*local_18 == 0)) {
                  cVar2 = '\x01';
                }
                else {
                  ip_06.cap = (int)in_stack_ffffffffffffff18;
                  ip_06.array = in_stack_ffffffffffffff08.str;
                  ip_06.len = in_stack_ffffffffffffff08.len;
                  net_IP_IsUnspecified(ip_06,SUB81(*local_18,0));
                  cVar2 = extraout_AL_05;
                }
                if (cVar2 == '\0') {
                  ip_07.cap = (int)in_stack_ffffffffffffff18;
                  ip_07.array = in_stack_ffffffffffffff08.str;
                  ip_07.len = in_stack_ffffffffffffff08.len;
                  x_01.len = (int)in_stack_ffffffffffffff28.str;
