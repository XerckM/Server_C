  int extraout_RCX_09;
  uint uVar4;
  int extraout_RCX_10;
  uint extraout_RCX_11;
  int extraout_RCX_12;
  uint8 b;
  uint uVar5;
  void *pvVar6;
  int in_RBX;
  uint extraout_RBX;
  uint uVar7;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  uint extraout_RBX_02;
  uint extraout_RBX_03;
  uint extraout_RBX_04;
  uint extraout_RBX_05;
  uint extraout_RBX_06;
  uint extraout_RBX_07;
  int extraout_RBX_08;
  int size;
  uint extraout_RBX_09;
  uint extraout_RBX_10;
  uint extraout_RBX_11;
  uint extraout_RBX_12;
  uint extraout_RBX_13;
  uint in_RSI;
  int in_RDI;
  int unaff_R14;
  string in_stack_ffffffffffffff50;
  int in_stack_ffffffffffffff60;
  int i;
  void *local_30;
  void *local_28;
  void *local_20;
  void *local_18;
  uint8 *local_10;
  
  while (&local_30 <= *(void ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  uVar4 = 0;
  uVar7 = 0;
  buf.array = in_RAX;
  buf.len = in_RBX;
  buf.cap = in_RCX;
  do {
    while( true ) {
      while( true ) {
        if ((int)in_RSI <= (int)uVar4) {
          if ((int)uVar7 < (int)in_RSI) {
            if (in_RSI < uVar7) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            sVar3 = in_RSI - uVar7;
            pvVar6 = (void *)((uVar7 & (int)-sVar3 >> 0x3f) + in_RDI);
            if ((uint)buf.cap < sVar3 + buf.len) {
              ~r0_14.cap = in_stack_ffffffffffffff60;
              ~r0_14.array = in_stack_ffffffffffffff50.str;
              ~r0_14.len = in_stack_ffffffffffffff50.len;
              local_30 = pvVar6;
              runtime_growslice(buf.array,sVar3 + buf.len,buf.cap,sVar3,
                                (internal_abi_Type *)&DAT_00807920,~r0_14);
              buf.array = extraout_RAX_13;
              pvVar6 = local_30;
            }
            local_10 = buf.array;
            runtime_memmove(buf.array + buf.len,pvVar6,sVar3);
          }
          return;
        }
        if (in_RSI <= uVar4) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        bVar1 = *(byte *)(in_RDI + uVar4);
        if (bVar1 < 0x80) break;
        unicode_utf8_DecodeRuneInString
                  (in_stack_ffffffffffffff50,
                   ((dword)((int)-(in_RSI - uVar4) >> 0x3f) & (dword)uVar4) + (sdword)in_RDI,
                   in_RSI - uVar4);
        if ((extraout_EAX == 0xfffd) && (extraout_RBX_08 == 1)) {
          if ((int)uVar7 < (int)uVar4) {
            if (uVar4 < uVar7) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            sVar3 = uVar4 - uVar7;
            uVar5 = sVar3 + buf.len;
            pvVar6 = (void *)(in_RDI + (uVar7 & (int)-sVar3 >> 0x3f));
            if ((uint)buf.cap < uVar5) {
              ~r0_09.cap = in_stack_ffffffffffffff60;
              ~r0_09.array = in_stack_ffffffffffffff50.str;
              ~r0_09.len = in_stack_ffffffffffffff50.len;
              local_20 = pvVar6;
              runtime_growslice(buf.array,uVar5,buf.cap,sVar3,(internal_abi_Type *)&DAT_00807920,
                                ~r0_09);
              buf.array = extraout_RAX_08;
              buf.cap = extraout_RCX_08;
              uVar5 = extraout_RBX_09;
              pvVar6 = local_20;
            }
            local_10 = buf.array;
            runtime_memmove(buf.array + buf.len,pvVar6,sVar3);
            buf.array = local_10;
            buf.len = uVar5;
          }
          uVar5 = buf.len + 6;
          if ((uint)buf.cap < uVar5) {
            ~r0_10.cap = in_stack_ffffffffffffff60;
            ~r0_10.array = in_stack_ffffffffffffff50.str;
            ~r0_10.len = in_stack_ffffffffffffff50.len;
            runtime_growslice(buf.array,uVar5,buf.cap,6,(internal_abi_Type *)&DAT_00807920,~r0_10);
            buf.array = extraout_RAX_09;
            uVar5 = extraout_RBX_10;
            buf.cap = extraout_RCX_09;
          }
          *(undefined4 *)(buf.array + buf.len) = 0x6666755c;
          *(undefined2 *)(buf.array + buf.len + 4) = 0x6466;
          uVar4 = uVar4 + 1;
          uVar7 = uVar4;
          buf.len = uVar5;
        }
        else if ((extraout_EAX == 0x2028) || (extraout_EAX == 0x2029)) {
          if ((int)uVar7 < (int)uVar4) {
            if (uVar4 < uVar7) {
                    // WARNING: Subroutine does not return
              runtime_panicSliceB();
            }
            sVar3 = uVar4 - uVar7;
            uVar5 = sVar3 + buf.len;
            pvVar6 = (void *)((uVar7 & (int)-sVar3 >> 0x3f) + in_RDI);
            if ((uint)buf.cap < uVar5) {
              ~r0_11.cap = in_stack_ffffffffffffff60;
              ~r0_11.array = in_stack_ffffffffffffff50.str;
              ~r0_11.len = in_stack_ffffffffffffff50.len;
              local_28 = pvVar6;
              runtime_growslice(buf.array,uVar5,buf.cap,sVar3,(internal_abi_Type *)&DAT_00807920,
                                ~r0_11);
              pvVar6 = local_28;
              buf.cap = extraout_RCX_10;
              uVar5 = extraout_RBX_11;
              buf.array = extraout_RAX_10;
            }
            local_10 = buf.array;
            runtime_memmove(buf.array + buf.len,pvVar6,sVar3);
            buf.array = local_10;
            buf.len = uVar5;
          }
          uVar7 = buf.len + 5;
          if ((uint)buf.cap < uVar7) {
            ~r0_12.cap = in_stack_ffffffffffffff60;
            ~r0_12.array = in_stack_ffffffffffffff50.str;
            ~r0_12.len = in_stack_ffffffffffffff50.len;
            runtime_growslice(buf.array,uVar7,buf.cap,5,(internal_abi_Type *)&DAT_00807920,~r0_12);
            uVar7 = extraout_RBX_12;
            buf.cap = extraout_RCX_11;
            buf.array = extraout_RAX_11;
          }
          *(undefined4 *)(buf.array + buf.len) = 0x3032755c;
          buf.array[buf.len + 4] = 0x32;
          if ((uint)log_slog_hex.len <= (uint)(extraout_EAX & 0xf)) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          buf.len = uVar7 + 1;
          uVar2 = log_slog_hex.str[extraout_EAX & 0xf];
          if ((uint)buf.cap < (uint)buf.len) {
            ~r0_13.cap = in_stack_ffffffffffffff60;
            ~r0_13.array = in_stack_ffffffffffffff50.str;
            ~r0_13.len = in_stack_ffffffffffffff50.len;
            runtime_growslice(buf.array,buf.len,buf.cap,1,(internal_abi_Type *)&DAT_00807920,~r0_13)
            ;
            buf.len = extraout_RBX_13;
            buf.array = extraout_RAX_12;
            buf.cap = extraout_RCX_12;
          }
          buf.array[buf.len - 1] = uVar2;
          uVar4 = uVar4 + extraout_RBX_08;
          uVar7 = uVar4;
        }
        else {
          uVar4 = extraout_RBX_08 + uVar4;
        }
      }
      if (log_slog_safeSet[bVar1] == false) break;
      uVar4 = uVar4 + 1;
    }
    if ((int)uVar7 < (int)uVar4) {
      if (uVar4 < uVar7) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      sVar3 = uVar4 - uVar7;
      uVar5 = sVar3 + buf.len;
      pvVar6 = (void *)(in_RDI + (uVar7 & (int)-sVar3 >> 0x3f));
      if ((uint)buf.cap < uVar5) {
        ~r0_00.cap = in_stack_ffffffffffffff60;
        ~r0_00.array = in_stack_ffffffffffffff50.str;
        ~r0_00.len = in_stack_ffffffffffffff50.len;
        local_18 = pvVar6;
        runtime_growslice(buf.array,uVar5,buf.cap,sVar3,(internal_abi_Type *)&DAT_00807920,~r0_00);
        buf.array = extraout_RAX;
        uVar5 = extraout_RBX;
        buf.cap = extraout_RCX;
        pvVar6 = local_18;
      }
      local_10 = buf.array;
      runtime_memmove(buf.array + buf.len,pvVar6,sVar3);
      buf.array = local_10;
      buf.len = uVar5;
    }
    uVar7 = buf.len + 1;
    if ((uint)buf.cap < uVar7) {
      ~r0_01.cap = in_stack_ffffffffffffff60;
      ~r0_01.array = in_stack_ffffffffffffff50.str;
      ~r0_01.len = in_stack_ffffffffffffff50.len;
      runtime_growslice(buf.array,uVar7,buf.cap,1,(internal_abi_Type *)&DAT_00807920,~r0_01);
      uVar7 = extraout_RBX_00;
      buf.array = extraout_RAX_00;
      buf.cap = extraout_RCX_00;
    }
    buf.array[uVar7 - 1] = 0x5c;
    if (bVar1 < 0xb) {
      if (bVar1 == 9) {
        buf.len = uVar7 + 1;
        if ((uint)buf.cap < (uint)buf.len) {
          ~r0_02.cap = in_stack_ffffffffffffff60;
          ~r0_02.array = in_stack_ffffffffffffff50.str;
          ~r0_02.len = in_stack_ffffffffffffff50.len;
          runtime_growslice(buf.array,buf.len,buf.cap,1,(internal_abi_Type *)&DAT_00807920,~r0_02);
          buf.len = extraout_RBX_01;
          buf.array = extraout_RAX_01;
          buf.cap = extraout_RCX_01;
        }
        buf.array[buf.len - 1] = 0x74;
      }
      else if (bVar1 == 10) {
        buf.len = uVar7 + 1;
        if ((uint)buf.cap < (uint)buf.len) {
          ~r0_03.cap = in_stack_ffffffffffffff60;
          ~r0_03.array = in_stack_ffffffffffffff50.str;
          ~r0_03.len = in_stack_ffffffffffffff50.len;
          runtime_growslice(buf.array,buf.len,buf.cap,1,(internal_abi_Type *)&DAT_00807920,~r0_03);
          buf.len = extraout_RBX_02;
          buf.array = extraout_RAX_02;
          buf.cap = extraout_RCX_02;
        }
        buf.array[buf.len - 1] = 0x6e;
      }
      else {
LAB_007c19eb:
        uVar5 = uVar7 + 3;
        if ((uint)buf.cap < uVar5) {
          ~r0_06.cap = in_stack_ffffffffffffff60;
          ~r0_06.array = in_stack_ffffffffffffff50.str;
          ~r0_06.len = in_stack_ffffffffffffff50.len;
          runtime_growslice(buf.array,uVar5,buf.cap,3,(internal_abi_Type *)&DAT_00807920,~r0_06);
          buf.cap = extraout_RCX_05;
          uVar5 = extraout_RBX_05;
          buf.array = extraout_RAX_05;
        }
        *(undefined2 *)(buf.array + uVar7) = 0x3075;
        buf.array[uVar7 + 2] = 0x30;
        if ((uint)log_slog_hex.len <= (uint)(bVar1 >> 4)) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        uVar5 = uVar5 + 1;
        uVar2 = log_slog_hex.str[bVar1 >> 4];
        if ((uint)buf.cap < uVar5) {
          ~r0_07.cap = in_stack_ffffffffffffff60;
          ~r0_07.array = in_stack_ffffffffffffff50.str;
          ~r0_07.len = in_stack_ffffffffffffff50.len;
          runtime_growslice(buf.array,uVar5,buf.cap,1,(internal_abi_Type *)&DAT_00807920,~r0_07);
          uVar5 = extraout_RBX_06;
          buf.array = extraout_RAX_06;
          buf.cap = extraout_RCX_06;
        }
        buf.array[uVar5 - 1] = uVar2;
        if ((uint)log_slog_hex.len <= (uint)(bVar1 & 0xf)) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        buf.len = uVar5 + 1;
        uVar2 = log_slog_hex.str[bVar1 & 0xf];
        if ((uint)buf.cap < (uint)buf.len) {
          ~r0_08.cap = in_stack_ffffffffffffff60;
          ~r0_08.array = in_stack_ffffffffffffff50.str;
          ~r0_08.len = in_stack_ffffffffffffff50.len;
          runtime_growslice(buf.array,buf.len,buf.cap,1,(internal_abi_Type *)&DAT_00807920,~r0_08);
          buf.len = extraout_RBX_07;
          buf.array = extraout_RAX_07;
          buf.cap = extraout_RCX_07;
        }
        buf.array[buf.len - 1] = uVar2;
      }
    }
    else if (bVar1 == 0xd) {
      buf.len = uVar7 + 1;
      if ((uint)buf.cap < (uint)buf.len) {
        ~r0_04.cap = in_stack_ffffffffffffff60;
        ~r0_04.array = in_stack_ffffffffffffff50.str;
        ~r0_04.len = in_stack_ffffffffffffff50.len;
        runtime_growslice(buf.array,buf.len,buf.cap,1,(internal_abi_Type *)&DAT_00807920,~r0_04);
        buf.len = extraout_RBX_03;
        buf.array = extraout_RAX_03;
        buf.cap = extraout_RCX_03;
      }
      buf.array[buf.len - 1] = 0x72;
    }
    else {
      if ((bVar1 != 0x22) && (bVar1 != 0x5c)) goto LAB_007c19eb;
      buf.len = uVar7 + 1;
      if ((uint)buf.cap < (uint)buf.len) {
        ~r0_05.cap = in_stack_ffffffffffffff60;
        ~r0_05.array = in_stack_ffffffffffffff50.str;
        ~r0_05.len = in_stack_ffffffffffffff50.len;
        runtime_growslice(buf.array,buf.len,buf.cap,1,(internal_abi_Type *)&DAT_00807920,~r0_05);
        buf.len = extraout_RBX_04;
        buf.array = extraout_RAX_04;
        buf.cap = extraout_RCX_04;
      }
      buf.array[buf.len - 1] = bVar1;
    }
    uVar4 = uVar4 + 1;
    uVar7 = uVar4;
  } while( true );
}



void log_slog_Level_String(log_slog_Level l,string ~r0)

{
  string ~r0_00;
  string ~r0_01;
  string ~r0_02;
  string ~r0_03;
  void *x;
  void *x_00;
  void *x_01;
  void *x_02;
  int unaff_R14;
  string in_stack_ffffffffffffff98;
  __interface___ in_stack_ffffffffffffffa8;
  uint8 *in_stack_ffffffffffffffc0;
  uint8 *val;
  int in_stack_ffffffffffffffc8;
  uint64 val_00;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (l < 0) {
    if (l != -4) {
      runtime_convTstring(in_stack_ffffffffffffff98,&DAT_008aeca5);
      runtime_convT64(l + 4,x);
      ~r0_00.len = in_stack_ffffffffffffffc8;
      ~r0_00.str = in_stack_ffffffffffffffc0;
      fmt_Sprintf(in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8,~r0_00);
    }
    return;
  }
  if (l < 4) {
    if (l != 0) {
      runtime_convTstring(in_stack_ffffffffffffff98,&DAT_008ae5c7);
      runtime_convT64(l,x_00);
      ~r0_01.len = in_stack_ffffffffffffffc8;
      ~r0_01.str = in_stack_ffffffffffffffc0;
      fmt_Sprintf(in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8,~r0_01);
    }
    return;
  }
  if (7 < l) {
    if (l != 8) {
      val = (uint8 *)(l + -8);
      runtime_convTstring(in_stack_ffffffffffffff98,&DAT_008aecaf);
      runtime_convT64((uint64)val,x_02);
      ~r0_03.len = in_stack_ffffffffffffffc8;
      ~r0_03.str = val;
      fmt_Sprintf(in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8,~r0_03);
    }
    return;
  }
  if (l != 4) {
    val_00 = l - 4;
    runtime_convTstring(in_stack_ffffffffffffff98,&DAT_008ae5cb);
    runtime_convT64(val_00,x_01);
    ~r0_02.len = val_00;
    ~r0_02.str = in_stack_ffffffffffffffc0;
    fmt_Sprintf(in_stack_ffffffffffffff98,in_stack_ffffffffffffffa8,~r0_02);
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void log_slog_Level_MarshalJSON(log_slog_Level l,__uint8 ~r0,error ~r1)

{
  __uint8 buf;
  __uint8 ~r0_00;
  undefined8 unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  string in_stack_ffffffffffffffc8;
  int in_stack_ffffffffffffffd8;
  string in_stack_ffffffffffffffe0;
  undefined8 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  log_slog_Level_String(l,in_stack_ffffffffffffffc8);
  buf.cap = in_stack_ffffffffffffffd8;
  buf.array = in_stack_ffffffffffffffc8.str;
  buf.len = in_stack_ffffffffffffffc8.len;
  ~r0_00.len = unaff_RBP;
  ~r0_00.array = (uint8 *)in_stack_fffffffffffffff0;
  ~r0_00.cap = unaff_retaddr;
  strconv_appendQuotedWith(buf,in_stack_ffffffffffffffe0,0,false,false,~r0_00);
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void log_slog___Level__UnmarshalJSON(log_slog_Level *l,__uint8 data,error ~r0)

{
  string ~r0_00;
  error err;
  error ~r1;
  int in_RCX;
  int extraout_RCX;
  uint8 *in_RBX;
  runtime_itab *unaff_RBP;
  int unaff_R14;
  void *unaff_retaddr;
  string in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_slicebytetostring((runtime_tmpBuf *)0x0,in_RBX,in_RCX,in_stack_ffffffffffffffd8);
  ~r0_00.len = (int)l;
  ~r0_00.str = (uint8 *)in_stack_ffffffffffffffe8;
  ~r1.data = unaff_retaddr;
  ~r1.tab = unaff_RBP;
  strconv_Unquote(in_stack_ffffffffffffffd8,~r0_00,~r1);
  if (extraout_RCX != 0) {
    return;
  }
  err.data = l;
  err.tab = in_stack_ffffffffffffffe8;
  log_slog___Level__parse(l,in_stack_ffffffffffffffd8,err);
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void log_slog_Level_MarshalText(log_slog_Level l,__uint8 ~r0,error ~r1)

{
  __uint8 ~r0_00;
  undefined8 unaff_RBP;
  int unaff_R14;
  int unaff_retaddr;
  string in_stack_ffffffffffffffe0;
  undefined8 in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  log_slog_Level_String(l,in_stack_ffffffffffffffe0);
  ~r0_00.len = unaff_RBP;
  ~r0_00.array = (uint8 *)in_stack_fffffffffffffff0;
  ~r0_00.cap = unaff_retaddr;
  runtime_stringtoslicebyte((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffe0,~r0_00);
  return;
}



void log_slog___Level__UnmarshalText(log_slog_Level *l,__uint8 data,error ~r0)

{
  error err;
  int in_RCX;
  uint8 *in_RBX;
  int unaff_R14;
  string in_stack_ffffffffffffffd8;
  runtime_itab *in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  runtime_slicebytetostring((runtime_tmpBuf *)0x0,in_RBX,in_RCX,in_stack_ffffffffffffffd8);
  err.data = l;
  err.tab = in_stack_ffffffffffffffe8;
  log_slog___Level__parse(l,in_stack_ffffffffffffffd8,err);
  return;
}



void log_slog___Level__parse(log_slog_Level *l,string s,error err)

{
  uint extraout_RAX;
  int i;
  int extraout_RAX_00;
  int offset;
  int iVar1;
  sdword *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  uint in_RCX;
  int in_RBX;
  int extraout_RBX;
  void *~r0;
  int unaff_R14;
  string in_stack_ffffffffffffff88;
  string in_stack_ffffffffffffff98;
  error err_local;
  undefined local_30 [32];
  code **local_10;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  local_30._8_8_ = &err_local;
  local_30._0_8_ = log_slog___Level__parse_func1;
  local_10 = (code **)local_30;
  strings_IndexAny(in_stack_ffffffffffffff88,in_stack_ffffffffffffff98,in_RBX);
  if ((int)extraout_RAX < 0) {
    iVar1 = 0;
  }
  else {
    if (in_RCX < extraout_RAX) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceAlen();
    }
    strconv_Atoi(in_stack_ffffffffffffff88,
                 ((int)-(in_RCX - extraout_RAX) >> 0x3f & extraout_RAX) + in_RBX,
                 (error)in_stack_ffffffffffffff98);
    iVar1 = extraout_RAX_00;
    if (extraout_RBX != 0) {
      (**local_10)();
      return;
    }
  }
  strings_ToUpper(in_stack_ffffffffffffff88,in_stack_ffffffffffffff98);
  if (~r0 == (void *)0x4) {
    if (*extraout_RAX_01 == 0x4f464e49) {
      *l = 0;
    }
    else {
      if (*extraout_RAX_01 != 0x4e524157) goto LAB_007c2775;
      *l = 4;
    }
  }
  else {
    if (~r0 != (void *)0x5) {
LAB_007c2775:
      runtime_newobject((internal_abi_Type *)&DAT_0083e560,~r0);
      extraout_RAX_02[1] = 0xc;
      *extraout_RAX_02 = &DAT_008b42fd;
      err_local.data = extraout_RAX_02;
      err_local.tab = (runtime_itab *)go_itab__errors_errorString_error;
      (**local_10)();
      return;
    }
    if ((*extraout_RAX_01 == 0x55424544) && (*(char *)(extraout_RAX_01 + 1) == 'G')) {
      *l = -4;
    }
    else {
      if ((*extraout_RAX_01 != 0x4f525245) || (*(char *)(extraout_RAX_01 + 1) != 'R'))
      goto LAB_007c2775;
      *l = 8;
    }
  }
  *l = *l + iVar1;
  (**local_10)();
  return;
}



// WARNING: Unknown calling convention

void log_slog___Level__parse_func1(void)

{
  error ~r0;
  internal_abi_InterfaceType *extraout_RAX;
  error *_err;
  int in_RDX;
  runtime_itab *prVar1;
  internal_abi_Type *extraout_RBX;
  internal_abi_Type *extraout_RBX_00;
  internal_abi_Type *piVar2;
  internal_abi_Type **extraout_R11;
  int unaff_R14;
  string in_stack_ffffffffffffffa8;
  __interface___ in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  prVar1 = *(runtime_itab **)(in_RDX + 8);
  if (prVar1->inter != (internal_abi_InterfaceType *)0x0) {
    runtime_convTstring(in_stack_ffffffffffffffa8,*(void **)(in_RDX + 0x10));
    ~r0.data = &DAT_008075e0;
    ~r0.tab = prVar1;
    fmt_Errorf(in_stack_ffffffffffffffa8,in_stack_ffffffffffffffb8,~r0);
    prVar1->inter = extraout_RAX;
    piVar2 = extraout_RBX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RBX_00;
      extraout_R11[1] = prVar1->_type;
      piVar2 = extraout_RBX_00;
    }
    prVar1->_type = piVar2;
  }
  return;
}



void log_slog_Level_Level(log_slog_Level l,log_slog_Level ~r0)

{
  return;
}



// WARNING: Unknown calling convention

void log_slog_init_0(void)

{
  func_uintptr____uint8__error **ppfVar1;
  undefined8 *extraout_RAX;
  undefined8 extraout_RAX_00;
  undefined8 extraout_RAX_01;
  undefined8 uVar2;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *puVar3;
  void *in_RBX;
  void *~r0;
  void *extraout_RBX;
  void *~r0_00;
  void *extraout_RBX_00;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffd0;
  
  while (ppfVar1 = log_internal_DefaultOutput, &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)
        ) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX_00;
  }
  runtime_newobject((internal_abi_Type *)&DAT_0084e580,in_RBX);
  runtime_newobject((internal_abi_Type *)&DAT_0088d0c0,~r0);
  uVar2 = extraout_RAX_00;
  ~r0_00 = extraout_RBX;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier4();
    *extraout_R11 = extraout_RAX_01;
    extraout_R11[1] = *extraout_RAX;
    extraout_R11[2] = ppfVar1;
    ~r0_00 = (void *)extraout_RAX[1];
    extraout_R11[3] = ~r0_00;
    uVar2 = extraout_RAX_01;
  }
  *extraout_RAX = uVar2;
  extraout_RAX[1] = ppfVar1;
  runtime_newobject((internal_abi_Type *)&DAT_0083f2e0,~r0_00);
  *extraout_RAX_02 = go_itab__log_slog_defaultHandler_log_slog_Handler;
  puVar3 = extraout_RAX_02;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier1();
    *extraout_R11_00 = extraout_RAX;
    puVar3 = extraout_RAX_03;
  }
  puVar3[1] = extraout_RAX;
  sync_atomic___Value__Store(&log_slog_defaultLogger,in_stack_ffffffffffffffd0);
  return;
}



void log_slog___Logger__Handler(log_slog_Logger *l,log_slog_Handler ~r0)

{
  return;
}



void log_slog___Logger__With(log_slog_Logger *l,__interface___ args,log_slog_Logger *~r0)

{
  __log_slog_Attr ~r0_00;
  runtime_itab **extraout_RAX;
  log_slog_Logger *_c;
  runtime_itab **extraout_RAX_00;
  runtime_itab **pprVar1;
  undefined8 extraout_RAX_01;
  int in_RCX;
  undefined8 extraout_RCX;
  runtime_itab *extraout_RBX;
  undefined8 extraout_RBX_00;
  runtime_itab *extraout_RBX_01;
  runtime_itab *prVar2;
  int unaff_RBP;
  runtime_itab **extraout_R11;
  runtime_itab **extraout_R11_00;
  int unaff_R14;
  undefined auVar3 [16];
  __interface___ in_stack_ffffffffffffffd0;
  undefined8 in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RCX != 0) {
    runtime_newobject((internal_abi_Type *)&DAT_0083f2e0,~r0);
    prVar2 = (runtime_itab *)(l->handler).data;
    *extraout_RAX = (l->handler).tab;
    pprVar1 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = extraout_RBX;
      pprVar1 = extraout_RAX_00;
      prVar2 = extraout_RBX;
    }
    pprVar1[1] = prVar2;
    ~r0_00.len = (int)pprVar1;
    ~r0_00.array = (log_slog_Attr *)in_stack_ffffffffffffffe8;
    ~r0_00.cap = unaff_RBP;
    log_slog_argsToAttrSlice(in_stack_ffffffffffffffd0,~r0_00);
    auVar3 = (*(code *)(l->handler).tab[1]._type)
                       ((l->handler).data,extraout_RAX_01,extraout_RBX_00,extraout_RCX);
    prVar2 = auVar3._8_8_;
    *pprVar1 = auVar3._0_8_;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RBX_01;
      extraout_R11_00[1] = pprVar1[1];
      prVar2 = extraout_RBX_01;
    }
    pprVar1[1] = prVar2;
    return;
  }
  return;
}



void log_slog___Logger__WithGroup(log_slog_Logger *l,string name,log_slog_Logger *~r0)

{
  runtime_itab **extraout_RAX;
  log_slog_Logger *_c;
  runtime_itab **extraout_RAX_00;
  runtime_itab **pprVar1;
  int in_RCX;
  log_slog_Logger *extraout_RCX;
  runtime_itab *extraout_RBX;
  runtime_itab *extraout_RBX_00;
  runtime_itab *prVar2;
  runtime_itab **extraout_R11;
  runtime_itab **extraout_R11_00;
  int unaff_R14;
  undefined auVar3 [16];
  int iStack0000000000000018;
  
  iStack0000000000000018 = in_RCX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (iStack0000000000000018 != 0) {
    runtime_newobject((internal_abi_Type *)&DAT_0083f2e0,~r0);
    prVar2 = (runtime_itab *)(l->handler).data;
    *extraout_RAX = (l->handler).tab;
    pprVar1 = extraout_RAX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = extraout_RBX;
      pprVar1 = extraout_RAX_00;
      l = extraout_RCX;
      prVar2 = extraout_RBX;
    }
    pprVar1[1] = prVar2;
    auVar3 = (**(code **)&(l->handler).tab[1].hash)((l->handler).data,~r0,iStack0000000000000018);
    prVar2 = auVar3._8_8_;
    *pprVar1 = auVar3._0_8_;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_00 = extraout_RBX_00;
      extraout_R11_00[1] = pprVar1[1];
      prVar2 = extraout_RBX_00;
    }
    pprVar1[1] = prVar2;
    return;
  }
  return;
}



void log_slog___Logger__Enabled
               (log_slog_Logger *l,context_Context ctx,log_slog_Level level,bool ~r0)

{
  undefined7 in_register_00000009;
  undefined1 *puVar1;
  uintptr *puVar2;
  int unaff_R14;
  uintptr *puStack0000000000000018;
  
  puStack0000000000000018 = (uintptr *)CONCAT71(in_register_00000009,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  puVar1 = go_itab_context_backgroundCtx_context_Context;
  if (level != 0) {
    puVar1 = (undefined1 *)level;
  }
  puVar2 = &runtime_zerobase;
  if (level != 0) {
    puVar2 = puStack0000000000000018;
  }
  (*(code *)((l->handler).tab)->fun[0])((l->handler).data,puVar1,puVar2);
  return;
}



void log_slog___Logger__Log
               (log_slog_Logger *l,context_Context ctx,log_slog_Level level,string msg,
               __interface___ args)

{
  int unaff_R14;
  double in_XMM0_Qa;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  log_slog___Logger__log(in_XMM0_Qa);
  return;
}



void log_slog___Logger__LogAttrs
               (log_slog_Logger *l,context_Context ctx,log_slog_Level level,string msg,
               __log_slog_Attr attrs)

{
  int unaff_R14;
  context_Context in_stack_ffffffffffffffb0;
  string in_stack_ffffffffffffffc0;
  __log_slog_Attr in_stack_ffffffffffffffd0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  log_slog___Logger__logAttrs
            (l,in_stack_ffffffffffffffb0,level,in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd0);
  return;
}



void log_slog___Logger__Debug(log_slog_Logger *l,string msg,__interface___ args)

{
  int unaff_R14;
  double in_XMM0_Qa;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  log_slog___Logger__log(in_XMM0_Qa);
  return;
}



void log_slog___Logger__DebugContext
               (log_slog_Logger *l,context_Context ctx,string msg,__interface___ args)

{
  int unaff_R14;
  double in_XMM0_Qa;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  log_slog___Logger__log(in_XMM0_Qa);
  return;
}



void log_slog___Logger__Info(log_slog_Logger *l,string msg,__interface___ args)

{
  int unaff_R14;
  double in_XMM0_Qa;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  log_slog___Logger__log(in_XMM0_Qa);
  return;
}



void log_slog___Logger__InfoContext
               (log_slog_Logger *l,context_Context ctx,string msg,__interface___ args)

{
  int unaff_R14;
  double in_XMM0_Qa;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  log_slog___Logger__log(in_XMM0_Qa);
  return;
}



void log_slog___Logger__Warn(log_slog_Logger *l,string msg,__interface___ args)

{
  int unaff_R14;
  double in_XMM0_Qa;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  log_slog___Logger__log(in_XMM0_Qa);
  return;
}



void log_slog___Logger__WarnContext
               (log_slog_Logger *l,context_Context ctx,string msg,__interface___ args)

{
  int unaff_R14;
  double in_XMM0_Qa;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  log_slog___Logger__log(in_XMM0_Qa);
  return;
}



void log_slog___Logger__Error(log_slog_Logger *l,string msg,__interface___ args)

{
  int unaff_R14;
  double in_XMM0_Qa;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  log_slog___Logger__log(in_XMM0_Qa);
  return;
}



void log_slog___Logger__ErrorContext
               (log_slog_Logger *l,context_Context ctx,string msg,__interface___ args)

