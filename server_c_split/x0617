                runtime_gcWriteBarrier1();
                *extraout_R11_06 = local_78;
                err_local.data = extraout_RAX_23;
              }
              *(runtime_itab **)((int)err_local.data + 0x10) = local_78;
              local_80 = (regexp_syntax_Regexp *)0x0;
              err_local.tab = (runtime_itab *)go_itab__regexp_syntax_Error_error;
              runtime_deferreturn();
              return;
            }
          }
          else {
            if (bVar1 == 0x51) {
              s_04.len = (int)in_stack_fffffffffffffec8;
              s_04.str = (uint8 *)in_stack_fffffffffffffec0;
              before_01.len = (int)in_stack_fffffffffffffee8;
              before_01.str = (uint8 *)in_stack_fffffffffffffee0;
              strings_Cut(s_04,in_stack_fffffffffffffed0,before_01,in_stack_fffffffffffffef0,
                          (bool)((char)prVar12 +
                                ((byte)(-(int)((int)&~r0_02[-1].Name.len + 6) >> 0x3f) & 2)));
              local_58 = extraout_RAX_10;
              iVar9 = extraout_RBX_02;
              local_78 = extraout_RCX_03;
              while (iVar9 != 0) {
                s_11.len = (int)in_stack_fffffffffffffec8;
                s_11.str = (uint8 *)in_stack_fffffffffffffec0;
                err_04.data = in_stack_fffffffffffffee8;
                err_04.tab = in_stack_fffffffffffffee0;
                regexp_syntax_nextRune(s_11,(int32)local_58,in_stack_fffffffffffffed0,err_04);
                if (extraout_RDI_05 != 0) {
                  local_80 = (regexp_syntax_Regexp *)0x0;
                  runtime_deferreturn();
                  return;
                }
                local_58 = extraout_RBX_10;
                regexp_syntax___parser__literal(local_40,r_03);
                iVar9 = extraout_RCX_12;
              }
              prVar10 = extraout_RDI;
              prVar12 = local_78;
              prVar13 = ~b0;
              prVar14 = (regexp_syntax_Regexp *)0x0;
              prVar15 = (runtime_itab *)0x0;
              goto LAB_006f42c2;
            }
            if (bVar1 == 0x62) {
              regexp_syntax___parser__op(local_40,0xb,~r0_02);
              prVar10 = (regexp_syntax_Regexp *)((int)&~r0_02[-1].Name.len + 6);
              prVar12 = (runtime_itab *)
                        (local_78->_ + (((dword)(-(int)prVar10 >> 0x3f) & 2) - 0x14));
              prVar13 = ~b0;
              prVar14 = (regexp_syntax_Regexp *)0x0;
              prVar15 = (runtime_itab *)0x0;
              goto LAB_006f42c2;
            }
            if (bVar1 == 0x7a) {
              regexp_syntax___parser__op(local_40,10,~r0_02);
              prVar10 = (regexp_syntax_Regexp *)((int)&~r0_02[-1].Name.len + 6);
              prVar12 = (runtime_itab *)
                        (local_78->_ + (((dword)(-(int)prVar10 >> 0x3f) & 2) - 0x14));
              prVar13 = ~b0;
              prVar14 = (regexp_syntax_Regexp *)0x0;
              prVar15 = (runtime_itab *)0x0;
              goto LAB_006f42c2;
            }
          }
        }
        prVar10 = local_40->free;
        if (prVar10 == (regexp_syntax_Regexp *)0x0) {
          runtime_newobject((internal_abi_Type *)&DAT_00893c00,prVar13);
          local_40->numRegexp = local_40->numRegexp + 1;
          prVar6 = local_40;
          prVar10 = ~r0_02;
          prVar12 = local_78;
          local_70 = extraout_RAX_12;
        }
        else {
          prVar13 = prVar10->Sub0[0];
          if (runtime_writeBarrier._0_4_ != 0) {
            local_68 = prVar10;
            local_48 = prVar10->Sub0[0];
            runtime_gcWriteBarrier2();
            *extraout_R11_02 = extraout_R10;
            extraout_R11_02[1] = *(undefined8 *)(extraout_RAX_11 + 0x20);
            runtime_wbZero((internal_abi_Type *)&DAT_00893c00,dst);
            prVar13 = local_48;
          }
          local_40->free = prVar13;
          prVar12 = local_78;
          prVar6 = (regexp_syntax_parser *)FUN_0046cda6();
          prVar10 = extraout_RCX_04;
          local_70 = extraout_R9;
        }
        local_70->Op = 4;
        local_70->Flags = prVar6->flags;
        if ((1 < (int)prVar10) &&
           ((uVar2 = *(uint8 *)((int)&prVar12->inter + 1), uVar2 == 0x70 || (uVar2 == 0x50)))) {
          s_05.len = (int)in_stack_fffffffffffffec8;
          s_05.str = (uint8 *)in_stack_fffffffffffffec0;
          r.cap = (int)in_stack_fffffffffffffee0;
          r.array = (int32 *)in_stack_fffffffffffffed0.str;
          r.len = in_stack_fffffffffffffed0.len;
          out.len = (int)in_stack_fffffffffffffef0.str;
          out.cap = in_stack_fffffffffffffef0.len;
          out.array = in_stack_fffffffffffffee8;
          err_05.tab._7_1_ = (bool)ok_00;
          err_05.tab._0_7_ = uStack_f0;
          err_05.data = ~r0_02;
          regexp_syntax___parser__parseUnicodeClass
                    (prVar6,s_05,r,out,in_stack_ffffffffffffff00,err_05);
          if (extraout_R8 != 0) {
            local_80 = (regexp_syntax_Regexp *)0x0;
            runtime_deferreturn();
            return;
          }
          prVar6 = local_40;
          if (extraout_RAX_13 != (int32 *)0x0) {
            (local_70->Rune).len = extraout_RBX_03;
            (local_70->Rune).cap = (int)extraout_RCX_05;
            piVar7 = extraout_RAX_13;
            prVar10 = extraout_RCX_05;
            prVar13 = local_70;
            local_78 = extraout_RDI_00;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier2();
              *extraout_R11_03 = extraout_RAX_14;
              prVar10 = (regexp_syntax_Regexp *)(prVar13->Rune).array;
              extraout_R11_03[1] = (int32 *)prVar10;
              piVar7 = extraout_RAX_14;
            }
            (prVar13->Rune).array = piVar7;
            regexp_syntax___parser__push(local_40,prVar13,prVar10);
            prVar10 = extraout_RSI;
            prVar12 = local_78;
            prVar13 = ~b0;
            prVar14 = (regexp_syntax_Regexp *)0x0;
            prVar15 = (runtime_itab *)0x0;
            goto LAB_006f42c2;
          }
        }
        s_06.len = (int)in_stack_fffffffffffffec8;
        s_06.str = (uint8 *)in_stack_fffffffffffffec0;
        r_00.cap = (int)in_stack_fffffffffffffee0;
        r_00.array = (int32 *)in_stack_fffffffffffffed0.str;
        r_00.len = in_stack_fffffffffffffed0.len;
        out_00.len = (int)in_stack_fffffffffffffef0.str;
        out_00.cap = in_stack_fffffffffffffef0.len;
        out_00.array = in_stack_fffffffffffffee8;
        regexp_syntax___parser__parsePerlClassEscape
                  (prVar6,s_06,r_00,out_00,in_stack_ffffffffffffff00);
        if (extraout_RAX_15 == (int32 *)0x0) {
          if (local_40->height != (map__regexp_syntax_Regexp_int)0x0) {
            runtime_mapdelete_fast64
                      ((internal_abi_MapType *)&DAT_00830520,(runtime_hmap *)local_40->height,
                       (uint64)local_70);
          }
          prVar10 = local_40->free;
          prVar6 = local_40;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier4();
            *extraout_R11_05 = prVar10;
            extraout_R11_05[1] = local_70->Sub0[0];
            extraout_R11_05[2] = local_70;
            extraout_R11_05[3] = extraout_RAX_17->free;
            prVar6 = extraout_RAX_17;
          }
          local_70->Sub0[0] = prVar10;
          prVar6->free = local_70;
          s_07.len = (int)in_stack_fffffffffffffec8;
          s_07.str = (uint8 *)in_stack_fffffffffffffec0;
          err_01.data = in_stack_fffffffffffffee8;
          err_01.tab = in_stack_fffffffffffffee0;
          regexp_syntax___parser__parseEscape
                    (prVar6,s_07,(int32)local_78,in_stack_fffffffffffffed0,err_01);
          if (extraout_RDI_02 != 0) {
            local_80 = (regexp_syntax_Regexp *)0x0;
            runtime_deferreturn();
            return;
          }
          local_78 = extraout_RBX_05;
          regexp_syntax___parser__literal(local_40,r_01);
          prVar10 = extraout_RCX_07;
          prVar12 = local_78;
          prVar13 = ~b0;
          prVar14 = (regexp_syntax_Regexp *)0x0;
          prVar15 = (runtime_itab *)0x0;
        }
        else {
          (local_70->Rune).len = extraout_RBX_04;
          (local_70->Rune).cap = (int)extraout_RCX_06;
          piVar7 = extraout_RAX_15;
          prVar10 = extraout_RCX_06;
          prVar13 = local_70;
          local_78 = extraout_RDI_01;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_04 = extraout_RAX_16;
            prVar10 = (regexp_syntax_Regexp *)(prVar13->Rune).array;
            extraout_R11_04[1] = (int32 *)prVar10;
            piVar7 = extraout_RAX_16;
          }
          (prVar13->Rune).array = piVar7;
          regexp_syntax___parser__push(local_40,prVar13,prVar10);
          prVar10 = extraout_RSI_00;
          prVar12 = local_78;
          prVar13 = ~b0;
          prVar14 = (regexp_syntax_Regexp *)0x0;
          prVar15 = (runtime_itab *)0x0;
        }
        goto LAB_006f42c2;
      }
      s_08.len = (int)in_stack_fffffffffffffec8;
      s_08.str = (uint8 *)in_stack_fffffffffffffec0;
      err_02.data = in_stack_fffffffffffffee8;
      err_02.tab = in_stack_fffffffffffffee0;
      regexp_syntax___parser__parseClass(local_40,s_08,in_stack_fffffffffffffed0,err_02);
      if (extraout_RCX_08 != 0) {
        local_80 = (regexp_syntax_Regexp *)0x0;
        runtime_deferreturn();
        return;
      }
      prVar10 = extraout_RBX_06;
      prVar12 = extraout_RAX_18;
      prVar13 = ~b0;
      prVar14 = (regexp_syntax_Regexp *)0x0;
      prVar15 = (runtime_itab *)0x0;
      goto LAB_006f42c2;
    }
LAB_006f4a45:
    if (bVar1 == 0x2a) {
      ok_00 = 0xe;
    }
    else if (bVar1 == 0x2b) {
      ok_00 = 0xf;
    }
    else if (bVar1 == 0x3f) {
      ok_00 = 0x10;
    }
    before.len = (int)prVar14;
    before.str = (uint8 *)prVar15;
    lastRepeat.len = (int)in_stack_fffffffffffffee8;
    lastRepeat.str = (uint8 *)in_stack_fffffffffffffee0;
    in_stack_fffffffffffffec0 = prVar15;
    in_stack_fffffffffffffec8 = prVar14;
    regexp_syntax___parser__repeat
              (local_40,ok_00,0,0,before,in_stack_fffffffffffffed0,lastRepeat,
               in_stack_fffffffffffffef0,(error)in_stack_ffffffffffffff00);
    prVar10 = extraout_RBX_07;
    prVar12 = extraout_RAX_19;
    prVar13 = ~b0;
    prVar14 = ~r0_02;
    prVar15 = local_78;
    if (extraout_RCX_09 != 0) {
      local_80 = (regexp_syntax_Regexp *)0x0;
      runtime_deferreturn();
      return;
    }
  } while( true );
}



// WARNING: Unknown calling convention

void regexp_syntax_parse_func1(void)

{
  undefined8 uVar1;
  undefined8 uVar2;
  char extraout_AL;
  char extraout_AL_00;
  undefined *extraout_RAX;
  undefined8 *extraout_RAX_00;
  undefined8 *extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *puVar3;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  error *_err;
  int in_RDX;
  undefined8 *puVar4;
  void *x;
  void *~r0;
  void *~r0_00;
  bool ~r0_01;
  undefined extraout_DIL;
  undefined ~r0_02;
  undefined8 *extraout_R11;
  undefined8 *extraout_R11_00;
  undefined8 *extraout_R11_01;
  undefined8 *extraout_R11_02;
  int unaff_R14;
  interface___ in_stack_ffffffffffffffb8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  puVar4 = *(undefined8 **)(in_RDX + 8);
  uVar1 = *(undefined8 *)(in_RDX + 0x10);
  uVar2 = *(undefined8 *)(in_RDX + 0x18);
  runtime_gorecover((uintptr)&stack0x00000008,in_stack_ffffffffffffffb8);
  if (extraout_RAX != (undefined *)0x0) {
    ~r0_02 = ~r0_01;
    if ((extraout_RAX == &DAT_0081f900) &&
       (runtime_efaceeq((internal_abi_Type *)&DAT_0081f900,x,&PTR_DAT_0095de10,~r0_01),
       ~r0_02 = extraout_DIL, extraout_AL != '\0')) {
      runtime_newobject((internal_abi_Type *)&DAT_00855c40,~r0);
      extraout_RAX_03[1] = 0x14;
      *extraout_RAX_03 = &DAT_008b936f;
      extraout_RAX_03[3] = uVar2;
      puVar3 = extraout_RAX_03;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11_01 = uVar1;
        puVar3 = extraout_RAX_04;
      }
      puVar3[2] = uVar1;
      *puVar4 = go_itab__regexp_syntax_Error_error;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_02 = extraout_RAX_05;
        extraout_R11_02[1] = puVar4[1];
        puVar3 = extraout_RAX_05;
      }
      puVar4[1] = puVar3;
    }
    else {
      if ((extraout_RAX != &DAT_0081f900) ||
         (runtime_efaceeq((internal_abi_Type *)&DAT_0081f900,x,&PTR_DAT_0095de20,(bool)~r0_02),
         extraout_AL_00 == '\0')) {
                    // WARNING: Subroutine does not return
        runtime_gopanic(in_stack_ffffffffffffffb8);
      }
      runtime_newobject((internal_abi_Type *)&DAT_00855c40,~r0_00);
      extraout_RAX_00[1] = 0x1b;
      *extraout_RAX_00 = &DAT_008bd45c;
      extraout_RAX_00[3] = uVar2;
      puVar3 = extraout_RAX_00;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier1();
        *extraout_R11 = uVar1;
        puVar3 = extraout_RAX_01;
      }
      puVar3[2] = uVar1;
      *puVar4 = go_itab__regexp_syntax_Error_error;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_00 = extraout_RAX_02;
        extraout_R11_00[1] = puVar4[1];
        puVar3 = extraout_RAX_02;
      }
      puVar4[1] = puVar3;
    }
  }
  return;
}



void regexp_syntax___parser__parseRepeat
               (regexp_syntax_parser *p,string s,int min,int max,string rest,bool ok)

{
  string rest_00;
  string rest_01;
  int extraout_RAX;
  int extraout_RCX;
  int extraout_RCX_00;
  dword dVar1;
  char *extraout_RBX;
  char *extraout_RBX_00;
  char extraout_DIL;
  bool ok1;
  char extraout_DIL_00;
  int iVar2;
  char *n;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  uint8 *in_stack_ffffffffffffffe0;
  int in_stack_ffffffffffffffe8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((max == 0) || (*(char *)min != '{')) {
    return;
  }
  rest_00.len = in_stack_ffffffffffffffe8;
  rest_00.str = in_stack_ffffffffffffffe0;
  regexp_syntax___parser__parseInt
            (p,in_stack_ffffffffffffffd0,min + (uint)((dword)(-(max + -1) >> 0x3f) & 1),rest_00,
             SUB81(max + -1,0));
  if (extraout_DIL == '\0') {
    return;
  }
  if (extraout_RCX != 0) {
    iVar2 = extraout_RCX;
    n = extraout_RBX;
    if (*extraout_RBX == ',') {
      iVar2 = extraout_RCX + -1;
      dVar1 = (dword)(-iVar2 >> 0x3f) & 1;
      n = extraout_RBX + dVar1;
      if (extraout_RCX == 1) {
        return;
      }
      if ((extraout_RBX[dVar1] != '}') &&
         (rest_01.len = extraout_RAX, rest_01.str = in_stack_ffffffffffffffe0,
         regexp_syntax___parser__parseInt(p,in_stack_ffffffffffffffd0,(int)n,rest_01,SUB81(iVar2,0))
         , iVar2 = extraout_RCX_00, n = extraout_RBX_00, extraout_DIL_00 == '\0')) {
        return;
      }
    }
    if ((iVar2 != 0) && (*n == '}')) {
      return;
    }
    return;
  }
  return;
}



// WARNING: Variable defined which should be unmapped: sawFlag
// WARNING: Variable defined which should be unmapped: sign

void regexp_syntax___parser__parsePerlFlags(regexp_syntax_parser *p,string s,string rest,error err)

{
  void *pvVar1;
  byte bVar2;
  error ~r0;
  error ~r0_00;
  string t;
  error err_00;
  bool bVar3;
  sdword extraout_EAX;
  int32 c;
  int32 extraout_EAX_00;
  uint extraout_RAX;
  int end;
  int extraout_RAX_00;
  int extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *extraout_RAX_04;
  undefined8 *extraout_RAX_05;
  int extraout_RAX_06;
  regexp_syntax_Regexp *re;
  int extraout_RAX_07;
  int iVar4;
  undefined8 *extraout_RAX_08;
  undefined8 *extraout_RAX_09;
  undefined8 *puVar5;
  uint in_RCX;
  int iVar6;
  regexp_syntax_Regexp *extraout_RCX;
  regexp_syntax_Regexp *prVar7;
  regexp_syntax_Regexp *~r0_01;
  regexp_syntax_Regexp *extraout_RCX_00;
  regexp_syntax_Regexp *prVar8;
  undefined *puVar9;
  void *in_RBX;
  void *extraout_RBX;
  void *~r0_02;
  int extraout_RBX_00;
  void *pvVar10;
  regexp_syntax_Regexp *extraout_RBX_01;
  int32 c_1;
  int extraout_RDI;
  regexp_syntax_Flags flags;
  regexp_syntax_Flags rVar11;
  char cVar12;
  void **extraout_R11;
  void **extraout_R11_00;
  int *extraout_R11_01;
  void **extraout_R11_02;
  int unaff_R14;
  string in_stack_ffffffffffffff98;
  undefined auStack_58 [13];
  bool sawFlag;
  undefined2 local_4a;
  runtime_itab *local_48;
  int sign;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if ((((int)in_RCX < 5) || (*(char *)((int)in_RBX + 2) != 'P')) ||
     (*(char *)((int)in_RBX + 3) != '<')) {
    if (in_RCX < 2) {
                    // WARNING: Subroutine does not return
      runtime_panicSliceB();
    }
    prVar7 = (regexp_syntax_Regexp *)(in_RCX - 2);
    iVar6 = (uint)((dword)(-(int)prVar7 >> 0x3f) & 2) + (int)in_RBX;
    rVar11 = p->flags;
    puVar9 = &DAT_00000001;
    cVar12 = '\0';
LAB_006f578d:
    do {
      if (prVar7 == (regexp_syntax_Regexp *)0x0) {
LAB_006f5952:
        if (in_RCX < in_RCX - (int)prVar7) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceAlen();
        }
        runtime_newobject((internal_abi_Type *)&DAT_00855c40,in_RBX);
        extraout_RAX_04[1] = 0x22;
        *extraout_RAX_04 = &DAT_008c1a5c;
        extraout_RAX_04[3] = in_RCX - (int)prVar7;
        puVar5 = extraout_RAX_04;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier1();
          *extraout_R11_00 = in_RBX;
          puVar5 = extraout_RAX_05;
        }
        puVar5[2] = in_RBX;
        return;
      }
      t.len._5_1_ = cVar12;
      t._0_13_ = auStack_58;
      t.len._6_2_ = rVar11;
      err_00.data = puVar9;
      err_00.tab = local_48;
      regexp_syntax_nextRune(in_stack_ffffffffffffff98,(int32)iVar6,t,err_00);
      if (extraout_RDI != 0) {
        return;
      }
      iVar6 = extraout_RBX_00;
      prVar7 = ~r0_01;
      if (0x3a < extraout_EAX) {
        if (extraout_EAX < 0x6a) {
          if (extraout_EAX == 0x55) {
            rVar11 = rVar11 | 0x20;
            cVar12 = '\x01';
          }
          else {
            if (extraout_EAX != 0x69) goto LAB_006f5952;
            rVar11 = rVar11 | 1;
            cVar12 = '\x01';
          }
        }
        else if (extraout_EAX == 0x6d) {
          rVar11 = rVar11 & 0xffef;
          cVar12 = '\x01';
        }
        else {
          if (extraout_EAX != 0x73) goto LAB_006f5952;
          rVar11 = rVar11 | 8;
          cVar12 = '\x01';
        }
        goto LAB_006f578d;
      }
      if (extraout_EAX == 0x29) {
LAB_006f58a9:
        if ((int)puVar9 < 0) {
          if (cVar12 == '\0') goto LAB_006f5952;
          rVar11 = ~rVar11;
        }
        if (extraout_EAX == 0x3a) {
          regexp_syntax___parser__op(p,0x80,~r0_01);
        }
        p->flags = rVar11;
        return;
      }
      if (extraout_EAX != 0x2d) {
        if (extraout_EAX == 0x3a) goto LAB_006f58a9;
        goto LAB_006f5952;
      }
      if ((int)puVar9 < 0) goto LAB_006f5952;
      rVar11 = ~rVar11;
      puVar9 = (undefined *)0xffffffffffffffff;
      cVar12 = '\0';
    } while( true );
  }
  strings_IndexRune(in_stack_ffffffffffffff98,(int32)in_RBX,in_RCX);
  if ((int)extraout_RAX < 0) {
    ~r0_00.data._5_1_ = sawFlag;
    ~r0_00._0_13_ = auStack_58;
    ~r0_00.data._6_2_ = local_4a;
    regexp_syntax_checkUTF8(in_stack_ffffffffffffff98,~r0_00);
    if (extraout_RAX_01 != 0) {
      return;
    }
    runtime_newobject((internal_abi_Type *)&DAT_00855c40,~r0_02);
    extraout_RAX_02[1] = 0x15;
    *extraout_RAX_02 = &DAT_008b9b50;
    extraout_RAX_02[3] = in_RCX;
    puVar5 = extraout_RAX_02;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11 = in_RBX;
      puVar5 = extraout_RAX_03;
    }
    puVar5[2] = in_RBX;
    return;
  }
  if (in_RCX < extraout_RAX + 1) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAlen();
  }
  if (extraout_RAX < 4) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  pvVar1 = (void *)(extraout_RAX - 4);
  iVar6 = (uint)((dword)(-(int)pvVar1 >> 0x3f) & 4) + (int)in_RBX;
  ~r0.data._5_1_ = sawFlag;
  ~r0._0_13_ = auStack_58;
  ~r0.data._6_2_ = local_4a;
  regexp_syntax_checkUTF8(in_stack_ffffffffffffff98,~r0);
  if (extraout_RAX_00 != 0) {
    return;
  }
  if (extraout_RAX == 4) {
    bVar3 = false;
    prVar7 = extraout_RCX;
    pvVar10 = extraout_RBX;
  }
  else {
    prVar7 = (regexp_syntax_Regexp *)0x0;
    do {
      pvVar10 = pvVar1;
      if ((int)pvVar1 <= (int)prVar7) {
        bVar3 = true;
        goto LAB_006f59cf;
      }
      bVar2 = *(byte *)((int)prVar7->Sub0 + iVar6 + -0x20);
      c_1 = (int32)bVar2;
      if (bVar2 < 0x80) {
        prVar8 = prVar7;
        prVar7 = (regexp_syntax_Regexp *)&prVar7->field_0x1;
      }
      else {
        runtime_decoderune(in_stack_ffffffffffffff98,iVar6,(int32)pvVar1,(int)prVar7);
        prVar8 = extraout_RCX_00;
        prVar7 = extraout_RBX_01;
        c_1 = extraout_EAX_00;
      }
    } while (((c_1 == 0x5f) || ((dword)(c_1 - 0x30U) < 10)) ||
            (((dword)(c_1 - 0x41U) < 0x1a || ((dword)(c_1 - 0x61U) < 0x1a))));
    bVar3 = false;
    prVar7 = prVar8;
  }
LAB_006f59cf:
  if (!bVar3) {
    runtime_newobject((internal_abi_Type *)&DAT_00855c40,pvVar10);
    extraout_RAX_08[1] = 0x15;
    *extraout_RAX_08 = &DAT_008b9b50;
    extraout_RAX_08[3] = extraout_RAX + 1;
    puVar5 = extraout_RAX_08;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier1();
      *extraout_R11_02 = in_RBX;
      puVar5 = extraout_RAX_09;
    }
    puVar5[2] = in_RBX;
    return;
  }
  p->numCap = p->numCap + 1;
  regexp_syntax___parser__op(p,0x80,prVar7);
  *(int *)(extraout_RAX_06 + 0x58) = p->numCap;
  *(void **)(extraout_RAX_06 + 0x68) = pvVar1;
  iVar4 = extraout_RAX_06;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_01 = iVar6;
    extraout_R11_01[1] = *(int *)(extraout_RAX_07 + 0x60);
    iVar4 = extraout_RAX_07;
  }
  *(int *)(iVar4 + 0x60) = iVar6;
  return;
}



void regexp_syntax___parser__parseInt(regexp_syntax_parser *p,string s,int n,string rest,bool ok)

{
  byte bVar1;
  undefined7 in_register_00000009;
  uint uVar2;
  uint uVar3;
  byte *pbVar4;
  int iVar5;
  int i;
  int iVar6;
  
  uVar2 = CONCAT71(in_register_00000009,ok);
  if (((uVar2 == 0) || (bVar1 = *(byte *)n, bVar1 < 0x30)) || (0x39 < bVar1)) {
    return;
  }
  uVar3 = uVar2;
  pbVar4 = (byte *)n;
  if (((1 < (int)uVar2) && (bVar1 == 0x30)) &&
     ((0x2f < *(byte *)(n + 1) && (*(byte *)(n + 1) < 0x3a)))) {
    return;
  }
  for (; ((uVar3 != 0 && (0x2f < *pbVar4)) && (*pbVar4 < 0x3a));
      pbVar4 = pbVar4 + ((dword)((int)-uVar3 >> 0x3f) & 1)) {
    uVar3 = uVar3 - 1;
  }
  if (uVar2 - uVar3 <= uVar2) {
    iVar5 = 0;
    for (iVar6 = 0; (iVar5 < (int)(uVar2 - uVar3) && (iVar6 < 100000000));
        iVar6 = (uint)*pbVar4 + iVar6 * 10 + -0x30) {
      pbVar4 = (byte *)(n + iVar5);
      iVar5 = iVar5 + 1;
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceAlen();
}



void regexp_syntax___parser__parseVerticalBar(regexp_syntax_parser *p,error ~r0)

{
  char extraout_AL;
  regexp_syntax_Regexp *~r0_00;
  bool ~r0_01;
  regexp_syntax_Regexp *in_RBX;
  regexp_syntax_Regexp *extraout_RBX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RBX = extraout_RBX;
  }
  regexp_syntax___parser__concat(p,in_RBX);
  regexp_syntax___parser__swapVerticalBar(p,~r0_01);
  if (extraout_AL == '\0') {
    regexp_syntax___parser__op(p,0x81,~r0_00);
  }
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack
// WARNING: Unknown calling convention

void regexp_syntax_mergeCharClass(regexp_syntax_Regexp *dst,regexp_syntax_Regexp *src)

{
  byte bVar1;
  uint uVar2;
  __int32 ~r0;
  int32 *extraout_RAX;
  int32 *extraout_RAX_00;
  int32 *extraout_RAX_01;
  int32 *extraout_RAX_02;
  int32 *piVar3;
  int32 *extraout_RAX_03;
  int32 *extraout_RAX_04;
  int32 *extraout_RAX_05;
  int32 *extraout_RAX_06;
  int extraout_RCX;
  int extraout_RCX_00;
  int extraout_RCX_01;
  int extraout_RCX_02;
  int i;
  regexp_syntax_Regexp *prVar4;
  int extraout_RBX;
  int extraout_RBX_00;
  int iVar5;
  int extraout_RBX_01;
  int extraout_RBX_02;
  int extraout_RBX_03;
  int32 *unaff_RBP;
  int32 **extraout_R11;
  int32 **extraout_R11_00;
  int32 **extraout_R11_01;
  int32 **extraout_R11_02;
  int unaff_R14;
  bool bVar6;
  undefined8 unaff_retaddr;
  __int32 in_stack_ffffffffffffffc8;
  __int32 in_stack_ffffffffffffffe0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  bVar1 = dst->Op;
  if (bVar1 < 5) {
    if (bVar1 != 3) {
      if (bVar1 != 4) {
        return;
      }
      if (src->Op == 3) {
        if ((src->Rune).len != 0) {
          regexp_syntax_appendLiteral
                    (in_stack_ffffffffffffffc8,(int32)(dst->Rune).array,
                     (regexp_syntax_Flags)(dst->Rune).len,in_stack_ffffffffffffffe0);
          (dst->Rune).len = extraout_RBX_02;
          (dst->Rune).cap = extraout_RCX_01;
          piVar3 = extraout_RAX_03;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_01 = extraout_RAX_04;
            extraout_R11_01[1] = (dst->Rune).array;
            piVar3 = extraout_RAX_04;
          }
          (dst->Rune).array = piVar3;
          return;
        }
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      ~r0.cap = (int)dst;
      ~r0.len = unaff_retaddr;
      ~r0.array = unaff_RBP;
      regexp_syntax_appendClass(in_stack_ffffffffffffffc8,in_stack_ffffffffffffffe0,~r0);
      (dst->Rune).len = extraout_RBX_03;
      (dst->Rune).cap = extraout_RCX_02;
      piVar3 = extraout_RAX_05;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_02 = extraout_RAX_06;
        extraout_R11_02[1] = (dst->Rune).array;
        piVar3 = extraout_RAX_06;
      }
      (dst->Rune).array = piVar3;
      return;
    }
    if ((src->Rune).len == 0) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    if ((dst->Rune).len != 0) {
      if ((*(dst->Rune).array == *(src->Rune).array) && (dst->Flags == src->Flags)) {
        return;
      }
      dst->Op = 4;
      if ((dst->Rune).len == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      regexp_syntax_appendLiteral
                (in_stack_ffffffffffffffc8,(int32)(dst->Rune).array,0,in_stack_ffffffffffffffe0);
      (dst->Rune).len = extraout_RBX;
      (dst->Rune).cap = extraout_RCX;
      piVar3 = extraout_RAX;
      prVar4 = dst;
      iVar5 = extraout_RBX;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_RAX_00;
        extraout_R11[1] = (prVar4->Rune).array;
        piVar3 = extraout_RAX_00;
        iVar5 = extraout_RBX_00;
      }
      (prVar4->Rune).array = piVar3;
      if ((src->Rune).len != 0) {
        regexp_syntax_appendLiteral
                  (in_stack_ffffffffffffffc8,(int32)piVar3,(regexp_syntax_Flags)iVar5,
                   in_stack_ffffffffffffffe0);
        (dst->Rune).len = extraout_RBX_01;
        (dst->Rune).cap = extraout_RCX_00;
        piVar3 = extraout_RAX_01;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_00 = extraout_RAX_02;
          extraout_R11_00[1] = (dst->Rune).array;
          piVar3 = extraout_RAX_02;
        }
        (dst->Rune).array = piVar3;
        return;
      }
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if (bVar1 != 5) {
    return;
  }
  bVar1 = src->Op;
  if (bVar1 < 5) {
    if (bVar1 != 3) {
      if (bVar1 != 4) {
        return;
      }
      i = 0;
      do {
        uVar2 = (src->Rune).len;
        if ((int)uVar2 <= i) {
          return;
        }
        if (uVar2 <= (uint)i) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        piVar3 = (src->Rune).array;
        if (piVar3[i] < 0xb) {
          if (uVar2 <= i + 1U) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          if (9 < piVar3[i + 1]) goto LAB_006f5f5b;
        }
        i = i + 2;
      } while( true );
    }
    if ((src->Rune).len == 1) {
      bVar6 = *(src->Rune).array == 10;
    }
    else {
      bVar6 = false;
    }
  }
  else {
    if (bVar1 != 5) {
      if (bVar1 != 6) {
        return;
      }
      goto LAB_006f5f5b;
    }
    bVar6 = false;
  }
  if (!bVar6) {
    return;
  }
LAB_006f5f5b:
  dst->Op = 6;
  return;
}



void regexp_syntax___parser__swapVerticalBar(regexp_syntax_parser *p,bool ~r0)

{
  byte bVar1;
  byte bVar2;
  regexp_syntax_parser *extraout_RAX;
  regexp_syntax_parser *prVar3;
  regexp_syntax_parser *extraout_RCX;
  regexp_syntax_Regexp **extraout_RCX_00;
  regexp_syntax_Regexp **pprVar4;
  int n;
  int iVar5;
  int iVar6;
  regexp_syntax_Regexp *extraout_RBX;
  regexp_syntax_Regexp *re2;
  regexp_syntax_Regexp *extraout_RBX_00;
  regexp_syntax_Regexp *extraout_RBX_01;
  regexp_syntax_Regexp *prVar7;
  regexp_syntax_Regexp **extraout_RSI;
  regexp_syntax_Regexp *extraout_RSI_00;
  regexp_syntax_Regexp **extraout_RSI_01;
  regexp_syntax_Regexp *extraout_RDI;
  regexp_syntax_Regexp *re3;
  regexp_syntax_Regexp *re1_1;
  regexp_syntax_Regexp *extraout_RDI_00;
  regexp_syntax_Regexp *prVar8;
  regexp_syntax_Regexp *extraout_R9;
  regexp_syntax_Regexp *re1;
  regexp_syntax_Regexp **extraout_R11;
  regexp_syntax_Regexp **extraout_R11_00;
  regexp_syntax_Regexp **extraout_R11_01;
  regexp_syntax_Regexp **extraout_R11_02;
  int unaff_R14;
  regexp_syntax_parser *prStack0000000000000008;
  
  prStack0000000000000008 = p;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar6 = (prStack0000000000000008->stack).len;
  pprVar4 = (prStack0000000000000008->stack).array;
  if ((2 < iVar6) && (pprVar4[iVar6 + -2]->Op == 0x81)) {
    re1 = pprVar4[iVar6 + -1];
    bVar1 = re1->Op;
    if (((bVar1 == 3) && ((re1->Rune).len == 1)) || (((bVar1 == 4 || (bVar1 == 5)) || (bVar1 == 6)))
       ) {
      re3 = pprVar4[iVar6 + -3];
      bVar2 = re3->Op;
      if ((((bVar2 == 3) && ((re3->Rune).len == 1)) || (bVar2 == 4)) ||
         ((bVar2 == 5 || (bVar2 == 6)))) {
        if (bVar2 < bVar1) {
          iVar5 = iVar6;
          prVar7 = re3;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11 = extraout_RDI;
            extraout_R11[1] = extraout_RSI[iVar5 + -3];
            pprVar4 = extraout_RSI;
            re1 = extraout_RDI;
            prVar7 = extraout_R9;
          }
          pprVar4[iVar5 + -3] = re1;
          re3 = re1;
          re1 = prVar7;
        }
        regexp_syntax_mergeCharClass(re3,re1);
