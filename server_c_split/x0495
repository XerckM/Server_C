  x.array = in_stack_00000020;
  math_big_subVWlarge(z,x,in_RAX,in_RBX);
  return;
}



// WARNING: Unknown calling convention

void math_big_shlVU(void)

{
  bool bVar1;
  uint uVar2;
  uint uVar3;
  int iVar4;
  int iVar5;
  int *in_stack_00000008;
  int in_stack_00000010;
  int in_stack_00000020;
  byte in_stack_00000038;
  
  iVar4 = in_stack_00000010 + -1;
  if (0 < in_stack_00000010) {
    uVar3 = *(uint *)(in_stack_00000020 + iVar4 * 8);
    uVar2 = uVar3;
    if (0 < iVar4) {
      do {
        uVar3 = *(uint *)(in_stack_00000020 + -8 + iVar4 * 8);
        in_stack_00000008[iVar4] =
             uVar2 << (in_stack_00000038 & 0x3f) | uVar3 >> 0x40 - (in_stack_00000038 & 0x3f);
        iVar5 = iVar4 + -1;
        bVar1 = 0 < iVar4;
        uVar2 = uVar3;
        iVar4 = iVar5;
      } while (iVar5 != 0 && bVar1);
    }
    *in_stack_00000008 = uVar3 << (in_stack_00000038 & 0x3f);
    return;
  }
  return;
}



// WARNING: Unknown calling convention

void math_big_shrVU(void)

{
  uint uVar1;
  uint uVar2;
  int iVar3;
  int in_stack_00000008;
  int in_stack_00000010;
  uint *in_stack_00000020;
  byte in_stack_00000038;
  
  if (0 < in_stack_00000010) {
    uVar2 = *in_stack_00000020;
    for (iVar3 = 0; iVar3 < in_stack_00000010 + -1; iVar3 = iVar3 + 1) {
      uVar1 = in_stack_00000020[iVar3 + 1];
      *(uint *)(in_stack_00000008 + iVar3 * 8) =
           uVar2 >> (in_stack_00000038 & 0x3f) | uVar1 << 0x40 - (in_stack_00000038 & 0x3f);
      uVar2 = uVar1;
    }
    *(uint *)(in_stack_00000008 + (in_stack_00000010 + -1) * 8) =
         uVar2 >> (in_stack_00000038 & 0x3f);
    return;
  }
  return;
}



// WARNING: Unknown calling convention

void math_big_mulAddVWW(void)

{
  int iVar1;
  undefined auVar2 [16];
  undefined auVar3 [16];
  undefined auVar4 [16];
  undefined auVar5 [16];
  undefined auVar6 [16];
  undefined auVar7 [16];
  undefined auVar8 [16];
  undefined auVar9 [16];
  undefined auVar10 [16];
  undefined auVar11 [16];
  undefined auVar12 [16];
  undefined auVar13 [16];
  undefined auVar14 [16];
  undefined auVar15 [16];
  undefined auVar16 [16];
  int iVar17;
  int iVar18;
  int in_stack_00000008;
  int in_stack_00000010;
  int in_stack_00000020;
  uint in_stack_00000038;
  uint in_stack_00000040;
  
  iVar17 = 0;
  iVar18 = iVar17;
  if (3 < in_stack_00000010) {
    do {
      auVar12._8_8_ = 0;
      auVar12._0_8_ = in_stack_00000040;
      auVar2._8_8_ = 0;
      auVar2._0_8_ = *(uint *)(in_stack_00000020 + iVar18 * 8);
      auVar7._8_8_ = 0;
      auVar7._0_8_ = in_stack_00000038;
      auVar12 = auVar2 * auVar7 + auVar12;
      auVar13._8_8_ = 0;
      auVar13._0_8_ = auVar12._8_8_;
      *(int *)(in_stack_00000008 + iVar18 * 8) = auVar12._0_8_;
      auVar3._8_8_ = 0;
      auVar3._0_8_ = *(uint *)(in_stack_00000020 + 8 + iVar18 * 8);
      auVar8._8_8_ = 0;
      auVar8._0_8_ = in_stack_00000038;
      auVar13 = auVar3 * auVar8 + auVar13;
      auVar14._8_8_ = 0;
      auVar14._0_8_ = auVar13._8_8_;
      *(int *)(in_stack_00000008 + 8 + iVar18 * 8) = auVar13._0_8_;
      auVar4._8_8_ = 0;
      auVar4._0_8_ = *(uint *)(in_stack_00000020 + 0x10 + iVar18 * 8);
      auVar9._8_8_ = 0;
      auVar9._0_8_ = in_stack_00000038;
      auVar14 = auVar4 * auVar9 + auVar14;
      auVar15._8_8_ = 0;
      auVar15._0_8_ = auVar14._8_8_;
      *(int *)(in_stack_00000008 + 0x10 + iVar18 * 8) = auVar14._0_8_;
      auVar5._8_8_ = 0;
      auVar5._0_8_ = *(uint *)(in_stack_00000020 + 0x18 + iVar18 * 8);
      auVar10._8_8_ = 0;
      auVar10._0_8_ = in_stack_00000038;
      auVar15 = auVar5 * auVar10 + auVar15;
      in_stack_00000040 = auVar15._8_8_;
      *(int *)(in_stack_00000008 + 0x18 + iVar18 * 8) = auVar15._0_8_;
      iVar17 = iVar18 + 4;
      iVar1 = iVar18 + 8;
      iVar18 = iVar17;
    } while (iVar1 <= in_stack_00000010);
  }
  for (; auVar16._8_8_ = 0, auVar16._0_8_ = in_stack_00000040, iVar17 < in_stack_00000010;
      iVar17 = iVar17 + 1) {
    auVar6._8_8_ = 0;
    auVar6._0_8_ = *(uint *)(in_stack_00000020 + iVar17 * 8);
    auVar11._8_8_ = 0;
    auVar11._0_8_ = in_stack_00000038;
    auVar16 = auVar6 * auVar11 + auVar16;
    in_stack_00000040 = auVar16._8_8_;
    *(int *)(in_stack_00000008 + iVar17 * 8) = auVar16._0_8_;
  }
  return;
}



// WARNING: Unknown calling convention

void math_big_addMulVVW(void)

{
  undefined auVar1 [16];
  undefined auVar2 [16];
  undefined auVar3 [16];
  undefined auVar4 [16];
  undefined auVar5 [16];
  undefined auVar6 [16];
  unkint9 Var7;
  unkint9 Var8;
  undefined auVar9 [16];
  undefined auVar10 [16];
  undefined auVar11 [16];
  undefined auVar12 [16];
  undefined auVar13 [16];
  undefined auVar14 [16];
  undefined auVar15 [16];
  undefined auVar16 [16];
  undefined auVar17 [16];
  undefined auVar18 [16];
  undefined auVar19 [16];
  undefined auVar20 [16];
  undefined auVar21 [16];
  undefined auVar22 [16];
  undefined auVar23 [16];
  undefined auVar24 [16];
  undefined auVar25 [16];
  undefined auVar26 [16];
  undefined auVar27 [16];
  undefined auVar28 [16];
  uint uVar29;
  uint uVar30;
  uint uVar31;
  uint uVar32;
  int iVar33;
  uint *puVar34;
  uint *puVar35;
  uint *in_stack_00000008;
  uint in_stack_00000010;
  uint *in_stack_00000020;
  uint in_stack_00000038;
  
  if (!math_big_support_adx) {
    iVar33 = 0;
    uVar31 = 0;
    if (1 < in_stack_00000010) {
      do {
        auVar1._8_8_ = 0;
        auVar1._0_8_ = in_stack_00000020[iVar33];
        auVar4._8_8_ = 0;
        auVar4._0_8_ = in_stack_00000038;
        uVar30 = SUB168(auVar1 * auVar4,0);
        uVar29 = uVar30 + in_stack_00000008[iVar33];
        uVar32 = SUB168(auVar1 * auVar4,8) + (uint)CARRY8(uVar30,in_stack_00000008[iVar33]) +
                 (uint)CARRY8(uVar29,uVar31);
        in_stack_00000008[iVar33] = uVar29 + uVar31;
        auVar2._8_8_ = 0;
        auVar2._0_8_ = in_stack_00000020[iVar33 + 1];
        auVar5._8_8_ = 0;
        auVar5._0_8_ = in_stack_00000038;
        uVar31 = SUB168(auVar2 * auVar5,0);
        uVar30 = uVar31 + in_stack_00000008[iVar33 + 1];
        uVar31 = SUB168(auVar2 * auVar5,8) + (uint)CARRY8(uVar31,in_stack_00000008[iVar33 + 1]) +
                 (uint)CARRY8(uVar30,uVar32);
        in_stack_00000008[iVar33 + 1] = uVar30 + uVar32;
        iVar33 = iVar33 + 2;
      } while (iVar33 < (int)(in_stack_00000010 & 0xfffffffffffffffe));
    }
    for (; auVar27._8_8_ = 0, auVar27._0_8_ = uVar31, iVar33 < (int)in_stack_00000010;
        iVar33 = iVar33 + 1) {
      auVar3._8_8_ = 0;
      auVar3._0_8_ = in_stack_00000020[iVar33];
      auVar6._8_8_ = 0;
      auVar6._0_8_ = in_stack_00000038;
      auVar27 = auVar3 * auVar6 + auVar27;
      uVar30 = auVar27._0_8_;
      puVar34 = in_stack_00000008 + iVar33;
      uVar31 = *puVar34;
      *puVar34 = *puVar34 + uVar30;
      uVar31 = auVar27._8_8_ + (uint)CARRY8(uVar31,uVar30);
    }
    return;
  }
  iVar33 = 0;
  uVar31 = 0;
  if (in_stack_00000010 < 8) {
    if ((int)in_stack_00000010 < 1) {
      return;
    }
  }
  else {
    puVar34 = in_stack_00000020;
    puVar35 = in_stack_00000008;
    do {
      auVar9._8_8_ = 0;
      auVar9._0_8_ = in_stack_00000038;
      auVar18._8_8_ = 0;
      auVar18._0_8_ = *puVar34;
      Var7 = (unkuint9)SUB168(auVar9 * auVar18,0) + (unkuint9)uVar31 + (unkuint9)0;
      Var8 = (unkuint9)(uint)Var7 + (unkuint9)*puVar35 + (unkuint9)0;
      *puVar35 = (uint)Var8;
      auVar10._8_8_ = 0;
      auVar10._0_8_ = in_stack_00000038;
      auVar19._8_8_ = 0;
      auVar19._0_8_ = puVar34[1];
      Var7 = (unkuint9)SUB168(auVar10 * auVar19,0) + (unkuint9)SUB168(auVar9 * auVar18,8) +
             (unkuint9)((char)((unkuint9)Var7 >> 0x40) != '\0');
      Var8 = (unkuint9)(uint)Var7 + (unkuint9)puVar35[1] +
             (unkuint9)((char)((unkuint9)Var8 >> 0x40) != '\0');
      puVar35[1] = (uint)Var8;
      auVar11._8_8_ = 0;
      auVar11._0_8_ = in_stack_00000038;
      auVar20._8_8_ = 0;
      auVar20._0_8_ = puVar34[2];
      Var7 = (unkuint9)SUB168(auVar11 * auVar20,0) + (unkuint9)SUB168(auVar10 * auVar19,8) +
             (unkuint9)((char)((unkuint9)Var7 >> 0x40) != '\0');
      Var8 = (unkuint9)(uint)Var7 + (unkuint9)puVar35[2] +
             (unkuint9)((char)((unkuint9)Var8 >> 0x40) != '\0');
      puVar35[2] = (uint)Var8;
      auVar12._8_8_ = 0;
      auVar12._0_8_ = in_stack_00000038;
      auVar21._8_8_ = 0;
      auVar21._0_8_ = puVar34[3];
      Var7 = (unkuint9)SUB168(auVar12 * auVar21,0) + (unkuint9)SUB168(auVar11 * auVar20,8) +
             (unkuint9)((char)((unkuint9)Var7 >> 0x40) != '\0');
      Var8 = (unkuint9)(uint)Var7 + (unkuint9)puVar35[3] +
             (unkuint9)((char)((unkuint9)Var8 >> 0x40) != '\0');
      puVar35[3] = (uint)Var8;
      auVar13._8_8_ = 0;
      auVar13._0_8_ = in_stack_00000038;
      auVar22._8_8_ = 0;
      auVar22._0_8_ = puVar34[4];
      Var7 = (unkuint9)SUB168(auVar13 * auVar22,0) + (unkuint9)SUB168(auVar12 * auVar21,8) +
             (unkuint9)((char)((unkuint9)Var7 >> 0x40) != '\0');
      Var8 = (unkuint9)(uint)Var7 + (unkuint9)puVar35[4] +
             (unkuint9)((char)((unkuint9)Var8 >> 0x40) != '\0');
      puVar35[4] = (uint)Var8;
      auVar14._8_8_ = 0;
      auVar14._0_8_ = in_stack_00000038;
      auVar23._8_8_ = 0;
      auVar23._0_8_ = puVar34[5];
      Var7 = (unkuint9)SUB168(auVar14 * auVar23,0) + (unkuint9)SUB168(auVar13 * auVar22,8) +
             (unkuint9)((char)((unkuint9)Var7 >> 0x40) != '\0');
      Var8 = (unkuint9)(uint)Var7 + (unkuint9)puVar35[5] +
             (unkuint9)((char)((unkuint9)Var8 >> 0x40) != '\0');
      puVar35[5] = (uint)Var8;
      auVar15._8_8_ = 0;
      auVar15._0_8_ = in_stack_00000038;
      auVar24._8_8_ = 0;
      auVar24._0_8_ = puVar34[6];
      Var7 = (unkuint9)SUB168(auVar15 * auVar24,0) + (unkuint9)SUB168(auVar14 * auVar23,8) +
             (unkuint9)((char)((unkuint9)Var7 >> 0x40) != '\0');
      Var8 = (unkuint9)(uint)Var7 + (unkuint9)puVar35[6] +
             (unkuint9)((char)((unkuint9)Var8 >> 0x40) != '\0');
      puVar35[6] = (uint)Var8;
      auVar16._8_8_ = 0;
      auVar16._0_8_ = in_stack_00000038;
      auVar25._8_8_ = 0;
      auVar25._0_8_ = puVar34[7];
      Var7 = (unkuint9)SUB168(auVar16 * auVar25,0) + (unkuint9)SUB168(auVar15 * auVar24,8) +
             (unkuint9)((char)((unkuint9)Var7 >> 0x40) != '\0');
      Var8 = (unkuint9)(uint)Var7 + (unkuint9)puVar35[7] +
             (unkuint9)((char)((unkuint9)Var8 >> 0x40) != '\0');
      puVar35[7] = (uint)Var8;
      uVar31 = SUB168(auVar16 * auVar25,8) + (uint)((char)((unkuint9)Var7 >> 0x40) != '\0') +
               (uint)((char)((unkuint9)Var8 >> 0x40) != '\0');
      puVar34 = puVar34 + 8;
      puVar35 = puVar35 + 8;
      iVar33 = iVar33 + 8;
    } while (iVar33 < (int)(in_stack_00000010 & 0xfffffffffffffff8));
    if ((int)in_stack_00000010 <= iVar33) {
      return;
    }
  }
  do {
    auVar28._8_8_ = 0;
    auVar28._0_8_ = uVar31;
    auVar17._8_8_ = 0;
    auVar17._0_8_ = in_stack_00000038;
    auVar26._8_8_ = 0;
    auVar26._0_8_ = in_stack_00000020[iVar33];
    auVar28 = auVar17 * auVar26 + auVar28;
    uVar30 = auVar28._0_8_;
    puVar34 = in_stack_00000008 + iVar33;
    uVar31 = *puVar34;
    *puVar34 = *puVar34 + uVar30;
    uVar31 = auVar28._8_8_ + (uint)CARRY8(uVar31,uVar30);
    iVar33 = iVar33 + 1;
  } while (iVar33 < (int)in_stack_00000010);
  return;
}



void math_big___Accuracy__String(string ~r0)

{
  string **ppsVar1;
  string ~r0_00;
  uint8 *in_RAX;
  int unaff_RBP;
  int unaff_R14;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xfffffffffffffff0;
  }
  if (in_RAX != (uint8 *)0x0) {
    ~r0_00.len = unaff_RBP;
    ~r0_00.str = in_stack_fffffffffffffff0;
    math_big_Accuracy_String(*in_RAX,~r0_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void math_big___nat__String(string ~r0)

{
  string **ppsVar1;
  math_big_nat x;
  string a1;
  __uint8 ~r0_00;
  string ~r0_01;
  undefined8 *in_RAX;
  int unaff_RBP;
  int unaff_R14;
  string in_stack_ffffffffffffffd0;
  uint8 *in_stack_ffffffffffffffe0;
  int in_stack_ffffffffffffffe8;
  uint8 *in_stack_fffffffffffffff0;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.str = (uint8 *)in_RAX;
    runtime_morestack_noctxt();
    in_RAX = (undefined8 *)~r0.str;
  }
  ppsVar1 = *(string ***)(unaff_R14 + 0x20);
  if ((ppsVar1 != (string **)0x0) && (*ppsVar1 == &~r0)) {
    *ppsVar1 = (string *)&stack0xffffffffffffffd0;
  }
  if (in_RAX != (undefined8 *)0x0) {
    x.cap = (int)in_stack_ffffffffffffffe0;
    x.array = (math_big_Word *)in_stack_ffffffffffffffd0.str;
    x.len = in_stack_ffffffffffffffd0.len;
    ~r0_00.len = (int)in_stack_fffffffffffffff0;
    ~r0_00.array = (uint8 *)in_stack_ffffffffffffffe8;
    ~r0_00.cap = unaff_RBP;
    math_big_nat_itoa(x,SUB81(*in_RAX,0),in_RAX[1],~r0_00);
    a1.len = in_stack_ffffffffffffffe8;
    a1.str = in_stack_ffffffffffffffe0;
    ~r0_01.len = unaff_RBP;
    ~r0_01.str = in_stack_fffffffffffffff0;
    runtime_concatstring2((runtime_tmpBuf *)0x0,in_stack_ffffffffffffffd0,a1,~r0_01);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void math_big_byteReader_Read(__uint8 buf,int n,error err)

{
  __uint8 **pp_Var1;
  int in_RCX;
  int in_RBX;
  undefined8 in_RSI;
  undefined8 in_RDI;
  int unaff_R14;
  __uint8 _Stack_28;
  
  buf.array = (uint8 *)n;
  buf.cap = in_RCX;
  buf.len = in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &buf)) {
    *pp_Var1 = &_Stack_28;
  }
  (**(code **)(buf.array + 0x18))(buf.len,buf.cap,in_RDI,in_RSI);
  return;
}



void math_big___byteReader__Read(__uint8 buf,int n,error err)

{
  __uint8 **pp_Var1;
  int in_RCX;
  int unaff_R14;
  __uint8 _Stack_28;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    buf.array = (uint8 *)n;
    buf.cap = in_RCX;
    runtime_morestack_noctxt();
    n = (int)buf.array;
    in_RCX = buf.cap;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &buf)) {
    *pp_Var1 = &_Stack_28;
  }
  (**(code **)(*(int *)n + 0x18))(*(int *)(n + 8));
  return;
}



// WARNING: Restarted to delay deadcode elimination for space: stack

void math_big___byteReader__ReadByte(uint8 ~r0,error ~r1)

{
  error **ppeVar1;
  error ~r1_00;
  undefined7 in_register_00000001;
  runtime_itab *prVar2;
  runtime_itab *unaff_RBP;
  int unaff_R14;
  void *unaff_retaddr;
  fmt_ScanState in_stack_ffffffffffffffe8;
  
  prVar2 = (runtime_itab *)CONCAT71(in_register_00000001,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r1.tab = prVar2;
    runtime_morestack_noctxt();
    prVar2 = ~r1.tab;
  }
  ppeVar1 = *(error ***)(unaff_R14 + 0x20);
  if ((ppeVar1 != (error **)0x0) && (*ppeVar1 == &~r1)) {
    *ppeVar1 = (error *)&stack0xffffffffffffffe8;
  }
  if (prVar2 != (runtime_itab *)0x0) {
    ~r1_00.data = unaff_retaddr;
    ~r1_00.tab = unaff_RBP;
    math_big_byteReader_ReadByte
              ((math_big_byteReader)in_stack_ffffffffffffffe8,(uint8)prVar2->inter,~r1_00);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



void math_big_byteReader_ReadRune(int32 r,int size,error err)

{
  error **ppeVar1;
  undefined4 in_register_00000004;
  int unaff_R14;
  
  err.tab = (runtime_itab *)CONCAT44(in_register_00000004,r);
  err.data = (void *)size;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  ppeVar1 = *(error ***)(unaff_R14 + 0x20);
  if ((ppeVar1 != (error **)0x0) && (*ppeVar1 == &err)) {
    *ppeVar1 = (error *)&stack0xfffffffffffffff0;
  }
  (*(code *)err.tab[1].inter)(err.data);
  return;
}



void math_big___byteReader__ReadRune(int32 r,int size,error err)

{
  error **ppeVar1;
  undefined4 in_register_00000004;
  runtime_itab *prVar2;
  int unaff_R14;
  
  prVar2 = (runtime_itab *)CONCAT44(in_register_00000004,r);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    err.tab = prVar2;
    runtime_morestack_noctxt();
    prVar2 = err.tab;
  }
  ppeVar1 = *(error ***)(unaff_R14 + 0x20);
  if ((ppeVar1 != (error **)0x0) && (*ppeVar1 == &err)) {
    *ppeVar1 = (error *)&stack0xfffffffffffffff0;
  }
  (*(code *)(prVar2->inter->Type).GCData)(prVar2->_type);
  return;
}



// WARNING: Unknown calling convention

void math_big_byteReader_SkipSpace(void)

{
  int *piVar1;
  int in_RAX;
  undefined8 in_RBX;
  int unaff_R14;
  int iStack0000000000000008;
  undefined8 uStack0000000000000010;
  undefined auStack_10 [8];
  
  iStack0000000000000008 = in_RAX;
  uStack0000000000000010 = in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  (**(code **)(iStack0000000000000008 + 0x28))(uStack0000000000000010);
  return;
}



// WARNING: Unknown calling convention

void math_big___byteReader__SkipSpace(void)

{
  int *piVar1;
  int *in_RAX;
  int unaff_R14;
  int *piStack0000000000000008;
  undefined auStack_10 [8];
  
  piStack0000000000000008 = in_RAX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  (**(code **)(*piStack0000000000000008 + 0x28))(piStack0000000000000008[1]);
  return;
}



void math_big_byteReader_Token(bool skipSpace,func_int32__bool **f,__uint8 token,error err)

{
  __uint8 **pp_Var1;
  undefined7 in_register_00000001;
  dword in_ECX;
  undefined8 in_RDI;
  int unaff_R14;
  __uint8 _Stack_20;
  
  token.array = (uint8 *)CONCAT71(in_register_00000001,skipSpace);
  token.len = (int)f;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    token.cap._0_1_ = (byte)in_ECX;
    runtime_morestack_noctxt();
    in_ECX = (dword)(byte)token.cap;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &token)) {
    *pp_Var1 = &_Stack_20;
  }
  (**(code **)(token.array + 0x30))(token.len,in_ECX,in_RDI);
  return;
}



void math_big___byteReader__Token(bool skipSpace,func_int32__bool **f,__uint8 token,error err)

{
  __uint8 **pp_Var1;
  undefined7 in_register_00000001;
  int *piVar2;
  int in_RCX;
  int unaff_R14;
  __uint8 _Stack_20;
  
  piVar2 = (int *)CONCAT71(in_register_00000001,skipSpace);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    token.len._0_1_ = (byte)f;
    token.array = (uint8 *)piVar2;
    token.cap = in_RCX;
    runtime_morestack_noctxt();
    f = (func_int32__bool **)(uint)(byte)token.len;
    piVar2 = (int *)token.array;
    in_RCX = token.cap;
  }
  pp_Var1 = *(__uint8 ***)(unaff_R14 + 0x20);
  if ((pp_Var1 != (__uint8 **)0x0) && (*pp_Var1 == &token)) {
    *pp_Var1 = &_Stack_20;
  }
  (**(code **)(*piVar2 + 0x30))(piVar2[1]);
  return;
}



void math_big___byteReader__UnreadByte(error ~r0)

{
  error **ppeVar1;
  runtime_itab *in_RAX;
  int unaff_R14;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    ~r0.tab = in_RAX;
    runtime_morestack_noctxt();
    in_RAX = ~r0.tab;
  }
  ppeVar1 = *(error ***)(unaff_R14 + 0x20);
  if ((ppeVar1 != (error **)0x0) && (*ppeVar1 == &~r0)) {
    *ppeVar1 = (error *)&stack0xfffffffffffffff0;
  }
  if (in_RAX != (runtime_itab *)0x0) {
    (*(code *)(in_RAX->inter->Methods).array)(in_RAX->_type);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicwrap();
}



// WARNING: Unknown calling convention

void math_big_byteReader_UnreadRune(void)

{
  int *piVar1;
  int in_RAX;
  undefined8 in_RBX;
  int unaff_R14;
  int iStack0000000000000008;
  undefined8 uStack0000000000000010;
  undefined auStack_10 [8];
  
  iStack0000000000000008 = in_RAX;
  uStack0000000000000010 = in_RBX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  (**(code **)(iStack0000000000000008 + 0x38))(uStack0000000000000010);
  return;
}



// WARNING: Unknown calling convention

void math_big___byteReader__UnreadRune(void)

{
  int *piVar1;
  int *in_RAX;
  int unaff_R14;
  int *piStack0000000000000008;
  undefined auStack_10 [8];
  
  piStack0000000000000008 = in_RAX;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  (**(code **)(*piStack0000000000000008 + 0x38))(piStack0000000000000008[1]);
  return;
}



void math_big_byteReader_Width(int wid,bool ok)

{
  int *piVar1;
  undefined7 in_register_00000019;
  int unaff_R14;
  int iStack0000000000000008;
  undefined8 uStack0000000000000010;
  undefined auStack_10 [8];
  
  uStack0000000000000010 = CONCAT71(in_register_00000019,ok);
  iStack0000000000000008 = wid;
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  (**(code **)(iStack0000000000000008 + 0x40))(uStack0000000000000010);
  return;
}



void math_big___byteReader__Width(int wid,bool ok)

{
  int *piVar1;
  int unaff_R14;
  int *in_stack_00000008;
  undefined auStack_10 [8];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    in_stack_00000008 = (int *)wid;
    runtime_morestack_noctxt();
    wid = (int)in_stack_00000008;
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((int **)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_10;
  }
  (**(code **)(*(int *)wid + 0x40))(*(int *)(wid + 8));
  return;
}



void math_big_addVWlarge(__math_big_Word z,__math_big_Word x,math_big_Word y,math_big_Word c)

{
  __math_big_Word in_stack_ffffffffffffffc0;
  __math_big_Word in_stack_ffffffffffffffd8;
  
  math_big_addVWlarge(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd8,(math_big_Word)z.array,
                      z.len);
  return;
}



void math_big_subVWlarge(__math_big_Word z,__math_big_Word x,math_big_Word y,math_big_Word c)

{
  __math_big_Word in_stack_ffffffffffffffc0;
  __math_big_Word in_stack_ffffffffffffffd8;
  
  math_big_subVWlarge(in_stack_ffffffffffffffc0,in_stack_ffffffffffffffd8,(math_big_Word)z.array,
                      z.len);
  return;
}



void crypto_elliptic_Marshal
               (crypto_elliptic_Curve curve,math_big_Int *x,math_big_Int *y,__uint8 ~r0)

{
  __uint8 buf;
  __uint8 buf_00;
  __uint8 ~r0_00;
  __uint8 ~r0_01;
  int iVar1;
  undefined *extraout_RAX;
  math_big_Int *in_RCX;
  int byteLen;
  math_big_Int *in_RDI;
  void *~r0_02;
  int unaff_R14;
  crypto_elliptic_Curve in_stack_ffffffffffffffa0;
  int in_stack_ffffffffffffffb0;
  undefined8 in_stack_ffffffffffffffb8;
  uint len;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  crypto_elliptic_panicIfNotOnCurve(in_stack_ffffffffffffffa0,x,y);
  iVar1 = (*(code *)x[1].abs.len)(y);
  iVar1 = (int)(((uint)(*(int *)(iVar1 + 0x28) + 7 >> 0x3f) >> 0x3d) + *(int *)(iVar1 + 0x28) + 7)
          >> 3;
  len = iVar1 * 2 + 1;
  runtime_makeslice((internal_abi_Type *)&DAT_00807920,len,len,~r0_02);
  if (len == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  *extraout_RAX = 4;
  if (len < iVar1 + 1U) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  if (iVar1 != -1) {
    buf.cap = in_stack_ffffffffffffffb0;
    buf.array = (uint8 *)in_stack_ffffffffffffffa0.tab;
    buf.len = (int)in_stack_ffffffffffffffa0.data;
    ~r0_00.len = len;
    ~r0_00.array = (uint8 *)in_stack_ffffffffffffffb8;
    ~r0_00.cap = iVar1;
    math_big___Int__FillBytes(in_RCX,buf,~r0_00);
    buf_00.cap = in_stack_ffffffffffffffb0;
    buf_00.array = (uint8 *)in_stack_ffffffffffffffa0.tab;
    buf_00.len = (int)in_stack_ffffffffffffffa0.data;
    ~r0_01.len = len;
    ~r0_01.array = (uint8 *)in_stack_ffffffffffffffb8;
    ~r0_01.cap = iVar1;
    math_big___Int__FillBytes(in_RDI,buf_00,~r0_01);
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicSliceB();
}



void crypto_elliptic_Unmarshal
               (crypto_elliptic_Curve curve,__uint8 data,math_big_Int *x,math_big_Int *y)

{
  math_big_Int *y_00;
  math_big_nat z;
  math_big_nat z_00;
  runtime_iface r;
  __uint8 buf;
  __uint8 buf_00;
  math_big_nat ~r0;
  math_big_nat ~r0_00;
  char cVar1;
  int extraout_RAX;
  int iVar2;
  math_big_Int **ppmVar3;
  math_big_Int *x_00;
  math_big_Word *extraout_RAX_00;
  math_big_Word *extraout_RAX_01;
  math_big_Word *pmVar4;
  math_big_Int *extraout_RAX_02;
  math_big_Word *extraout_RAX_03;
  math_big_Word *extraout_RAX_04;
  math_big_Word *pmVar5;
  int extraout_RAX_05;
  int extraout_RAX_06;
  char *in_RCX;
  int byteLen;
  int extraout_RCX;
  math_big_Word *extraout_RCX_00;
  int r_00;
  math_big_Int *pmVar6;
  undefined8 extraout_RBX;
  math_big_Int *p;
  void *extraout_RBX_00;
  void *extraout_RBX_01;
  void *~r0_01;
  int extraout_RBX_02;
  uint in_RSI;
  uint in_RDI;
  math_big_Word **extraout_R11;
  math_big_Word **extraout_R11_00;
  int unaff_R14;
  runtime_iface in_stack_ffffffffffffffa0;
  runtime_itab *in_stack_ffffffffffffffb0;
  uint8 *in_stack_ffffffffffffffb8;
  undefined in_stack_ffffffffffffffc0 [16];
  uint uVar7;
  int in_stack_ffffffffffffffe0;
  math_big_Int *x_01;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  r.data = in_stack_ffffffffffffffb8;
  r.tab = in_stack_ffffffffffffffb0;
  runtime_assertI2I2((internal_abi_InterfaceType *)&DAT_0083d720,in_stack_ffffffffffffffa0,r);
  if (extraout_RAX != 0) {
    (**(code **)(extraout_RAX + 0x18))(extraout_RBX,in_RCX,in_RDI,in_RSI);
    return;
  }
  iVar2 = (*(code *)x[1].abs.len)(y);
  iVar2 = (int)(((uint)(*(int *)(iVar2 + 0x28) + 7 >> 0x3f) >> 0x3d) + *(int *)(iVar2 + 0x28) + 7)
          >> 3;
  if (in_RDI != iVar2 * 2 + 1U) {
    return;
  }
  if (in_RDI == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  if (*in_RCX != '\x04') {
    return;
  }
  ppmVar3 = (math_big_Int **)(*(code *)x[1].abs.len)(y);
  uVar7 = iVar2 + 1;
  y_00 = *ppmVar3;
  runtime_newobject((internal_abi_Type *)&DAT_00855ba0,y_00);
  if (in_RSI < uVar7) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  }
  if (uVar7 == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicSliceB();
  }
  z.cap = (int)in_stack_ffffffffffffffb0;
  z.array = (math_big_Word *)in_stack_ffffffffffffffa0.tab;
  z.len = (int)in_stack_ffffffffffffffa0.data;
  buf.len = in_stack_ffffffffffffffc0._0_8_;
  buf.cap = in_stack_ffffffffffffffc0._8_8_;
  buf.array = in_stack_ffffffffffffffb8;
  ~r0.len = uVar7;
  ~r0.array = (math_big_Word *)iVar2;
  ~r0.cap = in_stack_ffffffffffffffe0;
  math_big_nat_setBytes(z,buf,~r0);
  (x_00->abs).len = (int)extraout_RBX_00;
  (x_00->abs).cap = extraout_RCX;
  pmVar4 = extraout_RAX_00;
  pmVar6 = x_00;
  ~r0_01 = extraout_RBX_00;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RAX_01;
    extraout_R11[1] = (pmVar6->abs).array;
    pmVar4 = extraout_RAX_01;
