  uint extraout_R8;
  uint8 *extraout_R9;
  uint8 *extraout_R9_00;
  uint8 *extraout_R9_01;
  uint8 *oldPtr;
  uint8 **extraout_R11;
  uint8 **extraout_R11_00;
  uint8 **extraout_R11_01;
  int unaff_R14;
  fmt_pp *pfStack0000000000000008;
  dword dStack0000000000000010;
  __uint8 in_stack_ffffffffffffffa8;
  __uint8 in_stack_ffffffffffffffc0;
  
  uVar4 = (uint)(dword)verb;
  pfStack0000000000000008 = p;
  while (dStack0000000000000010 = (dword)uVar4,
        &stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    uVar4 = (uint)dStack0000000000000010;
  }
  oldCap = (pfStack0000000000000008->buf).cap;
  iVar1 = (pfStack0000000000000008->buf).len;
  uVar3 = iVar1 + 2;
  oldPtr = (pfStack0000000000000008->buf).array;
  if (oldCap < uVar3) {
    runtime_growslice(oldPtr,uVar3,oldCap,2,(internal_abi_Type *)&DAT_00807920,
                      (runtime_slice)in_stack_ffffffffffffffa8);
    uVar4 = (uint)dStack0000000000000010;
    oldCap = extraout_RCX;
    uVar3 = extraout_RBX;
    oldPtr = extraout_RAX;
  }
  *(undefined2 *)(oldPtr + iVar1) = 0x2125;
  (pfStack0000000000000008->buf).len = uVar3;
  (pfStack0000000000000008->buf).cap = oldCap;
  pfVar2 = pfStack0000000000000008;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_R9;
    extraout_R11[1] = (extraout_RAX_00->buf).array;
    pfVar2 = extraout_RAX_00;
    oldCap = extraout_RCX_00;
    uVar4 = extraout_RBX_00;
    uVar3 = extraout_R8;
    oldPtr = extraout_R9;
  }
  (pfVar2->buf).array = oldPtr;
  if ((dword)uVar4 < 0x80) {
    uVar3 = uVar3 + 1;
    if (oldCap < uVar3) {
      runtime_growslice(oldPtr,uVar3,oldCap,1,(internal_abi_Type *)&DAT_00807920,
                        (runtime_slice)in_stack_ffffffffffffffa8);
      uVar4 = (uint)dStack0000000000000010;
      pfVar2 = pfStack0000000000000008;
      oldCap = extraout_RCX_01;
      uVar3 = extraout_RBX_01;
      oldPtr = extraout_RAX_01;
    }
    oldPtr[uVar3 - 1] = (uint8)uVar4;
  }
  else {
    unicode_utf8_appendRuneNonASCII
              (in_stack_ffffffffffffffa8,(int32)oldPtr,in_stack_ffffffffffffffc0);
    pfVar2 = pfStack0000000000000008;
    oldCap = extraout_RCX_02;
    uVar3 = extraout_RBX_02;
    oldPtr = extraout_RAX_02;
  }
  (pfVar2->buf).len = uVar3;
  (pfVar2->buf).cap = oldCap;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_R9_00;
    extraout_R11_00[1] = (extraout_RAX_03->buf).array;
    pfVar2 = extraout_RAX_03;
    oldCap = extraout_RCX_03;
    oldPtr = extraout_R9_00;
  }
  (pfVar2->buf).array = oldPtr;
  uVar4 = uVar3 + 9;
  if (oldCap < uVar4) {
    runtime_growslice(oldPtr,uVar4,oldCap,9,(internal_abi_Type *)&DAT_00807920,
                      (runtime_slice)in_stack_ffffffffffffffa8);
    pfVar2 = pfStack0000000000000008;
    oldCap = extraout_RCX_04;
    uVar4 = extraout_RBX_03;
    oldPtr = extraout_RAX_04;
  }
  *(undefined8 *)(oldPtr + uVar3) = 0x474e495353494d28;
  oldPtr[uVar3 + 8] = 0x29;
  (pfVar2->buf).len = uVar4;
  (pfVar2->buf).cap = oldCap;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_01 = extraout_R9_01;
    extraout_R11_01[1] = (extraout_RAX_05->buf).array;
    pfVar2 = extraout_RAX_05;
    oldPtr = extraout_R9_01;
  }
  (pfVar2->buf).array = oldPtr;
  return;
}



void fmt___pp__doPrintf(fmt_pp *p,string format,__interface___ a)

{
  byte bVar1;
  int iVar2;
  runtime_slice ~r0;
  runtime_slice ~r0_00;
  __interface___ a_00;
  runtime_slice ~r0_01;
  __interface___ a_01;
  runtime_slice ~r0_02;
  runtime_slice ~r0_03;
  runtime_slice ~r0_04;
  runtime_slice ~r0_05;
  runtime_slice ~r0_06;
  runtime_slice ~r0_07;
  runtime_slice ~r0_08;
  runtime_slice ~r0_09;
  runtime_slice ~r0_10;
  runtime_slice ~r0_11;
  dword extraout_EAX;
  int32 verb;
  int argNum;
  char extraout_CL;
  bool afterIndex;
  uint8 *extraout_RAX;
  fmt_pp *extraout_RAX_00;
  int *extraout_RAX_01;
  int *extraout_RAX_02;
  void *newArgNum;
  int extraout_RAX_03;
  uint8 *extraout_RAX_04;
  uint8 *extraout_RAX_05;
  void *newArgNum_00;
  int extraout_RAX_06;
  uint8 *extraout_RAX_07;
  uint8 *extraout_RAX_08;
  uint8 *puVar3;
  void *extraout_RAX_09;
  uint8 *extraout_RAX_10;
  uint8 *extraout_RAX_11;
  int *extraout_RAX_12;
  int *extraout_RAX_13;
  uint8 *extraout_RAX_14;
  fmt_pp *extraout_RAX_15;
  uint8 *extraout_RAX_16;
  fmt_pp *extraout_RAX_17;
  uint8 *extraout_RAX_18;
  fmt_pp *extraout_RAX_19;
  uint8 *extraout_RAX_20;
  fmt_pp *extraout_RAX_21;
  uint8 *extraout_RAX_22;
  uint8 *extraout_RAX_23;
  fmt_pp *pfVar4;
  uint8 *extraout_RAX_24;
  uint8 *extraout_RAX_25;
  uint8 *extraout_RAX_26;
  char extraout_CL_00;
  char cVar5;
  void *in_RCX;
  int end;
  void *extraout_RCX;
  int extraout_RCX_00;
  void *extraout_RCX_01;
  uint extraout_RCX_02;
  void *extraout_RCX_03;
  void *extraout_RCX_04;
  uint extraout_RCX_05;
  void *extraout_RCX_06;
  int iVar6;
  int extraout_RCX_07;
  int extraout_RCX_08;
  uint extraout_RCX_09;
  uint extraout_RCX_10;
  int extraout_RCX_11;
  int iVar7;
  uint extraout_RCX_12;
  int extraout_RCX_13;
  void *extraout_RCX_14;
  void *extraout_RCX_15;
  int extraout_RCX_16;
  int extraout_RCX_17;
  uint extraout_RCX_18;
  int lasti;
  void *__src;
  void *pvVar8;
  int *piVar9;
  uint uVar10;
  bool extraout_BL;
  bool extraout_BL_00;
  int in_RBX;
  void *extraout_RBX;
  uint extraout_RBX_00;
  uint extraout_RBX_01;
  void *extraout_RBX_02;
  uint extraout_RBX_03;
  void *extraout_RBX_04;
  uint extraout_RBX_05;
  void *extraout_RBX_06;
  int extraout_RBX_07;
  int size;
  uint extraout_RBX_08;
  uint extraout_RBX_09;
  uint extraout_RBX_10;
  uint extraout_RBX_11;
  uint extraout_RBX_12;
  uint extraout_RBX_13;
  uint extraout_RBX_14;
  size_t sVar11;
  void *extraout_RBX_15;
  void *extraout_RBX_16;
  void *pvVar12;
  void *extraout_RBX_17;
  void *extraout_RBX_18;
  uint extraout_RBX_19;
  uint extraout_RBX_20;
  uint extraout_RBX_21;
  void *pvVar13;
  void *in_RSI;
  void *extraout_RSI;
  int iVar14;
  int extraout_RSI_00;
  int extraout_RSI_01;
  uint8 *puVar15;
  int in_RDI;
  int extraout_RDI;
  undefined1 *puVar16;
  int in_R8;
  int extraout_R8;
  int extraout_R8_00;
  int iVar17;
  uint8 *extraout_R8_01;
  void *extraout_R9;
  int extraout_R9_00;
  int iVar18;
  void *oldCap;
  uint8 *extraout_R10;
  uint8 *extraout_R10_00;
  fmt_pp *extraout_R10_01;
  dword verb_00;
  uint8 **extraout_R11;
  int **extraout_R11_00;
  uint8 **extraout_R11_01;
  uint8 **extraout_R11_02;
  uint8 **extraout_R11_03;
  int **extraout_R11_04;
  uint8 **extraout_R11_05;
  uint8 **extraout_R11_06;
  uint8 **extraout_R11_07;
  uint8 **extraout_R11_08;
  uint8 **extraout_R11_09;
  uint8 **extraout_R11_10;
  uint8 **extraout_R11_11;
  uint uVar19;
  int unaff_R14;
  bool bVar20;
  undefined auVar21 [16];
  int iStack0000000000000030;
  interface___ in_stack_ffffffffffffff10;
  int in_stack_ffffffffffffff20;
  uint8 c;
  int i_1;
  int i;
  void *local_70;
  void *local_68;
  void *local_60;
  void *local_58;
  void *local_50;
  void *local_48;
  int local_40;
  uint8 *local_38;
  uint8 *local_30;
  int *local_28;
  int local_20;
  int local_18;
  int local_10;
  
  iStack0000000000000030 = in_R8;
  while (&local_70 <= *(void ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  p->reordered = false;
  lasti = 0;
  pfVar4 = p;
  pvVar13 = (void *)0x0;
  local_20 = in_RDI;
LAB_004f2469:
  do {
    if ((int)in_RCX <= lasti) {
LAB_004f2e25:
      if ((pfVar4->reordered == false) && ((int)pvVar13 < (int)in_RSI)) {
        (pfVar4->fmt).fmtFlags.widPresent = false;
        (pfVar4->fmt).fmtFlags.precPresent = false;
        (pfVar4->fmt).fmtFlags.minus = false;
        (pfVar4->fmt).fmtFlags.plus = false;
        (pfVar4->fmt).fmtFlags.sharp = false;
        (pfVar4->fmt).fmtFlags.space = false;
        (pfVar4->fmt).fmtFlags.zero = false;
        (pfVar4->fmt).fmtFlags.plusV = false;
        (pfVar4->fmt).fmtFlags.precPresent = false;
        (pfVar4->fmt).fmtFlags.minus = false;
        (pfVar4->fmt).fmtFlags.plus = false;
        (pfVar4->fmt).fmtFlags.sharp = false;
        (pfVar4->fmt).fmtFlags.space = false;
        (pfVar4->fmt).fmtFlags.zero = false;
        (pfVar4->fmt).fmtFlags.plusV = false;
        (pfVar4->fmt).fmtFlags.sharpV = false;
        pvVar12 = (void *)(pfVar4->buf).len;
        uVar10 = (int)pvVar12 + 9;
        uVar19 = (pfVar4->buf).cap;
        puVar3 = (pfVar4->buf).array;
        if (uVar19 < uVar10) {
          ~r0_05.cap = in_stack_ffffffffffffff20;
          ~r0_05.array = in_stack_ffffffffffffff10._type;
          ~r0_05.len = (int)in_stack_ffffffffffffff10.data;
          local_58 = pvVar12;
          runtime_growslice(puVar3,uVar10,uVar19,9,(internal_abi_Type *)&DAT_00807920,~r0_05);
          pfVar4 = p;
          uVar19 = extraout_RCX_09;
          uVar10 = extraout_RBX_12;
          pvVar12 = local_58;
          puVar3 = extraout_RAX_14;
        }
        *(undefined8 *)(puVar3 + (int)pvVar12) = 0x4152545845282125;
        (puVar3 + 8)[(int)pvVar12] = 0x20;
        (pfVar4->buf).len = uVar10;
        (pfVar4->buf).cap = uVar19;
        if (runtime_writeBarrier._0_4_ == 0) {
          bVar20 = in_RSI < pvVar13;
        }
        else {
          runtime_gcWriteBarrier2();
          *extraout_R11_05 = extraout_R10;
          extraout_R11_05[1] = (extraout_RAX_15->buf).array;
          bVar20 = extraout_RSI < extraout_R9;
          pfVar4 = extraout_RAX_15;
          in_RSI = extraout_RSI;
          local_20 = extraout_RDI;
          iStack0000000000000030 = extraout_R8;
          pvVar13 = extraout_R9;
          puVar3 = extraout_R10;
        }
        (pfVar4->buf).array = puVar3;
        if (bVar20) {
                    // WARNING: Subroutine does not return
          runtime_panicSliceB();
        }
        piVar9 = (int *)(((int)pvVar13 << 4 & (int)pvVar13 - iStack0000000000000030 >> 0x3f) +
                        local_20);
        iVar14 = (int)in_RSI - (int)pvVar13;
        local_58 = (void *)iVar14;
        for (iVar6 = 0; iVar6 < iVar14; iVar6 = iVar6 + 1) {
          iVar2 = *piVar9;
          iVar18 = piVar9[1];
          iVar7 = iVar6;
          iVar17 = iVar2;
          local_40 = iVar18;
          local_28 = piVar9;
          if (0 < iVar6) {
            uVar19 = (pfVar4->buf).cap;
            pvVar13 = (void *)(pfVar4->buf).len;
            uVar10 = (int)pvVar13 + 2;
            puVar3 = (pfVar4->buf).array;
            if (uVar19 < uVar10) {
              ~r0_06.cap = in_stack_ffffffffffffff20;
              ~r0_06.array = in_stack_ffffffffffffff10._type;
              ~r0_06.len = (int)in_stack_ffffffffffffff10.data;
              local_60 = pvVar13;
              runtime_growslice(puVar3,uVar10,uVar19,2,(internal_abi_Type *)&DAT_00807920,~r0_06);
              pfVar4 = p;
              pvVar13 = local_60;
              iVar14 = (int)local_58;
              uVar19 = extraout_RCX_10;
              uVar10 = extraout_RBX_13;
              puVar3 = extraout_RAX_16;
            }
            *(undefined2 *)(puVar3 + (int)pvVar13) = 0x202c;
            (pfVar4->buf).len = uVar10;
            (pfVar4->buf).cap = uVar19;
            piVar9 = local_28;
            iVar18 = local_40;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier2();
              *extraout_R11_06 = puVar3;
              extraout_R11_06[1] = (extraout_RAX_17->buf).array;
              pfVar4 = extraout_RAX_17;
              iVar7 = extraout_RCX_11;
              iVar14 = extraout_RSI_00;
              iVar17 = extraout_R8_00;
              iVar18 = extraout_R9_00;
            }
            (pfVar4->buf).array = puVar3;
          }
          if (iVar17 == 0) {
            pvVar13 = (void *)(pfVar4->buf).len;
            uVar10 = (int)pvVar13 + 5;
            uVar19 = (pfVar4->buf).cap;
            puVar3 = (pfVar4->buf).array;
            if (uVar19 < uVar10) {
              ~r0_07.cap = in_stack_ffffffffffffff20;
              ~r0_07.array = in_stack_ffffffffffffff10._type;
              ~r0_07.len = (int)in_stack_ffffffffffffff10.data;
              local_60 = pvVar13;
              runtime_growslice(puVar3,uVar10,uVar19,5,(internal_abi_Type *)&DAT_00807920,~r0_07);
              pfVar4 = p;
              iVar7 = iVar6;
              piVar9 = local_28;
              pvVar13 = local_60;
              iVar14 = (int)local_58;
              uVar10 = extraout_RBX_14;
              uVar19 = extraout_RCX_12;
              puVar3 = extraout_RAX_18;
            }
            iVar6 = iVar7;
            *(undefined4 *)(puVar3 + (int)pvVar13) = 0x6c696e3c;
            (puVar3 + 4)[(int)pvVar13] = 0x3e;
            (pfVar4->buf).len = uVar10;
            (pfVar4->buf).cap = uVar19;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier2();
              *extraout_R11_07 = extraout_R10_00;
              extraout_R11_07[1] = (extraout_RAX_19->buf).array;
              pfVar4 = extraout_RAX_19;
              iVar6 = extraout_RCX_13;
              iVar14 = extraout_RSI_01;
              puVar3 = extraout_R10_00;
            }
            (pfVar4->buf).array = puVar3;
          }
          else {
            if (iVar17 == 0) {
              puVar16 = (undefined1 *)0x0;
              iVar14 = 0;
            }
            else {
              puVar16 = go_itab__reflect_rtype_reflect_Type;
              iVar14 = iVar17;
            }
            local_18 = iVar17;
            local_10 = iVar18;
            auVar21 = (**(code **)(puVar16 + 0xf8))(iVar14);
            sVar11 = auVar21._8_8_;
            pvVar12 = (void *)(p->buf).cap;
            local_60 = (void *)(p->buf).len;
            pvVar13 = (void *)((int)local_60 + sVar11);
            puVar3 = (p->buf).array;
            pvVar8 = auVar21._0_8_;
            if (pvVar12 < pvVar13) {
              ~r0_08.cap = in_stack_ffffffffffffff20;
              ~r0_08.array = in_stack_ffffffffffffff10._type;
              ~r0_08.len = (int)in_stack_ffffffffffffff10.data;
              local_50 = auVar21._0_8_;
              runtime_growslice(puVar3,(int)pvVar13,(int)pvVar12,sVar11,
                                (internal_abi_Type *)&DAT_00807920,~r0_08);
              pvVar8 = local_50;
              pvVar12 = extraout_RCX_14;
              pvVar13 = extraout_RBX_15;
              puVar3 = extraout_RAX_20;
            }
            puVar15 = puVar3 + (int)local_60;
            local_68 = pvVar13;
            local_60 = pvVar12;
            local_30 = puVar3;
            runtime_memmove(puVar15,pvVar8,sVar11);
            (p->buf).len = (int)local_68;
            (p->buf).cap = (int)local_60;
            pfVar4 = p;
            pvVar13 = local_60;
            pvVar12 = local_68;
            if (runtime_writeBarrier._0_4_ != 0) {
              runtime_gcWriteBarrier2();
              *extraout_R11_08 = local_30;
              extraout_R11_08[1] = (extraout_RAX_21->buf).array;
              pfVar4 = extraout_RAX_21;
              pvVar13 = extraout_RCX_15;
              pvVar12 = extraout_RBX_16;
            }
            (pfVar4->buf).array = local_30;
            pvVar12 = (void *)((int)pvVar12 + 1);
            puVar3 = local_30;
            if (pvVar13 < pvVar12) {
              ~r0_09.cap = in_stack_ffffffffffffff20;
              ~r0_09.array = in_stack_ffffffffffffff10._type;
              ~r0_09.len = (int)in_stack_ffffffffffffff10.data;
              runtime_growslice(local_30,(int)pvVar12,(int)pvVar13,1,
                                (internal_abi_Type *)&DAT_00807920,~r0_09);
              (p->buf).cap = extraout_RCX_16;
              puVar3 = extraout_RAX_22;
              pfVar4 = p;
              pvVar12 = extraout_RBX_17;
              if (runtime_writeBarrier._0_4_ != 0) {
                runtime_gcWriteBarrier2();
                *extraout_R11_09 = extraout_RAX_23;
                extraout_R11_09[1] = (pfVar4->buf).array;
                puVar3 = extraout_RAX_23;
                pvVar12 = extraout_RBX_18;
              }
              (pfVar4->buf).array = puVar3;
              pfVar4 = p;
            }
            (pfVar4->buf).len = (int)pvVar12;
            puVar3[(int)pvVar12 - 1] = 0x3d;
            fmt___pp__printArg(pfVar4,in_stack_ffffffffffffff10,(int32)iVar2);
            pfVar4 = p;
            piVar9 = local_28;
            iVar14 = (int)local_58;
          }
          piVar9 = piVar9 + 2;
        }
        uVar10 = (pfVar4->buf).cap;
        uVar19 = (pfVar4->buf).len + 1;
        puVar3 = (pfVar4->buf).array;
        if (uVar10 < uVar19) {
          ~r0_10.cap = in_stack_ffffffffffffff20;
          ~r0_10.array = in_stack_ffffffffffffff10._type;
          ~r0_10.len = (int)in_stack_ffffffffffffff10.data;
          runtime_growslice(puVar3,uVar19,uVar10,1,(internal_abi_Type *)&DAT_00807920,~r0_10);
          (p->buf).cap = extraout_RCX_17;
          puVar3 = extraout_RAX_24;
          pfVar4 = p;
          uVar19 = extraout_RBX_19;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_10 = extraout_RAX_25;
            extraout_R11_10[1] = (p->buf).array;
            puVar3 = extraout_RAX_25;
            pfVar4 = p;
            uVar19 = extraout_RBX_20;
          }
          (pfVar4->buf).array = puVar3;
        }
        (pfVar4->buf).len = uVar19;
        puVar3[uVar19 - 1] = 0x29;
      }
      return;
    }
    pfVar4->goodArgNum = true;
    for (pvVar12 = (void *)lasti; (int)pvVar12 < (int)in_RCX; pvVar12 = (void *)((int)pvVar12 + 1))
    {
      if (in_RCX <= pvVar12) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if (*(char *)(in_RBX + (int)pvVar12) == '%') break;
    }
    if (lasti < (int)pvVar12) {
      if (in_RCX < pvVar12) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceAlen();
      }
      if (pvVar12 < (uint)lasti) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      local_58 = (void *)((int)pvVar12 - lasti);
      oldCap = (void *)(pfVar4->buf).cap;
      local_60 = (void *)(pfVar4->buf).len;
      pvVar8 = (void *)((int)local_58 + (int)local_60);
      __src = (void *)((-(int)local_58 >> 0x3f & lasti) + in_RBX);
      puVar3 = (pfVar4->buf).array;
      if (oldCap < pvVar8) {
        ~r0.cap = in_stack_ffffffffffffff20;
        ~r0.array = in_stack_ffffffffffffff10._type;
        ~r0.len = (int)in_stack_ffffffffffffff10.data;
        local_48 = __src;
        runtime_growslice(puVar3,(int)pvVar8,(int)oldCap,(int)local_58,
                          (internal_abi_Type *)&DAT_00807920,~r0);
        __src = local_48;
        puVar3 = extraout_RAX;
        oldCap = extraout_RCX;
        pvVar8 = extraout_RBX;
      }
      puVar15 = puVar3 + (int)local_60;
      local_60 = pvVar8;
      sVar11 = (size_t)local_58;
      local_58 = oldCap;
      local_38 = puVar3;
      runtime_memmove(puVar15,__src,sVar11);
      (p->buf).len = (int)local_60;
      (p->buf).cap = (int)local_58;
      pfVar4 = p;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = local_38;
        extraout_R11[1] = (extraout_RAX_00->buf).array;
        pfVar4 = extraout_RAX_00;
      }
      (pfVar4->buf).array = local_38;
    }
    if ((int)in_RCX <= (int)pvVar12) goto LAB_004f2e25;
    (pfVar4->fmt).fmtFlags.widPresent = false;
    (pfVar4->fmt).fmtFlags.precPresent = false;
    (pfVar4->fmt).fmtFlags.minus = false;
    (pfVar4->fmt).fmtFlags.plus = false;
    (pfVar4->fmt).fmtFlags.sharp = false;
    (pfVar4->fmt).fmtFlags.space = false;
    (pfVar4->fmt).fmtFlags.zero = false;
    (pfVar4->fmt).fmtFlags.plusV = false;
    (pfVar4->fmt).fmtFlags.precPresent = false;
    (pfVar4->fmt).fmtFlags.minus = false;
    (pfVar4->fmt).fmtFlags.plus = false;
    (pfVar4->fmt).fmtFlags.sharp = false;
    (pfVar4->fmt).fmtFlags.space = false;
    (pfVar4->fmt).fmtFlags.zero = false;
    (pfVar4->fmt).fmtFlags.plusV = false;
    (pfVar4->fmt).fmtFlags.sharpV = false;
    while (pvVar8 = (void *)((int)pvVar12 + 1), (int)pvVar8 < (int)in_RCX) {
      if (in_RCX <= pvVar8) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      bVar1 = *(byte *)(in_RBX + (int)pvVar8);
      if (bVar1 < 0x24) {
        if (bVar1 == 0x20) {
          (pfVar4->fmt).fmtFlags.space = true;
          pvVar12 = pvVar8;
        }
        else {
          if (bVar1 != 0x23) {
LAB_004f2613:
            if (((byte)(bVar1 + 0x9f) < 0x1a) && ((int)pvVar13 < (int)in_RSI)) {
              if (bVar1 == 0x76) {
LAB_004f273c:
                (pfVar4->fmt).fmtFlags.sharpV = (pfVar4->fmt).fmtFlags.sharp;
                (pfVar4->fmt).fmtFlags.sharp = false;
                (pfVar4->fmt).fmtFlags.plusV = (pfVar4->fmt).fmtFlags.plus;
                (pfVar4->fmt).fmtFlags.plus = false;
              }
              else if (bVar1 == 0x77) {
                uVar10 = (pfVar4->wrappedErrs).cap;
                uVar19 = (pfVar4->wrappedErrs).len + 1;
                piVar9 = (pfVar4->wrappedErrs).array;
                if (uVar10 < uVar19) {
                  ~r0_00.cap = in_stack_ffffffffffffff20;
                  ~r0_00.array = in_stack_ffffffffffffff10._type;
                  ~r0_00.len = (int)in_stack_ffffffffffffff10.data;
                  runtime_growslice(piVar9,uVar19,uVar10,1,(internal_abi_Type *)&DAT_00807760,~r0_00
                                   );
                  (p->wrappedErrs).cap = extraout_RCX_00;
                  piVar9 = extraout_RAX_01;
                  pfVar4 = p;
                  uVar19 = extraout_RBX_00;
                  if (runtime_writeBarrier._0_4_ != 0) {
                    runtime_gcWriteBarrier2();
                    *extraout_R11_00 = extraout_RAX_02;
                    extraout_R11_00[1] = (pfVar4->wrappedErrs).array;
                    piVar9 = extraout_RAX_02;
                    uVar19 = extraout_RBX_01;
                  }
                  (pfVar4->wrappedErrs).array = piVar9;
                  pfVar4 = p;
                }
                (pfVar4->wrappedErrs).len = uVar19;
                piVar9[uVar19 - 1] = (int)pvVar13;
                goto LAB_004f273c;
              }
              if (in_RSI <= pvVar13) {
                    // WARNING: Subroutine does not return
                runtime_panicIndex();
              }
              fmt___pp__printArg(pfVar4,in_stack_ffffffffffffff10,
                                 (int32)*(undefined8 *)(local_20 + (int)pvVar13 * 0x10));
              lasti = (int)pvVar12 + 2;
              pfVar4 = p;
              pvVar13 = (void *)((int)pvVar13 + 1);
              goto LAB_004f2469;
            }
            break;
          }
          (pfVar4->fmt).fmtFlags.sharp = true;
          pvVar12 = pvVar8;
        }
      }
      else if (bVar1 == 0x2b) {
        (pfVar4->fmt).fmtFlags.plus = true;
        pvVar12 = pvVar8;
      }
      else if (bVar1 == 0x2d) {
        (pfVar4->fmt).fmtFlags.minus = true;
        (pfVar4->fmt).fmtFlags.zero = false;
        pvVar12 = pvVar8;
      }
      else {
        if (bVar1 != 0x30) goto LAB_004f2613;
        (pfVar4->fmt).fmtFlags.zero = (bool)((pfVar4->fmt).fmtFlags.minus ^ 1);
        pvVar12 = pvVar8;
      }
    }
    fmt___pp__argNumber(pfVar4,(int)pvVar13,(string)in_stack_ffffffffffffff10,in_RBX,(int)in_RCX,
                        (int)pvVar8,(int)in_RSI,SUB81(pvVar13,0));
    if ((int)extraout_RBX_02 < (int)in_RCX) {
      if (in_RCX <= extraout_RBX_02) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if (*(char *)(in_RBX + (int)extraout_RBX_02) != '*') goto LAB_004f2911;
      a_00.cap = in_stack_ffffffffffffff20;
      a_00.array = (interface___ *)in_stack_ffffffffffffff10._type;
      a_00.len = (int)in_stack_ffffffffffffff10.data;
      local_68 = extraout_RBX_02;
      fmt_intFromArg(a_00,local_20,(int)in_RSI,SUB81(iStack0000000000000030,0),(int)newArgNum);
      (p->fmt).wid = extraout_RAX_03;
      (p->fmt).fmtFlags.widPresent = extraout_BL;
      local_70 = extraout_RCX_01;
      pfVar4 = p;
      if (extraout_BL == false) {
        pvVar13 = (void *)(p->buf).len;
        uVar10 = (int)pvVar13 + 0xc;
        uVar19 = (p->buf).cap;
        puVar3 = (p->buf).array;
        if (uVar19 < uVar10) {
          ~r0_01.cap = in_stack_ffffffffffffff20;
          ~r0_01.array = in_stack_ffffffffffffff10._type;
          ~r0_01.len = (int)in_stack_ffffffffffffff10.data;
          local_58 = pvVar13;
          runtime_growslice(puVar3,uVar10,uVar19,0xc,(internal_abi_Type *)&DAT_00807920,~r0_01);
          puVar3 = extraout_RAX_04;
          pvVar13 = local_58;
          uVar10 = extraout_RBX_03;
          uVar19 = extraout_RCX_02;
        }
        *(undefined8 *)(puVar3 + (int)pvVar13) = 0x4957444142282125;
        *(undefined4 *)(puVar3 + 8 + (int)pvVar13) = 0x29485444;
        (p->buf).len = uVar10;
        (p->buf).cap = uVar19;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_01 = extraout_RAX_05;
          extraout_R11_01[1] = (pfVar4->buf).array;
          puVar3 = extraout_RAX_05;
          local_70 = extraout_RCX_03;
        }
        (pfVar4->buf).array = puVar3;
      }
      iVar6 = (pfVar4->fmt).wid;
      if (iVar6 < 0) {
        (pfVar4->fmt).wid = -iVar6;
        (pfVar4->fmt).fmtFlags.minus = true;
        (pfVar4->fmt).fmtFlags.zero = false;
      }
      pvVar13 = (void *)((int)local_68 + 1);
      cVar5 = '\0';
    }
    else {
LAB_004f2911:
      if ((int)extraout_RBX_02 < (int)in_RCX) {
        bVar20 = false;
        iVar6 = 0;
        for (pvVar13 = extraout_RBX_02; (int)pvVar13 < (int)in_RCX;
            pvVar13 = (void *)((int)pvVar13 + 1)) {
          if (in_RCX <= pvVar13) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          bVar1 = *(byte *)(in_RBX + (int)pvVar13);
          if ((bVar1 < 0x30) || (0x39 < bVar1)) break;
          if (2000000 < iVar6 + 1000000U) {
            bVar20 = false;
            iVar6 = 0;
            pvVar13 = in_RCX;
            break;
          }
          iVar6 = (uint)(bVar1 - 0x30 & 0xff) + iVar6 * 10;
          bVar20 = true;
        }
      }
      else {
        bVar20 = false;
        iVar6 = 0;
        pvVar13 = in_RCX;
      }
      (p->fmt).wid = iVar6;
      (p->fmt).fmtFlags.widPresent = bVar20;
      local_70 = newArgNum;
      pfVar4 = p;
      cVar5 = extraout_CL;
      if ((extraout_CL != '\0') && (bVar20 != false)) {
        p->goodArgNum = false;
      }
    }
    if ((int)((int)pvVar13 + 1U) < (int)in_RCX) {
      if (in_RCX <= pvVar13) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if (*(char *)(in_RBX + (int)pvVar13) == '.') {
        if (cVar5 != '\0') {
          pfVar4->goodArgNum = false;
        }
        fmt___pp__argNumber(pfVar4,(int)local_70,(string)in_stack_ffffffffffffff10,in_RBX,
                            (int)in_RCX,(int)pvVar13 + 1U,(int)in_RSI,SUB81(in_RBX,0));
        if ((int)extraout_RBX_04 < (int)in_RCX) {
          if (in_RCX <= extraout_RBX_04) {
                    // WARNING: Subroutine does not return
            runtime_panicIndex();
          }
          if (*(char *)(in_RBX + (int)extraout_RBX_04) == '*') {
            a_01.cap = in_stack_ffffffffffffff20;
            a_01.array = (interface___ *)in_stack_ffffffffffffff10._type;
            a_01.len = (int)in_stack_ffffffffffffff10.data;
            fmt_intFromArg(a_01,local_20,(int)in_RSI,SUB81(iStack0000000000000030,0),
                           (int)newArgNum_00);
            (p->fmt).prec = extraout_RAX_06;
            (p->fmt).fmtFlags.precPresent = extraout_BL_00;
            if ((p->fmt).prec < 0) {
              (p->fmt).prec = 0;
              (p->fmt).fmtFlags.precPresent = false;
            }
            local_70 = extraout_RCX_04;
            pfVar4 = p;
            if ((p->fmt).fmtFlags.precPresent == false) {
              pvVar13 = (void *)(p->buf).len;
              uVar10 = (int)pvVar13 + 0xb;
              uVar19 = (p->buf).cap;
              puVar3 = (p->buf).array;
              if (uVar19 < uVar10) {
                ~r0_02.cap = in_stack_ffffffffffffff20;
                ~r0_02.array = in_stack_ffffffffffffff10._type;
                ~r0_02.len = (int)in_stack_ffffffffffffff10.data;
                local_58 = pvVar13;
                runtime_growslice(puVar3,uVar10,uVar19,0xb,(internal_abi_Type *)&DAT_00807920,~r0_02
                                 );
                puVar3 = extraout_RAX_07;
                pvVar13 = local_58;
                uVar10 = extraout_RBX_05;
                uVar19 = extraout_RCX_05;
              }
              *(undefined8 *)(puVar3 + (int)pvVar13) = 0x5250444142282125;
              *(undefined8 *)(puVar3 + 3 + (int)pvVar13) = 0x2943455250444142;
              (p->buf).len = uVar10;
              (p->buf).cap = uVar19;
              if (runtime_writeBarrier._0_4_ != 0) {
                runtime_gcWriteBarrier2();
                *extraout_R11_02 = extraout_RAX_08;
                extraout_R11_02[1] = (pfVar4->buf).array;
                puVar3 = extraout_RAX_08;
                local_70 = extraout_RCX_06;
              }
              (pfVar4->buf).array = puVar3;
            }
            pvVar13 = (void *)((int)extraout_RBX_04 + 1);
            cVar5 = '\0';
            goto LAB_004f2af8;
          }
        }
        if ((int)extraout_RBX_04 < (int)in_RCX) {
          bVar20 = false;
          iVar6 = 0;
          for (pvVar13 = extraout_RBX_04; (int)pvVar13 < (int)in_RCX;
              pvVar13 = (void *)((int)pvVar13 + 1)) {
            if (in_RCX <= pvVar13) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            bVar1 = *(byte *)(in_RBX + (int)pvVar13);
            if ((bVar1 < 0x30) || (0x39 < bVar1)) break;
            if (2000000 < iVar6 + 1000000U) {
              bVar20 = false;
              iVar6 = 0;
              pvVar13 = in_RCX;
              break;
            }
            iVar6 = (uint)(bVar1 - 0x30 & 0xff) + iVar6 * 10;
            bVar20 = true;
          }
        }
        else {
          bVar20 = false;
          iVar6 = 0;
          pvVar13 = in_RCX;
        }
        (p->fmt).prec = iVar6;
        (p->fmt).fmtFlags.precPresent = bVar20;
        local_70 = newArgNum_00;
        pfVar4 = p;
        cVar5 = extraout_CL_00;
        if (bVar20 == false) {
          (p->fmt).prec = 0;
          (p->fmt).fmtFlags.precPresent = true;
        }
      }
    }
LAB_004f2af8:
    if (cVar5 == '\0') {
      fmt___pp__argNumber(pfVar4,(int)local_70,(string)in_stack_ffffffffffffff10,in_RBX,(int)in_RCX,
                          (int)pvVar13,(int)in_RSI,SUB81(in_RBX,0));
      local_70 = extraout_RAX_09;
      pvVar13 = extraout_RBX_06;
      pfVar4 = p;
    }
    local_58 = local_70;
    if ((int)in_RCX <= (int)pvVar13) {
      pvVar13 = (void *)(pfVar4->buf).len;
      uVar10 = (int)pvVar13 + 10;
      uVar19 = (pfVar4->buf).cap;
      puVar3 = (pfVar4->buf).array;
      if (uVar19 < uVar10) {
        ~r0_11.cap = in_stack_ffffffffffffff20;
        ~r0_11.array = in_stack_ffffffffffffff10._type;
        ~r0_11.len = (int)in_stack_ffffffffffffff10.data;
        local_60 = pvVar13;
        runtime_growslice(puVar3,uVar10,uVar19,10,(internal_abi_Type *)&DAT_00807920,~r0_11);
        uVar19 = extraout_RCX_18;
        uVar10 = extraout_RBX_21;
        pvVar13 = local_60;
        puVar3 = extraout_RAX_26;
        pfVar4 = p;
      }
      *(undefined8 *)(puVar3 + (int)pvVar13) = 0x5245564f4e282125;
      *(undefined2 *)(puVar3 + 8 + (int)pvVar13) = 0x2942;
      (pfVar4->buf).len = uVar10;
      (pfVar4->buf).cap = uVar19;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_11 = extraout_R8_01;
        extraout_R11_11[1] = (extraout_R10_01->buf).array;
        puVar3 = extraout_R8_01;
        pfVar4 = extraout_R10_01;
      }
      (pfVar4->buf).array = puVar3;
      pvVar13 = local_58;
      goto LAB_004f2e25;
    }
    if (in_RCX <= pvVar13) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    verb_00 = (dword)*(byte *)(in_RBX + (int)pvVar13);
    if (*(byte *)(in_RBX + (int)pvVar13) < 0x80) {
      iVar6 = 1;
    }
    else {
      unicode_utf8_DecodeRuneInString
                ((string)in_stack_ffffffffffffff10,
                 (sdword)in_RBX + ((dword)(-((int)in_RCX - (int)pvVar13) >> 0x3f) & (dword)pvVar13),
                 (int)in_RCX - (int)pvVar13);
      iVar6 = extraout_RBX_07;
      pfVar4 = p;
      verb_00 = extraout_EAX;
    }
    lasti = iVar6 + (int)pvVar13;
    if (verb_00 == 0x25) {
      uVar10 = (pfVar4->buf).cap;
      uVar19 = (pfVar4->buf).len + 1;
      puVar3 = (pfVar4->buf).array;
      if (uVar10 < uVar19) {
        ~r0_03.cap = in_stack_ffffffffffffff20;
        ~r0_03.array = in_stack_ffffffffffffff10._type;
        ~r0_03.len = (int)in_stack_ffffffffffffff10.data;
        runtime_growslice(puVar3,uVar19,uVar10,1,(internal_abi_Type *)&DAT_00807920,~r0_03);
        (p->buf).cap = extraout_RCX_07;
        puVar3 = extraout_RAX_10;
        pfVar4 = p;
        uVar19 = extraout_RBX_08;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_03 = extraout_RAX_11;
          extraout_R11_03[1] = (pfVar4->buf).array;
          puVar3 = extraout_RAX_11;
          uVar19 = extraout_RBX_09;
        }
        (pfVar4->buf).array = puVar3;
      }
      (pfVar4->buf).len = uVar19;
      puVar3[uVar19 - 1] = 0x25;
      pvVar13 = local_58;
    }
    else if (pfVar4->goodArgNum == false) {
      fmt___pp__badArgNum(pfVar4,verb_00);
      pfVar4 = p;
      pvVar13 = local_58;
    }
    else if ((int)local_58 < (int)in_RSI) {
      if (verb_00 == 0x77) {
        uVar10 = (pfVar4->wrappedErrs).cap;
        uVar19 = (pfVar4->wrappedErrs).len + 1;
        piVar9 = (pfVar4->wrappedErrs).array;
        if (uVar10 < uVar19) {
          ~r0_04.cap = in_stack_ffffffffffffff20;
          ~r0_04.array = in_stack_ffffffffffffff10._type;
          ~r0_04.len = (int)in_stack_ffffffffffffff10.data;
          runtime_growslice(piVar9,uVar19,uVar10,1,(internal_abi_Type *)&DAT_00807760,~r0_04);
          (p->wrappedErrs).cap = extraout_RCX_08;
          piVar9 = extraout_RAX_12;
          pfVar4 = p;
          uVar19 = extraout_RBX_10;
          if (runtime_writeBarrier._0_4_ != 0) {
            runtime_gcWriteBarrier2();
            *extraout_R11_04 = extraout_RAX_13;
            extraout_R11_04[1] = (pfVar4->wrappedErrs).array;
            piVar9 = extraout_RAX_13;
            uVar19 = extraout_RBX_11;
          }
          (pfVar4->wrappedErrs).array = piVar9;
