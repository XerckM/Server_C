  }
  iVar4 = *(int *)(in_RDX + 8);
  s_00 = *(text_template_state **)(in_RDX + 0x10);
  uVar1 = *(undefined8 *)(in_RDX + 0x18);
  uVar3 = uVar1;
  s_01 = s_00;
  if (*(int *)(*(int *)(iVar4 + 0x20) + 0x30) != 0) {
    iVar5 = *(int *)(iVar4 + 0x20);
    if (*(char *)(iVar5 + 0x20) == '\0') {
      uVar2 = (s_00->vars).len;
      if (uVar2 <= uVar2 - 1) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      iVar5 = uVar2 * 5;
      ptVar6 = (s_00->vars).array;
      ptVar6[uVar2 - 1].value.flag = in_R8;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier4();
        *extraout_R11 = extraout_RDI;
        extraout_R11[1] = *(undefined8 *)((int)ptVar6 + extraout_R10 * 8 + -0x18);
        extraout_R11[2] = extraout_RSI;
        extraout_R11[3] = *(undefined8 *)((int)ptVar6 + extraout_R10 * 8 + -0x10);
        in_RAX = extraout_RAX;
        in_RCX = extraout_RCX;
        in_RBX = extraout_RBX;
        in_RSI = extraout_RSI;
        in_RDI = extraout_RDI;
        iVar4 = extraout_R9;
        iVar5 = extraout_R10;
      }
      *(undefined8 *)((int)ptVar6 + iVar5 * 8 + -0x18) = in_RDI;
      *(undefined8 *)((int)ptVar6 + iVar5 * 8 + -0x10) = in_RSI;
    }
    else if (*(int *)(iVar5 + 0x30) < 2) {
      if (*(int *)(iVar5 + 0x30) == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      if (*(int *)(**(int **)(iVar5 + 0x28) + 0x20) == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      value_00.ptr = in_stack_ffffffffffffff68.tab;
      value_00.flag = (reflect_flag)in_stack_ffffffffffffff68.data;
      value_00.typ_ = in_stack_ffffffffffffff60;
      text_template___state__setVar(s_00,in_stack_ffffffffffffff50,value_00);
    }
    else {
      if (*(int *)(**(int **)(iVar5 + 0x28) + 0x20) == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      value.ptr = in_stack_ffffffffffffff68.tab;
      value.flag = (reflect_flag)in_stack_ffffffffffffff68.data;
      value.typ_ = in_stack_ffffffffffffff60;
      text_template___state__setVar(s_00,in_stack_ffffffffffffff50,value);
    }
  }
  iVar4 = *(int *)(iVar4 + 0x20);
  if (1 < *(int *)(iVar4 + 0x30)) {
    if (*(char *)(iVar4 + 0x20) == '\0') {
      uVar2 = (s_01->vars).len;
      if (uVar2 <= uVar2 - 2) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      iVar4 = uVar2 * 5;
      ptVar6 = (s_01->vars).array;
      ptVar6[uVar2 - 2].value.flag = in_RCX;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier4();
        *extraout_R11_00 = extraout_RAX_00;
        extraout_R11_00[1] = *(undefined8 *)((int)ptVar6 + extraout_R10_00 * 8 + -0x40);
        extraout_R11_00[2] = extraout_RBX_00;
        extraout_R11_00[3] = *(undefined8 *)((int)ptVar6 + extraout_R10_00 * 8 + -0x38);
        in_RAX = extraout_RAX_00;
        in_RBX = extraout_RBX_00;
        iVar4 = extraout_R10_00;
        s_01 = extraout_RCX_00;
      }
      *(undefined8 *)((int)ptVar6 + iVar4 * 8 + -0x40) = in_RAX;
      *(undefined8 *)((int)ptVar6 + iVar4 * 8 + -0x38) = in_RBX;
    }
    else {
      if (*(int *)(*(int *)(*(int *)(iVar4 + 0x28) + 8) + 0x20) == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      value_01.ptr = in_stack_ffffffffffffff68.tab;
      value_01.flag = (reflect_flag)in_stack_ffffffffffffff68.data;
      value_01.typ_ = in_stack_ffffffffffffff60;
      text_template___state__setVar(s_01,in_stack_ffffffffffffff50,value_01);
      uVar3 = uVar1;
      s_01 = s_00;
    }
  }
  local_30._8_8_ = s_01;
  local_30._0_8_ = text_template___state__walkRange_func2_2;
  ppcStack_10 = (code **)local_30;
  local_18 = &PTR_text_template___state__walkRange_func2_1_008eccf8;
  dot.flag = (reflect_flag)in_stack_ffffffffffffff60;
  dot.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff50.str;
  dot.ptr = (void *)in_stack_ffffffffffffff50.len;
  local_20 = uVar3;
  text_template___state__walk(s_01,dot,in_stack_ffffffffffffff68);
  text_template___state__walkRange_func2_1();
  (**ppcStack_10)();
  return;
}



// WARNING: Unknown calling convention

void text_template___state__walkRange_func2_2(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_18 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_18;
  }
  text_template___state__pop(*(text_template_state **)(in_RDX + 8),*(int *)(in_RDX + 0x10));
  return;
}



// WARNING: Unknown calling convention

void text_template___state__walkRange_func3(void)

{
  int *piVar1;
  int in_RDX;
  int unaff_R14;
  undefined auStack_18 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack();
  }
  piVar1 = *(int **)(unaff_R14 + 0x20);
  if ((piVar1 != (int *)0x0) && ((undefined *)*piVar1 == &stack0x00000008)) {
    *piVar1 = (int)auStack_18;
  }
  text_template___state__pop(*(text_template_state **)(in_RDX + 8),*(int *)(in_RDX + 0x10));
  return;
}



void text_template___state__walkTemplate
               (text_template_state *s,reflect_Value dot,text_template_parse_TemplateNode *t)

{
  reflect_Value dot_00;
  reflect_Value dot_01;
  __interface___ args;
  __interface___ args_00;
  reflect_Value value;
  text_template_state *extraout_RAX;
  int extraout_RAX_00;
  text_template_Template *tmpl;
  undefined8 extraout_RAX_01;
  undefined8 *extraout_RAX_02;
  undefined8 *extraout_RAX_03;
  undefined8 *puVar1;
  undefined8 extraout_RCX;
  void *extraout_RBX;
  void *extraout_RBX_00;
  void *x;
  void *~r0;
  void *in_RSI;
  void *extraout_RSI;
  void **extraout_R11;
  undefined8 *extraout_R11_00;
  int unaff_R14;
  string in_stack_ffffffffffffff50;
  interface___ *in_stack_ffffffffffffff60;
  text_template_parse_Node in_stack_ffffffffffffff68;
  reflect_flag in_stack_ffffffffffffff78;
  text_template_state newState;
  
  while (&newState.node.data <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  (s->node).tab = (runtime_itab *)go_itab__text_template_parse_TemplateNode_text_template_parse_Node
  ;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RSI;
    extraout_R11[1] = (extraout_RAX->node).data;
    s = extraout_RAX;
    in_RSI = extraout_RSI;
  }
  (s->node).data = in_RSI;
  text_template___Template__Lookup
            (s->tmpl,in_stack_ffffffffffffff50,*(text_template_Template **)((int)in_RSI + 0x20),
             *(text_template_Template **)((int)in_RSI + 0x28));
  x = extraout_RBX;
  if (extraout_RAX_00 == 0) {
    runtime_convTstring(in_stack_ffffffffffffff50,*(void **)((int)in_RSI + 0x20));
    args.len = (int)in_stack_ffffffffffffff68.tab;
    args.cap = (int)in_stack_ffffffffffffff68.data;
    args.array = in_stack_ffffffffffffff60;
    text_template___state__errorf(s,in_stack_ffffffffffffff50,args);
    x = extraout_RBX_00;
  }
  if (text_template_maxExecDepth == s->depth) {
    runtime_convT64(text_template_maxExecDepth,x);
    args_00.len = (int)in_stack_ffffffffffffff68.tab;
    args_00.cap = (int)in_stack_ffffffffffffff68.data;
    args_00.array = in_stack_ffffffffffffff60;
    text_template___state__errorf(s,in_stack_ffffffffffffff50,args_00);
  }
  dot_00.flag = (reflect_flag)in_stack_ffffffffffffff60;
  dot_00.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff50.str;
  dot_00.ptr = (void *)in_stack_ffffffffffffff50.len;
  value.flag = in_stack_ffffffffffffff78;
  value.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff68.tab;
  value.ptr = in_stack_ffffffffffffff68.data;
  text_template___state__evalPipeline(s,dot_00,(text_template_parse_PipeNode *)t,value);
  newState.wr.tab._0_4_ = *(undefined4 *)&(s->wr).tab;
  newState.wr.tab._4_4_ = *(undefined4 *)((int)&(s->wr).tab + 4);
  newState.wr.data._0_4_ = *(undefined4 *)&(s->wr).data;
  newState.wr.data._4_4_ = *(undefined4 *)((int)&(s->wr).data + 4);
  newState.node.tab._0_4_ = *(undefined4 *)&(s->node).tab;
  newState.node.tab._4_4_ = *(undefined4 *)((int)&(s->node).tab + 4);
  newState.node.data._0_4_ = *(undefined4 *)&(s->node).data;
  newState.node.data._4_4_ = *(undefined4 *)((int)&(s->node).data + 4);
  newState.vars.array = (s->vars).array;
  newState.vars.len = (s->vars).len;
  newState.vars.cap = (s->vars).cap;
  newState.depth = s->depth + 1;
  runtime_newobject((internal_abi_Type *)&DAT_0081d560,~r0);
  extraout_RAX_02[1] = 1;
  *extraout_RAX_02 = &DAT_0095ab00;
  extraout_RAX_02[4] = extraout_RCX;
  puVar1 = extraout_RAX_02;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = extraout_RAX_01;
    extraout_R11_00[1] = ~r0;
    puVar1 = extraout_RAX_03;
  }
  puVar1[2] = extraout_RAX_01;
  puVar1[3] = ~r0;
  newState.vars.len = 1;
  newState.vars.cap = 1;
  dot_01.flag = (reflect_flag)in_stack_ffffffffffffff60;
  dot_01.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff50.str;
  dot_01.ptr = (void *)in_stack_ffffffffffffff50.len;
  text_template___state__walk(&newState,dot_01,in_stack_ffffffffffffff68);
  return;
}



void text_template___state__evalPipeline
               (text_template_state *s,reflect_Value dot,text_template_parse_PipeNode *pipe,
               reflect_Value value)

{
  int iVar1;
  uint8 *puVar2;
  uint oldCap;
  reflect_Value dot_00;
  reflect_Value v;
  reflect_Value v_00;
  runtime_slice ~r0;
  reflect_Value value_00;
  reflect_Value final;
  reflect_Value ~r0_00;
  text_template_state *extraout_RAX;
  internal_abi_Type *extraout_RAX_00;
  undefined1 *extraout_RAX_01;
  int iVar3;
  internal_abi_Type *extraout_RAX_02;
  text_template_variable *extraout_RAX_03;
  text_template_variable *extraout_RAX_04;
  text_template_variable *oldPtr;
  reflect_flag rVar4;
  reflect_flag extraout_RCX;
  int extraout_RCX_00;
  internal_abi_Type *piVar5;
  undefined1 *puVar6;
  internal_abi_Type *t;
  text_template_state *ptVar7;
  text_template_parse_PipeNode *extraout_RBX;
  void *extraout_RBX_00;
  void *extraout_RBX_01;
  uint newLen;
  uint extraout_RBX_02;
  uint extraout_RBX_03;
  void *in_RSI;
  void *extraout_RSI;
  text_template_parse_CommandNode *cmd;
  int iVar8;
  int iVar9;
  void **extraout_R11;
  void *pvVar10;
  reflect_flag f;
  text_template_variable **extraout_R11_00;
  text_template_parse_VariableNode *variable;
  int unaff_R14;
  bool bVar11;
  string in_stack_ffffffffffffff08;
  internal_abi_Type *in_stack_ffffffffffffff18;
  interface___ in_stack_ffffffffffffff20;
  reflect_flag in_stack_ffffffffffffff30;
  undefined in_stack_ffffffffffffff38 [16];
  reflect_flag in_stack_ffffffffffffff48;
  reflect_flag rVar12;
  text_template_variable *local_78;
  int local_70;
  internal_abi_Type *local_68;
  void *local_60;
  undefined8 local_58;
  text_template_parse_PipeNode *local_50;
  uint8 *local_30;
  undefined4 uStack_28;
  undefined4 uStack_24;
  undefined4 local_20;
  undefined4 uStack_1c;
  undefined local_18 [8];
  undefined8 uStack_10;
  
  while (&local_78 <= *(text_template_variable ***)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RSI == (void *)0x0) {
    return;
  }
  (s->node).tab = (runtime_itab *)go_itab__text_template_parse_PipeNode_text_template_parse_Node;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RSI;
    extraout_R11[1] = (extraout_RAX->node).data;
    s = extraout_RAX;
    pipe = extraout_RBX;
    in_RSI = extraout_RSI;
  }
  (s->node).data = in_RSI;
  local_58 = *(undefined8 *)((int)in_RSI + 0x40);
  iVar9 = *(int *)((int)in_RSI + 0x48);
  piVar5 = text_template_missingVal.typ_;
  pvVar10 = text_template_missingVal.ptr;
  rVar4 = text_template_missingVal.flag;
  local_50 = pipe;
  for (iVar8 = 0; iVar8 < iVar9; iVar8 = iVar8 + 1) {
    dot_00.flag = (reflect_flag)in_stack_ffffffffffffff18;
    dot_00.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff08.str;
    dot_00.ptr = (void *)in_stack_ffffffffffffff08.len;
    final.flag = in_stack_ffffffffffffff30;
    final.typ_ = in_stack_ffffffffffffff20._type;
    final.ptr = in_stack_ffffffffffffff20.data;
    ~r0_00.flag = in_stack_ffffffffffffff48;
    ~r0_00.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff38._0_8_;
    ~r0_00.ptr = (void *)in_stack_ffffffffffffff38._8_8_;
    text_template___state__evalCommand
              (s,dot_00,(text_template_parse_CommandNode *)local_50,final,~r0_00);
    local_68 = extraout_RAX_00;
    local_60 = extraout_RBX_00;
    if (((dword)extraout_RCX & 0x1f) == 0x14) {
      if (((dword)extraout_RCX >> 9 & 1) == 0) {
        puVar6 = go_itab__reflect_rtype_reflect_Type;
      }
      else {
        v.flag = (reflect_flag)in_stack_ffffffffffffff18;
        v.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff08.str;
        v.ptr = (void *)in_stack_ffffffffffffff08.len;
        reflect_Value_typeSlow(v,(reflect_Type)in_stack_ffffffffffffff20);
        puVar6 = extraout_RAX_01;
      }
      iVar3 = (**(code **)(puVar6 + 0xd0))();
      bVar11 = iVar3 == 0;
    }
    else {
      bVar11 = false;
    }
    rVar4 = extraout_RCX;
    if (bVar11) {
      v_00.flag = (reflect_flag)in_stack_ffffffffffffff18;
      v_00.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff08.str;
      v_00.ptr = (void *)in_stack_ffffffffffffff08.len;
      reflect_valueInterface(v_00,SUB81(local_68,0),in_stack_ffffffffffffff20);
      if (extraout_RAX_02 == (internal_abi_Type *)0x0) {
        local_68 = (internal_abi_Type *)0x0;
        local_60 = (void *)0x0;
        rVar4 = 0;
      }
      else if (extraout_RAX_02 == (internal_abi_Type *)0x0) {
        local_68 = (internal_abi_Type *)0x0;
        local_60 = (void *)0x0;
        rVar4 = 0;
      }
      else {
        rVar4 = (reflect_flag)(extraout_RAX_02->Kind_ & 0x1f);
        local_68 = extraout_RAX_02;
        local_60 = extraout_RBX_01;
        if ((extraout_RAX_02->Kind_ & 0x20) == 0) {
          rVar4 = rVar4 | 0x80;
        }
      }
    }
    piVar5 = local_68;
    pvVar10 = local_60;
  }
  iVar9 = *(int *)((int)in_RSI + 0x28);
  iVar8 = *(int *)((int)in_RSI + 0x30);
  iVar3 = 0;
  rVar12 = rVar4;
  local_70 = iVar9;
  do {
    if (iVar8 <= iVar3) {
      return;
    }
    iVar1 = *(int *)(iVar9 + iVar3 * 8);
    if (*(char *)((int)in_RSI + 0x20) == '\0') {
      if (*(int *)(iVar1 + 0x20) == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      local_30 = **(uint8 ***)(iVar1 + 0x18);
      puVar2 = (*(uint8 ***)(iVar1 + 0x18))[1];
      uStack_28 = SUB84(puVar2,0);
      uStack_24 = (undefined4)((uint)puVar2 >> 0x20);
      local_20 = SUB84(piVar5,0);
      uStack_1c = (undefined4)((uint)piVar5 >> 0x20);
      uStack_10 = rVar4;
      local_18 = (undefined  [8])pvVar10;
      oldCap = (s->vars).cap;
      newLen = (s->vars).len + 1;
      oldPtr = (s->vars).array;
      if (oldCap < newLen) {
        ~r0.cap = (int)in_stack_ffffffffffffff18;
        ~r0.array = in_stack_ffffffffffffff08.str;
        ~r0.len = in_stack_ffffffffffffff08.len;
        runtime_growslice(oldPtr,newLen,oldCap,1,(internal_abi_Type *)&DAT_00855ec0,~r0);
        (s->vars).cap = extraout_RCX_00;
        oldPtr = extraout_RAX_03;
        ptVar7 = s;
        newLen = extraout_RBX_02;
        rVar4 = rVar12;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_00 = extraout_RAX_04;
          extraout_R11_00[1] = (ptVar7->vars).array;
          oldPtr = extraout_RAX_04;
          newLen = extraout_RBX_03;
          rVar4 = rVar12;
        }
        (ptVar7->vars).array = oldPtr;
        iVar9 = local_70;
        rVar12 = rVar4;
      }
      (s->vars).len = newLen;
      if (runtime_writeBarrier._0_4_ != 0) {
        rVar4 = rVar12;
        local_78 = oldPtr;
        runtime_wbMove((internal_abi_Type *)&DAT_00855ec0,oldPtr + (newLen - 1),&local_30);
        iVar9 = local_70;
        oldPtr = local_78;
        rVar12 = rVar4;
      }
      oldPtr[newLen - 1].name.str = local_30;
      *(undefined4 *)&oldPtr[newLen - 1].name.len = uStack_28;
      *(undefined4 *)((int)&oldPtr[newLen - 1].name.len + 4) = uStack_24;
      *(undefined4 *)&oldPtr[newLen - 1].value.typ_ = local_20;
      *(undefined4 *)((int)&oldPtr[newLen - 1].value.typ_ + 4) = uStack_1c;
      *(undefined4 *)&oldPtr[newLen - 1].value.ptr = local_18._0_4_;
      *(undefined4 *)((int)&oldPtr[newLen - 1].value.ptr + 4) = local_18._4_4_;
      *(undefined4 *)&oldPtr[newLen - 1].value.flag = (undefined4)uStack_10;
      *(undefined4 *)((int)&oldPtr[newLen - 1].value.flag + 4) = uStack_10._4_4_;
    }
    else {
      if (*(int *)(iVar1 + 0x20) == 0) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      value_00.ptr = in_stack_ffffffffffffff20._type;
      value_00.flag = (reflect_flag)in_stack_ffffffffffffff20.data;
      value_00.typ_ = in_stack_ffffffffffffff18;
      rVar4 = rVar12;
      text_template___state__setVar(s,in_stack_ffffffffffffff08,value_00);
      iVar9 = local_70;
      rVar12 = rVar4;
    }
    iVar3 = iVar3 + 1;
  } while( true );
}



void text_template___state__notAFunction
               (text_template_state *s,__text_template_parse_Node args,reflect_Value final)

{
  reflect_Value v;
  __interface___ args_00;
  byte extraout_AL;
  byte bVar1;
  int in_RCX;
  bool in_SIL;
  int unaff_R14;
  string in_stack_ffffffffffffffb0;
  interface___ *in_stack_ffffffffffffffc0;
  undefined in_stack_ffffffffffffffc8 [16];
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_RCX < 2) {
    v.flag = (reflect_flag)in_stack_ffffffffffffffc0;
    v.typ_ = (internal_abi_Type *)in_stack_ffffffffffffffb0.str;
    v.ptr = (void *)in_stack_ffffffffffffffb0.len;
    text_template_isMissing(v,in_SIL);
    bVar1 = extraout_AL ^ 1;
  }
  else {
    bVar1 = 1;
  }
  if (bVar1 != 0) {
    if (in_RCX == 0) {
                    // WARNING: Subroutine does not return
      runtime_panicIndex();
    }
    args_00.len = in_stack_ffffffffffffffc8._0_8_;
    args_00.cap = in_stack_ffffffffffffffc8._8_8_;
    args_00.array = in_stack_ffffffffffffffc0;
    text_template___state__errorf(s,in_stack_ffffffffffffffb0,args_00);
  }
  return;
}



// WARNING: Removing unreachable block (ram,0x0075f23a)
// WARNING: Removing unreachable block (ram,0x0075f350)

void text_template___state__evalCommand
               (text_template_state *s,reflect_Value dot,text_template_parse_CommandNode *cmd,
               reflect_Value final,reflect_Value ~r0)

{
  string format;
  string val;
  string format_00;
  interface___ e;
  reflect_Value dot_00;
  reflect_Value dot_01;
  __text_template_parse_Node args;
  reflect_Value dot_02;
  reflect_Value dot_03;
  __text_template_parse_Node args_00;
  reflect_Value ~r0_00;
  __interface___ args_01;
  __interface___ args_02;
  text_template_parse_Node cmd_00;
  reflect_Value receiver;
  __text_template_parse_Node args_03;
  reflect_Value final_00;
  reflect_Value value;
  __text_template_parse_Node args_04;
  reflect_Value final_01;
  __text_template_parse_Node args_05;
  text_template_parse_Node node;
  reflect_Value final_02;
  reflect_Value final_03;
  __string ident;
  reflect_Value final_04;
  reflect_Value ~r0_01;
  reflect_Value ~r0_02;
  __text_template_parse_Node args_06;
  reflect_Value ~r0_03;
  reflect_Value ~r0_04;
  text_template_state *extraout_RAX;
  text_template_state *ptVar1;
  text_template_state *extraout_RAX_00;
  internal_abi_Type *t_1;
  int iVar2;
  text_template_parse_NumberNode *ptVar3;
  internal_abi_Type *t;
  reflect_flag f_1;
  int in_RSI;
  text_template_parse_NumberNode *extraout_RSI;
  reflect_flag f;
  runtime_itab *in_R8;
  runtime_itab *extraout_R8;
  void *in_R9;
  void *extraout_R9;
  string *in_R10;
  string *extraout_R10;
  text_template_parse_NumberNode **extraout_R11;
  text_template_parse_NumberNode *constant;
  text_template_parse_NumberNode **extraout_R11_00;
  runtime_itab **pprVar4;
  int unaff_R14;
  internal_abi_Type *in_stack_ffffffffffffff08;
  void *in_stack_ffffffffffffff10;
  reflect_flag in_stack_ffffffffffffff18;
  undefined8 in_stack_ffffffffffffff20;
  int in_stack_ffffffffffffff28;
  reflect_flag in_stack_ffffffffffffff30;
  undefined8 in_stack_ffffffffffffff38;
  int in_stack_ffffffffffffff40;
  internal_abi_Type *in_stack_ffffffffffffff48;
  undefined in_stack_ffffffffffffff50 [16];
  internal_abi_Type *in_stack_ffffffffffffff60;
  undefined in_stack_ffffffffffffff68 [16];
  reflect_Value in_stack_ffffffffffffff78;
  undefined8 in_stack_ffffffffffffff90;
  undefined8 in_stack_ffffffffffffff98;
  runtime_itab *prVar5;
  reflect_flag rVar6;
  
  while (&stack0xffffffffffffff88 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  iVar2 = *(int *)(in_RSI + 0x20);
  if (iVar2 == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  pprVar4 = *(runtime_itab ***)(in_RSI + 0x18);
  prVar5 = *pprVar4;
  constant = (text_template_parse_NumberNode *)pprVar4[1];
  if (prVar5 != (runtime_itab *)0x0) {
    rVar6 = *(reflect_flag *)(in_RSI + 0x28);
    if (prVar5 == (runtime_itab *)go_itab__text_template_parse_FieldNode_text_template_parse_Node) {
      (s->node).tab =
           (runtime_itab *)go_itab__text_template_parse_FieldNode_text_template_parse_Node;
      ptVar1 = s;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_RSI;
        extraout_R11[1] = (text_template_parse_NumberNode *)(extraout_RAX->node).data;
        ptVar1 = extraout_RAX;
        in_R8 = extraout_R8;
        in_R9 = extraout_R9;
        in_R10 = extraout_R10;
        constant = extraout_RSI;
      }
      (ptVar1->node).data = constant;
      receiver.ptr = (void *)iVar2;
      receiver.typ_ = (internal_abi_Type *)pprVar4;
      receiver.flag = rVar6;
      node.data = in_R9;
      node.tab = in_R8;
      ident.len = in_stack_ffffffffffffff50._0_8_;
      ident.cap = in_stack_ffffffffffffff50._8_8_;
      ident.array = in_R10;
      args_06.len = in_stack_ffffffffffffff68._0_8_;
      args_06.cap = in_stack_ffffffffffffff68._8_8_;
      args_06.array = (text_template_parse_Node *)in_stack_ffffffffffffff60;
      ~r0_04.ptr = (void *)in_stack_ffffffffffffff98;
      ~r0_04.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff90;
      ~r0_04.flag = rVar6;
      text_template___state__evalFieldChain
                (s,*(reflect_Value *)&constant->IsInt,receiver,node,ident,args_06,
                 in_stack_ffffffffffffff78,~r0_04);
      return;
    }
    if (prVar5 == (runtime_itab *)go_itab__text_template_parse_ChainNode_text_template_parse_Node) {
      dot_00.ptr = in_R9;
      dot_00.typ_ = (internal_abi_Type *)in_R8;
      dot_00.flag = (reflect_flag)in_R10;
      args_03.len = in_stack_ffffffffffffff28;
      args_03.array = (text_template_parse_Node *)in_stack_ffffffffffffff20;
      args_03.cap = in_stack_ffffffffffffff30;
      final_02.ptr = (void *)in_stack_ffffffffffffff40;
      final_02.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff38;
      final_02.flag = (reflect_flag)in_stack_ffffffffffffff48;
      ~r0_01.flag = (reflect_flag)in_stack_ffffffffffffff60;
      ~r0_01.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff50._0_8_;
      ~r0_01.ptr = (void *)in_stack_ffffffffffffff50._8_8_;
      text_template___state__evalChainNode
                (s,dot_00,(text_template_parse_ChainNode *)cmd,args_03,final_02,~r0_01);
      return;
    }
    if (prVar5 == (runtime_itab *)
                  go_itab__text_template_parse_IdentifierNode_text_template_parse_Node) {
      dot_01.ptr = (void *)iVar2;
      dot_01.typ_ = (internal_abi_Type *)pprVar4;
      dot_01.flag = rVar6;
      cmd_00.data = in_R9;
      cmd_00.tab = in_R8;
      args_05.len = in_stack_ffffffffffffff38;
      args_05.array = (text_template_parse_Node *)in_R10;
      args_05.cap = in_stack_ffffffffffffff40;
      final_04.ptr = (void *)in_stack_ffffffffffffff50._0_8_;
      final_04.flag = in_stack_ffffffffffffff50._8_8_;
      final_04.typ_ = in_stack_ffffffffffffff48;
      ~r0_03.ptr = (void *)in_stack_ffffffffffffff68._0_8_;
      ~r0_03.flag = in_stack_ffffffffffffff68._8_8_;
      ~r0_03.typ_ = in_stack_ffffffffffffff60;
      text_template___state__evalFunction
                (s,dot_01,(text_template_parse_IdentifierNode *)cmd,cmd_00,args_05,final_04,~r0_03);
      return;
    }
    if (prVar5 == (runtime_itab *)go_itab__text_template_parse_PipeNode_text_template_parse_Node) {
      args.len = (int)in_stack_ffffffffffffff10;
      args.array = (text_template_parse_Node *)in_stack_ffffffffffffff08;
      args.cap = in_stack_ffffffffffffff18;
      final_00.ptr = (void *)in_stack_ffffffffffffff28;
      final_00.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff20;
      final_00.flag = in_stack_ffffffffffffff30;
      text_template___state__notAFunction(s,args,final_00);
      dot_02.ptr = in_stack_ffffffffffffff10;
      dot_02.typ_ = in_stack_ffffffffffffff08;
      dot_02.flag = in_stack_ffffffffffffff18;
      value.ptr = (void *)in_stack_ffffffffffffff28;
      value.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff20;
      value.flag = in_stack_ffffffffffffff30;
      text_template___state__evalPipeline(s,dot_02,(text_template_parse_PipeNode *)cmd,value);
      return;
    }
    if (prVar5 == (runtime_itab *)go_itab__text_template_parse_VariableNode_text_template_parse_Node
       ) {
      dot_03.ptr = in_R9;
      dot_03.typ_ = (internal_abi_Type *)in_R8;
      dot_03.flag = (reflect_flag)in_R10;
      args_04.len = in_stack_ffffffffffffff28;
      args_04.array = (text_template_parse_Node *)in_stack_ffffffffffffff20;
      args_04.cap = in_stack_ffffffffffffff30;
      final_03.ptr = (void *)in_stack_ffffffffffffff40;
      final_03.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff38;
      final_03.flag = (reflect_flag)in_stack_ffffffffffffff48;
      ~r0_02.flag = (reflect_flag)in_stack_ffffffffffffff60;
      ~r0_02.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff50._0_8_;
      ~r0_02.ptr = (void *)in_stack_ffffffffffffff50._8_8_;
      text_template___state__evalVariableNode
                (s,dot_03,(text_template_parse_VariableNode *)cmd,args_04,final_03,~r0_02);
      return;
    }
  }
  (s->node).tab = prVar5;
  ptVar1 = s;
  ptVar3 = constant;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11_00 = ptVar3;
    extraout_R11_00[1] = (text_template_parse_NumberNode *)(extraout_RAX_00->node).data;
    ptVar1 = extraout_RAX_00;
  }
  (ptVar1->node).data = ptVar3;
  args_00.len = (int)in_stack_ffffffffffffff10;
  args_00.array = (text_template_parse_Node *)in_stack_ffffffffffffff08;
  args_00.cap = in_stack_ffffffffffffff18;
  final_01.ptr = (void *)in_stack_ffffffffffffff28;
  final_01.typ_ = (internal_abi_Type *)in_stack_ffffffffffffff20;
  final_01.flag = in_stack_ffffffffffffff30;
  text_template___state__notAFunction(ptVar1,args_00,final_01);
  if (prVar5 != (runtime_itab *)0x0) {
    if (prVar5 == (runtime_itab *)go_itab__text_template_parse_BoolNode_text_template_parse_Node) {
      return;
    }
    if (prVar5 == (runtime_itab *)go_itab__text_template_parse_DotNode_text_template_parse_Node) {
      return;
    }
    if (prVar5 == (runtime_itab *)go_itab__text_template_parse_NilNode_text_template_parse_Node) {
      format.len = (int)in_stack_ffffffffffffff10;
      format.str = (uint8 *)in_stack_ffffffffffffff08;
      args_01.len = in_stack_ffffffffffffff20;
      args_01.array = (interface___ *)in_stack_ffffffffffffff18;
      args_01.cap = in_stack_ffffffffffffff28;
      text_template___state__errorf(s,format,args_01);
    }
    else {
      if (prVar5 == (runtime_itab *)go_itab__text_template_parse_NumberNode_text_template_parse_Node
         ) {
        ~r0_00.ptr = in_stack_ffffffffffffff10;
        ~r0_00.typ_ = in_stack_ffffffffffffff08;
        ~r0_00.flag = in_stack_ffffffffffffff18;
        text_template___state__idealConstant(s,constant,~r0_00);
        return;
      }
      if (prVar5 == (runtime_itab *)go_itab__text_template_parse_StringNode_text_template_parse_Node
         ) {
        val.len = (int)in_stack_ffffffffffffff10;
        val.str = (uint8 *)in_stack_ffffffffffffff08;
        runtime_convTstring(val,(void *)constant->Uint64);
        return;
      }
    }
  }
  format_00.len = (int)in_stack_ffffffffffffff10;
  format_00.str = (uint8 *)in_stack_ffffffffffffff08;
  args_02.len = in_stack_ffffffffffffff20;
  args_02.array = (interface___ *)in_stack_ffffffffffffff18;
  args_02.cap = in_stack_ffffffffffffff28;
  text_template___state__errorf(s,format_00,args_02);
  e.data = in_stack_ffffffffffffff10;
  e._type = in_stack_ffffffffffffff08;
                    // WARNING: Subroutine does not return
  runtime_gopanic(e);
}



// WARNING: Removing unreachable block (ram,0x0075f5cd)
// WARNING: Removing unreachable block (ram,0x0075f628)
// WARNING: Removing unreachable block (ram,0x0075f684)

void text_template___state__idealConstant
               (text_template_state *s,text_template_parse_NumberNode *constant,reflect_Value ~r0)

{
  uint8 *~r0_00;
  __interface___ args;
  byte extraout_AL;
  byte bVar1;
  text_template_state *extraout_RAX;
  int extraout_RAX_00;
  int n;
  void *in_RCX;
  void *extraout_RCX;
  internal_abi_Type *t;
  internal_abi_Type *t_1;
  internal_abi_Type *t_2;
  void *extraout_RCX_00;
  reflect_flag f;
  reflect_flag f_1;
  reflect_flag f_2;
  text_template_parse_NumberNode *extraout_RBX;
  text_template_parse_NumberNode **extraout_R11;
  int unaff_R14;
  bool bVar2;
  string in_stack_ffffffffffffff88;
  string in_stack_ffffffffffffff98;
  int in_stack_ffffffffffffffa8;
  
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    in_RCX = extraout_RCX_00;
  }
  (s->node).tab = (runtime_itab *)go_itab__text_template_parse_NumberNode_text_template_parse_Node;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RBX;
    extraout_R11[1] = (text_template_parse_NumberNode *)(extraout_RAX->node).data;
    s = extraout_RAX;
    in_RCX = extraout_RCX;
    constant = extraout_RBX;
  }
  (s->node).data = constant;
  if (constant->IsComplex == false) {
    if (constant->IsFloat == false) {
      bVar1 = 0;
    }
    else {
      text_template_isHexInt(in_stack_ffffffffffffff88,SUB81((constant->Text).str,0));
      bVar1 = extraout_AL ^ 1;
    }
    if (bVar1 == 0) {
      bVar2 = false;
    }
    else {
      ~r0_00 = (constant->Text).str;
      if (((constant->Text).len == 0) || (*~r0_00 != 0x27)) {
        strings_IndexAny(in_stack_ffffffffffffff88,in_stack_ffffffffffffff98,(int)~r0_00);
        bVar2 = -1 < extraout_RAX_00;
      }
      else {
        bVar2 = false;
      }
    }
    if (bVar2) {
      runtime_convT64((uint64)constant->Float64,constant);
      return;
    }
    if (constant->IsInt != false) {
      runtime_convT64(constant->Int64,constant);
      return;
    }
    if (constant->IsUint != false) {
      runtime_convTstring(in_stack_ffffffffffffff88,(constant->Text).str);
      args.cap = in_stack_ffffffffffffffa8;
      args.array = (interface___ *)in_stack_ffffffffffffff98.str;
      args.len = in_stack_ffffffffffffff98.len;
      text_template___state__errorf(s,in_stack_ffffffffffffff88,args);
    }
    return;
  }
  runtime_convTnoptr((internal_abi_Type *)&DAT_00807660,constant->Complex128,in_RCX);
  return;
}



void text_template_isHexInt(string s,bool ~r0)

{
  undefined7 in_register_00000001;
  char *~r0_00;
  int in_RBX;
  int unaff_R14;
  string in_stack_ffffffffffffffd8;
  string in_stack_ffffffffffffffe8;
  
  ~r0_00 = (char *)CONCAT71(in_register_00000001,~r0);
  while (&stack0x00000000 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (((2 < in_RBX) && (*~r0_00 == '0')) && ((~r0_00[1] == 'x' || (~r0_00[1] == 'X')))) {
    strings_IndexAny(in_stack_ffffffffffffffd8,in_stack_ffffffffffffffe8,(int)~r0_00);
  }
  return;
}



void text_template___state__evalChainNode
               (text_template_state *s,reflect_Value dot,text_template_parse_ChainNode *chain,
               __text_template_parse_Node args,reflect_Value final,reflect_Value ~r0)

{
  string format;
  string format_00;
  reflect_Value dot_00;
  __interface___ args_00;
  __interface___ args_01;
  reflect_Type typ;
  reflect_Value receiver;
  text_template_parse_Node n;
  reflect_Value ~r0_00;
  __string ident;
  reflect_Value ~r0_01;
  text_template_state *extraout_RAX;
  int iVar1;
  reflect_flag in_RCX;
  reflect_flag extraout_RCX;
  void *in_RSI;
  void *extraout_RSI;
  undefined8 in_RDI;
  undefined8 extraout_RDI;
  undefined8 in_R8;
  undefined8 extraout_R8;
  undefined8 in_R9;
  undefined8 extraout_R9;
  reflect_flag in_R10;
  reflect_flag extraout_R10;
  void **extraout_R11;
  int unaff_R14;
  uint8 *in_stack_ffffffffffffff40;
  int in_stack_ffffffffffffff48;
  reflect_flag in_stack_ffffffffffffff50;
  runtime_itab *in_stack_ffffffffffffff58;
  void *in_stack_ffffffffffffff60;
  runtime_itab *in_stack_ffffffffffffff68;
  void *in_stack_ffffffffffffff70;
  undefined8 in_stack_ffffffffffffff78;
  undefined8 in_stack_ffffffffffffff80;
  reflect_flag in_stack_ffffffffffffff88;
  int in_stack_ffffffffffffff90;
  __text_template_parse_Node in_stack_ffffffffffffff98;
  reflect_Value in_stack_ffffffffffffffb0;
  undefined8 in_stack_ffffffffffffffc8;
  
  while (&stack0xffffffffffffffc0 <= *(undefined **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  (s->node).tab = (runtime_itab *)go_itab__text_template_parse_ChainNode_text_template_parse_Node;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_gcWriteBarrier2();
    *extraout_R11 = extraout_RSI;
    extraout_R11[1] = (extraout_RAX->node).data;
    s = extraout_RAX;
    in_RCX = extraout_RCX;
    in_RSI = extraout_RSI;
    in_RDI = extraout_RDI;
    in_R8 = extraout_R8;
    in_R9 = extraout_R9;
    in_R10 = extraout_R10;
  }
  (s->node).data = in_RSI;
  if (*(int *)((int)in_RSI + 0x30) == 0) {
    format.len = in_stack_ffffffffffffff48;
    format.str = in_stack_ffffffffffffff40;
    args_00.len = (int)in_stack_ffffffffffffff58;
    args_00.array = (interface___ *)in_stack_ffffffffffffff50;
    args_00.cap = (int)in_stack_ffffffffffffff60;
    text_template___state__errorf(s,format,args_00);
  }
  iVar1 = (**(code **)(*(int *)((int)in_RSI + 0x18) + 0x30))(*(undefined8 *)((int)in_RSI + 0x20));
  if (iVar1 == 0xc) {
    format_00.len = in_stack_ffffffffffffff48;
    format_00.str = in_stack_ffffffffffffff40;
    args_01.len = (int)in_stack_ffffffffffffff58;
    args_01.array = (interface___ *)in_stack_ffffffffffffff50;
    args_01.cap = (int)in_stack_ffffffffffffff60;
    text_template___state__errorf(s,format_00,args_01);
