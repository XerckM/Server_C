    uVar6 = (prVar5->Inst).len + 1;
    local_1d0 = (prVar5->Inst).array;
    _local_18 = in_XMM15;
    if (uVar2 < uVar6) {
      ~r0_00.cap = in_stack_fffffffffffffd90;
      ~r0_00._0_16_ = (undefined  [16])in_stack_fffffffffffffd80;
      local_1c8 = prVar5;
      runtime_growslice(local_1d0,uVar6,uVar2,1,(internal_abi_Type *)&DAT_00878aa0,~r0_00);
      (local_1c8->Inst).cap = extraout_RCX;
      local_1d0 = extraout_RAX;
      prVar5 = local_1c8;
      uVar6 = extraout_RBX;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11 = extraout_RAX_00;
        extraout_R11[1] = (prVar5->Inst).array;
        local_1d0 = extraout_RAX_00;
        uVar6 = extraout_RBX_00;
      }
      (prVar5->Inst).array = local_1d0;
    }
    (prVar5->Inst).len = uVar6;
    local_1f0 = uVar6 * 5;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_wbMove((internal_abi_Type *)&DAT_00878aa0,local_1d0 + (uVar6 - 1),&local_30);
    }
    *(uint *)(&local_1d0[-1].Op + local_1f0 * 8) = CONCAT71(uStack_2f,local_30);
    *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0x20) = uStack_28;
    *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0x1c) = uStack_24;
    *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0x18) = uStack_20;
    *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0x14) = uStack_1c;
    *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0x10) = local_18._0_4_;
    *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0xc) = local_18._4_4_;
    *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -8) = uStack_10;
    *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -4) = uStack_c;
    return;
  case 3:
    local_1e8 = (re->Rune).len;
    if (local_1e8 == 0) {
      local_1e8 = (c->p->Inst).len;
      local_58 = 6;
      prVar5 = c->p;
      uVar2 = (prVar5->Inst).cap;
      uVar6 = (prVar5->Inst).len + 1;
      local_1d0 = (prVar5->Inst).array;
      uStack_57 = uStack_2f;
      uStack_50 = uStack_28;
      uStack_4c = uStack_24;
      uStack_48 = uStack_20;
      uStack_44 = uStack_1c;
      _local_40 = in_XMM15;
      if (uVar2 < uVar6) {
        ~r0_01.cap = in_stack_fffffffffffffd90;
        ~r0_01._0_16_ = (undefined  [16])in_stack_fffffffffffffd80;
        local_1c8 = prVar5;
        runtime_growslice(local_1d0,uVar6,uVar2,1,(internal_abi_Type *)&DAT_00878aa0,~r0_01);
        (local_1c8->Inst).cap = extraout_RCX_00;
        local_1d0 = extraout_RAX_01;
        prVar5 = local_1c8;
        uVar6 = extraout_RBX_01;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_00 = extraout_RAX_02;
          extraout_R11_00[1] = (prVar5->Inst).array;
          local_1d0 = extraout_RAX_02;
          uVar6 = extraout_RBX_02;
        }
        (prVar5->Inst).array = local_1d0;
      }
      (prVar5->Inst).len = uVar6;
      local_1f0 = uVar6 * 5;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_wbMove((internal_abi_Type *)&DAT_00878aa0,local_1d0 + (uVar6 - 1),&local_58);
      }
      *(uint *)(&local_1d0[-1].Op + local_1f0 * 8) = CONCAT71(uStack_57,local_58);
      *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0x20) = uStack_50;
      *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0x1c) = uStack_4c;
      *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0x18) = uStack_48;
      *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0x14) = uStack_44;
      *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0x10) = local_40._0_4_;
      *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0xc) = local_40._4_4_;
      *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -8) = uStack_38;
      *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -4) = uStack_34;
      return;
    }
    uVar2 = 0;
    uVar9 = 0;
    dVar3 = 0;
    while( true ) {
      uVar10 = dVar3;
      uVar4 = uVar9;
      if (local_1e8 <= (int)uVar2) {
        return;
      }
      uVar14 = (re->Rune).cap;
      uVar6 = uVar2 + 1;
      if (uVar14 < uVar6) break;
      if (uVar6 < uVar2) {
                    // WARNING: Subroutine does not return
        runtime_panicSliceB();
      }
      r_02.cap = in_stack_fffffffffffffd90;
      r_02._0_16_ = (undefined  [16])in_stack_fffffffffffffd80;
      ~r0_17.out.tail = (sdword)in_stack_fffffffffffffda0;
      ~r0_17._12_4_ = (sdword)((uint)in_stack_fffffffffffffda0 >> 0x20);
      ~r0_17.i = (sdword)in_stack_fffffffffffffd98;
      ~r0_17.out.head = (sdword)((uint)in_stack_fffffffffffffd98 >> 0x20);
      local_1f0 = uVar6;
      regexp_syntax___compiler__rune
                (c,r_02,(short)(re->Rune).array +
                        ((ushort)(uVar2 << 2) & (ushort)((int)-(uVar14 - uVar2) >> 0x3f)),~r0_17);
      bVar15 = uVar2 != 0;
      uVar2 = local_1f0;
      uVar9 = extraout_EAX_02;
      dVar3 = extraout_EBX_01;
      if (bVar15) {
        if ((uVar4 == 0) || (extraout_EAX_02 == 0)) {
          uVar9 = 0;
          dVar3 = 0;
        }
        else {
          prVar5 = c->p;
          while (uVar9 = uVar4, dVar3 = extraout_EBX_01, uVar10 != 0) {
            uVar6 = (uint)(uVar10 >> 1);
            if ((uint)(prVar5->Inst).len <= uVar6) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            prVar1 = (prVar5->Inst).array;
            if ((uVar10 & 1) == 0) {
              uVar10 = prVar1[uVar6].Out;
              prVar1[uVar6].Out = extraout_EAX_02;
            }
            else {
              uVar10 = prVar1[uVar6].Arg;
              prVar1[uVar6].Arg = extraout_EAX_02;
            }
          }
        }
      }
    }
                    // WARNING: Subroutine does not return
    runtime_panicSliceAcap();
  case 4:
    r.cap = in_stack_fffffffffffffd90;
    r._0_16_ = (undefined  [16])in_stack_fffffffffffffd80;
    ~r0_14.out.tail = (sdword)in_stack_fffffffffffffda0;
    ~r0_14._12_4_ = (sdword)((uint)in_stack_fffffffffffffda0 >> 0x20);
    ~r0_14.i = (sdword)in_stack_fffffffffffffd98;
    ~r0_14.out.head = (sdword)((uint)in_stack_fffffffffffffd98 >> 0x20);
    regexp_syntax___compiler__rune(c,r,(regexp_syntax_Flags)(re->Rune).array,~r0_14);
    return;
  case 5:
    r_00.cap = in_stack_fffffffffffffd90;
    r_00._0_16_ = (undefined  [16])in_stack_fffffffffffffd80;
    ~r0_15.out.tail = (sdword)in_stack_fffffffffffffda0;
    ~r0_15._12_4_ = (sdword)((uint)in_stack_fffffffffffffda0 >> 0x20);
    ~r0_15.i = (sdword)in_stack_fffffffffffffd98;
    ~r0_15.out.head = (sdword)((uint)in_stack_fffffffffffffd98 >> 0x20);
    regexp_syntax___compiler__rune
              (c,r_00,(regexp_syntax_Flags)regexp_syntax_anyRuneNotNL.array,~r0_15);
    return;
  case 6:
    r_01.cap = in_stack_fffffffffffffd90;
    r_01._0_16_ = (undefined  [16])in_stack_fffffffffffffd80;
    ~r0_16.out.tail = (sdword)in_stack_fffffffffffffda0;
    ~r0_16._12_4_ = (sdword)((uint)in_stack_fffffffffffffda0 >> 0x20);
    ~r0_16.i = (sdword)in_stack_fffffffffffffd98;
    ~r0_16.out.head = (sdword)((uint)in_stack_fffffffffffffd98 >> 0x20);
    regexp_syntax___compiler__rune(c,r_01,(regexp_syntax_Flags)regexp_syntax_anyRune.array,~r0_16);
    return;
  case 7:
    local_1e8 = (c->p->Inst).len;
    local_80 = 3;
    prVar5 = c->p;
    uVar2 = (prVar5->Inst).cap;
    uVar6 = (prVar5->Inst).len + 1;
    prVar1 = (prVar5->Inst).array;
    uStack_7f = uStack_2f;
    uStack_78 = uStack_28;
    uStack_74 = uStack_24;
    uStack_70 = uStack_20;
    uStack_6c = uStack_1c;
    _local_68 = in_XMM15;
    if (uVar2 < uVar6) {
      ~r0_02.cap = in_stack_fffffffffffffd90;
      ~r0_02._0_16_ = (undefined  [16])in_stack_fffffffffffffd80;
      local_1c8 = prVar5;
      runtime_growslice(prVar1,uVar6,uVar2,1,(internal_abi_Type *)&DAT_00878aa0,~r0_02);
      (local_1c8->Inst).cap = extraout_RCX_01;
      prVar1 = extraout_RAX_03;
      prVar5 = local_1c8;
      uVar6 = extraout_RBX_03;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_01 = extraout_RAX_04;
        extraout_R11_01[1] = (prVar5->Inst).array;
        prVar1 = extraout_RAX_04;
        uVar6 = extraout_RBX_04;
      }
      (prVar5->Inst).array = prVar1;
    }
    dVar3 = (dword)local_1e8;
    (prVar5->Inst).len = uVar6;
    uVar2 = uVar6 * 5;
    if (runtime_writeBarrier._0_4_ != 0) {
      local_1f0 = uVar6 * 5;
      local_1d0 = prVar1;
      runtime_wbMove((internal_abi_Type *)&DAT_00878aa0,prVar1 + (uVar6 - 1),&local_80);
      dVar3 = (dword)local_1e8;
      uVar2 = local_1f0;
      prVar1 = local_1d0;
    }
    *(uint *)(&prVar1[-1].Op + uVar2 * 8) = CONCAT71(uStack_7f,local_80);
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x20) = uStack_78;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x1c) = uStack_74;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x18) = uStack_70;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x14) = uStack_6c;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x10) = local_68._0_4_;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0xc) = local_68._4_4_;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -8) = uStack_60;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -4) = uStack_5c;
    if ((uint)dVar3 < (uint)(c->p->Inst).len) {
      (c->p->Inst).array[dVar3].Arg = 1;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  case 8:
    local_1e8 = (c->p->Inst).len;
    local_a8 = 3;
    prVar5 = c->p;
    uVar2 = (prVar5->Inst).cap;
    uVar6 = (prVar5->Inst).len + 1;
    prVar1 = (prVar5->Inst).array;
    uStack_a7 = uStack_2f;
    uStack_a0 = uStack_28;
    uStack_9c = uStack_24;
    uStack_98 = uStack_20;
    uStack_94 = uStack_1c;
    _local_90 = in_XMM15;
    if (uVar2 < uVar6) {
      ~r0_03.cap = in_stack_fffffffffffffd90;
      ~r0_03._0_16_ = (undefined  [16])in_stack_fffffffffffffd80;
      local_1c8 = prVar5;
      runtime_growslice(prVar1,uVar6,uVar2,1,(internal_abi_Type *)&DAT_00878aa0,~r0_03);
      (local_1c8->Inst).cap = extraout_RCX_02;
      prVar1 = extraout_RAX_05;
      prVar5 = local_1c8;
      uVar6 = extraout_RBX_05;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_02 = extraout_RAX_06;
        extraout_R11_02[1] = (prVar5->Inst).array;
        prVar1 = extraout_RAX_06;
        uVar6 = extraout_RBX_06;
      }
      (prVar5->Inst).array = prVar1;
    }
    dVar3 = (dword)local_1e8;
    (prVar5->Inst).len = uVar6;
    uVar2 = uVar6 * 5;
    if (runtime_writeBarrier._0_4_ != 0) {
      local_1f0 = uVar6 * 5;
      local_1d0 = prVar1;
      runtime_wbMove((internal_abi_Type *)&DAT_00878aa0,prVar1 + (uVar6 - 1),&local_a8);
      dVar3 = (dword)local_1e8;
      uVar2 = local_1f0;
      prVar1 = local_1d0;
    }
    *(uint *)(&prVar1[-1].Op + uVar2 * 8) = CONCAT71(uStack_a7,local_a8);
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x20) = uStack_a0;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x1c) = uStack_9c;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x18) = uStack_98;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x14) = uStack_94;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x10) = local_90._0_4_;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0xc) = local_90._4_4_;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -8) = uStack_88;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -4) = uStack_84;
    if ((uint)dVar3 < (uint)(c->p->Inst).len) {
      (c->p->Inst).array[dVar3].Arg = 2;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  case 9:
    local_1e8 = (c->p->Inst).len;
    local_d0 = 3;
    prVar5 = c->p;
    uVar2 = (prVar5->Inst).cap;
    uVar6 = (prVar5->Inst).len + 1;
    prVar1 = (prVar5->Inst).array;
    uStack_cf = uStack_2f;
    uStack_c8 = uStack_28;
    uStack_c4 = uStack_24;
    uStack_c0 = uStack_20;
    uStack_bc = uStack_1c;
    _local_b8 = in_XMM15;
    if (uVar2 < uVar6) {
      ~r0_04.cap = in_stack_fffffffffffffd90;
      ~r0_04._0_16_ = (undefined  [16])in_stack_fffffffffffffd80;
      local_1c8 = prVar5;
      runtime_growslice(prVar1,uVar6,uVar2,1,(internal_abi_Type *)&DAT_00878aa0,~r0_04);
      (local_1c8->Inst).cap = extraout_RCX_03;
      prVar1 = extraout_RAX_07;
      prVar5 = local_1c8;
      uVar6 = extraout_RBX_07;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_03 = extraout_RAX_08;
        extraout_R11_03[1] = (prVar5->Inst).array;
        prVar1 = extraout_RAX_08;
        uVar6 = extraout_RBX_08;
      }
      (prVar5->Inst).array = prVar1;
    }
    dVar3 = (dword)local_1e8;
    (prVar5->Inst).len = uVar6;
    uVar2 = uVar6 * 5;
    if (runtime_writeBarrier._0_4_ != 0) {
      local_1f0 = uVar6 * 5;
      local_1d0 = prVar1;
      runtime_wbMove((internal_abi_Type *)&DAT_00878aa0,prVar1 + (uVar6 - 1),&local_d0);
      dVar3 = (dword)local_1e8;
      uVar2 = local_1f0;
      prVar1 = local_1d0;
    }
    *(uint *)(&prVar1[-1].Op + uVar2 * 8) = CONCAT71(uStack_cf,local_d0);
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x20) = uStack_c8;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x1c) = uStack_c4;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x18) = uStack_c0;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x14) = uStack_bc;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x10) = local_b8._0_4_;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0xc) = local_b8._4_4_;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -8) = uStack_b0;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -4) = uStack_ac;
    if ((uint)dVar3 < (uint)(c->p->Inst).len) {
      (c->p->Inst).array[dVar3].Arg = 4;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  case 10:
    local_1e8 = (c->p->Inst).len;
    local_f8 = 3;
    prVar5 = c->p;
    uVar2 = (prVar5->Inst).cap;
    uVar6 = (prVar5->Inst).len + 1;
    prVar1 = (prVar5->Inst).array;
    uStack_f7 = uStack_2f;
    uStack_f0 = uStack_28;
    uStack_ec = uStack_24;
    uStack_e8 = uStack_20;
    uStack_e4 = uStack_1c;
    _local_e0 = in_XMM15;
    if (uVar2 < uVar6) {
      ~r0_05.cap = in_stack_fffffffffffffd90;
      ~r0_05._0_16_ = (undefined  [16])in_stack_fffffffffffffd80;
      local_1c8 = prVar5;
      runtime_growslice(prVar1,uVar6,uVar2,1,(internal_abi_Type *)&DAT_00878aa0,~r0_05);
      (local_1c8->Inst).cap = extraout_RCX_04;
      prVar1 = extraout_RAX_09;
      prVar5 = local_1c8;
      uVar6 = extraout_RBX_09;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_04 = extraout_RAX_10;
        extraout_R11_04[1] = (prVar5->Inst).array;
        prVar1 = extraout_RAX_10;
        uVar6 = extraout_RBX_10;
      }
      (prVar5->Inst).array = prVar1;
    }
    dVar3 = (dword)local_1e8;
    (prVar5->Inst).len = uVar6;
    uVar2 = uVar6 * 5;
    if (runtime_writeBarrier._0_4_ != 0) {
      local_1f0 = uVar6 * 5;
      local_1d0 = prVar1;
      runtime_wbMove((internal_abi_Type *)&DAT_00878aa0,prVar1 + (uVar6 - 1),&local_f8);
      dVar3 = (dword)local_1e8;
      uVar2 = local_1f0;
      prVar1 = local_1d0;
    }
    *(uint *)(&prVar1[-1].Op + uVar2 * 8) = CONCAT71(uStack_f7,local_f8);
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x20) = uStack_f0;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x1c) = uStack_ec;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x18) = uStack_e8;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x14) = uStack_e4;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x10) = local_e0._0_4_;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0xc) = local_e0._4_4_;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -8) = uStack_d8;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -4) = uStack_d4;
    if ((uint)dVar3 < (uint)(c->p->Inst).len) {
      (c->p->Inst).array[dVar3].Arg = 8;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  case 0xb:
    local_1e8 = (c->p->Inst).len;
    local_120 = 3;
    prVar5 = c->p;
    uVar2 = (prVar5->Inst).cap;
    uVar6 = (prVar5->Inst).len + 1;
    prVar1 = (prVar5->Inst).array;
    uStack_11f = uStack_2f;
    uStack_118 = uStack_28;
    uStack_114 = uStack_24;
    uStack_110 = uStack_20;
    uStack_10c = uStack_1c;
    _local_108 = in_XMM15;
    if (uVar2 < uVar6) {
      ~r0_06.cap = in_stack_fffffffffffffd90;
      ~r0_06._0_16_ = (undefined  [16])in_stack_fffffffffffffd80;
      local_1c8 = prVar5;
      runtime_growslice(prVar1,uVar6,uVar2,1,(internal_abi_Type *)&DAT_00878aa0,~r0_06);
      (local_1c8->Inst).cap = extraout_RCX_05;
      prVar1 = extraout_RAX_11;
      prVar5 = local_1c8;
      uVar6 = extraout_RBX_11;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_05 = extraout_RAX_12;
        extraout_R11_05[1] = (prVar5->Inst).array;
        prVar1 = extraout_RAX_12;
        uVar6 = extraout_RBX_12;
      }
      (prVar5->Inst).array = prVar1;
    }
    dVar3 = (dword)local_1e8;
    (prVar5->Inst).len = uVar6;
    uVar2 = uVar6 * 5;
    if (runtime_writeBarrier._0_4_ != 0) {
      local_1f0 = uVar6 * 5;
      local_1d0 = prVar1;
      runtime_wbMove((internal_abi_Type *)&DAT_00878aa0,prVar1 + (uVar6 - 1),&local_120);
      dVar3 = (dword)local_1e8;
      uVar2 = local_1f0;
      prVar1 = local_1d0;
    }
    *(uint *)(&prVar1[-1].Op + uVar2 * 8) = CONCAT71(uStack_11f,local_120);
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x20) = uStack_118;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x1c) = uStack_114;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x18) = uStack_110;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x14) = uStack_10c;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x10) = local_108._0_4_;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0xc) = local_108._4_4_;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -8) = uStack_100;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -4) = uStack_fc;
    if ((uint)dVar3 < (uint)(c->p->Inst).len) {
      (c->p->Inst).array[dVar3].Arg = 0x10;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  case 0xc:
    local_1e8 = (c->p->Inst).len;
    local_148 = 3;
    prVar5 = c->p;
    uVar2 = (prVar5->Inst).cap;
    uVar6 = (prVar5->Inst).len + 1;
    prVar1 = (prVar5->Inst).array;
    uStack_147 = uStack_2f;
    uStack_140 = uStack_28;
    uStack_13c = uStack_24;
    uStack_138 = uStack_20;
    uStack_134 = uStack_1c;
    _local_130 = in_XMM15;
    if (uVar2 < uVar6) {
      ~r0_07.cap = in_stack_fffffffffffffd90;
      ~r0_07._0_16_ = (undefined  [16])in_stack_fffffffffffffd80;
      local_1c8 = prVar5;
      runtime_growslice(prVar1,uVar6,uVar2,1,(internal_abi_Type *)&DAT_00878aa0,~r0_07);
      (local_1c8->Inst).cap = extraout_RCX_06;
      prVar1 = extraout_RAX_13;
      prVar5 = local_1c8;
      uVar6 = extraout_RBX_13;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_gcWriteBarrier2();
        *extraout_R11_06 = extraout_RAX_14;
        extraout_R11_06[1] = (prVar5->Inst).array;
        prVar1 = extraout_RAX_14;
        uVar6 = extraout_RBX_14;
      }
      (prVar5->Inst).array = prVar1;
    }
    dVar3 = (dword)local_1e8;
    (prVar5->Inst).len = uVar6;
    uVar2 = uVar6 * 5;
    if (runtime_writeBarrier._0_4_ != 0) {
      local_1f0 = uVar6 * 5;
      local_1d0 = prVar1;
      runtime_wbMove((internal_abi_Type *)&DAT_00878aa0,prVar1 + (uVar6 - 1),&local_148);
      dVar3 = (dword)local_1e8;
      uVar2 = local_1f0;
      prVar1 = local_1d0;
    }
    *(uint *)(&prVar1[-1].Op + uVar2 * 8) = CONCAT71(uStack_147,local_148);
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x20) = uStack_140;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x1c) = uStack_13c;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x18) = uStack_138;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x14) = uStack_134;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0x10) = local_130._0_4_;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -0xc) = local_130._4_4_;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -8) = uStack_128;
    *(undefined4 *)((int)prVar1 + uVar2 * 8 + -4) = uStack_124;
    if ((uint)dVar3 < (uint)(c->p->Inst).len) {
      (c->p->Inst).array[dVar3].Arg = 0x20;
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  case 0xd:
    break;
  case 0xe:
    if ((re->Sub).len != 0) {
      regexp_syntax___compiler__compile(c,*(re->Sub).array,in_stack_fffffffffffffd80);
      ~r0_11.out.tail = (sdword)in_stack_fffffffffffffd98;
      ~r0_11._12_4_ = (sdword)((uint)in_stack_fffffffffffffd98 >> 0x20);
      ~r0_11.i = (sdword)in_stack_fffffffffffffd90;
      ~r0_11.out.head = (sdword)((uint)in_stack_fffffffffffffd90 >> 0x20);
      regexp_syntax___compiler__star(c,in_stack_fffffffffffffd80,nongreedy,~r0_11);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  case 0xf:
    if ((re->Sub).len != 0) {
      regexp_syntax___compiler__compile(c,*(re->Sub).array,in_stack_fffffffffffffd80);
      ~r0_12.out.tail = (sdword)in_stack_fffffffffffffd98;
      ~r0_12._12_4_ = (sdword)((uint)in_stack_fffffffffffffd98 >> 0x20);
      ~r0_12.i = (sdword)in_stack_fffffffffffffd90;
      ~r0_12.out.head = (sdword)((uint)in_stack_fffffffffffffd90 >> 0x20);
      regexp_syntax___compiler__loop(c,in_stack_fffffffffffffd80,nongreedy_00,~r0_12);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  case 0x10:
    if ((re->Sub).len != 0) {
      regexp_syntax___compiler__compile(c,*(re->Sub).array,in_stack_fffffffffffffd80);
      ~r0_13.out.tail = (sdword)in_stack_fffffffffffffd98;
      ~r0_13._12_4_ = (sdword)((uint)in_stack_fffffffffffffd98 >> 0x20);
      ~r0_13.i = (sdword)in_stack_fffffffffffffd90;
      ~r0_13.out.head = (sdword)((uint)in_stack_fffffffffffffd90 >> 0x20);
      regexp_syntax___compiler__quest(c,in_stack_fffffffffffffd80,nongreedy_01,~r0_13);
      return;
    }
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  default:
                    // WARNING: Subroutine does not return
    runtime_gopanic((interface___)in_stack_fffffffffffffd80);
  case 0x12:
    local_1e8 = (re->Sub).len;
    if (local_1e8 == 0) {
      local_1e8 = (c->p->Inst).len;
      local_1c0 = 6;
      prVar5 = c->p;
      uVar2 = (prVar5->Inst).cap;
      uVar6 = (prVar5->Inst).len + 1;
      local_1d0 = (prVar5->Inst).array;
      uStack_1bf = uStack_2f;
      uStack_1b8 = uStack_28;
      uStack_1b4 = uStack_24;
      uStack_1b0 = uStack_20;
      uStack_1ac = uStack_1c;
      _local_1a8 = in_XMM15;
      if (uVar2 < uVar6) {
        ~r0_10.cap = in_stack_fffffffffffffd90;
        ~r0_10._0_16_ = (undefined  [16])in_stack_fffffffffffffd80;
        local_1c8 = prVar5;
        runtime_growslice(local_1d0,uVar6,uVar2,1,(internal_abi_Type *)&DAT_00878aa0,~r0_10);
        (local_1c8->Inst).cap = extraout_RCX_09;
        local_1d0 = extraout_RAX_19;
        prVar5 = local_1c8;
        uVar6 = extraout_RBX_20;
        if (runtime_writeBarrier._0_4_ != 0) {
          runtime_gcWriteBarrier2();
          *extraout_R11_09 = extraout_RAX_20;
          extraout_R11_09[1] = (prVar5->Inst).array;
          local_1d0 = extraout_RAX_20;
          uVar6 = extraout_RBX_21;
        }
        (prVar5->Inst).array = local_1d0;
      }
      (prVar5->Inst).len = uVar6;
      local_1f0 = uVar6 * 5;
      if (runtime_writeBarrier._0_4_ != 0) {
        runtime_wbMove((internal_abi_Type *)&DAT_00878aa0,local_1d0 + (uVar6 - 1),&local_1c0);
      }
      *(uint *)(&local_1d0[-1].Op + local_1f0 * 8) = CONCAT71(uStack_1bf,local_1c0);
      *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0x20) = uStack_1b8;
      *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0x1c) = uStack_1b4;
      *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0x18) = uStack_1b0;
      *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0x14) = uStack_1ac;
      *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0x10) = local_1a8._0_4_;
      *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -0xc) = local_1a8._4_4_;
      *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -8) = uStack_1a0;
      *(undefined4 *)((int)local_1d0 + local_1f0 * 8 + -4) = uStack_19c;
      return;
    }
    local_1d8 = (re->Sub).array;
    iVar13 = 0;
    sVar8 = 0;
    uVar12 = 0;
    uVar9 = 0;
    do {
      if (local_1e8 <= iVar13) {
        return;
      }
      if (iVar13 == 0) {
        regexp_syntax___compiler__compile(c,local_1d8[iVar13],in_stack_fffffffffffffd80);
        uVar12 = extraout_RDI;
        uVar9 = extraout_EBX;
        sVar8 = extraout_EAX_00;
      }
      else {
        cVar11 = (char)uVar12;
        regexp_syntax___compiler__compile(c,local_1d8[iVar13],in_stack_fffffffffffffd80);
        if ((sVar8 == 0) || (extraout_EAX_01 == 0)) {
          uVar9 = 0;
          sVar8 = 0;
          uVar12 = 0;
        }
        else {
          prVar5 = c->p;
          while (uVar9 != 0) {
            uVar2 = (uint)(uVar9 >> 1);
            if ((uint)(prVar5->Inst).len <= uVar2) {
                    // WARNING: Subroutine does not return
              runtime_panicIndex();
            }
            prVar1 = (prVar5->Inst).array;
            if ((uVar9 & 1) == 0) {
              uVar9 = prVar1[uVar2].Out;
              prVar1[uVar2].Out = extraout_EAX_01;
            }
            else {
              uVar9 = prVar1[uVar2].Arg;
              prVar1[uVar2].Arg = extraout_EAX_01;
            }
          }
          uVar12 = extraout_RDI_00;
          uVar9 = extraout_EBX_00;
          if (cVar11 == '\0') {
            uVar12 = 0;
          }
        }
      }
      iVar13 = iVar13 + 1;
    } while( true );
  case 0x13:
    local_1e8 = (re->Sub).len;
    local_1e0 = (re->Sub).array;
    for (local_1f0 = 0; (int)local_1f0 < local_1e8; local_1f0 = local_1f0 + 1) {
      regexp_syntax___compiler__compile(c,local_1e0[local_1f0],in_stack_fffffffffffffd80);
      f2.out.tail = (sdword)in_stack_fffffffffffffd98;
      f2._12_4_ = (sdword)((uint)in_stack_fffffffffffffd98 >> 0x20);
      f2.i = (sdword)in_stack_fffffffffffffd90;
      f2.out.head = (sdword)((uint)in_stack_fffffffffffffd90 >> 0x20);
      ~r0_18.out.tail = (sdword)in_stack_fffffffffffffda8;
      ~r0_18._12_4_ = (sdword)((uint)in_stack_fffffffffffffda8 >> 0x20);
      ~r0_18.i = (sdword)in_stack_fffffffffffffda0;
      ~r0_18.out.head = (sdword)((uint)in_stack_fffffffffffffda0 >> 0x20);
      regexp_syntax___compiler__alt(c,in_stack_fffffffffffffd80,f2,~r0_18);
    }
    return;
  }
  local_1e8 = re->Cap;
  local_1f0 = (c->p->Inst).len;
  local_170 = 2;
  prVar5 = c->p;
  uVar2 = (prVar5->Inst).cap;
  uVar6 = (prVar5->Inst).len + 1;
  prVar1 = (prVar5->Inst).array;
  uStack_16f = uStack_2f;
  uStack_168 = uStack_28;
  uStack_164 = uStack_24;
  uStack_160 = uStack_20;
  uStack_15c = uStack_1c;
  _local_158 = in_XMM15;
  if (uVar2 < uVar6) {
    ~r0_08.cap = in_stack_fffffffffffffd90;
    ~r0_08._0_16_ = (undefined  [16])in_stack_fffffffffffffd80;
    local_1c8 = prVar5;
    runtime_growslice(prVar1,uVar6,uVar2,1,(internal_abi_Type *)&DAT_00878aa0,~r0_08);
    (local_1c8->Inst).cap = extraout_RCX_07;
    prVar1 = extraout_RAX_15;
    prVar5 = local_1c8;
    uVar6 = extraout_RBX_15;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_07 = extraout_RAX_16;
      extraout_R11_07[1] = (prVar5->Inst).array;
      prVar1 = extraout_RAX_16;
      uVar6 = extraout_RBX_16;
    }
    (prVar5->Inst).array = prVar1;
  }
  dVar3 = (dword)local_1f0;
  (prVar5->Inst).len = uVar6;
  iVar13 = uVar6 * 5;
  if (runtime_writeBarrier._0_4_ != 0) {
    local_1f8 = uVar6 * 5;
    local_1d0 = prVar1;
    runtime_wbMove((internal_abi_Type *)&DAT_00878aa0,prVar1 + (uVar6 - 1),&local_170);
    dVar3 = (dword)local_1f0;
    iVar13 = local_1f8;
    prVar1 = local_1d0;
  }
  *(uint *)(&prVar1[-1].Op + iVar13 * 8) = CONCAT71(uStack_16f,local_170);
  *(undefined4 *)((int)prVar1 + iVar13 * 8 + -0x20) = uStack_168;
  *(undefined4 *)((int)prVar1 + iVar13 * 8 + -0x1c) = uStack_164;
  *(undefined4 *)((int)prVar1 + iVar13 * 8 + -0x18) = uStack_160;
  *(undefined4 *)((int)prVar1 + iVar13 * 8 + -0x14) = uStack_15c;
  *(undefined4 *)((int)prVar1 + iVar13 * 8 + -0x10) = local_158._0_4_;
  *(undefined4 *)((int)prVar1 + iVar13 * 8 + -0xc) = local_158._4_4_;
  *(undefined4 *)((int)prVar1 + iVar13 * 8 + -8) = uStack_150;
  *(undefined4 *)((int)prVar1 + iVar13 * 8 + -4) = uStack_14c;
  if ((uint)(c->p->Inst).len <= (uint)dVar3) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  (c->p->Inst).array[dVar3].Arg = (uint32)(local_1e8 << 1);
  iVar13 = (local_1e8 << 1 & 0xffffffffU) + 1;
  if (c->p->NumCap < iVar13) {
    c->p->NumCap = iVar13;
  }
  if ((re->Sub).len == 0) {
                    // WARNING: Subroutine does not return
    runtime_panicIndex();
  }
  regexp_syntax___compiler__compile(c,*(re->Sub).array,in_stack_fffffffffffffd80);
  local_1e8 = re->Cap;
  local_1f8 = (c->p->Inst).len;
  uStack_197 = in_XMM15._1_7_;
  uStack_190 = in_XMM15._0_4_;
  uStack_18c = in_XMM15._4_4_;
  uStack_188 = in_XMM15._8_4_;
  uStack_184 = in_XMM15._12_4_;
  local_198 = 2;
  prVar5 = c->p;
  uVar2 = (prVar5->Inst).cap;
  uVar6 = (prVar5->Inst).len + 1;
  prVar1 = (prVar5->Inst).array;
  uVar14 = extraout_RBX_17;
  _local_180 = in_XMM15;
  if (uVar2 < uVar6) {
    ~r0_09.cap = in_stack_fffffffffffffd90;
    ~r0_09._0_16_ = (undefined  [16])in_stack_fffffffffffffd80;
    local_1c8 = prVar5;
    runtime_growslice(prVar1,uVar6,uVar2,1,(internal_abi_Type *)&DAT_00878aa0,~r0_09);
    (local_1c8->Inst).cap = extraout_RCX_08;
    prVar1 = extraout_RAX_17;
    prVar5 = local_1c8;
    uVar6 = extraout_RBX_18;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11_08 = extraout_RAX_18;
      extraout_R11_08[1] = (prVar5->Inst).array;
      prVar1 = extraout_RAX_18;
      uVar6 = extraout_RBX_19;
    }
    (prVar5->Inst).array = prVar1;
    uVar14 = extraout_RBX_17 & 0xffffffff;
  }
  dVar3 = (dword)local_1f8;
  (prVar5->Inst).len = uVar6;
  iVar13 = uVar6 * 5;
  if (runtime_writeBarrier._0_4_ != 0) {
    local_200 = uVar6 * 5;
    local_1d0 = prVar1;
    runtime_wbMove((internal_abi_Type *)&DAT_00878aa0,prVar1 + (uVar6 - 1),&local_198);
    dVar3 = (dword)local_1f8;
    uVar14 = extraout_RBX_17 & 0xffffffff;
    iVar13 = local_200;
    prVar1 = local_1d0;
  }
  *(uint *)(&prVar1[-1].Op + iVar13 * 8) = CONCAT71(uStack_197,local_198);
  *(undefined4 *)((int)prVar1 + iVar13 * 8 + -0x20) = uStack_190;
  *(undefined4 *)((int)prVar1 + iVar13 * 8 + -0x1c) = uStack_18c;
  *(undefined4 *)((int)prVar1 + iVar13 * 8 + -0x18) = uStack_188;
  *(undefined4 *)((int)prVar1 + iVar13 * 8 + -0x14) = uStack_184;
  *(undefined4 *)((int)prVar1 + iVar13 * 8 + -0x10) = local_180._0_4_;
  *(undefined4 *)((int)prVar1 + iVar13 * 8 + -0xc) = local_180._4_4_;
  *(undefined4 *)((int)prVar1 + iVar13 * 8 + -8) = uStack_178;
  *(undefined4 *)((int)prVar1 + iVar13 * 8 + -4) = uStack_174;
  if ((uint)dVar3 < (uint)(c->p->Inst).len) {
    dVar7 = (dword)(local_1e8 << 1) | 1;
    (c->p->Inst).array[dVar3].Arg = dVar7;
    iVar13 = dVar7 + 1;
    if (c->p->NumCap < iVar13) {
      c->p->NumCap = iVar13;
    }
    sVar8 = (sdword)local_1f0;
    if ((sVar8 == 0) || (extraout_EAX == 0)) {
      sVar8 = 0;
      uVar14 = 0;
    }
    else {
      uVar9 = sVar8 << 1;
      prVar5 = c->p;
      while (uVar9 != 0) {
        uVar2 = (uint)(uVar9 >> 1);
        if ((uint)(prVar5->Inst).len <= uVar2) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        prVar1 = (prVar5->Inst).array;
        if ((uVar9 & 1) == 0) {
          uVar9 = prVar1[uVar2].Out;
          prVar1[uVar2].Out = extraout_EAX;
        }
        else {
          uVar9 = prVar1[uVar2].Arg;
          prVar1[uVar2].Arg = extraout_EAX;
        }
      }
    }
    if ((sVar8 != 0) && (dVar3 != 0)) {
      prVar5 = c->p;
      while ((sdword)uVar14 != 0) {
        uVar2 = uVar14 >> 1 & 0x7fffffff;
        if ((uint)(prVar5->Inst).len <= uVar2) {
                    // WARNING: Subroutine does not return
          runtime_panicIndex();
        }
        prVar1 = (prVar5->Inst).array;
        if ((uVar14 & 1) == 0) {
          uVar9 = prVar1[uVar2].Out;
          prVar1[uVar2].Out = dVar3;
        }
        else {
          uVar9 = prVar1[uVar2].Arg;
          prVar1[uVar2].Arg = dVar3;
        }
        uVar14 = (uint)uVar9;
      }
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void regexp_syntax___compiler__alt
               (regexp_syntax_compiler *c,regexp_syntax_frag f1,regexp_syntax_frag f2,
               regexp_syntax_frag ~r0)

{
  regexp_syntax_Inst *prVar1;
  uint oldCap;
  regexp_syntax_Inst *extraout_RAX;
  regexp_syntax_Inst *extraout_RAX_00;
  regexp_syntax_Inst *prVar2;
  uint uVar3;
  sdword in_ECX;
  int extraout_RCX;
  regexp_syntax_Prog *prVar4;
  uint32 in_EBX;
  uint extraout_RBX;
  uint extraout_RBX_00;
  dword in_EDI;
  uint32 in_R8D;
  uint32 in_R9D;
  regexp_syntax_Inst **extraout_R11;
  int unaff_R14;
  uint newLen;
  undefined in_XMM15 [16];
  runtime_slice in_stack_ffffffffffffff50;
  undefined8 local_30;
  uint32 uStack_28;
  undefined4 uStack_24;
  undefined4 uStack_20;
  undefined4 uStack_1c;
  undefined local_18 [8];
  undefined4 uStack_10;
  undefined4 uStack_c;
  
  while (&local_30 <= *(undefined8 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
  }
  if (in_EBX == 0) {
    return;
  }
  if (in_R8D == 0) {
    return;
  }
  uVar3 = (c->p->Inst).len;
  local_30 = in_XMM15._0_8_;
  uStack_28 = in_XMM15._0_4_;
  uStack_24 = in_XMM15._4_4_;
  uStack_20 = in_XMM15._8_4_;
  uStack_1c = in_XMM15._12_4_;
  prVar4 = c->p;
  oldCap = (prVar4->Inst).cap;
  newLen = (prVar4->Inst).len + 1;
  prVar2 = (prVar4->Inst).array;
  _local_18 = in_XMM15;
  if (oldCap < newLen) {
    runtime_growslice(prVar2,newLen,oldCap,1,(internal_abi_Type *)&DAT_00878aa0,
                      in_stack_ffffffffffffff50);
    (prVar4->Inst).cap = extraout_RCX;
    prVar2 = extraout_RAX;
    newLen = extraout_RBX;
    if (runtime_writeBarrier._0_4_ != 0) {
      runtime_gcWriteBarrier2();
      *extraout_R11 = extraout_RAX_00;
      extraout_R11[1] = (prVar4->Inst).array;
      prVar2 = extraout_RAX_00;
      newLen = extraout_RBX_00;
    }
    (prVar4->Inst).array = prVar2;
  }
  (prVar4->Inst).len = newLen;
  if (runtime_writeBarrier._0_4_ != 0) {
    runtime_wbMove((internal_abi_Type *)&DAT_00878aa0,prVar2 + (newLen - 1),&local_30);
  }
  uVar3 = uVar3 & 0xffffffff;
  prVar1 = prVar2 + (newLen - 1);
  prVar1->Op = (undefined)local_30;
  *(undefined3 *)&prVar1->field_0x1 = local_30._1_3_;
  prVar1->Out = local_30._4_4_;
  prVar2[newLen - 1].Arg = uStack_28;
  *(undefined4 *)&prVar2[newLen - 1].field_0xc = uStack_24;
  *(undefined4 *)&prVar2[newLen - 1].Rune.array = uStack_20;
  *(undefined4 *)((int)&prVar2[newLen - 1].Rune.array + 4) = uStack_1c;
  *(undefined4 *)&prVar2[newLen - 1].Rune.len = local_18._0_4_;
  *(undefined4 *)((int)&prVar2[newLen - 1].Rune.len + 4) = local_18._4_4_;
  *(undefined4 *)&prVar2[newLen - 1].Rune.cap = uStack_10;
  *(undefined4 *)((int)&prVar2[newLen - 1].Rune.cap + 4) = uStack_c;
  if (uVar3 < (uint)(c->p->Inst).len) {
    prVar2 = (c->p->Inst).array;
    prVar2[uVar3].Out = in_EBX;
    prVar2[uVar3].Arg = in_R8D;
    if ((in_ECX != 0) && (in_R9D != 0)) {
      uVar3 = (uint)(in_EDI >> 1);
      if ((uint)(c->p->Inst).len <= uVar3) {
                    // WARNING: Subroutine does not return
        runtime_panicIndex();
      }
      prVar2 = (c->p->Inst).array;
      if ((in_EDI & 1) == 0) {
        prVar2[uVar3].Out = in_R9D;
      }
      else {
        prVar2[uVar3].Arg = in_R9D;
      }
    }
    return;
  }
                    // WARNING: Subroutine does not return
  runtime_panicIndex();
}



void regexp_syntax___compiler__quest
               (regexp_syntax_compiler *c,regexp_syntax_frag f1,bool nongreedy,
               regexp_syntax_frag ~r0)

{
  regexp_syntax_Inst *prVar1;
  uint oldCap;
  regexp_syntax_Inst *extraout_RAX;
  regexp_syntax_Inst *extraout_RAX_00;
  regexp_syntax_Inst *prVar2;
  uint uVar3;
  uint32 in_ECX;
  int extraout_RCX;
  sdword sVar4;
  dword dVar5;
  regexp_syntax_Prog *prVar6;
  undefined7 in_register_00000019;
  uint extraout_RBX;
  uint extraout_RBX_00;
  char in_R8B;
  uint uVar7;
  uint newLen;
  regexp_syntax_Inst **extraout_R11;
  int unaff_R14;
  undefined in_XMM15 [16];
  runtime_slice in_stack_ffffffffffffff60;
  undefined8 local_30;
  uint32 uStack_28;
  undefined4 uStack_24;
  undefined4 local_20;
  undefined4 uStack_1c;
  undefined local_18 [8];
  undefined4 uStack_10;
  undefined4 uStack_c;
  
  uVar3 = CONCAT71(in_register_00000019,nongreedy);
  while (&local_20 <= *(undefined4 **)(unaff_R14 + 0x10)) {
    runtime_morestack_noctxt();
    uVar3 = uVar3 & 0xffffffff;
